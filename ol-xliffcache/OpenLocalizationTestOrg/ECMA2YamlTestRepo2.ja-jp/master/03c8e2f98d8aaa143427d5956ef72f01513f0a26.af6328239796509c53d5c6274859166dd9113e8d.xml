{"nodes":[{"pos":[1354,1441],"content":"Represents a configuration element that defines security settings at the service level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a configuration element that defines security settings at the service level.","pos":[0,87]}]},{"pos":[5407,5530],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> class."},{"pos":[6249,6297],"content":"Gets a collection of authorization policy types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of authorization policy types.","pos":[0,48]}]},{"pos":[6309,6505],"content":"Configuring a set of authorization policy implementations enables transformation of one set of input claims into another set of claims. Access control can be granted or denied based on the claims.","needQuote":true,"needEscape":true,"nodes":[{"content":"Configuring a set of authorization policy implementations enables transformation of one set of input claims into another set of claims. Access control can be granted or denied based on the claims.","pos":[0,196],"nodes":[{"content":"Configuring a set of authorization policy implementations enables transformation of one set of input claims into another set of claims.","pos":[0,135]},{"content":"Access control can be granted or denied based on the claims.","pos":[136,196]}]}]},{"pos":[6760,6916],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a collection of authorization policy types.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\"></xref> that contains a collection of authorization policy types."},{"pos":[7525,7578],"content":"Gets the type of this behavior configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of this behavior configuration element.","pos":[0,53]}]},{"pos":[7700,7725],"content":"The type of the behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the behavior.","pos":[0,25]}]},{"pos":[8521,8607],"content":"Copies the content of a specified configuration element to this configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the content of a specified configuration element to this configuration element.","pos":[0,86]}]},{"pos":[8857,8896],"content":"The configuration element to be copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration element to be copied.","pos":[0,39]}]},{"pos":[9639,9651],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10358,10467],"content":"Gets or sets a Boolean value that specifies whether all the operations in the service impersonate the caller.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that specifies whether all the operations in the service impersonate the caller.","pos":[0,109]}]},{"pos":[10479,10630],"content":"When a specific service operation impersonates the caller, the thread context is switched to the caller context before executing the specified service.","needQuote":true,"needEscape":true,"nodes":[{"content":"When a specific service operation impersonates the caller, the thread context is switched to the caller context before executing the specified service.","pos":[0,151]}]},{"pos":[10772,11047],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all the operations in the service impersonate the caller; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if all the operations in the service impersonate the caller; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,196],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all the operations in the service impersonate the caller; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[197,275],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[11753,11918],"content":"Gets or sets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> impersonates on serializing reply.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> impersonates on serializing reply."},{"pos":[12056,12316],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> impersonates on serializing reply; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> impersonates on serializing reply; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12988,13058],"content":"Gets or sets the principal used to carry out operations on the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the principal used to carry out operations on the server.","pos":[0,70]}]},{"pos":[13282,13538],"content":"A valid <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"></xref> value that specifies the principal used to carry out operations on the server. The default is <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A valid <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that specifies the principal used to carry out operations on the server.","pos":[0,163],"source":"A valid <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"></xref> value that specifies the principal used to carry out operations on the server."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[164,256],"source":" The default is <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"></xref>."}]},{"pos":[14339,14351],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14969,15122],"content":"Gets or sets the name of the role provider, which provides role information for a <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> application.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the role provider, which provides role information for a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] application."},{"pos":[15134,15296],"content":"Different types of role providers can be used to provide role information from a Windows group, an SQL database, an authorization manager policy store, and so on.","needQuote":true,"needEscape":true,"nodes":[{"content":"Different types of role providers can be used to provide role information from a Windows group, an SQL database, an authorization manager policy store, and so on.","pos":[0,162]}]},{"pos":[15422,15484],"content":"The name of the role provider. The default is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the role provider. The default is an empty string.","pos":[0,62],"nodes":[{"content":"The name of the role provider.","pos":[0,30]},{"content":"The default is an empty string.","pos":[31,62]}]}]},{"pos":[16183,16243],"content":"Gets or sets the type of service authorization manager used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of service authorization manager used.","pos":[0,60]}]},{"pos":[16384,16454],"content":"A string that specifies the type of the service authorization manager.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that specifies the type of the service authorization manager.","pos":[0,70]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  id: ServiceAuthorizationElement\n  children:\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  langs:\n  - csharp\n  name: ServiceAuthorizationElement\n  nameWithType: ServiceAuthorizationElement\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  type: Class\n  summary: Represents a configuration element that defines security settings at the service level.\n  syntax:\n    content: 'public sealed class ServiceAuthorizationElement : System.ServiceModel.Configuration.BehaviorExtensionElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement\n  - System.ServiceModel.Configuration.BehaviorExtensionElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: ServiceAuthorizationElement()\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationElement()\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> class.\n  syntax:\n    content: public ServiceAuthorizationElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies\n  id: AuthorizationPolicies\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: AuthorizationPolicies\n  nameWithType: ServiceAuthorizationElement.AuthorizationPolicies\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a collection of authorization policy types.\n  remarks: Configuring a set of authorization policy implementations enables transformation of one set of input claims into another set of claims. Access control can be granted or denied based on the claims.\n  syntax:\n    content: public System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection AuthorizationPolicies { get; }\n    return:\n      type: System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\n      description: An <xref href=\"System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\"></xref> that contains a collection of authorization policy types.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType\n  id: BehaviorType\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: BehaviorType\n  nameWithType: ServiceAuthorizationElement.BehaviorType\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the type of this behavior configuration element.\n  syntax:\n    content: public override Type BehaviorType { get; }\n    return:\n      type: System.Type\n      description: The type of the behavior.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: CopyFrom(ServiceModelExtensionElement)\n  nameWithType: ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Copies the content of a specified configuration element to this configuration element.\n  syntax:\n    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);\n    parameters:\n    - id: from\n      type: System.ServiceModel.Configuration.ServiceModelExtensionElement\n      description: The configuration element to be copied.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior\n  id: CreateBehavior\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: CreateBehavior()\n  nameWithType: ServiceAuthorizationElement.CreateBehavior()\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override object CreateBehavior ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  id: ImpersonateCallerForAllOperations\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: ImpersonateCallerForAllOperations\n  nameWithType: ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a Boolean value that specifies whether all the operations in the service impersonate the caller.\n  remarks: When a specific service operation impersonates the caller, the thread context is switched to the caller context before executing the specified service.\n  syntax:\n    content: public bool ImpersonateCallerForAllOperations { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all the operations in the service impersonate the caller; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  id: ImpersonateOnSerializingReply\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: ImpersonateOnSerializingReply\n  nameWithType: ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> impersonates on serializing reply.\n  syntax:\n    content: public bool ImpersonateOnSerializingReply { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> impersonates on serializing reply; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode\n  id: PrincipalPermissionMode\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: PrincipalPermissionMode\n  nameWithType: ServiceAuthorizationElement.PrincipalPermissionMode\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the principal used to carry out operations on the server.\n  syntax:\n    content: public System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode { get; set; }\n    return:\n      type: System.ServiceModel.Description.PrincipalPermissionMode\n      description: A valid <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"></xref> value that specifies the principal used to carry out operations on the server. The default is <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"></xref>.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ServiceAuthorizationElement.Properties\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName\n  id: RoleProviderName\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: RoleProviderName\n  nameWithType: ServiceAuthorizationElement.RoleProviderName\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the name of the role provider, which provides role information for a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] application.\n  remarks: Different types of role providers can be used to provide role information from a Windows group, an SQL database, an authorization manager policy store, and so on.\n  syntax:\n    content: public string RoleProviderName { get; set; }\n    return:\n      type: System.String\n      description: The name of the role provider. The default is an empty string.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  id: ServiceAuthorizationManagerType\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: ServiceAuthorizationManagerType\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the type of service authorization manager used.\n  syntax:\n    content: public string ServiceAuthorizationManagerType { get; set; }\n    return:\n      type: System.String\n      description: A string that specifies the type of the service authorization manager.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Configuration.BehaviorExtensionElement\n  isExternal: false\n  name: System.ServiceModel.Configuration.BehaviorExtensionElement\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ServiceAuthorizationElement()\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationElement()\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationElement()\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: AuthorizationPolicies\n  nameWithType: ServiceAuthorizationElement.AuthorizationPolicies\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies\n- uid: System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: AuthorizationPolicyTypeElementCollection\n  nameWithType: AuthorizationPolicyTypeElementCollection\n  fullName: System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: BehaviorType\n  nameWithType: ServiceAuthorizationElement.BehaviorType\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: CopyFrom(ServiceModelExtensionElement)\n  nameWithType: ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ServiceModelExtensionElement\n  nameWithType: ServiceModelExtensionElement\n  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: CreateBehavior()\n  nameWithType: ServiceAuthorizationElement.CreateBehavior()\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ImpersonateCallerForAllOperations\n  nameWithType: ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ImpersonateOnSerializingReply\n  nameWithType: ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: PrincipalPermissionMode\n  nameWithType: ServiceAuthorizationElement.PrincipalPermissionMode\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode\n- uid: System.ServiceModel.Description.PrincipalPermissionMode\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: PrincipalPermissionMode\n  nameWithType: PrincipalPermissionMode\n  fullName: System.ServiceModel.Description.PrincipalPermissionMode\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: Properties\n  nameWithType: ServiceAuthorizationElement.Properties\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: RoleProviderName\n  nameWithType: ServiceAuthorizationElement.RoleProviderName\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ServiceAuthorizationManagerType\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ServiceAuthorizationElement\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationElement\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: AuthorizationPolicies\n  nameWithType: ServiceAuthorizationElement.AuthorizationPolicies\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: BehaviorType\n  nameWithType: ServiceAuthorizationElement.BehaviorType\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: CopyFrom\n  nameWithType: ServiceAuthorizationElement.CopyFrom\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: CreateBehavior\n  nameWithType: ServiceAuthorizationElement.CreateBehavior\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ImpersonateCallerForAllOperations\n  nameWithType: ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ImpersonateOnSerializingReply\n  nameWithType: ServiceAuthorizationElement.ImpersonateOnSerializingReply\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: PrincipalPermissionMode\n  nameWithType: ServiceAuthorizationElement.PrincipalPermissionMode\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: Properties\n  nameWithType: ServiceAuthorizationElement.Properties\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: RoleProviderName\n  nameWithType: ServiceAuthorizationElement.RoleProviderName\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ServiceAuthorizationManagerType\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationManagerType\n"}