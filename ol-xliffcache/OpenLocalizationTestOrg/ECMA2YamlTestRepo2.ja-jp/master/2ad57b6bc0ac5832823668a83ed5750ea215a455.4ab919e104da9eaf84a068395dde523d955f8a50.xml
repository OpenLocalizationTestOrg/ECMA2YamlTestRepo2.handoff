{"nodes":[{"pos":[551,652],"content":"Specifies that the server type must be generated in the proxy object. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the server type must be generated in the proxy object. This class cannot be inherited.","pos":[0,101],"nodes":[{"content":"Specifies that the server type must be generated in the proxy object.","pos":[0,69]},{"content":"This class cannot be inherited.","pos":[70,101]}]}]},{"pos":[665,2315],"content":"In AJAX-enabled ASP.NET Web sites, ASP.NET can automatically generate proxy objects for methods of a Web service class. It does this for most top-level types for the input parameters and return values of any Web methods that are marked with <xref:System.Web.Script.Services.ScriptServiceAttribute>.       In other cases, if you proxy objects generated for server types, you must apply GenerateScriptTypeAttribute manually. You can apply GenerateScriptTypeAttribute to the Web service itself or to any Web service method or `static` page method marked with <xref:System.Web.Services.WebMethodAttribute>.       In some cases, even if the type corresponds to an input parameter or return value of a Web service method, the proxy will not be generated automatically. In that case, you must use the GenerateScriptTypeAttribute attribute to generate the proxy object for the type. This occurs for generic types and arrays that have more than one argument, such as `Dictionary<string,<T>>`.       One or more instances of GenerateScriptTypeAttribute can be applied to a Web service class or method. ASP.NET will then generate an ECMAScript (JavaScript) proxy class for each top-level type that is referenced by each declaration of GenerateScriptTypeAttribute.      > [!NOTE] >  If you want to generate proxy objects for nested types, you must manually apply GenerateScriptTypeAttribute to each nested type. ASP.NET generates proxies only for top-level types and does not automatically recursively apply the attribute to nested types.       For more information about how to use attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"In AJAX-enabled ASP.NET Web sites, ASP.NET can automatically generate proxy objects for methods of a Web service class.","pos":[0,119]},{"content":"It does this for most top-level types for the input parameters and return values of any Web methods that are marked with &lt;xref:System.Web.Script.Services.ScriptServiceAttribute&gt;.","pos":[120,298],"source":" It does this for most top-level types for the input parameters and return values of any Web methods that are marked with <xref:System.Web.Script.Services.ScriptServiceAttribute>."},{"content":"In other cases, if you proxy objects generated for server types, you must apply GenerateScriptTypeAttribute manually.","pos":[305,422]},{"content":"You can apply GenerateScriptTypeAttribute to the Web service itself or to any Web service method or <ph id=\"ph1\">`static`</ph> page method marked with &lt;xref:System.Web.Services.WebMethodAttribute&gt;.","pos":[423,602],"source":" You can apply GenerateScriptTypeAttribute to the Web service itself or to any Web service method or `static` page method marked with <xref:System.Web.Services.WebMethodAttribute>."},{"content":"In some cases, even if the type corresponds to an input parameter or return value of a Web service method, the proxy will not be generated automatically.","pos":[609,762]},{"content":"In that case, you must use the GenerateScriptTypeAttribute attribute to generate the proxy object for the type.","pos":[763,874]},{"content":"This occurs for generic types and arrays that have more than one argument, such as <ph id=\"ph1\">`Dictionary&lt;string,&lt;T&gt;&gt;`</ph>.","pos":[875,983],"source":" This occurs for generic types and arrays that have more than one argument, such as `Dictionary<string,<T>>`."},{"content":"One or more instances of GenerateScriptTypeAttribute can be applied to a Web service class or method.","pos":[990,1091]},{"content":"ASP.NET will then generate an ECMAScript (JavaScript) proxy class for each top-level type that is referenced by each declaration of GenerateScriptTypeAttribute.","pos":[1092,1252]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you want to generate proxy objects for nested types, you must manually apply GenerateScriptTypeAttribute to each nested type.","pos":[1258,1399],"source":"      > [!NOTE] >  If you want to generate proxy objects for nested types, you must manually apply GenerateScriptTypeAttribute to each nested type."},{"content":"ASP.NET generates proxies only for top-level types and does not automatically recursively apply the attribute to nested types.","pos":[1400,1526]},{"content":"For more information about how to use attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1533,1639],"source":"       For more information about how to use attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3546,3685],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Script.Services.GenerateScriptTypeAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the specified type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Script.Services.GenerateScriptTypeAttribute\"></xref> class for the specified type."},{"pos":[3697,3840],"content":"The <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> property is an optional named parameter for this constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A&gt; property is an optional named parameter for this constructor.","pos":[0,143],"source":"The <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> property is an optional named parameter for this constructor."}]},{"pos":[4341,4380],"content":"The type to include in the proxy class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to include in the proxy class.","pos":[0,39]}]},{"pos":[4571,4653],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5122,5184],"content":"Gets or sets the type identifier for the type metadata marker.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type identifier for the type metadata marker.","pos":[0,62]}]},{"pos":[5196,5617],"content":"This is an optional property. If specified, the value of ScriptTypeId is used for the type metadata marker (\"__type\") on the serialized JSON string instead of the assembly-qualified name of the type. During deserialization, the type resolver that is associated with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object will use the type metadata marker value to map back to the appropriate managed type.","needQuote":true,"needEscape":true,"nodes":[{"content":"This is an optional property. If specified, the value of ScriptTypeId is used for the type metadata marker (\"__type\") on the serialized JSON string instead of the assembly-qualified name of the type. During deserialization, the type resolver that is associated with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object will use the type metadata marker value to map back to the appropriate managed type.","pos":[0,421],"nodes":[{"content":"This is an optional property.","pos":[0,29]},{"content":"If specified, the value of ScriptTypeId is used for the type metadata marker (\"__type\") on the serialized JSON string instead of the assembly-qualified name of the type.","pos":[30,199]},{"content":"During deserialization, the type resolver that is associated with the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; object will use the type metadata marker value to map back to the appropriate managed type.","pos":[200,421],"source":" During deserialization, the type resolver that is associated with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object will use the type metadata marker value to map back to the appropriate managed type."}]}]},{"pos":[5739,5909],"content":"The type identifier for the type metadata marker on the serialized JavaScript Object Notation (JSON) string. The default value is the assembly-qualified name of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type identifier for the type metadata marker on the serialized JavaScript Object Notation (JSON) string. The default value is the assembly-qualified name of the type.","pos":[0,170],"nodes":[{"content":"The type identifier for the type metadata marker on the serialized JavaScript Object Notation (JSON) string.","pos":[0,108]},{"content":"The default value is the assembly-qualified name of the type.","pos":[109,170]}]}]},{"pos":[6436,6487],"content":"Gets the type that is included in the proxy object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type that is included in the proxy object.","pos":[0,51]}]},{"pos":[6592,6655],"content":"The type object that is included in the generated proxy object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type object that is included in the generated proxy object.","pos":[0,63]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Script.Services.GenerateScriptTypeAttribute\n  id: GenerateScriptTypeAttribute\n  children:\n  - System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)\n  - System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId\n  - System.Web.Script.Services.GenerateScriptTypeAttribute.Type\n  langs:\n  - csharp\n  name: GenerateScriptTypeAttribute\n  nameWithType: GenerateScriptTypeAttribute\n  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute\n  type: Class\n  summary: Specifies that the server type must be generated in the proxy object. This class cannot be inherited.\n  remarks: \"In AJAX-enabled ASP.NET Web sites, ASP.NET can automatically generate proxy objects for methods of a Web service class. It does this for most top-level types for the input parameters and return values of any Web methods that are marked with <xref:System.Web.Script.Services.ScriptServiceAttribute>.  \\n  \\n In other cases, if you proxy objects generated for server types, you must apply GenerateScriptTypeAttribute manually. You can apply GenerateScriptTypeAttribute to the Web service itself or to any Web service method or `static` page method marked with <xref:System.Web.Services.WebMethodAttribute>.  \\n  \\n In some cases, even if the type corresponds to an input parameter or return value of a Web service method, the proxy will not be generated automatically. In that case, you must use the GenerateScriptTypeAttribute attribute to generate the proxy object for the type. This occurs for generic types and arrays that have more than one argument, such as `Dictionary<string,<T>>`.  \\n  \\n One or more instances of GenerateScriptTypeAttribute can be applied to a Web service class or method. ASP.NET will then generate an ECMAScript (JavaScript) proxy class for each top-level type that is referenced by each declaration of GenerateScriptTypeAttribute.  \\n  \\n> [!NOTE]\\n>  If you want to generate proxy objects for nested types, you must manually apply GenerateScriptTypeAttribute to each nested type. ASP.NET generates proxies only for top-level types and does not automatically recursively apply the attribute to nested types.  \\n  \\n For more information about how to use attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows how to apply GenerateScriptTypeAttribute to a Web service class and to a Web method. As a result, the `ColorObject` type and its nested type `FavoriteColors` are included in the proxy object.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true)]\n\n      public sealed class GenerateScriptTypeAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Web.Script.Services.GenerateScriptTypeAttribute\n  langs:\n  - csharp\n  name: GenerateScriptTypeAttribute(Type)\n  nameWithType: GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)\n  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Services\n  summary: Initializes a new instance of the <xref href=\"System.Web.Script.Services.GenerateScriptTypeAttribute\"></xref> class for the specified type.\n  remarks: The <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> property is an optional named parameter for this constructor.\n  example:\n  - \"The following example shows how to use <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> to generate a proxy object for the specified type that uses a specific type identifier for the metadata marker.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public GenerateScriptTypeAttribute (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to include in the proxy class.\n  overload: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId\n  id: ScriptTypeId\n  parent: System.Web.Script.Services.GenerateScriptTypeAttribute\n  langs:\n  - csharp\n  name: ScriptTypeId\n  nameWithType: GenerateScriptTypeAttribute.ScriptTypeId\n  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Services\n  summary: Gets or sets the type identifier for the type metadata marker.\n  remarks: This is an optional property. If specified, the value of ScriptTypeId is used for the type metadata marker (\"__type\") on the serialized JSON string instead of the assembly-qualified name of the type. During deserialization, the type resolver that is associated with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object will use the type metadata marker value to map back to the appropriate managed type.\n  syntax:\n    content: public string ScriptTypeId { get; set; }\n    return:\n      type: System.String\n      description: The type identifier for the type metadata marker on the serialized JavaScript Object Notation (JSON) string. The default value is the assembly-qualified name of the type.\n  overload: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.Type\n  id: Type\n  parent: System.Web.Script.Services.GenerateScriptTypeAttribute\n  langs:\n  - csharp\n  name: Type\n  nameWithType: GenerateScriptTypeAttribute.Type\n  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.Type\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Services\n  summary: Gets the type that is included in the proxy object.\n  syntax:\n    content: public Type Type { get; }\n    return:\n      type: System.Type\n      description: The type object that is included in the generated proxy object.\n  overload: System.Web.Script.Services.GenerateScriptTypeAttribute.Type*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)\n  parent: System.Web.Script.Services.GenerateScriptTypeAttribute\n  isExternal: false\n  name: GenerateScriptTypeAttribute(Type)\n  nameWithType: GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)\n  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId\n  parent: System.Web.Script.Services.GenerateScriptTypeAttribute\n  isExternal: false\n  name: ScriptTypeId\n  nameWithType: GenerateScriptTypeAttribute.ScriptTypeId\n  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.Type\n  parent: System.Web.Script.Services.GenerateScriptTypeAttribute\n  isExternal: false\n  name: Type\n  nameWithType: GenerateScriptTypeAttribute.Type\n  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.Type\n- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor*\n  parent: System.Web.Script.Services.GenerateScriptTypeAttribute\n  isExternal: false\n  name: GenerateScriptTypeAttribute\n  nameWithType: GenerateScriptTypeAttribute.GenerateScriptTypeAttribute\n- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId*\n  parent: System.Web.Script.Services.GenerateScriptTypeAttribute\n  isExternal: false\n  name: ScriptTypeId\n  nameWithType: GenerateScriptTypeAttribute.ScriptTypeId\n- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.Type*\n  parent: System.Web.Script.Services.GenerateScriptTypeAttribute\n  isExternal: false\n  name: Type\n  nameWithType: GenerateScriptTypeAttribute.Type\n"}