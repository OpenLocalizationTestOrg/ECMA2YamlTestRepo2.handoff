{"nodes":[{"pos":[1779,1968],"content":"Manages the collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects for any object that inherits from the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Manages the collection of <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> objects for any object that inherits from the <xref href=\"System.Windows.Forms.Control\"></xref> class."},{"pos":[1981,8428],"content":"Each Windows Form has at least one BindingContext object that manages the <xref:System.Windows.Forms.BindingManagerBase> objects for the form. Because the <xref:System.Windows.Forms.BindingManagerBase> class is abstract, the return type of the <xref:System.Windows.Forms.BindingContext.Item%2A> property is either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>. If the data source is an object that can return only a single property (instead of a list of objects), the <xref:System.Type> is a <xref:System.Windows.Forms.PropertyManager>. For example, if you specify a <xref:System.Windows.Forms.TextBox> as the data source, a <xref:System.Windows.Forms.PropertyManager> is returned. On the other hand, if the data source is an object that implements <xref:System.Collections.IList> or <xref:System.ComponentModel.IBindingList>, a <xref:System.Windows.Forms.CurrencyManager> is returned.       For each data source on a Windows Form, there is a single <xref:System.Windows.Forms.CurrencyManager> or <xref:System.Windows.Forms.PropertyManager>. Because there may be multiple data sources associated with a Windows Form, the BindingContext enables you to retrieve any particular <xref:System.Windows.Forms.CurrencyManager> associated with a data source.      > [!NOTE] >  When using the <xref:System.Windows.Forms.BindingContext.Item%2A> property, the BindingContext creates a new <xref:System.Windows.Forms.BindingManagerBase> if one does not already exist. This can lead to some confusion, as the returned object may not manage the list (or any list) that you intend. To prevent returning an invalid <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the intended <xref:System.Windows.Forms.BindingManagerBase> already exists.       If you use a container control, such as a <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.Panel>, or <xref:System.Windows.Forms.TabControl>, to contain data-bound controls, you can create a BindingContext for just that container control and its controls. Then, each part of your form can be managed by its own <xref:System.Windows.Forms.BindingManagerBase>. See the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor for more information about creating multiple <xref:System.Windows.Forms.BindingManagerBase> objects for the same data source.       If you add a <xref:System.Windows.Forms.TextBox> control to a form and bind it to a column of a table in a dataset, the control communicates with the BindingContext of that form. The BindingContext, in turn, talks to the specific <xref:System.Windows.Forms.CurrencyManager> for that data association. If you queried the `Position` property of the <xref:System.Windows.Forms.CurrencyManager>, it would report the current record for the binding of that <xref:System.Windows.Forms.TextBox> control. In the following code example, a <xref:System.Windows.Forms.TextBox> control is bound to the `FirstName` column of a `Customers` table on the `dataSet1` dataset through the BindingContext for the form it is on.      ```vb#   TextBox1.DataBindings.Add(\"Text\", dataSet1, \"Customers.FirstName\")      ```      ```c#   textBox1.DataBindings.Add(\"Text\", dataSet1, \"Customers.FirstName\");      ```      ```cpp   textBox1->DataBindings->Add(\"Text\", dataSet1, \"Customers.FirstName\");   ```       You can add a second <xref:System.Windows.Forms.TextBox> control (`TextBox2`) to the form and bind it to the `LastName` column of the `Customers` table in the same dataset. The BindingContext is aware of the first binding (`TextBox1` to `Customers.FirstName`), so it would use the same <xref:System.Windows.Forms.CurrencyManager>, as both text boxes are bound to the same dataset (`DataSet1`).      ```vb#   TextBox2.DataBindings.Add(\"Text\", dataSet1, \"Customers.LastName\")      ```      ```c#   textBox2.DataBindings.Add(\"Text\", dataSet1, \"Customers.LastName\");      ```      ```cpp   textBox2->DataBindings->Add(\"Text\", dataSet1, \"Customers.LastName\");   ```       If you bind `TextBox2` to a different dataset, the BindingContext creates and manages a second <xref:System.Windows.Forms.CurrencyManager>.       It is important to be consistent about how you set the <xref:System.Windows.Forms.ListControl.DataSource%2A> and <xref:System.Windows.Forms.ListControl.DisplayMember%2A> properties; otherwise, the BindingContext creates multiple currency managers for the same dataset, which results in errors. The following code example shows a few ways to set the properties and their associated BindingContext objects. You can set the properties using either of the following methods, as long as you are consistent throughout your code.      ```vb#   ComboBox1.DataSource = DataSet1   ComboBox1.DisplayMember = \"Customers.FirstName\"   Me.BindingContext(dataSet1, \"Customers\").Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1;   comboBox1.DisplayMember = \"Customers.FirstName\";   this.BindingContext[dataSet1, \"Customers\"].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1;   comboBox1->DisplayMember = \"Customers.FirstName\";   this->BindingContext->get_Item(dataSet1, \"Customers\")->Position = 1;      ```      ```vb#   ComboBox1.DataSource = DataSet1.Customers   ComboBox1.DisplayMember = \"FirstName\"   Me.BindingContext(dataSet1.Customers).Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1.Customers;   comboBox1.DisplayMember = \"FirstName\";   this.BindingContext[dataSet1.Customers].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1->Customers;   comboBox1->DisplayMember = \"FirstName\";   this->BindingContext->get_Item(dataSet1->Customers)->Position = 1;      ```      > [!NOTE] >  Most Windows Forms applications bind through a <xref:System.Windows.Forms.BindingSource>. The <xref:System.Windows.Forms.BindingSource> component encapsulates a <xref:System.Windows.Forms.CurrencyManager> and exposes the <xref:System.Windows.Forms.CurrencyManager> programming interface. When using a <xref:System.Windows.Forms.BindingSource> for binding, you should use the members exposed by the <xref:System.Windows.Forms.BindingSource> to manipulate \"currency\" (that is, `Position`) rather than go through the BindingContext.","needQuote":false,"needEscape":true,"nodes":[{"content":"Each Windows Form has at least one BindingContext object that manages the &lt;xref:System.Windows.Forms.BindingManagerBase&gt; objects for the form.","pos":[0,142],"source":"Each Windows Form has at least one BindingContext object that manages the <xref:System.Windows.Forms.BindingManagerBase> objects for the form."},{"content":"Because the &lt;xref:System.Windows.Forms.BindingManagerBase&gt; class is abstract, the return type of the &lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt; property is either a &lt;xref:System.Windows.Forms.CurrencyManager&gt; or a &lt;xref:System.Windows.Forms.PropertyManager&gt;.","pos":[143,409],"source":" Because the <xref:System.Windows.Forms.BindingManagerBase> class is abstract, the return type of the <xref:System.Windows.Forms.BindingContext.Item%2A> property is either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>."},{"content":"If the data source is an object that can return only a single property (instead of a list of objects), the &lt;xref:System.Type&gt; is a &lt;xref:System.Windows.Forms.PropertyManager&gt;.","pos":[410,585],"source":" If the data source is an object that can return only a single property (instead of a list of objects), the <xref:System.Type> is a <xref:System.Windows.Forms.PropertyManager>."},{"content":"For example, if you specify a &lt;xref:System.Windows.Forms.TextBox&gt; as the data source, a &lt;xref:System.Windows.Forms.PropertyManager&gt; is returned.","pos":[586,730],"source":" For example, if you specify a <xref:System.Windows.Forms.TextBox> as the data source, a <xref:System.Windows.Forms.PropertyManager> is returned."},{"content":"On the other hand, if the data source is an object that implements &lt;xref:System.Collections.IList&gt; or &lt;xref:System.ComponentModel.IBindingList&gt;, a &lt;xref:System.Windows.Forms.CurrencyManager&gt; is returned.","pos":[731,934],"source":" On the other hand, if the data source is an object that implements <xref:System.Collections.IList> or <xref:System.ComponentModel.IBindingList>, a <xref:System.Windows.Forms.CurrencyManager> is returned."},{"content":"For each data source on a Windows Form, there is a single &lt;xref:System.Windows.Forms.CurrencyManager&gt; or &lt;xref:System.Windows.Forms.PropertyManager&gt;.","pos":[941,1090],"source":"       For each data source on a Windows Form, there is a single <xref:System.Windows.Forms.CurrencyManager> or <xref:System.Windows.Forms.PropertyManager>."},{"content":"Because there may be multiple data sources associated with a Windows Form, the BindingContext enables you to retrieve any particular &lt;xref:System.Windows.Forms.CurrencyManager&gt; associated with a data source.","pos":[1091,1298],"source":" Because there may be multiple data sources associated with a Windows Form, the BindingContext enables you to retrieve any particular <xref:System.Windows.Forms.CurrencyManager> associated with a data source."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When using the &lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt; property, the BindingContext creates a new &lt;xref:System.Windows.Forms.BindingManagerBase&gt; if one does not already exist.","pos":[1304,1503],"source":"      > [!NOTE] >  When using the <xref:System.Windows.Forms.BindingContext.Item%2A> property, the BindingContext creates a new <xref:System.Windows.Forms.BindingManagerBase> if one does not already exist."},{"content":"This can lead to some confusion, as the returned object may not manage the list (or any list) that you intend.","pos":[1504,1614]},{"content":"To prevent returning an invalid &lt;xref:System.Windows.Forms.BindingManagerBase&gt;, use the &lt;xref:System.Windows.Forms.BindingContext.Contains%2A&gt; method to determine if the intended &lt;xref:System.Windows.Forms.BindingManagerBase&gt; already exists.","pos":[1615,1856],"source":" To prevent returning an invalid <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the intended <xref:System.Windows.Forms.BindingManagerBase> already exists."},{"content":"If you use a container control, such as a &lt;xref:System.Windows.Forms.GroupBox&gt;, &lt;xref:System.Windows.Forms.Panel&gt;, or &lt;xref:System.Windows.Forms.TabControl&gt;, to contain data-bound controls, you can create a BindingContext for just that container control and its controls.","pos":[1863,2134],"source":"       If you use a container control, such as a <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.Panel>, or <xref:System.Windows.Forms.TabControl>, to contain data-bound controls, you can create a BindingContext for just that container control and its controls."},{"content":"Then, each part of your form can be managed by its own &lt;xref:System.Windows.Forms.BindingManagerBase&gt;.","pos":[2135,2237],"source":" Then, each part of your form can be managed by its own <xref:System.Windows.Forms.BindingManagerBase>."},{"content":"See the &lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt; constructor for more information about creating multiple &lt;xref:System.Windows.Forms.BindingManagerBase&gt; objects for the same data source.","pos":[2238,2437],"source":" See the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor for more information about creating multiple <xref:System.Windows.Forms.BindingManagerBase> objects for the same data source."},{"content":"If you add a &lt;xref:System.Windows.Forms.TextBox&gt; control to a form and bind it to a column of a table in a dataset, the control communicates with the BindingContext of that form.","pos":[2444,2622],"source":"       If you add a <xref:System.Windows.Forms.TextBox> control to a form and bind it to a column of a table in a dataset, the control communicates with the BindingContext of that form."},{"content":"The BindingContext, in turn, talks to the specific &lt;xref:System.Windows.Forms.CurrencyManager&gt; for that data association.","pos":[2623,2744],"source":" The BindingContext, in turn, talks to the specific <xref:System.Windows.Forms.CurrencyManager> for that data association."},{"content":"If you queried the <ph id=\"ph1\">`Position`</ph> property of the &lt;xref:System.Windows.Forms.CurrencyManager&gt;, it would report the current record for the binding of that &lt;xref:System.Windows.Forms.TextBox&gt; control.","pos":[2745,2939],"source":" If you queried the `Position` property of the <xref:System.Windows.Forms.CurrencyManager>, it would report the current record for the binding of that <xref:System.Windows.Forms.TextBox> control."},{"content":"In the following code example, a &lt;xref:System.Windows.Forms.TextBox&gt; control is bound to the <ph id=\"ph1\">`FirstName`</ph> column of a <ph id=\"ph2\">`Customers`</ph> table on the <ph id=\"ph3\">`dataSet1`</ph> dataset through the BindingContext for the form it is on.","pos":[2940,3150],"source":" In the following code example, a <xref:System.Windows.Forms.TextBox> control is bound to the `FirstName` column of a `Customers` table on the `dataSet1` dataset through the BindingContext for the form it is on."},{"content":"<ph id=\"ph1\">```vb#   TextBox1.DataBindings.Add(\"Text\", dataSet1, \"Customers.FirstName\")      ```</ph>      <ph id=\"ph2\">```c#   textBox1.DataBindings.Add(\"Text\", dataSet1, \"Customers.FirstName\");      ```</ph>      <ph id=\"ph3\">```cpp   textBox1-&gt;DataBindings-&gt;Add(\"Text\", dataSet1, \"Customers.FirstName\");   ```</ph>       You can add a second &lt;xref:System.Windows.Forms.TextBox&gt; control (<ph id=\"ph4\">`TextBox2`</ph>) to the form and bind it to the <ph id=\"ph5\">`LastName`</ph> column of the <ph id=\"ph6\">`Customers`</ph> table in the same dataset.","pos":[3156,3599],"source":"```vb#   TextBox1.DataBindings.Add(\"Text\", dataSet1, \"Customers.FirstName\")      ```      ```c#   textBox1.DataBindings.Add(\"Text\", dataSet1, \"Customers.FirstName\");      ```      ```cpp   textBox1->DataBindings->Add(\"Text\", dataSet1, \"Customers.FirstName\");   ```       You can add a second <xref:System.Windows.Forms.TextBox> control (`TextBox2`) to the form and bind it to the `LastName` column of the `Customers` table in the same dataset."},{"content":"The BindingContext is aware of the first binding (<ph id=\"ph1\">`TextBox1`</ph> to <ph id=\"ph2\">`Customers.FirstName`</ph>), so it would use the same &lt;xref:System.Windows.Forms.CurrencyManager&gt;, as both text boxes are bound to the same dataset (<ph id=\"ph3\">`DataSet1`</ph>).","pos":[3600,3820],"source":" The BindingContext is aware of the first binding (`TextBox1` to `Customers.FirstName`), so it would use the same <xref:System.Windows.Forms.CurrencyManager>, as both text boxes are bound to the same dataset (`DataSet1`)."},{"content":"<ph id=\"ph1\">```vb#   TextBox2.DataBindings.Add(\"Text\", dataSet1, \"Customers.LastName\")      ```</ph>      <ph id=\"ph2\">```c#   textBox2.DataBindings.Add(\"Text\", dataSet1, \"Customers.LastName\");      ```</ph>      <ph id=\"ph3\">```cpp   textBox2-&gt;DataBindings-&gt;Add(\"Text\", dataSet1, \"Customers.LastName\");   ```</ph>       If you bind <ph id=\"ph4\">`TextBox2`</ph> to a different dataset, the BindingContext creates and manages a second &lt;xref:System.Windows.Forms.CurrencyManager&gt;.","pos":[3826,4233],"source":"```vb#   TextBox2.DataBindings.Add(\"Text\", dataSet1, \"Customers.LastName\")      ```      ```c#   textBox2.DataBindings.Add(\"Text\", dataSet1, \"Customers.LastName\");      ```      ```cpp   textBox2->DataBindings->Add(\"Text\", dataSet1, \"Customers.LastName\");   ```       If you bind `TextBox2` to a different dataset, the BindingContext creates and manages a second <xref:System.Windows.Forms.CurrencyManager>."},{"content":"It is important to be consistent about how you set the &lt;xref:System.Windows.Forms.ListControl.DataSource%2A&gt; and &lt;xref:System.Windows.Forms.ListControl.DisplayMember%2A&gt; properties; otherwise, the BindingContext creates multiple currency managers for the same dataset, which results in errors.","pos":[4240,4533],"source":"       It is important to be consistent about how you set the <xref:System.Windows.Forms.ListControl.DataSource%2A> and <xref:System.Windows.Forms.ListControl.DisplayMember%2A> properties; otherwise, the BindingContext creates multiple currency managers for the same dataset, which results in errors."},{"content":"The following code example shows a few ways to set the properties and their associated BindingContext objects.","pos":[4534,4644]},{"content":"You can set the properties using either of the following methods, as long as you are consistent throughout your code.","pos":[4645,4762]},{"content":"<ph id=\"ph1\">```vb#   ComboBox1.DataSource = DataSet1   ComboBox1.DisplayMember = \"Customers.FirstName\"   Me.BindingContext(dataSet1, \"Customers\").Position = 1      ```</ph>      <ph id=\"ph2\">```c#   comboBox1.DataSource = DataSet1;   comboBox1.DisplayMember = \"Customers.FirstName\";   this.BindingContext[dataSet1, \"Customers\"].Position = 1;      ```</ph>      <ph id=\"ph3\">```cpp   comboBox1-&gt;DataSource = dataSet1;   comboBox1-&gt;DisplayMember = \"Customers.FirstName\";   this-&gt;BindingContext-&gt;get_Item(dataSet1, \"Customers\")-&gt;Position = 1;      ```</ph>      <ph id=\"ph4\">```vb#   ComboBox1.DataSource = DataSet1.Customers   ComboBox1.DisplayMember = \"FirstName\"   Me.BindingContext(dataSet1.Customers).Position = 1      ```</ph>      <ph id=\"ph5\">```c#   comboBox1.DataSource = DataSet1.Customers;   comboBox1.DisplayMember = \"FirstName\";   this.BindingContext[dataSet1.Customers].Position = 1;      ```</ph>      <ph id=\"ph6\">```cpp   comboBox1-&gt;DataSource = dataSet1-&gt;Customers;   comboBox1-&gt;DisplayMember = \"FirstName\";   this-&gt;BindingContext-&gt;get_Item(dataSet1-&gt;Customers)-&gt;Position = 1;      ```</ph><ph id=\"ph7\">      &gt; </ph><ph id=\"ph8\">[!NOTE]</ph> &gt;  Most Windows Forms applications bind through a &lt;xref:System.Windows.Forms.BindingSource&gt;.","pos":[4768,5875],"source":"```vb#   ComboBox1.DataSource = DataSet1   ComboBox1.DisplayMember = \"Customers.FirstName\"   Me.BindingContext(dataSet1, \"Customers\").Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1;   comboBox1.DisplayMember = \"Customers.FirstName\";   this.BindingContext[dataSet1, \"Customers\"].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1;   comboBox1->DisplayMember = \"Customers.FirstName\";   this->BindingContext->get_Item(dataSet1, \"Customers\")->Position = 1;      ```      ```vb#   ComboBox1.DataSource = DataSet1.Customers   ComboBox1.DisplayMember = \"FirstName\"   Me.BindingContext(dataSet1.Customers).Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1.Customers;   comboBox1.DisplayMember = \"FirstName\";   this.BindingContext[dataSet1.Customers].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1->Customers;   comboBox1->DisplayMember = \"FirstName\";   this->BindingContext->get_Item(dataSet1->Customers)->Position = 1;      ```      > [!NOTE] >  Most Windows Forms applications bind through a <xref:System.Windows.Forms.BindingSource>."},{"content":"The &lt;xref:System.Windows.Forms.BindingSource&gt; component encapsulates a &lt;xref:System.Windows.Forms.CurrencyManager&gt; and exposes the &lt;xref:System.Windows.Forms.CurrencyManager&gt; programming interface.","pos":[5876,6073],"source":" The <xref:System.Windows.Forms.BindingSource> component encapsulates a <xref:System.Windows.Forms.CurrencyManager> and exposes the <xref:System.Windows.Forms.CurrencyManager> programming interface."},{"content":"When using a &lt;xref:System.Windows.Forms.BindingSource&gt; for binding, you should use the members exposed by the &lt;xref:System.Windows.Forms.BindingSource&gt; to manipulate \"currency\" (that is, <ph id=\"ph1\">`Position`</ph>) rather than go through the BindingContext.","pos":[6074,6315],"source":" When using a <xref:System.Windows.Forms.BindingSource> for binding, you should use the members exposed by the <xref:System.Windows.Forms.BindingSource> to manipulate \"currency\" (that is, `Position`) rather than go through the BindingContext."}]},{"pos":[9771,9868],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.BindingContext\"></xref> class."},{"pos":[9880,10625],"content":"If you want to have multiple <xref:System.Windows.Forms.BindingManagerBase> instances for the same data source, create a new <xref:System.Windows.Forms.BindingContext> and set it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property of an object that inherits from the <xref:System.Windows.Forms.Control> class. For example, if you have two <xref:System.Windows.Forms.BindingManagerBase> objects (from two different <xref:System.Windows.Forms.BindingContext> objects), you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> properties of each <xref:System.Windows.Forms.BindingManagerBase> to different values. This causes each set of data-bound controls to display different values from the same data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"If you want to have multiple <xref:System.Windows.Forms.BindingManagerBase> instances for the same data source, create a new <xref:System.Windows.Forms.BindingContext> and set it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property of an object that inherits from the <xref:System.Windows.Forms.Control> class. For example, if you have two <xref:System.Windows.Forms.BindingManagerBase> objects (from two different <xref:System.Windows.Forms.BindingContext> objects), you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> properties of each <xref:System.Windows.Forms.BindingManagerBase> to different values. This causes each set of data-bound controls to display different values from the same data source.","pos":[0,745],"nodes":[{"content":"If you want to have multiple &lt;xref:System.Windows.Forms.BindingManagerBase&gt; instances for the same data source, create a new &lt;xref:System.Windows.Forms.BindingContext&gt; and set it to the &lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt; property of an object that inherits from the &lt;xref:System.Windows.Forms.Control&gt; class.","pos":[0,327],"source":"If you want to have multiple <xref:System.Windows.Forms.BindingManagerBase> instances for the same data source, create a new <xref:System.Windows.Forms.BindingContext> and set it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property of an object that inherits from the <xref:System.Windows.Forms.Control> class."},{"content":"For example, if you have two &lt;xref:System.Windows.Forms.BindingManagerBase&gt; objects (from two different &lt;xref:System.Windows.Forms.BindingContext&gt; objects), you can set the &lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt; properties of each &lt;xref:System.Windows.Forms.BindingManagerBase&gt; to different values.","pos":[328,646],"source":" For example, if you have two <xref:System.Windows.Forms.BindingManagerBase> objects (from two different <xref:System.Windows.Forms.BindingContext> objects), you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> properties of each <xref:System.Windows.Forms.BindingManagerBase> to different values."},{"content":"This causes each set of data-bound controls to display different values from the same data source.","pos":[647,745]}]}]},{"pos":[12644,12771],"content":"Adds the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with a specific data source to the collection.","needQuote":true,"needEscape":true,"source":"Adds the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with a specific data source to the collection."},{"pos":[12970,13076],"content":"The &lt;xref:System.Object&gt; associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Object> associated with the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>."},{"pos":[13170,13242],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> to add."},{"pos":[13868,13995],"content":"Adds the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with a specific data source to the collection.","needQuote":true,"needEscape":true,"source":"Adds the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with a specific data source to the collection."},{"pos":[14206,14298],"content":"The object associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object associated with the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>."},{"pos":[14392,14464],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> to add."},{"pos":[14639,14850],"content":"<code>dataSource</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>listManager</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;dataSource&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,88],"source":"<code>dataSource</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;listManager&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[95,195],"source":"       -or-       <code>listManager</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[15212,15310],"content":"Clears the collection of any <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Clears the collection of any <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> objects."},{"pos":[15830,15852],"content":"Clears the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the collection.","pos":[0,22]}]},{"pos":[16421,16488],"content":"Always raises a <xref:System.NotImplementedException> when handled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Always raises a &lt;xref:System.NotImplementedException&gt; when handled.","pos":[0,67],"source":"Always raises a <xref:System.NotImplementedException> when handled."}]},{"pos":[16500,16729],"content":"The CollectionChanged event is obsolete and always raises a <xref:System.NotImplementedException> when handled. For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"The CollectionChanged event is obsolete and always raises a &lt;xref:System.NotImplementedException&gt; when handled.","pos":[0,111],"source":"The CollectionChanged event is obsolete and always raises a <xref:System.NotImplementedException> when handled."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[112,229],"source":" For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[16930,16942],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17063,17083],"content":"Occurs in all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs in all cases.","pos":[0,20]}]},{"pos":[17507,17716],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> associated with the specified data source.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Windows.Forms.BindingContext\"></xref> contains the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with the specified data source."},{"pos":[17729,18072],"content":"See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and information about creating bindings between controls and data sources.       See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using only a data source.","needQuote":false,"needEscape":true,"nodes":[{"content":"See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and information about creating bindings between controls and data sources.       See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using only a data source.","pos":[0,341],"nodes":[{"content":"See the &lt;xref:System.Windows.Forms.Binding&gt; class for a list of possible data sources and information about creating bindings between controls and data sources.","pos":[0,160],"source":"See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and information about creating bindings between controls and data sources."},{"content":"See the &lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt; property for information about returning a &lt;xref:System.Windows.Forms.BindingManagerBase&gt; using only a data source.","pos":[167,341],"source":"       See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using only a data source."}]}]},{"pos":[18847,18903],"content":"An <xref:System.Object> that represents the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the data source.","pos":[0,56],"source":"An <xref:System.Object> that represents the data source."}]},{"pos":[18962,19246],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contains the specified <bpt id=\"p3\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.BindingContext\"></xref> contains the specified <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19794,20019],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> associated with the specified data source and data member.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Windows.Forms.BindingContext\"></xref> contains the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with the specified data source and data member."},{"pos":[20032,20390],"content":"See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.       See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using a data source and data member.","needQuote":false,"needEscape":true,"nodes":[{"content":"See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.       See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using a data source and data member.","pos":[0,356],"nodes":[{"content":"See the &lt;xref:System.Windows.Forms.Binding&gt; class for a list of possible data sources and for information about creating bindings between controls and data sources.","pos":[0,164],"source":"See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources."},{"content":"See the &lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt; property for information about returning a &lt;xref:System.Windows.Forms.BindingManagerBase&gt; using a data source and data member.","pos":[171,356],"source":"       See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using a data source and data member."}]}]},{"pos":[21213,21269],"content":"An <xref:System.Object> that represents the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the data source.","pos":[0,56],"source":"An <xref:System.Object> that represents the data source."}]},{"pos":[21336,21445],"content":"The information needed to resolve to a specific <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The information needed to resolve to a specific <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>."},{"pos":[21504,21788],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> contains the specified <bpt id=\"p3\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.BindingContext\"></xref> contains the specified <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22245,22305],"content":"Gets a value indicating whether the collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the collection is read-only.","pos":[0,60]}]},{"pos":[22317,22429],"content":"This property is derived from &lt;xref:System.Collections.ICollection&gt;, and is overridden to always return <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return `false`."},{"pos":[22543,22710],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23193,23313],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with the specified data source.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> that is associated with the specified data source."},{"pos":[23326,24046],"content":"Use this overload if the <xref:System.Windows.Forms.BindingManagerBase> you want does not require a navigation path. For example, if the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects that use an <xref:System.Collections.ArrayList> or <xref:System.Data.DataTable> as the <xref:System.Windows.Forms.Binding.DataSource%2A>, no navigation path is required.      > [!NOTE] >  The Item property will always return a <xref:System.Windows.Forms.BindingManagerBase>, and never return `null`.       See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this overload if the &lt;xref:System.Windows.Forms.BindingManagerBase&gt; you want does not require a navigation path.","pos":[0,116],"source":"Use this overload if the <xref:System.Windows.Forms.BindingManagerBase> you want does not require a navigation path."},{"content":"For example, if the &lt;xref:System.Windows.Forms.BindingManagerBase&gt; manages a set of &lt;xref:System.Windows.Forms.Binding&gt; objects that use an &lt;xref:System.Collections.ArrayList&gt; or &lt;xref:System.Data.DataTable&gt; as the &lt;xref:System.Windows.Forms.Binding.DataSource%2A&gt;, no navigation path is required.","pos":[117,414],"source":" For example, if the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects that use an <xref:System.Collections.ArrayList> or <xref:System.Data.DataTable> as the <xref:System.Windows.Forms.Binding.DataSource%2A>, no navigation path is required."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Item property will always return a &lt;xref:System.Windows.Forms.BindingManagerBase&gt;, and never return <ph id=\"ph2\">`null`</ph>.","pos":[420,544],"source":"      > [!NOTE] >  The Item property will always return a <xref:System.Windows.Forms.BindingManagerBase>, and never return `null`."},{"content":"See the &lt;xref:System.Windows.Forms.Binding&gt; class for a list of possible data sources and for information about creating bindings between controls and data sources.","pos":[551,715],"source":"       See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources."}]},{"pos":[24947,25053],"content":"The data source associated with a particular <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The data source associated with a particular <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>."},{"pos":[25137,25230],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified data source.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> for the specified data source."},{"pos":[25756,25890],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with the specified data source and data member.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> that is associated with the specified data source and data member."},{"pos":[25903,28121],"content":"Use this overload when the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects for which the data source contains multiple objects. For example, a <xref:System.Data.DataSet> can contain several <xref:System.Data.DataTable> objects linked by <xref:System.Data.DataRelation> objects. In such a case, the navigation path is required to enable the <xref:System.Windows.Forms.BindingContext> to return the correct <xref:System.Windows.Forms.BindingManagerBase>.      > [!NOTE] >  The Item property will always return a <xref:System.Windows.Forms.BindingManagerBase>, when the `dataMember` parameter is valid. It will never return `null`.       See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.       If the desired <xref:System.Windows.Forms.BindingManagerBase> manages a list, the navigation path must also end with a list. For example, the following C# code binds a <xref:System.Windows.Forms.TextBox> control to the order date in a table of orders. The navigation path includes the <xref:System.Data.DataTable.TableName%2A>, the <xref:System.Data.DataRelation.RelationName%2A>, and the <xref:System.Data.DataColumn.ColumnName%2A>. However, the <xref:System.Windows.Forms.BindingManagerBase> must be retrieved using only the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataRelation.RelationName%2A> (which resolves to a list).      ```   // The navigation path for a Binding ends with a property.   textBox1.DataBindings.Add   (\"Text\", dataSet1, \"Customers.custToOrders.OrderDate\");   // The navigation path for the BindingManagerBase ends with a list.   BindingManagerBase bmOrders = this.BindingContext   [dataSet1, \"Customers.custToOrders\"];   ```       When returning a <xref:System.Windows.Forms.BindingManagerBase>, you should use the same data source as the <xref:System.Windows.Forms.Binding> and modify only the navigation path.       Use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the desired <xref:System.Windows.Forms.BindingManagerBase> already exists.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this overload when the &lt;xref:System.Windows.Forms.BindingManagerBase&gt; manages a set of &lt;xref:System.Windows.Forms.Binding&gt; objects for which the data source contains multiple objects.","pos":[0,187],"source":"Use this overload when the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects for which the data source contains multiple objects."},{"content":"For example, a &lt;xref:System.Data.DataSet&gt; can contain several &lt;xref:System.Data.DataTable&gt; objects linked by &lt;xref:System.Data.DataRelation&gt; objects.","pos":[188,337],"source":" For example, a <xref:System.Data.DataSet> can contain several <xref:System.Data.DataTable> objects linked by <xref:System.Data.DataRelation> objects."},{"content":"In such a case, the navigation path is required to enable the &lt;xref:System.Windows.Forms.BindingContext&gt; to return the correct &lt;xref:System.Windows.Forms.BindingManagerBase&gt;.","pos":[338,512],"source":" In such a case, the navigation path is required to enable the <xref:System.Windows.Forms.BindingContext> to return the correct <xref:System.Windows.Forms.BindingManagerBase>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Item property will always return a &lt;xref:System.Windows.Forms.BindingManagerBase&gt;, when the <ph id=\"ph2\">`dataMember`</ph> parameter is valid.","pos":[518,659],"source":"      > [!NOTE] >  The Item property will always return a <xref:System.Windows.Forms.BindingManagerBase>, when the `dataMember` parameter is valid."},{"content":"It will never return <ph id=\"ph1\">`null`</ph>.","pos":[660,688],"source":" It will never return `null`."},{"content":"See the &lt;xref:System.Windows.Forms.Binding&gt; class for a list of possible data sources and for information about creating bindings between controls and data sources.","pos":[695,859],"source":"       See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources."},{"content":"If the desired &lt;xref:System.Windows.Forms.BindingManagerBase&gt; manages a list, the navigation path must also end with a list.","pos":[866,990],"source":"       If the desired <xref:System.Windows.Forms.BindingManagerBase> manages a list, the navigation path must also end with a list."},{"content":"For example, the following C# code binds a &lt;xref:System.Windows.Forms.TextBox&gt; control to the order date in a table of orders.","pos":[991,1117],"source":" For example, the following C# code binds a <xref:System.Windows.Forms.TextBox> control to the order date in a table of orders."},{"content":"The navigation path includes the &lt;xref:System.Data.DataTable.TableName%2A&gt;, the &lt;xref:System.Data.DataRelation.RelationName%2A&gt;, and the &lt;xref:System.Data.DataColumn.ColumnName%2A&gt;.","pos":[1118,1299],"source":" The navigation path includes the <xref:System.Data.DataTable.TableName%2A>, the <xref:System.Data.DataRelation.RelationName%2A>, and the <xref:System.Data.DataColumn.ColumnName%2A>."},{"content":"However, the &lt;xref:System.Windows.Forms.BindingManagerBase&gt; must be retrieved using only the &lt;xref:System.Data.DataTable.TableName%2A&gt; and &lt;xref:System.Data.DataRelation.RelationName%2A&gt; (which resolves to a list).","pos":[1300,1514],"source":" However, the <xref:System.Windows.Forms.BindingManagerBase> must be retrieved using only the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataRelation.RelationName%2A> (which resolves to a list)."},{"content":"<ph id=\"ph1\">```   // The navigation path for a Binding ends with a property.   textBox1.DataBindings.Add   (\"Text\", dataSet1, \"Customers.custToOrders.OrderDate\");   // The navigation path for the BindingManagerBase ends with a list.   BindingManagerBase bmOrders = this.BindingContext   [dataSet1, \"Customers.custToOrders\"];   ```</ph>       When returning a &lt;xref:System.Windows.Forms.BindingManagerBase&gt;, you should use the same data source as the &lt;xref:System.Windows.Forms.Binding&gt; and modify only the navigation path.","pos":[1520,2025],"source":"```   // The navigation path for a Binding ends with a property.   textBox1.DataBindings.Add   (\"Text\", dataSet1, \"Customers.custToOrders.OrderDate\");   // The navigation path for the BindingManagerBase ends with a list.   BindingManagerBase bmOrders = this.BindingContext   [dataSet1, \"Customers.custToOrders\"];   ```       When returning a <xref:System.Windows.Forms.BindingManagerBase>, you should use the same data source as the <xref:System.Windows.Forms.Binding> and modify only the navigation path."},{"content":"Use the &lt;xref:System.Windows.Forms.BindingContext.Contains%2A&gt; method to determine if the desired &lt;xref:System.Windows.Forms.BindingManagerBase&gt; already exists.","pos":[2032,2192],"source":"       Use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the desired <xref:System.Windows.Forms.BindingManagerBase> already exists."}]},{"pos":[29231,29337],"content":"The data source associated with a particular <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The data source associated with a particular <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>."},{"pos":[29404,29538],"content":"A navigation path containing the information that resolves to a specific <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A navigation path containing the information that resolves to a specific <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>."},{"pos":[29622,29733],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified data source and data member.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> for the specified data source and data member."},{"pos":[29880,29956],"content":"The specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dataMember</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist within the data source.","needQuote":true,"needEscape":true,"source":"The specified <code>dataMember</code> does not exist within the data source."},{"pos":[30560,30652],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingContext.CollectionChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.BindingContext.CollectionChanged\"></xref> event."},{"pos":[30665,31015],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnCollectionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnCollectionChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[165,273]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[274,348]}]},{"pos":[31255,31355],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.CollectionChangeEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.CollectionChangeEventArgs\"></xref> that contains the event data."},{"pos":[31855,31970],"content":"Deletes the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the specified data source.","needQuote":true,"needEscape":true,"source":"Deletes the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with the specified data source."},{"pos":[32119,32226],"content":"The data source associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The data source associated with the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> to remove."},{"pos":[32733,32848],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the specified data source.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with the specified data source."},{"pos":[33009,33116],"content":"The data source associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingManagerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The data source associated with the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> to remove."},{"pos":[33815,33910],"content":"Copies the elements of the collection into a specified array, starting at the collection index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the collection into a specified array, starting at the collection index.","pos":[0,95]}]},{"pos":[34464,34500],"content":"An <xref:System.Array> to copy into.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Array&gt; to copy into.","pos":[0,36],"source":"An <xref:System.Array> to copy into."}]},{"pos":[34561,34604],"content":"The collection index to begin copying from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection index to begin copying from.","pos":[0,43]}]},{"pos":[35234,35397],"content":"Gets the total number of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CurrencyManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects managed by the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the total number of <xref href=\"System.Windows.Forms.CurrencyManager\"></xref> objects managed by the <xref href=\"System.Windows.Forms.BindingContext\"></xref>."},{"pos":[36091,36190],"content":"The number of data sources managed by the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The number of data sources managed by the <xref href=\"System.Windows.Forms.BindingContext\"></xref>."},{"pos":[36864,36927],"content":"Gets a value indicating whether the collection is synchronized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the collection is synchronized.","pos":[0,63]}]},{"pos":[36939,37051],"content":"This property is derived from &lt;xref:System.Collections.ICollection&gt;, and is overridden to always return <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return `false`."},{"pos":[37193,37362],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection is thread safe; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is thread safe; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[38015,38073],"content":"Gets an object to use for synchronization (thread safety).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object to use for synchronization (thread safety).","pos":[0,58]}]},{"pos":[38210,38375],"content":"This property is derived from &lt;xref:System.Collections.ICollection&gt;, and is overridden to always return <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[39051,39089],"content":"Gets an enumerator for the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumerator for the collection.","pos":[0,38]}]},{"pos":[39101,39292],"content":"The <xref:System.Collections.IEnumerator> returned by the IEnumerable.GetEnumerator method allows you to iterate over the collection managed by the <xref:System.Windows.Forms.BindingContext>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.IEnumerator&gt; returned by the IEnumerable.GetEnumerator method allows you to iterate over the collection managed by the &lt;xref:System.Windows.Forms.BindingContext&gt;.","pos":[0,191],"source":"The <xref:System.Collections.IEnumerator> returned by the IEnumerable.GetEnumerator method allows you to iterate over the collection managed by the <xref:System.Windows.Forms.BindingContext>."}]},{"pos":[40056,40116],"content":"An <xref:System.Collections.IEnumerator> for the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; for the collection.","pos":[0,60],"source":"An <xref:System.Collections.IEnumerator> for the collection."}]},{"pos":[40826,40957],"content":"Associates a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Binding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with a new <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Associates a <xref href=\"System.Windows.Forms.Binding\"></xref> with a new <xref href=\"System.Windows.Forms.BindingContext\"></xref>."},{"pos":[40969,41152],"content":"This method is intended update the bindings of components that implement <xref:System.Windows.Forms.IBindableComponent>, when their <xref:System.Windows.Forms.BindingContext> changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is intended update the bindings of components that implement &lt;xref:System.Windows.Forms.IBindableComponent&gt;, when their &lt;xref:System.Windows.Forms.BindingContext&gt; changes.","pos":[0,183],"source":"This method is intended update the bindings of components that implement <xref:System.Windows.Forms.IBindableComponent>, when their <xref:System.Windows.Forms.BindingContext> changes."}]},{"pos":[41415,41552],"content":"The new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to associate with the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Binding\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The new <xref href=\"System.Windows.Forms.BindingContext\"></xref> to associate with the <xref href=\"System.Windows.Forms.Binding\"></xref>."},{"pos":[41631,41768],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Binding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to associate with the new <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Forms.Binding\"></xref> to associate with the new <xref href=\"System.Windows.Forms.BindingContext\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.BindingContext\n  id: BindingContext\n  children:\n  - System.Windows.Forms.BindingContext.#ctor\n  - System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)\n  - System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)\n  - System.Windows.Forms.BindingContext.Clear\n  - System.Windows.Forms.BindingContext.ClearCore\n  - System.Windows.Forms.BindingContext.CollectionChanged\n  - System.Windows.Forms.BindingContext.Contains(System.Object)\n  - System.Windows.Forms.BindingContext.Contains(System.Object,System.String)\n  - System.Windows.Forms.BindingContext.IsReadOnly\n  - System.Windows.Forms.BindingContext.Item(System.Object)\n  - System.Windows.Forms.BindingContext.Item(System.Object,System.String)\n  - System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)\n  - System.Windows.Forms.BindingContext.Remove(System.Object)\n  - System.Windows.Forms.BindingContext.RemoveCore(System.Object)\n  - System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Forms.BindingContext.System#Collections#ICollection#Count\n  - System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot\n  - System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)\n  langs:\n  - csharp\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.Windows.Forms.BindingContext\n  type: Class\n  summary: Manages the collection of <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> objects for any object that inherits from the <xref href=\"System.Windows.Forms.Control\"></xref> class.\n  remarks: \"Each Windows Form has at least one BindingContext object that manages the <xref:System.Windows.Forms.BindingManagerBase> objects for the form. Because the <xref:System.Windows.Forms.BindingManagerBase> class is abstract, the return type of the <xref:System.Windows.Forms.BindingContext.Item%2A> property is either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>. If the data source is an object that can return only a single property (instead of a list of objects), the <xref:System.Type> is a <xref:System.Windows.Forms.PropertyManager>. For example, if you specify a <xref:System.Windows.Forms.TextBox> as the data source, a <xref:System.Windows.Forms.PropertyManager> is returned. On the other hand, if the data source is an object that implements <xref:System.Collections.IList> or <xref:System.ComponentModel.IBindingList>, a <xref:System.Windows.Forms.CurrencyManager> is returned.  \\n  \\n For each data source on a Windows Form, there is a single <xref:System.Windows.Forms.CurrencyManager> or <xref:System.Windows.Forms.PropertyManager>. Because there may be multiple data sources associated with a Windows Form, the BindingContext enables you to retrieve any particular <xref:System.Windows.Forms.CurrencyManager> associated with a data source.  \\n  \\n> [!NOTE]\\n>  When using the <xref:System.Windows.Forms.BindingContext.Item%2A> property, the BindingContext creates a new <xref:System.Windows.Forms.BindingManagerBase> if one does not already exist. This can lead to some confusion, as the returned object may not manage the list (or any list) that you intend. To prevent returning an invalid <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the intended <xref:System.Windows.Forms.BindingManagerBase> already exists.  \\n  \\n If you use a container control, such as a <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.Panel>, or <xref:System.Windows.Forms.TabControl>, to contain data-bound controls, you can create a BindingContext for just that container control and its controls. Then, each part of your form can be managed by its own <xref:System.Windows.Forms.BindingManagerBase>. See the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor for more information about creating multiple <xref:System.Windows.Forms.BindingManagerBase> objects for the same data source.  \\n  \\n If you add a <xref:System.Windows.Forms.TextBox> control to a form and bind it to a column of a table in a dataset, the control communicates with the BindingContext of that form. The BindingContext, in turn, talks to the specific <xref:System.Windows.Forms.CurrencyManager> for that data association. If you queried the `Position` property of the <xref:System.Windows.Forms.CurrencyManager>, it would report the current record for the binding of that <xref:System.Windows.Forms.TextBox> control. In the following code example, a <xref:System.Windows.Forms.TextBox> control is bound to the `FirstName` column of a `Customers` table on the `dataSet1` dataset through the BindingContext for the form it is on.  \\n  \\n```vb#  \\nTextBox1.DataBindings.Add(\\\"Text\\\", dataSet1, \\\"Customers.FirstName\\\")  \\n  \\n```  \\n  \\n```c#  \\ntextBox1.DataBindings.Add(\\\"Text\\\", dataSet1, \\\"Customers.FirstName\\\");  \\n  \\n```  \\n  \\n```cpp  \\ntextBox1->DataBindings->Add(\\\"Text\\\", dataSet1, \\\"Customers.FirstName\\\");  \\n```  \\n  \\n You can add a second <xref:System.Windows.Forms.TextBox> control (`TextBox2`) to the form and bind it to the `LastName` column of the `Customers` table in the same dataset. The BindingContext is aware of the first binding (`TextBox1` to `Customers.FirstName`), so it would use the same <xref:System.Windows.Forms.CurrencyManager>, as both text boxes are bound to the same dataset (`DataSet1`).  \\n  \\n```vb#  \\nTextBox2.DataBindings.Add(\\\"Text\\\", dataSet1, \\\"Customers.LastName\\\")  \\n  \\n```  \\n  \\n```c#  \\ntextBox2.DataBindings.Add(\\\"Text\\\", dataSet1, \\\"Customers.LastName\\\");  \\n  \\n```  \\n  \\n```cpp  \\ntextBox2->DataBindings->Add(\\\"Text\\\", dataSet1, \\\"Customers.LastName\\\");  \\n```  \\n  \\n If you bind `TextBox2` to a different dataset, the BindingContext creates and manages a second <xref:System.Windows.Forms.CurrencyManager>.  \\n  \\n It is important to be consistent about how you set the <xref:System.Windows.Forms.ListControl.DataSource%2A> and <xref:System.Windows.Forms.ListControl.DisplayMember%2A> properties; otherwise, the BindingContext creates multiple currency managers for the same dataset, which results in errors. The following code example shows a few ways to set the properties and their associated BindingContext objects. You can set the properties using either of the following methods, as long as you are consistent throughout your code.  \\n  \\n```vb#  \\nComboBox1.DataSource = DataSet1  \\nComboBox1.DisplayMember = \\\"Customers.FirstName\\\"  \\nMe.BindingContext(dataSet1, \\\"Customers\\\").Position = 1  \\n  \\n```  \\n  \\n```c#  \\ncomboBox1.DataSource = DataSet1;  \\ncomboBox1.DisplayMember = \\\"Customers.FirstName\\\";  \\nthis.BindingContext[dataSet1, \\\"Customers\\\"].Position = 1;  \\n  \\n```  \\n  \\n```cpp  \\ncomboBox1->DataSource = dataSet1;  \\ncomboBox1->DisplayMember = \\\"Customers.FirstName\\\";  \\nthis->BindingContext->get_Item(dataSet1, \\\"Customers\\\")->Position = 1;  \\n  \\n```  \\n  \\n```vb#  \\nComboBox1.DataSource = DataSet1.Customers  \\nComboBox1.DisplayMember = \\\"FirstName\\\"  \\nMe.BindingContext(dataSet1.Customers).Position = 1  \\n  \\n```  \\n  \\n```c#  \\ncomboBox1.DataSource = DataSet1.Customers;  \\ncomboBox1.DisplayMember = \\\"FirstName\\\";  \\nthis.BindingContext[dataSet1.Customers].Position = 1;  \\n  \\n```  \\n  \\n```cpp  \\ncomboBox1->DataSource = dataSet1->Customers;  \\ncomboBox1->DisplayMember = \\\"FirstName\\\";  \\nthis->BindingContext->get_Item(dataSet1->Customers)->Position = 1;  \\n  \\n```  \\n  \\n> [!NOTE]\\n>  Most Windows Forms applications bind through a <xref:System.Windows.Forms.BindingSource>. The <xref:System.Windows.Forms.BindingSource> component encapsulates a <xref:System.Windows.Forms.CurrencyManager> and exposes the <xref:System.Windows.Forms.CurrencyManager> programming interface. When using a <xref:System.Windows.Forms.BindingSource> for binding, you should use the members exposed by the <xref:System.Windows.Forms.BindingSource> to manipulate \\\"currency\\\" (that is, `Position`) rather than go through the BindingContext.\"\n  example:\n  - \"The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls—a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls—to several data sources. The BindingContext is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.  \\n  \\n [!code-cpp[Classic BindingContext Example#1](~/add/codesnippet/cpp/t-system.windows.forms.b_7_1.cpp)]\\n [!code-cs[Classic BindingContext Example#1](~/add/codesnippet/csharp/t-system.windows.forms.b_7_1.cs)]\\n [!code-vb[Classic BindingContext Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.b_7_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"CollectionChanged\")]\n\n      public class BindingContext : System.Collections.ICollection\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: BindingContext()\n  nameWithType: BindingContext.BindingContext()\n  fullName: System.Windows.Forms.BindingContext.BindingContext()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.BindingContext\"></xref> class.\n  remarks: If you want to have multiple <xref:System.Windows.Forms.BindingManagerBase> instances for the same data source, create a new <xref:System.Windows.Forms.BindingContext> and set it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property of an object that inherits from the <xref:System.Windows.Forms.Control> class. For example, if you have two <xref:System.Windows.Forms.BindingManagerBase> objects (from two different <xref:System.Windows.Forms.BindingContext> objects), you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> properties of each <xref:System.Windows.Forms.BindingManagerBase> to different values. This causes each set of data-bound controls to display different values from the same data source.\n  example:\n  - \"The following code example creates two new <xref:System.Windows.Forms.BindingContext> objects and assigns each object to the <xref:System.Windows.Forms.BindingContext> property of a <xref:System.Windows.Forms.GroupBox> control. `GroupBox1` contains `TextBox1`, and `GroupBox2` contains `TextBox2` (which is accomplished by using the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> method of the <xref:System.Windows.Forms.Control.ControlCollection> class). The example then adds <xref:System.Windows.Forms.Binding> objects to the two <xref:System.Windows.Forms.TextBox> controls, binding each to the same data source and data member. The example also shows two event handlers that use the <xref:System.Windows.Forms.BindingContext> from the <xref:System.Windows.Forms.GroupBox> controls to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property on different <xref:System.Windows.Forms.BindingManagerBase> objects.  \\n  \\n [!code-cs[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_17_1.cs)]\\n [!code-cpp[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_17_1.cpp)]\\n [!code-vb[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_17_1.vb)]\"\n  syntax:\n    content: public BindingContext ();\n    parameters: []\n  overload: System.Windows.Forms.BindingContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)\n  id: Add(System.Object,System.Windows.Forms.BindingManagerBase)\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: Add(Object,BindingManagerBase)\n  nameWithType: BindingContext.Add(Object,BindingManagerBase)\n  fullName: System.Windows.Forms.BindingContext.Add(Object,BindingManagerBase)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Adds the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with a specific data source to the collection.\n  syntax:\n    content: protected void Add (object dataSource, System.Windows.Forms.BindingManagerBase listManager);\n    parameters:\n    - id: dataSource\n      type: System.Object\n      description: The <xref:System.Object> associated with the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>.\n    - id: listManager\n      type: System.Windows.Forms.BindingManagerBase\n      description: The <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> to add.\n  overload: System.Windows.Forms.BindingContext.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)\n  id: AddCore(System.Object,System.Windows.Forms.BindingManagerBase)\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: AddCore(Object,BindingManagerBase)\n  nameWithType: BindingContext.AddCore(Object,BindingManagerBase)\n  fullName: System.Windows.Forms.BindingContext.AddCore(Object,BindingManagerBase)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Adds the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with a specific data source to the collection.\n  syntax:\n    content: protected virtual void AddCore (object dataSource, System.Windows.Forms.BindingManagerBase listManager);\n    parameters:\n    - id: dataSource\n      type: System.Object\n      description: The object associated with the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>.\n    - id: listManager\n      type: System.Windows.Forms.BindingManagerBase\n      description: The <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> to add.\n  overload: System.Windows.Forms.BindingContext.AddCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>dataSource</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>listManager</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.Clear\n  id: Clear\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: BindingContext.Clear()\n  fullName: System.Windows.Forms.BindingContext.Clear()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Clears the collection of any <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> objects.\n  syntax:\n    content: protected void Clear ();\n    parameters: []\n  overload: System.Windows.Forms.BindingContext.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.ClearCore\n  id: ClearCore\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: ClearCore()\n  nameWithType: BindingContext.ClearCore()\n  fullName: System.Windows.Forms.BindingContext.ClearCore()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Clears the collection.\n  syntax:\n    content: protected virtual void ClearCore ();\n    parameters: []\n  overload: System.Windows.Forms.BindingContext.ClearCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.CollectionChanged\n  id: CollectionChanged\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: CollectionChanged\n  nameWithType: BindingContext.CollectionChanged\n  fullName: System.Windows.Forms.BindingContext.CollectionChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Always raises a <xref:System.NotImplementedException> when handled.\n  remarks: The CollectionChanged event is obsolete and always raises a <xref:System.NotImplementedException> when handled. For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;\n    return:\n      type: System.ComponentModel.CollectionChangeEventHandler\n      description: To be added.\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Occurs in all cases.\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: BindingContext.Contains(Object)\n  fullName: System.Windows.Forms.BindingContext.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the <xref href=\"System.Windows.Forms.BindingContext\"></xref> contains the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with the specified data source.\n  remarks: \"See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and information about creating bindings between controls and data sources.  \\n  \\n See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using only a data source.\"\n  example:\n  - \"The following code example uses the Contains method to determine whether a <xref:System.Windows.Forms.BindingManagerBase> exists for each control on a form. The example passes each <xref:System.Data.DataTable> in a <xref:System.Data.DataSet> to the method.  \\n  \\n [!code-vb[Classic BindingContext.Contains Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_9_1.vb)]\\n [!code-cs[Classic BindingContext.Contains Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_9_1.cs)]\\n [!code-cpp[Classic BindingContext.Contains Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_9_1.cpp)]\"\n  syntax:\n    content: public bool Contains (object dataSource);\n    parameters:\n    - id: dataSource\n      type: System.Object\n      description: An <xref:System.Object> that represents the data source.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.BindingContext\"></xref> contains the specified <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.BindingContext.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.Contains(System.Object,System.String)\n  id: Contains(System.Object,System.String)\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: Contains(Object,String)\n  nameWithType: BindingContext.Contains(Object,String)\n  fullName: System.Windows.Forms.BindingContext.Contains(Object,String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the <xref href=\"System.Windows.Forms.BindingContext\"></xref> contains the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with the specified data source and data member.\n  remarks: \"See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.  \\n  \\n See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using a data source and data member.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to test whether a specific <xref:System.Windows.Forms.BindingManagerBase> exists before attempting to get it through the <xref:System.Windows.Forms.BindingContext.Item%2A> property.  \\n  \\n [!code-cs[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_18_1.cs)]\\n [!code-vb[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_18_1.vb)]\\n [!code-cpp[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_18_1.cpp)]\"\n  syntax:\n    content: public bool Contains (object dataSource, string dataMember);\n    parameters:\n    - id: dataSource\n      type: System.Object\n      description: An <xref:System.Object> that represents the data source.\n    - id: dataMember\n      type: System.String\n      description: The information needed to resolve to a specific <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.BindingContext\"></xref> contains the specified <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.BindingContext.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: BindingContext.IsReadOnly\n  fullName: System.Windows.Forms.BindingContext.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the collection is read-only.\n  remarks: This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return `false`.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.BindingContext.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.Item(System.Object)\n  id: Item(System.Object)\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: Item(Object)\n  nameWithType: BindingContext.Item(Object)\n  fullName: System.Windows.Forms.BindingContext.Item(Object)\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> that is associated with the specified data source.\n  remarks: \"Use this overload if the <xref:System.Windows.Forms.BindingManagerBase> you want does not require a navigation path. For example, if the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects that use an <xref:System.Collections.ArrayList> or <xref:System.Data.DataTable> as the <xref:System.Windows.Forms.Binding.DataSource%2A>, no navigation path is required.  \\n  \\n> [!NOTE]\\n>  The Item property will always return a <xref:System.Windows.Forms.BindingManagerBase>, and never return `null`.  \\n  \\n See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.\"\n  example:\n  - \"The following code example returns three <xref:System.Windows.Forms.BindingManagerBase> objects: one for a <xref:System.Data.DataView>, one for an <xref:System.Collections.ArrayList>, and one for the <xref:System.Windows.Forms.Binding.DataSource%2A> of a <xref:System.Windows.Forms.Binding> that belongs to a <xref:System.Windows.Forms.TextBox> control.  \\n  \\n [!code-cs[Classic BindingContext.this Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_30_1.cs)]\\n [!code-cpp[Classic BindingContext.this Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_30_1.cpp)]\\n [!code-vb[Classic BindingContext.this Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_30_1.vb)]\"\n  syntax:\n    content: public System.Windows.Forms.BindingManagerBase this[object dataSource] { get; }\n    parameters:\n    - id: dataSource\n      type: System.Object\n      description: The data source associated with a particular <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>.\n    return:\n      type: System.Windows.Forms.BindingManagerBase\n      description: A <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> for the specified data source.\n  overload: System.Windows.Forms.BindingContext.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.Item(System.Object,System.String)\n  id: Item(System.Object,System.String)\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: Item(Object,String)\n  nameWithType: BindingContext.Item(Object,String)\n  fullName: System.Windows.Forms.BindingContext.Item(Object,String)\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> that is associated with the specified data source and data member.\n  remarks: \"Use this overload when the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects for which the data source contains multiple objects. For example, a <xref:System.Data.DataSet> can contain several <xref:System.Data.DataTable> objects linked by <xref:System.Data.DataRelation> objects. In such a case, the navigation path is required to enable the <xref:System.Windows.Forms.BindingContext> to return the correct <xref:System.Windows.Forms.BindingManagerBase>.  \\n  \\n> [!NOTE]\\n>  The Item property will always return a <xref:System.Windows.Forms.BindingManagerBase>, when the `dataMember` parameter is valid. It will never return `null`.  \\n  \\n See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.  \\n  \\n If the desired <xref:System.Windows.Forms.BindingManagerBase> manages a list, the navigation path must also end with a list. For example, the following C# code binds a <xref:System.Windows.Forms.TextBox> control to the order date in a table of orders. The navigation path includes the <xref:System.Data.DataTable.TableName%2A>, the <xref:System.Data.DataRelation.RelationName%2A>, and the <xref:System.Data.DataColumn.ColumnName%2A>. However, the <xref:System.Windows.Forms.BindingManagerBase> must be retrieved using only the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataRelation.RelationName%2A> (which resolves to a list).  \\n  \\n```  \\n// The navigation path for a Binding ends with a property.  \\ntextBox1.DataBindings.Add  \\n(\\\"Text\\\", dataSet1, \\\"Customers.custToOrders.OrderDate\\\");  \\n// The navigation path for the BindingManagerBase ends with a list.  \\nBindingManagerBase bmOrders = this.BindingContext  \\n[dataSet1, \\\"Customers.custToOrders\\\"];  \\n```  \\n  \\n When returning a <xref:System.Windows.Forms.BindingManagerBase>, you should use the same data source as the <xref:System.Windows.Forms.Binding> and modify only the navigation path.  \\n  \\n Use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the desired <xref:System.Windows.Forms.BindingManagerBase> already exists.\"\n  example:\n  - \"The following code example demonstrates how to use the Item to retrieve the <xref:System.Windows.Forms.BindingManagerBase> for a particular binding. It also shows how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event for the <xref:System.Windows.Forms.BindingManagerBase> to ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed. To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \\n  \\n [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/visualbasic/p-system.windows.forms.b_17_1.vb)]\\n [!code-cs[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/csharp/p-system.windows.forms.b_17_1.cs)]\"\n  syntax:\n    content: public System.Windows.Forms.BindingManagerBase this[object dataSource, string dataMember] { get; }\n    parameters:\n    - id: dataSource\n      type: System.Object\n      description: The data source associated with a particular <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>.\n    - id: dataMember\n      type: System.String\n      description: A navigation path containing the information that resolves to a specific <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref>.\n    return:\n      type: System.Windows.Forms.BindingManagerBase\n      description: The <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> for the specified data source and data member.\n  overload: System.Windows.Forms.BindingContext.Item*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: The specified <code>dataMember</code> does not exist within the data source.\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)\n  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: OnCollectionChanged(CollectionChangeEventArgs)\n  nameWithType: BindingContext.OnCollectionChanged(CollectionChangeEventArgs)\n  fullName: System.Windows.Forms.BindingContext.OnCollectionChanged(CollectionChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.BindingContext.CollectionChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnCollectionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);\n    parameters:\n    - id: ccevent\n      type: System.ComponentModel.CollectionChangeEventArgs\n      description: A <xref href=\"System.ComponentModel.CollectionChangeEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.BindingContext.OnCollectionChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.Remove(System.Object)\n  id: Remove(System.Object)\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: Remove(Object)\n  nameWithType: BindingContext.Remove(Object)\n  fullName: System.Windows.Forms.BindingContext.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Deletes the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with the specified data source.\n  syntax:\n    content: protected void Remove (object dataSource);\n    parameters:\n    - id: dataSource\n      type: System.Object\n      description: The data source associated with the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> to remove.\n  overload: System.Windows.Forms.BindingContext.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.RemoveCore(System.Object)\n  id: RemoveCore(System.Object)\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: RemoveCore(Object)\n  nameWithType: BindingContext.RemoveCore(Object)\n  fullName: System.Windows.Forms.BindingContext.RemoveCore(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Removes the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> associated with the specified data source.\n  syntax:\n    content: protected virtual void RemoveCore (object dataSource);\n    parameters:\n    - id: dataSource\n      type: System.Object\n      description: The data source associated with the <xref href=\"System.Windows.Forms.BindingManagerBase\"></xref> to remove.\n  overload: System.Windows.Forms.BindingContext.RemoveCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Copies the elements of the collection into a specified array, starting at the collection index.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/csharp/030fb284-4e33-401e-88b7-_1.cs)]\n     [!code-cpp[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/cpp/030fb284-4e33-401e-88b7-_1.cpp)]\n     [!code-vb[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/visualbasic/030fb284-4e33-401e-88b7-_1.vb)]\n  syntax:\n    content: void ICollection.CopyTo (Array ar, int index);\n    parameters:\n    - id: ar\n      type: System.Array\n      description: An <xref:System.Array> to copy into.\n    - id: index\n      type: System.Int32\n      description: The collection index to begin copying from.\n  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: BindingContext.System.Collections.ICollection.Count\n  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the total number of <xref href=\"System.Windows.Forms.CurrencyManager\"></xref> objects managed by the <xref href=\"System.Windows.Forms.BindingContext\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example returns the number of <xref:System.Windows.Forms.CurrencyManager> objects managed by the <xref:System.Windows.Forms.BindingContext>.  \\n  \\n [!code-vb[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/visualbasic/24e4ccaa-040d-4b41-b443-_1.vb)]\\n [!code-cpp[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/cpp/24e4ccaa-040d-4b41-b443-_1.cpp)]\\n [!code-cs[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/csharp/24e4ccaa-040d-4b41-b443-_1.cs)]\"\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: The number of data sources managed by the <xref href=\"System.Windows.Forms.BindingContext\"></xref>.\n  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the collection is synchronized.\n  remarks: This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return `false`.\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is thread safe; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an object to use for synchronization (thread safety).\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Forms.BindingContext.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an enumerator for the collection.\n  remarks: The <xref:System.Collections.IEnumerator> returned by the IEnumerable.GetEnumerator method allows you to iterate over the collection managed by the <xref:System.Windows.Forms.BindingContext>.\n  example:\n  - \"The following code example uses the IEnumerable.GetEnumerator method to return an <xref:System.Collections.IEnumerator> for the <xref:System.Windows.Forms.BindingContext>.  \\n  \\n [!code-cs[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/csharp/dec1c1ce-5dab-481d-86dd-_1.cs)]\\n [!code-cpp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/cpp/dec1c1ce-5dab-481d-86dd-_1.cpp)]\\n [!code-vb[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/visualbasic/dec1c1ce-5dab-481d-86dd-_1.vb)]\"\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> for the collection.\n  overload: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)\n  id: UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)\n  parent: System.Windows.Forms.BindingContext\n  langs:\n  - csharp\n  name: UpdateBinding(BindingContext,Binding)\n  nameWithType: BindingContext.UpdateBinding(BindingContext,Binding)\n  fullName: System.Windows.Forms.BindingContext.UpdateBinding(BindingContext,Binding)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Associates a <xref href=\"System.Windows.Forms.Binding\"></xref> with a new <xref href=\"System.Windows.Forms.BindingContext\"></xref>.\n  remarks: This method is intended update the bindings of components that implement <xref:System.Windows.Forms.IBindableComponent>, when their <xref:System.Windows.Forms.BindingContext> changes.\n  syntax:\n    content: public static void UpdateBinding (System.Windows.Forms.BindingContext newBindingContext, System.Windows.Forms.Binding binding);\n    parameters:\n    - id: newBindingContext\n      type: System.Windows.Forms.BindingContext\n      description: The new <xref href=\"System.Windows.Forms.BindingContext\"></xref> to associate with the <xref href=\"System.Windows.Forms.Binding\"></xref>.\n    - id: binding\n      type: System.Windows.Forms.Binding\n      description: The <xref href=\"System.Windows.Forms.Binding\"></xref> to associate with the new <xref href=\"System.Windows.Forms.BindingContext\"></xref>.\n  overload: System.Windows.Forms.BindingContext.UpdateBinding*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.NotImplementedException\n  isExternal: true\n  name: System.NotImplementedException\n- uid: System.Exception\n  isExternal: true\n  name: System.Exception\n- uid: System.Windows.Forms.BindingContext.#ctor\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: BindingContext()\n  nameWithType: BindingContext.BindingContext()\n  fullName: System.Windows.Forms.BindingContext.BindingContext()\n- uid: System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Add(Object,BindingManagerBase)\n  nameWithType: BindingContext.Add(Object,BindingManagerBase)\n  fullName: System.Windows.Forms.BindingContext.Add(Object,BindingManagerBase)\n- uid: System.Windows.Forms.BindingManagerBase\n  parent: System.Windows.Forms\n  isExternal: false\n  name: BindingManagerBase\n  nameWithType: BindingManagerBase\n  fullName: System.Windows.Forms.BindingManagerBase\n- uid: System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: AddCore(Object,BindingManagerBase)\n  nameWithType: BindingContext.AddCore(Object,BindingManagerBase)\n  fullName: System.Windows.Forms.BindingContext.AddCore(Object,BindingManagerBase)\n- uid: System.Windows.Forms.BindingContext.Clear\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Clear()\n  nameWithType: BindingContext.Clear()\n  fullName: System.Windows.Forms.BindingContext.Clear()\n- uid: System.Windows.Forms.BindingContext.ClearCore\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: ClearCore()\n  nameWithType: BindingContext.ClearCore()\n  fullName: System.Windows.Forms.BindingContext.ClearCore()\n- uid: System.Windows.Forms.BindingContext.CollectionChanged\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: CollectionChanged\n  nameWithType: BindingContext.CollectionChanged\n  fullName: System.Windows.Forms.BindingContext.CollectionChanged\n- uid: System.ComponentModel.CollectionChangeEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: CollectionChangeEventHandler\n  nameWithType: CollectionChangeEventHandler\n  fullName: System.ComponentModel.CollectionChangeEventHandler\n- uid: System.Windows.Forms.BindingContext.Contains(System.Object)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: BindingContext.Contains(Object)\n  fullName: System.Windows.Forms.BindingContext.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.BindingContext.Contains(System.Object,System.String)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Contains(Object,String)\n  nameWithType: BindingContext.Contains(Object,String)\n  fullName: System.Windows.Forms.BindingContext.Contains(Object,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.BindingContext.IsReadOnly\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: BindingContext.IsReadOnly\n  fullName: System.Windows.Forms.BindingContext.IsReadOnly\n- uid: System.Windows.Forms.BindingContext.Item(System.Object)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Item(Object)\n  nameWithType: BindingContext.Item(Object)\n  fullName: System.Windows.Forms.BindingContext.Item(Object)\n- uid: System.Windows.Forms.BindingContext.Item(System.Object,System.String)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Item(Object,String)\n  nameWithType: BindingContext.Item(Object,String)\n  fullName: System.Windows.Forms.BindingContext.Item(Object,String)\n- uid: System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: OnCollectionChanged(CollectionChangeEventArgs)\n  nameWithType: BindingContext.OnCollectionChanged(CollectionChangeEventArgs)\n  fullName: System.Windows.Forms.BindingContext.OnCollectionChanged(CollectionChangeEventArgs)\n- uid: System.ComponentModel.CollectionChangeEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CollectionChangeEventArgs\n  nameWithType: CollectionChangeEventArgs\n  fullName: System.ComponentModel.CollectionChangeEventArgs\n- uid: System.Windows.Forms.BindingContext.Remove(System.Object)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: BindingContext.Remove(Object)\n  fullName: System.Windows.Forms.BindingContext.Remove(Object)\n- uid: System.Windows.Forms.BindingContext.RemoveCore(System.Object)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: RemoveCore(Object)\n  nameWithType: BindingContext.RemoveCore(Object)\n  fullName: System.Windows.Forms.BindingContext.RemoveCore(Object)\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: BindingContext.System.Collections.ICollection.Count\n  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.Count\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.IsSynchronized\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.SyncRoot\n- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Forms.BindingContext.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: UpdateBinding(BindingContext,Binding)\n  nameWithType: BindingContext.UpdateBinding(BindingContext,Binding)\n  fullName: System.Windows.Forms.BindingContext.UpdateBinding(BindingContext,Binding)\n- uid: System.Windows.Forms.BindingContext\n  parent: System.Windows.Forms\n  isExternal: false\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.Windows.Forms.BindingContext\n- uid: System.Windows.Forms.Binding\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.Windows.Forms.Binding\n- uid: System.Windows.Forms.BindingContext.#ctor*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: BindingContext\n  nameWithType: BindingContext.BindingContext\n- uid: System.Windows.Forms.BindingContext.Add*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Add\n  nameWithType: BindingContext.Add\n- uid: System.Windows.Forms.BindingContext.AddCore*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: AddCore\n  nameWithType: BindingContext.AddCore\n- uid: System.Windows.Forms.BindingContext.Clear*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Clear\n  nameWithType: BindingContext.Clear\n- uid: System.Windows.Forms.BindingContext.ClearCore*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: ClearCore\n  nameWithType: BindingContext.ClearCore\n- uid: System.Windows.Forms.BindingContext.Contains*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Contains\n  nameWithType: BindingContext.Contains\n- uid: System.Windows.Forms.BindingContext.IsReadOnly*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: BindingContext.IsReadOnly\n- uid: System.Windows.Forms.BindingContext.Item*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Item\n  nameWithType: BindingContext.Item\n- uid: System.Windows.Forms.BindingContext.OnCollectionChanged*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: OnCollectionChanged\n  nameWithType: BindingContext.OnCollectionChanged\n- uid: System.Windows.Forms.BindingContext.Remove*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: Remove\n  nameWithType: BindingContext.Remove\n- uid: System.Windows.Forms.BindingContext.RemoveCore*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: RemoveCore\n  nameWithType: BindingContext.RemoveCore\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: BindingContext.System.Collections.ICollection.CopyTo\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: BindingContext.System.Collections.ICollection.Count\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized\n- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot\n- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Windows.Forms.BindingContext.UpdateBinding*\n  parent: System.Windows.Forms.BindingContext\n  isExternal: false\n  name: UpdateBinding\n  nameWithType: BindingContext.UpdateBinding\n"}