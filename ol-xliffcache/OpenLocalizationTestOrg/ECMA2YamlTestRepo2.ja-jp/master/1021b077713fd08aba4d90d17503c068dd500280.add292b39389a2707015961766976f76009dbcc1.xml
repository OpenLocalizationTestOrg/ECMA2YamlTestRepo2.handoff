{"nodes":[{"pos":[829,907],"content":"Represents a user or user-group for granting access to rights managed content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a user or user-group for granting access to rights managed content.","pos":[0,78]}]},{"pos":[919,1034],"content":"As with other <xref:System.Security.RightsManagement> types, ContentUser is only usable in full trust applications.","needQuote":true,"needEscape":true,"nodes":[{"content":"As with other &lt;xref:System.Security.RightsManagement&gt; types, ContentUser is only usable in full trust applications.","pos":[0,115],"source":"As with other <xref:System.Security.RightsManagement> types, ContentUser is only usable in full trust applications."}]},{"pos":[2331,2437],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.ContentUser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> class."},{"pos":[2449,2620],"content":"The user or group <ph id=\"ph1\">`name`</ph> is often in the form of an individual e-mail address (such as <ph id=\"ph2\">johndoe@contoso.com</ph>) or an e-mail distribution list (such as <ph id=\"ph3\">marketing@contoso.com</ph>).","needQuote":true,"needEscape":true,"source":"The user or group `name` is often in the form of an individual e-mail address (such as johndoe@contoso.com) or an e-mail distribution list (such as marketing@contoso.com)."},{"pos":[3204,3227],"content":"The user or group name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user or group name.","pos":[0,23]}]},{"pos":[3340,3370],"content":"The method for authentication.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method for authentication.","pos":[0,30]}]},{"pos":[3860,3967],"content":"Gets an instance of the \"Anyone\" <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.ContentUser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> persona.","needQuote":true,"needEscape":true,"source":"Gets an instance of the \"Anyone\" <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> persona."},{"pos":[3980,4525],"content":"AnyoneUser has <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \"Internal\" and <xref:System.Security.RightsManagement.ContentUser.Name%2A> \"Anyone\".       If <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \"Internal\" with <xref:System.Security.RightsManagement.ContentUser.Name%2A> \"Anyone\" is granted rights during publishing, the authentication server will issue a <xref:System.Security.RightsManagement.UseLicense> to any request and will attach the license to the requesting user.","needQuote":false,"needEscape":true,"nodes":[{"content":"AnyoneUser has <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \"Internal\" and <xref:System.Security.RightsManagement.ContentUser.Name%2A> \"Anyone\".       If <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \"Internal\" with <xref:System.Security.RightsManagement.ContentUser.Name%2A> \"Anyone\" is granted rights during publishing, the authentication server will issue a <xref:System.Security.RightsManagement.UseLicense> to any request and will attach the license to the requesting user.","pos":[0,535],"nodes":[{"content":"AnyoneUser has &lt;xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A&gt; \"Internal\" and &lt;xref:System.Security.RightsManagement.ContentUser.Name%2A&gt; \"Anyone\".","pos":[0,173],"source":"AnyoneUser has <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \"Internal\" and <xref:System.Security.RightsManagement.ContentUser.Name%2A> \"Anyone\"."},{"content":"If &lt;xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A&gt; \"Internal\" with &lt;xref:System.Security.RightsManagement.ContentUser.Name%2A&gt; \"Anyone\" is granted rights during publishing, the authentication server will issue a &lt;xref:System.Security.RightsManagement.UseLicense&gt; to any request and will attach the license to the requesting user.","pos":[180,535],"source":"       If <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \"Internal\" with <xref:System.Security.RightsManagement.ContentUser.Name%2A> \"Anyone\" is granted rights during publishing, the authentication server will issue a <xref:System.Security.RightsManagement.UseLicense> to any request and will attach the license to the requesting user."}]}]},{"pos":[4717,4819],"content":"An instance of the \"Anyone\" <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.ContentUser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> persona.","needQuote":true,"needEscape":true,"source":"An instance of the \"Anyone\" <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> persona."},{"pos":[5354,5534],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.AuthenticationType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specified to the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.RightsManagement.ContentUser.%23ctor%2A<ph id=\"ph2\">&amp;gt;</ph> constructor.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Security.RightsManagement.AuthenticationType\"></xref> specified to the &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; constructor."},{"pos":[5740,5915],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.AuthenticationType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specified to the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.RightsManagement.ContentUser.%23ctor%2A<ph id=\"ph2\">&amp;gt;</ph> constructor.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.RightsManagement.AuthenticationType\"></xref> specified to the &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; constructor."},{"pos":[6450,6600],"content":"Returns a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.ContentUser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is equivalent to another given instance.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether this <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> is equivalent to another given instance."},{"pos":[6741,6783],"content":"The user instance to compare for equality.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user instance to compare for equality.","pos":[0,42]}]},{"pos":[6842,7166],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if &lt;xref:System.Security.RightsManagement.ContentUser.Name<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Security.RightsManagement.ContentUser.AuthenticationType<ept id=\"p2\">*</ept>&gt; are the same for both this user and the given user; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Security.RightsManagement.ContentUser.Name*> and <xref:System.Security.RightsManagement.ContentUser.AuthenticationType*> are the same for both this user and the given user; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7666,7847],"content":"Returns a computed hash code based on the user &lt;xref:System.Security.RightsManagement.ContentUser.Name<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Security.RightsManagement.ContentUser.AuthenticationType<ept id=\"p1\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"Returns a computed hash code based on the user <xref:System.Security.RightsManagement.ContentUser.Name*> and <xref:System.Security.RightsManagement.ContentUser.AuthenticationType*>."},{"pos":[7982,8151],"content":"A hash code computed from the user &lt;xref:System.Security.RightsManagement.ContentUser.Name<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Security.RightsManagement.ContentUser.AuthenticationType<ept id=\"p1\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"A hash code computed from the user <xref:System.Security.RightsManagement.ContentUser.Name*> and <xref:System.Security.RightsManagement.ContentUser.AuthenticationType*>."},{"pos":[8676,8751],"content":"Returns a value that indicates whether the user is currently authenticated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the user is currently authenticated.","pos":[0,75]}]},{"pos":[8764,9175],"content":"The given user <xref:System.Security.RightsManagement.ContentUser.Name%2A> is authenticated based on the given <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>.       After a user has been authenticated and IsAuthenticated is `true`, the user dialog and prompt to confirm authentication is no longer displayed when creating a <xref:System.Security.RightsManagement.SecureEnvironment>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The given user &lt;xref:System.Security.RightsManagement.ContentUser.Name%2A&gt; is authenticated based on the given &lt;xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A&gt;.","pos":[0,185],"source":"The given user <xref:System.Security.RightsManagement.ContentUser.Name%2A> is authenticated based on the given <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>."},{"content":"After a user has been authenticated and IsAuthenticated is <ph id=\"ph1\">`true`</ph>, the user dialog and prompt to confirm authentication is no longer displayed when creating a &lt;xref:System.Security.RightsManagement.SecureEnvironment&gt;.","pos":[192,409],"source":"       After a user has been authenticated and IsAuthenticated is `true`, the user dialog and prompt to confirm authentication is no longer displayed when creating a <xref:System.Security.RightsManagement.SecureEnvironment>."}]},{"pos":[9309,9584],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is currently authenticated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> until authenticated.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user is currently authenticated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,175],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is currently authenticated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> until authenticated.","pos":[177,275],"source":"  The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> until authenticated."}]},{"pos":[10054,10180],"content":"Gets the user or group name specified to the &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the user or group name specified to the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.RightsManagement.ContentUser.%23ctor%2A<ph id=\"ph2\">&amp;gt;</ph> constructor.","pos":[0,126],"source":"Gets the user or group name specified to the &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; constructor."}]},{"pos":[10289,10410],"content":"The user or group name specified to the &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user or group name specified to the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Security.RightsManagement.ContentUser.%23ctor%2A<ph id=\"ph2\">&amp;gt;</ph> constructor.","pos":[0,121],"source":"The user or group name specified to the &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; constructor."}]},{"pos":[10894,11000],"content":"Gets an instance of the \"Owner\" <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.ContentUser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> persona.","needQuote":true,"needEscape":true,"source":"Gets an instance of the \"Owner\" <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> persona."},{"pos":[11013,11341],"content":"OwnerUser has <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \"Internal\" and <xref:System.Security.RightsManagement.ContentUser.Name%2A> \"Owner\".       OwnerUser is used by the server-side templates to give special rights to the content author or publisher when the protected document is created.","needQuote":false,"needEscape":true,"nodes":[{"content":"OwnerUser has <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \"Internal\" and <xref:System.Security.RightsManagement.ContentUser.Name%2A> \"Owner\".       OwnerUser is used by the server-side templates to give special rights to the content author or publisher when the protected document is created.","pos":[0,322],"nodes":[{"content":"OwnerUser has &lt;xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A&gt; \"Internal\" and &lt;xref:System.Security.RightsManagement.ContentUser.Name%2A&gt; \"Owner\".","pos":[0,171],"source":"OwnerUser has <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \"Internal\" and <xref:System.Security.RightsManagement.ContentUser.Name%2A> \"Owner\"."},{"content":"OwnerUser is used by the server-side templates to give special rights to the content author or publisher when the protected document is created.","pos":[178,322]}]}]},{"pos":[11532,11633],"content":"An instance of the \"Owner\" <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.ContentUser\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> persona.","needQuote":true,"needEscape":true,"source":"An instance of the \"Owner\" <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> persona."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.RightsManagement.ContentUser\n  id: ContentUser\n  children:\n  - System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)\n  - System.Security.RightsManagement.ContentUser.AnyoneUser\n  - System.Security.RightsManagement.ContentUser.AuthenticationType\n  - System.Security.RightsManagement.ContentUser.Equals(System.Object)\n  - System.Security.RightsManagement.ContentUser.GetHashCode\n  - System.Security.RightsManagement.ContentUser.IsAuthenticated\n  - System.Security.RightsManagement.ContentUser.Name\n  - System.Security.RightsManagement.ContentUser.OwnerUser\n  langs:\n  - csharp\n  name: ContentUser\n  nameWithType: ContentUser\n  fullName: System.Security.RightsManagement.ContentUser\n  type: Class\n  summary: Represents a user or user-group for granting access to rights managed content.\n  remarks: As with other <xref:System.Security.RightsManagement> types, ContentUser is only usable in full trust applications.\n  example:\n  - \"The following example shows how to use <xref:System.Security.RightsManagement.UnsignedPublishLicense.Owner%2A> property to assign a variable of this type.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public class ContentUser\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)\n  id: '#ctor(System.String,System.Security.RightsManagement.AuthenticationType)'\n  parent: System.Security.RightsManagement.ContentUser\n  langs:\n  - csharp\n  name: ContentUser(String,AuthenticationType)\n  nameWithType: ContentUser.ContentUser(String,AuthenticationType)\n  fullName: System.Security.RightsManagement.ContentUser.ContentUser(String,AuthenticationType)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Initializes a new instance of the <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> class.\n  remarks: The user or group `name` is often in the form of an individual e-mail address (such as johndoe@contoso.com) or an e-mail distribution list (such as marketing@contoso.com).\n  example:\n  - \"The following example shows how to use this constructor to create a secure environment.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubsecenv)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubsecenv)]\"\n  syntax:\n    content: public ContentUser (string name, System.Security.RightsManagement.AuthenticationType authenticationType);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user or group name.\n    - id: authenticationType\n      type: System.Security.RightsManagement.AuthenticationType\n      description: The method for authentication.\n  overload: System.Security.RightsManagement.ContentUser.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.ContentUser.AnyoneUser\n  id: AnyoneUser\n  parent: System.Security.RightsManagement.ContentUser\n  langs:\n  - csharp\n  name: AnyoneUser\n  nameWithType: ContentUser.AnyoneUser\n  fullName: System.Security.RightsManagement.ContentUser.AnyoneUser\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets an instance of the \"Anyone\" <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> persona.\n  remarks: \"AnyoneUser has <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \\\"Internal\\\" and <xref:System.Security.RightsManagement.ContentUser.Name%2A> \\\"Anyone\\\".  \\n  \\n If <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \\\"Internal\\\" with <xref:System.Security.RightsManagement.ContentUser.Name%2A> \\\"Anyone\\\" is granted rights during publishing, the authentication server will issue a <xref:System.Security.RightsManagement.UseLicense> to any request and will attach the license to the requesting user.\"\n  syntax:\n    content: public static System.Security.RightsManagement.ContentUser AnyoneUser { get; }\n    return:\n      type: System.Security.RightsManagement.ContentUser\n      description: An instance of the \"Anyone\" <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> persona.\n  overload: System.Security.RightsManagement.ContentUser.AnyoneUser*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.ContentUser.AuthenticationType\n  id: AuthenticationType\n  parent: System.Security.RightsManagement.ContentUser\n  langs:\n  - csharp\n  name: AuthenticationType\n  nameWithType: ContentUser.AuthenticationType\n  fullName: System.Security.RightsManagement.ContentUser.AuthenticationType\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the <xref href=\"System.Security.RightsManagement.AuthenticationType\"></xref> specified to the &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; constructor.\n  syntax:\n    content: public System.Security.RightsManagement.AuthenticationType AuthenticationType { get; }\n    return:\n      type: System.Security.RightsManagement.AuthenticationType\n      description: The <xref href=\"System.Security.RightsManagement.AuthenticationType\"></xref> specified to the &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; constructor.\n  overload: System.Security.RightsManagement.ContentUser.AuthenticationType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.ContentUser.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.RightsManagement.ContentUser\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ContentUser.Equals(Object)\n  fullName: System.Security.RightsManagement.ContentUser.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns a value that indicates whether this <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> is equivalent to another given instance.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The user instance to compare for equality.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Security.RightsManagement.ContentUser.Name*> and <xref:System.Security.RightsManagement.ContentUser.AuthenticationType*> are the same for both this user and the given user; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.RightsManagement.ContentUser.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.ContentUser.GetHashCode\n  id: GetHashCode\n  parent: System.Security.RightsManagement.ContentUser\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ContentUser.GetHashCode()\n  fullName: System.Security.RightsManagement.ContentUser.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns a computed hash code based on the user <xref:System.Security.RightsManagement.ContentUser.Name*> and <xref:System.Security.RightsManagement.ContentUser.AuthenticationType*>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code computed from the user <xref:System.Security.RightsManagement.ContentUser.Name*> and <xref:System.Security.RightsManagement.ContentUser.AuthenticationType*>.\n  overload: System.Security.RightsManagement.ContentUser.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated\n  id: IsAuthenticated\n  parent: System.Security.RightsManagement.ContentUser\n  langs:\n  - csharp\n  name: IsAuthenticated()\n  nameWithType: ContentUser.IsAuthenticated()\n  fullName: System.Security.RightsManagement.ContentUser.IsAuthenticated()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns a value that indicates whether the user is currently authenticated.\n  remarks: \"The given user <xref:System.Security.RightsManagement.ContentUser.Name%2A> is authenticated based on the given <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>.  \\n  \\n After a user has been authenticated and IsAuthenticated is `true`, the user dialog and prompt to confirm authentication is no longer displayed when creating a <xref:System.Security.RightsManagement.SecureEnvironment>.\"\n  syntax:\n    content: public bool IsAuthenticated ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is currently authenticated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> until authenticated.\n  overload: System.Security.RightsManagement.ContentUser.IsAuthenticated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.ContentUser.Name\n  id: Name\n  parent: System.Security.RightsManagement.ContentUser\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ContentUser.Name\n  fullName: System.Security.RightsManagement.ContentUser.Name\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the user or group name specified to the &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; constructor.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The user or group name specified to the &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; constructor.\n  overload: System.Security.RightsManagement.ContentUser.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.ContentUser.OwnerUser\n  id: OwnerUser\n  parent: System.Security.RightsManagement.ContentUser\n  langs:\n  - csharp\n  name: OwnerUser\n  nameWithType: ContentUser.OwnerUser\n  fullName: System.Security.RightsManagement.ContentUser.OwnerUser\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets an instance of the \"Owner\" <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> persona.\n  remarks: \"OwnerUser has <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> \\\"Internal\\\" and <xref:System.Security.RightsManagement.ContentUser.Name%2A> \\\"Owner\\\".  \\n  \\n OwnerUser is used by the server-side templates to give special rights to the content author or publisher when the protected document is created.\"\n  syntax:\n    content: public static System.Security.RightsManagement.ContentUser OwnerUser { get; }\n    return:\n      type: System.Security.RightsManagement.ContentUser\n      description: An instance of the \"Owner\" <xref href=\"System.Security.RightsManagement.ContentUser\"></xref> persona.\n  overload: System.Security.RightsManagement.ContentUser.OwnerUser*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: ContentUser(String,AuthenticationType)\n  nameWithType: ContentUser.ContentUser(String,AuthenticationType)\n  fullName: System.Security.RightsManagement.ContentUser.ContentUser(String,AuthenticationType)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.RightsManagement.AuthenticationType\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: AuthenticationType\n  fullName: System.Security.RightsManagement.AuthenticationType\n- uid: System.Security.RightsManagement.ContentUser.AnyoneUser\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: AnyoneUser\n  nameWithType: ContentUser.AnyoneUser\n  fullName: System.Security.RightsManagement.ContentUser.AnyoneUser\n- uid: System.Security.RightsManagement.ContentUser\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: ContentUser\n  nameWithType: ContentUser\n  fullName: System.Security.RightsManagement.ContentUser\n- uid: System.Security.RightsManagement.ContentUser.AuthenticationType\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: ContentUser.AuthenticationType\n  fullName: System.Security.RightsManagement.ContentUser.AuthenticationType\n- uid: System.Security.RightsManagement.ContentUser.Equals(System.Object)\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ContentUser.Equals(Object)\n  fullName: System.Security.RightsManagement.ContentUser.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.RightsManagement.ContentUser.GetHashCode\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ContentUser.GetHashCode()\n  fullName: System.Security.RightsManagement.ContentUser.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: IsAuthenticated()\n  nameWithType: ContentUser.IsAuthenticated()\n  fullName: System.Security.RightsManagement.ContentUser.IsAuthenticated()\n- uid: System.Security.RightsManagement.ContentUser.Name\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: Name\n  nameWithType: ContentUser.Name\n  fullName: System.Security.RightsManagement.ContentUser.Name\n- uid: System.Security.RightsManagement.ContentUser.OwnerUser\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: OwnerUser\n  nameWithType: ContentUser.OwnerUser\n  fullName: System.Security.RightsManagement.ContentUser.OwnerUser\n- uid: System.Security.RightsManagement.ContentUser.#ctor*\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: ContentUser\n  nameWithType: ContentUser.ContentUser\n- uid: System.Security.RightsManagement.ContentUser.AnyoneUser*\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: AnyoneUser\n  nameWithType: ContentUser.AnyoneUser\n- uid: System.Security.RightsManagement.ContentUser.AuthenticationType*\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: ContentUser.AuthenticationType\n- uid: System.Security.RightsManagement.ContentUser.Equals*\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: Equals\n  nameWithType: ContentUser.Equals\n- uid: System.Security.RightsManagement.ContentUser.GetHashCode*\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ContentUser.GetHashCode\n- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated*\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: IsAuthenticated\n  nameWithType: ContentUser.IsAuthenticated\n- uid: System.Security.RightsManagement.ContentUser.Name*\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: Name\n  nameWithType: ContentUser.Name\n- uid: System.Security.RightsManagement.ContentUser.OwnerUser*\n  parent: System.Security.RightsManagement.ContentUser\n  isExternal: false\n  name: OwnerUser\n  nameWithType: ContentUser.OwnerUser\n"}