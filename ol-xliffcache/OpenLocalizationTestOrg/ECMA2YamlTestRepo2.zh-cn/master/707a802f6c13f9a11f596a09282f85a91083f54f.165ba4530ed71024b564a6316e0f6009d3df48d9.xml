{"nodes":[{"pos":[596,760],"content":"Provides a type-safe way to set the &lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings*&gt; property of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpCachePolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Provides a type-safe way to set the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings*> property of the <xref href=\"System.Web.HttpCachePolicy\"></xref> class."},{"pos":[773,3272],"content":"The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property is used to specify whether dynamically compressed responses are cached. Caching dynamically compressed responses means that the cost of compression is incurred only one time, during the first request for the resource (or after an application restart) and when the cache item expires.       The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property of the <xref:System.Web.HttpCachePolicy> class identifies which request header parameters ASP.NET uses to uniquely identify a variation of the response if there are multiple cached responses for a resource. This is useful when a response depends on a set of client inputs, such as headers, parameters, or content encodings.       The HttpCacheVaryByContentEncodings class is not directly related to HTTP cache-control headers. However, it helps make sure that a response to a client or a proxy varies by the specified content encoding. Setting the cache to vary by content encoding enables ASP.NET to vary the response by the `Accept-Encoding` header. When a request is processed, the `Accept-Encoding` header is checked and the first acceptable encoding is identified and used to take one of the following actions:      -   If a matching encoding is also found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list and a cached response exists, the cached response is sent.      -   If a matching encoding is also found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list but a cached response does not exist, a response is generated and inserted into the cache.      -   If a matching encoding is not found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list, the cache is searched for a non-encoded response, also referred to as the identity response. If the identity response is found, it is sent. Otherwise a new non-encoded response is generated and stored in the cache.       For more information about the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125). See section 14, \"Header Field Definitions\", for complete details.       You can set the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property by using the  directive or by adding a profile to the  element in the Web.config file.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt; property is used to specify whether dynamically compressed responses are cached.","pos":[0,144],"source":"The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property is used to specify whether dynamically compressed responses are cached."},{"content":"Caching dynamically compressed responses means that the cost of compression is incurred only one time, during the first request for the resource (or after an application restart) and when the cache item expires.","pos":[145,356]},{"content":"The &lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt; property of the &lt;xref:System.Web.HttpCachePolicy&gt; class identifies which request header parameters ASP.NET uses to uniquely identify a variation of the response if there are multiple cached responses for a resource.","pos":[363,642],"source":"       The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property of the <xref:System.Web.HttpCachePolicy> class identifies which request header parameters ASP.NET uses to uniquely identify a variation of the response if there are multiple cached responses for a resource."},{"content":"This is useful when a response depends on a set of client inputs, such as headers, parameters, or content encodings.","pos":[643,759]},{"content":"The HttpCacheVaryByContentEncodings class is not directly related to HTTP cache-control headers.","pos":[766,862]},{"content":"However, it helps make sure that a response to a client or a proxy varies by the specified content encoding.","pos":[863,971]},{"content":"Setting the cache to vary by content encoding enables ASP.NET to vary the response by the <ph id=\"ph1\">`Accept-Encoding`</ph> header.","pos":[972,1087],"source":" Setting the cache to vary by content encoding enables ASP.NET to vary the response by the `Accept-Encoding` header."},{"content":"When a request is processed, the <ph id=\"ph1\">`Accept-Encoding`</ph> header is checked and the first acceptable encoding is identified and used to take one of the following actions:      -   If a matching encoding is also found in the &lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt; list and a cached response exists, the cached response is sent.","pos":[1088,1428],"source":" When a request is processed, the `Accept-Encoding` header is checked and the first acceptable encoding is identified and used to take one of the following actions:      -   If a matching encoding is also found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list and a cached response exists, the cached response is sent."},{"content":"-   If a matching encoding is also found in the &lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt; list but a cached response does not exist, a response is generated and inserted into the cache.","pos":[1434,1637],"source":"      -   If a matching encoding is also found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list but a cached response does not exist, a response is generated and inserted into the cache."},{"content":"-   If a matching encoding is not found in the &lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt; list, the cache is searched for a non-encoded response, also referred to as the identity response.","pos":[1643,1848],"source":"      -   If a matching encoding is not found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list, the cache is searched for a non-encoded response, also referred to as the identity response."},{"content":"If the identity response is found, it is sent.","pos":[1849,1895]},{"content":"Otherwise a new non-encoded response is generated and stored in the cache.","pos":[1896,1970]},{"content":"For more information about the &lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt; property, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the <bpt id=\"p1\">[</bpt>World Wide Web Consortium (W3C) Web site<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.","pos":[1977,2239],"source":"       For more information about the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125)."},{"content":"See section 14, \"Header Field Definitions\", for complete details.","pos":[2240,2305]},{"content":"You can set the &lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt; property by using the  directive or by adding a profile to the  element in the Web.config file.","pos":[2312,2483],"source":"       You can set the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property by using the  directive or by adding a profile to the  element in the Web.config file."}]},{"pos":[4571,4675],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpCacheVaryByContentEncodings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.HttpCacheVaryByContentEncodings\"></xref> class."},{"pos":[5288,5381],"content":"Gets an array of values which specify the content encodings to be used for varying the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of values which specify the content encodings to be used for varying the cache.","pos":[0,93]}]},{"pos":[5523,5600],"content":"An array of values which contain the content encodings for varying the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of values which contain the content encodings for varying the cache.","pos":[0,77]}]},{"pos":[6117,6222],"content":"Gets or sets a value that indicates whether the cache varies according to the specified content encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the cache varies according to the specified content encoding.","pos":[0,105]}]},{"pos":[6388,6421],"content":"The name of the content encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the content encoding.","pos":[0,33]}]},{"pos":[6480,6675],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the cache should vary by the specified content encoding; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache should vary by the specified content encoding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6853,6938],"content":"The content encoding is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The content encoding is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7445,7538],"content":"Sets an array of values which specify the content encodings to be used for varying the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets an array of values which specify the content encodings to be used for varying the cache.","pos":[0,93]}]},{"pos":[7713,7790],"content":"An array of values which contain the content encodings for varying the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of values which contain the content encodings for varying the cache.","pos":[0,77]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpCacheVaryByContentEncodings\n  id: HttpCacheVaryByContentEncodings\n  children:\n  - System.Web.HttpCacheVaryByContentEncodings.#ctor\n  - System.Web.HttpCacheVaryByContentEncodings.GetContentEncodings\n  - System.Web.HttpCacheVaryByContentEncodings.Item(System.String)\n  - System.Web.HttpCacheVaryByContentEncodings.SetContentEncodings(System.String[])\n  langs:\n  - csharp\n  name: HttpCacheVaryByContentEncodings\n  nameWithType: HttpCacheVaryByContentEncodings\n  fullName: System.Web.HttpCacheVaryByContentEncodings\n  type: Class\n  summary: Provides a type-safe way to set the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings*> property of the <xref href=\"System.Web.HttpCachePolicy\"></xref> class.\n  remarks: \"The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property is used to specify whether dynamically compressed responses are cached. Caching dynamically compressed responses means that the cost of compression is incurred only one time, during the first request for the resource (or after an application restart) and when the cache item expires.  \\n  \\n The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property of the <xref:System.Web.HttpCachePolicy> class identifies which request header parameters ASP.NET uses to uniquely identify a variation of the response if there are multiple cached responses for a resource. This is useful when a response depends on a set of client inputs, such as headers, parameters, or content encodings.  \\n  \\n The HttpCacheVaryByContentEncodings class is not directly related to HTTP cache-control headers. However, it helps make sure that a response to a client or a proxy varies by the specified content encoding. Setting the cache to vary by content encoding enables ASP.NET to vary the response by the `Accept-Encoding` header. When a request is processed, the `Accept-Encoding` header is checked and the first acceptable encoding is identified and used to take one of the following actions:  \\n  \\n-   If a matching encoding is also found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list and a cached response exists, the cached response is sent.  \\n  \\n-   If a matching encoding is also found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list but a cached response does not exist, a response is generated and inserted into the cache.  \\n  \\n-   If a matching encoding is not found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list, the cache is searched for a non-encoded response, also referred to as the identity response. If the identity response is found, it is sent. Otherwise a new non-encoded response is generated and stored in the cache.  \\n  \\n For more information about the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125). See section 14, \\\"Header Field Definitions\\\", for complete details.  \\n  \\n You can set the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property by using the  directive or by adding a profile to the  element in the Web.config file.\"\n  example:\n  - \"The following example shows how to enable a dynamically compressed response that can be served from the output cache. The encoding that is acceptable is \\\"gzip\\\" and is set by using the `VaryByContentEncodings` attribute of the  directive. If the Web server that hosts the page does not have dynamic compression enabled, the output cache will not have a cached response for the specified content encoding.  \\n  \\n [!code-vb[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/add/codesnippet/visualbasic/t-system.web.httpcacheva_1_1.aspx)]\\n [!code-cs[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/add/codesnippet/csharp/t-system.web.httpcacheva_1_1.aspx)]\"\n  syntax:\n    content: public sealed class HttpCacheVaryByContentEncodings\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.HttpCacheVaryByContentEncodings.#ctor\n  id: '#ctor'\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  langs:\n  - csharp\n  name: HttpCacheVaryByContentEncodings()\n  nameWithType: HttpCacheVaryByContentEncodings.HttpCacheVaryByContentEncodings()\n  fullName: System.Web.HttpCacheVaryByContentEncodings.HttpCacheVaryByContentEncodings()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.HttpCacheVaryByContentEncodings\"></xref> class.\n  syntax:\n    content: public HttpCacheVaryByContentEncodings ();\n    parameters: []\n  overload: System.Web.HttpCacheVaryByContentEncodings.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpCacheVaryByContentEncodings.GetContentEncodings\n  id: GetContentEncodings\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  langs:\n  - csharp\n  name: GetContentEncodings()\n  nameWithType: HttpCacheVaryByContentEncodings.GetContentEncodings()\n  fullName: System.Web.HttpCacheVaryByContentEncodings.GetContentEncodings()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets an array of values which specify the content encodings to be used for varying the cache.\n  syntax:\n    content: public string[] GetContentEncodings ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: An array of values which contain the content encodings for varying the cache.\n  overload: System.Web.HttpCacheVaryByContentEncodings.GetContentEncodings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpCacheVaryByContentEncodings.Item(System.String)\n  id: Item(System.String)\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: HttpCacheVaryByContentEncodings.Item(String)\n  fullName: System.Web.HttpCacheVaryByContentEncodings.Item(String)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets a value that indicates whether the cache varies according to the specified content encoding.\n  syntax:\n    content: public bool this[string contentEncoding] { get; set; }\n    parameters:\n    - id: contentEncoding\n      type: System.String\n      description: The name of the content encoding.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache should vary by the specified content encoding; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpCacheVaryByContentEncodings.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The content encoding is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.HttpCacheVaryByContentEncodings.SetContentEncodings(System.String[])\n  id: SetContentEncodings(System.String[])\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  langs:\n  - csharp\n  name: SetContentEncodings(String[])\n  nameWithType: HttpCacheVaryByContentEncodings.SetContentEncodings(String[])\n  fullName: System.Web.HttpCacheVaryByContentEncodings.SetContentEncodings(String[])\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets an array of values which specify the content encodings to be used for varying the cache.\n  syntax:\n    content: public void SetContentEncodings (string[] contentEncodings);\n    parameters:\n    - id: contentEncodings\n      type: System.String[]\n      description: An array of values which contain the content encodings for varying the cache.\n  overload: System.Web.HttpCacheVaryByContentEncodings.SetContentEncodings*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.HttpCacheVaryByContentEncodings.#ctor\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  isExternal: false\n  name: HttpCacheVaryByContentEncodings()\n  nameWithType: HttpCacheVaryByContentEncodings.HttpCacheVaryByContentEncodings()\n  fullName: System.Web.HttpCacheVaryByContentEncodings.HttpCacheVaryByContentEncodings()\n- uid: System.Web.HttpCacheVaryByContentEncodings.GetContentEncodings\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  isExternal: false\n  name: GetContentEncodings()\n  nameWithType: HttpCacheVaryByContentEncodings.GetContentEncodings()\n  fullName: System.Web.HttpCacheVaryByContentEncodings.GetContentEncodings()\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpCacheVaryByContentEncodings.Item(System.String)\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  isExternal: false\n  name: Item(String)\n  nameWithType: HttpCacheVaryByContentEncodings.Item(String)\n  fullName: System.Web.HttpCacheVaryByContentEncodings.Item(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpCacheVaryByContentEncodings.SetContentEncodings(System.String[])\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  isExternal: false\n  name: SetContentEncodings(String[])\n  nameWithType: HttpCacheVaryByContentEncodings.SetContentEncodings(String[])\n  fullName: System.Web.HttpCacheVaryByContentEncodings.SetContentEncodings(String[])\n- uid: System.Web.HttpCacheVaryByContentEncodings.#ctor*\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  isExternal: false\n  name: HttpCacheVaryByContentEncodings\n  nameWithType: HttpCacheVaryByContentEncodings.HttpCacheVaryByContentEncodings\n- uid: System.Web.HttpCacheVaryByContentEncodings.GetContentEncodings*\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  isExternal: false\n  name: GetContentEncodings\n  nameWithType: HttpCacheVaryByContentEncodings.GetContentEncodings\n- uid: System.Web.HttpCacheVaryByContentEncodings.Item*\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  isExternal: false\n  name: Item\n  nameWithType: HttpCacheVaryByContentEncodings.Item\n- uid: System.Web.HttpCacheVaryByContentEncodings.SetContentEncodings*\n  parent: System.Web.HttpCacheVaryByContentEncodings\n  isExternal: false\n  name: SetContentEncodings\n  nameWithType: HttpCacheVaryByContentEncodings.SetContentEncodings\n"}