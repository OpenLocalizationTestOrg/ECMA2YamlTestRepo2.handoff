{"nodes":[{"pos":[1325,1378],"content":"Specifies the name of a cryptographic hash algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the name of a cryptographic hash algorithm.","pos":[0,53]}]},{"pos":[1391,2208],"content":"The HashAlgorithmName structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string. Hash algorithm names are case-sensitive.       Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a [CNG algorithm identifier](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx).       Asymmetric algorithms implemented using other technologies:      -   Must recognize at least \"MD5\", \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\".      -   Should recognize additional CNG identifiers for any additional hash algorithms that they support.","needQuote":false,"needEscape":true,"nodes":[{"content":"The HashAlgorithmName structure includes some static properties that return predefined hash algorithm names, as well as a &lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A&gt; property that can represent a custom hash algorithm name as a strongly-typed string.","pos":[0,268],"source":"The HashAlgorithmName structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string."},{"content":"Hash algorithm names are case-sensitive.","pos":[269,309]},{"content":"Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a <bpt id=\"p1\">[</bpt>CNG algorithm identifier<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx)</ept>.","pos":[316,544],"source":"       Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a [CNG algorithm identifier](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx)."},{"content":"Asymmetric algorithms implemented using other technologies:      -   Must recognize at least \"MD5\", \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\".","pos":[551,692]},{"content":"-   Should recognize additional CNG identifiers for any additional hash algorithms that they support.","pos":[698,799]}]},{"pos":[2931,3062],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure with a custom name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> structure with a custom name."},{"pos":[3074,3123],"content":"The constructor performs no validation on <ph id=\"ph1\">`name`</ph>.","needQuote":true,"needEscape":true,"source":"The constructor performs no validation on `name`."},{"pos":[3263,3294],"content":"The custom hash algorithm name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The custom hash algorithm name.","pos":[0,31]}]},{"pos":[3823,3916],"content":"Returns a value that indicates whether the current instance and a specified object are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the current instance and a specified object are equal.","pos":[0,93]}]},{"pos":[4057,4105],"content":"The object to compare with the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]},{"pos":[4164,4489],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> object and its <xref:System.Security.Cryptography.HashAlgorithmName.Name*> property is equal to that of the current instance. The comparison is ordinal and case-sensitive.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object and its &lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt; property is equal to that of the current instance.","pos":[0,279],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> object and its <xref:System.Security.Cryptography.HashAlgorithmName.Name*> property is equal to that of the current instance."},{"content":"The comparison is ordinal and case-sensitive.","pos":[280,325]}]},{"pos":[5118,5249],"content":"Returns a value that indicates whether two <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances are equal.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether two <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instances are equal."},{"pos":[5458,5506],"content":"The object to compare with the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]},{"pos":[5565,5811],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Security.Cryptography.HashAlgorithmName.Name*> property of <code>other</code> is equal to that of the current instance. The comparison is ordinal and case-sensitive.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt; property of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to that of the current instance.","pos":[0,200],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Security.Cryptography.HashAlgorithmName.Name*> property of <code>other</code> is equal to that of the current instance."},{"content":"The comparison is ordinal and case-sensitive.","pos":[201,246]}]},{"pos":[6318,6365],"content":"Returns the hash code for the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for the current instance.","pos":[0,47]}]},{"pos":[6500,6675],"content":"The hash code for the current instance, or 0 if no <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> value was supplied to the <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> constructor.","needQuote":true,"needEscape":true,"source":"The hash code for the current instance, or 0 if no <code>name</code> value was supplied to the <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> constructor."},{"pos":[7143,7192],"content":"Gets a hash algorithm name that represents \"MD5\".","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a hash algorithm name that represents \"MD5\".","pos":[0,49]}]},{"pos":[7380,7424],"content":"A hash algorithm name that represents \"MD5\".","needQuote":true,"needEscape":true,"nodes":[{"content":"A hash algorithm name that represents \"MD5\".","pos":[0,44]}]},{"pos":[7889,7953],"content":"Gets the underlying string representation of the algorithm name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the underlying string representation of the algorithm name.","pos":[0,64]}]},{"pos":[8062,8264],"content":"The string representation of the algorithm name, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <ph id=\"ph1\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> if no hash algorithm is available.","needQuote":true,"needEscape":true,"source":"The string representation of the algorithm name, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or &lt;xref:System.String?displayProperty=fullName&gt; if no hash algorithm is available."},{"pos":[9066,9185],"content":"Determines whether two specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are equal.","needQuote":true,"needEscape":true,"source":"Determines whether two specified <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> objects are equal."},{"pos":[9197,9329],"content":"The Equality method defines the operation of the equality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Equality method defines the operation of the equality operator for &lt;xref:System.Security.Cryptography.HashAlgorithmName&gt; values.","pos":[0,132],"source":"The Equality method defines the operation of the equality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values."}]},{"pos":[9602,9630],"content":"The first object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first object to compare.","pos":[0,28]}]},{"pos":[9725,9754],"content":"The second object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second object to compare.","pos":[0,29]}]},{"pos":[9813,10078],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if both <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> have the same &lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt; value; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <code>left</code> and <code>right</code> have the same <xref:System.Security.Cryptography.HashAlgorithmName.Name*> value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10897,11020],"content":"Determines whether two specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are not equal.","needQuote":true,"needEscape":true,"source":"Determines whether two specified <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> objects are not equal."},{"pos":[11032,11168],"content":"The Inequality method defines the operation of the inequality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Inequality method defines the operation of the inequality operator for &lt;xref:System.Security.Cryptography.HashAlgorithmName&gt; values.","pos":[0,136],"source":"The Inequality method defines the operation of the inequality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values."}]},{"pos":[11443,11471],"content":"The first object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first object to compare.","pos":[0,28]}]},{"pos":[11566,11595],"content":"The second object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second object to compare.","pos":[0,29]}]},{"pos":[11654,11926],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if both <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> do not have the same &lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt; value; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <code>left</code> and <code>right</code> do not have the same <xref:System.Security.Cryptography.HashAlgorithmName.Name*> value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12401,12451],"content":"Gets a hash algorithm name that represents \"SHA1\".","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a hash algorithm name that represents \"SHA1\".","pos":[0,50]}]},{"pos":[12640,12685],"content":"A hash algorithm name that represents \"SHA1\".","needQuote":true,"needEscape":true,"nodes":[{"content":"A hash algorithm name that represents \"SHA1\".","pos":[0,45]}]},{"pos":[13161,13213],"content":"Gets a hash algorithm name that represents \"SHA256\".","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a hash algorithm name that represents \"SHA256\".","pos":[0,52]}]},{"pos":[13404,13451],"content":"A hash algorithm name that represents \"SHA256\".","needQuote":true,"needEscape":true,"nodes":[{"content":"A hash algorithm name that represents \"SHA256\".","pos":[0,47]}]},{"pos":[13929,13981],"content":"Gets a hash algorithm name that represents \"SHA384\".","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a hash algorithm name that represents \"SHA384\".","pos":[0,52]}]},{"pos":[14172,14219],"content":"A hash algorithm name that represents \"SHA384\".","needQuote":true,"needEscape":true,"nodes":[{"content":"A hash algorithm name that represents \"SHA384\".","pos":[0,47]}]},{"pos":[14697,14749],"content":"Gets a hash algorithm name that represents \"SHA512\".","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a hash algorithm name that represents \"SHA512\".","pos":[0,52]}]},{"pos":[14940,14987],"content":"A hash algorithm name that represents \"SHA512\".","needQuote":true,"needEscape":true,"nodes":[{"content":"A hash algorithm name that represents \"SHA512\".","pos":[0,47]}]},{"pos":[15479,15605],"content":"Returns the string representation of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns the string representation of the current <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instance."},{"pos":[15617,15820],"content":"The ToString method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned. Otherwise, it returns <xref:System.String.Empty?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ToString method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned. Otherwise, it returns <xref:System.String.Empty?displayProperty=fullName>.","pos":[0,203],"nodes":[{"content":"The ToString method returns the &lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A&gt; property, if it has been assigned.","pos":[0,128],"source":"The ToString method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned."},{"content":"Otherwise, it returns &lt;xref:System.String.Empty?displayProperty=fullName&gt;.","pos":[129,203],"source":" Otherwise, it returns <xref:System.String.Empty?displayProperty=fullName>."}]}]},{"pos":[15956,16074],"content":"The string representation of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The string representation of the current <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.HashAlgorithmName\n  id: HashAlgorithmName\n  children:\n  - System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)\n  - System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)\n  - System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.HashAlgorithmName.GetHashCode\n  - System.Security.Cryptography.HashAlgorithmName.MD5\n  - System.Security.Cryptography.HashAlgorithmName.Name\n  - System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.HashAlgorithmName.SHA1\n  - System.Security.Cryptography.HashAlgorithmName.SHA256\n  - System.Security.Cryptography.HashAlgorithmName.SHA384\n  - System.Security.Cryptography.HashAlgorithmName.SHA512\n  - System.Security.Cryptography.HashAlgorithmName.ToString\n  langs:\n  - csharp\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n  type: Struct\n  summary: Specifies the name of a cryptographic hash algorithm.\n  remarks: \"The HashAlgorithmName structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string. Hash algorithm names are case-sensitive.  \\n  \\n Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a [CNG algorithm identifier](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx).  \\n  \\n Asymmetric algorithms implemented using other technologies:  \\n  \\n-   Must recognize at least \\\"MD5\\\", \\\"SHA1\\\", \\\"SHA256\\\", \\\"SHA384\\\", and \\\"SHA512\\\".  \\n  \\n-   Should recognize additional CNG identifiers for any additional hash algorithms that they support.\"\n  syntax:\n    content: 'public struct HashAlgorithmName : IEquatable<System.Security.Cryptography.HashAlgorithmName>'\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Security.Cryptography.HashAlgorithmName>\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: HashAlgorithmName(String)\n  nameWithType: HashAlgorithmName.HashAlgorithmName(String)\n  fullName: System.Security.Cryptography.HashAlgorithmName.HashAlgorithmName(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> structure with a custom name.\n  remarks: The constructor performs no validation on `name`.\n  syntax:\n    content: public HashAlgorithmName (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The custom hash algorithm name.\n  overload: System.Security.Cryptography.HashAlgorithmName.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: HashAlgorithmName.Equals(Object)\n  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Returns a value that indicates whether the current instance and a specified object are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> object and its <xref:System.Security.Cryptography.HashAlgorithmName.Name*> property is equal to that of the current instance. The comparison is ordinal and case-sensitive.\n  overload: System.Security.Cryptography.HashAlgorithmName.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)\n  id: Equals(System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: Equals(HashAlgorithmName)\n  nameWithType: HashAlgorithmName.Equals(HashAlgorithmName)\n  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(HashAlgorithmName)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Returns a value that indicates whether two <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instances are equal.\n  syntax:\n    content: public bool Equals (System.Security.Cryptography.HashAlgorithmName other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The object to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Security.Cryptography.HashAlgorithmName.Name*> property of <code>other</code> is equal to that of the current instance. The comparison is ordinal and case-sensitive.\n  overload: System.Security.Cryptography.HashAlgorithmName.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: HashAlgorithmName.GetHashCode()\n  fullName: System.Security.Cryptography.HashAlgorithmName.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Returns the hash code for the current instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current instance, or 0 if no <code>name</code> value was supplied to the <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> constructor.\n  overload: System.Security.Cryptography.HashAlgorithmName.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.MD5\n  id: MD5\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: MD5\n  nameWithType: HashAlgorithmName.MD5\n  fullName: System.Security.Cryptography.HashAlgorithmName.MD5\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a hash algorithm name that represents \"MD5\".\n  syntax:\n    content: public static System.Security.Cryptography.HashAlgorithmName MD5 { get; }\n    return:\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: A hash algorithm name that represents \"MD5\".\n  overload: System.Security.Cryptography.HashAlgorithmName.MD5*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.Name\n  id: Name\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: Name\n  nameWithType: HashAlgorithmName.Name\n  fullName: System.Security.Cryptography.HashAlgorithmName.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets the underlying string representation of the algorithm name.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The string representation of the algorithm name, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or &lt;xref:System.String?displayProperty=fullName&gt; if no hash algorithm is available.\n  overload: System.Security.Cryptography.HashAlgorithmName.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  id: op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: op_Equality(HashAlgorithmName,HashAlgorithmName)\n  nameWithType: HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)\n  fullName: System.Security.Cryptography.HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Determines whether two specified <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> objects are equal.\n  remarks: The Equality method defines the operation of the equality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.\n  syntax:\n    content: public static bool op_Equality (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The first object to compare.\n    - id: right\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <code>left</code> and <code>right</code> have the same <xref:System.Security.Cryptography.HashAlgorithmName.Name*> value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.HashAlgorithmName.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  id: op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: op_Inequality(HashAlgorithmName,HashAlgorithmName)\n  nameWithType: HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)\n  fullName: System.Security.Cryptography.HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Determines whether two specified <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> objects are not equal.\n  remarks: The Inequality method defines the operation of the inequality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.\n  syntax:\n    content: public static bool op_Inequality (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The first object to compare.\n    - id: right\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <code>left</code> and <code>right</code> do not have the same <xref:System.Security.Cryptography.HashAlgorithmName.Name*> value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.HashAlgorithmName.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA1\n  id: SHA1\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: SHA1\n  nameWithType: HashAlgorithmName.SHA1\n  fullName: System.Security.Cryptography.HashAlgorithmName.SHA1\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a hash algorithm name that represents \"SHA1\".\n  syntax:\n    content: public static System.Security.Cryptography.HashAlgorithmName SHA1 { get; }\n    return:\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: A hash algorithm name that represents \"SHA1\".\n  overload: System.Security.Cryptography.HashAlgorithmName.SHA1*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA256\n  id: SHA256\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: SHA256\n  nameWithType: HashAlgorithmName.SHA256\n  fullName: System.Security.Cryptography.HashAlgorithmName.SHA256\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a hash algorithm name that represents \"SHA256\".\n  syntax:\n    content: public static System.Security.Cryptography.HashAlgorithmName SHA256 { get; }\n    return:\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: A hash algorithm name that represents \"SHA256\".\n  overload: System.Security.Cryptography.HashAlgorithmName.SHA256*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA384\n  id: SHA384\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: SHA384\n  nameWithType: HashAlgorithmName.SHA384\n  fullName: System.Security.Cryptography.HashAlgorithmName.SHA384\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a hash algorithm name that represents \"SHA384\".\n  syntax:\n    content: public static System.Security.Cryptography.HashAlgorithmName SHA384 { get; }\n    return:\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: A hash algorithm name that represents \"SHA384\".\n  overload: System.Security.Cryptography.HashAlgorithmName.SHA384*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA512\n  id: SHA512\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: SHA512\n  nameWithType: HashAlgorithmName.SHA512\n  fullName: System.Security.Cryptography.HashAlgorithmName.SHA512\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a hash algorithm name that represents \"SHA512\".\n  syntax:\n    content: public static System.Security.Cryptography.HashAlgorithmName SHA512 { get; }\n    return:\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: A hash algorithm name that represents \"SHA512\".\n  overload: System.Security.Cryptography.HashAlgorithmName.SHA512*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.HashAlgorithmName.ToString\n  id: ToString\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: HashAlgorithmName.ToString()\n  fullName: System.Security.Cryptography.HashAlgorithmName.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Returns the string representation of the current <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instance.\n  remarks: The ToString method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned. Otherwise, it returns <xref:System.String.Empty?displayProperty=fullName>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the current <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instance.\n  overload: System.Security.Cryptography.HashAlgorithmName.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: HashAlgorithmName(String)\n  nameWithType: HashAlgorithmName.HashAlgorithmName(String)\n  fullName: System.Security.Cryptography.HashAlgorithmName.HashAlgorithmName(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: HashAlgorithmName.Equals(Object)\n  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: Equals(HashAlgorithmName)\n  nameWithType: HashAlgorithmName.Equals(HashAlgorithmName)\n  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(HashAlgorithmName)\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: HashAlgorithmName.GetHashCode()\n  fullName: System.Security.Cryptography.HashAlgorithmName.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.HashAlgorithmName.MD5\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: MD5\n  nameWithType: HashAlgorithmName.MD5\n  fullName: System.Security.Cryptography.HashAlgorithmName.MD5\n- uid: System.Security.Cryptography.HashAlgorithmName.Name\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: Name\n  nameWithType: HashAlgorithmName.Name\n  fullName: System.Security.Cryptography.HashAlgorithmName.Name\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: op_Equality(HashAlgorithmName,HashAlgorithmName)\n  nameWithType: HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)\n  fullName: System.Security.Cryptography.HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: op_Inequality(HashAlgorithmName,HashAlgorithmName)\n  nameWithType: HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)\n  fullName: System.Security.Cryptography.HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA1\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA1\n  nameWithType: HashAlgorithmName.SHA1\n  fullName: System.Security.Cryptography.HashAlgorithmName.SHA1\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA256\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA256\n  nameWithType: HashAlgorithmName.SHA256\n  fullName: System.Security.Cryptography.HashAlgorithmName.SHA256\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA384\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA384\n  nameWithType: HashAlgorithmName.SHA384\n  fullName: System.Security.Cryptography.HashAlgorithmName.SHA384\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA512\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA512\n  nameWithType: HashAlgorithmName.SHA512\n  fullName: System.Security.Cryptography.HashAlgorithmName.SHA512\n- uid: System.Security.Cryptography.HashAlgorithmName.ToString\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: ToString()\n  nameWithType: HashAlgorithmName.ToString()\n  fullName: System.Security.Cryptography.HashAlgorithmName.ToString()\n- uid: System.Security.Cryptography.HashAlgorithmName.#ctor*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName.HashAlgorithmName\n- uid: System.Security.Cryptography.HashAlgorithmName.Equals*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: Equals\n  nameWithType: HashAlgorithmName.Equals\n- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: GetHashCode\n  nameWithType: HashAlgorithmName.GetHashCode\n- uid: System.Security.Cryptography.HashAlgorithmName.MD5*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: MD5\n  nameWithType: HashAlgorithmName.MD5\n- uid: System.Security.Cryptography.HashAlgorithmName.Name*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: Name\n  nameWithType: HashAlgorithmName.Name\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: op_Equality\n  nameWithType: HashAlgorithmName.op_Equality\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: op_Inequality\n  nameWithType: HashAlgorithmName.op_Inequality\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA1*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA1\n  nameWithType: HashAlgorithmName.SHA1\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA256*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA256\n  nameWithType: HashAlgorithmName.SHA256\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA384*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA384\n  nameWithType: HashAlgorithmName.SHA384\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA512*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA512\n  nameWithType: HashAlgorithmName.SHA512\n- uid: System.Security.Cryptography.HashAlgorithmName.ToString*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: ToString\n  nameWithType: HashAlgorithmName.ToString\n"}