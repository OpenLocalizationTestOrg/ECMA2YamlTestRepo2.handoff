{"nodes":[{"pos":[1088,1184],"content":"Provides a managed implementation of the Advanced Encryption Standard (AES) symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a managed implementation of the Advanced Encryption Standard (AES) symmetric algorithm.","pos":[0,96]}]},{"pos":[1197,1706],"content":"The AES algorithm is essentially the Rijndael symmetric algorithm with a fixed block size and iteration count. This class functions the same way as the <xref:System.Security.Cryptography.RijndaelManaged> class but limits blocks to 128 bits and does not allow feedback modes.      > [!NOTE] >  If the Windows security policy setting for Federal Information Processing Standards (FIPS)-compliant algorithms is enabled, using this algorithm throws a <xref:System.Security.Cryptography.CryptographicException>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The AES algorithm is essentially the Rijndael symmetric algorithm with a fixed block size and iteration count.","pos":[0,110]},{"content":"This class functions the same way as the &lt;xref:System.Security.Cryptography.RijndaelManaged&gt; class but limits blocks to 128 bits and does not allow feedback modes.","pos":[111,274],"source":" This class functions the same way as the <xref:System.Security.Cryptography.RijndaelManaged> class but limits blocks to 128 bits and does not allow feedback modes."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the Windows security policy setting for Federal Information Processing Standards (FIPS)-compliant algorithms is enabled, using this algorithm throws a &lt;xref:System.Security.Cryptography.CryptographicException&gt;.","pos":[280,506],"source":"      > [!NOTE] >  If the Windows security policy setting for Federal Information Processing Standards (FIPS)-compliant algorithms is enabled, using this algorithm throws a <xref:System.Security.Cryptography.CryptographicException>."}]},{"pos":[2582,2683],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.AesManaged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesManaged\"></xref> class."},{"pos":[2969,3025],"content":"The Windows security policy setting for FIPS is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Windows security policy setting for FIPS is enabled.","pos":[0,56]}]},{"pos":[3136,3232],"content":"This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.","needQuote":true,"needEscape":true,"nodes":[{"content":"This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.","pos":[0,96]}]},{"pos":[3650,3740],"content":"Creates a symmetric decryptor object using the current key and initialization vector (IV).","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a symmetric decryptor object using the current key and initialization vector (IV).","pos":[0,90]}]},{"pos":[3954,3983],"content":"A symmetric decryptor object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A symmetric decryptor object.","pos":[0,29]}]},{"pos":[4584,4676],"content":"Creates a symmetric decryptor object using the specified key and initialization vector (IV).","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a symmetric decryptor object using the specified key and initialization vector (IV).","pos":[0,92]}]},{"pos":[5302,5352],"content":"The secret key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]},{"pos":[5411,5472],"content":"The initialization vector to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]},{"pos":[5562,5591],"content":"A symmetric decryptor object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A symmetric decryptor object.","pos":[0,29]}]},{"pos":[5777,5877],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;iv&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> or <code>iv</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5972,6000],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is invalid.","needQuote":true,"needEscape":true,"source":"<code>key</code> is invalid."},{"pos":[6418,6508],"content":"Creates a symmetric encryptor object using the current key and initialization vector (IV).","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a symmetric encryptor object using the current key and initialization vector (IV).","pos":[0,90]}]},{"pos":[6722,6751],"content":"A symmetric encryptor object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A symmetric encryptor object.","pos":[0,29]}]},{"pos":[7352,7444],"content":"Creates a symmetric encryptor object using the specified key and initialization vector (IV).","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a symmetric encryptor object using the specified key and initialization vector (IV).","pos":[0,92]}]},{"pos":[8059,8109],"content":"The secret key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]},{"pos":[8168,8229],"content":"The initialization vector to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]},{"pos":[8319,8348],"content":"A symmetric encryptor object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A symmetric encryptor object.","pos":[0,29]}]},{"pos":[8534,8634],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;iv&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> or <code>iv</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8729,8757],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is invalid.","needQuote":true,"needEscape":true,"source":"<code>key</code> is invalid."},{"pos":[9332,9344],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9821,9872],"content":"Gets or sets the number of bits to use as feedback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of bits to use as feedback.","pos":[0,51]}]},{"pos":[9885,10036],"content":"The maximum feedback size is 128 bits.      > [!NOTE] >  Because this algorithm does not support feedback modes, using this property is discouraged.","needQuote":false,"needEscape":true,"nodes":[{"content":"The maximum feedback size is 128 bits.","pos":[0,38]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Because this algorithm does not support feedback modes, using this property is discouraged.","pos":[44,148],"source":"      > [!NOTE] >  Because this algorithm does not support feedback modes, using this property is discouraged."}]},{"pos":[10164,10191],"content":"The feedback size, in bits.","needQuote":true,"needEscape":true,"nodes":[{"content":"The feedback size, in bits.","pos":[0,27]}]},{"pos":[10667,10748],"content":"Generates a random initialization vector (IV) to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random initialization vector (IV) to use for the symmetric algorithm.","pos":[0,81]}]},{"pos":[11305,11363],"content":"Generates a random key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random key to use for the symmetric algorithm.","pos":[0,58]}]},{"pos":[11873,11952],"content":"Gets or sets the initialization vector (IV) to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the initialization vector (IV) to use for the symmetric algorithm.","pos":[0,79]}]},{"pos":[12073,12133],"content":"The initialization vector to use for the symmetric algorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm","pos":[0,60]}]},{"pos":[12560,12621],"content":"Gets or sets the secret key used for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the secret key used for the symmetric algorithm.","pos":[0,61]}]},{"pos":[12743,12779],"content":"The key for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key for the symmetric algorithm.","pos":[0,36]}]},{"pos":[13227,13310],"content":"Gets or sets the size, in bits, of the secret key used for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the size, in bits, of the secret key used for the symmetric algorithm.","pos":[0,83]}]},{"pos":[13322,13362],"content":"The maximum size of the key is 256 bits.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size of the key is 256 bits.","pos":[0,40]}]},{"pos":[13484,13546],"content":"The size, in bits, of the key used by the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size, in bits, of the key used by the symmetric algorithm.","pos":[0,62]}]},{"pos":[13983,14046],"content":"Gets or sets the mode for operation of the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the mode for operation of the symmetric algorithm.","pos":[0,63]}]},{"pos":[14058,14184],"content":"The <xref:System.Security.Cryptography.CipherMode> and <xref:System.Security.Cryptography.CipherMode> modes are not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Security.Cryptography.CipherMode&gt; and &lt;xref:System.Security.Cryptography.CipherMode&gt; modes are not supported.","pos":[0,126],"source":"The <xref:System.Security.Cryptography.CipherMode> and <xref:System.Security.Cryptography.CipherMode> modes are not supported."}]},{"pos":[14366,14532],"content":"One of the enumeration values that specifies the block cipher mode to use for encryption. The default is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the block cipher mode to use for encryption.","pos":[0,89]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,166],"source":" The default is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>."}]},{"pos":[14753,14893],"content":"Mode is set to <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Mode is set to <xref href=\"System.Security.Cryptography.CipherMode\"></xref> or <xref href=\"System.Security.Cryptography.CipherMode\"></xref>."},{"pos":[15267,15329],"content":"Gets or sets the padding mode used in the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the padding mode used in the symmetric algorithm.","pos":[0,62]}]},{"pos":[15516,15668],"content":"One of the enumeration values that specifies the type of padding to apply. The default is <xref href=\"System.Security.Cryptography.PaddingMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the type of padding to apply.","pos":[0,74]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.PaddingMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[75,152],"source":" The default is <xref href=\"System.Security.Cryptography.PaddingMode\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.AesManaged\n  id: AesManaged\n  children:\n  - System.Security.Cryptography.AesManaged.#ctor\n  - System.Security.Cryptography.AesManaged.CreateDecryptor\n  - System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AesManaged.CreateEncryptor\n  - System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AesManaged.Dispose(System.Boolean)\n  - System.Security.Cryptography.AesManaged.FeedbackSize\n  - System.Security.Cryptography.AesManaged.GenerateIV\n  - System.Security.Cryptography.AesManaged.GenerateKey\n  - System.Security.Cryptography.AesManaged.IV\n  - System.Security.Cryptography.AesManaged.Key\n  - System.Security.Cryptography.AesManaged.KeySize\n  - System.Security.Cryptography.AesManaged.Mode\n  - System.Security.Cryptography.AesManaged.Padding\n  langs:\n  - csharp\n  name: AesManaged\n  nameWithType: AesManaged\n  fullName: System.Security.Cryptography.AesManaged\n  type: Class\n  summary: Provides a managed implementation of the Advanced Encryption Standard (AES) symmetric algorithm.\n  remarks: \"The AES algorithm is essentially the Rijndael symmetric algorithm with a fixed block size and iteration count. This class functions the same way as the <xref:System.Security.Cryptography.RijndaelManaged> class but limits blocks to 128 bits and does not allow feedback modes.  \\n  \\n> [!NOTE]\\n>  If the Windows security policy setting for Federal Information Processing Standards (FIPS)-compliant algorithms is enabled, using this algorithm throws a <xref:System.Security.Cryptography.CryptographicException>.\"\n  example:\n  - \"The following example demonstrates how to encrypt and decrypt sample data using the AesManaged class.  \\n  \\n [!code-cs[AesManaged#1](~/add/codesnippet/csharp/t-system.security.crypto_80_1.cs)]\\n [!code-vb[AesManaged#1](~/add/codesnippet/visualbasic/t-system.security.crypto_80_1.vb)]\"\n  syntax:\n    content: 'public sealed class AesManaged : System.Security.Cryptography.Aes'\n  inheritance:\n  - System.Security.Cryptography.Aes\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: AesManaged()\n  nameWithType: AesManaged.AesManaged()\n  fullName: System.Security.Cryptography.AesManaged.AesManaged()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesManaged\"></xref> class.\n  syntax:\n    content: public AesManaged ();\n    parameters: []\n  overload: System.Security.Cryptography.AesManaged.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The Windows security policy setting for FIPS is enabled.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.CreateDecryptor\n  id: CreateDecryptor\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: CreateDecryptor()\n  nameWithType: AesManaged.CreateDecryptor()\n  fullName: System.Security.Cryptography.AesManaged.CreateDecryptor()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric decryptor object using the current key and initialization vector (IV).\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric decryptor object.\n  overload: System.Security.Cryptography.AesManaged.CreateDecryptor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: AesManaged.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.AesManaged.CreateDecryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric decryptor object using the specified key and initialization vector (IV).\n  remarks: ''\n  example:\n  - \"The following example shows how to use the CreateDecryptor method to decrypt an encrypted message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AesManaged> class.  \\n  \\n [!code-cs[AesManaged#3](~/add/codesnippet/csharp/4a3d180e-fd51-445c-9f50-_1.cs)]\\n [!code-vb[AesManaged#3](~/add/codesnippet/visualbasic/4a3d180e-fd51-445c-9f50-_1.vb)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] key, byte[] iv);\n    parameters:\n    - id: key\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: iv\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric decryptor object.\n  overload: System.Security.Cryptography.AesManaged.CreateDecryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> or <code>iv</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> is invalid.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.CreateEncryptor\n  id: CreateEncryptor\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: CreateEncryptor()\n  nameWithType: AesManaged.CreateEncryptor()\n  fullName: System.Security.Cryptography.AesManaged.CreateEncryptor()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric encryptor object using the current key and initialization vector (IV).\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric encryptor object.\n  overload: System.Security.Cryptography.AesManaged.CreateEncryptor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: AesManaged.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.AesManaged.CreateEncryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric encryptor object using the specified key and initialization vector (IV).\n  remarks: ''\n  example:\n  - \"The following example shows how to use the CreateEncryptor method to encrypt a message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AesManaged> class.  \\n  \\n [!code-cs[AesManaged#2](~/add/codesnippet/csharp/34b1d824-00ea-4983-bc94-_1.cs)]\\n [!code-vb[AesManaged#2](~/add/codesnippet/visualbasic/34b1d824-00ea-4983-bc94-_1.vb)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] key, byte[] iv);\n    parameters:\n    - id: key\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: iv\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric encryptor object.\n  overload: System.Security.Cryptography.AesManaged.CreateEncryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> or <code>iv</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> is invalid.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AesManaged.Dispose(Boolean)\n  fullName: System.Security.Cryptography.AesManaged.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Security.Cryptography.AesManaged.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.FeedbackSize\n  id: FeedbackSize\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: FeedbackSize\n  nameWithType: AesManaged.FeedbackSize\n  fullName: System.Security.Cryptography.AesManaged.FeedbackSize\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the number of bits to use as feedback.\n  remarks: \"The maximum feedback size is 128 bits.  \\n  \\n> [!NOTE]\\n>  Because this algorithm does not support feedback modes, using this property is discouraged.\"\n  syntax:\n    content: public override int FeedbackSize { get; set; }\n    return:\n      type: System.Int32\n      description: The feedback size, in bits.\n  overload: System.Security.Cryptography.AesManaged.FeedbackSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: AesManaged.GenerateIV()\n  fullName: System.Security.Cryptography.AesManaged.GenerateIV()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (IV) to use for the symmetric algorithm.\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.AesManaged.GenerateIV*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: AesManaged.GenerateKey()\n  fullName: System.Security.Cryptography.AesManaged.GenerateKey()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Generates a random key to use for the symmetric algorithm.\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.AesManaged.GenerateKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.IV\n  id: IV\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: IV\n  nameWithType: AesManaged.IV\n  fullName: System.Security.Cryptography.AesManaged.IV\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the initialization vector (IV) to use for the symmetric algorithm.\n  syntax:\n    content: public override byte[] IV { get; set; }\n    return:\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm\n  overload: System.Security.Cryptography.AesManaged.IV*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.Key\n  id: Key\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: Key\n  nameWithType: AesManaged.Key\n  fullName: System.Security.Cryptography.AesManaged.Key\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the secret key used for the symmetric algorithm.\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: The key for the symmetric algorithm.\n  overload: System.Security.Cryptography.AesManaged.Key*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: AesManaged.KeySize\n  fullName: System.Security.Cryptography.AesManaged.KeySize\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the size, in bits, of the secret key used for the symmetric algorithm.\n  remarks: The maximum size of the key is 256 bits.\n  syntax:\n    content: public override int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: The size, in bits, of the key used by the symmetric algorithm.\n  overload: System.Security.Cryptography.AesManaged.KeySize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.Mode\n  id: Mode\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: AesManaged.Mode\n  fullName: System.Security.Cryptography.AesManaged.Mode\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the mode for operation of the symmetric algorithm.\n  remarks: The <xref:System.Security.Cryptography.CipherMode> and <xref:System.Security.Cryptography.CipherMode> modes are not supported.\n  syntax:\n    content: public override System.Security.Cryptography.CipherMode Mode { get; set; }\n    return:\n      type: System.Security.Cryptography.CipherMode\n      description: One of the enumeration values that specifies the block cipher mode to use for encryption. The default is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.\n  overload: System.Security.Cryptography.AesManaged.Mode*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: Mode is set to <xref href=\"System.Security.Cryptography.CipherMode\"></xref> or <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AesManaged.Padding\n  id: Padding\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: AesManaged.Padding\n  fullName: System.Security.Cryptography.AesManaged.Padding\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the padding mode used in the symmetric algorithm.\n  syntax:\n    content: public override System.Security.Cryptography.PaddingMode Padding { get; set; }\n    return:\n      type: System.Security.Cryptography.PaddingMode\n      description: One of the enumeration values that specifies the type of padding to apply. The default is <xref href=\"System.Security.Cryptography.PaddingMode\"></xref>.\n  overload: System.Security.Cryptography.AesManaged.Padding*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.Aes\n  isExternal: false\n  name: System.Security.Cryptography.Aes\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Cryptography.AesManaged.#ctor\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: AesManaged()\n  nameWithType: AesManaged.AesManaged()\n  fullName: System.Security.Cryptography.AesManaged.AesManaged()\n- uid: System.Security.Cryptography.AesManaged.CreateDecryptor\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: AesManaged.CreateDecryptor()\n  fullName: System.Security.Cryptography.AesManaged.CreateDecryptor()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: AesManaged.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.AesManaged.CreateDecryptor(Byte[],Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.AesManaged.CreateEncryptor\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: AesManaged.CreateEncryptor()\n  fullName: System.Security.Cryptography.AesManaged.CreateEncryptor()\n- uid: System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: AesManaged.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.AesManaged.CreateEncryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.AesManaged.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AesManaged.Dispose(Boolean)\n  fullName: System.Security.Cryptography.AesManaged.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.AesManaged.FeedbackSize\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: AesManaged.FeedbackSize\n  fullName: System.Security.Cryptography.AesManaged.FeedbackSize\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.AesManaged.GenerateIV\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: AesManaged.GenerateIV()\n  fullName: System.Security.Cryptography.AesManaged.GenerateIV()\n- uid: System.Security.Cryptography.AesManaged.GenerateKey\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: AesManaged.GenerateKey()\n  fullName: System.Security.Cryptography.AesManaged.GenerateKey()\n- uid: System.Security.Cryptography.AesManaged.IV\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: IV\n  nameWithType: AesManaged.IV\n  fullName: System.Security.Cryptography.AesManaged.IV\n- uid: System.Security.Cryptography.AesManaged.Key\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Key\n  nameWithType: AesManaged.Key\n  fullName: System.Security.Cryptography.AesManaged.Key\n- uid: System.Security.Cryptography.AesManaged.KeySize\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: KeySize\n  nameWithType: AesManaged.KeySize\n  fullName: System.Security.Cryptography.AesManaged.KeySize\n- uid: System.Security.Cryptography.AesManaged.Mode\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Mode\n  nameWithType: AesManaged.Mode\n  fullName: System.Security.Cryptography.AesManaged.Mode\n- uid: System.Security.Cryptography.CipherMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CipherMode\n  nameWithType: CipherMode\n  fullName: System.Security.Cryptography.CipherMode\n- uid: System.Security.Cryptography.AesManaged.Padding\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Padding\n  nameWithType: AesManaged.Padding\n  fullName: System.Security.Cryptography.AesManaged.Padding\n- uid: System.Security.Cryptography.PaddingMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: PaddingMode\n  nameWithType: PaddingMode\n  fullName: System.Security.Cryptography.PaddingMode\n- uid: System.Security.Cryptography.AesManaged.#ctor*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: AesManaged\n  nameWithType: AesManaged.AesManaged\n- uid: System.Security.Cryptography.AesManaged.CreateDecryptor*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: AesManaged.CreateDecryptor\n- uid: System.Security.Cryptography.AesManaged.CreateEncryptor*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: AesManaged.CreateEncryptor\n- uid: System.Security.Cryptography.AesManaged.Dispose*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Dispose\n  nameWithType: AesManaged.Dispose\n- uid: System.Security.Cryptography.AesManaged.FeedbackSize*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: AesManaged.FeedbackSize\n- uid: System.Security.Cryptography.AesManaged.GenerateIV*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: GenerateIV\n  nameWithType: AesManaged.GenerateIV\n- uid: System.Security.Cryptography.AesManaged.GenerateKey*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: GenerateKey\n  nameWithType: AesManaged.GenerateKey\n- uid: System.Security.Cryptography.AesManaged.IV*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: IV\n  nameWithType: AesManaged.IV\n- uid: System.Security.Cryptography.AesManaged.Key*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Key\n  nameWithType: AesManaged.Key\n- uid: System.Security.Cryptography.AesManaged.KeySize*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: KeySize\n  nameWithType: AesManaged.KeySize\n- uid: System.Security.Cryptography.AesManaged.Mode*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Mode\n  nameWithType: AesManaged.Mode\n- uid: System.Security.Cryptography.AesManaged.Padding*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Padding\n  nameWithType: AesManaged.Padding\n"}