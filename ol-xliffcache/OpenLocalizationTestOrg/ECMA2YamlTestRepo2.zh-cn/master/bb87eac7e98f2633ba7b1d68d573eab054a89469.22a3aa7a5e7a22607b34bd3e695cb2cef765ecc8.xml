{"nodes":[{"pos":[702,736],"content":"Validates a username and password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates a username and password.","pos":[0,34]}]},{"pos":[749,1189],"content":"Use the UserNamePasswordValidator class to specify how a username and password is validated. This can be done by deriving a class from UserNamePasswordValidator and override the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> method. For more information about creating a custom user name and password validator, see [How to: Use a Custom User Name and Password Validator](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the UserNamePasswordValidator class to specify how a username and password is validated.","pos":[0,92]},{"content":"This can be done by deriving a class from UserNamePasswordValidator and override the &lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A&gt; method.","pos":[93,261],"source":" This can be done by deriving a class from UserNamePasswordValidator and override the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> method."},{"content":"For more information about creating a custom user name and password validator, see <bpt id=\"p1\">[</bpt>How to: Use a Custom User Name and Password Validator<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[262,440],"source":" For more information about creating a custom user name and password validator, see [How to: Use a Custom User Name and Password Validator](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[2062,2180],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"></xref> class."},{"pos":[3074,3253],"content":"Gets an instance of a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that validates a username and password using the specified membership provider.","needQuote":true,"needEscape":true,"source":"Gets an instance of a <xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"></xref> that validates a username and password using the specified membership provider."},{"pos":[3265,3444],"content":"The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this static property can be supplied as a parameter to one of the constructors for the &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&gt; class.","pos":[0,179],"source":"The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class."}]},{"pos":[3729,3815],"content":"A <xref:System.Web.Security.MembershipProvider> to validate the username and password.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Web.Security.MembershipProvider&gt; to validate the username and password.","pos":[0,86],"source":"A <xref:System.Web.Security.MembershipProvider> to validate the username and password."}]},{"pos":[3916,4064],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that validates a username and password using <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">provider</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"></xref> that validates a username and password using <code>provider</code>."},{"pos":[4621,4759],"content":"Gets a validator that performs no validation on the username and password. As a result, the username and password are always deemed valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a validator that performs no validation on the username and password. As a result, the username and password are always deemed valid.","pos":[0,138],"nodes":[{"content":"Gets a validator that performs no validation on the username and password.","pos":[0,74]},{"content":"As a result, the username and password are always deemed valid.","pos":[75,138]}]}]},{"pos":[4771,4950],"content":"The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this static property can be supplied as a parameter to one of the constructors for the &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&gt; class.","pos":[0,179],"source":"The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class."}]},{"pos":[5159,5297],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that performs no validation on the username and password.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"></xref> that performs no validation on the username and password."},{"pos":[5946,6028],"content":"When overridden in a derived class, validates the specified username and password.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, validates the specified username and password.","pos":[0,82]}]},{"pos":[6040,6258],"content":"Override the Validate method to specify how the username and password is validated. If the username and password do not pass validation, then throw a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Override the Validate method to specify how the username and password is validated. If the username and password do not pass validation, then throw a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.","pos":[0,218],"nodes":[{"content":"Override the Validate method to specify how the username and password is validated.","pos":[0,83]},{"content":"If the username and password do not pass validation, then throw a &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;.","pos":[84,218],"source":" If the username and password do not pass validation, then throw a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>."}]}]},{"pos":[6640,6665],"content":"The username to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The username to validate.","pos":[0,25]}]},{"pos":[6730,6755],"content":"The password to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password to validate.","pos":[0,25]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator\n  id: UserNamePasswordValidator\n  children:\n  - System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor\n  - System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)\n  - System.IdentityModel.Selectors.UserNamePasswordValidator.None\n  - System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)\n  langs:\n  - csharp\n  name: UserNamePasswordValidator\n  nameWithType: UserNamePasswordValidator\n  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator\n  type: Class\n  summary: Validates a username and password.\n  remarks: 'Use the UserNamePasswordValidator class to specify how a username and password is validated. This can be done by deriving a class from UserNamePasswordValidator and override the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> method. For more information about creating a custom user name and password validator, see [How to: Use a Custom User Name and Password Validator](~/add/includes/ajax-current-ext-md.md).'\n  example:\n  - >-\n    [!code-vb[c_UsernameValidator#1](~/add/codesnippet/visualbasic/t-system.identitymodel.s_4_1.vb)]\n     [!code-cs[c_UsernameValidator#1](~/add/codesnippet/csharp/t-system.identitymodel.s_4_1.cs)]\n  syntax:\n    content: public abstract class UserNamePasswordValidator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  langs:\n  - csharp\n  name: UserNamePasswordValidator()\n  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator()\n  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.UserNamePasswordValidator()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"></xref> class.\n  syntax:\n    content: protected UserNamePasswordValidator ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)\n  id: CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  langs:\n  - csharp\n  name: CreateMembershipProviderValidator(MembershipProvider)\n  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)\n  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets an instance of a <xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"></xref> that validates a username and password using the specified membership provider.\n  remarks: The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class.\n  syntax:\n    content: public static System.IdentityModel.Selectors.UserNamePasswordValidator CreateMembershipProviderValidator (System.Web.Security.MembershipProvider provider);\n    parameters:\n    - id: provider\n      type: System.Web.Security.MembershipProvider\n      description: A <xref:System.Web.Security.MembershipProvider> to validate the username and password.\n    return:\n      type: System.IdentityModel.Selectors.UserNamePasswordValidator\n      description: An <xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"></xref> that validates a username and password using <code>provider</code>.\n  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None\n  id: None\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  langs:\n  - csharp\n  name: None\n  nameWithType: UserNamePasswordValidator.None\n  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.None\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a validator that performs no validation on the username and password. As a result, the username and password are always deemed valid.\n  remarks: The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class.\n  syntax:\n    content: public static System.IdentityModel.Selectors.UserNamePasswordValidator None { get; }\n    return:\n      type: System.IdentityModel.Selectors.UserNamePasswordValidator\n      description: An <xref href=\"System.IdentityModel.Selectors.UserNamePasswordValidator\"></xref> that performs no validation on the username and password.\n  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.None*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)\n  id: Validate(System.String,System.String)\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  langs:\n  - csharp\n  name: Validate(String,String)\n  nameWithType: UserNamePasswordValidator.Validate(String,String)\n  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(String,String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: When overridden in a derived class, validates the specified username and password.\n  remarks: Override the Validate method to specify how the username and password is validated. If the username and password do not pass validation, then throw a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.\n  example:\n  - >-\n    [!code-vb[c_UsernameValidator#2](~/add/codesnippet/visualbasic/6855a484-3e15-4d15-ac89-_1.vb)]\n     [!code-cs[c_UsernameValidator#2](~/add/codesnippet/csharp/6855a484-3e15-4d15-ac89-_1.cs)]\n  syntax:\n    content: public abstract void Validate (string userName, string password);\n    parameters:\n    - id: userName\n      type: System.String\n      description: The username to validate.\n    - id: password\n      type: System.String\n      description: The password to validate.\n  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  isExternal: false\n  name: UserNamePasswordValidator()\n  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator()\n  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.UserNamePasswordValidator()\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  isExternal: false\n  name: CreateMembershipProviderValidator(MembershipProvider)\n  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)\n  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: UserNamePasswordValidator\n  nameWithType: UserNamePasswordValidator\n  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator\n- uid: System.Web.Security.MembershipProvider\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipProvider\n  nameWithType: MembershipProvider\n  fullName: System.Web.Security.MembershipProvider\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  isExternal: false\n  name: None\n  nameWithType: UserNamePasswordValidator.None\n  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.None\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  isExternal: false\n  name: Validate(String,String)\n  nameWithType: UserNamePasswordValidator.Validate(String,String)\n  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor*\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  isExternal: false\n  name: UserNamePasswordValidator\n  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator*\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  isExternal: false\n  name: CreateMembershipProviderValidator\n  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None*\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  isExternal: false\n  name: None\n  nameWithType: UserNamePasswordValidator.None\n- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate*\n  parent: System.IdentityModel.Selectors.UserNamePasswordValidator\n  isExternal: false\n  name: Validate\n  nameWithType: UserNamePasswordValidator.Validate\n"}