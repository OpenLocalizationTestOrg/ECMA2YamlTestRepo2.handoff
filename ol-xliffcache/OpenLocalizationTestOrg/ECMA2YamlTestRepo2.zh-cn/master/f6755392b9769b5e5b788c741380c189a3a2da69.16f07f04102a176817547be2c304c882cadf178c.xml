{"nodes":[{"pos":[1073,1124],"content":"Represents a signed rights managed publish license.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a signed rights managed publish license.","pos":[0,51]}]},{"pos":[1137,2284],"content":"PublishLicense defines security data about rights, users, and other security-related information.  The license defines how a specific user on a specific computer can use specified rights managed content.       The publishing process begins with the document author, who defines rights information in an <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Next, the author creates a signed PublishLicense by calling the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method of the <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  The serialized form of the signed PublishLicense can then be provided to end users who can use it to acquire a <xref:System.Security.RightsManagement.UseLicense> by calling the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method of the PublishLicense.  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that were granted to the user.       As with other <xref:System.Security.RightsManagement> types, PublishLicense is only usable in full trust applications.","needQuote":false,"needEscape":true,"nodes":[{"content":"PublishLicense defines security data about rights, users, and other security-related information.  The license defines how a specific user on a specific computer can use specified rights managed content.       The publishing process begins with the document author, who defines rights information in an <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Next, the author creates a signed PublishLicense by calling the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method of the <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  The serialized form of the signed PublishLicense can then be provided to end users who can use it to acquire a <xref:System.Security.RightsManagement.UseLicense> by calling the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method of the PublishLicense.  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that were granted to the user.       As with other <xref:System.Security.RightsManagement> types, PublishLicense is only usable in full trust applications.","pos":[0,1143],"nodes":[{"content":"PublishLicense defines security data about rights, users, and other security-related information.","pos":[0,97]},{"content":"The license defines how a specific user on a specific computer can use specified rights managed content.","pos":[99,203]},{"content":"The publishing process begins with the document author, who defines rights information in an &lt;xref:System.Security.RightsManagement.UnsignedPublishLicense&gt;.","pos":[210,366],"source":"       The publishing process begins with the document author, who defines rights information in an <xref:System.Security.RightsManagement.UnsignedPublishLicense>."},{"content":"Next, the author creates a signed PublishLicense by calling the &lt;xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A&gt; method of the &lt;xref:System.Security.RightsManagement.UnsignedPublishLicense&gt;.","pos":[368,580],"source":"  Next, the author creates a signed PublishLicense by calling the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method of the <xref:System.Security.RightsManagement.UnsignedPublishLicense>."},{"content":"The serialized form of the signed PublishLicense can then be provided to end users who can use it to acquire a &lt;xref:System.Security.RightsManagement.UseLicense&gt; by calling the &lt;xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A&gt; method of the PublishLicense.","pos":[582,864],"source":"  The serialized form of the signed PublishLicense can then be provided to end users who can use it to acquire a <xref:System.Security.RightsManagement.UseLicense> by calling the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method of the PublishLicense."},{"content":"The returned &lt;xref:System.Security.RightsManagement.UseLicense&gt; then allows the client application to exercise the rights that were granted to the user.","pos":[866,1018],"source":"  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that were granted to the user."},{"content":"As with other &lt;xref:System.Security.RightsManagement&gt; types, PublishLicense is only usable in full trust applications.","pos":[1025,1143],"source":"       As with other <xref:System.Security.RightsManagement> types, PublishLicense is only usable in full trust applications."}]}]},{"pos":[3441,3658],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from a specified serialized and signed <bpt id=\"p2\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> class from a specified serialized and signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>."},{"pos":[3827,3867],"content":"A signed and serialized publish license.","needQuote":true,"needEscape":true,"nodes":[{"content":"A signed and serialized publish license.","pos":[0,40]}]},{"pos":[4051,4149],"content":"<ph id=\"ph1\">&lt;code&gt;signedPublishLicense&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>signedPublishLicense</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4312,4335],"content":"The license is invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The license is invalid.","pos":[0,23]}]},{"pos":[4950,5149],"content":"Attempts to acquire a <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a user or user group in a specified <bpt id=\"p2\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Attempts to acquire a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in a specified <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>."},{"pos":[5440,5498],"content":"The secure environment for license activation and binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secure environment for license activation and binding.","pos":[0,58]}]},{"pos":[5586,5728],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a user or user group in the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">secureEnvironment</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in the specified <code>secureEnvironment</code>."},{"pos":[5924,6019],"content":"<ph id=\"ph1\">&lt;code&gt;secureEnvironment&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>secureEnvironment</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6182,6208],"content":"The authentication failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The authentication failed.","pos":[0,26]}]},{"pos":[6843,7042],"content":"Attempts to acquire a <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a user or user group in a specified <bpt id=\"p2\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Attempts to acquire a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in a specified <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>."},{"pos":[7054,7455],"content":"The AcquireUseLicenseNoUI method suppresses the Windows network authentication dialog box. If the license request is denied because the user does not have permission, AcquireUseLicenseNoUI prevents the network authentication dialog box from displaying. Use silent acquisition when attempting to obtain licenses in a background task or in a non-user interface that might display confusing dialog boxes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The AcquireUseLicenseNoUI method suppresses the Windows network authentication dialog box. If the license request is denied because the user does not have permission, AcquireUseLicenseNoUI prevents the network authentication dialog box from displaying. Use silent acquisition when attempting to obtain licenses in a background task or in a non-user interface that might display confusing dialog boxes.","pos":[0,401],"nodes":[{"content":"The AcquireUseLicenseNoUI method suppresses the Windows network authentication dialog box.","pos":[0,90]},{"content":"If the license request is denied because the user does not have permission, AcquireUseLicenseNoUI prevents the network authentication dialog box from displaying.","pos":[91,252]},{"content":"Use silent acquisition when attempting to obtain licenses in a background task or in a non-user interface that might display confusing dialog boxes.","pos":[253,401]}]}]},{"pos":[7750,7808],"content":"The secure environment for license activation and binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secure environment for license activation and binding.","pos":[0,58]}]},{"pos":[7896,8038],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a user or user group in the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">secureEnvironment</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in the specified <code>secureEnvironment</code>."},{"pos":[8238,8333],"content":"<ph id=\"ph1\">&lt;code&gt;secureEnvironment&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>secureEnvironment</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8496,8522],"content":"The authentication failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The authentication failed.","pos":[0,26]}]},{"pos":[8938,8984],"content":"Gets the publisher-created content identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the publisher-created content identifier.","pos":[0,46]}]},{"pos":[8996,9126],"content":"Publishers create a <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> to identify the protected content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Publishers create a &lt;xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A&gt; to identify the protected content.","pos":[0,130],"source":"Publishers create a <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> to identify the protected content."}]},{"pos":[9236,9277],"content":"The publisher-created content identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The publisher-created content identifier.","pos":[0,41]}]},{"pos":[10025,10214],"content":"Returns a decrypted <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> version of this signed <bpt id=\"p2\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a decrypted <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref> version of this signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>."},{"pos":[10226,10503],"content":"The DecryptUnsignedPublishLicense method allows the license owner and users who were granted <xref:System.Security.RightsManagement.ContentRight> to extract the original information that was encrypted when the <xref:System.Security.RightsManagement.PublishLicense> was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DecryptUnsignedPublishLicense method allows the license owner and users who were granted &lt;xref:System.Security.RightsManagement.ContentRight&gt; to extract the original information that was encrypted when the &lt;xref:System.Security.RightsManagement.PublishLicense&gt; was created.","pos":[0,277],"source":"The DecryptUnsignedPublishLicense method allows the license owner and users who were granted <xref:System.Security.RightsManagement.ContentRight> to extract the original information that was encrypted when the <xref:System.Security.RightsManagement.PublishLicense> was created."}]},{"pos":[10806,10870],"content":"The rights management service to use for decrypting the license.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rights management service to use for decrypting the license.","pos":[0,64]}]},{"pos":[10970,11016],"content":"A decrypted, unsigned version of this license.","needQuote":true,"needEscape":true,"nodes":[{"content":"A decrypted, unsigned version of this license.","pos":[0,46]}]},{"pos":[11224,11316],"content":"<ph id=\"ph1\">&lt;code&gt;cryptoProvider&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>cryptoProvider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11767,11832],"content":"Gets the contact name for the author or publisher of the content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the contact name for the author or publisher of the content.","pos":[0,65]}]},{"pos":[11844,12149],"content":"The string returned by the ReferralInfoName property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string returned by the ReferralInfoName property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.","pos":[0,305],"nodes":[{"content":"The string returned by the ReferralInfoName property is not encrypted and can be accessed even when the user does not yet have a &lt;xref:System.Security.RightsManagement.UseLicense&gt;.","pos":[0,180],"source":"The string returned by the ReferralInfoName property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>."},{"content":"The returned string permits users to contact the publisher to request a &lt;xref:System.Security.RightsManagement.UseLicense&gt;.","pos":[182,305],"source":"  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>."}]}]},{"pos":[12270,12330],"content":"The contact name for the author or publisher of the content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contact name for the author or publisher of the content.","pos":[0,60]}]},{"pos":[12871,12995],"content":"Gets the contact <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> for the author or publisher of the content.","needQuote":true,"needEscape":true,"source":"Gets the contact [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] for the author or publisher of the content."},{"pos":[13007,13311],"content":"The string returned by the ReferralInfoUri property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string returned by the ReferralInfoUri property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.","pos":[0,304],"nodes":[{"content":"The string returned by the ReferralInfoUri property is not encrypted and can be accessed even when the user does not yet have a &lt;xref:System.Security.RightsManagement.UseLicense&gt;.","pos":[0,179],"source":"The string returned by the ReferralInfoUri property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>."},{"content":"The returned string permits users to contact the publisher to request a &lt;xref:System.Security.RightsManagement.UseLicense&gt;.","pos":[181,304],"source":"  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>."}]}]},{"pos":[13425,13542],"content":"The contact <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> for the author or publisher of the content.","needQuote":true,"needEscape":true,"source":"The contact [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] for the author or publisher of the content."},{"pos":[14051,14184],"content":"Returns the serialized <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]</ph> string that was used to create this license.","needQuote":true,"needEscape":true,"source":"Returns the serialized [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] string that was used to create this license."},{"pos":[14320,14443],"content":"The serialized <ph id=\"ph1\">[!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)]</ph> string that was used to create this license.","needQuote":true,"needEscape":true,"source":"The serialized [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)] string that was used to create this license."},{"pos":[15021,15182],"content":"Gets the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> to use for acquiring a <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] to use for acquiring a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>."},{"pos":[15194,15404],"content":"The UseLicenseAcquisitionUrl property is used by the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method when a user acquires a <xref:System.Security.RightsManagement.UseLicense>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The UseLicenseAcquisitionUrl property is used by the &lt;xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A&gt; method when a user acquires a &lt;xref:System.Security.RightsManagement.UseLicense&gt;.","pos":[0,210],"source":"The UseLicenseAcquisitionUrl property is used by the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method when a user acquires a <xref:System.Security.RightsManagement.UseLicense>."}]},{"pos":[15527,15683],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> to use for acquiring a <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] to use for acquiring a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.RightsManagement.PublishLicense\n  id: PublishLicense\n  children:\n  - System.Security.RightsManagement.PublishLicense.#ctor(System.String)\n  - System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)\n  - System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)\n  - System.Security.RightsManagement.PublishLicense.ContentId\n  - System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)\n  - System.Security.RightsManagement.PublishLicense.ReferralInfoName\n  - System.Security.RightsManagement.PublishLicense.ReferralInfoUri\n  - System.Security.RightsManagement.PublishLicense.ToString\n  - System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl\n  langs:\n  - csharp\n  name: PublishLicense\n  nameWithType: PublishLicense\n  fullName: System.Security.RightsManagement.PublishLicense\n  type: Class\n  summary: Represents a signed rights managed publish license.\n  remarks: \"PublishLicense defines security data about rights, users, and other security-related information.  The license defines how a specific user on a specific computer can use specified rights managed content.  \\n  \\n The publishing process begins with the document author, who defines rights information in an <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Next, the author creates a signed PublishLicense by calling the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method of the <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  The serialized form of the signed PublishLicense can then be provided to end users who can use it to acquire a <xref:System.Security.RightsManagement.UseLicense> by calling the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method of the PublishLicense.  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that were granted to the user.  \\n  \\n As with other <xref:System.Security.RightsManagement> types, PublishLicense is only usable in full trust applications.\"\n  example:\n  - \"The following example shows how to initialize a PublishLicense by using the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public class PublishLicense\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.PublishLicense.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: PublishLicense(String)\n  nameWithType: PublishLicense.PublishLicense(String)\n  fullName: System.Security.RightsManagement.PublishLicense.PublishLicense(String)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Initializes a new instance of the <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> class from a specified serialized and signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>.\n  syntax:\n    content: public PublishLicense (string signedPublishLicense);\n    parameters:\n    - id: signedPublishLicense\n      type: System.String\n      description: A signed and serialized publish license.\n  overload: System.Security.RightsManagement.PublishLicense.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>signedPublishLicense</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.RightsManagement.RightsManagementException\n    commentId: T:System.Security.RightsManagement.RightsManagementException\n    description: The license is invalid.\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)\n  id: AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: AcquireUseLicense(SecureEnvironment)\n  nameWithType: PublishLicense.AcquireUseLicense(SecureEnvironment)\n  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(SecureEnvironment)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Attempts to acquire a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in a specified <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.\n  syntax:\n    content: public System.Security.RightsManagement.UseLicense AcquireUseLicense (System.Security.RightsManagement.SecureEnvironment secureEnvironment);\n    parameters:\n    - id: secureEnvironment\n      type: System.Security.RightsManagement.SecureEnvironment\n      description: The secure environment for license activation and binding.\n    return:\n      type: System.Security.RightsManagement.UseLicense\n      description: The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in the specified <code>secureEnvironment</code>.\n  overload: System.Security.RightsManagement.PublishLicense.AcquireUseLicense*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>secureEnvironment</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.RightsManagement.RightsManagementException\n    commentId: T:System.Security.RightsManagement.RightsManagementException\n    description: The authentication failed.\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)\n  id: AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: AcquireUseLicenseNoUI(SecureEnvironment)\n  nameWithType: PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)\n  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Attempts to acquire a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in a specified <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.\n  remarks: The AcquireUseLicenseNoUI method suppresses the Windows network authentication dialog box. If the license request is denied because the user does not have permission, AcquireUseLicenseNoUI prevents the network authentication dialog box from displaying. Use silent acquisition when attempting to obtain licenses in a background task or in a non-user interface that might display confusing dialog boxes.\n  syntax:\n    content: public System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI (System.Security.RightsManagement.SecureEnvironment secureEnvironment);\n    parameters:\n    - id: secureEnvironment\n      type: System.Security.RightsManagement.SecureEnvironment\n      description: The secure environment for license activation and binding.\n    return:\n      type: System.Security.RightsManagement.UseLicense\n      description: The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in the specified <code>secureEnvironment</code>.\n  overload: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>secureEnvironment</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.RightsManagement.RightsManagementException\n    commentId: T:System.Security.RightsManagement.RightsManagementException\n    description: The authentication failed.\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.PublishLicense.ContentId\n  id: ContentId\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: ContentId\n  nameWithType: PublishLicense.ContentId\n  fullName: System.Security.RightsManagement.PublishLicense.ContentId\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the publisher-created content identifier.\n  remarks: Publishers create a <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> to identify the protected content.\n  syntax:\n    content: public Guid ContentId { get; }\n    return:\n      type: System.Guid\n      description: The publisher-created content identifier.\n  overload: System.Security.RightsManagement.PublishLicense.ContentId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)\n  id: DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: DecryptUnsignedPublishLicense(CryptoProvider)\n  nameWithType: PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)\n  fullName: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns a decrypted <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref> version of this signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>.\n  remarks: The DecryptUnsignedPublishLicense method allows the license owner and users who were granted <xref:System.Security.RightsManagement.ContentRight> to extract the original information that was encrypted when the <xref:System.Security.RightsManagement.PublishLicense> was created.\n  syntax:\n    content: public System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense (System.Security.RightsManagement.CryptoProvider cryptoProvider);\n    parameters:\n    - id: cryptoProvider\n      type: System.Security.RightsManagement.CryptoProvider\n      description: The rights management service to use for decrypting the license.\n    return:\n      type: System.Security.RightsManagement.UnsignedPublishLicense\n      description: A decrypted, unsigned version of this license.\n  overload: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>cryptoProvider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName\n  id: ReferralInfoName\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: ReferralInfoName\n  nameWithType: PublishLicense.ReferralInfoName\n  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoName\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the contact name for the author or publisher of the content.\n  remarks: The string returned by the ReferralInfoName property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.\n  syntax:\n    content: public string ReferralInfoName { get; }\n    return:\n      type: System.String\n      description: The contact name for the author or publisher of the content.\n  overload: System.Security.RightsManagement.PublishLicense.ReferralInfoName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri\n  id: ReferralInfoUri\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: ReferralInfoUri\n  nameWithType: PublishLicense.ReferralInfoUri\n  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoUri\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the contact [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] for the author or publisher of the content.\n  remarks: The string returned by the ReferralInfoUri property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.\n  syntax:\n    content: public Uri ReferralInfoUri { get; }\n    return:\n      type: System.Uri\n      description: The contact [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] for the author or publisher of the content.\n  overload: System.Security.RightsManagement.PublishLicense.ReferralInfoUri*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.PublishLicense.ToString\n  id: ToString\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: PublishLicense.ToString()\n  fullName: System.Security.RightsManagement.PublishLicense.ToString()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns the serialized [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] string that was used to create this license.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The serialized [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)] string that was used to create this license.\n  overload: System.Security.RightsManagement.PublishLicense.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl\n  id: UseLicenseAcquisitionUrl\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: UseLicenseAcquisitionUrl\n  nameWithType: PublishLicense.UseLicenseAcquisitionUrl\n  fullName: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] to use for acquiring a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>.\n  remarks: The UseLicenseAcquisitionUrl property is used by the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method when a user acquires a <xref:System.Security.RightsManagement.UseLicense>.\n  syntax:\n    content: public Uri UseLicenseAcquisitionUrl { get; }\n    return:\n      type: System.Uri\n      description: The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] to use for acquiring a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>.\n  overload: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.RightsManagement.RightsManagementException\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: RightsManagementException\n  nameWithType: RightsManagementException\n  fullName: System.Security.RightsManagement.RightsManagementException\n- uid: System.Security.RightsManagement.PublishLicense.#ctor(System.String)\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: PublishLicense(String)\n  nameWithType: PublishLicense.PublishLicense(String)\n  fullName: System.Security.RightsManagement.PublishLicense.PublishLicense(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: AcquireUseLicense(SecureEnvironment)\n  nameWithType: PublishLicense.AcquireUseLicense(SecureEnvironment)\n  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(SecureEnvironment)\n- uid: System.Security.RightsManagement.UseLicense\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: UseLicense\n  nameWithType: UseLicense\n  fullName: System.Security.RightsManagement.UseLicense\n- uid: System.Security.RightsManagement.SecureEnvironment\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: SecureEnvironment\n  nameWithType: SecureEnvironment\n  fullName: System.Security.RightsManagement.SecureEnvironment\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: AcquireUseLicenseNoUI(SecureEnvironment)\n  nameWithType: PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)\n  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)\n- uid: System.Security.RightsManagement.PublishLicense.ContentId\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ContentId\n  nameWithType: PublishLicense.ContentId\n  fullName: System.Security.RightsManagement.PublishLicense.ContentId\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: DecryptUnsignedPublishLicense(CryptoProvider)\n  nameWithType: PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)\n  fullName: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)\n- uid: System.Security.RightsManagement.UnsignedPublishLicense\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: UnsignedPublishLicense\n  nameWithType: UnsignedPublishLicense\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense\n- uid: System.Security.RightsManagement.CryptoProvider\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: CryptoProvider\n  nameWithType: CryptoProvider\n  fullName: System.Security.RightsManagement.CryptoProvider\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ReferralInfoName\n  nameWithType: PublishLicense.ReferralInfoName\n  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoName\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ReferralInfoUri\n  nameWithType: PublishLicense.ReferralInfoUri\n  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoUri\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Security.RightsManagement.PublishLicense.ToString\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ToString()\n  nameWithType: PublishLicense.ToString()\n  fullName: System.Security.RightsManagement.PublishLicense.ToString()\n- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: UseLicenseAcquisitionUrl\n  nameWithType: PublishLicense.UseLicenseAcquisitionUrl\n  fullName: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl\n- uid: System.Security.RightsManagement.PublishLicense.#ctor*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: PublishLicense\n  nameWithType: PublishLicense.PublishLicense\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: AcquireUseLicense\n  nameWithType: PublishLicense.AcquireUseLicense\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: AcquireUseLicenseNoUI\n  nameWithType: PublishLicense.AcquireUseLicenseNoUI\n- uid: System.Security.RightsManagement.PublishLicense.ContentId*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ContentId\n  nameWithType: PublishLicense.ContentId\n- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: DecryptUnsignedPublishLicense\n  nameWithType: PublishLicense.DecryptUnsignedPublishLicense\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ReferralInfoName\n  nameWithType: PublishLicense.ReferralInfoName\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ReferralInfoUri\n  nameWithType: PublishLicense.ReferralInfoUri\n- uid: System.Security.RightsManagement.PublishLicense.ToString*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ToString\n  nameWithType: PublishLicense.ToString\n- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: UseLicenseAcquisitionUrl\n  nameWithType: PublishLicense.UseLicenseAcquisitionUrl\n"}