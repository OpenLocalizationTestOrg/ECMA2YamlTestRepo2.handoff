{"nodes":[{"pos":[1797,1861],"content":"Represents an x- and y-coordinate pair in two-dimensional space.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an x- and y-coordinate pair in two-dimensional space.","pos":[0,64]}]},{"pos":[1874,2882],"content":"In XAML, the delimiter between the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a Point can be either a comma or a space.       Some cultures might use the comma character as the decimal delimiter instead of the period character. XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter. You should avoid using the comma character as the decimal delimiter if specifying a Point in XAML, because that will clash with the string type conversion of a Point attribute value into the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> components.      <a name=\"xamlAttributeUsage_Duration\"></a>    ## XAML Attribute Usage      ```   <object property=\"x,y\"/>   -or-   <object property=\"x y\"/>   ```      <a name=\"xamlValues_MinWidth\"></a>    ## XAML Values    *x*    The x-coordinate of this Point.       *y*    The y-coordinate of this Point.","needQuote":false,"needEscape":true,"nodes":[{"content":"In XAML, the delimiter between the &lt;xref:System.Windows.Point.X%2A&gt; and &lt;xref:System.Windows.Point.Y%2A&gt; values of a Point can be either a comma or a space.","pos":[0,156],"source":"In XAML, the delimiter between the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a Point can be either a comma or a space."},{"content":"Some cultures might use the comma character as the decimal delimiter instead of the period character.","pos":[163,264]},{"content":"XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.","pos":[265,412]},{"content":"You should avoid using the comma character as the decimal delimiter if specifying a Point in XAML, because that will clash with the string type conversion of a Point attribute value into the &lt;xref:System.Windows.Point.X%2A&gt; and &lt;xref:System.Windows.Point.Y%2A&gt; components.","pos":[413,685],"source":" You should avoid using the comma character as the decimal delimiter if specifying a Point in XAML, because that will clash with the string type conversion of a Point attribute value into the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> components."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Duration\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object property=\"x,y\"/&gt;   -or-   &lt;object property=\"x y\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_MinWidth\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>x<ept id=\"p3\">*</ept>    The x-coordinate of this Point.","pos":[691,936],"source":"<a name=\"xamlAttributeUsage_Duration\"></a>    ## XAML Attribute Usage      ```   <object property=\"x,y\"/>   -or-   <object property=\"x y\"/>   ```      <a name=\"xamlValues_MinWidth\"></a>    ## XAML Values    *x*    The x-coordinate of this Point."},{"content":"<bpt id=\"p1\">*</bpt>y<ept id=\"p1\">*</ept>    The y-coordinate of this Point.","pos":[943,981],"source":"*y*    The y-coordinate of this Point."}]},{"pos":[4138,4244],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the specified coordinates.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Windows.Point\"></xref> structure that contains the specified coordinates."},{"pos":[4376,4456],"content":"The x-coordinate of the new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The x-coordinate of the new <xref href=\"System.Windows.Point\"></xref> structure."},{"pos":[4514,4594],"content":"The y-coordinate of the new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The y-coordinate of the new <xref href=\"System.Windows.Point\"></xref> structure."},{"pos":[5057,5234],"content":"Adds a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Vector\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and returns the result as a <bpt id=\"p3\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Adds a <xref href=\"System.Windows.Vector\"></xref> to a <xref href=\"System.Windows.Point\"></xref> and returns the result as a <xref href=\"System.Windows.Point\"></xref> structure."},{"pos":[5246,5350],"content":"Adding a <xref:System.Windows.Point> structure to a <xref:System.Windows.Point> structure is prohibited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adding a &lt;xref:System.Windows.Point&gt; structure to a &lt;xref:System.Windows.Point&gt; structure is prohibited.","pos":[0,104],"source":"Adding a <xref:System.Windows.Point> structure to a <xref:System.Windows.Point> structure is prohibited."}]},{"pos":[5888,5951],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Point\"></xref> structure to add."},{"pos":[6022,6086],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Vector\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Vector\"></xref> structure to add."},{"pos":[6151,6213],"content":"Returns the sum of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">point</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">vector</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the sum of <code>point</code> and <code>vector</code>."},{"pos":[6613,6809],"content":"Determines whether the specified &lt;xref:System.Object&gt; is a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and whether it contains the same coordinates as this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref:System.Object> is a <xref href=\"System.Windows.Point\"></xref> and whether it contains the same coordinates as this <xref href=\"System.Windows.Point\"></xref>."},{"pos":[6821,7089],"content":"<xref:System.Windows.Point> coordinates are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Windows.Point> coordinates are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.","pos":[0,268],"nodes":[{"content":"&lt;xref:System.Windows.Point&gt; coordinates are described using &lt;xref:System.Double&gt; values.","pos":[0,88],"source":"<xref:System.Windows.Point> coordinates are described using <xref:System.Double> values."},{"content":"Because the value of a &lt;xref:System.Double&gt; can lose precision when operated upon, a comparison between two &lt;xref:System.Windows.Point&gt; values that are logically equal might fail.","pos":[89,268],"source":" Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail."}]}]},{"pos":[7536,7572],"content":"The <xref:System.Object> to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to compare.","pos":[0,36],"source":"The <xref:System.Object> to compare."}]},{"pos":[7631,7977],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">o</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a <bpt id=\"p3\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and contains the same &lt;xref:System.Windows.Point.X<bpt id=\"p4\">*</bpt>&gt; and &lt;xref:System.Windows.Point.Y<ept id=\"p4\">*</ept>&gt; values as this <bpt id=\"p5\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p6\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>o</code> is a <xref href=\"System.Windows.Point\"></xref> and contains the same <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> values as this <xref href=\"System.Windows.Point\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8391,8470],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures for equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Point\"></xref> structures for equality."},{"pos":[8482,8748],"content":"<xref:System.Windows.Point> coordinates are expressed using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Windows.Point> coordinates are expressed using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.","pos":[0,266],"nodes":[{"content":"&lt;xref:System.Windows.Point&gt; coordinates are expressed using &lt;xref:System.Double&gt; values.","pos":[0,88],"source":"<xref:System.Windows.Point> coordinates are expressed using <xref:System.Double> values."},{"content":"Because the value of a &lt;xref:System.Double&gt; can lose precision when operated on, a comparison between two &lt;xref:System.Windows.Point&gt; values that are logically equal might fail.","pos":[89,266],"source":" Because the value of a <xref:System.Double> can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail."}]}]},{"pos":[8905,8943],"content":"The point to compare to this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The point to compare to this instance.","pos":[0,38]}]},{"pos":[9002,9289],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if both <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structures contain the same &lt;xref:System.Windows.Point.X<bpt id=\"p3\">*</bpt>&gt; and &lt;xref:System.Windows.Point.Y<ept id=\"p3\">*</ept>&gt; values; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <xref href=\"System.Windows.Point\"></xref> structures contain the same <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9763,9842],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures for equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Point\"></xref> structures for equality."},{"pos":[9854,10100],"content":"Point coordinates are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"Point coordinates are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.","pos":[0,246],"nodes":[{"content":"Point coordinates are described using &lt;xref:System.Double&gt; values.","pos":[0,66],"source":"Point coordinates are described using <xref:System.Double> values."},{"content":"Because the value of a &lt;xref:System.Double&gt; can lose precision when operated upon, a comparison between two &lt;xref:System.Windows.Point&gt; values that are logically equal might fail.","pos":[67,246],"source":" Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail."}]}]},{"pos":[10595,10622],"content":"The first point to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first point to compare.","pos":[0,27]}]},{"pos":[10692,10720],"content":"The second point to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second point to compare.","pos":[0,28]}]},{"pos":[10779,11052],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">point1</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">point2</ph><ept id=\"p3\">&lt;/code&gt;</ept> contain the same &lt;xref:System.Windows.Point.X<bpt id=\"p4\">*</bpt>&gt; and &lt;xref:System.Windows.Point.Y<ept id=\"p4\">*</ept>&gt; values; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>point1</code> and <code>point2</code> contain the same <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11432,11505],"content":"Returns the hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the hash code for this <xref href=\"System.Windows.Point\"></xref>."},{"pos":[11920,11995],"content":"The hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The hash code for this <xref href=\"System.Windows.Point\"></xref> structure."},{"pos":[12501,12654],"content":"Transforms the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure by the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Transforms the specified <xref href=\"System.Windows.Point\"></xref> structure by the specified <xref href=\"System.Windows.Media.Matrix\"></xref> structure."},{"pos":[13236,13259],"content":"The point to transform.","needQuote":true,"needEscape":true,"nodes":[{"content":"The point to transform.","pos":[0,23]}]},{"pos":[13336,13362],"content":"The transformation matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformation matrix.","pos":[0,26]}]},{"pos":[13427,13449],"content":"The transformed point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformed point.","pos":[0,22]}]},{"pos":[13903,14024],"content":"Offsets a point's &lt;xref:System.Windows.Point.X<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Windows.Point.Y<ept id=\"p1\">*</ept>&gt; coordinates by the specified amounts.","needQuote":true,"needEscape":true,"source":"Offsets a point's <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> coordinates by the specified amounts."},{"pos":[14037,15022],"content":"This operation is equivalent to adding a <xref:System.Windows.Point> to a <xref:System.Windows.Vector>.       Note that calling the Offset method will only have an effect if you can change the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties directly. Because <xref:System.Windows.Point> is a value type, if you reference a <xref:System.Windows.Point> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Point.X%2A> or <xref:System.Windows.Point.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling Offset on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Point> that is referenced as a property or indexer, create a new <xref:System.Windows.Point>, modify its fields, and then assign the <xref:System.Windows.Point> back to the property or indexer.","needQuote":false,"needEscape":true,"nodes":[{"content":"This operation is equivalent to adding a <xref:System.Windows.Point> to a <xref:System.Windows.Vector>.       Note that calling the Offset method will only have an effect if you can change the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties directly. Because <xref:System.Windows.Point> is a value type, if you reference a <xref:System.Windows.Point> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Point.X%2A> or <xref:System.Windows.Point.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling Offset on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Point> that is referenced as a property or indexer, create a new <xref:System.Windows.Point>, modify its fields, and then assign the <xref:System.Windows.Point> back to the property or indexer.","pos":[0,983],"nodes":[{"content":"This operation is equivalent to adding a &lt;xref:System.Windows.Point&gt; to a &lt;xref:System.Windows.Vector&gt;.","pos":[0,103],"source":"This operation is equivalent to adding a <xref:System.Windows.Point> to a <xref:System.Windows.Vector>."},{"content":"Note that calling the Offset method will only have an effect if you can change the &lt;xref:System.Windows.Point.X%2A&gt; and &lt;xref:System.Windows.Point.Y%2A&gt; properties directly.","pos":[110,283],"source":"       Note that calling the Offset method will only have an effect if you can change the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties directly."},{"content":"Because &lt;xref:System.Windows.Point&gt; is a value type, if you reference a &lt;xref:System.Windows.Point&gt; object by using a property or indexer, you get a copy of the object, not a reference to the object.","pos":[284,483],"source":" Because <xref:System.Windows.Point> is a value type, if you reference a <xref:System.Windows.Point> object by using a property or indexer, you get a copy of the object, not a reference to the object."},{"content":"If you attempt to change &lt;xref:System.Windows.Point.X%2A&gt; or &lt;xref:System.Windows.Point.Y%2A&gt; on a property or indexer reference, a compiler error occurs.","pos":[484,638],"source":" If you attempt to change <xref:System.Windows.Point.X%2A> or <xref:System.Windows.Point.Y%2A> on a property or indexer reference, a compiler error occurs."},{"content":"Similarly, calling Offset on the property or indexer will not change the underlying object.","pos":[639,730]},{"content":"If you want to change the value of a &lt;xref:System.Windows.Point&gt; that is referenced as a property or indexer, create a new &lt;xref:System.Windows.Point&gt;, modify its fields, and then assign the &lt;xref:System.Windows.Point&gt; back to the property or indexer.","pos":[732,983],"source":"  If you want to change the value of a <xref:System.Windows.Point> that is referenced as a property or indexer, create a new <xref:System.Windows.Point>, modify its fields, and then assign the <xref:System.Windows.Point> back to the property or indexer."}]}]},{"pos":[15506,15589],"content":"The amount to offset the point's       <xref:System.Windows.Point.X*> coordinate.","needQuote":false,"needEscape":true,"nodes":[{"content":"The amount to offset the point's       &lt;xref:System.Windows.Point.X*&gt; coordinate.","pos":[0,81],"source":"The amount to offset the point's       <xref:System.Windows.Point.X*> coordinate."}]},{"pos":[15655,15738],"content":"The amount to offset the       point's <xref:System.Windows.Point.Y*> coordinate.","needQuote":false,"needEscape":true,"nodes":[{"content":"The amount to offset the       point's &lt;xref:System.Windows.Point.Y*&gt; coordinate.","pos":[0,81],"source":"The amount to offset the       point's <xref:System.Windows.Point.Y*> coordinate."}]},{"pos":[16245,16395],"content":"Translates the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Vector\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and returns the result.","needQuote":true,"needEscape":true,"source":"Translates the specified <xref href=\"System.Windows.Point\"></xref> by the specified <xref href=\"System.Windows.Vector\"></xref> and returns the result."},{"pos":[17114,17137],"content":"The point to translate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The point to translate.","pos":[0,23]}]},{"pos":[17208,17249],"content":"The amount by which to translate <ph id=\"ph1\">`point`</ph>.","needQuote":true,"needEscape":true,"source":"The amount by which to translate `point`."},{"pos":[17314,17384],"content":"The result of translating the specified point by the specified vector.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of translating the specified point by the specified vector.","pos":[0,70]}]},{"pos":[17890,17969],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures for equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Point\"></xref> structures for equality."},{"pos":[17981,18259],"content":"A point's coordinates are described using <xref:System.Double> values. Because the value of <xref:System.Double> can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"A point's coordinates are described using <xref:System.Double> values. Because the value of <xref:System.Double> can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.","pos":[0,278],"nodes":[{"content":"A point's coordinates are described using &lt;xref:System.Double&gt; values.","pos":[0,70],"source":"A point's coordinates are described using <xref:System.Double> values."},{"content":"Because the value of &lt;xref:System.Double&gt; can lose precision when arithmetic operations are performed on them, a comparison between two &lt;xref:System.Windows.Point&gt; values that are logically equal might fail.","pos":[71,278],"source":" Because the value of <xref:System.Double> can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail."}]}]},{"pos":[18944,19017],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Windows.Point\"></xref> structure to compare."},{"pos":[19087,19161],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Windows.Point\"></xref> structure to compare."},{"pos":[19220,19503],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if both the &lt;xref:System.Windows.Point.X<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Windows.Point.Y<ept id=\"p2\">*</ept>&gt; coordinates of <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">point1</ph><ept id=\"p3\">&lt;/code&gt;</ept> and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">point2</ph><ept id=\"p4\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both the <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> coordinates of <code>point1</code> and <code>point2</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20167,20179],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20243,20255],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20925,20937],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21003,21015],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21531,21612],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures for inequality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Point\"></xref> structures for inequality."},{"pos":[21624,21934],"content":"A point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> coordinates are described using <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"A point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> coordinates are described using <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.","pos":[0,310],"nodes":[{"content":"A point's &lt;xref:System.Windows.Point.X%2A&gt; and &lt;xref:System.Windows.Point.Y%2A&gt; coordinates are described using &lt;xref:System.Double&gt; values.","pos":[0,140],"source":"A point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> coordinates are described using <xref:System.Double> values."},{"content":"Because &lt;xref:System.Double&gt; values can lose precision when operated on, a comparison between two &lt;xref:System.Windows.Point&gt; values that are logically equal might fail.","pos":[141,310],"source":" Because <xref:System.Double> values can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail."}]}]},{"pos":[22639,22666],"content":"The first point to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first point to compare.","pos":[0,27]}]},{"pos":[22736,22764],"content":"The second point to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second point to compare.","pos":[0,28]}]},{"pos":[22823,23226],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">point1</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">point2</ph><ept id=\"p3\">&lt;/code&gt;</ept> have different &lt;xref:System.Windows.Point.X<bpt id=\"p4\">*</bpt>&gt; or &lt;xref:System.Windows.Point.Y<ept id=\"p4\">*</ept>&gt; coordinates; <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> if <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph3\">point1</ph><ept id=\"p6\">&lt;/code&gt;</ept> and <bpt id=\"p7\">&lt;code&gt;</bpt><ph id=\"ph4\">point2</ph><ept id=\"p7\">&lt;/code&gt;</ept> have the same &lt;xref:System.Windows.Point.X<bpt id=\"p8\">*</bpt>&gt; and &lt;xref:System.Windows.Point.Y<ept id=\"p8\">*</ept>&gt; coordinates.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>point1</code> and <code>point2</code> have different <xref:System.Windows.Point.X*> or <xref:System.Windows.Point.Y*> coordinates; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>point1</code> and <code>point2</code> have the same <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> coordinates."},{"pos":[23751,23884],"content":"Transforms the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Transforms the specified <xref href=\"System.Windows.Point\"></xref> by the specified <xref href=\"System.Windows.Media.Matrix\"></xref>."},{"pos":[24672,24695],"content":"The point to transform.","needQuote":true,"needEscape":true,"nodes":[{"content":"The point to transform.","pos":[0,23]}]},{"pos":[24772,24798],"content":"The transformation matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transformation matrix.","pos":[0,26]}]},{"pos":[24863,24937],"content":"The result of transforming the specified point using the specified matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of transforming the specified point using the specified matrix.","pos":[0,74]}]},{"pos":[25458,25664],"content":"Subtracts the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from another specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and returns the difference as a <bpt id=\"p3\">&lt;xref href=\"System.Windows.Vector\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Subtracts the specified <xref href=\"System.Windows.Point\"></xref> from another specified <xref href=\"System.Windows.Point\"></xref> and returns the difference as a <xref href=\"System.Windows.Vector\"></xref>."},{"pos":[26458,26502],"content":"The point from which <ph id=\"ph1\">`point2`</ph> is subtracted.","needQuote":true,"needEscape":true,"source":"The point from which `point2` is subtracted."},{"pos":[26572,26608],"content":"The point to subtract from <ph id=\"ph1\">`point1`</ph>.","needQuote":true,"needEscape":true,"source":"The point to subtract from `point1`."},{"pos":[26674,26741],"content":"The difference between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">point1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">point2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The difference between <code>point1</code> and <code>point2</code>."},{"pos":[27270,27466],"content":"Subtracts the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Vector\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and returns the resulting <bpt id=\"p3\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Subtracts the specified <xref href=\"System.Windows.Vector\"></xref> from the specified <xref href=\"System.Windows.Point\"></xref> and returns the resulting <xref href=\"System.Windows.Point\"></xref>."},{"pos":[28211,28255],"content":"The point from which <ph id=\"ph1\">`vector`</ph> is subtracted.","needQuote":true,"needEscape":true,"source":"The point from which `vector` is subtracted."},{"pos":[28326,28362],"content":"The vector to subtract from <ph id=\"ph1\">`point1`</ph>","needQuote":true,"needEscape":true,"source":"The vector to subtract from `point1`"},{"pos":[28427,28493],"content":"The difference between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">point</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">vector</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The difference between <code>point</code> and <code>vector</code>."},{"pos":[28899,28994],"content":"Constructs a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified &lt;xref:System.String&gt;.","needQuote":true,"needEscape":true,"source":"Constructs a <xref href=\"System.Windows.Point\"></xref> from the specified <xref:System.String>."},{"pos":[29598,29633],"content":"A string representation of a point.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representation of a point.","pos":[0,35]}]},{"pos":[29698,29765],"content":"The equivalent <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The equivalent <xref href=\"System.Windows.Point\"></xref> structure."},{"pos":[29910,29993],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> is not composed of two comma- or space-delimited double values.","needQuote":true,"needEscape":true,"source":"<code>source</code> is not composed of two comma- or space-delimited double values."},{"pos":[30105,30225],"content":"<code>source</code> does not contain two numbers.       -or-       <code>source</code> contains too many delimiters.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> does not contain two numbers.","pos":[0,49],"source":"<code>source</code> does not contain two numbers."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> contains too many delimiters.","pos":[56,116],"source":"       -or-       <code>source</code> contains too many delimiters."}]},{"pos":[30652,30858],"content":"Subtracts the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from another specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and returns the difference as a <bpt id=\"p3\">&lt;xref href=\"System.Windows.Vector\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Subtracts the specified <xref href=\"System.Windows.Point\"></xref> from another specified <xref href=\"System.Windows.Point\"></xref> and returns the difference as a <xref href=\"System.Windows.Vector\"></xref>."},{"pos":[31519,31563],"content":"The point from which <ph id=\"ph1\">`point2`</ph> is subtracted.","needQuote":true,"needEscape":true,"source":"The point from which `point2` is subtracted."},{"pos":[31633,31669],"content":"The point to subtract from <ph id=\"ph1\">`point1`</ph>.","needQuote":true,"needEscape":true,"source":"The point to subtract from `point1`."},{"pos":[31735,31802],"content":"The difference between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">point1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">point2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The difference between <code>point1</code> and <code>point2</code>."},{"pos":[32293,32489],"content":"Subtracts the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Vector\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and returns the resulting <bpt id=\"p3\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Subtracts the specified <xref href=\"System.Windows.Vector\"></xref> from the specified <xref href=\"System.Windows.Point\"></xref> and returns the resulting <xref href=\"System.Windows.Point\"></xref>."},{"pos":[33143,33187],"content":"The point from which <ph id=\"ph1\">`vector`</ph> is subtracted.","needQuote":true,"needEscape":true,"source":"The point from which `vector` is subtracted."},{"pos":[33258,33296],"content":"The <ph id=\"ph1\">`vector`</ph> to subtract from <ph id=\"ph2\">`point`</ph>.","needQuote":true,"needEscape":true,"source":"The `vector` to subtract from `point`."},{"pos":[33361,33427],"content":"The difference between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">point</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">vector</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The difference between <code>point</code> and <code>vector</code>."},{"pos":[34050,34290],"content":"This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.IFormattable.ToString*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,164],"source":"This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see &lt;xref:System.IFormattable.ToString*&gt;.","pos":[165,240],"source":" For a description of this member, see <xref:System.IFormattable.ToString*>."}]},{"pos":[34465,34690],"content":"The string specifying the format to use.       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the default format defined for the type of the <xref:System.IFormattable> implementation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The string specifying the format to use.","pos":[0,40]},{"content":"-or-       <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the default format defined for the type of the &lt;xref:System.IFormattable&gt; implementation.","pos":[47,215],"source":"       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to use the default format defined for the type of the <xref:System.IFormattable> implementation."}]},{"pos":[34766,35072],"content":"The <xref uid=\"langword_csharp_IFormatProvider\" name=\"IFormatProvider\" href=\"\"></xref> to use to format the value.       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to obtain the numeric format information from the current locale setting of the operating system.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_IFormatProvider\" name=\"IFormatProvider\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use to format the value.","pos":[0,114],"source":"The <xref uid=\"langword_csharp_IFormatProvider\" name=\"IFormatProvider\" href=\"\"></xref> to use to format the value."},{"content":"-or-       <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to obtain the numeric format information from the current locale setting of the operating system.","pos":[121,290],"source":"       -or-       <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to obtain the numeric format information from the current locale setting of the operating system."}]},{"pos":[35131,35209],"content":"A string containing the value of the current instance in the specified format.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the value of the current instance in the specified format.","pos":[0,78]}]},{"pos":[35596,35692],"content":"Creates a &lt;xref:System.String&gt; representation of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a <xref:System.String> representation of this <xref href=\"System.Windows.Point\"></xref>."},{"pos":[36270,36441],"content":"A &lt;xref:System.String&gt; containing the &lt;xref:System.Windows.Point.X<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Windows.Point.Y<ept id=\"p1\">*</ept>&gt; values of this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> containing the <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> values of this <xref href=\"System.Windows.Point\"></xref> structure."},{"pos":[36901,36997],"content":"Creates a &lt;xref:System.String&gt; representation of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a <xref:System.String> representation of this <xref href=\"System.Windows.Point\"></xref>."},{"pos":[37161,37201],"content":"Culture-specific formatting information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Culture-specific formatting information.","pos":[0,40]}]},{"pos":[37259,37430],"content":"A &lt;xref:System.String&gt; containing the &lt;xref:System.Windows.Point.X<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Windows.Point.Y<ept id=\"p1\">*</ept>&gt; values of this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> containing the <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> values of this <xref href=\"System.Windows.Point\"></xref> structure."},{"pos":[37758,37854],"content":"Gets or sets the X-coordinate value of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the X-coordinate value of this <xref href=\"System.Windows.Point\"></xref> structure."},{"pos":[38554,38664],"content":"The X-coordinate value of this <xref href=\"System.Windows.Point\"></xref> structure.  The default value is `0`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X-coordinate value of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,83],"source":"The X-coordinate value of this <xref href=\"System.Windows.Point\"></xref> structure."},{"content":"The default value is <ph id=\"ph1\">`0`</ph>.","pos":[85,110],"source":"  The default value is `0`."}]},{"pos":[38985,39071],"content":"Gets or sets the Y-coordinate value of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the Y-coordinate value of this <xref href=\"System.Windows.Point\"></xref>."},{"pos":[39771,39881],"content":"The Y-coordinate value of this <xref href=\"System.Windows.Point\"></xref> structure.  The default value is `0`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Y-coordinate value of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,83],"source":"The Y-coordinate value of this <xref href=\"System.Windows.Point\"></xref> structure."},{"content":"The default value is <ph id=\"ph1\">`0`</ph>.","pos":[85,110],"source":"  The default value is `0`."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Point\n  id: Point\n  children:\n  - System.Windows.Point.#ctor(System.Double,System.Double)\n  - System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)\n  - System.Windows.Point.Equals(System.Object)\n  - System.Windows.Point.Equals(System.Windows.Point)\n  - System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)\n  - System.Windows.Point.GetHashCode\n  - System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)\n  - System.Windows.Point.Offset(System.Double,System.Double)\n  - System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)\n  - System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)\n  - System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Size)\n  - System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Vector)\n  - System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)\n  - System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)\n  - System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)\n  - System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)\n  - System.Windows.Point.Parse(System.String)\n  - System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)\n  - System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)\n  - System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Point.ToString\n  - System.Windows.Point.ToString(System.IFormatProvider)\n  - System.Windows.Point.X\n  - System.Windows.Point.Y\n  langs:\n  - csharp\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n  type: Struct\n  summary: Represents an x- and y-coordinate pair in two-dimensional space.\n  remarks: \"In XAML, the delimiter between the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a Point can be either a comma or a space.  \\n  \\n Some cultures might use the comma character as the decimal delimiter instead of the period character. XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter. You should avoid using the comma character as the decimal delimiter if specifying a Point in XAML, because that will clash with the string type conversion of a Point attribute value into the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> components.  \\n  \\n<a name=\\\"xamlAttributeUsage_Duration\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object property=\\\"x,y\\\"/>  \\n-or-  \\n<object property=\\\"x y\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_MinWidth\\\"></a>   \\n## XAML Values  \\n *x*  \\n The x-coordinate of this Point.  \\n  \\n *y*  \\n The y-coordinate of this Point.\"\n  example:\n  - \"The following example shows how to check if two Point structures are not equal.  It also illustrates how to assign values to a Point structure when the structure is being declared and after the structure has been declared.  \\n  \\n [!code-cs[PointExamples_snip#PointInequalityExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#pointinequalityexample)]\\n [!code-vb[PointExamples_snip#PointInequalityExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#pointinequalityexample)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.PointConverter))]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.PointValueSerializer))]\n\n      public struct Point : IFormattable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IFormattable\n  platform:\n  - net462\n- uid: System.Windows.Point.#ctor(System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double)'\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Point(Double,Double)\n  nameWithType: Point.Point(Double,Double)\n  fullName: System.Windows.Point.Point(Double,Double)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a new <xref href=\"System.Windows.Point\"></xref> structure that contains the specified coordinates.\n  syntax:\n    content: public Point (double x, double y);\n    parameters:\n    - id: x\n      type: System.Double\n      description: The x-coordinate of the new <xref href=\"System.Windows.Point\"></xref> structure.\n    - id: y\n      type: System.Double\n      description: The y-coordinate of the new <xref href=\"System.Windows.Point\"></xref> structure.\n  overload: System.Windows.Point.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)\n  id: Add(System.Windows.Point,System.Windows.Vector)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Add(Point,Vector)\n  nameWithType: Point.Add(Point,Vector)\n  fullName: System.Windows.Point.Add(Point,Vector)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Adds a <xref href=\"System.Windows.Vector\"></xref> to a <xref href=\"System.Windows.Point\"></xref> and returns the result as a <xref href=\"System.Windows.Point\"></xref> structure.\n  remarks: Adding a <xref:System.Windows.Point> structure to a <xref:System.Windows.Point> structure is prohibited.\n  example:\n  - \"This example adds a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> and returns the result as a <xref:System.Windows.Vector> structure.  \\n  \\n [!code-cs[PointExamples_snip#AddPointAndVectorExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#addpointandvectorexample_csharp)]\"\n  syntax:\n    content: public static System.Windows.Point Add (System.Windows.Point point, System.Windows.Vector vector);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The <xref href=\"System.Windows.Point\"></xref> structure to add.\n    - id: vector\n      type: System.Windows.Vector\n      description: The <xref href=\"System.Windows.Vector\"></xref> structure to add.\n    return:\n      type: System.Windows.Point\n      description: Returns the sum of <code>point</code> and <code>vector</code>.\n  overload: System.Windows.Point.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Point.Equals(Object)\n  fullName: System.Windows.Point.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether the specified <xref:System.Object> is a <xref href=\"System.Windows.Point\"></xref> and whether it contains the same coordinates as this <xref href=\"System.Windows.Point\"></xref>.\n  remarks: <xref:System.Windows.Point> coordinates are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.\n  example:\n  - \"The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the non-static Equals method.  \\n  \\n [!code-cs[PointExamples_snip#NonStaticEqualsExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#nonstaticequalsexample_csharp)]\"\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref:System.Object> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>o</code> is a <xref href=\"System.Windows.Point\"></xref> and contains the same <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> values as this <xref href=\"System.Windows.Point\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Point.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.Equals(System.Windows.Point)\n  id: Equals(System.Windows.Point)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Equals(Point)\n  nameWithType: Point.Equals(Point)\n  fullName: System.Windows.Point.Equals(Point)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two <xref href=\"System.Windows.Point\"></xref> structures for equality.\n  remarks: <xref:System.Windows.Point> coordinates are expressed using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.\n  syntax:\n    content: public bool Equals (System.Windows.Point value);\n    parameters:\n    - id: value\n      type: System.Windows.Point\n      description: The point to compare to this instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <xref href=\"System.Windows.Point\"></xref> structures contain the same <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Point.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)\n  id: Equals(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Equals(Point,Point)\n  nameWithType: Point.Equals(Point,Point)\n  fullName: System.Windows.Point.Equals(Point,Point)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two <xref href=\"System.Windows.Point\"></xref> structures for equality.\n  remarks: Point coordinates are described using <xref:System.Double> values. Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.\n  example:\n  - \"The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the static Equals method.  \\n  \\n [!code-cs[PointExamples_snip#StaticEqualsExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#staticequalsexample_csharp)]\"\n  syntax:\n    content: public static bool Equals (System.Windows.Point point1, System.Windows.Point point2);\n    parameters:\n    - id: point1\n      type: System.Windows.Point\n      description: The first point to compare.\n    - id: point2\n      type: System.Windows.Point\n      description: The second point to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>point1</code> and <code>point2</code> contain the same <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Point.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Point.GetHashCode()\n  fullName: System.Windows.Point.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns the hash code for this <xref href=\"System.Windows.Point\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to get the hash code of a <xref:System.Windows.Point> structure.  \\n  \\n [!code-cs[PointExamples_snip#GetHashCodeExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#gethashcodeexample_csharp)]\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this <xref href=\"System.Windows.Point\"></xref> structure.\n  overload: System.Windows.Point.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)\n  id: Multiply(System.Windows.Point,System.Windows.Media.Matrix)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Multiply(Point,Matrix)\n  nameWithType: Point.Multiply(Point,Matrix)\n  fullName: System.Windows.Point.Multiply(Point,Matrix)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Transforms the specified <xref href=\"System.Windows.Point\"></xref> structure by the specified <xref href=\"System.Windows.Media.Matrix\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to multiply a <xref:System.Windows.Point> structure by a <xref:System.Windows.Media.Matrix> structure using the Multiply method.  \\n  \\n [!code-cs[PointExamples_snip#MultiplyPointByMatrixExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#multiplypointbymatrixexample_csharp)]\"\n  syntax:\n    content: public static System.Windows.Point Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point to transform.\n    - id: matrix\n      type: System.Windows.Media.Matrix\n      description: The transformation matrix.\n    return:\n      type: System.Windows.Point\n      description: The transformed point.\n  overload: System.Windows.Point.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.Offset(System.Double,System.Double)\n  id: Offset(System.Double,System.Double)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Offset(Double,Double)\n  nameWithType: Point.Offset(Double,Double)\n  fullName: System.Windows.Point.Offset(Double,Double)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Offsets a point's <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> coordinates by the specified amounts.\n  remarks: \"This operation is equivalent to adding a <xref:System.Windows.Point> to a <xref:System.Windows.Vector>.  \\n  \\n Note that calling the Offset method will only have an effect if you can change the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties directly. Because <xref:System.Windows.Point> is a value type, if you reference a <xref:System.Windows.Point> object by using a property or indexer, you get a copy of the object, not a reference to the object. If you attempt to change <xref:System.Windows.Point.X%2A> or <xref:System.Windows.Point.Y%2A> on a property or indexer reference, a compiler error occurs. Similarly, calling Offset on the property or indexer will not change the underlying object.  If you want to change the value of a <xref:System.Windows.Point> that is referenced as a property or indexer, create a new <xref:System.Windows.Point>, modify its fields, and then assign the <xref:System.Windows.Point> back to the property or indexer.\"\n  example:\n  - \"The following example shows how to offset the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> structure.  \\n  \\n [!code-cs[PointExamples_snip#OffsetExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#offsetexample_csharp)]\"\n  syntax:\n    content: public void Offset (double offsetX, double offsetY);\n    parameters:\n    - id: offsetX\n      type: System.Double\n      description: \"The amount to offset the point's  \\n  \\n <xref:System.Windows.Point.X*> coordinate.\"\n    - id: offsetY\n      type: System.Double\n      description: \"The amount to offset the  \\n  \\n point's <xref:System.Windows.Point.Y*> coordinate.\"\n  overload: System.Windows.Point.Offset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)\n  id: op_Addition(System.Windows.Point,System.Windows.Vector)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: op_Addition(Point,Vector)\n  nameWithType: Point.op_Addition(Point,Vector)\n  fullName: System.Windows.Point.op_Addition(Point,Vector)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Translates the specified <xref href=\"System.Windows.Point\"></xref> by the specified <xref href=\"System.Windows.Vector\"></xref> and returns the result.\n  remarks: ''\n  example:\n  - \"The following example shows how to add a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> using the overloaded (+) operator.  \\n  \\n [!code-cs[PointExamples_snip#OverloadedAdditionOperatorExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedadditionoperatorexample)]\\n [!code-vb[PointExamples_snip#OverloadedAdditionOperatorExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedadditionoperatorexample)]\"\n  syntax:\n    content: public static System.Windows.Point op_Addition (System.Windows.Point point, System.Windows.Vector vector);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point to translate.\n    - id: vector\n      type: System.Windows.Vector\n      description: The amount by which to translate `point`.\n    return:\n      type: System.Windows.Point\n      description: The result of translating the specified point by the specified vector.\n  overload: System.Windows.Point.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)\n  id: op_Equality(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: op_Equality(Point,Point)\n  nameWithType: Point.op_Equality(Point,Point)\n  fullName: System.Windows.Point.op_Equality(Point,Point)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two <xref href=\"System.Windows.Point\"></xref> structures for equality.\n  remarks: A point's coordinates are described using <xref:System.Double> values. Because the value of <xref:System.Double> can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.\n  example:\n  - \"The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the overloaded (==) operator.  \\n  \\n [!code-cs[PointExamples_snip#OverloadedEqualityOperatorExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedequalityoperatorexample)]\\n [!code-vb[PointExamples_snip#OverloadedEqualityOperatorExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedequalityoperatorexample)]\"\n  syntax:\n    content: public static bool op_Equality (System.Windows.Point point1, System.Windows.Point point2);\n    parameters:\n    - id: point1\n      type: System.Windows.Point\n      description: The first <xref href=\"System.Windows.Point\"></xref> structure to compare.\n    - id: point2\n      type: System.Windows.Point\n      description: The second <xref href=\"System.Windows.Point\"></xref> structure to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both the <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> coordinates of <code>point1</code> and <code>point2</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Point.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Size)\n  id: op_Explicit(System.Windows.Point to System.Windows.Size)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: op_Explicit(Point)\n  nameWithType: Point.op_Explicit(Point)\n  fullName: System.Windows.Point.op_Explicit(Point)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  syntax:\n    content: public static System.Windows.Size op_Explicit (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: To be added.\n    return:\n      type: System.Windows.Size\n      description: To be added.\n  overload: System.Windows.Point.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Vector)\n  id: op_Explicit(System.Windows.Point to System.Windows.Vector)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: op_Explicit(Point)\n  nameWithType: Point.op_Explicit(Point)\n  fullName: System.Windows.Point.op_Explicit(Point)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  syntax:\n    content: public static System.Windows.Vector op_Explicit (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: To be added.\n    return:\n      type: System.Windows.Vector\n      description: To be added.\n  overload: System.Windows.Point.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)\n  id: op_Inequality(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: op_Inequality(Point,Point)\n  nameWithType: Point.op_Inequality(Point,Point)\n  fullName: System.Windows.Point.op_Inequality(Point,Point)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two <xref href=\"System.Windows.Point\"></xref> structures for inequality.\n  remarks: A point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> coordinates are described using <xref:System.Double> values. Because <xref:System.Double> values can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.\n  example:\n  - \"The following example shows how to check whether two <xref:System.Windows.Point> structures are not equal, using the overloaded (!=) operator.  \\n  \\n [!code-cs[PointExamples_snip#OverloadedInequalityOperatorExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedinequalityoperatorexample)]\\n [!code-vb[PointExamples_snip#OverloadedInequalityOperatorExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedinequalityoperatorexample)]\"\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Point point1, System.Windows.Point point2);\n    parameters:\n    - id: point1\n      type: System.Windows.Point\n      description: The first point to compare.\n    - id: point2\n      type: System.Windows.Point\n      description: The second point to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>point1</code> and <code>point2</code> have different <xref:System.Windows.Point.X*> or <xref:System.Windows.Point.Y*> coordinates; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>point1</code> and <code>point2</code> have the same <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> coordinates.\n  overload: System.Windows.Point.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)\n  id: op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: op_Multiply(Point,Matrix)\n  nameWithType: Point.op_Multiply(Point,Matrix)\n  fullName: System.Windows.Point.op_Multiply(Point,Matrix)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Transforms the specified <xref href=\"System.Windows.Point\"></xref> by the specified <xref href=\"System.Windows.Media.Matrix\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to multiply a <xref:System.Windows.Point> by a <xref:System.Windows.Media.Matrix> using the overloaded (*) operator.  \\n  \\n [!code-cs[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedmultiplypointbymatrixoperatorexample)]\\n [!code-vb[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedmultiplypointbymatrixoperatorexample)]\"\n  syntax:\n    content: public static System.Windows.Point op_Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point to transform.\n    - id: matrix\n      type: System.Windows.Media.Matrix\n      description: The transformation matrix.\n    return:\n      type: System.Windows.Point\n      description: The result of transforming the specified point using the specified matrix.\n  overload: System.Windows.Point.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)\n  id: op_Subtraction(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: op_Subtraction(Point,Point)\n  nameWithType: Point.op_Subtraction(Point,Point)\n  fullName: System.Windows.Point.op_Subtraction(Point,Point)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Subtracts the specified <xref href=\"System.Windows.Point\"></xref> from another specified <xref href=\"System.Windows.Point\"></xref> and returns the difference as a <xref href=\"System.Windows.Vector\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> and return a <xref:System.Windows.Vector> using the overloaded (-) operator.  \\n  \\n [!code-cs[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedsubtractionoperatorexample2)]\\n [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedsubtractionoperatorexample2)]\"\n  syntax:\n    content: public static System.Windows.Vector op_Subtraction (System.Windows.Point point1, System.Windows.Point point2);\n    parameters:\n    - id: point1\n      type: System.Windows.Point\n      description: The point from which `point2` is subtracted.\n    - id: point2\n      type: System.Windows.Point\n      description: The point to subtract from `point1`.\n    return:\n      type: System.Windows.Vector\n      description: The difference between <code>point1</code> and <code>point2</code>.\n  overload: System.Windows.Point.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)\n  id: op_Subtraction(System.Windows.Point,System.Windows.Vector)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: op_Subtraction(Point,Vector)\n  nameWithType: Point.op_Subtraction(Point,Vector)\n  fullName: System.Windows.Point.op_Subtraction(Point,Vector)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Subtracts the specified <xref href=\"System.Windows.Vector\"></xref> from the specified <xref href=\"System.Windows.Point\"></xref> and returns the resulting <xref href=\"System.Windows.Point\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the overloaded (-) operator.  \\n  \\n [!code-cs[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedsubtractionoperatorexample1)]\\n [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedsubtractionoperatorexample1)]\"\n  syntax:\n    content: public static System.Windows.Point op_Subtraction (System.Windows.Point point, System.Windows.Vector vector);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point from which `vector` is subtracted.\n    - id: vector\n      type: System.Windows.Vector\n      description: The vector to subtract from `point1`\n    return:\n      type: System.Windows.Point\n      description: The difference between <code>point</code> and <code>vector</code>.\n  overload: System.Windows.Point.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Point.Parse(String)\n  fullName: System.Windows.Point.Parse(String)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Constructs a <xref href=\"System.Windows.Point\"></xref> from the specified <xref:System.String>.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the Parse method to convert a <xref:System.String> representation of a point into a <xref:System.Windows.Point> structure.  \\n  \\n [!code-cs[PointExamples_snip#ParseExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#parseexample)]\\n [!code-vb[PointExamples_snip#ParseExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#parseexample)]\"\n  syntax:\n    content: public static System.Windows.Point Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: A string representation of a point.\n    return:\n      type: System.Windows.Point\n      description: The equivalent <xref href=\"System.Windows.Point\"></xref> structure.\n  overload: System.Windows.Point.Parse*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>source</code> is not composed of two comma- or space-delimited double values.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>source</code> does not contain two numbers.  \\n  \\n -or-  \\n  \\n <code>source</code> contains too many delimiters.\"\n  platform:\n  - net462\n- uid: System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)\n  id: Subtract(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Subtract(Point,Point)\n  nameWithType: Point.Subtract(Point,Point)\n  fullName: System.Windows.Point.Subtract(Point,Point)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Subtracts the specified <xref href=\"System.Windows.Point\"></xref> from another specified <xref href=\"System.Windows.Point\"></xref> and returns the difference as a <xref href=\"System.Windows.Vector\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> using the static Subtract method.  \\n  \\n [!code-cs[PointExamples_snip#SubtractExample2](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#subtractexample2)]\\n [!code-vb[PointExamples_snip#SubtractExample2](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#subtractexample2)]\"\n  syntax:\n    content: public static System.Windows.Vector Subtract (System.Windows.Point point1, System.Windows.Point point2);\n    parameters:\n    - id: point1\n      type: System.Windows.Point\n      description: The point from which `point2` is subtracted.\n    - id: point2\n      type: System.Windows.Point\n      description: The point to subtract from `point1`.\n    return:\n      type: System.Windows.Vector\n      description: The difference between <code>point1</code> and <code>point2</code>.\n  overload: System.Windows.Point.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)\n  id: Subtract(System.Windows.Point,System.Windows.Vector)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Subtract(Point,Vector)\n  nameWithType: Point.Subtract(Point,Vector)\n  fullName: System.Windows.Point.Subtract(Point,Vector)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Subtracts the specified <xref href=\"System.Windows.Vector\"></xref> from the specified <xref href=\"System.Windows.Point\"></xref> and returns the resulting <xref href=\"System.Windows.Point\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the static Subtract method.  \\n  \\n [!code-cs[PointExamples_snip#SubtractExample1](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#subtractexample1)]\\n [!code-vb[PointExamples_snip#SubtractExample1](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#subtractexample1)]\"\n  syntax:\n    content: public static System.Windows.Point Subtract (System.Windows.Point point, System.Windows.Vector vector);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point from which `vector` is subtracted.\n    - id: vector\n      type: System.Windows.Vector\n      description: The `vector` to subtract from `point`.\n    return:\n      type: System.Windows.Point\n      description: The difference between <code>point</code> and <code>vector</code>.\n  overload: System.Windows.Point.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Point.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Point.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.IFormattable.ToString*>.\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: \"The string specifying the format to use.  \\n  \\n -or-  \\n  \\n <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> to use the default format defined for the type of the <xref:System.IFormattable> implementation.\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"The <xref uid=\\\"langword_csharp_IFormatProvider\\\" name=\\\"IFormatProvider\\\" href=\\\"\\\"></xref> to use to format the value.  \\n  \\n -or-  \\n  \\n <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> to obtain the numeric format information from the current locale setting of the operating system.\"\n    return:\n      type: System.String\n      description: A string containing the value of the current instance in the specified format.\n  overload: System.Windows.Point.System#IFormattable#ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.ToString\n  id: ToString\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Point.ToString()\n  fullName: System.Windows.Point.ToString()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a <xref:System.String> representation of this <xref href=\"System.Windows.Point\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the ToString method to get a <xref:System.String> representation of a <xref:System.Windows.Point> structure.  \\n  \\n [!code-cs[PointExamples_snip#ToStringExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#tostringexample)]\\n [!code-vb[PointExamples_snip#ToStringExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#tostringexample)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> values of this <xref href=\"System.Windows.Point\"></xref> structure.\n  overload: System.Windows.Point.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Point.ToString(IFormatProvider)\n  fullName: System.Windows.Point.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Creates a <xref:System.String> representation of this <xref href=\"System.Windows.Point\"></xref>.\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: Culture-specific formatting information.\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the <xref:System.Windows.Point.X*> and <xref:System.Windows.Point.Y*> values of this <xref href=\"System.Windows.Point\"></xref> structure.\n  overload: System.Windows.Point.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.X\n  id: X\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: X\n  nameWithType: Point.X\n  fullName: System.Windows.Point.X\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets or sets the X-coordinate value of this <xref href=\"System.Windows.Point\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.  It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.  \\n  \\n [!code-cs[PointExamples_snip#PointInequalityExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#pointinequalityexample)]\\n [!code-vb[PointExamples_snip#PointInequalityExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#pointinequalityexample)]\"\n  syntax:\n    content: public double X { get; set; }\n    return:\n      type: System.Double\n      description: The X-coordinate value of this <xref href=\"System.Windows.Point\"></xref> structure.  The default value is `0`.\n  overload: System.Windows.Point.X*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Point.Y\n  id: Y\n  parent: System.Windows.Point\n  langs:\n  - csharp\n  name: Y\n  nameWithType: Point.Y\n  fullName: System.Windows.Point.Y\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets or sets the Y-coordinate value of this <xref href=\"System.Windows.Point\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.  It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.  \\n  \\n [!code-cs[PointExamples_snip#PointInequalityExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#pointinequalityexample)]\\n [!code-vb[PointExamples_snip#PointInequalityExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#pointinequalityexample)]\"\n  syntax:\n    content: public double Y { get; set; }\n    return:\n      type: System.Double\n      description: The Y-coordinate value of this <xref href=\"System.Windows.Point\"></xref> structure.  The default value is `0`.\n  overload: System.Windows.Point.Y*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Windows.Point.#ctor(System.Double,System.Double)\n  parent: System.Windows.Point\n  isExternal: false\n  name: Point(Double,Double)\n  nameWithType: Point.Point(Double,Double)\n  fullName: System.Windows.Point.Point(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)\n  parent: System.Windows.Point\n  isExternal: false\n  name: Add(Point,Vector)\n  nameWithType: Point.Add(Point,Vector)\n  fullName: System.Windows.Point.Add(Point,Vector)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: false\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Point.Equals(System.Object)\n  parent: System.Windows.Point\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Point.Equals(Object)\n  fullName: System.Windows.Point.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Point.Equals(System.Windows.Point)\n  parent: System.Windows.Point\n  isExternal: false\n  name: Equals(Point)\n  nameWithType: Point.Equals(Point)\n  fullName: System.Windows.Point.Equals(Point)\n- uid: System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Point\n  isExternal: false\n  name: Equals(Point,Point)\n  nameWithType: Point.Equals(Point,Point)\n  fullName: System.Windows.Point.Equals(Point,Point)\n- uid: System.Windows.Point.GetHashCode\n  parent: System.Windows.Point\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Point.GetHashCode()\n  fullName: System.Windows.Point.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)\n  parent: System.Windows.Point\n  isExternal: false\n  name: Multiply(Point,Matrix)\n  nameWithType: Point.Multiply(Point,Matrix)\n  fullName: System.Windows.Point.Multiply(Point,Matrix)\n- uid: System.Windows.Media.Matrix\n  parent: System.Windows.Media\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Windows.Media.Matrix\n- uid: System.Windows.Point.Offset(System.Double,System.Double)\n  parent: System.Windows.Point\n  isExternal: false\n  name: Offset(Double,Double)\n  nameWithType: Point.Offset(Double,Double)\n  fullName: System.Windows.Point.Offset(Double,Double)\n- uid: System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Addition(Point,Vector)\n  nameWithType: Point.op_Addition(Point,Vector)\n  fullName: System.Windows.Point.op_Addition(Point,Vector)\n- uid: System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Equality(Point,Point)\n  nameWithType: Point.op_Equality(Point,Point)\n  fullName: System.Windows.Point.op_Equality(Point,Point)\n- uid: System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Size)\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Explicit(Point)\n  nameWithType: Point.op_Explicit(Point)\n  fullName: System.Windows.Point.op_Explicit(Point)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Vector)\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Explicit(Point)\n  nameWithType: Point.op_Explicit(Point)\n  fullName: System.Windows.Point.op_Explicit(Point)\n- uid: System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Inequality(Point,Point)\n  nameWithType: Point.op_Inequality(Point,Point)\n  fullName: System.Windows.Point.op_Inequality(Point,Point)\n- uid: System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Multiply(Point,Matrix)\n  nameWithType: Point.op_Multiply(Point,Matrix)\n  fullName: System.Windows.Point.op_Multiply(Point,Matrix)\n- uid: System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Subtraction(Point,Point)\n  nameWithType: Point.op_Subtraction(Point,Point)\n  fullName: System.Windows.Point.op_Subtraction(Point,Point)\n- uid: System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Subtraction(Point,Vector)\n  nameWithType: Point.op_Subtraction(Point,Vector)\n  fullName: System.Windows.Point.op_Subtraction(Point,Vector)\n- uid: System.Windows.Point.Parse(System.String)\n  parent: System.Windows.Point\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Point.Parse(String)\n  fullName: System.Windows.Point.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Point\n  isExternal: false\n  name: Subtract(Point,Point)\n  nameWithType: Point.Subtract(Point,Point)\n  fullName: System.Windows.Point.Subtract(Point,Point)\n- uid: System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)\n  parent: System.Windows.Point\n  isExternal: false\n  name: Subtract(Point,Vector)\n  nameWithType: Point.Subtract(Point,Vector)\n  fullName: System.Windows.Point.Subtract(Point,Vector)\n- uid: System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Point\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Point.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Point.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: true\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Point.ToString\n  parent: System.Windows.Point\n  isExternal: false\n  name: ToString()\n  nameWithType: Point.ToString()\n  fullName: System.Windows.Point.ToString()\n- uid: System.Windows.Point.ToString(System.IFormatProvider)\n  parent: System.Windows.Point\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Point.ToString(IFormatProvider)\n  fullName: System.Windows.Point.ToString(IFormatProvider)\n- uid: System.Windows.Point.X\n  parent: System.Windows.Point\n  isExternal: false\n  name: X\n  nameWithType: Point.X\n  fullName: System.Windows.Point.X\n- uid: System.Windows.Point.Y\n  parent: System.Windows.Point\n  isExternal: false\n  name: Y\n  nameWithType: Point.Y\n  fullName: System.Windows.Point.Y\n- uid: System.Windows.Point.#ctor*\n  parent: System.Windows.Point\n  isExternal: false\n  name: Point\n  nameWithType: Point.Point\n- uid: System.Windows.Point.Add*\n  parent: System.Windows.Point\n  isExternal: false\n  name: Add\n  nameWithType: Point.Add\n- uid: System.Windows.Point.Equals*\n  parent: System.Windows.Point\n  isExternal: false\n  name: Equals\n  nameWithType: Point.Equals\n- uid: System.Windows.Point.GetHashCode*\n  parent: System.Windows.Point\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Point.GetHashCode\n- uid: System.Windows.Point.Multiply*\n  parent: System.Windows.Point\n  isExternal: false\n  name: Multiply\n  nameWithType: Point.Multiply\n- uid: System.Windows.Point.Offset*\n  parent: System.Windows.Point\n  isExternal: false\n  name: Offset\n  nameWithType: Point.Offset\n- uid: System.Windows.Point.op_Addition*\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Addition\n  nameWithType: Point.op_Addition\n- uid: System.Windows.Point.op_Equality*\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Equality\n  nameWithType: Point.op_Equality\n- uid: System.Windows.Point.op_Explicit*\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Explicit\n  nameWithType: Point.op_Explicit\n- uid: System.Windows.Point.op_Inequality*\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Point.op_Inequality\n- uid: System.Windows.Point.op_Multiply*\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Multiply\n  nameWithType: Point.op_Multiply\n- uid: System.Windows.Point.op_Subtraction*\n  parent: System.Windows.Point\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: Point.op_Subtraction\n- uid: System.Windows.Point.Parse*\n  parent: System.Windows.Point\n  isExternal: false\n  name: Parse\n  nameWithType: Point.Parse\n- uid: System.Windows.Point.Subtract*\n  parent: System.Windows.Point\n  isExternal: false\n  name: Subtract\n  nameWithType: Point.Subtract\n- uid: System.Windows.Point.System#IFormattable#ToString*\n  parent: System.Windows.Point\n  isExternal: false\n  name: System.IFormattable.ToString\n  nameWithType: Point.System.IFormattable.ToString\n- uid: System.Windows.Point.ToString*\n  parent: System.Windows.Point\n  isExternal: false\n  name: ToString\n  nameWithType: Point.ToString\n- uid: System.Windows.Point.X*\n  parent: System.Windows.Point\n  isExternal: false\n  name: X\n  nameWithType: Point.X\n- uid: System.Windows.Point.Y*\n  parent: System.Windows.Point\n  isExternal: false\n  name: Y\n  nameWithType: Point.Y\n"}