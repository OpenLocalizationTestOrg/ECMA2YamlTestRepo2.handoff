{"nodes":[{"pos":[383,576],"content":"Returns data from <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechDetected\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> events.","needQuote":true,"needEscape":true,"source":"Returns data from <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechDetected\"></xref> events."},{"pos":[589,936],"content":"A `SpeechDetected` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.       **SpeechDetected** events are generated when a recognition engine can identify audio input as human speech.       SpeechDetectedEventArgs derives from <xref:System.EventArgs>.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">`SpeechDetected`</ph> event is raised by the &lt;xref:System.Speech.Recognition.SpeechRecognizer&gt; and &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt; classes.","pos":[0,161],"source":"A `SpeechDetected` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes."},{"content":"<bpt id=\"p1\">**</bpt>SpeechDetected<ept id=\"p1\">**</ept> events are generated when a recognition engine can identify audio input as human speech.","pos":[168,275],"source":"**SpeechDetected** events are generated when a recognition engine can identify audio input as human speech."},{"content":"SpeechDetectedEventArgs derives from &lt;xref:System.EventArgs&gt;.","pos":[282,343],"source":"       SpeechDetectedEventArgs derives from <xref:System.EventArgs>."}]},{"pos":[2421,2485],"content":"Gets the position in the audio stream where speech was detected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the position in the audio stream where speech was detected.","pos":[0,64]}]},{"pos":[3508,3594],"content":"Returns the location of a detected phrase within a recognition engine’s speech buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the location of a detected phrase within a recognition engine’s speech buffer.","pos":[0,86]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SpeechDetectedEventArgs\n  id: SpeechDetectedEventArgs\n  children:\n  - System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition\n  langs:\n  - csharp\n  name: SpeechDetectedEventArgs\n  nameWithType: SpeechDetectedEventArgs\n  fullName: System.Speech.Recognition.SpeechDetectedEventArgs\n  type: Class\n  summary: Returns data from <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechDetected\"></xref> events.\n  remarks: \"A `SpeechDetected` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.  \\n  \\n **SpeechDetected** events are generated when a recognition engine can identify audio input as human speech.  \\n  \\n SpeechDetectedEventArgs derives from <xref:System.EventArgs>.\"\n  example:\n  - \"The example below creates a handler for <xref:System.Speech.Recognition.SpeechRecognizer.SpeechDetected?displayProperty=fullName> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected?displayProperty=fullName> events. The handler initializes a display every time speech is detected and displays status information, including audio position.  \\n  \\n```  \\n_recognizer.SpeechDetected +=  \\n  delegate(object sender, SpeechDetectedEventArgs eventArgs)   \\n  {  \\n  \\n    // Clear previous recognition information.  \\n    _audioDeviceStatusLabel.Enabled = true;  \\n    _audioDeviceStatusLabel.Visible = true;  \\n    Utils.DisplayAudioInputFormat(_audioStateLabel, _recognizer);  \\n    Utils.DisplayRecognizerState(_recognizerStateLabel, _recognizer.State);  \\n    Utils.DisplaySpeechDetected(_speechDetectedLabel, eventArgs.AudioPosition);  \\n  };  \\n```\"\n  syntax:\n    content: 'public class SpeechDetectedEventArgs : EventArgs'\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition\n  id: AudioPosition\n  parent: System.Speech.Recognition.SpeechDetectedEventArgs\n  langs:\n  - csharp\n  name: AudioPosition\n  nameWithType: SpeechDetectedEventArgs.AudioPosition\n  fullName: System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the position in the audio stream where speech was detected.\n  remarks: ''\n  example:\n  - \"The example below creates a handler for <xref:System.Speech.Recognition.SpeechRecognizer.SpeechDetected?displayProperty=fullName> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected?displayProperty=fullName> events. The handler initializes a display each time speech is detected and displays status information, including audio position.  \\n  \\n```  \\n_recognizer.SpeechDetected +=  \\n  delegate(object sender, SpeechDetectedEventArgs eventArgs)   \\n  {  \\n  \\n    // Clear previous recognition information.  \\n    _audioDeviceStatusLabel.Enabled = true;  \\n    _audioDeviceStatusLabel.Visible = true;  \\n    Utils.DisplayAudioInputFormat(_audioStateLabel, _recognizer);  \\n    Utils.DisplayRecognizerState(_recognizerStateLabel, _recognizer.State);  \\n    Utils.DisplaySpeechDetected(_speechDetectedLabel, eventArgs.AudioPosition);  \\n  };  \\n```\"\n  syntax:\n    content: public TimeSpan AudioPosition { get; }\n    return:\n      type: System.TimeSpan\n      description: Returns the location of a detected phrase within a recognition engine’s speech buffer.\n  overload: System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition\n  parent: System.Speech.Recognition.SpeechDetectedEventArgs\n  isExternal: false\n  name: AudioPosition\n  nameWithType: SpeechDetectedEventArgs.AudioPosition\n  fullName: System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition*\n  parent: System.Speech.Recognition.SpeechDetectedEventArgs\n  isExternal: false\n  name: AudioPosition\n  nameWithType: SpeechDetectedEventArgs.AudioPosition\n"}