{"nodes":[{"pos":[1050,1157],"content":"Represents a query that tests whether a message satisfies the requirements of a specified endpoint address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a query that tests whether a message satisfies the requirements of a specified endpoint address.","pos":[0,107]}]},{"pos":[1170,1855],"content":"This filter tests whether a message satisfies a particular endpoint address. An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers. The addressing and message headers are canonicalized in order to be compared for equality. If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.       IIS and the underlying file system (NTFS or FAT) are case-insensitive. URI comparisons done by this class are also case-insensitive. So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.","needQuote":false,"needEscape":true,"nodes":[{"content":"This filter tests whether a message satisfies a particular endpoint address. An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers. The addressing and message headers are canonicalized in order to be compared for equality. If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.       IIS and the underlying file system (NTFS or FAT) are case-insensitive. URI comparisons done by this class are also case-insensitive. So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.","pos":[0,683],"nodes":[{"content":"This filter tests whether a message satisfies a particular endpoint address.","pos":[0,76]},{"content":"An &lt;xref:System.ServiceModel.EndpointAddress&gt; object includes a URI and an optional collection of addressing headers.","pos":[77,194],"source":" An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers."},{"content":"The addressing and message headers are canonicalized in order to be compared for equality.","pos":[195,285]},{"content":"If a parameter appears more than once in an &lt;xref:System.ServiceModel.EndpointAddress&gt;, the corresponding header must appear in the message at least that many times.","pos":[286,451],"source":" If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times."},{"content":"IIS and the underlying file system (NTFS or FAT) are case-insensitive.","pos":[458,528]},{"content":"URI comparisons done by this class are also case-insensitive.","pos":[529,590]},{"content":"So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.","pos":[591,683]}]}]},{"pos":[2743,2921],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified address against which to test a message.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"></xref> class with a specified address against which to test a message."},{"pos":[3129,3210],"content":"The <xref:System.ServiceModel.EndpointAddress> against which messages are tested.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.EndpointAddress&gt; against which messages are tested.","pos":[0,81],"source":"The <xref:System.ServiceModel.EndpointAddress> against which messages are tested."}]},{"pos":[3406,3491],"content":"<code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[21,85],"source":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[4196,4317],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"></xref> class."},{"pos":[4330,4772],"content":"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:      -   http://localhost/foo.svc      -   http://192.168.1.100/foo.svc      -   http://[my-machine-name]/foo.svc      -   http://[my-machine-name].[my-company].com/foo.svc.       If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.","needQuote":false,"needEscape":true,"nodes":[{"content":"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:      -   http://localhost/foo.svc      -   http://192.168.1.100/foo.svc      -   http://[my-machine-name]/foo.svc      -   http://[my-machine-name].[my-company].com/foo.svc.","pos":[0,305]},{"content":"If the value of the <ph id=\"ph1\">`includeHostNameInComparison`</ph> parameter is <ph id=\"ph2\">`false`</ph>, the above URIs all resolve to the same endpoint.","pos":[312,432],"source":"       If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint."}]},{"pos":[5015,5096],"content":"The <xref:System.ServiceModel.EndpointAddress> against which messages are tested.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.EndpointAddress&gt; against which messages are tested.","pos":[0,81],"source":"The <xref:System.ServiceModel.EndpointAddress> against which messages are tested."}]},{"pos":[5181,5381],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the host name is included in the endpoint address comparison; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the host name is included in the endpoint address comparison; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5577,5662],"content":"<code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[21,85],"source":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[6124,6254],"content":"Gets the address that the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> tests messages against.","needQuote":true,"needEscape":true,"source":"Gets the address that the <xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"></xref> tests messages against."},{"pos":[6417,6577],"content":"The &lt;xref:System.ServiceModel.EndpointAddress&gt; that the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> tests messages against.","needQuote":true,"needEscape":true,"source":"The <xref:System.ServiceModel.EndpointAddress> that the <xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"></xref> tests messages against."},{"pos":[7450,7462],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8144,8241],"content":"Gets a value that indicates whether the host name is included in the endpoint address comparison.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the host name is included in the endpoint address comparison.","pos":[0,97]}]},{"pos":[8254,8707],"content":"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:      -   http://localhost/foo.svc      -   http://192.168.1.100/foo.svc      -   http://[my-machine-name]/foo.svc      -   http://[my-machine-name].[my-company].com/foo.svc.       The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.","needQuote":false,"needEscape":true,"nodes":[{"content":"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:      -   http://localhost/foo.svc      -   http://192.168.1.100/foo.svc      -   http://[my-machine-name]/foo.svc      -   http://[my-machine-name].[my-company].com/foo.svc.","pos":[0,305]},{"content":"The default value of this property is <ph id=\"ph1\">`false`</ph>, so the above URIs all resolve to the same endpoint, unless you change this property.","pos":[312,443],"source":"       The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property."}]},{"pos":[8839,9039],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the host name is included in the endpoint address comparison; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the host name is included in the endpoint address comparison; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9710,9775],"content":"Tests whether a message satisfies the specified endpoint address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Tests whether a message satisfies the specified endpoint address.","pos":[0,65]}]},{"pos":[9787,9882],"content":"The two overloads of this method are equivalent because they both examine only message headers.","needQuote":true,"needEscape":true,"nodes":[{"content":"The two overloads of this method are equivalent because they both examine only message headers.","pos":[0,95]}]},{"pos":[10083,10146],"content":"The <xref:System.ServiceModel.Channels.Message> object to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Message&gt; object to test.","pos":[0,63],"source":"The <xref:System.ServiceModel.Channels.Message> object to test."}]},{"pos":[10205,10454],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.ServiceModel.Channels.Message&gt; object satisfies the endpoint address specified in the filter; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.Channels.Message> object satisfies the endpoint address specified in the filter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10650,10735],"content":"<ph id=\"ph1\">&lt;code&gt;message&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>message</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11318,11392],"content":"Tests whether a buffered message satisfies the specified endpoint address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Tests whether a buffered message satisfies the specified endpoint address.","pos":[0,74]}]},{"pos":[11404,11670],"content":"The two overloads of this method are equivalent because they both examine only message headers. The only reason to use this overload is if you already had a `messageBuffer` available and not a message, because this method converts the `messageBuffer` into a message.","needQuote":true,"needEscape":true,"nodes":[{"content":"The two overloads of this method are equivalent because they both examine only message headers.","pos":[0,95]},{"content":"The only reason to use this overload is if you already had a <ph id=\"ph1\">`messageBuffer`</ph> available and not a message, because this method converts the <ph id=\"ph2\">`messageBuffer`</ph> into a message.","pos":[96,266],"source":" The only reason to use this overload is if you already had a `messageBuffer` available and not a message, because this method converts the `messageBuffer` into a message."}]},{"pos":[11895,11964],"content":"The <xref:System.ServiceModel.Channels.MessageBuffer> object to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.MessageBuffer&gt; object to test.","pos":[0,69],"source":"The <xref:System.ServiceModel.Channels.MessageBuffer> object to test."}]},{"pos":[12023,12254],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.ServiceModel.Channels.MessageBuffer&gt; object satisfies the endpoint address; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.Channels.MessageBuffer> object satisfies the endpoint address; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12450,12541],"content":"<ph id=\"ph1\">&lt;code&gt;messageBuffer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>messageBuffer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  id: EndpointAddressMessageFilter\n  children:\n  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)\n  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address\n  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1\n  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison\n  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)\n  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  langs:\n  - csharp\n  name: EndpointAddressMessageFilter\n  nameWithType: EndpointAddressMessageFilter\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  type: Class\n  summary: Represents a query that tests whether a message satisfies the requirements of a specified endpoint address.\n  remarks: \"This filter tests whether a message satisfies a particular endpoint address. An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers. The addressing and message headers are canonicalized in order to be compared for equality. If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.  \\n  \\n IIS and the underlying file system (NTFS or FAT) are case-insensitive. URI comparisons done by this class are also case-insensitive. So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.\"\n  syntax:\n    content: 'public class EndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Dispatcher.MessageFilter\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: EndpointAddressMessageFilter(EndpointAddress)\n  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"></xref> class with a specified address against which to test a message.\n  syntax:\n    content: public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref:System.ServiceModel.EndpointAddress> against which messages are tested.\n  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)\n  id: '#ctor(System.ServiceModel.EndpointAddress,System.Boolean)'\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: EndpointAddressMessageFilter(EndpointAddress,Boolean)\n  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"></xref> class.\n  remarks: \"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:  \\n  \\n-   http://localhost/foo.svc  \\n  \\n-   http://192.168.1.100/foo.svc  \\n  \\n-   http://[my-machine-name]/foo.svc  \\n  \\n-   http://[my-machine-name].[my-company].com/foo.svc.  \\n  \\n If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.\"\n  syntax:\n    content: public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref:System.ServiceModel.EndpointAddress> against which messages are tested.\n    - id: includeHostNameInComparison\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the host name is included in the endpoint address comparison; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address\n  id: Address\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: Address\n  nameWithType: EndpointAddressMessageFilter.Address\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets the address that the <xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"></xref> tests messages against.\n  syntax:\n    content: public System.ServiceModel.EndpointAddress Address { get; }\n    return:\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref:System.ServiceModel.EndpointAddress> that the <xref href=\"System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\"></xref> tests messages against.\n  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1\n  id: CreateFilterTable``1\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: CreateFilterTable()\n  nameWithType: EndpointAddressMessageFilter.CreateFilterTable()\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: protected override System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable<FilterData>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison\n  id: IncludeHostNameInComparison\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: IncludeHostNameInComparison\n  nameWithType: EndpointAddressMessageFilter.IncludeHostNameInComparison\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a value that indicates whether the host name is included in the endpoint address comparison.\n  remarks: \"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:  \\n  \\n-   http://localhost/foo.svc  \\n  \\n-   http://192.168.1.100/foo.svc  \\n  \\n-   http://[my-machine-name]/foo.svc  \\n  \\n-   http://[my-machine-name].[my-company].com/foo.svc.  \\n  \\n The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.\"\n  syntax:\n    content: public bool IncludeHostNameInComparison { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the host name is included in the endpoint address comparison; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)\n  id: Match(System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: Match(Message)\n  nameWithType: EndpointAddressMessageFilter.Match(Message)\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(Message)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Tests whether a message satisfies the specified endpoint address.\n  remarks: The two overloads of this method are equivalent because they both examine only message headers.\n  syntax:\n    content: public override bool Match (System.ServiceModel.Channels.Message message);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref:System.ServiceModel.Channels.Message> object to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.Channels.Message> object satisfies the endpoint address specified in the filter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>message</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  id: Match(System.ServiceModel.Channels.MessageBuffer)\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: Match(MessageBuffer)\n  nameWithType: EndpointAddressMessageFilter.Match(MessageBuffer)\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(MessageBuffer)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Tests whether a buffered message satisfies the specified endpoint address.\n  remarks: The two overloads of this method are equivalent because they both examine only message headers. The only reason to use this overload is if you already had a `messageBuffer` available and not a message, because this method converts the `messageBuffer` into a message.\n  syntax:\n    content: public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref:System.ServiceModel.Channels.MessageBuffer> object to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.ServiceModel.Channels.MessageBuffer> object satisfies the endpoint address; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>messageBuffer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Dispatcher.MessageFilter\n  isExternal: false\n  name: System.ServiceModel.Dispatcher.MessageFilter\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: EndpointAddressMessageFilter(EndpointAddress)\n  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: true\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: EndpointAddressMessageFilter(EndpointAddress,Boolean)\n  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: Address\n  nameWithType: EndpointAddressMessageFilter.Address\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: CreateFilterTable()\n  nameWithType: EndpointAddressMessageFilter.CreateFilterTable()\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable()\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: IMessageFilterTable<FilterData>\n  nameWithType: IMessageFilterTable<FilterData>\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>\n  spec.csharp:\n  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n    name: IMessageFilterTable\n    nameWithType: IMessageFilterTable\n    fullName: IMessageFilterTable<FilterData>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: FilterData\n    name: FilterData\n    nameWithType: FilterData\n    fullName: FilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: IncludeHostNameInComparison\n  nameWithType: EndpointAddressMessageFilter.IncludeHostNameInComparison\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: Match(Message)\n  nameWithType: EndpointAddressMessageFilter.Match(Message)\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(Message)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: Match(MessageBuffer)\n  nameWithType: EndpointAddressMessageFilter.Match(MessageBuffer)\n  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(MessageBuffer)\n- uid: System.ServiceModel.Channels.MessageBuffer\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: MessageBuffer\n  nameWithType: MessageBuffer\n  fullName: System.ServiceModel.Channels.MessageBuffer\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor*\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: EndpointAddressMessageFilter\n  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address*\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: Address\n  nameWithType: EndpointAddressMessageFilter.Address\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable<FilterData>*\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: CreateFilterTable<FilterData>\n  nameWithType: EndpointAddressMessageFilter.CreateFilterTable<FilterData>\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison*\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: IncludeHostNameInComparison\n  nameWithType: EndpointAddressMessageFilter.IncludeHostNameInComparison\n- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match*\n  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  isExternal: false\n  name: Match\n  nameWithType: EndpointAddressMessageFilter.Match\n"}