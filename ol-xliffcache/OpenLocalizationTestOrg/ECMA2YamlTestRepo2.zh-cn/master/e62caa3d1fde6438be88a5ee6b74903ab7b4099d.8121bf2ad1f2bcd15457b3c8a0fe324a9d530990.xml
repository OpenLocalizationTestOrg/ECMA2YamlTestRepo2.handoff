{"nodes":[{"pos":[2478,2536],"content":"Represents a database column that is used by Dynamic Data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a database column that is used by Dynamic Data.","pos":[0,58]}]},{"pos":[2549,2996],"content":"In ASP.NET Dynamic Data applications, the MetaColumn class represents a database field. The MetaColumn class lets you retrieve information about the data field such as type and metadata information.       You can retrieve the table that the data field belongs to by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property. You can also retrieve the data model by using the <xref:System.Web.DynamicData.MetaColumn.Model%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"In ASP.NET Dynamic Data applications, the MetaColumn class represents a database field. The MetaColumn class lets you retrieve information about the data field such as type and metadata information.       You can retrieve the table that the data field belongs to by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property. You can also retrieve the data model by using the <xref:System.Web.DynamicData.MetaColumn.Model%2A> property.","pos":[0,445],"nodes":[{"content":"In ASP.NET Dynamic Data applications, the MetaColumn class represents a database field.","pos":[0,87]},{"content":"The MetaColumn class lets you retrieve information about the data field such as type and metadata information.","pos":[88,198]},{"content":"You can retrieve the table that the data field belongs to by using the &lt;xref:System.Web.DynamicData.MetaColumn.Table%2A&gt; property.","pos":[205,335],"source":"       You can retrieve the table that the data field belongs to by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property."},{"content":"You can also retrieve the data model by using the &lt;xref:System.Web.DynamicData.MetaColumn.Model%2A&gt; property.","pos":[336,445],"source":" You can also retrieve the data model by using the <xref:System.Web.DynamicData.MetaColumn.Model%2A> property."}]}]},{"pos":[3839,3934],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> class."},{"pos":[4183,4223],"content":"The meta table that contains the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The meta table that contains the column.","pos":[0,40]}]},{"pos":[4333,4353],"content":"The column provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column provider.","pos":[0,20]}]},{"pos":[4834,4918],"content":"Gets or sets a value that specifies whether a column enables a value to be inserted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether a column enables a value to be inserted.","pos":[0,84]}]},{"pos":[4930,5155],"content":"The default value is `false` when the column is read-only and `true` when the column is not read-only. The default value can be overridden by using the <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value is <ph id=\"ph1\">`false`</ph> when the column is read-only and <ph id=\"ph2\">`true`</ph> when the column is not read-only.","pos":[0,102],"source":"The default value is `false` when the column is read-only and `true` when the column is not read-only."},{"content":"The default value can be overridden by using the &lt;xref:System.ComponentModel.DataAnnotations.EditableAttribute&gt; attribute.","pos":[103,225],"source":" The default value can be overridden by using the <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attribute."}]},{"pos":[5276,5457],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the column enables a value to be inserted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the column enables a value to be inserted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5970,6302],"content":"Gets a value that indicates whether the formatting string specified by the &lt;xref:System.Web.DynamicData.MetaColumn.DataFormatString*&gt; property is applied to field values when the data-bound control that contains the data field that is represented by the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is in edit mode.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the formatting string specified by the <xref:System.Web.DynamicData.MetaColumn.DataFormatString*> property is applied to field values when the data-bound control that contains the data field that is represented by the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object is in edit mode."},{"pos":[6314,6873],"content":"The ApplyFormatInEditMode property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ApplyFormatInEditMode property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.","pos":[0,559],"nodes":[{"content":"The ApplyFormatInEditMode property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&gt; attribute is applied to the data field and retrieves the value of the &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=fullName&gt; property.","pos":[0,314],"source":"The ApplyFormatInEditMode property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=fullName> property."},{"content":"If a &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&gt; attribute is not found, this property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.DataTypeAttribute&gt; attribute is applied to retrieve formatting information.","pos":[315,559],"source":" If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information."}]}]},{"pos":[6998,7433],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the formatting string specified by the &lt;xref:System.Web.DynamicData.MetaColumn.DataFormatString*&gt; property is applied to field values when the data-bound control that contains the data field that is represented by the <bpt id=\"p2\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is in edit mode; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the formatting string specified by the <xref:System.Web.DynamicData.MetaColumn.DataFormatString*> property is applied to field values when the data-bound control that contains the data field that is represented by the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object is in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7895,8048],"content":"Gets the collection of metadata attributes that apply to the data field represented by the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the collection of metadata attributes that apply to the data field represented by the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object."},{"pos":[8226,8374],"content":"The collection of metadata attributes that apply to the data field represented by the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The collection of metadata attributes that apply to the data field represented by the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object."},{"pos":[8899,8929],"content":"Gets the attribute collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the attribute collection.","pos":[0,30]}]},{"pos":[8941,9077],"content":"You must call the BuildAttributeCollection method before you access the <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"You must call the BuildAttributeCollection method before you access the &lt;xref:System.Web.DynamicData.MetaColumn.Attributes%2A&gt; property.","pos":[0,136],"source":"You must call the BuildAttributeCollection method before you access the <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> property."}]},{"pos":[9294,9319],"content":"The attribute collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attribute collection.","pos":[0,25]}]},{"pos":[9784,9809],"content":"Gets the data field type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the data field type.","pos":[0,25]}]},{"pos":[9821,9910],"content":"The ColumnType property returns the common language runtime (CLR) type of the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ColumnType property returns the common language runtime (CLR) type of the data field.","pos":[0,89]}]},{"pos":[10021,10041],"content":"The data field type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data field type.","pos":[0,20]}]},{"pos":[10562,10772],"content":"Gets a value that indicates whether empty string values (\"\") are automatically converted to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values when the data field is updated in the data source.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether empty string values (\"\") are automatically converted to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values when the data field is updated in the data source."},{"pos":[10784,11349],"content":"The ConvertEmptyStringToNull property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ConvertEmptyStringToNull property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.","pos":[0,565],"nodes":[{"content":"The ConvertEmptyStringToNull property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&gt; attribute is applied to the data field and retrieves the value of the &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=fullName&gt; property.","pos":[0,320],"source":"The ConvertEmptyStringToNull property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=fullName> property."},{"content":"If a &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&gt; attribute is not found, this property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.DataTypeAttribute&gt; attribute is applied to retrieve formatting information.","pos":[321,565],"source":" If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information."}]}]},{"pos":[11477,11785],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if empty string values are automatically converted to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values when the data field is updated in the data source; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if empty string values are automatically converted to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values when the data field is updated in the data source; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12280,12350],"content":"Gets the string that specifies the display format for the field value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the string that specifies the display format for the field value.","pos":[0,70]}]},{"pos":[12362,12911],"content":"The DataFormatString property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DataFormatString property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.","pos":[0,549],"nodes":[{"content":"The DataFormatString property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&gt; attribute is applied to the data field and retrieves the value of the &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName&gt; property.","pos":[0,304],"source":"The DataFormatString property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> property."},{"content":"If a &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&gt; attribute is not found, this property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.DataTypeAttribute&gt; attribute is applied to retrieve formatting information.","pos":[305,549],"source":" If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information."}]}]},{"pos":[13032,13097],"content":"The string that specifies the display format for the field value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string that specifies the display format for the field value.","pos":[0,65]}]},{"pos":[13589,13705],"content":"Gets the <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute that is applied to the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.ComponentModel.DataAnnotations.DataTypeAttribute&gt; attribute that is applied to the data field.","pos":[0,116],"source":"Gets the <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute that is applied to the data field."}]},{"pos":[13918,14029],"content":"The <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute that is applied to the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ComponentModel.DataAnnotations.DataTypeAttribute&gt; attribute that is applied to the data field.","pos":[0,111],"source":"The <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute that is applied to the data field."}]},{"pos":[14497,14539],"content":"Gets the default value for the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default value for the data field.","pos":[0,42]}]},{"pos":[14551,14874],"content":"The DefaultValue property is typically used to pre-populate the field value when a new entry is created. This property verifies if a <xref:System.ComponentModel.DefaultValueAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DefaultValue property is typically used to pre-populate the field value when a new entry is created. This property verifies if a <xref:System.ComponentModel.DefaultValueAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> property.","pos":[0,323],"nodes":[{"content":"The DefaultValue property is typically used to pre-populate the field value when a new entry is created.","pos":[0,104]},{"content":"This property verifies if a &lt;xref:System.ComponentModel.DefaultValueAttribute&gt; attribute is applied to the data field and retrieves the value of the &lt;xref:System.ComponentModel.DefaultValueAttribute.Value%2A&gt; property.","pos":[105,323],"source":" This property verifies if a <xref:System.ComponentModel.DefaultValueAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> property."}]}]},{"pos":[14991,15028],"content":"The default value for the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value for the data field.","pos":[0,37]}]},{"pos":[15486,15526],"content":"Gets the description for the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the description for the data field.","pos":[0,40]}]},{"pos":[15538,15796],"content":"The Description property verifies if a <xref:System.ComponentModel.DescriptionAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=fullName> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Description property verifies if a &lt;xref:System.ComponentModel.DescriptionAttribute&gt; attribute is applied to the data field and retrieves the value of the &lt;xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=fullName&gt; property.","pos":[0,258],"source":"The Description property verifies if a <xref:System.ComponentModel.DescriptionAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=fullName> property."}]},{"pos":[15920,15955],"content":"The description for the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description for the data field.","pos":[0,35]}]},{"pos":[16412,16453],"content":"Gets the display name for the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the display name for the data field.","pos":[0,41]}]},{"pos":[16465,16801],"content":"The DisplayName property returns the friendly display name for the data field if one has been set, or the field name if no display name has been specified. The DisplayName property verifies if a friendly display name has been set by checking if a <xref:System.ComponentModel.DisplayNameAttribute> attribute is applied to the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DisplayName property returns the friendly display name for the data field if one has been set, or the field name if no display name has been specified. The DisplayName property verifies if a friendly display name has been set by checking if a <xref:System.ComponentModel.DisplayNameAttribute> attribute is applied to the data field.","pos":[0,336],"nodes":[{"content":"The DisplayName property returns the friendly display name for the data field if one has been set, or the field name if no display name has been specified.","pos":[0,155]},{"content":"The DisplayName property verifies if a friendly display name has been set by checking if a &lt;xref:System.ComponentModel.DisplayNameAttribute&gt; attribute is applied to the data field.","pos":[156,336],"source":" The DisplayName property verifies if a friendly display name has been set by checking if a <xref:System.ComponentModel.DisplayNameAttribute> attribute is applied to the data field."}]}]},{"pos":[16925,16961],"content":"The display name for the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The display name for the data field.","pos":[0,36]}]},{"pos":[17453,17559],"content":"Gets an object that contains attributes of the property that represents the data field in the entity type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that contains attributes of the property that represents the data field in the entity type.","pos":[0,106]}]},{"pos":[17723,17824],"content":"An object that contains attributes of the property that represents the data field in the entity type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains attributes of the property that represents the data field in the entity type.","pos":[0,101]}]},{"pos":[18293,18417],"content":"Gets the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*> value that is used for the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*&gt; value that is used for the column.","pos":[0,124],"source":"Gets the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*> value that is used for the column."}]},{"pos":[18534,18653],"content":"The <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*> value that is used for the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*&gt; value that is used for the column.","pos":[0,119],"source":"The <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*> value that is used for the column."}]},{"pos":[19106,19222],"content":"Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.","pos":[0,116]}]},{"pos":[19336,19410],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> in all cases."},{"pos":[19865,19941],"content":"Initializes data that might not be available when the constructor is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes data that might not be available when the constructor is called.","pos":[0,76]}]},{"pos":[19953,20163],"content":"This method cannot be called directly. To customize initialization, you can derive from this class and override the `Initialize` method. If you override this method, call the base control's `Initialize` method.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method cannot be called directly.","pos":[0,38]},{"content":"To customize initialization, you can derive from this class and override the <ph id=\"ph1\">`Initialize`</ph> method.","pos":[39,136],"source":" To customize initialization, you can derive from this class and override the `Initialize` method."},{"content":"If you override this method, call the base control's <ph id=\"ph1\">`Initialize`</ph> method.","pos":[137,210],"source":" If you override this method, call the base control's `Initialize` method."}]},{"pos":[20704,20776],"content":"Gets a value that indicates whether the data field contains binary data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field contains binary data.","pos":[0,72]}]},{"pos":[20892,21067],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field contains binary data; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field contains binary data; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21550,21624],"content":"Gets a value that indicates whether the data field exists in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field exists in the database.","pos":[0,74]}]},{"pos":[21636,21795],"content":"Use the IsCustomProperty property to determine whether a data field is in the database or if it is an extra property that was added to the data context object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the IsCustomProperty property to determine whether a data field is in the database or if it is an extra property that was added to the data context object.","pos":[0,159]}]},{"pos":[21915,22100],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field does not exist in the database; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field does not exist in the database; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22582,22658],"content":"Gets a value that indicates whether the data field is a floating-point type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field is a floating-point type.","pos":[0,76]}]},{"pos":[22670,22738],"content":"The types <ph id=\"ph1\">`float`</ph>, <ph id=\"ph2\">`double`</ph>, and <ph id=\"ph3\">`decimal`</ph> are floating point types.","needQuote":true,"needEscape":true,"source":"The types `float`, `double`, and `decimal` are floating point types."},{"pos":[22857,23036],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field is a floating-point type; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field is a floating-point type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23547,23623],"content":"Gets a value that indicates whether the data field is part of a foreign key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field is part of a foreign key.","pos":[0,76]}]},{"pos":[23748,23927],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field is part of a foreign key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field is part of a foreign key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24394,24494],"content":"Gets a value that indicates whether the data field value is automatically generated in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field value is automatically generated in the database.","pos":[0,100]}]},{"pos":[24609,24812],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field value is automatically generated in the database; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field value is automatically generated in the database; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25259,25334],"content":"Gets a value that indicates whether the data field type is an integer type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field type is an integer type.","pos":[0,75]}]},{"pos":[25346,25409],"content":"The types <ph id=\"ph1\">`byte`</ph>, <ph id=\"ph2\">`short`</ph>, <ph id=\"ph3\">`int`</ph>, and <ph id=\"ph4\">`long`</ph> are integer types.","needQuote":true,"needEscape":true,"source":"The types `byte`, `short`, `int`, and `long` are integer types."},{"pos":[25522,25700],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field type is an integer type; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field type is an integer type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26160,26241],"content":"Gets a value that indicates whether the data field type can contain long strings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field type can contain long strings.","pos":[0,81]}]},{"pos":[26253,26498],"content":"The SQL types `text`, `ntext`, `varchar`, and `nvarchar` can contain long strings. The value of the IsLongString property is used to determine whether the TextBox or TextArea field template is displayed to enable users to modify the field value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SQL types <ph id=\"ph1\">`text`</ph>, <ph id=\"ph2\">`ntext`</ph>, <ph id=\"ph3\">`varchar`</ph>, and <ph id=\"ph4\">`nvarchar`</ph> can contain long strings.","pos":[0,82],"source":"The SQL types `text`, `ntext`, `varchar`, and `nvarchar` can contain long strings."},{"content":"The value of the IsLongString property is used to determine whether the TextBox or TextArea field template is displayed to enable users to modify the field value.","pos":[83,245]}]},{"pos":[26614,26798],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field type can contain long strings; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field type can contain long strings; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27261,27347],"content":"Gets a value that indicates whether the data field is part of the table's primary key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field is part of the table's primary key.","pos":[0,86]}]},{"pos":[27463,27652],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field is part of the table's primary key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field is part of the table's primary key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28105,28169],"content":"Gets a value that indicates whether the data field is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field is read-only.","pos":[0,64]}]},{"pos":[28291,28458],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28909,28977],"content":"Gets a value that indicates whether the data field requires a value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field requires a value.","pos":[0,68]}]},{"pos":[28989,29326],"content":"The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is applied to the data field or if the database schema contains information about the data field being required in the database to determine whether the data field requires a value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.DynamicData.MetaColumn.Description%2A&gt; property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.RequiredAttribute&gt; attribute is applied to the data field or if the database schema contains information about the data field being required in the database to determine whether the data field requires a value.","pos":[0,337],"source":"The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is applied to the data field or if the database schema contains information about the data field being required in the database to determine whether the data field requires a value."}]},{"pos":[29440,29611],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field requires a value; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field requires a value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30052,30125],"content":"Gets a value that indicates whether the data field type is a string type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field type is a string type.","pos":[0,73]}]},{"pos":[30237,30413],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field type is a string type; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field type is a string type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30857,30949],"content":"Gets a value that indicates the maximum length of data that can be stored in the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates the maximum length of data that can be stored in the data field.","pos":[0,92]}]},{"pos":[30961,31430],"content":"The MaxLength property verifies if a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> property. If a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is not applied to the data field, the MaxLength property uses the database type to retrieve the maximum length allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The MaxLength property verifies if a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> property. If a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is not applied to the data field, the MaxLength property uses the database type to retrieve the maximum length allowed.","pos":[0,469],"nodes":[{"content":"The MaxLength property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.StringLengthAttribute&gt; attribute is applied to the data field and retrieves the value of the &lt;xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A&gt; property.","pos":[0,267],"source":"The MaxLength property verifies if a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> property."},{"content":"If a &lt;xref:System.ComponentModel.DataAnnotations.StringLengthAttribute&gt; attribute is not applied to the data field, the MaxLength property uses the database type to retrieve the maximum length allowed.","pos":[268,469],"source":" If a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is not applied to the data field, the MaxLength property uses the database type to retrieve the maximum length allowed."}]}]},{"pos":[31540,31604],"content":"The maximum length of data that can be stored in the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum length of data that can be stored in the data field.","pos":[0,64]}]},{"pos":[32029,32162],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaModel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the data model that this data field belongs to.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.DynamicData.MetaModel\"></xref> object that represents the data model that this data field belongs to."},{"pos":[32317,32390],"content":"An object that represents the data model that this data field belongs to.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the data model that this data field belongs to.","pos":[0,73]}]},{"pos":[32806,32838],"content":"Gets the name of the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the data field.","pos":[0,32]}]},{"pos":[32947,32974],"content":"The name of the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the data field.","pos":[0,27]}]},{"pos":[33444,33578],"content":"Gets the caption that is displayed for a field when the field's value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the caption that is displayed for a field when the field's value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[33590,34137],"content":"The NullDisplayText property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The NullDisplayText property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.","pos":[0,547],"nodes":[{"content":"The NullDisplayText property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&gt; attribute is applied to the data field and retrieves the value of the &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=fullName&gt; property.","pos":[0,302],"source":"The NullDisplayText property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=fullName> property."},{"content":"If a &lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&gt; attribute is not found, this property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.DataTypeAttribute&gt; attribute is applied to retrieve formatting information.","pos":[303,547],"source":" If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information."}]}]},{"pos":[34257,34386],"content":"The caption that is displayed for a field when the field's value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The caption that is displayed for a field when the field's value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[34822,34913],"content":"Gets a value that can be used as a watermark in the UI that is bound to data in the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that can be used as a watermark in the UI that is bound to data in the column.","pos":[0,91]}]},{"pos":[34925,34966],"content":"A <ph id=\"ph1\">`null`</ph> or empty string can be returned.","needQuote":true,"needEscape":true,"source":"A `null` or empty string can be returned."},{"pos":[35266,35352],"content":"A value that can be used as a watermark in the UI that is bound to data in the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that can be used as a watermark in the UI that is bound to data in the column.","pos":[0,86]}]},{"pos":[35789,35917],"content":"Gets the abstraction provider object that is used to generate the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the abstraction provider object that is used to generate the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object."},{"pos":[36115,36238],"content":"The abstraction provider object that is used to generate the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The abstraction provider object that is used to generate the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object."},{"pos":[36737,36838],"content":"Gets the error message that is displayed when the data field requires a value but its value is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the error message that is displayed when the data field requires a value but its value is empty.","pos":[0,101]}]},{"pos":[36963,37059],"content":"The error message that is displayed when the data field requires a value but its value is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"The error message that is displayed when the data field requires a value but its value is empty.","pos":[0,96]}]},{"pos":[37539,37569],"content":"Clears cached column metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears cached column metadata.","pos":[0,30]}]},{"pos":[37581,37850],"content":"The column metadata is information that is derived from attributes and that is cached for performance. Calling this method clears the metadata cache for this column. The metadata cache is rebuilt the next time any information that is derived from metadata is requested.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column metadata is information that is derived from attributes and that is cached for performance. Calling this method clears the metadata cache for this column. The metadata cache is rebuilt the next time any information that is derived from metadata is requested.","pos":[0,269],"nodes":[{"content":"The column metadata is information that is derived from attributes and that is cached for performance.","pos":[0,102]},{"content":"Calling this method clears the metadata cache for this column.","pos":[103,165]},{"content":"The metadata cache is rebuilt the next time any information that is derived from metadata is requested.","pos":[166,269]}]}]},{"pos":[38366,38437],"content":"Gets a value that indicates whether the data field should be displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the data field should be displayed.","pos":[0,71]}]},{"pos":[38450,40083],"content":"The Scaffold property indicates whether a data field should be displayed when it is automatically generated by ASP.NET Dynamic Data. This property verifies if a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is applied to the data field and returns the value of the <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is not applied to the data field, Dynamic Data uses the following rules to determine whether to display the column:      -   If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field, the data field is displayed. This rule overrides all the other rules.      -   If the value of the <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> property is `true`, the data field is not displayed. This occurs because Dynamic Data handles foreign-key fields in a different way and will not typically display the foreign-key field value.      -   If the value of the <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> property is `true`, the data field is not displayed. Typically fields that are automatically generated in the database do not contain relevant information. Make sure that you apply the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute to the data field, if the data field must be displayed.      -   If the value of the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property is `true`, the data field is not displayed.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Scaffold property indicates whether a data field should be displayed when it is automatically generated by ASP.NET Dynamic Data.","pos":[0,132]},{"content":"This property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute&gt; attribute is applied to the data field and returns the value of the &lt;xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=fullName&gt; property.","pos":[133,413],"source":" This property verifies if a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is applied to the data field and returns the value of the <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=fullName> property."},{"content":"If a &lt;xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute&gt; attribute is not applied to the data field, Dynamic Data uses the following rules to determine whether to display the column:      -   If a &lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt; attribute is applied to the data field, the data field is displayed.","pos":[414,757],"source":" If a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is not applied to the data field, Dynamic Data uses the following rules to determine whether to display the column:      -   If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field, the data field is displayed."},{"content":"This rule overrides all the other rules.","pos":[758,798]},{"content":"-   If the value of the &lt;xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A&gt; property is <ph id=\"ph1\">`true`</ph>, the data field is not displayed.","pos":[804,946],"source":"      -   If the value of the <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> property is `true`, the data field is not displayed."},{"content":"This occurs because Dynamic Data handles foreign-key fields in a different way and will not typically display the foreign-key field value.","pos":[947,1085]},{"content":"-   If the value of the &lt;xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A&gt; property is <ph id=\"ph1\">`true`</ph>, the data field is not displayed.","pos":[1091,1223],"source":"      -   If the value of the <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> property is `true`, the data field is not displayed."},{"content":"Typically fields that are automatically generated in the database do not contain relevant information.","pos":[1224,1326]},{"content":"Make sure that you apply the &lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt; attribute to the data field, if the data field must be displayed.","pos":[1327,1482],"source":" Make sure that you apply the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute to the data field, if the data field must be displayed."},{"content":"-   If the value of the &lt;xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A&gt; property is <ph id=\"ph1\">`true`</ph>, the data field is not displayed.","pos":[1488,1625],"source":"      -   If the value of the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property is `true`, the data field is not displayed."}]},{"pos":[40209,40383],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data field should be displayed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field should be displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[40862,40897],"content":"Gets the short name for the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the short name for the column.","pos":[0,35]}]},{"pos":[40909,41076],"content":"This property is provided for <xref:System.Web.UI.WebControls.GridView> control and other controls where a short name is needed because of limited column-header space.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is provided for &lt;xref:System.Web.UI.WebControls.GridView&gt; control and other controls where a short name is needed because of limited column-header space.","pos":[0,167],"source":"This property is provided for <xref:System.Web.UI.WebControls.GridView> control and other controls where a short name is needed because of limited column-header space."}]},{"pos":[41205,41235],"content":"The short name for the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The short name for the column.","pos":[0,30]}]},{"pos":[41712,41792],"content":"Gets the expression that is used to determine the sort order for the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the expression that is used to determine the sort order for the data field.","pos":[0,80]}]},{"pos":[41911,41986],"content":"The expression that is used to determine the sort order for the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression that is used to determine the sort order for the data field.","pos":[0,75]}]},{"pos":[42416,42543],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the table that the data field belongs to.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> object that represents the table that the data field belongs to."},{"pos":[42698,42765],"content":"An object that represents the table that the data field belongs to.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the table that the data field belongs to.","pos":[0,67]}]},{"pos":[43205,43230],"content":"Gets the data field name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the data field name.","pos":[0,25]}]},{"pos":[43366,43436],"content":"The data field name, which is the string representation of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data field name, which is the string representation of the column.","pos":[0,70]}]},{"pos":[43875,43907],"content":"Gets the type of the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the data field.","pos":[0,32]}]},{"pos":[43919,44044],"content":"The TypeCode property value is derived from the value of the <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The TypeCode property value is derived from the value of the &lt;xref:System.Web.DynamicData.MetaColumn.ColumnType%2A&gt; property.","pos":[0,125],"source":"The TypeCode property value is derived from the value of the <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property."}]},{"pos":[44161,44188],"content":"The type of the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the data field.","pos":[0,27]}]},{"pos":[44617,44682],"content":"Gets the name of the field template specified for the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the field template specified for the data field.","pos":[0,65]}]},{"pos":[44694,45119],"content":"The UIHint property verifies if a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is not applied to the data field, the UIHint property returns an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The UIHint property verifies if a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is not applied to the data field, the UIHint property returns an empty string.","pos":[0,425],"nodes":[{"content":"The UIHint property verifies if a &lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt; attribute is applied to the data field and retrieves the value of the &lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=fullName&gt; property.","pos":[0,270],"source":"The UIHint property verifies if a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=fullName> property."},{"content":"If a &lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt; attribute is not applied to the data field, the UIHint property returns an empty string.","pos":[271,425],"source":" If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is not applied to the data field, the UIHint property returns an empty string."}]}]},{"pos":[45238,45298],"content":"The name of the field template specified for the data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the field template specified for the data field.","pos":[0,60]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.MetaColumn\n  id: MetaColumn\n  children:\n  - System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)\n  - System.Web.DynamicData.MetaColumn.AllowInitialValue\n  - System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode\n  - System.Web.DynamicData.MetaColumn.Attributes\n  - System.Web.DynamicData.MetaColumn.BuildAttributeCollection\n  - System.Web.DynamicData.MetaColumn.ColumnType\n  - System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull\n  - System.Web.DynamicData.MetaColumn.DataFormatString\n  - System.Web.DynamicData.MetaColumn.DataTypeAttribute\n  - System.Web.DynamicData.MetaColumn.DefaultValue\n  - System.Web.DynamicData.MetaColumn.Description\n  - System.Web.DynamicData.MetaColumn.DisplayName\n  - System.Web.DynamicData.MetaColumn.EntityTypeProperty\n  - System.Web.DynamicData.MetaColumn.FilterUIHint\n  - System.Web.DynamicData.MetaColumn.HtmlEncode\n  - System.Web.DynamicData.MetaColumn.Initialize\n  - System.Web.DynamicData.MetaColumn.IsBinaryData\n  - System.Web.DynamicData.MetaColumn.IsCustomProperty\n  - System.Web.DynamicData.MetaColumn.IsFloatingPoint\n  - System.Web.DynamicData.MetaColumn.IsForeignKeyComponent\n  - System.Web.DynamicData.MetaColumn.IsGenerated\n  - System.Web.DynamicData.MetaColumn.IsInteger\n  - System.Web.DynamicData.MetaColumn.IsLongString\n  - System.Web.DynamicData.MetaColumn.IsPrimaryKey\n  - System.Web.DynamicData.MetaColumn.IsReadOnly\n  - System.Web.DynamicData.MetaColumn.IsRequired\n  - System.Web.DynamicData.MetaColumn.IsString\n  - System.Web.DynamicData.MetaColumn.MaxLength\n  - System.Web.DynamicData.MetaColumn.Model\n  - System.Web.DynamicData.MetaColumn.Name\n  - System.Web.DynamicData.MetaColumn.NullDisplayText\n  - System.Web.DynamicData.MetaColumn.Prompt\n  - System.Web.DynamicData.MetaColumn.Provider\n  - System.Web.DynamicData.MetaColumn.RequiredErrorMessage\n  - System.Web.DynamicData.MetaColumn.ResetMetadata\n  - System.Web.DynamicData.MetaColumn.Scaffold\n  - System.Web.DynamicData.MetaColumn.ShortDisplayName\n  - System.Web.DynamicData.MetaColumn.SortExpression\n  - System.Web.DynamicData.MetaColumn.Table\n  - System.Web.DynamicData.MetaColumn.ToString\n  - System.Web.DynamicData.MetaColumn.TypeCode\n  - System.Web.DynamicData.MetaColumn.UIHint\n  langs:\n  - csharp\n  name: MetaColumn\n  nameWithType: MetaColumn\n  fullName: System.Web.DynamicData.MetaColumn\n  type: Class\n  summary: Represents a database column that is used by Dynamic Data.\n  remarks: \"In ASP.NET Dynamic Data applications, the MetaColumn class represents a database field. The MetaColumn class lets you retrieve information about the data field such as type and metadata information.  \\n  \\n You can retrieve the table that the data field belongs to by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property. You can also retrieve the data model by using the <xref:System.Web.DynamicData.MetaColumn.Model%2A> property.\"\n  syntax:\n    content: 'public class MetaColumn : System.Web.DynamicData.IFieldFormattingOptions'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.DynamicData.IFieldFormattingOptions\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)\n  id: '#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)'\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: MetaColumn(MetaTable,ColumnProvider)\n  nameWithType: MetaColumn.MetaColumn(MetaTable,ColumnProvider)\n  fullName: System.Web.DynamicData.MetaColumn.MetaColumn(MetaTable,ColumnProvider)\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> class.\n  syntax:\n    content: public MetaColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);\n    parameters:\n    - id: table\n      type: System.Web.DynamicData.MetaTable\n      description: The meta table that contains the column.\n    - id: columnProvider\n      type: System.Web.DynamicData.ModelProviders.ColumnProvider\n      description: The column provider.\n  overload: System.Web.DynamicData.MetaColumn.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.AllowInitialValue\n  id: AllowInitialValue\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: AllowInitialValue\n  nameWithType: MetaColumn.AllowInitialValue\n  fullName: System.Web.DynamicData.MetaColumn.AllowInitialValue\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets a value that specifies whether a column enables a value to be inserted.\n  remarks: The default value is `false` when the column is read-only and `true` when the column is not read-only. The default value can be overridden by using the <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attribute.\n  syntax:\n    content: public bool AllowInitialValue { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the column enables a value to be inserted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.AllowInitialValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode\n  id: ApplyFormatInEditMode\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: ApplyFormatInEditMode\n  nameWithType: MetaColumn.ApplyFormatInEditMode\n  fullName: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the formatting string specified by the <xref:System.Web.DynamicData.MetaColumn.DataFormatString*> property is applied to field values when the data-bound control that contains the data field that is represented by the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object is in edit mode.\n  remarks: The ApplyFormatInEditMode property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.\n  syntax:\n    content: public bool ApplyFormatInEditMode { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the formatting string specified by the <xref:System.Web.DynamicData.MetaColumn.DataFormatString*> property is applied to field values when the data-bound control that contains the data field that is represented by the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object is in edit mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.Attributes\n  id: Attributes\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: MetaColumn.Attributes\n  fullName: System.Web.DynamicData.MetaColumn.Attributes\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the collection of metadata attributes that apply to the data field represented by the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object.\n  syntax:\n    content: public System.ComponentModel.AttributeCollection Attributes { get; }\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: The collection of metadata attributes that apply to the data field represented by the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object.\n  overload: System.Web.DynamicData.MetaColumn.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.BuildAttributeCollection\n  id: BuildAttributeCollection\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: BuildAttributeCollection()\n  nameWithType: MetaColumn.BuildAttributeCollection()\n  fullName: System.Web.DynamicData.MetaColumn.BuildAttributeCollection()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the attribute collection.\n  remarks: You must call the BuildAttributeCollection method before you access the <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> property.\n  syntax:\n    content: protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();\n    parameters: []\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: The attribute collection.\n  overload: System.Web.DynamicData.MetaColumn.BuildAttributeCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.ColumnType\n  id: ColumnType\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: ColumnType\n  nameWithType: MetaColumn.ColumnType\n  fullName: System.Web.DynamicData.MetaColumn.ColumnType\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the data field type.\n  remarks: The ColumnType property returns the common language runtime (CLR) type of the data field.\n  syntax:\n    content: public Type ColumnType { get; }\n    return:\n      type: System.Type\n      description: The data field type.\n  overload: System.Web.DynamicData.MetaColumn.ColumnType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull\n  id: ConvertEmptyStringToNull\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: ConvertEmptyStringToNull\n  nameWithType: MetaColumn.ConvertEmptyStringToNull\n  fullName: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether empty string values (\"\") are automatically converted to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values when the data field is updated in the data source.\n  remarks: The ConvertEmptyStringToNull property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.\n  syntax:\n    content: public bool ConvertEmptyStringToNull { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if empty string values are automatically converted to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> values when the data field is updated in the data source; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.DataFormatString\n  id: DataFormatString\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: DataFormatString\n  nameWithType: MetaColumn.DataFormatString\n  fullName: System.Web.DynamicData.MetaColumn.DataFormatString\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the string that specifies the display format for the field value.\n  remarks: The DataFormatString property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.\n  syntax:\n    content: public string DataFormatString { get; }\n    return:\n      type: System.String\n      description: The string that specifies the display format for the field value.\n  overload: System.Web.DynamicData.MetaColumn.DataFormatString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.DataTypeAttribute\n  id: DataTypeAttribute\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: DataTypeAttribute\n  nameWithType: MetaColumn.DataTypeAttribute\n  fullName: System.Web.DynamicData.MetaColumn.DataTypeAttribute\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute that is applied to the data field.\n  syntax:\n    content: public System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute { get; }\n    return:\n      type: System.ComponentModel.DataAnnotations.DataTypeAttribute\n      description: The <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute that is applied to the data field.\n  overload: System.Web.DynamicData.MetaColumn.DataTypeAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.DefaultValue\n  id: DefaultValue\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: DefaultValue\n  nameWithType: MetaColumn.DefaultValue\n  fullName: System.Web.DynamicData.MetaColumn.DefaultValue\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the default value for the data field.\n  remarks: The DefaultValue property is typically used to pre-populate the field value when a new entry is created. This property verifies if a <xref:System.ComponentModel.DefaultValueAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> property.\n  syntax:\n    content: public object DefaultValue { get; }\n    return:\n      type: System.Object\n      description: The default value for the data field.\n  overload: System.Web.DynamicData.MetaColumn.DefaultValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.Description\n  id: Description\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: Description\n  nameWithType: MetaColumn.Description\n  fullName: System.Web.DynamicData.MetaColumn.Description\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the description for the data field.\n  remarks: The Description property verifies if a <xref:System.ComponentModel.DescriptionAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=fullName> property.\n  syntax:\n    content: public virtual string Description { get; }\n    return:\n      type: System.String\n      description: The description for the data field.\n  overload: System.Web.DynamicData.MetaColumn.Description*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.DisplayName\n  id: DisplayName\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: MetaColumn.DisplayName\n  fullName: System.Web.DynamicData.MetaColumn.DisplayName\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the display name for the data field.\n  remarks: The DisplayName property returns the friendly display name for the data field if one has been set, or the field name if no display name has been specified. The DisplayName property verifies if a friendly display name has been set by checking if a <xref:System.ComponentModel.DisplayNameAttribute> attribute is applied to the data field.\n  syntax:\n    content: public virtual string DisplayName { get; }\n    return:\n      type: System.String\n      description: The display name for the data field.\n  overload: System.Web.DynamicData.MetaColumn.DisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.EntityTypeProperty\n  id: EntityTypeProperty\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: EntityTypeProperty\n  nameWithType: MetaColumn.EntityTypeProperty\n  fullName: System.Web.DynamicData.MetaColumn.EntityTypeProperty\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets an object that contains attributes of the property that represents the data field in the entity type.\n  syntax:\n    content: public System.Reflection.PropertyInfo EntityTypeProperty { get; }\n    return:\n      type: System.Reflection.PropertyInfo\n      description: An object that contains attributes of the property that represents the data field in the entity type.\n  overload: System.Web.DynamicData.MetaColumn.EntityTypeProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.FilterUIHint\n  id: FilterUIHint\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: FilterUIHint\n  nameWithType: MetaColumn.FilterUIHint\n  fullName: System.Web.DynamicData.MetaColumn.FilterUIHint\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*> value that is used for the column.\n  syntax:\n    content: public string FilterUIHint { get; }\n    return:\n      type: System.String\n      description: The <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*> value that is used for the column.\n  overload: System.Web.DynamicData.MetaColumn.FilterUIHint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.HtmlEncode\n  id: HtmlEncode\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: HtmlEncode\n  nameWithType: MetaColumn.HtmlEncode\n  fullName: System.Web.DynamicData.MetaColumn.HtmlEncode\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.\n  syntax:\n    content: public bool HtmlEncode { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> in all cases.\n  overload: System.Web.DynamicData.MetaColumn.HtmlEncode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.Initialize\n  id: Initialize\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: MetaColumn.Initialize()\n  fullName: System.Web.DynamicData.MetaColumn.Initialize()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes data that might not be available when the constructor is called.\n  remarks: This method cannot be called directly. To customize initialization, you can derive from this class and override the `Initialize` method. If you override this method, call the base control's `Initialize` method.\n  syntax:\n    content: protected virtual void Initialize ();\n    parameters: []\n  overload: System.Web.DynamicData.MetaColumn.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsBinaryData\n  id: IsBinaryData\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsBinaryData\n  nameWithType: MetaColumn.IsBinaryData\n  fullName: System.Web.DynamicData.MetaColumn.IsBinaryData\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field contains binary data.\n  syntax:\n    content: public bool IsBinaryData { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field contains binary data; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsBinaryData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsCustomProperty\n  id: IsCustomProperty\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsCustomProperty\n  nameWithType: MetaColumn.IsCustomProperty\n  fullName: System.Web.DynamicData.MetaColumn.IsCustomProperty\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field exists in the database.\n  remarks: Use the IsCustomProperty property to determine whether a data field is in the database or if it is an extra property that was added to the data context object.\n  syntax:\n    content: public bool IsCustomProperty { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field does not exist in the database; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsCustomProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsFloatingPoint\n  id: IsFloatingPoint\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsFloatingPoint\n  nameWithType: MetaColumn.IsFloatingPoint\n  fullName: System.Web.DynamicData.MetaColumn.IsFloatingPoint\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field is a floating-point type.\n  remarks: The types `float`, `double`, and `decimal` are floating point types.\n  syntax:\n    content: public bool IsFloatingPoint { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field is a floating-point type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsFloatingPoint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent\n  id: IsForeignKeyComponent\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsForeignKeyComponent\n  nameWithType: MetaColumn.IsForeignKeyComponent\n  fullName: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field is part of a foreign key.\n  syntax:\n    content: public bool IsForeignKeyComponent { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field is part of a foreign key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsGenerated\n  id: IsGenerated\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsGenerated\n  nameWithType: MetaColumn.IsGenerated\n  fullName: System.Web.DynamicData.MetaColumn.IsGenerated\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field value is automatically generated in the database.\n  syntax:\n    content: public bool IsGenerated { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field value is automatically generated in the database; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsGenerated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsInteger\n  id: IsInteger\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsInteger\n  nameWithType: MetaColumn.IsInteger\n  fullName: System.Web.DynamicData.MetaColumn.IsInteger\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field type is an integer type.\n  remarks: The types `byte`, `short`, `int`, and `long` are integer types.\n  syntax:\n    content: public bool IsInteger { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field type is an integer type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsInteger*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsLongString\n  id: IsLongString\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsLongString\n  nameWithType: MetaColumn.IsLongString\n  fullName: System.Web.DynamicData.MetaColumn.IsLongString\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field type can contain long strings.\n  remarks: The SQL types `text`, `ntext`, `varchar`, and `nvarchar` can contain long strings. The value of the IsLongString property is used to determine whether the TextBox or TextArea field template is displayed to enable users to modify the field value.\n  syntax:\n    content: public bool IsLongString { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field type can contain long strings; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsLongString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsPrimaryKey\n  id: IsPrimaryKey\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsPrimaryKey\n  nameWithType: MetaColumn.IsPrimaryKey\n  fullName: System.Web.DynamicData.MetaColumn.IsPrimaryKey\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field is part of the table's primary key.\n  syntax:\n    content: public bool IsPrimaryKey { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field is part of the table's primary key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsPrimaryKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsReadOnly\n  id: IsReadOnly\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: MetaColumn.IsReadOnly\n  fullName: System.Web.DynamicData.MetaColumn.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field is read-only.\n  syntax:\n    content: public virtual bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsRequired\n  id: IsRequired\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsRequired\n  nameWithType: MetaColumn.IsRequired\n  fullName: System.Web.DynamicData.MetaColumn.IsRequired\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field requires a value.\n  remarks: The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is applied to the data field or if the database schema contains information about the data field being required in the database to determine whether the data field requires a value.\n  syntax:\n    content: public bool IsRequired { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field requires a value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsRequired*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.IsString\n  id: IsString\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: IsString\n  nameWithType: MetaColumn.IsString\n  fullName: System.Web.DynamicData.MetaColumn.IsString\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field type is a string type.\n  syntax:\n    content: public bool IsString { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field type is a string type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.IsString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.MaxLength\n  id: MaxLength\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: MaxLength\n  nameWithType: MetaColumn.MaxLength\n  fullName: System.Web.DynamicData.MetaColumn.MaxLength\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates the maximum length of data that can be stored in the data field.\n  remarks: The MaxLength property verifies if a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> property. If a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is not applied to the data field, the MaxLength property uses the database type to retrieve the maximum length allowed.\n  syntax:\n    content: public int MaxLength { get; }\n    return:\n      type: System.Int32\n      description: The maximum length of data that can be stored in the data field.\n  overload: System.Web.DynamicData.MetaColumn.MaxLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.Model\n  id: Model\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: Model\n  nameWithType: MetaColumn.Model\n  fullName: System.Web.DynamicData.MetaColumn.Model\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the <xref href=\"System.Web.DynamicData.MetaModel\"></xref> object that represents the data model that this data field belongs to.\n  syntax:\n    content: public System.Web.DynamicData.MetaModel Model { get; }\n    return:\n      type: System.Web.DynamicData.MetaModel\n      description: An object that represents the data model that this data field belongs to.\n  overload: System.Web.DynamicData.MetaColumn.Model*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.Name\n  id: Name\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MetaColumn.Name\n  fullName: System.Web.DynamicData.MetaColumn.Name\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the name of the data field.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the data field.\n  overload: System.Web.DynamicData.MetaColumn.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.NullDisplayText\n  id: NullDisplayText\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: NullDisplayText\n  nameWithType: MetaColumn.NullDisplayText\n  fullName: System.Web.DynamicData.MetaColumn.NullDisplayText\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the caption that is displayed for a field when the field's value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  remarks: The NullDisplayText property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.\n  syntax:\n    content: public string NullDisplayText { get; }\n    return:\n      type: System.String\n      description: The caption that is displayed for a field when the field's value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.NullDisplayText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.Prompt\n  id: Prompt\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: Prompt\n  nameWithType: MetaColumn.Prompt\n  fullName: System.Web.DynamicData.MetaColumn.Prompt\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that can be used as a watermark in the UI that is bound to data in the column.\n  remarks: A `null` or empty string can be returned.\n  example:\n  - This property is set by the <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> attribute in the column's definition in the meta class for the data entity.\n  syntax:\n    content: public virtual string Prompt { get; }\n    return:\n      type: System.String\n      description: A value that can be used as a watermark in the UI that is bound to data in the column.\n  overload: System.Web.DynamicData.MetaColumn.Prompt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.Provider\n  id: Provider\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: Provider\n  nameWithType: MetaColumn.Provider\n  fullName: System.Web.DynamicData.MetaColumn.Provider\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the abstraction provider object that is used to generate the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object.\n  syntax:\n    content: public System.Web.DynamicData.ModelProviders.ColumnProvider Provider { get; }\n    return:\n      type: System.Web.DynamicData.ModelProviders.ColumnProvider\n      description: The abstraction provider object that is used to generate the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object.\n  overload: System.Web.DynamicData.MetaColumn.Provider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.RequiredErrorMessage\n  id: RequiredErrorMessage\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: RequiredErrorMessage\n  nameWithType: MetaColumn.RequiredErrorMessage\n  fullName: System.Web.DynamicData.MetaColumn.RequiredErrorMessage\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the error message that is displayed when the data field requires a value but its value is empty.\n  syntax:\n    content: public string RequiredErrorMessage { get; }\n    return:\n      type: System.String\n      description: The error message that is displayed when the data field requires a value but its value is empty.\n  overload: System.Web.DynamicData.MetaColumn.RequiredErrorMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.ResetMetadata\n  id: ResetMetadata\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: ResetMetadata()\n  nameWithType: MetaColumn.ResetMetadata()\n  fullName: System.Web.DynamicData.MetaColumn.ResetMetadata()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Clears cached column metadata.\n  remarks: The column metadata is information that is derived from attributes and that is cached for performance. Calling this method clears the metadata cache for this column. The metadata cache is rebuilt the next time any information that is derived from metadata is requested.\n  syntax:\n    content: public void ResetMetadata ();\n    parameters: []\n  overload: System.Web.DynamicData.MetaColumn.ResetMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.Scaffold\n  id: Scaffold\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: Scaffold\n  nameWithType: MetaColumn.Scaffold\n  fullName: System.Web.DynamicData.MetaColumn.Scaffold\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the data field should be displayed.\n  remarks: \"The Scaffold property indicates whether a data field should be displayed when it is automatically generated by ASP.NET Dynamic Data. This property verifies if a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is applied to the data field and returns the value of the <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is not applied to the data field, Dynamic Data uses the following rules to determine whether to display the column:  \\n  \\n-   If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field, the data field is displayed. This rule overrides all the other rules.  \\n  \\n-   If the value of the <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> property is `true`, the data field is not displayed. This occurs because Dynamic Data handles foreign-key fields in a different way and will not typically display the foreign-key field value.  \\n  \\n-   If the value of the <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> property is `true`, the data field is not displayed. Typically fields that are automatically generated in the database do not contain relevant information. Make sure that you apply the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute to the data field, if the data field must be displayed.  \\n  \\n-   If the value of the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property is `true`, the data field is not displayed.\"\n  syntax:\n    content: public virtual bool Scaffold { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data field should be displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaColumn.Scaffold*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.ShortDisplayName\n  id: ShortDisplayName\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: ShortDisplayName\n  nameWithType: MetaColumn.ShortDisplayName\n  fullName: System.Web.DynamicData.MetaColumn.ShortDisplayName\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the short name for the column.\n  remarks: This property is provided for <xref:System.Web.UI.WebControls.GridView> control and other controls where a short name is needed because of limited column-header space.\n  syntax:\n    content: public virtual string ShortDisplayName { get; }\n    return:\n      type: System.String\n      description: The short name for the column.\n  overload: System.Web.DynamicData.MetaColumn.ShortDisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.SortExpression\n  id: SortExpression\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: SortExpression\n  nameWithType: MetaColumn.SortExpression\n  fullName: System.Web.DynamicData.MetaColumn.SortExpression\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the expression that is used to determine the sort order for the data field.\n  syntax:\n    content: public string SortExpression { get; }\n    return:\n      type: System.String\n      description: The expression that is used to determine the sort order for the data field.\n  overload: System.Web.DynamicData.MetaColumn.SortExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.Table\n  id: Table\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: Table\n  nameWithType: MetaColumn.Table\n  fullName: System.Web.DynamicData.MetaColumn.Table\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> object that represents the table that the data field belongs to.\n  syntax:\n    content: public System.Web.DynamicData.MetaTable Table { get; }\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: An object that represents the table that the data field belongs to.\n  overload: System.Web.DynamicData.MetaColumn.Table*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.ToString\n  id: ToString\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: MetaColumn.ToString()\n  fullName: System.Web.DynamicData.MetaColumn.ToString()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the data field name.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The data field name, which is the string representation of the column.\n  overload: System.Web.DynamicData.MetaColumn.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.TypeCode\n  id: TypeCode\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: TypeCode\n  nameWithType: MetaColumn.TypeCode\n  fullName: System.Web.DynamicData.MetaColumn.TypeCode\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the type of the data field.\n  remarks: The TypeCode property value is derived from the value of the <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property.\n  syntax:\n    content: public TypeCode TypeCode { get; }\n    return:\n      type: System.TypeCode\n      description: The type of the data field.\n  overload: System.Web.DynamicData.MetaColumn.TypeCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaColumn.UIHint\n  id: UIHint\n  parent: System.Web.DynamicData.MetaColumn\n  langs:\n  - csharp\n  name: UIHint\n  nameWithType: MetaColumn.UIHint\n  fullName: System.Web.DynamicData.MetaColumn.UIHint\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the name of the field template specified for the data field.\n  remarks: The UIHint property verifies if a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=fullName> property. If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is not applied to the data field, the UIHint property returns an empty string.\n  syntax:\n    content: public virtual string UIHint { get; }\n    return:\n      type: System.String\n      description: The name of the field template specified for the data field.\n  overload: System.Web.DynamicData.MetaColumn.UIHint*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: MetaColumn(MetaTable,ColumnProvider)\n  nameWithType: MetaColumn.MetaColumn(MetaTable,ColumnProvider)\n  fullName: System.Web.DynamicData.MetaColumn.MetaColumn(MetaTable,ColumnProvider)\n- uid: System.Web.DynamicData.MetaTable\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaTable\n  nameWithType: MetaTable\n  fullName: System.Web.DynamicData.MetaTable\n- uid: System.Web.DynamicData.ModelProviders.ColumnProvider\n  parent: System.Web.DynamicData.ModelProviders\n  isExternal: false\n  name: ColumnProvider\n  nameWithType: ColumnProvider\n  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider\n- uid: System.Web.DynamicData.MetaColumn.AllowInitialValue\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: AllowInitialValue\n  nameWithType: MetaColumn.AllowInitialValue\n  fullName: System.Web.DynamicData.MetaColumn.AllowInitialValue\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ApplyFormatInEditMode\n  nameWithType: MetaColumn.ApplyFormatInEditMode\n  fullName: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode\n- uid: System.Web.DynamicData.MetaColumn.Attributes\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Attributes\n  nameWithType: MetaColumn.Attributes\n  fullName: System.Web.DynamicData.MetaColumn.Attributes\n- uid: System.ComponentModel.AttributeCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: AttributeCollection\n  nameWithType: AttributeCollection\n  fullName: System.ComponentModel.AttributeCollection\n- uid: System.Web.DynamicData.MetaColumn.BuildAttributeCollection\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: BuildAttributeCollection()\n  nameWithType: MetaColumn.BuildAttributeCollection()\n  fullName: System.Web.DynamicData.MetaColumn.BuildAttributeCollection()\n- uid: System.Web.DynamicData.MetaColumn.ColumnType\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ColumnType\n  nameWithType: MetaColumn.ColumnType\n  fullName: System.Web.DynamicData.MetaColumn.ColumnType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ConvertEmptyStringToNull\n  nameWithType: MetaColumn.ConvertEmptyStringToNull\n  fullName: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull\n- uid: System.Web.DynamicData.MetaColumn.DataFormatString\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: DataFormatString\n  nameWithType: MetaColumn.DataFormatString\n  fullName: System.Web.DynamicData.MetaColumn.DataFormatString\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.MetaColumn.DataTypeAttribute\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: DataTypeAttribute\n  nameWithType: MetaColumn.DataTypeAttribute\n  fullName: System.Web.DynamicData.MetaColumn.DataTypeAttribute\n- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute\n  parent: System.ComponentModel.DataAnnotations\n  isExternal: true\n  name: DataTypeAttribute\n  nameWithType: DataTypeAttribute\n  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute\n- uid: System.Web.DynamicData.MetaColumn.DefaultValue\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: DefaultValue\n  nameWithType: MetaColumn.DefaultValue\n  fullName: System.Web.DynamicData.MetaColumn.DefaultValue\n- uid: System.Web.DynamicData.MetaColumn.Description\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Description\n  nameWithType: MetaColumn.Description\n  fullName: System.Web.DynamicData.MetaColumn.Description\n- uid: System.Web.DynamicData.MetaColumn.DisplayName\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: DisplayName\n  nameWithType: MetaColumn.DisplayName\n  fullName: System.Web.DynamicData.MetaColumn.DisplayName\n- uid: System.Web.DynamicData.MetaColumn.EntityTypeProperty\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: EntityTypeProperty\n  nameWithType: MetaColumn.EntityTypeProperty\n  fullName: System.Web.DynamicData.MetaColumn.EntityTypeProperty\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: true\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.Web.DynamicData.MetaColumn.FilterUIHint\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: FilterUIHint\n  nameWithType: MetaColumn.FilterUIHint\n  fullName: System.Web.DynamicData.MetaColumn.FilterUIHint\n- uid: System.Web.DynamicData.MetaColumn.HtmlEncode\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: HtmlEncode\n  nameWithType: MetaColumn.HtmlEncode\n  fullName: System.Web.DynamicData.MetaColumn.HtmlEncode\n- uid: System.Web.DynamicData.MetaColumn.Initialize\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Initialize()\n  nameWithType: MetaColumn.Initialize()\n  fullName: System.Web.DynamicData.MetaColumn.Initialize()\n- uid: System.Web.DynamicData.MetaColumn.IsBinaryData\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsBinaryData\n  nameWithType: MetaColumn.IsBinaryData\n  fullName: System.Web.DynamicData.MetaColumn.IsBinaryData\n- uid: System.Web.DynamicData.MetaColumn.IsCustomProperty\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsCustomProperty\n  nameWithType: MetaColumn.IsCustomProperty\n  fullName: System.Web.DynamicData.MetaColumn.IsCustomProperty\n- uid: System.Web.DynamicData.MetaColumn.IsFloatingPoint\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsFloatingPoint\n  nameWithType: MetaColumn.IsFloatingPoint\n  fullName: System.Web.DynamicData.MetaColumn.IsFloatingPoint\n- uid: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsForeignKeyComponent\n  nameWithType: MetaColumn.IsForeignKeyComponent\n  fullName: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent\n- uid: System.Web.DynamicData.MetaColumn.IsGenerated\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsGenerated\n  nameWithType: MetaColumn.IsGenerated\n  fullName: System.Web.DynamicData.MetaColumn.IsGenerated\n- uid: System.Web.DynamicData.MetaColumn.IsInteger\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsInteger\n  nameWithType: MetaColumn.IsInteger\n  fullName: System.Web.DynamicData.MetaColumn.IsInteger\n- uid: System.Web.DynamicData.MetaColumn.IsLongString\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsLongString\n  nameWithType: MetaColumn.IsLongString\n  fullName: System.Web.DynamicData.MetaColumn.IsLongString\n- uid: System.Web.DynamicData.MetaColumn.IsPrimaryKey\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsPrimaryKey\n  nameWithType: MetaColumn.IsPrimaryKey\n  fullName: System.Web.DynamicData.MetaColumn.IsPrimaryKey\n- uid: System.Web.DynamicData.MetaColumn.IsReadOnly\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MetaColumn.IsReadOnly\n  fullName: System.Web.DynamicData.MetaColumn.IsReadOnly\n- uid: System.Web.DynamicData.MetaColumn.IsRequired\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsRequired\n  nameWithType: MetaColumn.IsRequired\n  fullName: System.Web.DynamicData.MetaColumn.IsRequired\n- uid: System.Web.DynamicData.MetaColumn.IsString\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsString\n  nameWithType: MetaColumn.IsString\n  fullName: System.Web.DynamicData.MetaColumn.IsString\n- uid: System.Web.DynamicData.MetaColumn.MaxLength\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: MaxLength\n  nameWithType: MetaColumn.MaxLength\n  fullName: System.Web.DynamicData.MetaColumn.MaxLength\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.DynamicData.MetaColumn.Model\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Model\n  nameWithType: MetaColumn.Model\n  fullName: System.Web.DynamicData.MetaColumn.Model\n- uid: System.Web.DynamicData.MetaModel\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Web.DynamicData.MetaModel\n- uid: System.Web.DynamicData.MetaColumn.Name\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Name\n  nameWithType: MetaColumn.Name\n  fullName: System.Web.DynamicData.MetaColumn.Name\n- uid: System.Web.DynamicData.MetaColumn.NullDisplayText\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: NullDisplayText\n  nameWithType: MetaColumn.NullDisplayText\n  fullName: System.Web.DynamicData.MetaColumn.NullDisplayText\n- uid: System.Web.DynamicData.MetaColumn.Prompt\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Prompt\n  nameWithType: MetaColumn.Prompt\n  fullName: System.Web.DynamicData.MetaColumn.Prompt\n- uid: System.Web.DynamicData.MetaColumn.Provider\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Provider\n  nameWithType: MetaColumn.Provider\n  fullName: System.Web.DynamicData.MetaColumn.Provider\n- uid: System.Web.DynamicData.MetaColumn.RequiredErrorMessage\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: RequiredErrorMessage\n  nameWithType: MetaColumn.RequiredErrorMessage\n  fullName: System.Web.DynamicData.MetaColumn.RequiredErrorMessage\n- uid: System.Web.DynamicData.MetaColumn.ResetMetadata\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ResetMetadata()\n  nameWithType: MetaColumn.ResetMetadata()\n  fullName: System.Web.DynamicData.MetaColumn.ResetMetadata()\n- uid: System.Web.DynamicData.MetaColumn.Scaffold\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Scaffold\n  nameWithType: MetaColumn.Scaffold\n  fullName: System.Web.DynamicData.MetaColumn.Scaffold\n- uid: System.Web.DynamicData.MetaColumn.ShortDisplayName\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ShortDisplayName\n  nameWithType: MetaColumn.ShortDisplayName\n  fullName: System.Web.DynamicData.MetaColumn.ShortDisplayName\n- uid: System.Web.DynamicData.MetaColumn.SortExpression\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: SortExpression\n  nameWithType: MetaColumn.SortExpression\n  fullName: System.Web.DynamicData.MetaColumn.SortExpression\n- uid: System.Web.DynamicData.MetaColumn.Table\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Table\n  nameWithType: MetaColumn.Table\n  fullName: System.Web.DynamicData.MetaColumn.Table\n- uid: System.Web.DynamicData.MetaColumn.ToString\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ToString()\n  nameWithType: MetaColumn.ToString()\n  fullName: System.Web.DynamicData.MetaColumn.ToString()\n- uid: System.Web.DynamicData.MetaColumn.TypeCode\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: TypeCode\n  nameWithType: MetaColumn.TypeCode\n  fullName: System.Web.DynamicData.MetaColumn.TypeCode\n- uid: System.TypeCode\n  parent: System\n  isExternal: true\n  name: TypeCode\n  nameWithType: TypeCode\n  fullName: System.TypeCode\n- uid: System.Web.DynamicData.MetaColumn.UIHint\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: UIHint\n  nameWithType: MetaColumn.UIHint\n  fullName: System.Web.DynamicData.MetaColumn.UIHint\n- uid: System.Web.DynamicData.MetaColumn.#ctor*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: MetaColumn\n  nameWithType: MetaColumn.MetaColumn\n- uid: System.Web.DynamicData.MetaColumn.AllowInitialValue*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: AllowInitialValue\n  nameWithType: MetaColumn.AllowInitialValue\n- uid: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ApplyFormatInEditMode\n  nameWithType: MetaColumn.ApplyFormatInEditMode\n- uid: System.Web.DynamicData.MetaColumn.Attributes*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Attributes\n  nameWithType: MetaColumn.Attributes\n- uid: System.Web.DynamicData.MetaColumn.BuildAttributeCollection*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: BuildAttributeCollection\n  nameWithType: MetaColumn.BuildAttributeCollection\n- uid: System.Web.DynamicData.MetaColumn.ColumnType*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ColumnType\n  nameWithType: MetaColumn.ColumnType\n- uid: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ConvertEmptyStringToNull\n  nameWithType: MetaColumn.ConvertEmptyStringToNull\n- uid: System.Web.DynamicData.MetaColumn.DataFormatString*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: DataFormatString\n  nameWithType: MetaColumn.DataFormatString\n- uid: System.Web.DynamicData.MetaColumn.DataTypeAttribute*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: DataTypeAttribute\n  nameWithType: MetaColumn.DataTypeAttribute\n- uid: System.Web.DynamicData.MetaColumn.DefaultValue*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: DefaultValue\n  nameWithType: MetaColumn.DefaultValue\n- uid: System.Web.DynamicData.MetaColumn.Description*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Description\n  nameWithType: MetaColumn.Description\n- uid: System.Web.DynamicData.MetaColumn.DisplayName*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: DisplayName\n  nameWithType: MetaColumn.DisplayName\n- uid: System.Web.DynamicData.MetaColumn.EntityTypeProperty*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: EntityTypeProperty\n  nameWithType: MetaColumn.EntityTypeProperty\n- uid: System.Web.DynamicData.MetaColumn.FilterUIHint*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: FilterUIHint\n  nameWithType: MetaColumn.FilterUIHint\n- uid: System.Web.DynamicData.MetaColumn.HtmlEncode*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: HtmlEncode\n  nameWithType: MetaColumn.HtmlEncode\n- uid: System.Web.DynamicData.MetaColumn.Initialize*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Initialize\n  nameWithType: MetaColumn.Initialize\n- uid: System.Web.DynamicData.MetaColumn.IsBinaryData*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsBinaryData\n  nameWithType: MetaColumn.IsBinaryData\n- uid: System.Web.DynamicData.MetaColumn.IsCustomProperty*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsCustomProperty\n  nameWithType: MetaColumn.IsCustomProperty\n- uid: System.Web.DynamicData.MetaColumn.IsFloatingPoint*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsFloatingPoint\n  nameWithType: MetaColumn.IsFloatingPoint\n- uid: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsForeignKeyComponent\n  nameWithType: MetaColumn.IsForeignKeyComponent\n- uid: System.Web.DynamicData.MetaColumn.IsGenerated*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsGenerated\n  nameWithType: MetaColumn.IsGenerated\n- uid: System.Web.DynamicData.MetaColumn.IsInteger*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsInteger\n  nameWithType: MetaColumn.IsInteger\n- uid: System.Web.DynamicData.MetaColumn.IsLongString*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsLongString\n  nameWithType: MetaColumn.IsLongString\n- uid: System.Web.DynamicData.MetaColumn.IsPrimaryKey*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsPrimaryKey\n  nameWithType: MetaColumn.IsPrimaryKey\n- uid: System.Web.DynamicData.MetaColumn.IsReadOnly*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MetaColumn.IsReadOnly\n- uid: System.Web.DynamicData.MetaColumn.IsRequired*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsRequired\n  nameWithType: MetaColumn.IsRequired\n- uid: System.Web.DynamicData.MetaColumn.IsString*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: IsString\n  nameWithType: MetaColumn.IsString\n- uid: System.Web.DynamicData.MetaColumn.MaxLength*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: MaxLength\n  nameWithType: MetaColumn.MaxLength\n- uid: System.Web.DynamicData.MetaColumn.Model*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Model\n  nameWithType: MetaColumn.Model\n- uid: System.Web.DynamicData.MetaColumn.Name*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Name\n  nameWithType: MetaColumn.Name\n- uid: System.Web.DynamicData.MetaColumn.NullDisplayText*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: NullDisplayText\n  nameWithType: MetaColumn.NullDisplayText\n- uid: System.Web.DynamicData.MetaColumn.Prompt*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Prompt\n  nameWithType: MetaColumn.Prompt\n- uid: System.Web.DynamicData.MetaColumn.Provider*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Provider\n  nameWithType: MetaColumn.Provider\n- uid: System.Web.DynamicData.MetaColumn.RequiredErrorMessage*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: RequiredErrorMessage\n  nameWithType: MetaColumn.RequiredErrorMessage\n- uid: System.Web.DynamicData.MetaColumn.ResetMetadata*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ResetMetadata\n  nameWithType: MetaColumn.ResetMetadata\n- uid: System.Web.DynamicData.MetaColumn.Scaffold*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Scaffold\n  nameWithType: MetaColumn.Scaffold\n- uid: System.Web.DynamicData.MetaColumn.ShortDisplayName*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ShortDisplayName\n  nameWithType: MetaColumn.ShortDisplayName\n- uid: System.Web.DynamicData.MetaColumn.SortExpression*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: SortExpression\n  nameWithType: MetaColumn.SortExpression\n- uid: System.Web.DynamicData.MetaColumn.Table*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: Table\n  nameWithType: MetaColumn.Table\n- uid: System.Web.DynamicData.MetaColumn.ToString*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: ToString\n  nameWithType: MetaColumn.ToString\n- uid: System.Web.DynamicData.MetaColumn.TypeCode*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: TypeCode\n  nameWithType: MetaColumn.TypeCode\n- uid: System.Web.DynamicData.MetaColumn.UIHint*\n  parent: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: UIHint\n  nameWithType: MetaColumn.UIHint\n"}