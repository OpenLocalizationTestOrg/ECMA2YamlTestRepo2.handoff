{"nodes":[{"pos":[724,762],"content":"Represents an activity-based callback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an activity-based callback.","pos":[0,38]}]},{"pos":[775,1306],"content":"Activity delegates enable activity authors to expose callbacks with specific signatures that users of the activity can provide activity-based handlers for. There are two types of activity delegates: <xref:System.Activities.ActivityAction%601> is used for invoking activities that do not have a return value, and <xref:System.Activities.ActivityFunc%601> is used for invoking activities that do have a return value. Activity delegates are useful in scenarios where a child activity must be constrained to having a certain signature.","needQuote":false,"needEscape":true,"nodes":[{"content":"Activity delegates enable activity authors to expose callbacks with specific signatures that users of the activity can provide activity-based handlers for. There are two types of activity delegates: <xref:System.Activities.ActivityAction%601> is used for invoking activities that do not have a return value, and <xref:System.Activities.ActivityFunc%601> is used for invoking activities that do have a return value. Activity delegates are useful in scenarios where a child activity must be constrained to having a certain signature.","pos":[0,531],"nodes":[{"content":"Activity delegates enable activity authors to expose callbacks with specific signatures that users of the activity can provide activity-based handlers for.","pos":[0,155]},{"content":"There are two types of activity delegates: &lt;xref:System.Activities.ActivityAction%601&gt; is used for invoking activities that do not have a return value, and &lt;xref:System.Activities.ActivityFunc%601&gt; is used for invoking activities that do have a return value.","pos":[156,414],"source":" There are two types of activity delegates: <xref:System.Activities.ActivityAction%601> is used for invoking activities that do not have a return value, and <xref:System.Activities.ActivityFunc%601> is used for invoking activities that do have a return value."},{"content":"Activity delegates are useful in scenarios where a child activity must be constrained to having a certain signature.","pos":[415,531]}]}]},{"pos":[1903,1965],"content":"Called by derived class constructors to initialize the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by derived class constructors to initialize the object.","pos":[0,62]}]},{"pos":[2489,2601],"content":"Gets or sets an optional friendly name that is used for debugging, validation, exception handling, and tracking.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an optional friendly name that is used for debugging, validation, exception handling, and tracking.","pos":[0,112]}]},{"pos":[2613,2737],"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","pos":[0,124],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime, an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[39,124],"source":" If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown."}]}]},{"pos":[2858,2947],"content":"A friendly name that is used for debugging, validation, exception handling, and tracking.","needQuote":true,"needEscape":true,"nodes":[{"content":"A friendly name that is used for debugging, validation, exception handling, and tracking.","pos":[0,89]}]},{"pos":[3438,3609],"content":"When implemented in a derived class, returns the <bpt id=\"p1\">&lt;xref href=\"System.Activities.DelegateOutArgument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the <bpt id=\"p2\">&lt;xref href=\"System.Activities.ActivityDelegate\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When implemented in a derived class, returns the <xref href=\"System.Activities.DelegateOutArgument\"></xref> of the <xref href=\"System.Activities.ActivityDelegate\"></xref>."},{"pos":[3811,3891],"content":"An out argument for the <bpt id=\"p1\">&lt;xref href=\"System.Activities.ActivityDelegate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An out argument for the <xref href=\"System.Activities.ActivityDelegate\"></xref>."},{"pos":[4334,4444],"content":"Gets or sets the activity that is represented by this <bpt id=\"p1\">&lt;xref href=\"System.Activities.ActivityDelegate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the activity that is represented by this <xref href=\"System.Activities.ActivityDelegate\"></xref>."},{"pos":[4456,4580],"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","pos":[0,124],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime, an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[39,124],"source":" If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown."}]}]},{"pos":[4730,4827],"content":"The activity that is represented by this <bpt id=\"p1\">&lt;xref href=\"System.Activities.ActivityDelegate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The activity that is represented by this <xref href=\"System.Activities.ActivityDelegate\"></xref>."},{"pos":[5618,5719],"content":"Supplies a list of runtime arguments for the <bpt id=\"p1\">&lt;xref href=\"System.Activities.ActivityDelegate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Supplies a list of runtime arguments for the <xref href=\"System.Activities.ActivityDelegate\"></xref>."},{"pos":[5731,5881],"content":"When overridden in a derived class, this method can be used to customize the arguments that are used by the <xref:System.Activities.ActivityDelegate>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, this method can be used to customize the arguments that are used by the &lt;xref:System.Activities.ActivityDelegate&gt;.","pos":[0,150],"source":"When overridden in a derived class, this method can be used to customize the arguments that are used by the <xref:System.Activities.ActivityDelegate>."}]},{"pos":[6220,6268],"content":"The list to be populated with runtime arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list to be populated with runtime arguments.","pos":[0,48]}]},{"pos":[6822,6943],"content":"Indicates whether the <xref:System.Activities.ActivityDelegate.DisplayName*> property value should be serialized to XAML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the &lt;xref:System.Activities.ActivityDelegate.DisplayName*&gt; property value should be serialized to XAML.","pos":[0,121],"source":"Indicates whether the <xref:System.Activities.ActivityDelegate.DisplayName*> property value should be serialized to XAML."}]},{"pos":[6955,7129],"content":"ShouldSerializeDisplayName returns <ph id=\"ph1\">`true`</ph> if the &lt;xref:System.Activities.ActivityDelegate.DisplayName%2A&gt; was explicitly set on the &lt;xref:System.Activities.ActivityDelegate&gt;.","needQuote":true,"needEscape":true,"source":"ShouldSerializeDisplayName returns `true` if the <xref:System.Activities.ActivityDelegate.DisplayName%2A> was explicitly set on the <xref:System.Activities.ActivityDelegate>."},{"pos":[7273,7508],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the &lt;xref:System.Activities.ActivityDelegate.DisplayName*&gt; property value should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the <xref:System.Activities.ActivityDelegate.DisplayName*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7969,8151],"content":"Returns a &lt;xref:System.String&gt; representation of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.ActivityDelegate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the &lt;xref:System.Activities.ActivityDelegate.DisplayName*&gt;.","needQuote":true,"needEscape":true,"source":"Returns a <xref:System.String> representation of the <xref href=\"System.Activities.ActivityDelegate\"></xref> that contains the <xref:System.Activities.ActivityDelegate.DisplayName*>."},{"pos":[8287,8440],"content":"A representation of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.ActivityDelegate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the &lt;xref:System.Activities.ActivityDelegate.DisplayName*&gt;.","needQuote":true,"needEscape":true,"source":"A representation of the <xref href=\"System.Activities.ActivityDelegate\"></xref> that contains the <xref:System.Activities.ActivityDelegate.DisplayName*>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.ActivityDelegate\n  id: ActivityDelegate\n  children:\n  - System.Activities.ActivityDelegate.#ctor\n  - System.Activities.ActivityDelegate.DisplayName\n  - System.Activities.ActivityDelegate.GetResultArgument\n  - System.Activities.ActivityDelegate.Handler\n  - System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})\n  - System.Activities.ActivityDelegate.ShouldSerializeDisplayName\n  - System.Activities.ActivityDelegate.ToString\n  langs:\n  - csharp\n  name: ActivityDelegate\n  nameWithType: ActivityDelegate\n  fullName: System.Activities.ActivityDelegate\n  type: Class\n  summary: Represents an activity-based callback.\n  remarks: 'Activity delegates enable activity authors to expose callbacks with specific signatures that users of the activity can provide activity-based handlers for. There are two types of activity delegates: <xref:System.Activities.ActivityAction%601> is used for invoking activities that do not have a return value, and <xref:System.Activities.ActivityFunc%601> is used for invoking activities that do have a return value. Activity delegates are useful in scenarios where a child activity must be constrained to having a certain signature.'\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Handler\")]\n\n      public abstract class ActivityDelegate\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityDelegate.#ctor\n  id: '#ctor'\n  parent: System.Activities.ActivityDelegate\n  langs:\n  - csharp\n  name: ActivityDelegate()\n  nameWithType: ActivityDelegate.ActivityDelegate()\n  fullName: System.Activities.ActivityDelegate.ActivityDelegate()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Called by derived class constructors to initialize the object.\n  syntax:\n    content: protected ActivityDelegate ();\n    parameters: []\n  overload: System.Activities.ActivityDelegate.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityDelegate.DisplayName\n  id: DisplayName\n  parent: System.Activities.ActivityDelegate\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: ActivityDelegate.DisplayName\n  fullName: System.Activities.ActivityDelegate.DisplayName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets an optional friendly name that is used for debugging, validation, exception handling, and tracking.\n  remarks: This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public string DisplayName { get; set; }\n    return:\n      type: System.String\n      description: A friendly name that is used for debugging, validation, exception handling, and tracking.\n  overload: System.Activities.ActivityDelegate.DisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityDelegate.GetResultArgument\n  id: GetResultArgument\n  parent: System.Activities.ActivityDelegate\n  langs:\n  - csharp\n  name: GetResultArgument()\n  nameWithType: ActivityDelegate.GetResultArgument()\n  fullName: System.Activities.ActivityDelegate.GetResultArgument()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class, returns the <xref href=\"System.Activities.DelegateOutArgument\"></xref> of the <xref href=\"System.Activities.ActivityDelegate\"></xref>.\n  syntax:\n    content: protected virtual System.Activities.DelegateOutArgument GetResultArgument ();\n    parameters: []\n    return:\n      type: System.Activities.DelegateOutArgument\n      description: An out argument for the <xref href=\"System.Activities.ActivityDelegate\"></xref>.\n  overload: System.Activities.ActivityDelegate.GetResultArgument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityDelegate.Handler\n  id: Handler\n  parent: System.Activities.ActivityDelegate\n  langs:\n  - csharp\n  name: Handler\n  nameWithType: ActivityDelegate.Handler\n  fullName: System.Activities.ActivityDelegate.Handler\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets the activity that is represented by this <xref href=\"System.Activities.ActivityDelegate\"></xref>.\n  remarks: This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public System.Activities.Activity Handler { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that is represented by this <xref href=\"System.Activities.ActivityDelegate\"></xref>.\n  overload: System.Activities.ActivityDelegate.Handler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})\n  id: OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})\n  parent: System.Activities.ActivityDelegate\n  langs:\n  - csharp\n  name: OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)\n  nameWithType: ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)\n  fullName: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Supplies a list of runtime arguments for the <xref href=\"System.Activities.ActivityDelegate\"></xref>.\n  remarks: When overridden in a derived class, this method can be used to customize the arguments that are used by the <xref:System.Activities.ActivityDelegate>.\n  syntax:\n    content: protected virtual void OnGetRuntimeDelegateArguments (System.Collections.Generic.IList<System.Activities.RuntimeDelegateArgument> runtimeDelegateArguments);\n    parameters:\n    - id: runtimeDelegateArguments\n      type: System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument}\n      description: The list to be populated with runtime arguments.\n  overload: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityDelegate.ShouldSerializeDisplayName\n  id: ShouldSerializeDisplayName\n  parent: System.Activities.ActivityDelegate\n  langs:\n  - csharp\n  name: ShouldSerializeDisplayName()\n  nameWithType: ActivityDelegate.ShouldSerializeDisplayName()\n  fullName: System.Activities.ActivityDelegate.ShouldSerializeDisplayName()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Indicates whether the <xref:System.Activities.ActivityDelegate.DisplayName*> property value should be serialized to XAML.\n  remarks: ShouldSerializeDisplayName returns `true` if the <xref:System.Activities.ActivityDelegate.DisplayName%2A> was explicitly set on the <xref:System.Activities.ActivityDelegate>.\n  syntax:\n    content: public bool ShouldSerializeDisplayName ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the <xref:System.Activities.ActivityDelegate.DisplayName*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.ActivityDelegate.ShouldSerializeDisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityDelegate.ToString\n  id: ToString\n  parent: System.Activities.ActivityDelegate\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ActivityDelegate.ToString()\n  fullName: System.Activities.ActivityDelegate.ToString()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a <xref:System.String> representation of the <xref href=\"System.Activities.ActivityDelegate\"></xref> that contains the <xref:System.Activities.ActivityDelegate.DisplayName*>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A representation of the <xref href=\"System.Activities.ActivityDelegate\"></xref> that contains the <xref:System.Activities.ActivityDelegate.DisplayName*>.\n  overload: System.Activities.ActivityDelegate.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.ActivityDelegate.#ctor\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: ActivityDelegate()\n  nameWithType: ActivityDelegate.ActivityDelegate()\n  fullName: System.Activities.ActivityDelegate.ActivityDelegate()\n- uid: System.Activities.ActivityDelegate.DisplayName\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: DisplayName\n  nameWithType: ActivityDelegate.DisplayName\n  fullName: System.Activities.ActivityDelegate.DisplayName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.ActivityDelegate.GetResultArgument\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: GetResultArgument()\n  nameWithType: ActivityDelegate.GetResultArgument()\n  fullName: System.Activities.ActivityDelegate.GetResultArgument()\n- uid: System.Activities.DelegateOutArgument\n  parent: System.Activities\n  isExternal: false\n  name: DelegateOutArgument\n  nameWithType: DelegateOutArgument\n  fullName: System.Activities.DelegateOutArgument\n- uid: System.Activities.ActivityDelegate.Handler\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: Handler\n  nameWithType: ActivityDelegate.Handler\n  fullName: System.Activities.ActivityDelegate.Handler\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)\n  nameWithType: ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)\n  fullName: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)\n- uid: System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<RuntimeDelegateArgument>\n  nameWithType: IList<RuntimeDelegateArgument>\n  fullName: System.Collections.Generic.IList<System.Activities.RuntimeDelegateArgument>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Activities.RuntimeDelegateArgument>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.RuntimeDelegateArgument\n    name: RuntimeDelegateArgument\n    nameWithType: RuntimeDelegateArgument\n    fullName: RuntimeDelegateArgument\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityDelegate.ShouldSerializeDisplayName\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: ActivityDelegate.ShouldSerializeDisplayName()\n  fullName: System.Activities.ActivityDelegate.ShouldSerializeDisplayName()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.ActivityDelegate.ToString\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: ToString()\n  nameWithType: ActivityDelegate.ToString()\n  fullName: System.Activities.ActivityDelegate.ToString()\n- uid: System.Activities.ActivityDelegate.#ctor*\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: ActivityDelegate\n  nameWithType: ActivityDelegate.ActivityDelegate\n- uid: System.Activities.ActivityDelegate.DisplayName*\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: DisplayName\n  nameWithType: ActivityDelegate.DisplayName\n- uid: System.Activities.ActivityDelegate.GetResultArgument*\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: GetResultArgument\n  nameWithType: ActivityDelegate.GetResultArgument\n- uid: System.Activities.ActivityDelegate.Handler*\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: Handler\n  nameWithType: ActivityDelegate.Handler\n- uid: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments*\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: OnGetRuntimeDelegateArguments\n  nameWithType: ActivityDelegate.OnGetRuntimeDelegateArguments\n- uid: System.Activities.ActivityDelegate.ShouldSerializeDisplayName*\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: ShouldSerializeDisplayName\n  nameWithType: ActivityDelegate.ShouldSerializeDisplayName\n- uid: System.Activities.ActivityDelegate.ToString*\n  parent: System.Activities.ActivityDelegate\n  isExternal: false\n  name: ToString\n  nameWithType: ActivityDelegate.ToString\n"}