{"nodes":[{"pos":[625,826],"content":"Implements a derived subclass of the abstract <xref href=\"System.IO.Packaging.Package\"></xref> base class—the ZipPackage class uses a ZIP archive as the container store. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements a derived subclass of the abstract <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.Package\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> base class—the ZipPackage class uses a ZIP archive as the container store.","pos":[0,169],"source":"Implements a derived subclass of the abstract <xref href=\"System.IO.Packaging.Package\"></xref> base class—the ZipPackage class uses a ZIP archive as the container store."},{"content":"This class cannot be inherited.","pos":[170,201]}]},{"pos":[838,942],"content":"The <bpt id=\"p1\">**</bpt>Package<ept id=\"p1\">**</ept>.&lt;xref:System.IO.Packaging.Package.Open%2A&gt; method uses ZipPackage containers by default.","needQuote":true,"needEscape":true,"source":"The **Package**.<xref:System.IO.Packaging.Package.Open%2A> method uses ZipPackage containers by default."},{"pos":[4577,4589],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4657,4669],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4767,4779],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4855,4867],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5495,5507],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6122,6134],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7255,7267],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7343,7355],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7973,7985],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Packaging.ZipPackage\n  id: ZipPackage\n  children:\n  - System.IO.Packaging.ZipPackage.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  - System.IO.Packaging.ZipPackage.DeletePartCore(System.Uri)\n  - System.IO.Packaging.ZipPackage.Dispose(System.Boolean)\n  - System.IO.Packaging.ZipPackage.FlushCore\n  - System.IO.Packaging.ZipPackage.GetPartCore(System.Uri)\n  - System.IO.Packaging.ZipPackage.GetPartsCore\n  langs:\n  - csharp\n  name: ZipPackage\n  nameWithType: ZipPackage\n  fullName: System.IO.Packaging.ZipPackage\n  type: Class\n  summary: Implements a derived subclass of the abstract <xref href=\"System.IO.Packaging.Package\"></xref> base class—the ZipPackage class uses a ZIP archive as the container store. This class cannot be inherited.\n  remarks: The **Package**.<xref:System.IO.Packaging.Package.Open%2A> method uses ZipPackage containers by default.\n  example:\n  - \"This example shows how to create a basic ZipPackage.  \\n  \\n The example creates a package that contains a single document part which is defined as the package's root element by a package-level <xref:System.IO.Packaging.PackageRelationship>.  \\n  \\n The package also contains an image part and a second <xref:System.IO.Packaging.PackageRelationship> which defines an association between the source document part and the target image part.  (The image is a resource that is used with the document).  \\n  \\n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]  \\n  \\n For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).\"\n  syntax:\n    content: 'public sealed class ZipPackage : System.IO.Packaging.Package'\n  inheritance:\n  - System.Object\n  - System.IO.Packaging.Package\n  implements: []\n  inheritedMembers:\n  - System.IO.Packaging.Package.Close\n  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String)\n  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)\n  - System.IO.Packaging.Package.DeletePart(System.Uri)\n  - System.IO.Packaging.Package.DeleteRelationship(System.String)\n  - System.IO.Packaging.Package.FileOpenAccess\n  - System.IO.Packaging.Package.Flush\n  - System.IO.Packaging.Package.GetPart(System.Uri)\n  - System.IO.Packaging.Package.GetParts\n  - System.IO.Packaging.Package.GetRelationship(System.String)\n  - System.IO.Packaging.Package.GetRelationships\n  - System.IO.Packaging.Package.GetRelationshipsByType(System.String)\n  - System.IO.Packaging.Package.Open(System.IO.Stream)\n  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)\n  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.Packaging.Package.Open(System.String)\n  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)\n  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  - System.IO.Packaging.Package.PackageProperties\n  - System.IO.Packaging.Package.PartExists(System.Uri)\n  - System.IO.Packaging.Package.RelationshipExists(System.String)\n  - System.IO.Packaging.Package.System#IDisposable#Dispose\n  platform:\n  - net462\n- uid: System.IO.Packaging.ZipPackage.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  id: CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  parent: System.IO.Packaging.ZipPackage\n  langs:\n  - csharp\n  name: CreatePartCore(Uri,String,CompressionOption)\n  nameWithType: ZipPackage.CreatePartCore(Uri,String,CompressionOption)\n  fullName: System.IO.Packaging.ZipPackage.CreatePartCore(Uri,String,CompressionOption)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  syntax:\n    content: protected override System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: To be added.\n    - id: contentType\n      type: System.String\n      description: To be added.\n    - id: compressionOption\n      type: System.IO.Packaging.CompressionOption\n      description: To be added.\n    return:\n      type: System.IO.Packaging.PackagePart\n      description: To be added.\n  overload: System.IO.Packaging.ZipPackage.CreatePartCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.ZipPackage.DeletePartCore(System.Uri)\n  id: DeletePartCore(System.Uri)\n  parent: System.IO.Packaging.ZipPackage\n  langs:\n  - csharp\n  name: DeletePartCore(Uri)\n  nameWithType: ZipPackage.DeletePartCore(Uri)\n  fullName: System.IO.Packaging.ZipPackage.DeletePartCore(Uri)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  syntax:\n    content: protected override void DeletePartCore (Uri partUri);\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: To be added.\n  overload: System.IO.Packaging.ZipPackage.DeletePartCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.ZipPackage.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Packaging.ZipPackage\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ZipPackage.Dispose(Boolean)\n  fullName: System.IO.Packaging.ZipPackage.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.IO.Packaging.ZipPackage.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.ZipPackage.FlushCore\n  id: FlushCore\n  parent: System.IO.Packaging.ZipPackage\n  langs:\n  - csharp\n  name: FlushCore()\n  nameWithType: ZipPackage.FlushCore()\n  fullName: System.IO.Packaging.ZipPackage.FlushCore()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  syntax:\n    content: protected override void FlushCore ();\n    parameters: []\n  overload: System.IO.Packaging.ZipPackage.FlushCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.ZipPackage.GetPartCore(System.Uri)\n  id: GetPartCore(System.Uri)\n  parent: System.IO.Packaging.ZipPackage\n  langs:\n  - csharp\n  name: GetPartCore(Uri)\n  nameWithType: ZipPackage.GetPartCore(Uri)\n  fullName: System.IO.Packaging.ZipPackage.GetPartCore(Uri)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  syntax:\n    content: protected override System.IO.Packaging.PackagePart GetPartCore (Uri partUri);\n    parameters:\n    - id: partUri\n      type: System.Uri\n      description: To be added.\n    return:\n      type: System.IO.Packaging.PackagePart\n      description: To be added.\n  overload: System.IO.Packaging.ZipPackage.GetPartCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.ZipPackage.GetPartsCore\n  id: GetPartsCore\n  parent: System.IO.Packaging.ZipPackage\n  langs:\n  - csharp\n  name: GetPartsCore()\n  nameWithType: ZipPackage.GetPartsCore()\n  fullName: System.IO.Packaging.ZipPackage.GetPartsCore()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  syntax:\n    content: protected override System.IO.Packaging.PackagePart[] GetPartsCore ();\n    parameters: []\n    return:\n      type: System.IO.Packaging.PackagePart[]\n      description: To be added.\n  overload: System.IO.Packaging.ZipPackage.GetPartsCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IO.Packaging.Package\n  isExternal: false\n  name: System.IO.Packaging.Package\n- uid: System.IO.Packaging.ZipPackage.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: CreatePartCore(Uri,String,CompressionOption)\n  nameWithType: ZipPackage.CreatePartCore(Uri,String,CompressionOption)\n  fullName: System.IO.Packaging.ZipPackage.CreatePartCore(Uri,String,CompressionOption)\n- uid: System.IO.Packaging.PackagePart\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackagePart\n  nameWithType: PackagePart\n  fullName: System.IO.Packaging.PackagePart\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Packaging.CompressionOption\n  parent: System.IO.Packaging\n  isExternal: false\n  name: CompressionOption\n  nameWithType: CompressionOption\n  fullName: System.IO.Packaging.CompressionOption\n- uid: System.IO.Packaging.ZipPackage.DeletePartCore(System.Uri)\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: DeletePartCore(Uri)\n  nameWithType: ZipPackage.DeletePartCore(Uri)\n  fullName: System.IO.Packaging.ZipPackage.DeletePartCore(Uri)\n- uid: System.IO.Packaging.ZipPackage.Dispose(System.Boolean)\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ZipPackage.Dispose(Boolean)\n  fullName: System.IO.Packaging.ZipPackage.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Packaging.ZipPackage.FlushCore\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: FlushCore()\n  nameWithType: ZipPackage.FlushCore()\n  fullName: System.IO.Packaging.ZipPackage.FlushCore()\n- uid: System.IO.Packaging.ZipPackage.GetPartCore(System.Uri)\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: GetPartCore(Uri)\n  nameWithType: ZipPackage.GetPartCore(Uri)\n  fullName: System.IO.Packaging.ZipPackage.GetPartCore(Uri)\n- uid: System.IO.Packaging.ZipPackage.GetPartsCore\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: GetPartsCore()\n  nameWithType: ZipPackage.GetPartsCore()\n  fullName: System.IO.Packaging.ZipPackage.GetPartsCore()\n- uid: System.IO.Packaging.PackagePart[]\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackagePart\n  nameWithType: PackagePart\n  fullName: System.IO.Packaging.PackagePart[]\n  spec.csharp:\n  - uid: System.IO.Packaging.PackagePart\n    name: PackagePart\n    nameWithType: PackagePart\n    fullName: PackagePart[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.Packaging.ZipPackage.CreatePartCore*\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: CreatePartCore\n  nameWithType: ZipPackage.CreatePartCore\n- uid: System.IO.Packaging.ZipPackage.DeletePartCore*\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: DeletePartCore\n  nameWithType: ZipPackage.DeletePartCore\n- uid: System.IO.Packaging.ZipPackage.Dispose*\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: Dispose\n  nameWithType: ZipPackage.Dispose\n- uid: System.IO.Packaging.ZipPackage.FlushCore*\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: FlushCore\n  nameWithType: ZipPackage.FlushCore\n- uid: System.IO.Packaging.ZipPackage.GetPartCore*\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: GetPartCore\n  nameWithType: ZipPackage.GetPartCore\n- uid: System.IO.Packaging.ZipPackage.GetPartsCore*\n  parent: System.IO.Packaging.ZipPackage\n  isExternal: false\n  name: GetPartsCore\n  nameWithType: ZipPackage.GetPartsCore\n"}