{"nodes":[{"pos":[653,782],"content":"Defines a contract that components can use to access information about a method across application domain and process boundaries.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a contract that components can use to access information about a method across application domain and process boundaries.","pos":[0,129]}]},{"pos":[795,1397],"content":"An IRemoteMethodInfoContract represents a method of a remote object that implements the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface.       To access one or more methods of a remote object, use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> that represents the type of the remote object. Then, call the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod%2A> or <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"An IRemoteMethodInfoContract represents a method of a remote object that implements the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface.       To access one or more methods of a remote object, use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> that represents the type of the remote object. Then, call the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod%2A> or <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods%2A> method.","pos":[0,600],"nodes":[{"content":"An IRemoteMethodInfoContract represents a method of a remote object that implements the &lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt; interface.","pos":[0,160],"source":"An IRemoteMethodInfoContract represents a method of a remote object that implements the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface."},{"content":"To access one or more methods of a remote object, use the &lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt; method to get an &lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt; that represents the type of the remote object.","pos":[167,427],"source":"       To access one or more methods of a remote object, use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> that represents the type of the remote object."},{"content":"Then, call the &lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod%2A&gt; or &lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods%2A&gt; method.","pos":[428,600],"source":" Then, call the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod%2A> or <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods%2A> method."}]}]},{"pos":[2044,2182],"content":"Returns information about the method that this <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteMethodInfoContract\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> identifies.","needQuote":true,"needEscape":true,"source":"Returns information about the method that this <xref href=\"System.AddIn.Contract.Automation.IRemoteMethodInfoContract\"></xref> identifies."},{"pos":[2194,2356],"content":"The information provided by the <xref:System.AddIn.Contract.Automation.RemoteMethodData> structure includes the types of the method's return value and parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The information provided by the &lt;xref:System.AddIn.Contract.Automation.RemoteMethodData&gt; structure includes the types of the method's return value and parameters.","pos":[0,162],"source":"The information provided by the <xref:System.AddIn.Contract.Automation.RemoteMethodData> structure includes the types of the method's return value and parameters."}]},{"pos":[2567,2784],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.Automation.RemoteMethodData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides information about the method that this <bpt id=\"p2\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteMethodInfoContract\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> identifies.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.AddIn.Contract.Automation.RemoteMethodData\"></xref> that provides information about the method that this <xref href=\"System.AddIn.Contract.Automation.IRemoteMethodInfoContract\"></xref> identifies."},{"pos":[3879,3999],"content":"Invokes the method that this <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteMethodInfoContract\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> identifies.","needQuote":true,"needEscape":true,"source":"Invokes the method that this <xref href=\"System.AddIn.Contract.Automation.IRemoteMethodInfoContract\"></xref> identifies."},{"pos":[4011,4497],"content":"If the invoked method does not have a return value (for example, the method is a constructor), Invoke returns a default <xref:System.AddIn.Contract.RemoteArgument> in which the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property is set to the value <xref:System.AddIn.Contract.RemoteArgumentKind?displayProperty=fullName> and the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property is set to the value <xref:System.TypeCode?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the invoked method does not have a return value (for example, the method is a constructor), Invoke returns a default &lt;xref:System.AddIn.Contract.RemoteArgument&gt; in which the &lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt; property is set to the value &lt;xref:System.AddIn.Contract.RemoteArgumentKind?displayProperty=fullName&gt; and the &lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt; property is set to the value &lt;xref:System.TypeCode?displayProperty=fullName&gt;.","pos":[0,486],"source":"If the invoked method does not have a return value (for example, the method is a constructor), Invoke returns a default <xref:System.AddIn.Contract.RemoteArgument> in which the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property is set to the value <xref:System.AddIn.Contract.RemoteArgumentKind?displayProperty=fullName> and the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property is set to the value <xref:System.TypeCode?displayProperty=fullName>."}]},{"pos":[4890,5032],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that identifies the object that contains the method to invoke.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref> that identifies the object that contains the method to invoke."},{"pos":[5118,5246],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies how to invoke the method.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Reflection.BindingFlags\"></xref> values that specifies how to invoke the method."},{"pos":[5362,5591],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the method parameters; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the method does not have any parameters.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\"></xref> that specifies the method parameters; <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the method does not have any parameters."},{"pos":[5655,5768],"content":"The locale ID that the method will use for any locale-specific type conversions of the arguments or return value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale ID that the method will use for any locale-specific type conversions of the arguments or return value.","pos":[0,113]}]},{"pos":[5849,5963],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.RemoteArgument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the return value of the invoked method.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> that specifies the return value of the invoked method."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  id: IRemoteMethodInfoContract\n  children:\n  - System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData\n  - System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)\n  langs:\n  - csharp\n  name: IRemoteMethodInfoContract\n  nameWithType: IRemoteMethodInfoContract\n  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  type: Interface\n  summary: Defines a contract that components can use to access information about a method across application domain and process boundaries.\n  remarks: \"An IRemoteMethodInfoContract represents a method of a remote object that implements the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface.  \\n  \\n To access one or more methods of a remote object, use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> that represents the type of the remote object. Then, call the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod%2A> or <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods%2A> method.\"\n  syntax:\n    content: 'public interface IRemoteMethodInfoContract : System.AddIn.Contract.IContract'\n  implements:\n  - System.AddIn.Contract.IContract\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData\n  id: GetMethodData\n  parent: System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  langs:\n  - csharp\n  name: GetMethodData()\n  nameWithType: IRemoteMethodInfoContract.GetMethodData()\n  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Automation\n  summary: Returns information about the method that this <xref href=\"System.AddIn.Contract.Automation.IRemoteMethodInfoContract\"></xref> identifies.\n  remarks: The information provided by the <xref:System.AddIn.Contract.Automation.RemoteMethodData> structure includes the types of the method's return value and parameters.\n  syntax:\n    content: public System.AddIn.Contract.Automation.RemoteMethodData GetMethodData ();\n    parameters: []\n    return:\n      type: System.AddIn.Contract.Automation.RemoteMethodData\n      description: A <xref href=\"System.AddIn.Contract.Automation.RemoteMethodData\"></xref> that provides information about the method that this <xref href=\"System.AddIn.Contract.Automation.IRemoteMethodInfoContract\"></xref> identifies.\n  overload: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)\n  id: Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)\n  parent: System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  langs:\n  - csharp\n  name: Invoke(IRemoteObjectContract,BindingFlags,IRemoteArgumentArrayContract,Int32)\n  nameWithType: IRemoteMethodInfoContract.Invoke(IRemoteObjectContract,BindingFlags,IRemoteArgumentArrayContract,Int32)\n  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(IRemoteObjectContract,BindingFlags,IRemoteArgumentArrayContract,Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Automation\n  summary: Invokes the method that this <xref href=\"System.AddIn.Contract.Automation.IRemoteMethodInfoContract\"></xref> identifies.\n  remarks: If the invoked method does not have a return value (for example, the method is a constructor), Invoke returns a default <xref:System.AddIn.Contract.RemoteArgument> in which the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property is set to the value <xref:System.AddIn.Contract.RemoteArgumentKind?displayProperty=fullName> and the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property is set to the value <xref:System.TypeCode?displayProperty=fullName>.\n  syntax:\n    content: public System.AddIn.Contract.RemoteArgument Invoke (System.AddIn.Contract.Automation.IRemoteObjectContract target, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract parameters, int localeId);\n    parameters:\n    - id: target\n      type: System.AddIn.Contract.Automation.IRemoteObjectContract\n      description: The <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref> that identifies the object that contains the method to invoke.\n    - id: bindingFlags\n      type: System.Reflection.BindingFlags\n      description: A bitwise combination of the <xref href=\"System.Reflection.BindingFlags\"></xref> values that specifies how to invoke the method.\n    - id: parameters\n      type: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n      description: An <xref href=\"System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\"></xref> that specifies the method parameters; <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the method does not have any parameters.\n    - id: localeId\n      type: System.Int32\n      description: The locale ID that the method will use for any locale-specific type conversions of the arguments or return value.\n    return:\n      type: System.AddIn.Contract.RemoteArgument\n      description: A <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> that specifies the return value of the invoked method.\n  overload: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData\n  parent: System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  isExternal: false\n  name: GetMethodData()\n  nameWithType: IRemoteMethodInfoContract.GetMethodData()\n  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData()\n- uid: System.AddIn.Contract.Automation.RemoteMethodData\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: RemoteMethodData\n  nameWithType: RemoteMethodData\n  fullName: System.AddIn.Contract.Automation.RemoteMethodData\n- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)\n  parent: System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  isExternal: false\n  name: Invoke(IRemoteObjectContract,BindingFlags,IRemoteArgumentArrayContract,Int32)\n  nameWithType: IRemoteMethodInfoContract.Invoke(IRemoteObjectContract,BindingFlags,IRemoteArgumentArrayContract,Int32)\n  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(IRemoteObjectContract,BindingFlags,IRemoteArgumentArrayContract,Int32)\n- uid: System.AddIn.Contract.RemoteArgument\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: RemoteArgument\n  nameWithType: RemoteArgument\n  fullName: System.AddIn.Contract.RemoteArgument\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: IRemoteObjectContract\n  nameWithType: IRemoteObjectContract\n  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  parent: System.AddIn.Contract.Collections\n  isExternal: false\n  name: IRemoteArgumentArrayContract\n  nameWithType: IRemoteArgumentArrayContract\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData*\n  parent: System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  isExternal: false\n  name: GetMethodData\n  nameWithType: IRemoteMethodInfoContract.GetMethodData\n- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke*\n  parent: System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  isExternal: false\n  name: Invoke\n  nameWithType: IRemoteMethodInfoContract.Invoke\n"}