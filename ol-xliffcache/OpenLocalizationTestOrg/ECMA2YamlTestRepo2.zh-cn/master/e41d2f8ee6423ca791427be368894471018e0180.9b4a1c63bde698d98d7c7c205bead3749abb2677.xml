{"nodes":[{"pos":[783,795],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9593,9605],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9701,9713],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10312,10324],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10964,10976],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11768,11780],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.TypedTableBase`1\n  id: TypedTableBase`1\n  children:\n  - System.Data.TypedTableBase`1.#ctor\n  - System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Data.TypedTableBase`1.Cast``1\n  - System.Data.TypedTableBase`1.GetEnumerator\n  - System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: TypedTableBase<T>\n  nameWithType: TypedTableBase<T>\n  fullName: System.Data.TypedTableBase<T>\n  type: Class\n  syntax:\n    content: 'public abstract class TypedTableBase<T> : System.Data.DataTable, System.Collections.Generic.IEnumerable<T> where T : DataRow'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.ComponentModel.MarshalByValueComponent\n  - System.Data.DataTable\n  implements:\n  - System.Collections.Generic.IEnumerable<T>\n  inheritedMembers:\n  - System.ComponentModel.MarshalByValueComponent.Container\n  - System.ComponentModel.MarshalByValueComponent.DesignMode\n  - System.ComponentModel.MarshalByValueComponent.Dispose\n  - System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)\n  - System.ComponentModel.MarshalByValueComponent.Disposed\n  - System.ComponentModel.MarshalByValueComponent.Events\n  - System.ComponentModel.MarshalByValueComponent.GetService(System.Type)\n  - System.Data.DataTable.AcceptChanges\n  - System.Data.DataTable.BeginInit\n  - System.Data.DataTable.BeginLoadData\n  - System.Data.DataTable.CaseSensitive\n  - System.Data.DataTable.ChildRelations\n  - System.Data.DataTable.Clear\n  - System.Data.DataTable.Clone\n  - System.Data.DataTable.ColumnChanged\n  - System.Data.DataTable.ColumnChanging\n  - System.Data.DataTable.Columns\n  - System.Data.DataTable.Compute(System.String,System.String)\n  - System.Data.DataTable.Constraints\n  - System.Data.DataTable.Copy\n  - System.Data.DataTable.CreateDataReader\n  - System.Data.DataTable.CreateInstance\n  - System.Data.DataTable.DataSet\n  - System.Data.DataTable.DefaultView\n  - System.Data.DataTable.DisplayExpression\n  - System.Data.DataTable.EndInit\n  - System.Data.DataTable.EndLoadData\n  - System.Data.DataTable.ExtendedProperties\n  - System.Data.DataTable.fInitInProgress\n  - System.Data.DataTable.GetChanges\n  - System.Data.DataTable.GetChanges(System.Data.DataRowState)\n  - System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)\n  - System.Data.DataTable.GetErrors\n  - System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Data.DataTable.GetRowType\n  - System.Data.DataTable.GetSchema\n  - System.Data.DataTable.HasErrors\n  - System.Data.DataTable.ImportRow(System.Data.DataRow)\n  - System.Data.DataTable.Initialized\n  - System.Data.DataTable.IsInitialized\n  - System.Data.DataTable.Load(System.Data.IDataReader)\n  - System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)\n  - System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)\n  - System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)\n  - System.Data.DataTable.Locale\n  - System.Data.DataTable.Merge(System.Data.DataTable)\n  - System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)\n  - System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)\n  - System.Data.DataTable.MinimumCapacity\n  - System.Data.DataTable.Namespace\n  - System.Data.DataTable.NewRow\n  - System.Data.DataTable.NewRowArray(System.Int32)\n  - System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)\n  - System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)\n  - System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)\n  - System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)\n  - System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)\n  - System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)\n  - System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)\n  - System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)\n  - System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)\n  - System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)\n  - System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)\n  - System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)\n  - System.Data.DataTable.ParentRelations\n  - System.Data.DataTable.Prefix\n  - System.Data.DataTable.PrimaryKey\n  - System.Data.DataTable.ReadXml(System.IO.Stream)\n  - System.Data.DataTable.ReadXml(System.IO.TextReader)\n  - System.Data.DataTable.ReadXml(System.String)\n  - System.Data.DataTable.ReadXml(System.Xml.XmlReader)\n  - System.Data.DataTable.ReadXmlSchema(System.IO.Stream)\n  - System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)\n  - System.Data.DataTable.ReadXmlSchema(System.String)\n  - System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)\n  - System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)\n  - System.Data.DataTable.RejectChanges\n  - System.Data.DataTable.RemotingFormat\n  - System.Data.DataTable.Reset\n  - System.Data.DataTable.RowChanged\n  - System.Data.DataTable.RowChanging\n  - System.Data.DataTable.RowDeleted\n  - System.Data.DataTable.RowDeleting\n  - System.Data.DataTable.Rows\n  - System.Data.DataTable.Select\n  - System.Data.DataTable.Select(System.String)\n  - System.Data.DataTable.Select(System.String,System.String)\n  - System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)\n  - System.Data.DataTable.Site\n  - System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection\n  - System.Data.DataTable.System#ComponentModel#IListSource#GetList\n  - System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema\n  - System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  - System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  - System.Data.DataTable.TableCleared\n  - System.Data.DataTable.TableClearing\n  - System.Data.DataTable.TableName\n  - System.Data.DataTable.TableNewRow\n  - System.Data.DataTable.ToString\n  - System.Data.DataTable.WriteXml(System.IO.Stream)\n  - System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)\n  - System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)\n  - System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)\n  - System.Data.DataTable.WriteXml(System.IO.TextWriter)\n  - System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)\n  - System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)\n  - System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)\n  - System.Data.DataTable.WriteXml(System.String)\n  - System.Data.DataTable.WriteXml(System.String,System.Boolean)\n  - System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)\n  - System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)\n  - System.Data.DataTable.WriteXml(System.Xml.XmlWriter)\n  - System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)\n  - System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)\n  - System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)\n  - System.Data.DataTable.WriteXmlSchema(System.IO.Stream)\n  - System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)\n  - System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)\n  - System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)\n  - System.Data.DataTable.WriteXmlSchema(System.String)\n  - System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)\n  - System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)\n  - System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)\n  platform:\n  - net462\n- uid: System.Data.TypedTableBase`1.#ctor\n  id: '#ctor'\n  parent: System.Data.TypedTableBase`1\n  langs:\n  - csharp\n  name: TypedTableBase()\n  nameWithType: TypedTableBase<T>.TypedTableBase()\n  fullName: System.Data.TypedTableBase<T>.TypedTableBase()\n  type: Constructor\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: protected TypedTableBase ();\n    parameters: []\n  overload: System.Data.TypedTableBase`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Data.TypedTableBase`1\n  langs:\n  - csharp\n  name: TypedTableBase(SerializationInfo,StreamingContext)\n  nameWithType: TypedTableBase<T>.TypedTableBase(SerializationInfo,StreamingContext)\n  fullName: System.Data.TypedTableBase<T>.TypedTableBase(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: protected TypedTableBase (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: To be added.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: To be added.\n  overload: System.Data.TypedTableBase`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.TypedTableBase`1.Cast``1\n  id: Cast``1\n  parent: System.Data.TypedTableBase`1\n  langs:\n  - csharp\n  name: Cast()\n  nameWithType: TypedTableBase<T>.Cast()\n  fullName: System.Data.TypedTableBase<T>.Cast()\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public System.Data.EnumerableRowCollection<TResult> Cast<TResult> ();\n    parameters: []\n    return:\n      type: System.Data.EnumerableRowCollection{TResult}\n      description: To be added.\n  overload: System.Data.TypedTableBase`1.Cast<TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.TypedTableBase`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Data.TypedTableBase`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TypedTableBase<T>.GetEnumerator()\n  fullName: System.Data.TypedTableBase<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{T}\n      description: To be added.\n  overload: System.Data.TypedTableBase`1.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Data.TypedTableBase`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TypedTableBase<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Data.TypedTableBase<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.DataTable\n  isExternal: false\n  name: System.Data.DataTable\n- uid: System.Data.TypedTableBase`1.#ctor\n  parent: System.Data.TypedTableBase`1\n  isExternal: false\n  name: TypedTableBase()\n  nameWithType: TypedTableBase<T>.TypedTableBase()\n  fullName: System.Data.TypedTableBase<T>.TypedTableBase()\n- uid: System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Data.TypedTableBase`1\n  isExternal: false\n  name: TypedTableBase(SerializationInfo,StreamingContext)\n  nameWithType: TypedTableBase<T>.TypedTableBase(SerializationInfo,StreamingContext)\n  fullName: System.Data.TypedTableBase<T>.TypedTableBase(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Data.TypedTableBase`1.Cast``1\n  parent: System.Data.TypedTableBase`1\n  isExternal: false\n  name: Cast()\n  nameWithType: TypedTableBase<T>.Cast()\n  fullName: System.Data.TypedTableBase<T>.Cast()\n- uid: System.Data.EnumerableRowCollection{TResult}\n  parent: System.Data\n  isExternal: false\n  name: EnumerableRowCollection<TResult>\n  nameWithType: EnumerableRowCollection<TResult>\n  fullName: System.Data.EnumerableRowCollection<TResult>\n  spec.csharp:\n  - uid: System.Data.EnumerableRowCollection`1\n    name: EnumerableRowCollection\n    nameWithType: EnumerableRowCollection\n    fullName: EnumerableRowCollection<TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.TypedTableBase`1.GetEnumerator\n  parent: System.Data.TypedTableBase`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TypedTableBase<T>.GetEnumerator()\n  fullName: System.Data.TypedTableBase<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{T}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Data.TypedTableBase`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TypedTableBase<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Data.TypedTableBase<T>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Data.TypedTableBase`1.#ctor*\n  parent: System.Data.TypedTableBase`1\n  isExternal: false\n  name: TypedTableBase<T>\n  nameWithType: TypedTableBase<T>.TypedTableBase<T>\n- uid: System.Data.TypedTableBase`1.Cast<TResult>*\n  parent: System.Data.TypedTableBase`1\n  isExternal: false\n  name: Cast<TResult>\n  nameWithType: TypedTableBase<T>.Cast<TResult>\n- uid: System.Data.TypedTableBase`1.GetEnumerator*\n  parent: System.Data.TypedTableBase`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: TypedTableBase<T>.GetEnumerator\n- uid: System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Data.TypedTableBase`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: TypedTableBase<T>.System.Collections.IEnumerable.GetEnumerator\n"}