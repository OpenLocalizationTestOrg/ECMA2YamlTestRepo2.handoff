{"nodes":[{"pos":[795,988],"content":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the <xref href=\"System.Security.Cryptography.TripleDES\"></xref> algorithm. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","pos":[0,161],"source":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the <xref href=\"System.Security.Cryptography.TripleDES\"></xref> algorithm."},{"content":"This class cannot be inherited.","pos":[162,193]}]},{"pos":[1001,1431],"content":"This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.      > [!NOTE] >  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class instead of the TripleDESCryptoServiceProvider class. Use TripleDESCryptoServiceProvider only for compatibility with legacy applications and data.","needQuote":false,"needEscape":true,"nodes":[{"content":"This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.","pos":[0,87]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.","pos":[93,195],"source":"      > [!NOTE] >  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available."},{"content":"Consider using the &lt;xref:System.Security.Cryptography.AesCryptoServiceProvider&gt; class instead of the TripleDESCryptoServiceProvider class.","pos":[196,334],"source":" Consider using the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class instead of the TripleDESCryptoServiceProvider class."},{"content":"Use TripleDESCryptoServiceProvider only for compatibility with legacy applications and data.","pos":[335,427]}]},{"pos":[5042,5163],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider\"></xref> class."},{"pos":[6580,6692],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cryptographic service provider is not available.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Cryptography.TripleDES\"></xref> cryptographic service provider is not available."},{"pos":[7284,7553],"content":"Creates a symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> decryptor object with the specified key (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id=\"p2\">*</bpt>&gt;) and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id=\"p2\">*</ept>&gt;).","needQuote":true,"needEscape":true,"source":"Creates a symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> decryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)."},{"pos":[7565,7745],"content":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method decrypts an encrypted message created using the &lt;xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A&gt; overload with the same parameters.","pos":[0,180],"source":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters."}]},{"pos":[9015,9065],"content":"The secret key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]},{"pos":[9127,9188],"content":"The initialization vector to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]},{"pos":[9278,9367],"content":"A symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> decryptor object.","needQuote":true,"needEscape":true,"source":"A symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> decryptor object."},{"pos":[9620,10170],"content":"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.       -or-       The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8.       -or-       An invalid key size was used.       -or-       The algorithm key size was not available.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode<bpt id=\"p1\">*</bpt>&gt; property is <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.       -or-       The value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode<ept id=\"p1\">*</ept>&gt; property is <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and the value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*&gt; property is not 8.","pos":[0,428],"source":"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.       -or-       The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8."},{"content":"-or-       An invalid key size was used.","pos":[435,475]},{"content":"-or-       The algorithm key size was not available.","pos":[482,534]}]},{"pos":[10763,11032],"content":"Creates a symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> encryptor object with the specified key (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id=\"p2\">*</bpt>&gt;) and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id=\"p2\">*</ept>&gt;).","needQuote":true,"needEscape":true,"source":"Creates a symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> encryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)."},{"pos":[11044,11209],"content":"Use the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A&gt; overload with the same parameters to decrypt the result of this method.","pos":[0,165],"source":"Use the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method."}]},{"pos":[12479,12529],"content":"The secret key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]},{"pos":[12592,12953],"content":"The initialization vector to use for the symmetric algorithm.       <div class=\"alert NOTE\">    The initialization vector must be 8 bytes long. If it is longer than 8 bytes, it is truncated and an exception is not thrown. Before you call CreateEncryptor, check the length of the initialization vector and throw an exception if it is too long.      </div>","needQuote":false,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]},{"content":"The initialization vector must be 8 bytes long. If it is longer than 8 bytes, it is truncated and an exception is not thrown. Before you call CreateEncryptor, check the length of the initialization vector and throw an exception if it is too long.","pos":[96,342],"nodes":[{"content":"The initialization vector must be 8 bytes long.","pos":[0,47]},{"content":"If it is longer than 8 bytes, it is truncated and an exception is not thrown.","pos":[48,125]},{"content":"Before you call CreateEncryptor, check the length of the initialization vector and throw an exception if it is too long.","pos":[126,246]}]}]},{"pos":[13044,13133],"content":"A symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> encryptor object.","needQuote":true,"needEscape":true,"source":"A symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> encryptor object."},{"pos":[13386,13936],"content":"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.       -or-       The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8.       -or-       An invalid key size was used.       -or-       The algorithm key size was not available.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode<bpt id=\"p1\">*</bpt>&gt; property is <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.       -or-       The value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode<ept id=\"p1\">*</ept>&gt; property is <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and the value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*&gt; property is not 8.","pos":[0,428],"source":"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.       -or-       The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8."},{"content":"-or-       An invalid key size was used.","pos":[435,475]},{"content":"-or-       The algorithm key size was not available.","pos":[482,534]}]},{"pos":[14407,14534],"content":"Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to use for the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV*&gt;) to use for the algorithm.","pos":[0,127],"source":"Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to use for the algorithm."}]},{"pos":[14546,14628],"content":"Use this method to generate a random initialization vector when none is specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this method to generate a random initialization vector when none is specified.","pos":[0,82]}]},{"pos":[15282,15390],"content":"Generates a random <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*> to be used for the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key*&gt; to be used for the algorithm.","pos":[0,108],"source":"Generates a random <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*> to be used for the algorithm."}]},{"pos":[15403,15670],"content":"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>).       This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>).       This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.","pos":[0,265],"nodes":[{"content":"Use this method to generate a random key when none is specified.","pos":[0,64]},{"content":"This method will never return a weak key (see &lt;xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A&gt;).","pos":[65,171],"source":" This method will never return a weak key (see <xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>)."},{"content":"This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.","pos":[178,265]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  id: TripleDESCryptoServiceProvider\n  children:\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey\n  langs:\n  - csharp\n  name: TripleDESCryptoServiceProvider\n  nameWithType: TripleDESCryptoServiceProvider\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  type: Class\n  summary: Defines a wrapper object to access the cryptographic service provider (CSP) version of the <xref href=\"System.Security.Cryptography.TripleDES\"></xref> algorithm. This class cannot be inherited.\n  remarks: \"This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.  \\n  \\n> [!NOTE]\\n>  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class instead of the TripleDESCryptoServiceProvider class. Use TripleDESCryptoServiceProvider only for compatibility with legacy applications and data.\"\n  example:\n  - \"The following code example creates a TripleDESCryptoServiceProvider object and uses it to encrypt and decrypt data in a file.  \\n  \\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/t-system.security.crypto_100_1.cs)]\\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/t-system.security.crypto_100_1.cpp)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/t-system.security.crypto_100_1.vb)]  \\n  \\n The following code example creates a TripleDESCryptoServiceProvider object and uses it to encrypt and decrypt data in memory.  \\n  \\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/t-system.security.crypto_100_2.vb)]\\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/t-system.security.crypto_100_2.cs)]\\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/t-system.security.crypto_100_2.cpp)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class TripleDESCryptoServiceProvider : System.Security.Cryptography.TripleDES\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.TripleDES\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  - System.Security.Cryptography.TripleDES.Create\n  - System.Security.Cryptography.TripleDES.Create(System.String)\n  - System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])\n  - System.Security.Cryptography.TripleDES.Key\n  platform:\n  - net462\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: TripleDESCryptoServiceProvider()\n  nameWithType: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.  \\n  \\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/m-system.security.crypto_24_1.cs)]\\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/m-system.security.crypto_24_1.cpp)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_24_1.vb)]  \\n  \\n The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.  \\n  \\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_24_2.vb)]\\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/m-system.security.crypto_24_2.cs)]\\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_24_2.cpp)]\"\n  syntax:\n    content: public TripleDESCryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The <xref href=\"System.Security.Cryptography.TripleDES\"></xref> cryptographic service provider is not available.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> decryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>).\n  remarks: This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.\n  example:\n  - \"The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.  \\n  \\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/de676a27-d971-4ef6-8051-_1.cs)]\\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/de676a27-d971-4ef6-8051-_1.cpp)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/de676a27-d971-4ef6-8051-_1.vb)]  \\n  \\n The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.  \\n  \\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/de676a27-d971-4ef6-8051-_2.vb)]\\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/de676a27-d971-4ef6-8051-_2.cs)]\\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/de676a27-d971-4ef6-8051-_2.cpp)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> decryptor object.\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> encryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>).\n  remarks: Use the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.\n  example:\n  - \"The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.  \\n  \\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/558647a8-1e1a-4ecf-9345-_1.cs)]\\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/558647a8-1e1a-4ecf-9345-_1.cpp)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/558647a8-1e1a-4ecf-9345-_1.vb)]  \\n  \\n The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.  \\n  \\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/558647a8-1e1a-4ecf-9345-_2.vb)]\\n [!code-cs[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/558647a8-1e1a-4ecf-9345-_2.cs)]\\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/558647a8-1e1a-4ecf-9345-_2.cpp)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: \"The initialization vector to use for the symmetric algorithm.  \\n  \\n <div class=\\\"alert NOTE\\\">  \\n The initialization vector must be 8 bytes long. If it is longer than 8 bytes, it is truncated and an exception is not thrown. Before you call CreateEncryptor, check the length of the initialization vector and throw an exception if it is too long.  \\n  \\n</div>\"\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> encryptor object.\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: TripleDESCryptoServiceProvider.GenerateIV()\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to use for the algorithm.\n  remarks: Use this method to generate a random initialization vector when none is specified.\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: TripleDESCryptoServiceProvider.GenerateKey()\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Generates a random <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*> to be used for the algorithm.\n  remarks: \"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>).  \\n  \\n This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.\"\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.TripleDES\n  isExternal: false\n  name: System.Security.Cryptography.TripleDES\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: TripleDESCryptoServiceProvider()\n  nameWithType: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: TripleDESCryptoServiceProvider.GenerateIV()\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV()\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: TripleDESCryptoServiceProvider.GenerateKey()\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey()\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: TripleDESCryptoServiceProvider\n  nameWithType: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV\n  nameWithType: TripleDESCryptoServiceProvider.GenerateIV\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey\n  nameWithType: TripleDESCryptoServiceProvider.GenerateKey\n"}