{"nodes":[{"pos":[2845,2969],"content":"Exposes the public members of the &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; class to unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes the public members of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.FieldInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> class to unmanaged code.","pos":[0,124],"source":"Exposes the public members of the &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; class to unmanaged code."}]},{"pos":[2982,3272],"content":"This interface is for access to managed classes from unmanaged code, and should not be called from managed code.       This interface preserves the vtable order of the <xref:System.Reflection.FieldInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","needQuote":false,"needEscape":true,"nodes":[{"content":"This interface is for access to managed classes from unmanaged code, and should not be called from managed code.       This interface preserves the vtable order of the <xref:System.Reflection.FieldInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","pos":[0,288],"nodes":[{"content":"This interface is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,112]},{"content":"This interface preserves the vtable order of the &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.","pos":[119,288],"source":"       This interface preserves the vtable order of the <xref:System.Reflection.FieldInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."}]}]},{"pos":[4141,4257],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.Attributes*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.Attributes*&gt; property.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.Attributes*> property."}]},{"pos":[4270,4499],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.Attributes%2A> property gets the attributes associated with this field.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.Attributes%2A> property gets the attributes associated with this field.","pos":[0,227],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.Attributes%2A&gt; property gets the attributes associated with this field.","pos":[118,227],"source":"       The <xref:System.Reflection.FieldInfo.Attributes%2A> property gets the attributes associated with this field."}]}]},{"pos":[4662,4722],"content":"The <xref:System.Reflection.FieldAttributes> for this field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Reflection.FieldAttributes&gt; for this field.","pos":[0,60],"source":"The <xref:System.Reflection.FieldAttributes> for this field."}]},{"pos":[5214,5334],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.","pos":[0,120],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property."}]},{"pos":[5347,5574],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","pos":[0,225],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.","pos":[118,225],"source":"       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member."}]}]},{"pos":[5689,5759],"content":"The <xref:System.Type> object for the class that declares this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; object for the class that declares this member.","pos":[0,70],"source":"The <xref:System.Type> object for the class that declares this member."}]},{"pos":[6271,6367],"content":"Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.","pos":[0,96],"source":"Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method."}]},{"pos":[6380,6639],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","pos":[0,257],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.","pos":[116,257],"source":"       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>."}]}]},{"pos":[6776,6850],"content":"The <xref:System.Object> to compare with the current <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.","pos":[0,74],"source":"The <xref:System.Object> to compare with the current <xref:System.Object>."}]},{"pos":[6909,7128],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current <xref:System.Object>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7606,7723],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.FieldHandle*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.FieldHandle*&gt; property.","pos":[0,117],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.FieldHandle*> property."}]},{"pos":[7736,8029],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.FieldHandle%2A> property gets a <xref:System.RuntimeFieldHandle>, which is a handle to the internal metadata representation of a field.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.FieldHandle%2A> property gets a <xref:System.RuntimeFieldHandle>, which is a handle to the internal metadata representation of a field.","pos":[0,291],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.FieldHandle%2A&gt; property gets a &lt;xref:System.RuntimeFieldHandle&gt;, which is a handle to the internal metadata representation of a field.","pos":[118,291],"source":"       The <xref:System.Reflection.FieldInfo.FieldHandle%2A> property gets a <xref:System.RuntimeFieldHandle>, which is a handle to the internal metadata representation of a field."}]}]},{"pos":[8170,8230],"content":"A handle to the internal metadata representation of a field.","needQuote":true,"needEscape":true,"nodes":[{"content":"A handle to the internal metadata representation of a field.","pos":[0,60]}]},{"pos":[8703,8818],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.FieldType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.FieldType*&gt; property.","pos":[0,115],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.FieldType*> property."}]},{"pos":[8831,9047],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.FieldType%2A> property gets the type of this field object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.FieldType%2A> property gets the type of this field object.","pos":[0,214],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.FieldType%2A&gt; property gets the type of this field object.","pos":[118,214],"source":"       The <xref:System.Reflection.FieldInfo.FieldType%2A> property gets the type of this field object."}]}]},{"pos":[9158,9188],"content":"The type of this field object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of this field object.","pos":[0,30]}]},{"pos":[9766,9890],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.","pos":[0,124],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method."}]},{"pos":[9903,10145],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.","pos":[0,240],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array containing all the custom attributes.","pos":[116,240],"source":"       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes."}]}]},{"pos":[10302,10385],"content":"Specifies whether to search this member's inheritance chain to find the attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","pos":[0,83]}]},{"pos":[10445,10555],"content":"An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.","pos":[0,110]}]},{"pos":[11182,11306],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.","pos":[0,124],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method."}]},{"pos":[11319,11578],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","pos":[0,257],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.","pos":[116,257],"source":"       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>."}]}]},{"pos":[11758,11857],"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","pos":[0,99],"nodes":[{"content":"The type of attribute to search for.","pos":[0,36]},{"content":"Only attributes that are assignable to this type are returned.","pos":[37,99]}]}]},{"pos":[11922,12005],"content":"Specifies whether to search this member's inheritance chain to find the attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","pos":[0,83]}]},{"pos":[12065,12189],"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","pos":[0,124]}]},{"pos":[12684,12785],"content":"Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.","pos":[0,101],"source":"Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method."}]},{"pos":[12798,13128],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.","pos":[0,328],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.","pos":[116,211],"source":"       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type."},{"content":"&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures like a hash table.","pos":[212,328],"source":" <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table."}]}]},{"pos":[13255,13294],"content":"The hash code for the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code for the current instance.","pos":[0,39]}]},{"pos":[14027,14094],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]},{"pos":[14106,14292],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]},{"pos":[14492,14534],"content":"Reserved for future use. Must be IID_NULL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]},{"pos":[14600,14638],"content":"Passed-in array of names to be mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]},{"pos":[14701,14733],"content":"Count of the names to be mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]},{"pos":[14794,14845],"content":"The locale context in which to interpret the names.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]},{"pos":[14910,14982],"content":"Caller-allocated array that receives the IDs corresponding to the names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Caller-allocated array that receives the IDs corresponding to the names.","pos":[0,72]}]},{"pos":[15451,15548],"content":"Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType*&gt; method.","pos":[0,97],"source":"Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method."}]},{"pos":[15561,15760],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.GetType%2A> method gets the type of the current instance.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.GetType%2A> method gets the type of the current instance.","pos":[0,197],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.","pos":[116,197],"source":"       The <xref:System.Object.GetType%2A> method gets the type of the current instance."}]}]},{"pos":[15883,15911],"content":"A <xref:System.Type> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; object.","pos":[0,28],"source":"A <xref:System.Type> object."}]},{"pos":[16540,16654],"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","pos":[0,114]}]},{"pos":[16666,16850],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]},{"pos":[17018,17049],"content":"The type information to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type information to return.","pos":[0,31]}]},{"pos":[17110,17157],"content":"The locale identifier for the type information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]},{"pos":[17221,17281],"content":"Receives a pointer to the requested type information object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Receives a pointer to the requested type information object.","pos":[0,60]}]},{"pos":[17843,17935],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]},{"pos":[17947,18136],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]},{"pos":[18288,18388],"content":"Points to a location that receives the number of type information interfaces provided by the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Points to a location that receives the number of type information interfaces provided by the object.","pos":[0,100]}]},{"pos":[18913,19025],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.GetValue*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.GetValue*&gt; method.","pos":[0,112],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.GetValue*> method."}]},{"pos":[19038,19271],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.GetValue%2A> method returns the value of a field supported by a given object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.GetValue%2A> method returns the value of a field supported by a given object.","pos":[0,231],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.FieldInfo.GetValue%2A&gt; method returns the value of a field supported by a given object.","pos":[116,231],"source":"       The <xref:System.Reflection.FieldInfo.GetValue%2A> method returns the value of a field supported by a given object."}]}]},{"pos":[19408,19454],"content":"The object whose field value will be returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object whose field value will be returned.","pos":[0,46]}]},{"pos":[19512,19583],"content":"An object containing the value of the field reflected by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object containing the value of the field reflected by this instance.","pos":[0,71]}]},{"pos":[20170,20288],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.GetValueDirect*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.GetValueDirect*&gt; method.","pos":[0,118],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.GetValueDirect*> method."}]},{"pos":[20301,20540],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.GetValueDirect%2A> method returns the value of a field supported by a given object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.GetValueDirect%2A> method returns the value of a field supported by a given object.","pos":[0,237],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.FieldInfo.GetValueDirect%2A&gt; method returns the value of a field supported by a given object.","pos":[116,237],"source":"       The <xref:System.Reflection.FieldInfo.GetValueDirect%2A> method returns the value of a field supported by a given object."}]}]},{"pos":[20699,20883],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.TypedReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that encapsulates a managed pointer to a location and a runtime representation of the type that might be stored at that location.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.TypedReference\"></xref> structure that encapsulates a managed pointer to a location and a runtime representation of the type that might be stored at that location."},{"pos":[20941,20990],"content":"An <xref:System.Object> containing a field value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; containing a field value.","pos":[0,49],"source":"An <xref:System.Object> containing a field value."}]},{"pos":[21833,21896],"content":"Provides access to properties and methods exposed by an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]},{"pos":[21908,22087],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]},{"pos":[22350,22372],"content":"Identifies the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the member.","pos":[0,22]}]},{"pos":[22431,22473],"content":"Reserved for future use. Must be IID_NULL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]},{"pos":[22534,22585],"content":"The locale context in which to interpret arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]},{"pos":[22647,22688],"content":"Flags describing the context of the call.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]},{"pos":[22756,22915],"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]},{"pos":[22982,23039],"content":"Pointer to the location where the result is to be stored.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]},{"pos":[23106,23165],"content":"Pointer to a structure that contains exception information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]},{"pos":[23230,23280],"content":"The index of the first argument that has an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]},{"pos":[23753,23869],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsAssembly*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsAssembly*&gt; property.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsAssembly*> property."}]},{"pos":[23882,24139],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsAssembly%2A> property gets a value indicating whether this field has `Assembly` level visibility.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsAssembly%2A&gt; property gets a value indicating whether this field has <ph id=\"ph1\">`Assembly`</ph> level visibility.","pos":[118,255],"source":"       The <xref:System.Reflection.FieldInfo.IsAssembly%2A> property gets a value indicating whether this field has `Assembly` level visibility."}]},{"pos":[24254,24494],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the field has the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Assembly\" name=\"Assembly\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_Assembly\" name=\"Assembly\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25062,25176],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; method.","pos":[0,114],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> method."}]},{"pos":[25189,25451],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of `attributeType` is applied to this member.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; method indicates whether one or more instance of <ph id=\"ph1\">`attributeType`</ph> is applied to this member.","pos":[116,260],"source":"       The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of `attributeType` is applied to this member."}]},{"pos":[25617,25690],"content":"The <xref:System.Type> object to which the custom attributes are applied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; object to which the custom attributes are applied.","pos":[0,73],"source":"The <xref:System.Type> object to which the custom attributes are applied."}]},{"pos":[25755,25838],"content":"Specifies whether to search this member's inheritance chain to find the attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","pos":[0,83]}]},{"pos":[25897,26113],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if one or more instance of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">attributeType</ph><ept id=\"p2\">&lt;/code&gt;</ept> is applied to this member; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if one or more instance of <code>attributeType</code> is applied to this member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26579,26693],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsFamily*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsFamily*&gt; property.","pos":[0,114],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsFamily*> property."}]},{"pos":[26706,26959],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsFamily%2A> property gets a value indicating whether this field has `Family` level visibility.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsFamily%2A&gt; property gets a value indicating whether this field has <ph id=\"ph1\">`Family`</ph> level visibility.","pos":[118,251],"source":"       The <xref:System.Reflection.FieldInfo.IsFamily%2A> property gets a value indicating whether this field has `Family` level visibility."}]},{"pos":[27072,27308],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the field has the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Family\" name=\"Family\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_Family\" name=\"Family\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27828,27953],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsFamilyAndAssembly*&gt; property.","pos":[0,125],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly*> property."}]},{"pos":[27966,28241],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> property gets a value indicating whether this field has `FamilyAndAssembly` level visibility.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A&gt; property gets a value indicating whether this field has <ph id=\"ph1\">`FamilyAndAssembly`</ph> level visibility.","pos":[118,273],"source":"       The <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> property gets a value indicating whether this field has `FamilyAndAssembly` level visibility."}]},{"pos":[28365,28611],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the field has the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_FamANDAssem\" name=\"FamANDAssem\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_FamANDAssem\" name=\"FamANDAssem\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29137,29261],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsFamilyOrAssembly*&gt; property.","pos":[0,124],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly*> property."}]},{"pos":[29274,29547],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property gets a value indicating whether this field has `FamilyOrAssembly` level visibility.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A&gt; property gets a value indicating whether this field has <ph id=\"ph1\">`FamilyOrAssembly`</ph> level visibility.","pos":[118,271],"source":"       The <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property gets a value indicating whether this field has `FamilyOrAssembly` level visibility."}]},{"pos":[29670,29914],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the field has the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_FamORAssem\" name=\"FamORAssem\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_FamORAssem\" name=\"FamORAssem\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30399,30515],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsInitOnly*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsInitOnly*&gt; property.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsInitOnly*> property."}]},{"pos":[30528,30799],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsInitOnly%2A> property gets a value indicating whether the field can only be set in the body of the constructor.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsInitOnly%2A> property gets a value indicating whether the field can only be set in the body of the constructor.","pos":[0,269],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsInitOnly%2A&gt; property gets a value indicating whether the field can only be set in the body of the constructor.","pos":[118,269],"source":"       The <xref:System.Reflection.FieldInfo.IsInitOnly%2A> property gets a value indicating whether the field can only be set in the body of the constructor."}]}]},{"pos":[30914,31154],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the field has the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_InitOnly\" name=\"InitOnly\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_InitOnly\" name=\"InitOnly\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31626,31741],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsLiteral*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsLiteral*&gt; property.","pos":[0,115],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsLiteral*> property."}]},{"pos":[31754,32026],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsLiteral%2A> property gets a value indicating whether the value is written at compile time and cannot be changed.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsLiteral%2A> property gets a value indicating whether the value is written at compile time and cannot be changed.","pos":[0,270],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsLiteral%2A&gt; property gets a value indicating whether the value is written at compile time and cannot be changed.","pos":[118,270],"source":"       The <xref:System.Reflection.FieldInfo.IsLiteral%2A> property gets a value indicating whether the value is written at compile time and cannot be changed."}]}]},{"pos":[32140,32378],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the field has the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Literal\" name=\"Literal\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_Literal\" name=\"Literal\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[32879,33000],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsNotSerialized*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsNotSerialized*&gt; property.","pos":[0,121],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsNotSerialized*> property."}]},{"pos":[33013,33277],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsNotSerialized%2A> property gets a value indicating whether this field has the `NotSerialized` attribute.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsNotSerialized%2A&gt; property gets a value indicating whether this field has the <ph id=\"ph1\">`NotSerialized`</ph> attribute.","pos":[118,262],"source":"       The <xref:System.Reflection.FieldInfo.IsNotSerialized%2A> property gets a value indicating whether this field has the `NotSerialized` attribute."}]},{"pos":[33397,33647],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the field has the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_NotSerialized\" name=\"NotSerialized\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute set; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_NotSerialized\" name=\"NotSerialized\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34144,34263],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsPinvokeImpl*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsPinvokeImpl*&gt; property.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsPinvokeImpl*> property."}]},{"pos":[34276,34586],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A> property gets a value indicating whether the corresponding `PinvokeImpl` attribute is set in <xref:System.Reflection.FieldAttributes>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A&gt; property gets a value indicating whether the corresponding <ph id=\"ph1\">`PinvokeImpl`</ph> attribute is set in &lt;xref:System.Reflection.FieldAttributes&gt;.","pos":[118,308],"source":"       The <xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A> property gets a value indicating whether the corresponding `PinvokeImpl` attribute is set in <xref:System.Reflection.FieldAttributes>."}]},{"pos":[34704,34983],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_PinvokeImpl\" name=\"PinvokeImpl\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute is set in &lt;xref:System.Reflection.FieldAttributes&gt;; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_PinvokeImpl\" name=\"PinvokeImpl\" href=\"\"></xref> attribute is set in <xref:System.Reflection.FieldAttributes>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[35458,35573],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsPrivate*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsPrivate*&gt; property.","pos":[0,115],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsPrivate*> property."}]},{"pos":[35586,35820],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsPrivate%2A> property gets a value indicating whether the field is private.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsPrivate%2A> property gets a value indicating whether the field is private.","pos":[0,232],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsPrivate%2A&gt; property gets a value indicating whether the field is private.","pos":[118,232],"source":"       The <xref:System.Reflection.FieldInfo.IsPrivate%2A> property gets a value indicating whether the field is private."}]}]},{"pos":[35934,36094],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the field is private; otherwise; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field is private; otherwise; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[36560,36674],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsPublic*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsPublic*&gt; property.","pos":[0,114],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsPublic*> property."}]},{"pos":[36687,36919],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsPublic%2A> property gets a value indicating whether the field is public.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsPublic%2A> property gets a value indicating whether the field is public.","pos":[0,230],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsPublic%2A&gt; property gets a value indicating whether the field is public.","pos":[118,230],"source":"       The <xref:System.Reflection.FieldInfo.IsPublic%2A> property gets a value indicating whether the field is public."}]}]},{"pos":[37032,37192],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this field is public; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this field is public; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[37682,37801],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsSpecialName*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsSpecialName*&gt; property.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsSpecialName*> property."}]},{"pos":[37814,38139],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsSpecialName%2A> property gets a value indicating whether the corresponding `SpecialName` attribute is set in the <xref:System.Reflection.FieldAttributes> enumerator.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsSpecialName%2A&gt; property gets a value indicating whether the corresponding <ph id=\"ph1\">`SpecialName`</ph> attribute is set in the &lt;xref:System.Reflection.FieldAttributes&gt; enumerator.","pos":[118,323],"source":"       The <xref:System.Reflection.FieldInfo.IsSpecialName%2A> property gets a value indicating whether the corresponding `SpecialName` attribute is set in the <xref:System.Reflection.FieldAttributes> enumerator."}]},{"pos":[38257,38536],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_SpecialName\" name=\"SpecialName\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute is set in &lt;xref:System.Reflection.FieldAttributes&gt;; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_SpecialName\" name=\"SpecialName\" href=\"\"></xref> attribute is set in <xref:System.Reflection.FieldAttributes>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[39006,39120],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsStatic*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.IsStatic*&gt; property.","pos":[0,114],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsStatic*> property."}]},{"pos":[39133,39365],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsStatic%2A> property gets a value indicating whether the field is static.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.IsStatic%2A> property gets a value indicating whether the field is static.","pos":[0,230],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.IsStatic%2A&gt; property gets a value indicating whether the field is static.","pos":[118,230],"source":"       The <xref:System.Reflection.FieldInfo.IsStatic%2A> property gets a value indicating whether the field is static."}]}]},{"pos":[39478,39638],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this field is static; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this field is static; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[40113,40229],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.MemberType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.MemberType*&gt; property.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.MemberType*> property."}]},{"pos":[40242,40513],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a field.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a field.","pos":[0,269],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.FieldInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating that this member is a field.","pos":[118,269],"source":"       The <xref:System.Reflection.FieldInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a field."}]}]},{"pos":[40668,40766],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating that this member is a field.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a field."},{"pos":[41213,41324],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.","pos":[0,111],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property."}]},{"pos":[41337,41550],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","pos":[0,211],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.","pos":[118,211],"source":"       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member."}]}]},{"pos":[41660,41718],"content":"A <xref:System.String> containing the name of this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the name of this member.","pos":[0,58],"source":"A <xref:System.String> containing the name of this member."}]},{"pos":[42204,42324],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.","pos":[0,120],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property."}]},{"pos":[42337,42622],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>.","pos":[0,283],"nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]},{"content":"The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this instance of &lt;xref:System.Reflection.MemberInfo&gt;.","pos":[118,283],"source":"       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>."}]}]},{"pos":[42737,42806],"content":"The <xref:System.Type> object through which this object was obtained.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; object through which this object was obtained.","pos":[0,69],"source":"The <xref:System.Type> object through which this object was obtained."}]},{"pos":[43377,43489],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.SetValue*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.SetValue*&gt; method.","pos":[0,112],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.SetValue*> method."}]},{"pos":[43502,43736],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the value of the field supported by the given object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the value of the field supported by the given object.","pos":[0,232],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.FieldInfo.SetValue%2A&gt; method sets the value of the field supported by the given object.","pos":[116,232],"source":"       The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the value of the field supported by the given object."}]}]},{"pos":[43885,43926],"content":"The object whose field value will be set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object whose field value will be set.","pos":[0,41]}]},{"pos":[43988,44021],"content":"The value to assign to the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to the field.","pos":[0,33]}]},{"pos":[44861,44976],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.SetValue*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.SetValue*&gt; method.","pos":[0,115],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.SetValue*> method."}]},{"pos":[44989,45226],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the field supported by the given object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the field supported by the given object.","pos":[0,235],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.SetValue%2A&gt; method sets the value of the field supported by the given object.","pos":[116,235],"source":"       The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the field supported by the given object."}]}]},{"pos":[45493,45534],"content":"The object whose field value will be set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object whose field value will be set.","pos":[0,41]}]},{"pos":[45596,45629],"content":"The value to assign to the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to the field.","pos":[0,33]}]},{"pos":[45713,46025],"content":"A field of <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Binder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the type of binding that is desired (for example, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Binder.CreateInstance\" name=\"Binder.CreateInstance\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Binder.ExactBinding\" name=\"Binder.ExactBinding\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"A field of <xref href=\"System.Reflection.Binder\"></xref> that specifies the type of binding that is desired (for example, <xref uid=\"langword_csharp_Binder.CreateInstance\" name=\"Binder.CreateInstance\" href=\"\"></xref> or <xref uid=\"langword_csharp_Binder.ExactBinding\" name=\"Binder.ExactBinding\" href=\"\"></xref>)."},{"pos":[46099,46404],"content":"A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection. If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, then <xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"></xref> is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection.","pos":[0,119]},{"content":"If <ph id=\"ph1\">`binder`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, then <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used.","pos":[120,305],"source":" If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, then <xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"></xref> is used."}]},{"pos":[46487,46536],"content":"The software preferences of a particular culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The software preferences of a particular culture.","pos":[0,49]}]},{"pos":[47172,47290],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.SetValueDirect*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.SetValueDirect*&gt; method.","pos":[0,118],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.SetValueDirect*> method."}]},{"pos":[47303,47543],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.SetValueDirect%2A> method sets the value of the field supported by the given object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.SetValueDirect%2A> method sets the value of the field supported by the given object.","pos":[0,238],"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"The &lt;xref:System.Reflection.FieldInfo.SetValueDirect%2A&gt; method sets the value of the field supported by the given object.","pos":[116,238],"source":"       The <xref:System.Reflection.FieldInfo.SetValueDirect%2A> method sets the value of the field supported by the given object."}]}]},{"pos":[47714,47755],"content":"The object whose field value will be set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object whose field value will be set.","pos":[0,41]}]},{"pos":[47817,47850],"content":"The value to assign to the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to the field.","pos":[0,33]}]},{"pos":[48325,48423],"content":"Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.","pos":[0,98],"source":"Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method."}]},{"pos":[48435,48544],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[48671,48729],"content":"A string that represents the current <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the current &lt;xref:System.Object&gt;.","pos":[0,58],"source":"A string that represents the current <xref:System.Object>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices._FieldInfo\n  id: _FieldInfo\n  children:\n  - System.Runtime.InteropServices._FieldInfo.Attributes\n  - System.Runtime.InteropServices._FieldInfo.DeclaringType\n  - System.Runtime.InteropServices._FieldInfo.Equals(System.Object)\n  - System.Runtime.InteropServices._FieldInfo.FieldHandle\n  - System.Runtime.InteropServices._FieldInfo.FieldType\n  - System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Boolean)\n  - System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._FieldInfo.GetHashCode\n  - System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._FieldInfo.GetType\n  - System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32@)\n  - System.Runtime.InteropServices._FieldInfo.GetValue(System.Object)\n  - System.Runtime.InteropServices._FieldInfo.GetValueDirect(System.TypedReference)\n  - System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Runtime.InteropServices._FieldInfo.IsAssembly\n  - System.Runtime.InteropServices._FieldInfo.IsDefined(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._FieldInfo.IsFamily\n  - System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly\n  - System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly\n  - System.Runtime.InteropServices._FieldInfo.IsInitOnly\n  - System.Runtime.InteropServices._FieldInfo.IsLiteral\n  - System.Runtime.InteropServices._FieldInfo.IsNotSerialized\n  - System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl\n  - System.Runtime.InteropServices._FieldInfo.IsPrivate\n  - System.Runtime.InteropServices._FieldInfo.IsPublic\n  - System.Runtime.InteropServices._FieldInfo.IsSpecialName\n  - System.Runtime.InteropServices._FieldInfo.IsStatic\n  - System.Runtime.InteropServices._FieldInfo.MemberType\n  - System.Runtime.InteropServices._FieldInfo.Name\n  - System.Runtime.InteropServices._FieldInfo.ReflectedType\n  - System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object)\n  - System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\n  - System.Runtime.InteropServices._FieldInfo.SetValueDirect(System.TypedReference,System.Object)\n  - System.Runtime.InteropServices._FieldInfo.ToString\n  langs:\n  - csharp\n  name: _FieldInfo\n  nameWithType: _FieldInfo\n  fullName: System.Runtime.InteropServices._FieldInfo\n  type: Interface\n  summary: Exposes the public members of the &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; class to unmanaged code.\n  remarks: \"This interface is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n This interface preserves the vtable order of the <xref:System.Reflection.FieldInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"8A7C1442-A9FB-366B-80D8-4939FFA6DBE0\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.FieldInfo))]\n\n      public interface _FieldInfo\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.Attributes\n  id: Attributes\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: _FieldInfo.Attributes\n  fullName: System.Runtime.InteropServices._FieldInfo.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.Attributes*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.Attributes%2A> property gets the attributes associated with this field.\"\n  syntax:\n    content: public System.Reflection.FieldAttributes Attributes { get; }\n    return:\n      type: System.Reflection.FieldAttributes\n      description: The <xref:System.Reflection.FieldAttributes> for this field.\n  overload: System.Runtime.InteropServices._FieldInfo.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.DeclaringType\n  id: DeclaringType\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: _FieldInfo.DeclaringType\n  fullName: System.Runtime.InteropServices._FieldInfo.DeclaringType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.\"\n  syntax:\n    content: public Type DeclaringType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> object for the class that declares this member.\n  overload: System.Runtime.InteropServices._FieldInfo.DeclaringType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: _FieldInfo.Equals(Object)\n  fullName: System.Runtime.InteropServices._FieldInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.\"\n  syntax:\n    content: public bool Equals (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The <xref:System.Object> to compare with the current <xref:System.Object>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current <xref:System.Object>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.FieldHandle\n  id: FieldHandle\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: FieldHandle\n  nameWithType: _FieldInfo.FieldHandle\n  fullName: System.Runtime.InteropServices._FieldInfo.FieldHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.FieldHandle*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.FieldHandle%2A> property gets a <xref:System.RuntimeFieldHandle>, which is a handle to the internal metadata representation of a field.\"\n  syntax:\n    content: public RuntimeFieldHandle FieldHandle { get; }\n    return:\n      type: System.RuntimeFieldHandle\n      description: A handle to the internal metadata representation of a field.\n  overload: System.Runtime.InteropServices._FieldInfo.FieldHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.FieldType\n  id: FieldType\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: FieldType\n  nameWithType: _FieldInfo.FieldType\n  fullName: System.Runtime.InteropServices._FieldInfo.FieldType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.FieldType*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.FieldType%2A> property gets the type of this field object.\"\n  syntax:\n    content: public Type FieldType { get; }\n    return:\n      type: System.Type\n      description: The type of this field object.\n  overload: System.Runtime.InteropServices._FieldInfo.FieldType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _FieldInfo.GetCustomAttributes(Boolean)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.\"\n  syntax:\n    content: public object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: Specifies whether to search this member's inheritance chain to find the attributes.\n    return:\n      type: System.Object[]\n      description: An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.\n  overload: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: _FieldInfo.GetCustomAttributes(Type,Boolean)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.\"\n  syntax:\n    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.\n    - id: inherit\n      type: System.Boolean\n      description: Specifies whether to search this member's inheritance chain to find the attributes.\n    return:\n      type: System.Object[]\n      description: An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.\n  overload: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: _FieldInfo.GetHashCode()\n  fullName: System.Runtime.InteropServices._FieldInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.\"\n  syntax:\n    content: public int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current instance.\n  overload: System.Runtime.InteropServices._FieldInfo.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array that receives the IDs corresponding to the names.\n  overload: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.GetType\n  id: GetType\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: GetType()\n  nameWithType: _FieldInfo.GetType()\n  fullName: System.Runtime.InteropServices._FieldInfo.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetType%2A> method gets the type of the current instance.\"\n  syntax:\n    content: public Type GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: A <xref:System.Type> object.\n  overload: System.Runtime.InteropServices._FieldInfo.GetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Receives a pointer to the requested type information object.\n  overload: System.Runtime.InteropServices._FieldInfo.GetTypeInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32@)\n  id: GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _FieldInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Points to a location that receives the number of type information interfaces provided by the object.\n  overload: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.GetValue(System.Object)\n  id: GetValue(System.Object)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: GetValue(Object)\n  nameWithType: _FieldInfo.GetValue(Object)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetValue(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.GetValue*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.GetValue%2A> method returns the value of a field supported by a given object.\"\n  syntax:\n    content: public object GetValue (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose field value will be returned.\n    return:\n      type: System.Object\n      description: An object containing the value of the field reflected by this instance.\n  overload: System.Runtime.InteropServices._FieldInfo.GetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.GetValueDirect(System.TypedReference)\n  id: GetValueDirect(System.TypedReference)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: GetValueDirect(TypedReference)\n  nameWithType: _FieldInfo.GetValueDirect(TypedReference)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetValueDirect(TypedReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.GetValueDirect*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.GetValueDirect%2A> method returns the value of a field supported by a given object.\"\n  syntax:\n    content: public object GetValueDirect (TypedReference obj);\n    parameters:\n    - id: obj\n      type: System.TypedReference\n      description: A <xref href=\"System.TypedReference\"></xref> structure that encapsulates a managed pointer to a location and a runtime representation of the type that might be stored at that location.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> containing a field value.\n  overload: System.Runtime.InteropServices._FieldInfo.GetValueDirect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Identifies the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Runtime.InteropServices._FieldInfo.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsAssembly\n  id: IsAssembly\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsAssembly\n  nameWithType: _FieldInfo.IsAssembly\n  fullName: System.Runtime.InteropServices._FieldInfo.IsAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsAssembly*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsAssembly%2A> property gets a value indicating whether this field has `Assembly` level visibility.\"\n  syntax:\n    content: public bool IsAssembly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_Assembly\" name=\"Assembly\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsDefined(Type,Boolean)\n  nameWithType: _FieldInfo.IsDefined(Type,Boolean)\n  fullName: System.Runtime.InteropServices._FieldInfo.IsDefined(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of `attributeType` is applied to this member.\"\n  syntax:\n    content: public bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The <xref:System.Type> object to which the custom attributes are applied.\n    - id: inherit\n      type: System.Boolean\n      description: Specifies whether to search this member's inheritance chain to find the attributes.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if one or more instance of <code>attributeType</code> is applied to this member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsDefined*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsFamily\n  id: IsFamily\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsFamily\n  nameWithType: _FieldInfo.IsFamily\n  fullName: System.Runtime.InteropServices._FieldInfo.IsFamily\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsFamily*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsFamily%2A> property gets a value indicating whether this field has `Family` level visibility.\"\n  syntax:\n    content: public bool IsFamily { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_Family\" name=\"Family\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsFamily*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly\n  id: IsFamilyAndAssembly\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsFamilyAndAssembly\n  nameWithType: _FieldInfo.IsFamilyAndAssembly\n  fullName: System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> property gets a value indicating whether this field has `FamilyAndAssembly` level visibility.\"\n  syntax:\n    content: public bool IsFamilyAndAssembly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_FamANDAssem\" name=\"FamANDAssem\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly\n  id: IsFamilyOrAssembly\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsFamilyOrAssembly\n  nameWithType: _FieldInfo.IsFamilyOrAssembly\n  fullName: System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property gets a value indicating whether this field has `FamilyOrAssembly` level visibility.\"\n  syntax:\n    content: public bool IsFamilyOrAssembly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_FamORAssem\" name=\"FamORAssem\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsInitOnly\n  id: IsInitOnly\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsInitOnly\n  nameWithType: _FieldInfo.IsInitOnly\n  fullName: System.Runtime.InteropServices._FieldInfo.IsInitOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsInitOnly*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsInitOnly%2A> property gets a value indicating whether the field can only be set in the body of the constructor.\"\n  syntax:\n    content: public bool IsInitOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_InitOnly\" name=\"InitOnly\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsInitOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsLiteral\n  id: IsLiteral\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsLiteral\n  nameWithType: _FieldInfo.IsLiteral\n  fullName: System.Runtime.InteropServices._FieldInfo.IsLiteral\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsLiteral*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsLiteral%2A> property gets a value indicating whether the value is written at compile time and cannot be changed.\"\n  syntax:\n    content: public bool IsLiteral { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_Literal\" name=\"Literal\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsLiteral*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsNotSerialized\n  id: IsNotSerialized\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsNotSerialized\n  nameWithType: _FieldInfo.IsNotSerialized\n  fullName: System.Runtime.InteropServices._FieldInfo.IsNotSerialized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsNotSerialized*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsNotSerialized%2A> property gets a value indicating whether this field has the `NotSerialized` attribute.\"\n  syntax:\n    content: public bool IsNotSerialized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field has the <xref uid=\"langword_csharp_NotSerialized\" name=\"NotSerialized\" href=\"\"></xref> attribute set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsNotSerialized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl\n  id: IsPinvokeImpl\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsPinvokeImpl\n  nameWithType: _FieldInfo.IsPinvokeImpl\n  fullName: System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsPinvokeImpl*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A> property gets a value indicating whether the corresponding `PinvokeImpl` attribute is set in <xref:System.Reflection.FieldAttributes>.\"\n  syntax:\n    content: public bool IsPinvokeImpl { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_PinvokeImpl\" name=\"PinvokeImpl\" href=\"\"></xref> attribute is set in <xref:System.Reflection.FieldAttributes>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsPrivate\n  id: IsPrivate\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsPrivate\n  nameWithType: _FieldInfo.IsPrivate\n  fullName: System.Runtime.InteropServices._FieldInfo.IsPrivate\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsPrivate*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsPrivate%2A> property gets a value indicating whether the field is private.\"\n  syntax:\n    content: public bool IsPrivate { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the field is private; otherwise; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsPrivate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsPublic\n  id: IsPublic\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsPublic\n  nameWithType: _FieldInfo.IsPublic\n  fullName: System.Runtime.InteropServices._FieldInfo.IsPublic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsPublic*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsPublic%2A> property gets a value indicating whether the field is public.\"\n  syntax:\n    content: public bool IsPublic { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this field is public; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsPublic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsSpecialName\n  id: IsSpecialName\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsSpecialName\n  nameWithType: _FieldInfo.IsSpecialName\n  fullName: System.Runtime.InteropServices._FieldInfo.IsSpecialName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsSpecialName*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsSpecialName%2A> property gets a value indicating whether the corresponding `SpecialName` attribute is set in the <xref:System.Reflection.FieldAttributes> enumerator.\"\n  syntax:\n    content: public bool IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_SpecialName\" name=\"SpecialName\" href=\"\"></xref> attribute is set in <xref:System.Reflection.FieldAttributes>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsSpecialName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.IsStatic\n  id: IsStatic\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: IsStatic\n  nameWithType: _FieldInfo.IsStatic\n  fullName: System.Runtime.InteropServices._FieldInfo.IsStatic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.IsStatic*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.IsStatic%2A> property gets a value indicating whether the field is static.\"\n  syntax:\n    content: public bool IsStatic { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this field is static; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._FieldInfo.IsStatic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.MemberType\n  id: MemberType\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: _FieldInfo.MemberType\n  fullName: System.Runtime.InteropServices._FieldInfo.MemberType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.MemberType*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a field.\"\n  syntax:\n    content: public System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a field.\n  overload: System.Runtime.InteropServices._FieldInfo.MemberType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.Name\n  id: Name\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: _FieldInfo.Name\n  fullName: System.Runtime.InteropServices._FieldInfo.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the name of this member.\n  overload: System.Runtime.InteropServices._FieldInfo.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.ReflectedType\n  id: ReflectedType\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: ReflectedType\n  nameWithType: _FieldInfo.ReflectedType\n  fullName: System.Runtime.InteropServices._FieldInfo.ReflectedType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>.\"\n  syntax:\n    content: public Type ReflectedType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> object through which this object was obtained.\n  overload: System.Runtime.InteropServices._FieldInfo.ReflectedType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object)\n  id: SetValue(System.Object,System.Object)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: SetValue(Object,Object)\n  nameWithType: _FieldInfo.SetValue(Object,Object)\n  fullName: System.Runtime.InteropServices._FieldInfo.SetValue(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.SetValue*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the value of the field supported by the given object.\"\n  syntax:\n    content: public void SetValue (object obj, object value);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose field value will be set.\n    - id: value\n      type: System.Object\n      description: The value to assign to the field.\n  overload: System.Runtime.InteropServices._FieldInfo.SetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\n  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n  nameWithType: _FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n  fullName: System.Runtime.InteropServices._FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.SetValue*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the field supported by the given object.\"\n  syntax:\n    content: public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose field value will be set.\n    - id: value\n      type: System.Object\n      description: The value to assign to the field.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: A field of <xref href=\"System.Reflection.Binder\"></xref> that specifies the type of binding that is desired (for example, <xref uid=\"langword_csharp_Binder.CreateInstance\" name=\"Binder.CreateInstance\" href=\"\"></xref> or <xref uid=\"langword_csharp_Binder.ExactBinding\" name=\"Binder.ExactBinding\" href=\"\"></xref>).\n    - id: binder\n      type: System.Reflection.Binder\n      description: A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection. If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, then <xref uid=\"langword_csharp_Binder.DefaultBinding\" name=\"Binder.DefaultBinding\" href=\"\"></xref> is used.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The software preferences of a particular culture.\n  overload: System.Runtime.InteropServices._FieldInfo.SetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.SetValueDirect(System.TypedReference,System.Object)\n  id: SetValueDirect(System.TypedReference,System.Object)\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: SetValueDirect(TypedReference,Object)\n  nameWithType: _FieldInfo.SetValueDirect(TypedReference,Object)\n  fullName: System.Runtime.InteropServices._FieldInfo.SetValueDirect(TypedReference,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.SetValueDirect*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.SetValueDirect%2A> method sets the value of the field supported by the given object.\"\n  syntax:\n    content: public void SetValueDirect (TypedReference obj, object value);\n    parameters:\n    - id: obj\n      type: System.TypedReference\n      description: The object whose field value will be set.\n    - id: value\n      type: System.Object\n      description: The value to assign to the field.\n  overload: System.Runtime.InteropServices._FieldInfo.SetValueDirect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._FieldInfo.ToString\n  id: ToString\n  parent: System.Runtime.InteropServices._FieldInfo\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: _FieldInfo.ToString()\n  fullName: System.Runtime.InteropServices._FieldInfo.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code.\n  syntax:\n    content: public string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref:System.Object>.\n  overload: System.Runtime.InteropServices._FieldInfo.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices._FieldInfo.Attributes\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _FieldInfo.Attributes\n  fullName: System.Runtime.InteropServices._FieldInfo.Attributes\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: true\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Runtime.InteropServices._FieldInfo.DeclaringType\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _FieldInfo.DeclaringType\n  fullName: System.Runtime.InteropServices._FieldInfo.DeclaringType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices._FieldInfo.Equals(System.Object)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: _FieldInfo.Equals(Object)\n  fullName: System.Runtime.InteropServices._FieldInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices._FieldInfo.FieldHandle\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: FieldHandle\n  nameWithType: _FieldInfo.FieldHandle\n  fullName: System.Runtime.InteropServices._FieldInfo.FieldHandle\n- uid: System.RuntimeFieldHandle\n  parent: System\n  isExternal: true\n  name: RuntimeFieldHandle\n  nameWithType: RuntimeFieldHandle\n  fullName: System.RuntimeFieldHandle\n- uid: System.Runtime.InteropServices._FieldInfo.FieldType\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: FieldType\n  nameWithType: _FieldInfo.FieldType\n  fullName: System.Runtime.InteropServices._FieldInfo.FieldType\n- uid: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _FieldInfo.GetCustomAttributes(Boolean)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: _FieldInfo.GetCustomAttributes(Type,Boolean)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(Type,Boolean)\n- uid: System.Runtime.InteropServices._FieldInfo.GetHashCode\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: _FieldInfo.GetHashCode()\n  fullName: System.Runtime.InteropServices._FieldInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: true\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Runtime.InteropServices._FieldInfo.GetType\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetType()\n  nameWithType: _FieldInfo.GetType()\n  fullName: System.Runtime.InteropServices._FieldInfo.GetType()\n- uid: System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _FieldInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)\n- uid: System.Runtime.InteropServices._FieldInfo.GetValue(System.Object)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetValue(Object)\n  nameWithType: _FieldInfo.GetValue(Object)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetValue(Object)\n- uid: System.Runtime.InteropServices._FieldInfo.GetValueDirect(System.TypedReference)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetValueDirect(TypedReference)\n  nameWithType: _FieldInfo.GetValueDirect(TypedReference)\n  fullName: System.Runtime.InteropServices._FieldInfo.GetValueDirect(TypedReference)\n- uid: System.TypedReference\n  parent: System\n  isExternal: false\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n- uid: System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Runtime.InteropServices._FieldInfo.IsAssembly\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsAssembly\n  nameWithType: _FieldInfo.IsAssembly\n  fullName: System.Runtime.InteropServices._FieldInfo.IsAssembly\n- uid: System.Runtime.InteropServices._FieldInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsDefined(Type,Boolean)\n  nameWithType: _FieldInfo.IsDefined(Type,Boolean)\n  fullName: System.Runtime.InteropServices._FieldInfo.IsDefined(Type,Boolean)\n- uid: System.Runtime.InteropServices._FieldInfo.IsFamily\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsFamily\n  nameWithType: _FieldInfo.IsFamily\n  fullName: System.Runtime.InteropServices._FieldInfo.IsFamily\n- uid: System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsFamilyAndAssembly\n  nameWithType: _FieldInfo.IsFamilyAndAssembly\n  fullName: System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly\n- uid: System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsFamilyOrAssembly\n  nameWithType: _FieldInfo.IsFamilyOrAssembly\n  fullName: System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly\n- uid: System.Runtime.InteropServices._FieldInfo.IsInitOnly\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsInitOnly\n  nameWithType: _FieldInfo.IsInitOnly\n  fullName: System.Runtime.InteropServices._FieldInfo.IsInitOnly\n- uid: System.Runtime.InteropServices._FieldInfo.IsLiteral\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsLiteral\n  nameWithType: _FieldInfo.IsLiteral\n  fullName: System.Runtime.InteropServices._FieldInfo.IsLiteral\n- uid: System.Runtime.InteropServices._FieldInfo.IsNotSerialized\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsNotSerialized\n  nameWithType: _FieldInfo.IsNotSerialized\n  fullName: System.Runtime.InteropServices._FieldInfo.IsNotSerialized\n- uid: System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsPinvokeImpl\n  nameWithType: _FieldInfo.IsPinvokeImpl\n  fullName: System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl\n- uid: System.Runtime.InteropServices._FieldInfo.IsPrivate\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsPrivate\n  nameWithType: _FieldInfo.IsPrivate\n  fullName: System.Runtime.InteropServices._FieldInfo.IsPrivate\n- uid: System.Runtime.InteropServices._FieldInfo.IsPublic\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: _FieldInfo.IsPublic\n  fullName: System.Runtime.InteropServices._FieldInfo.IsPublic\n- uid: System.Runtime.InteropServices._FieldInfo.IsSpecialName\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _FieldInfo.IsSpecialName\n  fullName: System.Runtime.InteropServices._FieldInfo.IsSpecialName\n- uid: System.Runtime.InteropServices._FieldInfo.IsStatic\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsStatic\n  nameWithType: _FieldInfo.IsStatic\n  fullName: System.Runtime.InteropServices._FieldInfo.IsStatic\n- uid: System.Runtime.InteropServices._FieldInfo.MemberType\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _FieldInfo.MemberType\n  fullName: System.Runtime.InteropServices._FieldInfo.MemberType\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Runtime.InteropServices._FieldInfo.Name\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: Name\n  nameWithType: _FieldInfo.Name\n  fullName: System.Runtime.InteropServices._FieldInfo.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices._FieldInfo.ReflectedType\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _FieldInfo.ReflectedType\n  fullName: System.Runtime.InteropServices._FieldInfo.ReflectedType\n- uid: System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: SetValue(Object,Object)\n  nameWithType: _FieldInfo.SetValue(Object,Object)\n  fullName: System.Runtime.InteropServices._FieldInfo.SetValue(Object,Object)\n- uid: System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n  nameWithType: _FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n  fullName: System.Runtime.InteropServices._FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Runtime.InteropServices._FieldInfo.SetValueDirect(System.TypedReference,System.Object)\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: SetValueDirect(TypedReference,Object)\n  nameWithType: _FieldInfo.SetValueDirect(TypedReference,Object)\n  fullName: System.Runtime.InteropServices._FieldInfo.SetValueDirect(TypedReference,Object)\n- uid: System.Runtime.InteropServices._FieldInfo.ToString\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: ToString()\n  nameWithType: _FieldInfo.ToString()\n  fullName: System.Runtime.InteropServices._FieldInfo.ToString()\n- uid: System.Runtime.InteropServices._FieldInfo.Attributes*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _FieldInfo.Attributes\n- uid: System.Runtime.InteropServices._FieldInfo.DeclaringType*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _FieldInfo.DeclaringType\n- uid: System.Runtime.InteropServices._FieldInfo.Equals*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: Equals\n  nameWithType: _FieldInfo.Equals\n- uid: System.Runtime.InteropServices._FieldInfo.FieldHandle*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: FieldHandle\n  nameWithType: _FieldInfo.FieldHandle\n- uid: System.Runtime.InteropServices._FieldInfo.FieldType*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: FieldType\n  nameWithType: _FieldInfo.FieldType\n- uid: System.Runtime.InteropServices._FieldInfo.GetCustomAttributes*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: _FieldInfo.GetCustomAttributes\n- uid: System.Runtime.InteropServices._FieldInfo.GetHashCode*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: _FieldInfo.GetHashCode\n- uid: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetIDsOfNames\n  nameWithType: _FieldInfo.GetIDsOfNames\n- uid: System.Runtime.InteropServices._FieldInfo.GetType*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetType\n  nameWithType: _FieldInfo.GetType\n- uid: System.Runtime.InteropServices._FieldInfo.GetTypeInfo*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetTypeInfo\n  nameWithType: _FieldInfo.GetTypeInfo\n- uid: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetTypeInfoCount\n  nameWithType: _FieldInfo.GetTypeInfoCount\n- uid: System.Runtime.InteropServices._FieldInfo.GetValue*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetValue\n  nameWithType: _FieldInfo.GetValue\n- uid: System.Runtime.InteropServices._FieldInfo.GetValueDirect*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: GetValueDirect\n  nameWithType: _FieldInfo.GetValueDirect\n- uid: System.Runtime.InteropServices._FieldInfo.Invoke*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: Invoke\n  nameWithType: _FieldInfo.Invoke\n- uid: System.Runtime.InteropServices._FieldInfo.IsAssembly*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsAssembly\n  nameWithType: _FieldInfo.IsAssembly\n- uid: System.Runtime.InteropServices._FieldInfo.IsDefined*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsDefined\n  nameWithType: _FieldInfo.IsDefined\n- uid: System.Runtime.InteropServices._FieldInfo.IsFamily*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsFamily\n  nameWithType: _FieldInfo.IsFamily\n- uid: System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsFamilyAndAssembly\n  nameWithType: _FieldInfo.IsFamilyAndAssembly\n- uid: System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsFamilyOrAssembly\n  nameWithType: _FieldInfo.IsFamilyOrAssembly\n- uid: System.Runtime.InteropServices._FieldInfo.IsInitOnly*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsInitOnly\n  nameWithType: _FieldInfo.IsInitOnly\n- uid: System.Runtime.InteropServices._FieldInfo.IsLiteral*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsLiteral\n  nameWithType: _FieldInfo.IsLiteral\n- uid: System.Runtime.InteropServices._FieldInfo.IsNotSerialized*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsNotSerialized\n  nameWithType: _FieldInfo.IsNotSerialized\n- uid: System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsPinvokeImpl\n  nameWithType: _FieldInfo.IsPinvokeImpl\n- uid: System.Runtime.InteropServices._FieldInfo.IsPrivate*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsPrivate\n  nameWithType: _FieldInfo.IsPrivate\n- uid: System.Runtime.InteropServices._FieldInfo.IsPublic*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: _FieldInfo.IsPublic\n- uid: System.Runtime.InteropServices._FieldInfo.IsSpecialName*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _FieldInfo.IsSpecialName\n- uid: System.Runtime.InteropServices._FieldInfo.IsStatic*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: IsStatic\n  nameWithType: _FieldInfo.IsStatic\n- uid: System.Runtime.InteropServices._FieldInfo.MemberType*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _FieldInfo.MemberType\n- uid: System.Runtime.InteropServices._FieldInfo.Name*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: Name\n  nameWithType: _FieldInfo.Name\n- uid: System.Runtime.InteropServices._FieldInfo.ReflectedType*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _FieldInfo.ReflectedType\n- uid: System.Runtime.InteropServices._FieldInfo.SetValue*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: SetValue\n  nameWithType: _FieldInfo.SetValue\n- uid: System.Runtime.InteropServices._FieldInfo.SetValueDirect*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: SetValueDirect\n  nameWithType: _FieldInfo.SetValueDirect\n- uid: System.Runtime.InteropServices._FieldInfo.ToString*\n  parent: System.Runtime.InteropServices._FieldInfo\n  isExternal: false\n  name: ToString\n  nameWithType: _FieldInfo.ToString\n"}