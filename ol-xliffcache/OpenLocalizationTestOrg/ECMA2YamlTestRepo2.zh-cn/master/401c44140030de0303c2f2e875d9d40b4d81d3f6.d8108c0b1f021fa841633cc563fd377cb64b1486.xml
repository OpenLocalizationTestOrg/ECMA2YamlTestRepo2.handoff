{"nodes":[{"pos":[1292,1345],"content":"Loads an assembly, and runs all the installers in it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loads an assembly, and runs all the installers in it.","pos":[0,53]}]},{"pos":[4825,4933],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.AssemblyInstaller\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.Install.AssemblyInstaller\"></xref> class."},{"pos":[6680,6952],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.AssemblyInstaller\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, and specifies both the assembly to install and the command line to use when creating a new <bpt id=\"p2\">&lt;xref href=\"System.Configuration.Install.InstallContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.Install.AssemblyInstaller\"></xref> class, and specifies both the assembly to install and the command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object."},{"pos":[7155,7204],"content":"The <xref:System.Reflection.Assembly> to install.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Reflection.Assembly&gt; to install.","pos":[0,49],"source":"The <xref:System.Reflection.Assembly> to install."}]},{"pos":[7274,7443],"content":"The command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation. Can be a null value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The command line to use when creating a new <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.InstallContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the assembly's installation.","pos":[0,148],"source":"The command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation."},{"content":"Can be a null value.","pos":[149,169]}]},{"pos":[8089,8410],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.AssemblyInstaller\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, and specifies both the file name of the assembly to install and the command line to use when creating a new <bpt id=\"p2\">&lt;xref href=\"System.Configuration.Install.InstallContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object for the assembly's installation.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.Install.AssemblyInstaller\"></xref> class, and specifies both the file name of the assembly to install and the command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation."},{"pos":[9188,9229],"content":"The file name of the assembly to install.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name of the assembly to install.","pos":[0,41]}]},{"pos":[9299,9468],"content":"The command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation. Can be a null value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The command line to use when creating a new <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.InstallContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the assembly's installation.","pos":[0,148],"source":"The command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation."},{"content":"Can be a null value.","pos":[149,169]}]},{"pos":[9975,10012],"content":"Gets or sets the assembly to install.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the assembly to install.","pos":[0,37]}]},{"pos":[10163,10237],"content":"An <xref:System.Reflection.Assembly> that defines the assembly to install.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Reflection.Assembly&gt; that defines the assembly to install.","pos":[0,74],"source":"An <xref:System.Reflection.Assembly> that defines the assembly to install."}]},{"pos":[10423,10506],"content":"The property value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The property value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11032,11089],"content":"Checks to see if the specified assembly can be installed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks to see if the specified assembly can be installed.","pos":[0,57]}]},{"pos":[11102,11873],"content":"The CheckIfInstallable method determines whether the specified assembly can be installed. To avoid an exception being thrown, the file must meet the following criteria:      -   The file exists.      -   The file is a .NET Framework assembly.      -   The public types can be read from the file.      -   There is at least one public, non abstract class that extends the <xref:System.Configuration.Install.Installer> class and contains the <xref:System.ComponentModel.RunInstallerAttribute.Yes> attribute.      -   An instance of each installer can be created.      > [!NOTE] >  If the assembly is valid but contains no installers, an exception is thrown. This behavior differs from that at install time, when it is not an error to install an empty assembly.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CheckIfInstallable method determines whether the specified assembly can be installed.","pos":[0,89]},{"content":"To avoid an exception being thrown, the file must meet the following criteria:      -   The file exists.","pos":[90,194]},{"content":"-   The file is a .NET Framework assembly.","pos":[200,242]},{"content":"-   The public types can be read from the file.","pos":[248,295]},{"content":"-   There is at least one public, non abstract class that extends the &lt;xref:System.Configuration.Install.Installer&gt; class and contains the &lt;xref:System.ComponentModel.RunInstallerAttribute.Yes&gt; attribute.","pos":[301,505],"source":"      -   There is at least one public, non abstract class that extends the <xref:System.Configuration.Install.Installer> class and contains the <xref:System.ComponentModel.RunInstallerAttribute.Yes> attribute."},{"content":"-   An instance of each installer can be created.","pos":[511,560]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the assembly is valid but contains no installers, an exception is thrown.","pos":[566,655],"source":"      > [!NOTE] >  If the assembly is valid but contains no installers, an exception is thrown."},{"content":"This behavior differs from that at install time, when it is not an error to install an empty assembly.","pos":[656,758]}]},{"pos":[12567,12614],"content":"The assembly in which to search for installers.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assembly in which to search for installers.","pos":[0,47]}]},{"pos":[12786,12829],"content":"The specified assembly cannot be installed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified assembly cannot be installed.","pos":[0,43]}]},{"pos":[13268,13429],"content":"Gets or sets the command line to use when creating a new <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.InstallContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the assembly's installation.","needQuote":true,"needEscape":true,"source":"Gets or sets the command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation."},{"pos":[14040,14242],"content":"An array of type &lt;xref:System.String&gt; that represents the command line to use when creating a new <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.InstallContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the assembly's installation.","needQuote":true,"needEscape":true,"source":"An array of type <xref:System.String> that represents the command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation."},{"pos":[14846,14885],"content":"Completes the installation transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes the installation transaction.","pos":[0,39]}]},{"pos":[14898,15430],"content":"This method is called only if the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> methods of all the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> succeed. This method then calls the Commit method of each installer in the collection.       Store any information that you might need to do a correct uninstall operation in the saved-state <xref:System.Collections.IDictionary>, which is passed to the <xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called only if the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> methods of all the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> succeed. This method then calls the Commit method of each installer in the collection.       Store any information that you might need to do a correct uninstall operation in the saved-state <xref:System.Collections.IDictionary>, which is passed to the <xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A> method.","pos":[0,530],"nodes":[{"content":"This method is called only if the &lt;xref:System.Configuration.Install.AssemblyInstaller.Install%2A&gt; methods of all the installers in this instance's &lt;xref:System.Configuration.Install.InstallerCollection&gt; succeed.","pos":[0,212],"source":"This method is called only if the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> methods of all the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> succeed."},{"content":"This method then calls the Commit method of each installer in the collection.","pos":[213,290]},{"content":"Store any information that you might need to do a correct uninstall operation in the saved-state &lt;xref:System.Collections.IDictionary&gt;, which is passed to the &lt;xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A&gt; method.","pos":[297,530],"source":"       Store any information that you might need to do a correct uninstall operation in the saved-state <xref:System.Collections.IDictionary>, which is passed to the <xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A> method."}]}]},{"pos":[16591,16734],"content":"An <xref:System.Collections.IDictionary> that contains the state of the computer after all the installers in the installer collection have run.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; that contains the state of the computer after all the installers in the installer collection have run.","pos":[0,143],"source":"An <xref:System.Collections.IDictionary> that contains the state of the computer after all the installers in the installer collection have run."}]},{"pos":[16911,17169],"content":"The <code>savedState</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The saved-state <xref:System.Collections.IDictionary> might have been corrupted.       -or-       A file could not be found.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">savedState</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,102],"source":"The <code>savedState</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The saved-state &lt;xref:System.Collections.IDictionary&gt; might have been corrupted.","pos":[109,200],"source":"       -or-       The saved-state <xref:System.Collections.IDictionary> might have been corrupted."},{"content":"-or-       A file could not be found.","pos":[207,244]}]},{"pos":[17250,17973],"content":"An error occurred in the <xref href=\"System.Configuration.Install.Installer.Committing\"></xref> event handler of one of the installers in the collection.       -or-       An error occurred in the <xref href=\"System.Configuration.Install.Installer.Committed\"></xref> event handler of one of the installers in the collection.       -or-       An exception occurred during the Commit phase of the installation. The exception is ignored and the installation continues. However, the application might not function correctly after installation completes.       -or-       Installer types were not found in one of the assemblies.       -or-       An instance of one of the installer types could not be created.","needQuote":false,"needEscape":true,"nodes":[{"content":"An error occurred in the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.Installer.Committing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event handler of one of the installers in the collection.","pos":[0,153],"source":"An error occurred in the <xref href=\"System.Configuration.Install.Installer.Committing\"></xref> event handler of one of the installers in the collection."},{"content":"-or-       An error occurred in the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.Installer.Committed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event handler of one of the installers in the collection.","pos":[160,323],"source":"       -or-       An error occurred in the <xref href=\"System.Configuration.Install.Installer.Committed\"></xref> event handler of one of the installers in the collection."},{"content":"-or-       An exception occurred during the Commit phase of the installation.","pos":[330,407]},{"content":"The exception is ignored and the installation continues.","pos":[408,464]},{"content":"However, the application might not function correctly after installation completes.","pos":[465,548]},{"content":"-or-       Installer types were not found in one of the assemblies.","pos":[555,622]},{"content":"-or-       An instance of one of the installer types could not be created.","pos":[629,703]}]},{"pos":[18111,18318],"content":"An exception occurred during the Commit phase of the installation. The exception is ignored and the installation continues. However, the application might not function correctly after installation completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An exception occurred during the Commit phase of the installation. The exception is ignored and the installation continues. However, the application might not function correctly after installation completes.","pos":[0,207],"nodes":[{"content":"An exception occurred during the Commit phase of the installation.","pos":[0,66]},{"content":"The exception is ignored and the installation continues.","pos":[67,123]},{"content":"However, the application might not function correctly after installation completes.","pos":[124,207]}]}]},{"pos":[18742,18812],"content":"Gets the help text for all the installers in the installer collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the help text for all the installers in the installer collection.","pos":[0,70]}]},{"pos":[18824,18893],"content":"An example of an installation program is the InstallUtil.exe utility.","needQuote":true,"needEscape":true,"nodes":[{"content":"An example of an installation program is the InstallUtil.exe utility.","pos":[0,69]}]},{"pos":[19481,19716],"content":"The help text for all the installers in the installer collection, including the description of what each installer does and the command-line options (for the installation program) that can be passed to and understood by each installer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The help text for all the installers in the installer collection, including the description of what each installer does and the command-line options (for the installation program) that can be passed to and understood by each installer.","pos":[0,235]}]},{"pos":[20322,20348],"content":"Performs the installation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs the installation.","pos":[0,26]}]},{"pos":[20360,20922],"content":"This method calls the Install method of each installer contained in the <xref:System.Configuration.Install.Installer.Installers%2A> property of this instance. The <xref:System.Collections.IDictionary> object specified by the `savedState` parameter is updated to reflect the status of the installation after the contained installers have run. If all the Install methods succeed, the <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> method is called. Otherwise, the <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method calls the Install method of each installer contained in the &lt;xref:System.Configuration.Install.Installer.Installers%2A&gt; property of this instance.","pos":[0,158],"source":"This method calls the Install method of each installer contained in the <xref:System.Configuration.Install.Installer.Installers%2A> property of this instance."},{"content":"The &lt;xref:System.Collections.IDictionary&gt; object specified by the <ph id=\"ph1\">`savedState`</ph> parameter is updated to reflect the status of the installation after the contained installers have run.","pos":[159,341],"source":" The <xref:System.Collections.IDictionary> object specified by the `savedState` parameter is updated to reflect the status of the installation after the contained installers have run."},{"content":"If all the Install methods succeed, the &lt;xref:System.Configuration.Install.AssemblyInstaller.Commit%2A&gt; method is called.","pos":[342,463],"source":" If all the Install methods succeed, the <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> method is called."},{"content":"Otherwise, the &lt;xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A&gt; method is called.","pos":[464,562],"source":" Otherwise, the <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> method is called."}]},{"pos":[22097,22224],"content":"An <xref:System.Collections.IDictionary> used to save information needed to perform a commit, rollback, or uninstall operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; used to save information needed to perform a commit, rollback, or uninstall operation.","pos":[0,127],"source":"An <xref:System.Collections.IDictionary> used to save information needed to perform a commit, rollback, or uninstall operation."}]},{"pos":[22402,22558],"content":"The <code>savedState</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       A file could not be found.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">savedState</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,102],"source":"The <code>savedState</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       A file could not be found.","pos":[109,146]}]},{"pos":[22639,23147],"content":"An exception occurred in the <xref href=\"System.Configuration.Install.Installer.BeforeInstall\"></xref> event handler of one of the installers in the collection.       -or-       An exception occurred in the <xref href=\"System.Configuration.Install.Installer.AfterInstall\"></xref> event handler of one of the installers in the collection.       -or-       Installer types were not found in one of the assemblies.       -or-       An instance of one of the installer types could not be created.","needQuote":false,"needEscape":true,"nodes":[{"content":"An exception occurred in the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.Installer.BeforeInstall\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event handler of one of the installers in the collection.","pos":[0,160],"source":"An exception occurred in the <xref href=\"System.Configuration.Install.Installer.BeforeInstall\"></xref> event handler of one of the installers in the collection."},{"content":"-or-       An exception occurred in the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.Installer.AfterInstall\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event handler of one of the installers in the collection.","pos":[167,337],"source":"       -or-       An exception occurred in the <xref href=\"System.Configuration.Install.Installer.AfterInstall\"></xref> event handler of one of the installers in the collection."},{"content":"-or-       Installer types were not found in one of the assemblies.","pos":[344,411]},{"content":"-or-       An instance of one of the installer types could not be created.","pos":[418,492]}]},{"pos":[23552,23601],"content":"Gets or sets the path of the assembly to install.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the path of the assembly to install.","pos":[0,49]}]},{"pos":[24291,24327],"content":"The path of the assembly to install.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path of the assembly to install.","pos":[0,36]}]},{"pos":[24934,25003],"content":"Restores the computer to the state it was in before the installation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Restores the computer to the state it was in before the installation.","pos":[0,69]}]},{"pos":[25015,25503],"content":"A rollback restores the computer to the state it was in before the installation occurred. The Rollback method is called if the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> method of this <xref:System.Configuration.Install.Installer> instance or of any installer in the installer collection fails to run correctly. Any exceptions generated by calling the Rollback method of an installer in the collection are ignored, and the rollback of the other installers continues.","needQuote":true,"needEscape":true,"nodes":[{"content":"A rollback restores the computer to the state it was in before the installation occurred. The Rollback method is called if the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> method of this <xref:System.Configuration.Install.Installer> instance or of any installer in the installer collection fails to run correctly. Any exceptions generated by calling the Rollback method of an installer in the collection are ignored, and the rollback of the other installers continues.","pos":[0,488],"nodes":[{"content":"A rollback restores the computer to the state it was in before the installation occurred.","pos":[0,89]},{"content":"The Rollback method is called if the &lt;xref:System.Configuration.Install.AssemblyInstaller.Install%2A&gt; method of this &lt;xref:System.Configuration.Install.Installer&gt; instance or of any installer in the installer collection fails to run correctly.","pos":[90,333],"source":" The Rollback method is called if the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> method of this <xref:System.Configuration.Install.Installer> instance or of any installer in the installer collection fails to run correctly."},{"content":"Any exceptions generated by calling the Rollback method of an installer in the collection are ignored, and the rollback of the other installers continues.","pos":[334,488]}]}]},{"pos":[26135,26233],"content":"An <xref:System.Collections.IDictionary> that contains the pre-installation state of the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; that contains the pre-installation state of the computer.","pos":[0,98],"source":"An <xref:System.Collections.IDictionary> that contains the pre-installation state of the computer."}]},{"pos":[26412,26670],"content":"The <code>savedState</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The saved-state <xref:System.Collections.IDictionary> might have been corrupted.       -or-       A file could not be found.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">savedState</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,102],"source":"The <code>savedState</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The saved-state &lt;xref:System.Collections.IDictionary&gt; might have been corrupted.","pos":[109,200],"source":"       -or-       The saved-state <xref:System.Collections.IDictionary> might have been corrupted."},{"content":"-or-       A file could not be found.","pos":[207,244]}]},{"pos":[26751,27505],"content":"An exception occurred in the <xref href=\"System.Configuration.Install.Installer.BeforeRollback\"></xref> event handler of one of the installers in the collection.       -or-       An exception occurred in the <xref href=\"System.Configuration.Install.Installer.AfterRollback\"></xref> event handler of one of the installers in the collection.       -or-       An exception occurred during the Rollback phase of the installation. The exception is ignored and the rollback continues. However, the computer might not be fully reverted to its initial state after the rollback completes.       -or-       Installer types were not found in one of the assemblies.       -or-       An instance of one of the installer types could not be created.","needQuote":false,"needEscape":true,"nodes":[{"content":"An exception occurred in the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.Installer.BeforeRollback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event handler of one of the installers in the collection.","pos":[0,161],"source":"An exception occurred in the <xref href=\"System.Configuration.Install.Installer.BeforeRollback\"></xref> event handler of one of the installers in the collection."},{"content":"-or-       An exception occurred in the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.Installer.AfterRollback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event handler of one of the installers in the collection.","pos":[168,339],"source":"       -or-       An exception occurred in the <xref href=\"System.Configuration.Install.Installer.AfterRollback\"></xref> event handler of one of the installers in the collection."},{"content":"-or-       An exception occurred during the Rollback phase of the installation.","pos":[346,425]},{"content":"The exception is ignored and the rollback continues.","pos":[426,478]},{"content":"However, the computer might not be fully reverted to its initial state after the rollback completes.","pos":[479,579]},{"content":"-or-       Installer types were not found in one of the assemblies.","pos":[586,653]},{"content":"-or-       An instance of one of the installer types could not be created.","pos":[660,734]}]},{"pos":[27643,27865],"content":"An exception occurred during the Rollback phase of the installation. The exception is ignored and the rollback continues. However, the computer might not be fully reverted to its initial state after the rollback completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An exception occurred during the Rollback phase of the installation. The exception is ignored and the rollback continues. However, the computer might not be fully reverted to its initial state after the rollback completes.","pos":[0,222],"nodes":[{"content":"An exception occurred during the Rollback phase of the installation.","pos":[0,68]},{"content":"The exception is ignored and the rollback continues.","pos":[69,121]},{"content":"However, the computer might not be fully reverted to its initial state after the rollback completes.","pos":[122,222]}]}]},{"pos":[28395,28419],"content":"Removes an installation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes an installation.","pos":[0,24]}]},{"pos":[28432,29203],"content":"Call this method to remove a previously completed installation. If the <xref:System.Configuration.Install.Installer.Uninstall%2A> method fails for one of the installers in the collection, it is still called for the remaining installers. A failed uninstallation does not roll back the computer to its pre-uninstallation state.      > [!NOTE] >  Although the <xref:System.Configuration.Install.Installer.Install%2A> and <xref:System.Configuration.Install.Installer.Commit%2A> methods save the state of the computer after the installations, the file containing the <xref:System.Collections.IDictionary> from the `savedState` parameter might have been deleted at some point after the installation was complete. If the file is deleted, the `savedState` parameter is `null`.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call this method to remove a previously completed installation.","pos":[0,63]},{"content":"If the &lt;xref:System.Configuration.Install.Installer.Uninstall%2A&gt; method fails for one of the installers in the collection, it is still called for the remaining installers.","pos":[64,236],"source":" If the <xref:System.Configuration.Install.Installer.Uninstall%2A> method fails for one of the installers in the collection, it is still called for the remaining installers."},{"content":"A failed uninstallation does not roll back the computer to its pre-uninstallation state.","pos":[237,325]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Although the &lt;xref:System.Configuration.Install.Installer.Install%2A&gt; and &lt;xref:System.Configuration.Install.Installer.Commit%2A&gt; methods save the state of the computer after the installations, the file containing the &lt;xref:System.Collections.IDictionary&gt; from the <ph id=\"ph2\">`savedState`</ph> parameter might have been deleted at some point after the installation was complete.","pos":[331,706],"source":"      > [!NOTE] >  Although the <xref:System.Configuration.Install.Installer.Install%2A> and <xref:System.Configuration.Install.Installer.Commit%2A> methods save the state of the computer after the installations, the file containing the <xref:System.Collections.IDictionary> from the `savedState` parameter might have been deleted at some point after the installation was complete."},{"content":"If the file is deleted, the <ph id=\"ph1\">`savedState`</ph> parameter is <ph id=\"ph2\">`null`</ph>.","pos":[707,768],"source":" If the file is deleted, the `savedState` parameter is `null`."}]},{"pos":[29875,29974],"content":"An <xref:System.Collections.IDictionary> that contains the post-installation state of the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; that contains the post-installation state of the computer.","pos":[0,99],"source":"An <xref:System.Collections.IDictionary> that contains the post-installation state of the computer."}]},{"pos":[30154,30282],"content":"The saved-state <xref:System.Collections.IDictionary> might have been corrupted.       -or-       A file could not be found.","needQuote":false,"needEscape":true,"nodes":[{"content":"The saved-state <xref:System.Collections.IDictionary> might have been corrupted.       -or-       A file could not be found.","pos":[0,124],"nodes":[{"content":"The saved-state &lt;xref:System.Collections.IDictionary&gt; might have been corrupted.","pos":[0,80],"source":"The saved-state <xref:System.Collections.IDictionary> might have been corrupted."},{"content":"-or-       A file could not be found.","pos":[87,124]}]}]},{"pos":[30363,31121],"content":"An error occurred in the <xref href=\"System.Configuration.Install.Installer.BeforeUninstall\"></xref> event handler of one of the installers in the collection.       -or-       An error occurred in the <xref href=\"System.Configuration.Install.Installer.AfterUninstall\"></xref> event handler of one of the installers in the collection.       -or-       An exception occurred while uninstalling. The exception is ignored and the uninstall continues. However, the application might not be fully uninstalled after the uninstall completes.       -or-       Installer types were not found in one of the assemblies.       -or-       An instance of one of the installer types could not be created.       -or-       A file could not be deleted.","needQuote":false,"needEscape":true,"nodes":[{"content":"An error occurred in the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.Installer.BeforeUninstall\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event handler of one of the installers in the collection.","pos":[0,158],"source":"An error occurred in the <xref href=\"System.Configuration.Install.Installer.BeforeUninstall\"></xref> event handler of one of the installers in the collection."},{"content":"-or-       An error occurred in the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.Installer.AfterUninstall\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event handler of one of the installers in the collection.","pos":[165,333],"source":"       -or-       An error occurred in the <xref href=\"System.Configuration.Install.Installer.AfterUninstall\"></xref> event handler of one of the installers in the collection."},{"content":"-or-       An exception occurred while uninstalling.","pos":[340,392]},{"content":"The exception is ignored and the uninstall continues.","pos":[393,446]},{"content":"However, the application might not be fully uninstalled after the uninstall completes.","pos":[447,533]},{"content":"-or-       Installer types were not found in one of the assemblies.","pos":[540,607]},{"content":"-or-       An instance of one of the installer types could not be created.","pos":[614,688]},{"content":"-or-       A file could not be deleted.","pos":[695,734]}]},{"pos":[31259,31441],"content":"An exception occurred while uninstalling. The exception is ignored and the uninstall continues. However, the application might not be fully uninstalled after the uninstall completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An exception occurred while uninstalling. The exception is ignored and the uninstall continues. However, the application might not be fully uninstalled after the uninstall completes.","pos":[0,182],"nodes":[{"content":"An exception occurred while uninstalling.","pos":[0,41]},{"content":"The exception is ignored and the uninstall continues.","pos":[42,95]},{"content":"However, the application might not be fully uninstalled after the uninstall completes.","pos":[96,182]}]}]},{"pos":[31890,32050],"content":"Gets or sets a value indicating whether to create a new <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.InstallContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the assembly's installation.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether to create a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation."},{"pos":[32062,32257],"content":"Setting this property to `true` creates a new file named \"{Assembly name}.InstallLog\" to log messages for this assembly. Setting UseNewContext to `false` prevents the new file from being created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Setting this property to <ph id=\"ph1\">`true`</ph> creates a new file named \"{Assembly name}.InstallLog\" to log messages for this assembly.","pos":[0,120],"source":"Setting this property to `true` creates a new file named \"{Assembly name}.InstallLog\" to log messages for this assembly."},{"content":"Setting UseNewContext to <ph id=\"ph1\">`false`</ph> prevents the new file from being created.","pos":[121,195],"source":" Setting UseNewContext to `false` prevents the new file from being created."}]},{"pos":[33153,33497],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object should be created for the assembly's installation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a new <bpt id=\"p2\">&lt;xref href=\"System.Configuration.Install.InstallContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object should be created for the assembly's installation; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,267],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object should be created for the assembly's installation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[268,344],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.Install.AssemblyInstaller\n  id: AssemblyInstaller\n  children:\n  - System.Configuration.Install.AssemblyInstaller.#ctor\n  - System.Configuration.Install.AssemblyInstaller.#ctor(System.Reflection.Assembly,System.String[])\n  - System.Configuration.Install.AssemblyInstaller.#ctor(System.String,System.String[])\n  - System.Configuration.Install.AssemblyInstaller.Assembly\n  - System.Configuration.Install.AssemblyInstaller.CheckIfInstallable(System.String)\n  - System.Configuration.Install.AssemblyInstaller.CommandLine\n  - System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)\n  - System.Configuration.Install.AssemblyInstaller.HelpText\n  - System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)\n  - System.Configuration.Install.AssemblyInstaller.Path\n  - System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)\n  - System.Configuration.Install.AssemblyInstaller.Uninstall(System.Collections.IDictionary)\n  - System.Configuration.Install.AssemblyInstaller.UseNewContext\n  langs:\n  - csharp\n  name: AssemblyInstaller\n  nameWithType: AssemblyInstaller\n  fullName: System.Configuration.Install.AssemblyInstaller\n  type: Class\n  summary: Loads an assembly, and runs all the installers in it.\n  remarks: ''\n  example:\n  - \"In the following example, an AssemblyInstaller is created by invoking the <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructor. The properties of this object are set and the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> and <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> methods are called to install the `MyAssembly.exe` assembly.  \\n  \\n [!code-cs[AssemblyInstaller#1](~/add/codesnippet/csharp/t-system.configuration.i_11_1.cs)]\\n [!code-cpp[AssemblyInstaller#1](~/add/codesnippet/cpp/t-system.configuration.i_11_1.cpp)]\\n [!code-vb[AssemblyInstaller#1](~/add/codesnippet/visualbasic/t-system.configuration.i_11_1.vb)]\"\n  syntax:\n    content: 'public class AssemblyInstaller : System.Configuration.Install.Installer'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Configuration.Install.Installer\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.Configuration.Install.Installer.AfterInstall\n  - System.Configuration.Install.Installer.AfterRollback\n  - System.Configuration.Install.Installer.AfterUninstall\n  - System.Configuration.Install.Installer.BeforeInstall\n  - System.Configuration.Install.Installer.BeforeRollback\n  - System.Configuration.Install.Installer.BeforeUninstall\n  - System.Configuration.Install.Installer.Committed\n  - System.Configuration.Install.Installer.Committing\n  - System.Configuration.Install.Installer.Context\n  - System.Configuration.Install.Installer.Installers\n  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.Parent\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.#ctor\n  id: '#ctor'\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: AssemblyInstaller()\n  nameWithType: AssemblyInstaller.AssemblyInstaller()\n  fullName: System.Configuration.Install.AssemblyInstaller.AssemblyInstaller()\n  type: Constructor\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.Install.AssemblyInstaller\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the AssemblyInstaller constructor and the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> and <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> methods of the <xref:System.Configuration.Install.AssemblyInstaller> class.  \\n  \\n An <xref:System.Configuration.Install.AssemblyInstaller> is created by invoking the AssemblyInstaller constructor. The properties of this object are set and the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> and <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> methods are called to install the `MyAssembly_Install.exe` assembly.  \\n  \\n [!code-cs[AssemblyInstaller_Install#2](~/add/codesnippet/csharp/m-system.configuration.i_9_1.cs)]\\n [!code-vb[AssemblyInstaller_Install#2](~/add/codesnippet/visualbasic/m-system.configuration.i_9_1.vb)]\\n [!code-cpp[AssemblyInstaller_Install#2](~/add/codesnippet/cpp/m-system.configuration.i_9_1.cpp)]\"\n  syntax:\n    content: public AssemblyInstaller ();\n    parameters: []\n  overload: System.Configuration.Install.AssemblyInstaller.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.#ctor(System.Reflection.Assembly,System.String[])\n  id: '#ctor(System.Reflection.Assembly,System.String[])'\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: AssemblyInstaller(Assembly,String[])\n  nameWithType: AssemblyInstaller.AssemblyInstaller(Assembly,String[])\n  fullName: System.Configuration.Install.AssemblyInstaller.AssemblyInstaller(Assembly,String[])\n  type: Constructor\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.Install.AssemblyInstaller\"></xref> class, and specifies both the assembly to install and the command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object.\n  syntax:\n    content: public AssemblyInstaller (System.Reflection.Assembly assembly, string[] commandLine);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The <xref:System.Reflection.Assembly> to install.\n    - id: commandLine\n      type: System.String[]\n      description: The command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation. Can be a null value.\n  overload: System.Configuration.Install.AssemblyInstaller.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.#ctor(System.String,System.String[])\n  id: '#ctor(System.String,System.String[])'\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: AssemblyInstaller(String,String[])\n  nameWithType: AssemblyInstaller.AssemblyInstaller(String,String[])\n  fullName: System.Configuration.Install.AssemblyInstaller.AssemblyInstaller(String,String[])\n  type: Constructor\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.Install.AssemblyInstaller\"></xref> class, and specifies both the file name of the assembly to install and the command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation.\n  remarks: ''\n  example:\n  - \"In the following example, an <xref:System.Configuration.Install.AssemblyInstaller> is created by invoking the <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructor with the assembly to install and the command line argument array as parameters.  \\n  \\n [!code-cs[AssemblyInstaller_Uninstall#1](~/add/codesnippet/csharp/3b13fe45-0de3-4bd6-bd46-_1.cs)]\\n [!code-cpp[AssemblyInstaller_Uninstall#1](~/add/codesnippet/cpp/3b13fe45-0de3-4bd6-bd46-_1.cpp)]\\n [!code-vb[AssemblyInstaller_Uninstall#1](~/add/codesnippet/visualbasic/3b13fe45-0de3-4bd6-bd46-_1.vb)]\"\n  syntax:\n    content: public AssemblyInstaller (string fileName, string[] commandLine);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The file name of the assembly to install.\n    - id: commandLine\n      type: System.String[]\n      description: The command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation. Can be a null value.\n  overload: System.Configuration.Install.AssemblyInstaller.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.Assembly\n  id: Assembly\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: AssemblyInstaller.Assembly\n  fullName: System.Configuration.Install.AssemblyInstaller.Assembly\n  type: Property\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Gets or sets the assembly to install.\n  syntax:\n    content: public System.Reflection.Assembly Assembly { get; set; }\n    return:\n      type: System.Reflection.Assembly\n      description: An <xref:System.Reflection.Assembly> that defines the assembly to install.\n  overload: System.Configuration.Install.AssemblyInstaller.Assembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.CheckIfInstallable(System.String)\n  id: CheckIfInstallable(System.String)\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: CheckIfInstallable(String)\n  nameWithType: AssemblyInstaller.CheckIfInstallable(String)\n  fullName: System.Configuration.Install.AssemblyInstaller.CheckIfInstallable(String)\n  type: Method\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Checks to see if the specified assembly can be installed.\n  remarks: \"The CheckIfInstallable method determines whether the specified assembly can be installed. To avoid an exception being thrown, the file must meet the following criteria:  \\n  \\n-   The file exists.  \\n  \\n-   The file is a .NET Framework assembly.  \\n  \\n-   The public types can be read from the file.  \\n  \\n-   There is at least one public, non abstract class that extends the <xref:System.Configuration.Install.Installer> class and contains the <xref:System.ComponentModel.RunInstallerAttribute.Yes> attribute.  \\n  \\n-   An instance of each installer can be created.  \\n  \\n> [!NOTE]\\n>  If the assembly is valid but contains no installers, an exception is thrown. This behavior differs from that at install time, when it is not an error to install an empty assembly.\"\n  example:\n  - \"In the following example, the CheckIfInstallable method is applied to both an existent and nonexistent assembly and the results of the call are displayed to the console.  \\n  \\n [!code-cpp[AssemblyInstaller_CheckIfInstallable#1](~/add/codesnippet/cpp/e5260558-85d4-42b6-9d54-_1.cpp)]\\n [!code-vb[AssemblyInstaller_CheckIfInstallable#1](~/add/codesnippet/visualbasic/e5260558-85d4-42b6-9d54-_1.vb)]\\n [!code-cs[AssemblyInstaller_CheckIfInstallable#1](~/add/codesnippet/csharp/e5260558-85d4-42b6-9d54-_1.cs)]\"\n  syntax:\n    content: public static void CheckIfInstallable (string assemblyName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: The assembly in which to search for installers.\n  overload: System.Configuration.Install.AssemblyInstaller.CheckIfInstallable*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: The specified assembly cannot be installed.\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.CommandLine\n  id: CommandLine\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: CommandLine\n  nameWithType: AssemblyInstaller.CommandLine\n  fullName: System.Configuration.Install.AssemblyInstaller.CommandLine\n  type: Property\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Gets or sets the command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation.\n  remarks: ''\n  example:\n  - \"In the following example, the CommandLine property of an <xref:System.Configuration.Install.AssemblyInstaller> is set to the logfile name.  \\n  \\n [!code-cs[AssemblyInstaller_Rollback#3](~/add/codesnippet/csharp/p-system.configuration.i_13_1.cs)]\\n [!code-cpp[AssemblyInstaller_Rollback#3](~/add/codesnippet/cpp/p-system.configuration.i_13_1.cpp)]\\n [!code-vb[AssemblyInstaller_Rollback#3](~/add/codesnippet/visualbasic/p-system.configuration.i_13_1.vb)]\"\n  syntax:\n    content: public string[] CommandLine { get; set; }\n    return:\n      type: System.String[]\n      description: An array of type <xref:System.String> that represents the command line to use when creating a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation.\n  overload: System.Configuration.Install.AssemblyInstaller.CommandLine*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)\n  id: Commit(System.Collections.IDictionary)\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: Commit(IDictionary)\n  nameWithType: AssemblyInstaller.Commit(IDictionary)\n  fullName: System.Configuration.Install.AssemblyInstaller.Commit(IDictionary)\n  type: Method\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Completes the installation transaction.\n  remarks: \"This method is called only if the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> methods of all the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> succeed. This method then calls the Commit method of each installer in the collection.  \\n  \\n Store any information that you might need to do a correct uninstall operation in the saved-state <xref:System.Collections.IDictionary>, which is passed to the <xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A> method.\"\n  example:\n  - \"The following example demonstrates the <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructor and the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> and Commit methods of the <xref:System.Configuration.Install.AssemblyInstaller> class.  \\n  \\n An <xref:System.Configuration.Install.AssemblyInstaller> class is created by invoking the <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructor. The properties of this object are set and the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> and Commit methods are called to install the `MyAssembly_Install.exe` assembly.  \\n  \\n [!code-cs[AssemblyInstaller_Install#2](~/add/codesnippet/csharp/1a78872c-c18f-4fcc-962b-_1.cs)]\\n [!code-vb[AssemblyInstaller_Install#2](~/add/codesnippet/visualbasic/1a78872c-c18f-4fcc-962b-_1.vb)]\\n [!code-cpp[AssemblyInstaller_Install#2](~/add/codesnippet/cpp/1a78872c-c18f-4fcc-962b-_1.cpp)]\"\n  syntax:\n    content: public override void Commit (System.Collections.IDictionary savedState);\n    parameters:\n    - id: savedState\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> that contains the state of the computer after all the installers in the installer collection have run.\n  overload: System.Configuration.Install.AssemblyInstaller.Commit*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>savedState</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The saved-state <xref:System.Collections.IDictionary> might have been corrupted.  \\n  \\n -or-  \\n  \\n A file could not be found.\"\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"An error occurred in the <xref href=\\\"System.Configuration.Install.Installer.Committing\\\"></xref> event handler of one of the installers in the collection.  \\n  \\n -or-  \\n  \\n An error occurred in the <xref href=\\\"System.Configuration.Install.Installer.Committed\\\"></xref> event handler of one of the installers in the collection.  \\n  \\n -or-  \\n  \\n An exception occurred during the Commit phase of the installation. The exception is ignored and the installation continues. However, the application might not function correctly after installation completes.  \\n  \\n -or-  \\n  \\n Installer types were not found in one of the assemblies.  \\n  \\n -or-  \\n  \\n An instance of one of the installer types could not be created.\"\n  - type: System.Configuration.Install.InstallException\n    commentId: T:System.Configuration.Install.InstallException\n    description: An exception occurred during the Commit phase of the installation. The exception is ignored and the installation continues. However, the application might not function correctly after installation completes.\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.HelpText\n  id: HelpText\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: HelpText\n  nameWithType: AssemblyInstaller.HelpText\n  fullName: System.Configuration.Install.AssemblyInstaller.HelpText\n  type: Property\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Gets the help text for all the installers in the installer collection.\n  remarks: An example of an installation program is the InstallUtil.exe utility.\n  example:\n  - \"In the following sample, the HelpText property of an <xref:System.Configuration.Install.AssemblyInstaller> is displayed to the console.  \\n  \\n [!code-cpp[AssemblyInstaller_HelpText#2](~/add/codesnippet/cpp/p-system.configuration.i_8_1.cpp)]\\n [!code-cs[AssemblyInstaller_HelpText#2](~/add/codesnippet/csharp/p-system.configuration.i_8_1.cs)]\\n [!code-vb[AssemblyInstaller_HelpText#2](~/add/codesnippet/visualbasic/p-system.configuration.i_8_1.vb)]\"\n  syntax:\n    content: public override string HelpText { get; }\n    return:\n      type: System.String\n      description: The help text for all the installers in the installer collection, including the description of what each installer does and the command-line options (for the installation program) that can be passed to and understood by each installer.\n  overload: System.Configuration.Install.AssemblyInstaller.HelpText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)\n  id: Install(System.Collections.IDictionary)\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: Install(IDictionary)\n  nameWithType: AssemblyInstaller.Install(IDictionary)\n  fullName: System.Configuration.Install.AssemblyInstaller.Install(IDictionary)\n  type: Method\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Performs the installation.\n  remarks: This method calls the Install method of each installer contained in the <xref:System.Configuration.Install.Installer.Installers%2A> property of this instance. The <xref:System.Collections.IDictionary> object specified by the `savedState` parameter is updated to reflect the status of the installation after the contained installers have run. If all the Install methods succeed, the <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> method is called. Otherwise, the <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> method is called.\n  example:\n  - \"The following example demonstrates the <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructor and the Install and <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> methods of the <xref:System.Configuration.Install.AssemblyInstaller> class.  \\n  \\n An object of the <xref:System.Configuration.Install.AssemblyInstaller> class is created by invoking the <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructor. The properties of this object are set and the Install and <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> methods are called to install the 'MyAssembly_Install.exe' assembly.  \\n  \\n [!code-cs[AssemblyInstaller_Install#2](~/add/codesnippet/csharp/8e7aa37f-ec2e-44d8-9565-_1.cs)]\\n [!code-vb[AssemblyInstaller_Install#2](~/add/codesnippet/visualbasic/8e7aa37f-ec2e-44d8-9565-_1.vb)]\\n [!code-cpp[AssemblyInstaller_Install#2](~/add/codesnippet/cpp/8e7aa37f-ec2e-44d8-9565-_1.cpp)]\"\n  syntax:\n    content: public override void Install (System.Collections.IDictionary savedState);\n    parameters:\n    - id: savedState\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> used to save information needed to perform a commit, rollback, or uninstall operation.\n  overload: System.Configuration.Install.AssemblyInstaller.Install*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>savedState</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n A file could not be found.\"\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"An exception occurred in the <xref href=\\\"System.Configuration.Install.Installer.BeforeInstall\\\"></xref> event handler of one of the installers in the collection.  \\n  \\n -or-  \\n  \\n An exception occurred in the <xref href=\\\"System.Configuration.Install.Installer.AfterInstall\\\"></xref> event handler of one of the installers in the collection.  \\n  \\n -or-  \\n  \\n Installer types were not found in one of the assemblies.  \\n  \\n -or-  \\n  \\n An instance of one of the installer types could not be created.\"\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.Path\n  id: Path\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: Path\n  nameWithType: AssemblyInstaller.Path\n  fullName: System.Configuration.Install.AssemblyInstaller.Path\n  type: Property\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Gets or sets the path of the assembly to install.\n  remarks: ''\n  example:\n  - \"In the following example, an <xref:System.Configuration.Install.AssemblyInstaller> is created by invoking the <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructor. The Path properties of this object are set.  \\n  \\n [!code-cs[AssemblyInstaller_Rollback#2](~/add/codesnippet/csharp/p-system.configuration.i_4_1.cs)]\\n [!code-cpp[AssemblyInstaller_Rollback#2](~/add/codesnippet/cpp/p-system.configuration.i_4_1.cpp)]\\n [!code-vb[AssemblyInstaller_Rollback#2](~/add/codesnippet/visualbasic/p-system.configuration.i_4_1.vb)]\"\n  syntax:\n    content: public string Path { get; set; }\n    return:\n      type: System.String\n      description: The path of the assembly to install.\n  overload: System.Configuration.Install.AssemblyInstaller.Path*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)\n  id: Rollback(System.Collections.IDictionary)\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: Rollback(IDictionary)\n  nameWithType: AssemblyInstaller.Rollback(IDictionary)\n  fullName: System.Configuration.Install.AssemblyInstaller.Rollback(IDictionary)\n  type: Method\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Restores the computer to the state it was in before the installation.\n  remarks: A rollback restores the computer to the state it was in before the installation occurred. The Rollback method is called if the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> method of this <xref:System.Configuration.Install.Installer> instance or of any installer in the installer collection fails to run correctly. Any exceptions generated by calling the Rollback method of an installer in the collection are ignored, and the rollback of the other installers continues.\n  example:\n  - \"In the following sample, the Rollback method is called to undo the install process on the specified assembly.  \\n  \\n [!code-cs[AssemblyInstaller_Rollback#1](~/add/codesnippet/csharp/bc53a39c-e214-4f79-a081-_1.cs)]\\n [!code-cpp[AssemblyInstaller_Rollback#1](~/add/codesnippet/cpp/bc53a39c-e214-4f79-a081-_1.cpp)]\\n [!code-vb[AssemblyInstaller_Rollback#1](~/add/codesnippet/visualbasic/bc53a39c-e214-4f79-a081-_1.vb)]\"\n  syntax:\n    content: public override void Rollback (System.Collections.IDictionary savedState);\n    parameters:\n    - id: savedState\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> that contains the pre-installation state of the computer.\n  overload: System.Configuration.Install.AssemblyInstaller.Rollback*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>savedState</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The saved-state <xref:System.Collections.IDictionary> might have been corrupted.  \\n  \\n -or-  \\n  \\n A file could not be found.\"\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"An exception occurred in the <xref href=\\\"System.Configuration.Install.Installer.BeforeRollback\\\"></xref> event handler of one of the installers in the collection.  \\n  \\n -or-  \\n  \\n An exception occurred in the <xref href=\\\"System.Configuration.Install.Installer.AfterRollback\\\"></xref> event handler of one of the installers in the collection.  \\n  \\n -or-  \\n  \\n An exception occurred during the Rollback phase of the installation. The exception is ignored and the rollback continues. However, the computer might not be fully reverted to its initial state after the rollback completes.  \\n  \\n -or-  \\n  \\n Installer types were not found in one of the assemblies.  \\n  \\n -or-  \\n  \\n An instance of one of the installer types could not be created.\"\n  - type: System.Configuration.Install.InstallException\n    commentId: T:System.Configuration.Install.InstallException\n    description: An exception occurred during the Rollback phase of the installation. The exception is ignored and the rollback continues. However, the computer might not be fully reverted to its initial state after the rollback completes.\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.Uninstall(System.Collections.IDictionary)\n  id: Uninstall(System.Collections.IDictionary)\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: Uninstall(IDictionary)\n  nameWithType: AssemblyInstaller.Uninstall(IDictionary)\n  fullName: System.Configuration.Install.AssemblyInstaller.Uninstall(IDictionary)\n  type: Method\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Removes an installation.\n  remarks: \"Call this method to remove a previously completed installation. If the <xref:System.Configuration.Install.Installer.Uninstall%2A> method fails for one of the installers in the collection, it is still called for the remaining installers. A failed uninstallation does not roll back the computer to its pre-uninstallation state.  \\n  \\n> [!NOTE]\\n>  Although the <xref:System.Configuration.Install.Installer.Install%2A> and <xref:System.Configuration.Install.Installer.Commit%2A> methods save the state of the computer after the installations, the file containing the <xref:System.Collections.IDictionary> from the `savedState` parameter might have been deleted at some point after the installation was complete. If the file is deleted, the `savedState` parameter is `null`.\"\n  example:\n  - \"In the following sample, the Uninstall method is called after installing and committing the assembly passed as the parameter to the constructor.  \\n  \\n [!code-cs[AssemblyInstaller_Uninstall#2](~/add/codesnippet/csharp/bca960bf-b3ff-465a-8389-_1.cs)]\\n [!code-cpp[AssemblyInstaller_Uninstall#2](~/add/codesnippet/cpp/bca960bf-b3ff-465a-8389-_1.cpp)]\\n [!code-vb[AssemblyInstaller_Uninstall#2](~/add/codesnippet/visualbasic/bca960bf-b3ff-465a-8389-_1.vb)]\"\n  syntax:\n    content: public override void Uninstall (System.Collections.IDictionary savedState);\n    parameters:\n    - id: savedState\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> that contains the post-installation state of the computer.\n  overload: System.Configuration.Install.AssemblyInstaller.Uninstall*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The saved-state <xref:System.Collections.IDictionary> might have been corrupted.  \\n  \\n -or-  \\n  \\n A file could not be found.\"\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"An error occurred in the <xref href=\\\"System.Configuration.Install.Installer.BeforeUninstall\\\"></xref> event handler of one of the installers in the collection.  \\n  \\n -or-  \\n  \\n An error occurred in the <xref href=\\\"System.Configuration.Install.Installer.AfterUninstall\\\"></xref> event handler of one of the installers in the collection.  \\n  \\n -or-  \\n  \\n An exception occurred while uninstalling. The exception is ignored and the uninstall continues. However, the application might not be fully uninstalled after the uninstall completes.  \\n  \\n -or-  \\n  \\n Installer types were not found in one of the assemblies.  \\n  \\n -or-  \\n  \\n An instance of one of the installer types could not be created.  \\n  \\n -or-  \\n  \\n A file could not be deleted.\"\n  - type: System.Configuration.Install.InstallException\n    commentId: T:System.Configuration.Install.InstallException\n    description: An exception occurred while uninstalling. The exception is ignored and the uninstall continues. However, the application might not be fully uninstalled after the uninstall completes.\n  platform:\n  - net462\n- uid: System.Configuration.Install.AssemblyInstaller.UseNewContext\n  id: UseNewContext\n  parent: System.Configuration.Install.AssemblyInstaller\n  langs:\n  - csharp\n  name: UseNewContext\n  nameWithType: AssemblyInstaller.UseNewContext\n  fullName: System.Configuration.Install.AssemblyInstaller.UseNewContext\n  type: Property\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Gets or sets a value indicating whether to create a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object for the assembly's installation.\n  remarks: Setting this property to `true` creates a new file named \"{Assembly name}.InstallLog\" to log messages for this assembly. Setting UseNewContext to `false` prevents the new file from being created.\n  example:\n  - \"In the following example, an <xref:System.Configuration.Install.AssemblyInstaller> is created by invoking the <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructor. The UseNewContext property of this object is set to `true` and the <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> method is invoked on the `MyAssembly_HelpText.exe` assembly. Due to this, the log messages are displayed on the console.  \\n  \\n [!code-cpp[AssemblyInstaller_HelpText#1](~/add/codesnippet/cpp/p-system.configuration.i_11_1.cpp)]\\n [!code-cs[AssemblyInstaller_HelpText#1](~/add/codesnippet/csharp/p-system.configuration.i_11_1.cs)]\\n [!code-vb[AssemblyInstaller_HelpText#1](~/add/codesnippet/visualbasic/p-system.configuration.i_11_1.vb)]\"\n  syntax:\n    content: public bool UseNewContext { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a new <xref href=\"System.Configuration.Install.InstallContext\"></xref> object should be created for the assembly's installation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Configuration.Install.AssemblyInstaller.UseNewContext*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.Install.Installer\n  isExternal: false\n  name: System.Configuration.Install.Installer\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Exception\n  isExternal: true\n  name: System.Exception\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Configuration.Install.InstallException\n  parent: System.Configuration.Install\n  isExternal: false\n  name: InstallException\n  nameWithType: InstallException\n  fullName: System.Configuration.Install.InstallException\n- uid: System.Configuration.Install.AssemblyInstaller.#ctor\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: AssemblyInstaller()\n  nameWithType: AssemblyInstaller.AssemblyInstaller()\n  fullName: System.Configuration.Install.AssemblyInstaller.AssemblyInstaller()\n- uid: System.Configuration.Install.AssemblyInstaller.#ctor(System.Reflection.Assembly,System.String[])\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: AssemblyInstaller(Assembly,String[])\n  nameWithType: AssemblyInstaller.AssemblyInstaller(Assembly,String[])\n  fullName: System.Configuration.Install.AssemblyInstaller.AssemblyInstaller(Assembly,String[])\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Configuration.Install.AssemblyInstaller.#ctor(System.String,System.String[])\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: AssemblyInstaller(String,String[])\n  nameWithType: AssemblyInstaller.AssemblyInstaller(String,String[])\n  fullName: System.Configuration.Install.AssemblyInstaller.AssemblyInstaller(String,String[])\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.Install.AssemblyInstaller.Assembly\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Assembly\n  nameWithType: AssemblyInstaller.Assembly\n  fullName: System.Configuration.Install.AssemblyInstaller.Assembly\n- uid: System.Configuration.Install.AssemblyInstaller.CheckIfInstallable(System.String)\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: CheckIfInstallable(String)\n  nameWithType: AssemblyInstaller.CheckIfInstallable(String)\n  fullName: System.Configuration.Install.AssemblyInstaller.CheckIfInstallable(String)\n- uid: System.Configuration.Install.AssemblyInstaller.CommandLine\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: CommandLine\n  nameWithType: AssemblyInstaller.CommandLine\n  fullName: System.Configuration.Install.AssemblyInstaller.CommandLine\n- uid: System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Commit(IDictionary)\n  nameWithType: AssemblyInstaller.Commit(IDictionary)\n  fullName: System.Configuration.Install.AssemblyInstaller.Commit(IDictionary)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Configuration.Install.AssemblyInstaller.HelpText\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: HelpText\n  nameWithType: AssemblyInstaller.HelpText\n  fullName: System.Configuration.Install.AssemblyInstaller.HelpText\n- uid: System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Install(IDictionary)\n  nameWithType: AssemblyInstaller.Install(IDictionary)\n  fullName: System.Configuration.Install.AssemblyInstaller.Install(IDictionary)\n- uid: System.Configuration.Install.AssemblyInstaller.Path\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Path\n  nameWithType: AssemblyInstaller.Path\n  fullName: System.Configuration.Install.AssemblyInstaller.Path\n- uid: System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Rollback(IDictionary)\n  nameWithType: AssemblyInstaller.Rollback(IDictionary)\n  fullName: System.Configuration.Install.AssemblyInstaller.Rollback(IDictionary)\n- uid: System.Configuration.Install.AssemblyInstaller.Uninstall(System.Collections.IDictionary)\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Uninstall(IDictionary)\n  nameWithType: AssemblyInstaller.Uninstall(IDictionary)\n  fullName: System.Configuration.Install.AssemblyInstaller.Uninstall(IDictionary)\n- uid: System.Configuration.Install.AssemblyInstaller.UseNewContext\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: UseNewContext\n  nameWithType: AssemblyInstaller.UseNewContext\n  fullName: System.Configuration.Install.AssemblyInstaller.UseNewContext\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.Install.AssemblyInstaller.#ctor*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: AssemblyInstaller\n  nameWithType: AssemblyInstaller.AssemblyInstaller\n- uid: System.Configuration.Install.AssemblyInstaller.Assembly*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Assembly\n  nameWithType: AssemblyInstaller.Assembly\n- uid: System.Configuration.Install.AssemblyInstaller.CheckIfInstallable*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: CheckIfInstallable\n  nameWithType: AssemblyInstaller.CheckIfInstallable\n- uid: System.Configuration.Install.AssemblyInstaller.CommandLine*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: CommandLine\n  nameWithType: AssemblyInstaller.CommandLine\n- uid: System.Configuration.Install.AssemblyInstaller.Commit*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Commit\n  nameWithType: AssemblyInstaller.Commit\n- uid: System.Configuration.Install.AssemblyInstaller.HelpText*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: HelpText\n  nameWithType: AssemblyInstaller.HelpText\n- uid: System.Configuration.Install.AssemblyInstaller.Install*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Install\n  nameWithType: AssemblyInstaller.Install\n- uid: System.Configuration.Install.AssemblyInstaller.Path*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Path\n  nameWithType: AssemblyInstaller.Path\n- uid: System.Configuration.Install.AssemblyInstaller.Rollback*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Rollback\n  nameWithType: AssemblyInstaller.Rollback\n- uid: System.Configuration.Install.AssemblyInstaller.Uninstall*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: Uninstall\n  nameWithType: AssemblyInstaller.Uninstall\n- uid: System.Configuration.Install.AssemblyInstaller.UseNewContext*\n  parent: System.Configuration.Install.AssemblyInstaller\n  isExternal: false\n  name: UseNewContext\n  nameWithType: AssemblyInstaller.UseNewContext\n"}