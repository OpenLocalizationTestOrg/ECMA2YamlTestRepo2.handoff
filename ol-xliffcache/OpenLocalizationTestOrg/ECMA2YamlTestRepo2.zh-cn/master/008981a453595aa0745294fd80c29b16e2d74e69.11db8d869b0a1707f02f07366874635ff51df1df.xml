{"nodes":[{"pos":[3157,3292],"content":"Service activity that implements an operation defined by a <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> service contract.","needQuote":true,"needEscape":true,"source":"Service activity that implements an operation defined by a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service contract."},{"pos":[3305,5104],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The ReceiveActivity activity is used when a workflow implements an operation defined in a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service contract. The ReceiveActivity can implement an operation from an already defined service contract or can define the service contract and operation within the workflow itself. The latter is known as a workflow-first contract.       The ReceiveActivity activity supports a set of predefined message exchange patterns. These patterns include:      -   One-way receive           The client that sends the message does not expect the service to send a response. The contract operation should have a void return type.      -   Receive request - Send response           After a message is received and processed by the ReceiveActivity activity, a response is sent back to the client. When the contract operation has a void return type, an acknowledgement is sent back to the send activity.      -   Receive request - Send fault           After a message is received and processed by the ReceiveActivity activity, a response or a fault is sent back to the client.      > [!NOTE] >  To ensure that persistence performs properly and does not persist transient messages, make sure that child activities of the ReceiveActivity do not persist by themselves. This can occur if the child activities go idle when a persistence provider was created with `UnloadOnIdle` set to `true`, for instance.      > [!NOTE] >  This activity is part of [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]. For the equivalent activity in [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], see <xref:System.ServiceModel.Activities.Receive>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       The ReceiveActivity activity is used when a workflow implements an operation defined in a <ph id=\"ph4\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> service contract.","pos":[0,254],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The ReceiveActivity activity is used when a workflow implements an operation defined in a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service contract."},{"content":"The ReceiveActivity can implement an operation from an already defined service contract or can define the service contract and operation within the workflow itself.","pos":[255,419]},{"content":"The latter is known as a workflow-first contract.","pos":[420,469]},{"content":"The ReceiveActivity activity supports a set of predefined message exchange patterns.","pos":[476,560]},{"content":"These patterns include:      -   One-way receive           The client that sends the message does not expect the service to send a response.","pos":[561,701]},{"content":"The contract operation should have a void return type.","pos":[702,756]},{"content":"-   Receive request - Send response           After a message is received and processed by the ReceiveActivity activity, a response is sent back to the client.","pos":[762,921]},{"content":"When the contract operation has a void return type, an acknowledgement is sent back to the send activity.","pos":[922,1027]},{"content":"-   Receive request - Send fault           After a message is received and processed by the ReceiveActivity activity, a response or a fault is sent back to the client.","pos":[1033,1200]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To ensure that persistence performs properly and does not persist transient messages, make sure that child activities of the ReceiveActivity do not persist by themselves.","pos":[1206,1389],"source":"      > [!NOTE] >  To ensure that persistence performs properly and does not persist transient messages, make sure that child activities of the ReceiveActivity do not persist by themselves."},{"content":"This can occur if the child activities go idle when a persistence provider was created with <ph id=\"ph1\">`UnloadOnIdle`</ph> set to <ph id=\"ph2\">`true`</ph>, for instance.","pos":[1390,1525],"source":" This can occur if the child activities go idle when a persistence provider was created with `UnloadOnIdle` set to `true`, for instance."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This activity is part of <ph id=\"ph2\">[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]</ph>.","pos":[1531,1631],"source":"      > [!NOTE] >  This activity is part of [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]."},{"content":"For the equivalent activity in <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, see &lt;xref:System.ServiceModel.Activities.Receive&gt;.","pos":[1632,1776],"source":" For the equivalent activity in [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], see <xref:System.ServiceModel.Activities.Receive>."}]},{"pos":[13857,13961],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> class."},{"pos":[13973,14117],"content":"The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; constructor is typically invoked in the code-beside file created by the workflow designer.","pos":[0,144],"source":"The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer."}]},{"pos":[15081,15265],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, initializing its &lt;xref:System.Workflow.ComponentModel.Activity.Name*&gt; property.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> class, initializing its <xref:System.Workflow.ComponentModel.Activity.Name*> property."},{"pos":[15277,15421],"content":"The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; constructor is typically invoked in the code-beside file created by the workflow designer.","pos":[0,144],"source":"The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer."}]},{"pos":[15793,15837],"content":"The name to assign to the activity instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name to assign to the activity instance.","pos":[0,44]}]},{"pos":[16798,16810],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16909,16921],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17449,17537],"content":"Gets or sets whether the operation causes a new workflow service instance to be created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether the operation causes a new workflow service instance to be created.","pos":[0,88]}]},{"pos":[17550,18275],"content":"A <xref:System.Workflow.Activities.ReceiveActivity> activity that has CanCreateInstance set to `true` represents a service operation that, when invoked by a service client without being part of a conversation, causes a new instance of the service workflow to be created.       Service workflows that do not have a <xref:System.Workflow.Activities.ReceiveActivity> activity with CanCreateInstance set to `true` cannot be instantiated by a client using a service operation invocation. Such workflows can be created using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method of the associated <xref:System.Workflow.Runtime.WorkflowRuntime> object.       The default value for this property is `false`.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity that has CanCreateInstance set to <ph id=\"ph1\">`true`</ph> represents a service operation that, when invoked by a service client without being part of a conversation, causes a new instance of the service workflow to be created.","pos":[0,270],"source":"A <xref:System.Workflow.Activities.ReceiveActivity> activity that has CanCreateInstance set to `true` represents a service operation that, when invoked by a service client without being part of a conversation, causes a new instance of the service workflow to be created."},{"content":"Service workflows that do not have a &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity with CanCreateInstance set to <ph id=\"ph1\">`true`</ph> cannot be instantiated by a client using a service operation invocation.","pos":[277,482],"source":"       Service workflows that do not have a <xref:System.Workflow.Activities.ReceiveActivity> activity with CanCreateInstance set to `true` cannot be instantiated by a client using a service operation invocation."},{"content":"Such workflows can be created using the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt; method of the associated &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; object.","pos":[483,667],"source":" Such workflows can be created using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method of the associated <xref:System.Workflow.Runtime.WorkflowRuntime> object."},{"content":"The default value for this property is <ph id=\"ph1\">`false`</ph>.","pos":[674,721],"source":"       The default value for this property is `false`."}]},{"pos":[18690,18864],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a new workflow instance is created; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a new workflow instance is created; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19353,19400],"content":"Gets the context information for this activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the context information for this activity.","pos":[0,47]}]},{"pos":[19412,19577],"content":"Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.","pos":[0,165]}]},{"pos":[19969,20086],"content":"A &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains context information for this activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id=\"ph2\">&amp;gt;</ph> object that contains context information for this activity.","pos":[0,117],"source":"A &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains context information for this activity."}]},{"pos":[20590,20833],"content":"Represents a token that can be used to specify the context that should be used to correlate the exchange between a <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity and the client that the activity is communicating with.","needQuote":true,"needEscape":true,"source":"Represents a token that can be used to specify the context that should be used to correlate the exchange between a <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity and the client that the activity is communicating with."},{"pos":[20846,21484],"content":"Each ContextToken is defined within the scope of an owner activity. Users can model two distinct context tokens with the same name but different owner scopes. The value of the contexts associated with these context tokens are different at runtime.       By default, each workflow has an implicit root context token, scoped at the root activity level. The name of the root context token is '(RootContext)' and the <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> is `null`. If a <xref:System.Workflow.Activities.ReceiveActivity> activity does not have a ContextToken associated with it, the root context token is used.","needQuote":false,"needEscape":true,"nodes":[{"content":"Each ContextToken is defined within the scope of an owner activity.","pos":[0,67]},{"content":"Users can model two distinct context tokens with the same name but different owner scopes.","pos":[68,158]},{"content":"The value of the contexts associated with these context tokens are different at runtime.","pos":[159,247]},{"content":"By default, each workflow has an implicit root context token, scoped at the root activity level.","pos":[254,350]},{"content":"The name of the root context token is '(RootContext)' and the &lt;xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A&gt; is <ph id=\"ph1\">`null`</ph>.","pos":[351,491],"source":" The name of the root context token is '(RootContext)' and the <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> is `null`."},{"content":"If a &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity does not have a ContextToken associated with it, the root context token is used.","pos":[492,636],"source":" If a <xref:System.Workflow.Activities.ReceiveActivity> activity does not have a ContextToken associated with it, the root context token is used."}]},{"pos":[21965,22061],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ContextToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be used for correlation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Workflow.Activities.ContextToken\"></xref> that can be used for correlation."},{"pos":[22746,22758],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23727,23739],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23838,23850],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24354,24429],"content":"The exception that is returned when a receive activity completes execution.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is returned when a receive activity completes execution.","pos":[0,75]}]},{"pos":[24442,25199],"content":"If the FaultMessage property is set to an instance of type <xref:System.ServiceModel.FaultException>, the fault is returned to the client upon completion.       If an exception is thrown during the activity execution and the FaultMessage property is set, then the specified fault is returned to the client. If an exception is thrown during the activity execution and the FaultMessage property is set, and the associated operation has a <xref:System.ServiceModel.FaultContractAttribute> attribute that specifies a fault type that matches that of the FaultMessage property, then the channel is not faulted and the client can still communicate to the server. If the FaultMessage property is not set, the thrown exception is returned as a fault to the client.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the FaultMessage property is set to an instance of type <xref:System.ServiceModel.FaultException>, the fault is returned to the client upon completion.       If an exception is thrown during the activity execution and the FaultMessage property is set, then the specified fault is returned to the client. If an exception is thrown during the activity execution and the FaultMessage property is set, and the associated operation has a <xref:System.ServiceModel.FaultContractAttribute> attribute that specifies a fault type that matches that of the FaultMessage property, then the channel is not faulted and the client can still communicate to the server. If the FaultMessage property is not set, the thrown exception is returned as a fault to the client.","pos":[0,755],"nodes":[{"content":"If the FaultMessage property is set to an instance of type &lt;xref:System.ServiceModel.FaultException&gt;, the fault is returned to the client upon completion.","pos":[0,154],"source":"If the FaultMessage property is set to an instance of type <xref:System.ServiceModel.FaultException>, the fault is returned to the client upon completion."},{"content":"If an exception is thrown during the activity execution and the FaultMessage property is set, then the specified fault is returned to the client.","pos":[161,306]},{"content":"If an exception is thrown during the activity execution and the FaultMessage property is set, and the associated operation has a &lt;xref:System.ServiceModel.FaultContractAttribute&gt; attribute that specifies a fault type that matches that of the FaultMessage property, then the channel is not faulted and the client can still communicate to the server.","pos":[307,655],"source":" If an exception is thrown during the activity execution and the FaultMessage property is set, and the associated operation has a <xref:System.ServiceModel.FaultContractAttribute> attribute that specifies a fault type that matches that of the FaultMessage property, then the channel is not faulted and the client can still communicate to the server."},{"content":"If the FaultMessage property is not set, the thrown exception is returned as a fault to the client.","pos":[656,755]}]}]},{"pos":[25557,25657],"content":"A <xref:System.ServiceModel.FaultException> object that contains the fault message text and details.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.ServiceModel.FaultException&gt; object that contains the fault message text and details.","pos":[0,100],"source":"A <xref:System.ServiceModel.FaultException> object that contains the fault message text and details."}]},{"pos":[26203,26379],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*> property."},{"pos":[26392,27170],"content":"This dependency property can be used to set up a binding between the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property and a public workflow property/field of type <xref:System.ServiceModel.FaultException> or another activity's public property/field of the same type.       This dependency property can also be used to set the value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of a <xref:System.Workflow.Activities.ReceiveActivity> activity.       This dependency property can also be used to get the binding or value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of the <xref:System.Workflow.Activities.ReceiveActivity> activity.","needQuote":false,"needEscape":true,"nodes":[{"content":"This dependency property can be used to set up a binding between the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property and a public workflow property/field of type <xref:System.ServiceModel.FaultException> or another activity's public property/field of the same type.       This dependency property can also be used to set the value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of a <xref:System.Workflow.Activities.ReceiveActivity> activity.       This dependency property can also be used to get the binding or value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of the <xref:System.Workflow.Activities.ReceiveActivity> activity.","pos":[0,774],"nodes":[{"content":"This dependency property can be used to set up a binding between the receive activity's &lt;xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A&gt; property and a public workflow property/field of type &lt;xref:System.ServiceModel.FaultException&gt; or another activity's public property/field of the same type.","pos":[0,311],"source":"This dependency property can be used to set up a binding between the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property and a public workflow property/field of type <xref:System.ServiceModel.FaultException> or another activity's public property/field of the same type."},{"content":"This dependency property can also be used to set the value associated with the &lt;xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A&gt; property of a &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity.","pos":[318,536],"source":"       This dependency property can also be used to set the value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of a <xref:System.Workflow.Activities.ReceiveActivity> activity."},{"content":"This dependency property can also be used to get the binding or value associated with the &lt;xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A&gt; property of the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity.","pos":[543,774],"source":"       This dependency property can also be used to get the binding or value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of the <xref:System.Workflow.Activities.ReceiveActivity> activity."}]}]},{"pos":[27383,27395],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28054,28146],"content":"Static method that returns context information given an activity instance and context token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Static method that returns context information given an activity instance and context token.","pos":[0,92]}]},{"pos":[28158,28323],"content":"Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.","pos":[0,165]}]},{"pos":[28815,28875],"content":"Activity instance that context information is requested for.","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity instance that context information is requested for.","pos":[0,60]}]},{"pos":[28970,29009],"content":"The context token used by the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context token used by the activity.","pos":[0,39]}]},{"pos":[29121,29254],"content":"A dictionary based collection that contains <xref:System.Xml.XmlQualifiedName> keys and their associated <xref:System.String> values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary based collection that contains &lt;xref:System.Xml.XmlQualifiedName&gt; keys and their associated &lt;xref:System.String&gt; values.","pos":[0,133],"source":"A dictionary based collection that contains <xref:System.Xml.XmlQualifiedName> keys and their associated <xref:System.String> values."}]},{"pos":[29959,30051],"content":"Static method that returns context information given an activity instance and context token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Static method that returns context information given an activity instance and context token.","pos":[0,92]}]},{"pos":[30063,30228],"content":"Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.","pos":[0,165]}]},{"pos":[30712,30772],"content":"Activity instance that context information is requested for.","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity instance that context information is requested for.","pos":[0,60]}]},{"pos":[30840,30887],"content":"Name of the context token used by the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the context token used by the activity.","pos":[0,47]}]},{"pos":[30961,30998],"content":"The name of the owning activity name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the owning activity name.","pos":[0,37]}]},{"pos":[31110,31243],"content":"A dictionary-based collection that contains <xref:System.Xml.XmlQualifiedName> keys and their associated <xref:System.String> values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary-based collection that contains &lt;xref:System.Xml.XmlQualifiedName&gt; keys and their associated &lt;xref:System.String&gt; values.","pos":[0,133],"source":"A dictionary-based collection that contains <xref:System.Xml.XmlQualifiedName> keys and their associated <xref:System.String> values."}]},{"pos":[31870,32079],"content":"Static method that returns context information for the root context associated with a given activity instance. Context information is used for communication between a host application and the workflow service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Static method that returns context information for the root context associated with a given activity instance. Context information is used for communication between a host application and the workflow service.","pos":[0,209],"nodes":[{"content":"Static method that returns context information for the root context associated with a given activity instance.","pos":[0,110]},{"content":"Context information is used for communication between a host application and the workflow service.","pos":[111,209]}]}]},{"pos":[32091,32256],"content":"Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.","pos":[0,165]}]},{"pos":[32702,32730],"content":"The child activity instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child activity instance.","pos":[0,28]}]},{"pos":[32842,33155],"content":"A dictionary-based collection that contains <xref:System.Xml.XmlQualifiedName> keys and their associated <xref:System.String> values that represent context information for a root context. Barring custom instance creation logic, the message that triggers creation of a new instance is received in the root context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary-based collection that contains <xref:System.Xml.XmlQualifiedName> keys and their associated <xref:System.String> values that represent context information for a root context. Barring custom instance creation logic, the message that triggers creation of a new instance is received in the root context.","pos":[0,313],"nodes":[{"content":"A dictionary-based collection that contains &lt;xref:System.Xml.XmlQualifiedName&gt; keys and their associated &lt;xref:System.String&gt; values that represent context information for a root context.","pos":[0,187],"source":"A dictionary-based collection that contains <xref:System.Xml.XmlQualifiedName> keys and their associated <xref:System.String> values that represent context information for a root context."},{"content":"Barring custom instance creation logic, the message that triggers creation of a new instance is received in the root context.","pos":[188,313]}]}]},{"pos":[33798,34460],"content":"Returns the <xref href=\"System.Workflow.Activities.WorkflowServiceAttributes\"></xref> attributes for the service implemented by the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity. These attributes include items like the <xref:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode*>, the <xref:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName*>, the <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>, and whether to include exception details in any faults that are returned from the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.WorkflowServiceAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attributes for the service implemented by the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> activity.","pos":[0,205],"source":"Returns the <xref href=\"System.Workflow.Activities.WorkflowServiceAttributes\"></xref> attributes for the service implemented by the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity."},{"content":"These attributes include items like the &lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode<bpt id=\"p1\">*</bpt>&gt;, the &lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName<ept id=\"p1\">*</ept>&gt;, the &lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*&gt;, and whether to include exception details in any faults that are returned from the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> activity.","pos":[206,662],"source":" These attributes include items like the <xref:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode*>, the <xref:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName*>, the <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>, and whether to include exception details in any faults that are returned from the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity."}]},{"pos":[34473,35675],"content":"The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity. This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.       The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts. These cannot be modified at runtime.      > [!NOTE] >  If the current workflow starts another workflow using an <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity, the invoked workflow does not inherit the invoking workflow's service attributes.      > [!NOTE] >  If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes are used. Service attributes are only used for custom activities if the custom activity itself is run as a workflow.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty&gt; property is an attached dependency property defined by the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity.","pos":[0,206],"source":"The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity."},{"content":"This dependency property is attached to the root workflow that contains the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity using the &lt;xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A&gt; method call at design time.","pos":[207,461],"source":" This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time."},{"content":"The &lt;xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty&gt; property is used for defining service-level behavior attributes that are applied to the workflow service when it starts.","pos":[468,676],"source":"       The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts."},{"content":"These cannot be modified at runtime.","pos":[677,713]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the current workflow starts another workflow using an &lt;xref:System.Workflow.Activities.InvokeWorkflowActivity&gt; activity, the invoked workflow does not inherit the invoking workflow's service attributes.","pos":[719,937],"source":"      > [!NOTE] >  If the current workflow starts another workflow using an <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity, the invoked workflow does not inherit the invoking workflow's service attributes."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes are used.","pos":[943,1087],"source":"      > [!NOTE] >  If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes are used."},{"content":"Service attributes are only used for custom activities if the custom activity itself is run as a workflow.","pos":[1088,1194]}]},{"pos":[36058,36109],"content":"The object to retrieve the service attributes from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to retrieve the service attributes from.","pos":[0,51]}]},{"pos":[36167,36326],"content":"A &lt;xref:System.Object&gt; that represents a <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.WorkflowServiceAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains service attribute data.","needQuote":true,"needEscape":true,"source":"A <xref:System.Object> that represents a <xref href=\"System.Workflow.Activities.WorkflowServiceAttributes\"></xref> object that contains service attribute data."},{"pos":[37425,37437],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37506,37518],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37617,37629],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38395,38407],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40035,40047],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40594,40672],"content":"Occurs when a message is received for an operation and validation is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a message is received for an operation and validation is required.","pos":[0,78]}]},{"pos":[40685,41570],"content":"This is an optional event handler that is fired when the <xref:System.Workflow.Activities.ReceiveActivity> activity is about to receive a message. The associated handler can be used to perform ClaimSet-based security checks to authorize client invocation of the service operation implemented by the <xref:System.Workflow.Activities.ReceiveActivity> activity.       Setting <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName> to `false` in the event handler rejects the service operation invocation and the client receives a <xref:System.ServiceModel.FaultException>. If <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName> is set to `true`, then the service operation invocation succeeds and the <xref:System.Workflow.Activities.ReceiveActivity> activity receives and processes the message.","needQuote":false,"needEscape":true,"nodes":[{"content":"This is an optional event handler that is fired when the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity is about to receive a message.","pos":[0,146],"source":"This is an optional event handler that is fired when the <xref:System.Workflow.Activities.ReceiveActivity> activity is about to receive a message."},{"content":"The associated handler can be used to perform ClaimSet-based security checks to authorize client invocation of the service operation implemented by the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity.","pos":[147,358],"source":" The associated handler can be used to perform ClaimSet-based security checks to authorize client invocation of the service operation implemented by the <xref:System.Workflow.Activities.ReceiveActivity> activity."},{"content":"Setting &lt;xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName&gt; to <ph id=\"ph1\">`false`</ph> in the event handler rejects the service operation invocation and the client receives a &lt;xref:System.ServiceModel.FaultException&gt;.","pos":[365,613],"source":"       Setting <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName> to `false` in the event handler rejects the service operation invocation and the client receives a <xref:System.ServiceModel.FaultException>."},{"content":"If &lt;xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName&gt; is set to <ph id=\"ph1\">`true`</ph>, then the service operation invocation succeeds and the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity receives and processes the message.","pos":[614,883],"source":" If <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName> is set to `true`, then the service operation invocation succeeds and the <xref:System.Workflow.Activities.ReceiveActivity> activity receives and processes the message."}]},{"pos":[42002,42014],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42511,42704],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity.OperationValidation\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.ReceiveActivity.OperationValidation\"></xref> event."},{"pos":[42716,42914],"content":"This dependency event property can be used to bind the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation> event to a public event handler on the workflow class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This dependency event property can be used to bind the receive activity's &lt;xref:System.Workflow.Activities.ReceiveActivity.OperationValidation&gt; event to a public event handler on the workflow class.","pos":[0,198],"source":"This dependency event property can be used to bind the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation> event to a public event handler on the workflow class."}]},{"pos":[43130,43142],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43607,43698],"content":"Gets the collection of bindable parameters as found in the service's formal parameter list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of bindable parameters as found in the service's formal parameter list.","pos":[0,91]}]},{"pos":[43711,44670],"content":"ParameterBindings can be used to specify a binding between the service operation parameters and public field/properties of the workflow that contain the <xref:System.Workflow.Activities.ReceiveActivity> activity. When a client invokes the operation, the corresponding parameter values are written to bound workflow properties during the receive activity's execution.       ParameterBindings can also be used by the receive activity's child activities to read the parameter values passed in by client invocation. Child activities can use the ParameterBindings collection to set the return value of the parent <xref:System.Workflow.Activities.ReceiveActivity> activity.       All parameters of the service contract should be included in the `ParameterBindings` property. Unbound parameters cause compiler warnings upon compilation and an exception can occur when the <xref:System.Workflow.Activities.ReceiveActivity> returns this message back to the client.","needQuote":false,"needEscape":true,"nodes":[{"content":"ParameterBindings can be used to specify a binding between the service operation parameters and public field/properties of the workflow that contain the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity.","pos":[0,212],"source":"ParameterBindings can be used to specify a binding between the service operation parameters and public field/properties of the workflow that contain the <xref:System.Workflow.Activities.ReceiveActivity> activity."},{"content":"When a client invokes the operation, the corresponding parameter values are written to bound workflow properties during the receive activity's execution.","pos":[213,366]},{"content":"ParameterBindings can also be used by the receive activity's child activities to read the parameter values passed in by client invocation.","pos":[373,511]},{"content":"Child activities can use the ParameterBindings collection to set the return value of the parent &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity.","pos":[512,667],"source":" Child activities can use the ParameterBindings collection to set the return value of the parent <xref:System.Workflow.Activities.ReceiveActivity> activity."},{"content":"All parameters of the service contract should be included in the <ph id=\"ph1\">`ParameterBindings`</ph> property.","pos":[674,768],"source":"       All parameters of the service contract should be included in the `ParameterBindings` property."},{"content":"Unbound parameters cause compiler warnings upon compilation and an exception can occur when the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; returns this message back to the client.","pos":[769,955],"source":" Unbound parameters cause compiler warnings upon compilation and an exception can occur when the <xref:System.Workflow.Activities.ReceiveActivity> returns this message back to the client."}]},{"pos":[45195,45311],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowParameterBindingCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of parameters to bind to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.WorkflowParameterBindingCollection\"></xref> of parameters to bind to."},{"pos":[45865,46001],"content":"Defines the contract and service operation that the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity implements.","needQuote":true,"needEscape":true,"source":"Defines the contract and service operation that the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity implements."},{"pos":[46014,46535],"content":"The ServiceOperationInfo property can be set to an instance of type <xref:System.Workflow.Activities.TypedOperationInfo> or <xref:System.Workflow.Activities.OperationInfo>. <xref:System.Workflow.Activities.TypedOperationInfo> can be used to configure a receive activity using an existing [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service contract.       An instance of <xref:System.Workflow.Activities.OperationInfo> can be used to configure a receive activity for the workflow-first contract scenario.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ServiceOperationInfo property can be set to an instance of type &lt;xref:System.Workflow.Activities.TypedOperationInfo&gt; or &lt;xref:System.Workflow.Activities.OperationInfo&gt;.","pos":[0,172],"source":"The ServiceOperationInfo property can be set to an instance of type <xref:System.Workflow.Activities.TypedOperationInfo> or <xref:System.Workflow.Activities.OperationInfo>."},{"content":"&lt;xref:System.Workflow.Activities.TypedOperationInfo&gt; can be used to configure a receive activity using an existing <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> service contract.","pos":[173,364],"source":" <xref:System.Workflow.Activities.TypedOperationInfo> can be used to configure a receive activity using an existing [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service contract."},{"content":"An instance of &lt;xref:System.Workflow.Activities.OperationInfo&gt; can be used to configure a receive activity for the workflow-first contract scenario.","pos":[371,519],"source":"       An instance of <xref:System.Workflow.Activities.OperationInfo> can be used to configure a receive activity for the workflow-first contract scenario."}]},{"pos":[47029,47331],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.OperationInfoBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the contract name, the contract type, the operation name, (which could be distinct from method name), whether the operation is a one-way operation, and method information including parameters about the operation.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Workflow.Activities.OperationInfoBase\"></xref> object that contains the contract name, the contract type, the operation name, (which could be distinct from method name), whether the operation is a one-way operation, and method information including parameters about the operation."},{"pos":[48029,48517],"content":"Sets the attributes for the service implemented by the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity. These attributes include items like the <xref:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode*>, the <xref:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName*>, and whether to include exception details in any faults that are returned from the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the attributes for the service implemented by the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity.","pos":[0,128],"source":"Sets the attributes for the service implemented by the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity."},{"content":"These attributes include items like the &lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode<bpt id=\"p1\">*</bpt>&gt;, the &lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName<ept id=\"p1\">*</ept>&gt;, and whether to include exception details in any faults that are returned from the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> activity.","pos":[129,488],"source":" These attributes include items like the <xref:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode*>, the <xref:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName*>, and whether to include exception details in any faults that are returned from the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity."}]},{"pos":[48530,49680],"content":"The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity. This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the SetWorkflowServiceAttributes method call at design time.       The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts. These cannot be modified at runtime.      > [!NOTE] >  If the current workflow starts another workflow using a <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity, the invoked workflow does not inherit the invoking workflow's service attributes.      > [!NOTE] >  If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes is not used. Service attributes are only used in custom activities if the custom activity itself is run as a workflow.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty&gt; property is an attached dependency property defined by the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity.","pos":[0,206],"source":"The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity."},{"content":"This dependency property is attached to the root workflow that contains the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity using the SetWorkflowServiceAttributes method call at design time.","pos":[207,408],"source":" This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the SetWorkflowServiceAttributes method call at design time."},{"content":"The &lt;xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty&gt; property is used for defining service-level behavior attributes that are applied to the workflow service when it starts.","pos":[415,623],"source":"       The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts."},{"content":"These cannot be modified at runtime.","pos":[624,660]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the current workflow starts another workflow using a &lt;xref:System.Workflow.Activities.InvokeWorkflowActivity&gt; activity, the invoked workflow does not inherit the invoking workflow's service attributes.","pos":[666,883],"source":"      > [!NOTE] >  If the current workflow starts another workflow using a <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity, the invoked workflow does not inherit the invoking workflow's service attributes."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes is not used.","pos":[889,1036],"source":"      > [!NOTE] >  If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes is not used."},{"content":"Service attributes are only used in custom activities if the custom activity itself is run as a workflow.","pos":[1037,1142]}]},{"pos":[50075,50121],"content":"The object to apply the service attributes to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to apply the service attributes to.","pos":[0,46]}]},{"pos":[50183,50318],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.WorkflowServiceAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the service attribute data to apply.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.WorkflowServiceAttributes\"></xref> object that contains the service attribute data to apply."},{"pos":[51052,51184],"content":"Gets the name of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Runtime.WorkflowQueue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on which the activity is waiting for data to arrive.","needQuote":true,"needEscape":true,"source":"Gets the name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> on which the activity is waiting for data to arrive."},{"pos":[51343,51470],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Runtime.WorkflowQueue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on which the activity is waiting for data to arrive.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> on which the activity is waiting for data to arrive."},{"pos":[52736,52853],"content":"Creates the subscription of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity to an event.","needQuote":true,"needEscape":true,"source":"Creates the subscription of the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity to an event."},{"pos":[53228,53431],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the execution environment of the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ReceiveActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> activity.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity."},{"pos":[53593,53699],"content":"The <xref:System.EventHandler> that handles the event. This event handler is owned by the parent activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.EventHandler> that handles the event. This event handler is owned by the parent activity.","pos":[0,106],"nodes":[{"content":"The &lt;xref:System.EventHandler&gt; that handles the event.","pos":[0,54],"source":"The <xref:System.EventHandler> that handles the event."},{"content":"This event handler is owned by the parent activity.","pos":[55,106]}]}]},{"pos":[54975,55078],"content":"Cancels the subscription of a <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to an event.","needQuote":true,"needEscape":true,"source":"Cancels the subscription of a <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to an event."},{"pos":[55455,55666],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the execution environment of the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.WebServiceInputActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> activity.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the <xref href=\"System.Workflow.Activities.WebServiceInputActivity\"></xref> activity."},{"pos":[55828,55934],"content":"The <xref:System.EventHandler> that handles the event. This event handler is owned by the parent activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.EventHandler> that handles the event. This event handler is owned by the parent activity.","pos":[0,106],"nodes":[{"content":"The &lt;xref:System.EventHandler&gt; that handles the event.","pos":[0,54],"source":"The <xref:System.EventHandler> that handles the event."},{"content":"This event handler is owned by the parent activity.","pos":[55,106]}]}]},{"pos":[57210,57222],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57312,57324],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58031,58215],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*> property."},{"pos":[58228,58843],"content":"The WorkflowServiceAttributesProperty property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity. This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.       The WorkflowServiceAttributesProperty property is used for defining service-level behavior attributes that are applied to the workflow service when it starts. These cannot be modified at runtime.","needQuote":false,"needEscape":true,"nodes":[{"content":"The WorkflowServiceAttributesProperty property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity. This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.       The WorkflowServiceAttributesProperty property is used for defining service-level behavior attributes that are applied to the workflow service when it starts. These cannot be modified at runtime.","pos":[0,613],"nodes":[{"content":"The WorkflowServiceAttributesProperty property is an attached dependency property defined by the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity.","pos":[0,156],"source":"The WorkflowServiceAttributesProperty property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity."},{"content":"This dependency property is attached to the root workflow that contains the &lt;xref:System.Workflow.Activities.ReceiveActivity&gt; activity using the &lt;xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A&gt; method call at design time.","pos":[157,411],"source":" This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time."},{"content":"The WorkflowServiceAttributesProperty property is used for defining service-level behavior attributes that are applied to the workflow service when it starts.","pos":[418,576]},{"content":"These cannot be modified at runtime.","pos":[577,613]}]}]},{"pos":[59069,59081],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.ReceiveActivity\n  id: ReceiveActivity\n  children:\n  - System.Workflow.Activities.ReceiveActivity.#ctor\n  - System.Workflow.Activities.ReceiveActivity.#ctor(System.String)\n  - System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ReceiveActivity.CanCreateInstance\n  - System.Workflow.Activities.ReceiveActivity.Context\n  - System.Workflow.Activities.ReceiveActivity.ContextToken\n  - System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)\n  - System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ReceiveActivity.FaultMessage\n  - System.Workflow.Activities.ReceiveActivity.FaultMessageProperty\n  - System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)\n  - System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)\n  - System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)\n  - System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.Activities.ReceiveActivity.InitializeProperties\n  - System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ReceiveActivity.OperationValidation\n  - System.Workflow.Activities.ReceiveActivity.OperationValidationEvent\n  - System.Workflow.Activities.ReceiveActivity.ParameterBindings\n  - System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo\n  - System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)\n  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName\n  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  - System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)\n  - System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty\n  langs:\n  - csharp\n  name: ReceiveActivity\n  nameWithType: ReceiveActivity\n  fullName: System.Workflow.Activities.ReceiveActivity\n  type: Class\n  summary: Service activity that implements an operation defined by a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service contract.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n The ReceiveActivity activity is used when a workflow implements an operation defined in a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service contract. The ReceiveActivity can implement an operation from an already defined service contract or can define the service contract and operation within the workflow itself. The latter is known as a workflow-first contract.  \\n  \\n The ReceiveActivity activity supports a set of predefined message exchange patterns. These patterns include:  \\n  \\n-   One-way receive  \\n  \\n     The client that sends the message does not expect the service to send a response. The contract operation should have a void return type.  \\n  \\n-   Receive request - Send response  \\n  \\n     After a message is received and processed by the ReceiveActivity activity, a response is sent back to the client. When the contract operation has a void return type, an acknowledgement is sent back to the send activity.  \\n  \\n-   Receive request - Send fault  \\n  \\n     After a message is received and processed by the ReceiveActivity activity, a response or a fault is sent back to the client.  \\n  \\n> [!NOTE]\\n>  To ensure that persistence performs properly and does not persist transient messages, make sure that child activities of the ReceiveActivity do not persist by themselves. This can occur if the child activities go idle when a persistence provider was created with `UnloadOnIdle` set to `true`, for instance.  \\n  \\n> [!NOTE]\\n>  This activity is part of [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]. For the equivalent activity in [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], see <xref:System.ServiceModel.Activities.Receive>.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReceiveActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReceiveActivity), \"Design.Resources.ReceiveActivity.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReceiveActivityValidator))]\n\n      public sealed class ReceiveActivity : System.Workflow.Activities.SequenceActivity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  - System.Workflow.Activities.SequenceActivity\n  implements:\n  - System.Workflow.Activities.IEventActivity\n  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>\n  inheritedMembers:\n  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: ReceiveActivity()\n  nameWithType: ReceiveActivity.ReceiveActivity()\n  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity()\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> class.\n  remarks: The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer.\n  example:\n  - \"The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.  This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \\n  \\n [!code-cs[ReceiveActivity#11](~/add/codesnippet/csharp/receiveactivity/snippets.cs#11)]\"\n  syntax:\n    content: public ReceiveActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.ReceiveActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: ReceiveActivity(String)\n  nameWithType: ReceiveActivity.ReceiveActivity(String)\n  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity(String)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> class, initializing its <xref:System.Workflow.ComponentModel.Activity.Name*> property.\n  remarks: The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer.\n  example:\n  - \"The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.  \\n  \\n [!code-cs[ReceiveActivity#12](~/add/codesnippet/csharp/receiveactivity/snippets.cs#12)]\"\n  syntax:\n    content: public ReceiveActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name to assign to the activity instance.\n  overload: System.Workflow.Activities.ReceiveActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: ReceiveActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ReceiveActivity.Cancel(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.ReceiveActivity.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance\n  id: CanCreateInstance\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: CanCreateInstance\n  nameWithType: ReceiveActivity.CanCreateInstance\n  fullName: System.Workflow.Activities.ReceiveActivity.CanCreateInstance\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets or sets whether the operation causes a new workflow service instance to be created.\n  remarks: \"A <xref:System.Workflow.Activities.ReceiveActivity> activity that has CanCreateInstance set to `true` represents a service operation that, when invoked by a service client without being part of a conversation, causes a new instance of the service workflow to be created.  \\n  \\n Service workflows that do not have a <xref:System.Workflow.Activities.ReceiveActivity> activity with CanCreateInstance set to `true` cannot be instantiated by a client using a service operation invocation. Such workflows can be created using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method of the associated <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \\n  \\n The default value for this property is `false`.\"\n  example:\n  - \"The following example shows how to set the `CanCreateInstance` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \\n  \\n [!code-cs[ReceiveActivity#0](~/add/codesnippet/csharp/receiveactivity/snippets.cs#0)]\"\n  syntax:\n    content: public bool CanCreateInstance { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a new workflow instance is created; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.Activities.ReceiveActivity.CanCreateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.Context\n  id: Context\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: Context\n  nameWithType: ReceiveActivity.Context\n  fullName: System.Workflow.Activities.ReceiveActivity.Context\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets the context information for this activity.\n  remarks: Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.\n  example:\n  - \"The following example shows how to access the `Context` property.  \\n  \\n [!code-cs[ReceiveActivity#17](~/add/codesnippet/csharp/receiveactivity/snippets.cs#17)]\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,string> Context { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains context information for this activity.\n  overload: System.Workflow.Activities.ReceiveActivity.Context*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.ContextToken\n  id: ContextToken\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: ContextToken\n  nameWithType: ReceiveActivity.ContextToken\n  fullName: System.Workflow.Activities.ReceiveActivity.ContextToken\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Represents a token that can be used to specify the context that should be used to correlate the exchange between a <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity and the client that the activity is communicating with.\n  remarks: \"Each ContextToken is defined within the scope of an owner activity. Users can model two distinct context tokens with the same name but different owner scopes. The value of the contexts associated with these context tokens are different at runtime.  \\n  \\n By default, each workflow has an implicit root context token, scoped at the root activity level. The name of the root context token is '(RootContext)' and the <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> is `null`. If a <xref:System.Workflow.Activities.ReceiveActivity> activity does not have a ContextToken associated with it, the root context token is used.\"\n  example:\n  - \"The following code example shows how to access the `ContextToken` property. This code example is adapted from the `Conversations` SDK sample, from the `SupplierWorkflow.Designer.cs` file.  \\n  \\n [!code-cs[ReceiveActivity#1](~/add/codesnippet/csharp/receiveactivity/snippets.cs#1)]\"\n  syntax:\n    content: public System.Workflow.Activities.ContextToken ContextToken { get; set; }\n    return:\n      type: System.Workflow.Activities.ContextToken\n      description: A <xref href=\"System.Workflow.Activities.ContextToken\"></xref> that can be used for correlation.\n  overload: System.Workflow.Activities.ReceiveActivity.ContextToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ReceiveActivity.Dispose(Boolean)\n  fullName: System.Workflow.Activities.ReceiveActivity.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Workflow.Activities.ReceiveActivity.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ReceiveActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ReceiveActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.ReceiveActivity.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage\n  id: FaultMessage\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: FaultMessage\n  nameWithType: ReceiveActivity.FaultMessage\n  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessage\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: The exception that is returned when a receive activity completes execution.\n  remarks: \"If the FaultMessage property is set to an instance of type <xref:System.ServiceModel.FaultException>, the fault is returned to the client upon completion.  \\n  \\n If an exception is thrown during the activity execution and the FaultMessage property is set, then the specified fault is returned to the client. If an exception is thrown during the activity execution and the FaultMessage property is set, and the associated operation has a <xref:System.ServiceModel.FaultContractAttribute> attribute that specifies a fault type that matches that of the FaultMessage property, then the channel is not faulted and the client can still communicate to the server. If the FaultMessage property is not set, the thrown exception is returned as a fault to the client.\"\n  example:\n  - \"The following code sample shows how to access the `FaultMessage` property.  \\n  \\n [!code-cs[ReceiveActivity#2](~/add/codesnippet/csharp/receiveactivity/snippets.cs#2)]\"\n  syntax:\n    content: public System.ServiceModel.FaultException FaultMessage { get; set; }\n    return:\n      type: System.ServiceModel.FaultException\n      description: A <xref:System.ServiceModel.FaultException> object that contains the fault message text and details.\n  overload: System.Workflow.Activities.ReceiveActivity.FaultMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty\n  id: FaultMessageProperty\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: FaultMessageProperty\n  nameWithType: ReceiveActivity.FaultMessageProperty\n  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty\n  type: Field\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*> property.\n  remarks: \"This dependency property can be used to set up a binding between the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property and a public workflow property/field of type <xref:System.ServiceModel.FaultException> or another activity's public property/field of the same type.  \\n  \\n This dependency property can also be used to set the value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of a <xref:System.Workflow.Activities.ReceiveActivity> activity.  \\n  \\n This dependency property can also be used to get the binding or value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of the <xref:System.Workflow.Activities.ReceiveActivity> activity.\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)\n  id: GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: GetContext(Activity,ContextToken)\n  nameWithType: ReceiveActivity.GetContext(Activity,ContextToken)\n  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,ContextToken)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Static method that returns context information given an activity instance and context token.\n  remarks: Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.\n  example:\n  - \"The following example shows how to use the `GetContext` method.  \\n  \\n [!code-cs[ReceiveActivity#13](~/add/codesnippet/csharp/receiveactivity/snippets.cs#13)]\"\n  syntax:\n    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ContextToken contextToken);\n    parameters:\n    - id: activity\n      type: System.Workflow.ComponentModel.Activity\n      description: Activity instance that context information is requested for.\n    - id: contextToken\n      type: System.Workflow.Activities.ContextToken\n      description: The context token used by the activity.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A dictionary based collection that contains <xref:System.Xml.XmlQualifiedName> keys and their associated <xref:System.String> values.\n  overload: System.Workflow.Activities.ReceiveActivity.GetContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)\n  id: GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: GetContext(Activity,String,String)\n  nameWithType: ReceiveActivity.GetContext(Activity,String,String)\n  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,String,String)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Static method that returns context information given an activity instance and context token.\n  remarks: Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.\n  example:\n  - \"The following example shows how to use the `GetContext` method.  \\n  \\n [!code-cs[ReceiveActivity#15](~/add/codesnippet/csharp/receiveactivity/snippets.cs#15)]\"\n  syntax:\n    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName);\n    parameters:\n    - id: activity\n      type: System.Workflow.ComponentModel.Activity\n      description: Activity instance that context information is requested for.\n    - id: contextName\n      type: System.String\n      description: Name of the context token used by the activity.\n    - id: ownerActivityName\n      type: System.String\n      description: The name of the owning activity name.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A dictionary-based collection that contains <xref:System.Xml.XmlQualifiedName> keys and their associated <xref:System.String> values.\n  overload: System.Workflow.Activities.ReceiveActivity.GetContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)\n  id: GetRootContext(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: GetRootContext(Activity)\n  nameWithType: ReceiveActivity.GetRootContext(Activity)\n  fullName: System.Workflow.Activities.ReceiveActivity.GetRootContext(Activity)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Static method that returns context information for the root context associated with a given activity instance. Context information is used for communication between a host application and the workflow service.\n  remarks: Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.\n  example:\n  - \"The following example shows how to use the `GetRootContext` method.  \\n  \\n [!code-cs[ReceiveActivity#16](~/add/codesnippet/csharp/receiveactivity/snippets.cs#16)]\"\n  syntax:\n    content: public static System.Collections.Generic.IDictionary<string,string> GetRootContext (System.Workflow.ComponentModel.Activity activity);\n    parameters:\n    - id: activity\n      type: System.Workflow.ComponentModel.Activity\n      description: The child activity instance.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A dictionary-based collection that contains <xref:System.Xml.XmlQualifiedName> keys and their associated <xref:System.String> values that represent context information for a root context. Barring custom instance creation logic, the message that triggers creation of a new instance is received in the root context.\n  overload: System.Workflow.Activities.ReceiveActivity.GetRootContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)\n  id: GetWorkflowServiceAttributes(System.Object)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: GetWorkflowServiceAttributes(Object)\n  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes(Object)\n  fullName: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Returns the <xref href=\"System.Workflow.Activities.WorkflowServiceAttributes\"></xref> attributes for the service implemented by the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity. These attributes include items like the <xref:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode*>, the <xref:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName*>, the <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>, and whether to include exception details in any faults that are returned from the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity.\n  remarks: \"The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity. This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.  \\n  \\n The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts. These cannot be modified at runtime.  \\n  \\n> [!NOTE]\\n>  If the current workflow starts another workflow using an <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity, the invoked workflow does not inherit the invoking workflow's service attributes.  \\n  \\n> [!NOTE]\\n>  If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes are used. Service attributes are only used for custom activities if the custom activity itself is run as a workflow.\"\n  example:\n  - \"The following example shows how to use the `GetWorkflowServiceAttributes` method.  \\n  \\n [!code-cs[ReceiveActivity#5](~/add/codesnippet/csharp/receiveactivity/snippets.cs#5)]\"\n  syntax:\n    content: public static object GetWorkflowServiceAttributes (object dependencyObject);\n    parameters:\n    - id: dependencyObject\n      type: System.Object\n      description: The object to retrieve the service attributes from.\n    return:\n      type: System.Object\n      description: A <xref:System.Object> that represents a <xref href=\"System.Workflow.Activities.WorkflowServiceAttributes\"></xref> object that contains service attribute data.\n  overload: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: HandleFault(ActivityExecutionContext,Exception)\n  nameWithType: ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)\n  fullName: System.Workflow.Activities.ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    - id: exception\n      type: System.Exception\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.ReceiveActivity.HandleFault*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)\n  id: Initialize(System.IServiceProvider)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: Initialize(IServiceProvider)\n  nameWithType: ReceiveActivity.Initialize(IServiceProvider)\n  fullName: System.Workflow.Activities.ReceiveActivity.Initialize(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void Initialize (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: To be added.\n  overload: System.Workflow.Activities.ReceiveActivity.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties\n  id: InitializeProperties\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: InitializeProperties()\n  nameWithType: ReceiveActivity.InitializeProperties()\n  fullName: System.Workflow.Activities.ReceiveActivity.InitializeProperties()\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void InitializeProperties ();\n    parameters: []\n  overload: System.Workflow.Activities.ReceiveActivity.InitializeProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: OnSequenceComplete(ActivityExecutionContext)\n  nameWithType: ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnSequenceComplete (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n  overload: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.OperationValidation\n  id: OperationValidation\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: OperationValidation\n  nameWithType: ReceiveActivity.OperationValidation\n  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidation\n  type: Event\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Occurs when a message is received for an operation and validation is required.\n  remarks: \"This is an optional event handler that is fired when the <xref:System.Workflow.Activities.ReceiveActivity> activity is about to receive a message. The associated handler can be used to perform ClaimSet-based security checks to authorize client invocation of the service operation implemented by the <xref:System.Workflow.Activities.ReceiveActivity> activity.  \\n  \\n Setting <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName> to `false` in the event handler rejects the service operation invocation and the client receives a <xref:System.ServiceModel.FaultException>. If <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName> is set to `true`, then the service operation invocation succeeds and the <xref:System.Workflow.Activities.ReceiveActivity> activity receives and processes the message.\"\n  example:\n  - \"The following example shows how to use the `OperationValidation` event.  \\n  \\n [!code-cs[ReceiveActivity#7](~/add/codesnippet/csharp/receiveactivity/snippets.cs#7)]\"\n  syntax:\n    content: public event EventHandler<System.Workflow.Activities.OperationValidationEventArgs> OperationValidation;\n    return:\n      type: System.EventHandler{System.Workflow.Activities.OperationValidationEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent\n  id: OperationValidationEvent\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: OperationValidationEvent\n  nameWithType: ReceiveActivity.OperationValidationEvent\n  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent\n  type: Field\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.ReceiveActivity.OperationValidation\"></xref> event.\n  remarks: This dependency event property can be used to bind the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation> event to a public event handler on the workflow class.\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings\n  id: ParameterBindings\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: ParameterBindings\n  nameWithType: ReceiveActivity.ParameterBindings\n  fullName: System.Workflow.Activities.ReceiveActivity.ParameterBindings\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets the collection of bindable parameters as found in the service's formal parameter list.\n  remarks: \"ParameterBindings can be used to specify a binding between the service operation parameters and public field/properties of the workflow that contain the <xref:System.Workflow.Activities.ReceiveActivity> activity. When a client invokes the operation, the corresponding parameter values are written to bound workflow properties during the receive activity's execution.  \\n  \\n ParameterBindings can also be used by the receive activity's child activities to read the parameter values passed in by client invocation. Child activities can use the ParameterBindings collection to set the return value of the parent <xref:System.Workflow.Activities.ReceiveActivity> activity.  \\n  \\n All parameters of the service contract should be included in the `ParameterBindings` property. Unbound parameters cause compiler warnings upon compilation and an exception can occur when the <xref:System.Workflow.Activities.ReceiveActivity> returns this message back to the client.\"\n  example:\n  - \"The following example shows how to access the `ParameterBindings` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \\n  \\n [!code-cs[ReceiveActivity#3](~/add/codesnippet/csharp/receiveactivity/snippets.cs#3)]\"\n  syntax:\n    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }\n    return:\n      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n      description: The <xref href=\"System.Workflow.ComponentModel.WorkflowParameterBindingCollection\"></xref> of parameters to bind to.\n  overload: System.Workflow.Activities.ReceiveActivity.ParameterBindings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo\n  id: ServiceOperationInfo\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: ServiceOperationInfo\n  nameWithType: ReceiveActivity.ServiceOperationInfo\n  fullName: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Defines the contract and service operation that the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity implements.\n  remarks: \"The ServiceOperationInfo property can be set to an instance of type <xref:System.Workflow.Activities.TypedOperationInfo> or <xref:System.Workflow.Activities.OperationInfo>. <xref:System.Workflow.Activities.TypedOperationInfo> can be used to configure a receive activity using an existing [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service contract.  \\n  \\n An instance of <xref:System.Workflow.Activities.OperationInfo> can be used to configure a receive activity for the workflow-first contract scenario.\"\n  example:\n  - \"The following example shows how to access the `ServiceOperationInfo` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \\n  \\n [!code-cs[ReceiveActivity#4](~/add/codesnippet/csharp/receiveactivity/snippets.cs#4)]\"\n  syntax:\n    content: public System.Workflow.Activities.OperationInfoBase ServiceOperationInfo { get; set; }\n    return:\n      type: System.Workflow.Activities.OperationInfoBase\n      description: An <xref href=\"System.Workflow.Activities.OperationInfoBase\"></xref> object that contains the contract name, the contract type, the operation name, (which could be distinct from method name), whether the operation is a one-way operation, and method information including parameters about the operation.\n  overload: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)\n  id: SetWorkflowServiceAttributes(System.Object,System.Object)\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: SetWorkflowServiceAttributes(Object,Object)\n  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)\n  fullName: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Sets the attributes for the service implemented by the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity. These attributes include items like the <xref:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode*>, the <xref:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName*>, and whether to include exception details in any faults that are returned from the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity.\n  remarks: \"The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity. This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the SetWorkflowServiceAttributes method call at design time.  \\n  \\n The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts. These cannot be modified at runtime.  \\n  \\n> [!NOTE]\\n>  If the current workflow starts another workflow using a <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity, the invoked workflow does not inherit the invoking workflow's service attributes.  \\n  \\n> [!NOTE]\\n>  If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes is not used. Service attributes are only used in custom activities if the custom activity itself is run as a workflow.\"\n  example:\n  - \"The following example shows how to use the `SetWorkflowServiceAttributes` method.  \\n  \\n [!code-cs[ReceiveActivity#6](~/add/codesnippet/csharp/receiveactivity/snippets.cs#6)]\"\n  syntax:\n    content: public static void SetWorkflowServiceAttributes (object dependencyObject, object value);\n    parameters:\n    - id: dependencyObject\n      type: System.Object\n      description: The object to apply the service attributes to.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Workflow.Activities.WorkflowServiceAttributes\"></xref> object that contains the service attribute data to apply.\n  overload: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName\n  id: System#Workflow#Activities#IEventActivity#QueueName\n  isEii: true\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: System.Workflow.Activities.IEventActivity.QueueName\n  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName\n  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets the name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> on which the activity is waiting for data to arrive.\n  syntax:\n    content: IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }\n    return:\n      type: System.IComparable\n      description: The name of the <xref href=\"System.Workflow.Runtime.WorkflowQueue\"></xref> on which the activity is waiting for data to arrive.\n  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  id: System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  isEii: true\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Creates the subscription of the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity to an event.\n  syntax:\n    content: void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);\n    parameters:\n    - id: parentContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the <xref href=\"System.Workflow.Activities.ReceiveActivity\"></xref> activity.\n    - id: parentEventHandler\n      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}\n      description: The <xref:System.EventHandler> that handles the event. This event handler is owned by the parent activity.\n  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  id: System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  isEii: true\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Cancels the subscription of a <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to an event.\n  syntax:\n    content: void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);\n    parameters:\n    - id: parentContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that represents the execution environment of the <xref href=\"System.Workflow.Activities.WebServiceInputActivity\"></xref> activity.\n    - id: parentEventHandler\n      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}\n      description: The <xref:System.EventHandler> that handles the event. This event handler is owned by the parent activity.\n  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)\n  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)\n  isEii: true\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)\n  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)\n  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  syntax:\n    content: void IActivityEventListener<QueueEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: To be added.\n    - id: e\n      type: System.Workflow.ComponentModel.QueueEventArgs\n      description: To be added.\n  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty\n  id: WorkflowServiceAttributesProperty\n  parent: System.Workflow.Activities.ReceiveActivity\n  langs:\n  - csharp\n  name: WorkflowServiceAttributesProperty\n  nameWithType: ReceiveActivity.WorkflowServiceAttributesProperty\n  fullName: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty\n  type: Field\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*> property.\n  remarks: \"The WorkflowServiceAttributesProperty property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity. This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.  \\n  \\n The WorkflowServiceAttributesProperty property is used for defining service-level behavior attributes that are applied to the workflow service when it starts. These cannot be modified at runtime.\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: System.Workflow.Activities.SequenceActivity\n- uid: System.Workflow.Activities.ReceiveActivity.#ctor\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: ReceiveActivity()\n  nameWithType: ReceiveActivity.ReceiveActivity()\n  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity()\n- uid: System.Workflow.Activities.ReceiveActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: ReceiveActivity(String)\n  nameWithType: ReceiveActivity.ReceiveActivity(String)\n  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: ReceiveActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ReceiveActivity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: CanCreateInstance\n  nameWithType: ReceiveActivity.CanCreateInstance\n  fullName: System.Workflow.Activities.ReceiveActivity.CanCreateInstance\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.Activities.ReceiveActivity.Context\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: Context\n  nameWithType: ReceiveActivity.Context\n  fullName: System.Workflow.Activities.ReceiveActivity.Context\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.ReceiveActivity.ContextToken\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: ContextToken\n  nameWithType: ReceiveActivity.ContextToken\n  fullName: System.Workflow.Activities.ReceiveActivity.ContextToken\n- uid: System.Workflow.Activities.ContextToken\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: ContextToken\n  nameWithType: ContextToken\n  fullName: System.Workflow.Activities.ContextToken\n- uid: System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ReceiveActivity.Dispose(Boolean)\n  fullName: System.Workflow.Activities.ReceiveActivity.Dispose(Boolean)\n- uid: System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ReceiveActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ReceiveActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: FaultMessage\n  nameWithType: ReceiveActivity.FaultMessage\n  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessage\n- uid: System.ServiceModel.FaultException\n  parent: System.ServiceModel\n  isExternal: true\n  name: FaultException\n  nameWithType: FaultException\n  fullName: System.ServiceModel.FaultException\n- uid: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: FaultMessageProperty\n  nameWithType: ReceiveActivity.FaultMessageProperty\n  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: GetContext(Activity,ContextToken)\n  nameWithType: ReceiveActivity.GetContext(Activity,ContextToken)\n  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,ContextToken)\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: GetContext(Activity,String,String)\n  nameWithType: ReceiveActivity.GetContext(Activity,String,String)\n  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,String,String)\n- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: GetRootContext(Activity)\n  nameWithType: ReceiveActivity.GetRootContext(Activity)\n  fullName: System.Workflow.Activities.ReceiveActivity.GetRootContext(Activity)\n- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: GetWorkflowServiceAttributes(Object)\n  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes(Object)\n  fullName: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext,Exception)\n  nameWithType: ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)\n  fullName: System.Workflow.Activities.ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: ReceiveActivity.Initialize(IServiceProvider)\n  fullName: System.Workflow.Activities.ReceiveActivity.Initialize(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: InitializeProperties()\n  nameWithType: ReceiveActivity.InitializeProperties()\n  fullName: System.Workflow.Activities.ReceiveActivity.InitializeProperties()\n- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: OnSequenceComplete(ActivityExecutionContext)\n  nameWithType: ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)\n- uid: System.Workflow.Activities.ReceiveActivity.OperationValidation\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: OperationValidation\n  nameWithType: ReceiveActivity.OperationValidation\n  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidation\n- uid: System.EventHandler{System.Workflow.Activities.OperationValidationEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<OperationValidationEventArgs>\n  nameWithType: EventHandler<OperationValidationEventArgs>\n  fullName: System.EventHandler<System.Workflow.Activities.OperationValidationEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Workflow.Activities.OperationValidationEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.Activities.OperationValidationEventArgs\n    name: OperationValidationEventArgs\n    nameWithType: OperationValidationEventArgs\n    fullName: OperationValidationEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: OperationValidationEvent\n  nameWithType: ReceiveActivity.OperationValidationEvent\n  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent\n- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: ParameterBindings\n  nameWithType: ReceiveActivity.ParameterBindings\n  fullName: System.Workflow.Activities.ReceiveActivity.ParameterBindings\n- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: WorkflowParameterBindingCollection\n  nameWithType: WorkflowParameterBindingCollection\n  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection\n- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: ServiceOperationInfo\n  nameWithType: ReceiveActivity.ServiceOperationInfo\n  fullName: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo\n- uid: System.Workflow.Activities.OperationInfoBase\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: OperationInfoBase\n  nameWithType: OperationInfoBase\n  fullName: System.Workflow.Activities.OperationInfoBase\n- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: SetWorkflowServiceAttributes(Object,Object)\n  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)\n  fullName: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: System.Workflow.Activities.IEventActivity.QueueName\n  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName\n  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName\n- uid: System.IComparable\n  parent: System\n  isExternal: true\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: IActivityEventListener<QueueEventArgs>\n  nameWithType: IActivityEventListener<QueueEventArgs>\n  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>\n  spec.csharp:\n  - uid: System.Workflow.ComponentModel.IActivityEventListener`1\n    name: IActivityEventListener\n    nameWithType: IActivityEventListener\n    fullName: IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.QueueEventArgs\n    name: QueueEventArgs\n    nameWithType: QueueEventArgs\n    fullName: QueueEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)\n  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)\n  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)\n- uid: System.Workflow.ComponentModel.QueueEventArgs\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: QueueEventArgs\n  nameWithType: QueueEventArgs\n  fullName: System.Workflow.ComponentModel.QueueEventArgs\n- uid: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: WorkflowServiceAttributesProperty\n  nameWithType: ReceiveActivity.WorkflowServiceAttributesProperty\n  fullName: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty\n- uid: System.Workflow.Activities.ReceiveActivity.#ctor*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: ReceiveActivity\n  nameWithType: ReceiveActivity.ReceiveActivity\n- uid: System.Workflow.Activities.ReceiveActivity.Cancel*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: ReceiveActivity.Cancel\n- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: CanCreateInstance\n  nameWithType: ReceiveActivity.CanCreateInstance\n- uid: System.Workflow.Activities.ReceiveActivity.Context*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: Context\n  nameWithType: ReceiveActivity.Context\n- uid: System.Workflow.Activities.ReceiveActivity.ContextToken*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: ContextToken\n  nameWithType: ReceiveActivity.ContextToken\n- uid: System.Workflow.Activities.ReceiveActivity.Dispose*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: Dispose\n  nameWithType: ReceiveActivity.Dispose\n- uid: System.Workflow.Activities.ReceiveActivity.Execute*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: Execute\n  nameWithType: ReceiveActivity.Execute\n- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: FaultMessage\n  nameWithType: ReceiveActivity.FaultMessage\n- uid: System.Workflow.Activities.ReceiveActivity.GetContext*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: GetContext\n  nameWithType: ReceiveActivity.GetContext\n- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: GetRootContext\n  nameWithType: ReceiveActivity.GetRootContext\n- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: GetWorkflowServiceAttributes\n  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes\n- uid: System.Workflow.Activities.ReceiveActivity.HandleFault*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: HandleFault\n  nameWithType: ReceiveActivity.HandleFault\n- uid: System.Workflow.Activities.ReceiveActivity.Initialize*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: Initialize\n  nameWithType: ReceiveActivity.Initialize\n- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: InitializeProperties\n  nameWithType: ReceiveActivity.InitializeProperties\n- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: OnSequenceComplete\n  nameWithType: ReceiveActivity.OnSequenceComplete\n- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: ParameterBindings\n  nameWithType: ReceiveActivity.ParameterBindings\n- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: ServiceOperationInfo\n  nameWithType: ReceiveActivity.ServiceOperationInfo\n- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: SetWorkflowServiceAttributes\n  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: System.Workflow.Activities.IEventActivity.QueueName\n  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: System.Workflow.Activities.IEventActivity.Subscribe\n  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: System.Workflow.Activities.IEventActivity.Unsubscribe\n  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe\n- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*\n  parent: System.Workflow.Activities.ReceiveActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent\n  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent\n"}