{"nodes":[{"pos":[2045,2147],"content":"Represents a node in a tree of scoped catalogs, reflecting an underlying catalog and its child scopes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a node in a tree of scoped catalogs, reflecting an underlying catalog and its child scopes.","pos":[0,102]}]},{"pos":[4124,4254],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"></xref> class."},{"pos":[5555,5736],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified underlying catalog and children.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"></xref> class with the specified underlying catalog and children."},{"pos":[6123,6163],"content":"The underlying catalog for this catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"The underlying catalog for this catalog.","pos":[0,40]}]},{"pos":[6323,6372],"content":"A collection of the child scopes of this catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the child scopes of this catalog.","pos":[0,49]}]},{"pos":[7884,8082],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified underlying catalog, children, and public surface.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"></xref> class with the specified underlying catalog, children, and public surface."},{"pos":[8586,8626],"content":"The underlying catalog for this catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"The underlying catalog for this catalog.","pos":[0,40]}]},{"pos":[8786,8835],"content":"A collection of the child scopes of this catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the child scopes of this catalog.","pos":[0,49]}]},{"pos":[8993,9029],"content":"The public surface for this catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"The public surface for this catalog.","pos":[0,36]}]},{"pos":[9643,9730],"content":"Occurs when the underlying catalog has changed, if that catalog supports notifications.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the underlying catalog has changed, if that catalog supports notifications.","pos":[0,87]}]},{"pos":[10012,10024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10555,10642],"content":"Occurs when the underlying catalog is changing, if that catalog supports notifications.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the underlying catalog is changing, if that catalog supports notifications.","pos":[0,87]}]},{"pos":[10925,10937],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11471,11509],"content":"Gets the child scopes of this catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the child scopes of this catalog.","pos":[0,38]}]},{"pos":[11827,11876],"content":"A collection of the child scopes of this catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the child scopes of this catalog.","pos":[0,49]}]},{"pos":[12553,12902],"content":"Called by the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Dispose()\" name=\"Dispose()\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Finalize()\" name=\"Finalize()\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> methods to release the managed and unmanaged resources used by the current instance of the <bpt id=\"p3\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Called by the <xref uid=\"langword_csharp_Dispose()\" name=\"Dispose()\" href=\"\"></xref> and <xref uid=\"langword_csharp_Finalize()\" name=\"Finalize()\" href=\"\"></xref> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"></xref> class."},{"pos":[12915,13528],"content":"This method is called only by the public `Dispose()` and `Finalize()` methods; do not call this method directly.When you implement the dispose pattern, the Boolean parameter of the `Dispose(Boolean)` method should be used as follows:      -   The `Dispose()` method of the current object should call `Dispose(Boolean)` with the Boolean parameter set to `true` to release both managed and unmanaged resources.      -   The `Finalize()` method of the current object should call `Dispose(Boolean)` with the Boolean parameter set to `false` to release only unmanaged resources.       For more information, see .","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called only by the public <ph id=\"ph1\">`Dispose()`</ph> and <ph id=\"ph2\">`Finalize()`</ph> methods; do not call this method directly.When you implement the dispose pattern, the Boolean parameter of the <ph id=\"ph3\">`Dispose(Boolean)`</ph> method should be used as follows:      -   The <ph id=\"ph4\">`Dispose()`</ph> method of the current object should call <ph id=\"ph5\">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id=\"ph6\">`true`</ph> to release both managed and unmanaged resources.","pos":[0,408],"source":"This method is called only by the public `Dispose()` and `Finalize()` methods; do not call this method directly.When you implement the dispose pattern, the Boolean parameter of the `Dispose(Boolean)` method should be used as follows:      -   The `Dispose()` method of the current object should call `Dispose(Boolean)` with the Boolean parameter set to `true` to release both managed and unmanaged resources."},{"content":"-   The <ph id=\"ph1\">`Finalize()`</ph> method of the current object should call <ph id=\"ph2\">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id=\"ph3\">`false`</ph> to release only unmanaged resources.","pos":[414,573],"source":"      -   The `Finalize()` method of the current object should call `Dispose(Boolean)` with the Boolean parameter set to `false` to release only unmanaged resources."},{"content":"For more information, see .","pos":[580,607]}]},{"pos":[13685,13889],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[14542,14598],"content":"Returns an enumerator that iterates through the catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that iterates through the catalog.","pos":[0,56]}]},{"pos":[14938,15000],"content":"An enumerator that can be used to iterate through the catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator that can be used to iterate through the catalog.","pos":[0,62]}]},{"pos":[15818,15908],"content":"Gets a collection of exports that match the conditions specified by the import definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of exports that match the conditions specified by the import definition.","pos":[0,90]}]},{"pos":[16344,16391],"content":"Conditions that specify which exports to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"Conditions that specify which exports to match.","pos":[0,47]}]},{"pos":[16621,16681],"content":"A collection of exports that match the specified conditions.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of exports that match the specified conditions.","pos":[0,60]}]},{"pos":[17585,17700],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\"></xref> event."},{"pos":[17979,18105],"content":"Contains data for the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Contains data for the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\"></xref> event."},{"pos":[19013,19129],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\"></xref> event."},{"pos":[19409,19536],"content":"Contains data for the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Contains data for the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\"></xref> event."},{"pos":[20188,20259],"content":"Gets a collection of parts visible to the parent scope of this catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of parts visible to the parent scope of this catalog.","pos":[0,71]}]},{"pos":[20568,20634],"content":"A collection of parts visible to the parent scope of this catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of parts visible to the parent scope of this catalog.","pos":[0,66]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  id: CompositionScopeDefinition\n  children:\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)\n  - System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface\n  langs:\n  - csharp\n  name: CompositionScopeDefinition\n  nameWithType: CompositionScopeDefinition\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  type: Class\n  summary: Represents a node in a tree of scoped catalogs, reflecting an underlying catalog and its child scopes.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.CompositionScopeDefinitionDebuggerProxy))]\n\n      public class CompositionScopeDefinition : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged\n  inheritance:\n  - System.Object\n  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n  implements:\n  - System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged\n  inheritedMembers:\n  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose\n  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts\n  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: CompositionScopeDefinition()\n  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition()\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"></xref> class.\n  syntax:\n    content: protected CompositionScopeDefinition ();\n    parameters: []\n  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})\n  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})'\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)\n  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"></xref> class with the specified underlying catalog and children.\n  syntax:\n    content: public CompositionScopeDefinition (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Hosting.CompositionScopeDefinition> children);\n    parameters:\n    - id: catalog\n      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n      description: The underlying catalog for this catalog.\n    - id: children\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition}\n      description: A collection of the child scopes of this catalog.\n  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})\n  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})'\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)\n  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"></xref> class with the specified underlying catalog, children, and public surface.\n  syntax:\n    content: public CompositionScopeDefinition (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Hosting.CompositionScopeDefinition> children, System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition> publicSurface);\n    parameters:\n    - id: catalog\n      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n      description: The underlying catalog for this catalog.\n    - id: children\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition}\n      description: A collection of the child scopes of this catalog.\n    - id: publicSurface\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}\n      description: The public surface for this catalog.\n  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\n  id: Changed\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: Changed\n  nameWithType: CompositionScopeDefinition.Changed\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\n  type: Event\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Occurs when the underlying catalog has changed, if that catalog supports notifications.\n  syntax:\n    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changed;\n    return:\n      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\n  id: Changing\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: Changing\n  nameWithType: CompositionScopeDefinition.Changing\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\n  type: Event\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Occurs when the underlying catalog is changing, if that catalog supports notifications.\n  syntax:\n    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changing;\n    return:\n      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children\n  id: Children\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: Children\n  nameWithType: CompositionScopeDefinition.Children\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets the child scopes of this catalog.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Hosting.CompositionScopeDefinition> Children { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition}\n      description: A collection of the child scopes of this catalog.\n  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: CompositionScopeDefinition.Dispose(Boolean)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Called by the <xref uid=\"langword_csharp_Dispose()\" name=\"Dispose()\" href=\"\"></xref> and <xref uid=\"langword_csharp_Finalize()\" name=\"Finalize()\" href=\"\"></xref> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\"></xref> class.\n  remarks: \"This method is called only by the public `Dispose()` and `Finalize()` methods; do not call this method directly.When you implement the dispose pattern, the Boolean parameter of the `Dispose(Boolean)` method should be used as follows:  \\n  \\n-   The `Dispose()` method of the current object should call `Dispose(Boolean)` with the Boolean parameter set to `true` to release both managed and unmanaged resources.  \\n  \\n-   The `Finalize()` method of the current object should call `Dispose(Boolean)` with the Boolean parameter set to `false` to release only unmanaged resources.  \\n  \\n For more information, see .\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator\n  id: GetEnumerator\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: CompositionScopeDefinition.GetEnumerator()\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Returns an enumerator that iterates through the catalog.\n  syntax:\n    content: public override System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}\n      description: An enumerator that can be used to iterate through the catalog.\n  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: GetExports(ImportDefinition)\n  nameWithType: CompositionScopeDefinition.GetExports(ImportDefinition)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets a collection of exports that match the conditions specified by the import definition.\n  syntax:\n    content: public override System.Collections.Generic.IEnumerable<Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);\n    parameters:\n    - id: definition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: Conditions that specify which exports to match.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}\n      description: A collection of exports that match the specified conditions.\n  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)\n  id: OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: OnChanged(ComposablePartCatalogChangeEventArgs)\n  nameWithType: CompositionScopeDefinition.OnChanged(ComposablePartCatalogChangeEventArgs)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(ComposablePartCatalogChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Raises the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\"></xref> event.\n  syntax:\n    content: protected virtual void OnChanged (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs\n      description: Contains data for the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\"></xref> event.\n  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)\n  id: OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: OnChanging(ComposablePartCatalogChangeEventArgs)\n  nameWithType: CompositionScopeDefinition.OnChanging(ComposablePartCatalogChangeEventArgs)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(ComposablePartCatalogChangeEventArgs)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Raises the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\"></xref> event.\n  syntax:\n    content: protected virtual void OnChanging (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs\n      description: Contains data for the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\"></xref> event.\n  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface\n  id: PublicSurface\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  langs:\n  - csharp\n  name: PublicSurface\n  nameWithType: CompositionScopeDefinition.PublicSurface\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets a collection of parts visible to the parent scope of this catalog.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition> PublicSurface { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}\n      description: A collection of parts visible to the parent scope of this catalog.\n  overload: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n  isExternal: false\n  name: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: CompositionScopeDefinition()\n  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition()\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition()\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)\n  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>)\n- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<CompositionScopeDefinition>\n  nameWithType: IEnumerable<CompositionScopeDefinition>\n  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Hosting.CompositionScopeDefinition>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.ComponentModel.Composition.Hosting.CompositionScopeDefinition>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n    name: CompositionScopeDefinition\n    nameWithType: CompositionScopeDefinition\n    fullName: CompositionScopeDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)\n  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.CompositionScopeDefinition(ComposablePartCatalog,IEnumerable<CompositionScopeDefinition>,IEnumerable<ExportDefinition>)\n- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<ExportDefinition>\n  nameWithType: IEnumerable<ExportDefinition>\n  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition\n    name: ExportDefinition\n    nameWithType: ExportDefinition\n    fullName: ExportDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: Changed\n  nameWithType: CompositionScopeDefinition.Changed\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed\n- uid: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ComposablePartCatalogChangeEventArgs>\n  nameWithType: EventHandler<ComposablePartCatalogChangeEventArgs>\n  fullName: System.EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs\n    name: ComposablePartCatalogChangeEventArgs\n    nameWithType: ComposablePartCatalogChangeEventArgs\n    fullName: ComposablePartCatalogChangeEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: Changing\n  nameWithType: CompositionScopeDefinition.Changing\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: Children\n  nameWithType: CompositionScopeDefinition.Children\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CompositionScopeDefinition.Dispose(Boolean)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: CompositionScopeDefinition.GetEnumerator()\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<ComposablePartDefinition>\n  nameWithType: IEnumerator<ComposablePartDefinition>\n  fullName: System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n    name: ComposablePartDefinition\n    nameWithType: ComposablePartDefinition\n    fullName: ComposablePartDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: GetExports(ImportDefinition)\n  nameWithType: CompositionScopeDefinition.GetExports(ImportDefinition)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(ImportDefinition)\n- uid: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>\n  nameWithType: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>\n  fullName: System.Collections.Generic.IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Tuple`2\n    name: Tuple\n    nameWithType: Tuple\n    fullName: Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n    name: ComposablePartDefinition\n    nameWithType: ComposablePartDefinition\n    fullName: ComposablePartDefinition\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition\n    name: ExportDefinition\n    nameWithType: ExportDefinition\n    fullName: ExportDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportDefinition\n  nameWithType: ImportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: OnChanged(ComposablePartCatalogChangeEventArgs)\n  nameWithType: CompositionScopeDefinition.OnChanged(ComposablePartCatalogChangeEventArgs)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(ComposablePartCatalogChangeEventArgs)\n- uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs\n  parent: System.ComponentModel.Composition.Hosting\n  isExternal: false\n  name: ComposablePartCatalogChangeEventArgs\n  nameWithType: ComposablePartCatalogChangeEventArgs\n  fullName: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: OnChanging(ComposablePartCatalogChangeEventArgs)\n  nameWithType: CompositionScopeDefinition.OnChanging(ComposablePartCatalogChangeEventArgs)\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(ComposablePartCatalogChangeEventArgs)\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: PublicSurface\n  nameWithType: CompositionScopeDefinition.PublicSurface\n  fullName: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor*\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: CompositionScopeDefinition\n  nameWithType: CompositionScopeDefinition.CompositionScopeDefinition\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children*\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: Children\n  nameWithType: CompositionScopeDefinition.Children\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose*\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: Dispose\n  nameWithType: CompositionScopeDefinition.Dispose\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator*\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: CompositionScopeDefinition.GetEnumerator\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports*\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: GetExports\n  nameWithType: CompositionScopeDefinition.GetExports\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged*\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: OnChanged\n  nameWithType: CompositionScopeDefinition.OnChanged\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging*\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: OnChanging\n  nameWithType: CompositionScopeDefinition.OnChanging\n- uid: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface*\n  parent: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition\n  isExternal: false\n  name: PublicSurface\n  nameWithType: CompositionScopeDefinition.PublicSurface\n"}