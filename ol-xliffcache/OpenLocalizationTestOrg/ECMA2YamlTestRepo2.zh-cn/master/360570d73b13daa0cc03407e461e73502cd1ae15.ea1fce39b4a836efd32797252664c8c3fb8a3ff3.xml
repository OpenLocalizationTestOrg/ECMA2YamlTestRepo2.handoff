{"nodes":[{"pos":[648,732],"content":"Represents the policy associated with a <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents the policy associated with a <xref href=\"System.IO.Log.LogStore\"></xref>."},{"pos":[745,1514],"content":"A policy is a set of rules to be followed by a <xref:System.IO.Log.LogStore> instance and its clients. A LogPolicy instance is used to examine and modify the policy associated with a specific <xref:System.IO.Log.LogStore>. A policy can describe the minimum and maximum allowable log sizes, or how the <xref:System.IO.Log.LogStore> instance is allowed to grow. In addition, you can also control whether a <xref:System.IO.Log.LogStore> instance can be archived.       After changing any of the properties, you should use the <xref:System.IO.Log.LogPolicy.Commit%2A> method to ensure that the changes are applied to the <xref:System.IO.Log.LogStore>. You can call the <xref:System.IO.Log.LogPolicy.Refresh%2A> method to discard changes or to get the most current policy.","needQuote":false,"needEscape":true,"nodes":[{"content":"A policy is a set of rules to be followed by a <xref:System.IO.Log.LogStore> instance and its clients. A LogPolicy instance is used to examine and modify the policy associated with a specific <xref:System.IO.Log.LogStore>. A policy can describe the minimum and maximum allowable log sizes, or how the <xref:System.IO.Log.LogStore> instance is allowed to grow. In addition, you can also control whether a <xref:System.IO.Log.LogStore> instance can be archived.       After changing any of the properties, you should use the <xref:System.IO.Log.LogPolicy.Commit%2A> method to ensure that the changes are applied to the <xref:System.IO.Log.LogStore>. You can call the <xref:System.IO.Log.LogPolicy.Refresh%2A> method to discard changes or to get the most current policy.","pos":[0,767],"nodes":[{"content":"A policy is a set of rules to be followed by a &lt;xref:System.IO.Log.LogStore&gt; instance and its clients.","pos":[0,102],"source":"A policy is a set of rules to be followed by a <xref:System.IO.Log.LogStore> instance and its clients."},{"content":"A LogPolicy instance is used to examine and modify the policy associated with a specific &lt;xref:System.IO.Log.LogStore&gt;.","pos":[103,222],"source":" A LogPolicy instance is used to examine and modify the policy associated with a specific <xref:System.IO.Log.LogStore>."},{"content":"A policy can describe the minimum and maximum allowable log sizes, or how the &lt;xref:System.IO.Log.LogStore&gt; instance is allowed to grow.","pos":[223,359],"source":" A policy can describe the minimum and maximum allowable log sizes, or how the <xref:System.IO.Log.LogStore> instance is allowed to grow."},{"content":"In addition, you can also control whether a &lt;xref:System.IO.Log.LogStore&gt; instance can be archived.","pos":[360,459],"source":" In addition, you can also control whether a <xref:System.IO.Log.LogStore> instance can be archived."},{"content":"After changing any of the properties, you should use the &lt;xref:System.IO.Log.LogPolicy.Commit%2A&gt; method to ensure that the changes are applied to the &lt;xref:System.IO.Log.LogStore&gt;.","pos":[466,647],"source":"       After changing any of the properties, you should use the <xref:System.IO.Log.LogPolicy.Commit%2A> method to ensure that the changes are applied to the <xref:System.IO.Log.LogStore>."},{"content":"You can call the &lt;xref:System.IO.Log.LogPolicy.Refresh%2A&gt; method to discard changes or to get the most current policy.","pos":[648,767],"source":" You can call the <xref:System.IO.Log.LogPolicy.Refresh%2A> method to discard changes or to get the most current policy."}]}]},{"pos":[2267,2378],"content":"Gets or sets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can grow automatically.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the <xref href=\"System.IO.Log.LogStore\"></xref> can grow automatically."},{"pos":[2841,3060],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> can grow its size automatically; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.IO.Log.LogStore\"></xref> can grow its size automatically; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3500,3601],"content":"Gets or sets the percentage of free space the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can shrink.","needQuote":true,"needEscape":true,"source":"Gets or sets the percentage of free space the <xref href=\"System.IO.Log.LogStore\"></xref> can shrink."},{"pos":[3613,3905],"content":"When the amount of free space in the <xref:System.IO.Log.LogStore> is greater than the amount specified by this property, the <xref:System.IO.Log.LogStore> automatically reduces its size until it reaches the size specified by the <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the amount of free space in the &lt;xref:System.IO.Log.LogStore&gt; is greater than the amount specified by this property, the &lt;xref:System.IO.Log.LogStore&gt; automatically reduces its size until it reaches the size specified by the &lt;xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A&gt; property.","pos":[0,292],"source":"When the amount of free space in the <xref:System.IO.Log.LogStore> is greater than the amount specified by this property, the <xref:System.IO.Log.LogStore> automatically reduces its size until it reaches the size specified by the <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> property."}]},{"pos":[4363,4451],"content":"The percentage of free space the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can shrink.","needQuote":true,"needEscape":true,"source":"The percentage of free space the <xref href=\"System.IO.Log.LogStore\"></xref> can shrink."},{"pos":[4837,4928],"content":"Sets this policy as the current policy for the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Sets this policy as the current policy for the <xref href=\"System.IO.Log.LogStore\"></xref>."},{"pos":[4940,5026],"content":"You must call Commit after making any changes to ensure that the changes are recorded.","needQuote":true,"needEscape":true,"nodes":[{"content":"You must call Commit after making any changes to ensure that the changes are recorded.","pos":[0,86]}]},{"pos":[5593,5728],"content":"The set of policies installed on the log is invalid.       -or-       A policy of the log prevented this operation from completing.","needQuote":false,"needEscape":true,"nodes":[{"content":"The set of policies installed on the log is invalid.       -or-       A policy of the log prevented this operation from completing.","pos":[0,131],"nodes":[{"content":"The set of policies installed on the log is invalid.","pos":[0,52]},{"content":"-or-       A policy of the log prevented this operation from completing.","pos":[59,131]}]}]},{"pos":[5818,5892],"content":"The request could not be performed because of an unexpected I/O exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The request could not be performed because of an unexpected I/O exception.","pos":[0,74]}]},{"pos":[5995,6056],"content":"Setting this policy is not supported on the current platform.","needQuote":true,"needEscape":true,"nodes":[{"content":"Setting this policy is not supported on the current platform.","pos":[0,61]}]},{"pos":[6163,6225],"content":"The method was called after the sequence has been disposed of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]},{"pos":[6326,6394],"content":"There is not enough memory to continue the execution of the program.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is not enough memory to continue the execution of the program.","pos":[0,68]}]},{"pos":[6501,6579],"content":"The new extent prefix is invalid or too long. A valid prefix must be provided.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new extent prefix is invalid or too long. A valid prefix must be provided.","pos":[0,78],"nodes":[{"content":"The new extent prefix is invalid or too long.","pos":[0,45]},{"content":"A valid prefix must be provided.","pos":[46,78]}]}]},{"pos":[6696,6724],"content":"The record sequence is full.","needQuote":true,"needEscape":true,"nodes":[{"content":"The record sequence is full.","pos":[0,28]}]},{"pos":[6839,6908],"content":"Access for the specified log store is denied by the operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]},{"pos":[7235,7328],"content":"Gets or sets the rate of automatic growth of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the rate of automatic growth of the <xref href=\"System.IO.Log.LogStore\"></xref>."},{"pos":[7340,7615],"content":"When the <xref:System.IO.Log.LogStore> becomes full, this policy value determines how much more space can be added. Space will not be added if it causes the number of extents in the <xref:System.IO.Log.LogStore> to exceed <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the <xref:System.IO.Log.LogStore> becomes full, this policy value determines how much more space can be added. Space will not be added if it causes the number of extents in the <xref:System.IO.Log.LogStore> to exceed <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>.","pos":[0,275],"nodes":[{"content":"When the &lt;xref:System.IO.Log.LogStore&gt; becomes full, this policy value determines how much more space can be added.","pos":[0,115],"source":"When the <xref:System.IO.Log.LogStore> becomes full, this policy value determines how much more space can be added."},{"content":"Space will not be added if it causes the number of extents in the &lt;xref:System.IO.Log.LogStore&gt; to exceed &lt;xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A&gt;.","pos":[116,275],"source":" Space will not be added if it causes the number of extents in the <xref:System.IO.Log.LogStore> to exceed <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>."}]}]},{"pos":[8096,8176],"content":"The rate of automatic growth of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The rate of automatic growth of the <xref href=\"System.IO.Log.LogStore\"></xref>."},{"pos":[8608,8758],"content":"Gets or sets the maximum number of <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances the <bpt id=\"p2\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> can contain.","needQuote":true,"needEscape":true,"source":"Gets or sets the maximum number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances the <xref href=\"System.IO.Log.LogStore\"></xref> can contain."},{"pos":[9228,9365],"content":"The maximum number of <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances the <bpt id=\"p2\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> can contain.","needQuote":true,"needEscape":true,"source":"The maximum number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances the <xref href=\"System.IO.Log.LogStore\"></xref> can contain."},{"pos":[9805,9955],"content":"Gets or sets the minimum number of <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances the <bpt id=\"p2\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> can contain.","needQuote":true,"needEscape":true,"source":"Gets or sets the minimum number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances the <xref href=\"System.IO.Log.LogStore\"></xref> can contain."},{"pos":[10425,10692],"content":"An integer that specifies the minimum number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances the <xref href=\"System.IO.Log.LogStore\"></xref> can contain. Since the CLFS requires that the minimum extent count to be 2 extents, this value should be at least 2.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that specifies the minimum number of <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances the <bpt id=\"p2\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> can contain.","pos":[0,163],"source":"An integer that specifies the minimum number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances the <xref href=\"System.IO.Log.LogStore\"></xref> can contain."},{"content":"Since the CLFS requires that the minimum extent count to be 2 extents, this value should be at least 2.","pos":[164,267]}]},{"pos":[11117,11182],"content":"Gets or sets the prefix string for automatically created extents.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the prefix string for automatically created extents.","pos":[0,65]}]},{"pos":[11194,11386],"content":"This string can contain a full path to the directory where the new extent is created. The default path to the extent is the directory that contains the base <xref:System.IO.Log.LogStore> file.","needQuote":true,"needEscape":true,"nodes":[{"content":"This string can contain a full path to the directory where the new extent is created. The default path to the extent is the directory that contains the base <xref:System.IO.Log.LogStore> file.","pos":[0,192],"nodes":[{"content":"This string can contain a full path to the directory where the new extent is created.","pos":[0,85]},{"content":"The default path to the extent is the directory that contains the base &lt;xref:System.IO.Log.LogStore&gt; file.","pos":[86,192],"source":" The default path to the extent is the directory that contains the base <xref:System.IO.Log.LogStore> file."}]}]},{"pos":[11843,11895],"content":"The prefix string for automatically created extents.","needQuote":true,"needEscape":true,"nodes":[{"content":"The prefix string for automatically created extents.","pos":[0,52]}]},{"pos":[12322,12369],"content":"Gets or sets the suffix number for new extents.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the suffix number for new extents.","pos":[0,47]}]},{"pos":[12838,12872],"content":"The suffix number for new extents.","needQuote":true,"needEscape":true,"nodes":[{"content":"The suffix number for new extents.","pos":[0,34]}]},{"pos":[13315,13470],"content":"Gets or sets the amount of space that the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogRecordSequence.TailPinned\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event requires for advancing the base of the log.","needQuote":true,"needEscape":true,"source":"Gets or sets the amount of space that the <xref href=\"System.IO.Log.LogRecordSequence.TailPinned\"></xref> event requires for advancing the base of the log."},{"pos":[13482,13628],"content":"The amount of space can be expressed in percentage, or in bytes which is rounded off to the nearest containers in CLFS. The default is 35 percent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of space can be expressed in percentage, or in bytes which is rounded off to the nearest containers in CLFS. The default is 35 percent.","pos":[0,146],"nodes":[{"content":"The amount of space can be expressed in percentage, or in bytes which is rounded off to the nearest containers in CLFS.","pos":[0,119]},{"content":"The default is 35 percent.","pos":[120,146]}]}]},{"pos":[14118,14260],"content":"The amount of space that the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogRecordSequence.TailPinned\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event requires for advancing the base of the log.","needQuote":true,"needEscape":true,"source":"The amount of space that the <xref href=\"System.IO.Log.LogRecordSequence.TailPinned\"></xref> event requires for advancing the base of the log."},{"pos":[14650,14775],"content":"Reads the current policy for the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, discarding any changes that may have been made.","needQuote":true,"needEscape":true,"source":"Reads the current policy for the <xref href=\"System.IO.Log.LogStore\"></xref>, discarding any changes that may have been made."},{"pos":[15358,15493],"content":"The set of policies installed on the log is invalid.       -or-       A policy of the log prevented this operation from completing.","needQuote":false,"needEscape":true,"nodes":[{"content":"The set of policies installed on the log is invalid.       -or-       A policy of the log prevented this operation from completing.","pos":[0,131],"nodes":[{"content":"The set of policies installed on the log is invalid.","pos":[0,52]},{"content":"-or-       A policy of the log prevented this operation from completing.","pos":[59,131]}]}]},{"pos":[15583,15657],"content":"The request could not be performed because of an unexpected I/O exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The request could not be performed because of an unexpected I/O exception.","pos":[0,74]}]},{"pos":[15760,15821],"content":"Setting this policy is not supported on the current platform.","needQuote":true,"needEscape":true,"nodes":[{"content":"Setting this policy is not supported on the current platform.","pos":[0,61]}]},{"pos":[15928,15990],"content":"The method was called after the sequence has been disposed of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]},{"pos":[16091,16159],"content":"There is not enough memory to continue the execution of the program.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is not enough memory to continue the execution of the program.","pos":[0,68]}]},{"pos":[16276,16304],"content":"The record sequence is full.","needQuote":true,"needEscape":true,"nodes":[{"content":"The record sequence is full.","pos":[0,28]}]},{"pos":[16419,16488],"content":"Access for the specified log store is denied by the operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Log.LogPolicy\n  id: LogPolicy\n  children:\n  - System.IO.Log.LogPolicy.AutoGrow\n  - System.IO.Log.LogPolicy.AutoShrinkPercentage\n  - System.IO.Log.LogPolicy.Commit\n  - System.IO.Log.LogPolicy.GrowthRate\n  - System.IO.Log.LogPolicy.MaximumExtentCount\n  - System.IO.Log.LogPolicy.MinimumExtentCount\n  - System.IO.Log.LogPolicy.NewExtentPrefix\n  - System.IO.Log.LogPolicy.NextExtentSuffix\n  - System.IO.Log.LogPolicy.PinnedTailThreshold\n  - System.IO.Log.LogPolicy.Refresh\n  langs:\n  - csharp\n  name: LogPolicy\n  nameWithType: LogPolicy\n  fullName: System.IO.Log.LogPolicy\n  type: Class\n  summary: Represents the policy associated with a <xref href=\"System.IO.Log.LogStore\"></xref>.\n  remarks: \"A policy is a set of rules to be followed by a <xref:System.IO.Log.LogStore> instance and its clients. A LogPolicy instance is used to examine and modify the policy associated with a specific <xref:System.IO.Log.LogStore>. A policy can describe the minimum and maximum allowable log sizes, or how the <xref:System.IO.Log.LogStore> instance is allowed to grow. In addition, you can also control whether a <xref:System.IO.Log.LogStore> instance can be archived.  \\n  \\n After changing any of the properties, you should use the <xref:System.IO.Log.LogPolicy.Commit%2A> method to ensure that the changes are applied to the <xref:System.IO.Log.LogStore>. You can call the <xref:System.IO.Log.LogPolicy.Refresh%2A> method to discard changes or to get the most current policy.\"\n  example:\n  - \"This example shows how to use the LogPolicy class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/t-system.io.log.logpolicy_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/t-system.io.log.logpolicy_1.vb)]\"\n  syntax:\n    content: public sealed class LogPolicy\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogPolicy.AutoGrow\n  id: AutoGrow\n  parent: System.IO.Log.LogPolicy\n  langs:\n  - csharp\n  name: AutoGrow\n  nameWithType: LogPolicy.AutoGrow\n  fullName: System.IO.Log.LogPolicy.AutoGrow\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets or sets a value indicating whether the <xref href=\"System.IO.Log.LogStore\"></xref> can grow automatically.\n  remarks: ''\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/p-system.io.log.logpolic_0_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/p-system.io.log.logpolic_0_1.vb)]\"\n  syntax:\n    content: public bool AutoGrow { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.IO.Log.LogStore\"></xref> can grow its size automatically; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.LogPolicy.AutoGrow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogPolicy.AutoShrinkPercentage\n  id: AutoShrinkPercentage\n  parent: System.IO.Log.LogPolicy\n  langs:\n  - csharp\n  name: AutoShrinkPercentage\n  nameWithType: LogPolicy.AutoShrinkPercentage\n  fullName: System.IO.Log.LogPolicy.AutoShrinkPercentage\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets or sets the percentage of free space the <xref href=\"System.IO.Log.LogStore\"></xref> can shrink.\n  remarks: When the amount of free space in the <xref:System.IO.Log.LogStore> is greater than the amount specified by this property, the <xref:System.IO.Log.LogStore> automatically reduces its size until it reaches the size specified by the <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> property.\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/p-system.io.log.logpolic_2_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/p-system.io.log.logpolic_2_1.vb)]\"\n  syntax:\n    content: public int AutoShrinkPercentage { get; set; }\n    return:\n      type: System.Int32\n      description: The percentage of free space the <xref href=\"System.IO.Log.LogStore\"></xref> can shrink.\n  overload: System.IO.Log.LogPolicy.AutoShrinkPercentage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogPolicy.Commit\n  id: Commit\n  parent: System.IO.Log.LogPolicy\n  langs:\n  - csharp\n  name: Commit()\n  nameWithType: LogPolicy.Commit()\n  fullName: System.IO.Log.LogPolicy.Commit()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Sets this policy as the current policy for the <xref href=\"System.IO.Log.LogStore\"></xref>.\n  remarks: You must call Commit after making any changes to ensure that the changes are recorded.\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/m-system.io.log.logpolic_0_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/m-system.io.log.logpolic_0_1.vb)]\"\n  syntax:\n    content: public void Commit ();\n    parameters: []\n  overload: System.IO.Log.LogPolicy.Commit*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The set of policies installed on the log is invalid.  \\n  \\n -or-  \\n  \\n A policy of the log prevented this operation from completing.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The request could not be performed because of an unexpected I/O exception.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Setting this policy is not supported on the current platform.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of the program.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The new extent prefix is invalid or too long. A valid prefix must be provided.\n  - type: System.IO.Log.SequenceFullException\n    commentId: T:System.IO.Log.SequenceFullException\n    description: The record sequence is full.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  platform:\n  - net462\n- uid: System.IO.Log.LogPolicy.GrowthRate\n  id: GrowthRate\n  parent: System.IO.Log.LogPolicy\n  langs:\n  - csharp\n  name: GrowthRate\n  nameWithType: LogPolicy.GrowthRate\n  fullName: System.IO.Log.LogPolicy.GrowthRate\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets or sets the rate of automatic growth of the <xref href=\"System.IO.Log.LogStore\"></xref>.\n  remarks: When the <xref:System.IO.Log.LogStore> becomes full, this policy value determines how much more space can be added. Space will not be added if it causes the number of extents in the <xref:System.IO.Log.LogStore> to exceed <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>.\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/p-system.io.log.logpolic_4_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/p-system.io.log.logpolic_4_1.vb)]\"\n  syntax:\n    content: public System.IO.Log.PolicyUnit GrowthRate { get; set; }\n    return:\n      type: System.IO.Log.PolicyUnit\n      description: The rate of automatic growth of the <xref href=\"System.IO.Log.LogStore\"></xref>.\n  overload: System.IO.Log.LogPolicy.GrowthRate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogPolicy.MaximumExtentCount\n  id: MaximumExtentCount\n  parent: System.IO.Log.LogPolicy\n  langs:\n  - csharp\n  name: MaximumExtentCount\n  nameWithType: LogPolicy.MaximumExtentCount\n  fullName: System.IO.Log.LogPolicy.MaximumExtentCount\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets or sets the maximum number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances the <xref href=\"System.IO.Log.LogStore\"></xref> can contain.\n  remarks: ''\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/p-system.io.log.logpolic_1_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/p-system.io.log.logpolic_1_1.vb)]\"\n  syntax:\n    content: public int MaximumExtentCount { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances the <xref href=\"System.IO.Log.LogStore\"></xref> can contain.\n  overload: System.IO.Log.LogPolicy.MaximumExtentCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogPolicy.MinimumExtentCount\n  id: MinimumExtentCount\n  parent: System.IO.Log.LogPolicy\n  langs:\n  - csharp\n  name: MinimumExtentCount\n  nameWithType: LogPolicy.MinimumExtentCount\n  fullName: System.IO.Log.LogPolicy.MinimumExtentCount\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets or sets the minimum number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances the <xref href=\"System.IO.Log.LogStore\"></xref> can contain.\n  remarks: ''\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/p-system.io.log.logpolic_3_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/p-system.io.log.logpolic_3_1.vb)]\"\n  syntax:\n    content: public int MinimumExtentCount { get; set; }\n    return:\n      type: System.Int32\n      description: An integer that specifies the minimum number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances the <xref href=\"System.IO.Log.LogStore\"></xref> can contain. Since the CLFS requires that the minimum extent count to be 2 extents, this value should be at least 2.\n  overload: System.IO.Log.LogPolicy.MinimumExtentCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogPolicy.NewExtentPrefix\n  id: NewExtentPrefix\n  parent: System.IO.Log.LogPolicy\n  langs:\n  - csharp\n  name: NewExtentPrefix\n  nameWithType: LogPolicy.NewExtentPrefix\n  fullName: System.IO.Log.LogPolicy.NewExtentPrefix\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets or sets the prefix string for automatically created extents.\n  remarks: This string can contain a full path to the directory where the new extent is created. The default path to the extent is the directory that contains the base <xref:System.IO.Log.LogStore> file.\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/p-system.io.log.logpolic_6_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/p-system.io.log.logpolic_6_1.vb)]\"\n  syntax:\n    content: public string NewExtentPrefix { get; set; }\n    return:\n      type: System.String\n      description: The prefix string for automatically created extents.\n  overload: System.IO.Log.LogPolicy.NewExtentPrefix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogPolicy.NextExtentSuffix\n  id: NextExtentSuffix\n  parent: System.IO.Log.LogPolicy\n  langs:\n  - csharp\n  name: NextExtentSuffix\n  nameWithType: LogPolicy.NextExtentSuffix\n  fullName: System.IO.Log.LogPolicy.NextExtentSuffix\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets or sets the suffix number for new extents.\n  remarks: ''\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/p-system.io.log.logpolic_7_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/p-system.io.log.logpolic_7_1.vb)]\"\n  syntax:\n    content: public long NextExtentSuffix { get; set; }\n    return:\n      type: System.Int64\n      description: The suffix number for new extents.\n  overload: System.IO.Log.LogPolicy.NextExtentSuffix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogPolicy.PinnedTailThreshold\n  id: PinnedTailThreshold\n  parent: System.IO.Log.LogPolicy\n  langs:\n  - csharp\n  name: PinnedTailThreshold\n  nameWithType: LogPolicy.PinnedTailThreshold\n  fullName: System.IO.Log.LogPolicy.PinnedTailThreshold\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets or sets the amount of space that the <xref href=\"System.IO.Log.LogRecordSequence.TailPinned\"></xref> event requires for advancing the base of the log.\n  remarks: The amount of space can be expressed in percentage, or in bytes which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/p-system.io.log.logpolic_5_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/p-system.io.log.logpolic_5_1.vb)]\"\n  syntax:\n    content: public System.IO.Log.PolicyUnit PinnedTailThreshold { get; set; }\n    return:\n      type: System.IO.Log.PolicyUnit\n      description: The amount of space that the <xref href=\"System.IO.Log.LogRecordSequence.TailPinned\"></xref> event requires for advancing the base of the log.\n  overload: System.IO.Log.LogPolicy.PinnedTailThreshold*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogPolicy.Refresh\n  id: Refresh\n  parent: System.IO.Log.LogPolicy\n  langs:\n  - csharp\n  name: Refresh()\n  nameWithType: LogPolicy.Refresh()\n  fullName: System.IO.Log.LogPolicy.Refresh()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Reads the current policy for the <xref href=\"System.IO.Log.LogStore\"></xref>, discarding any changes that may have been made.\n  remarks: ''\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/m-system.io.log.logpolic_1_1.cs)]\\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/m-system.io.log.logpolic_1_1.vb)]\"\n  syntax:\n    content: public void Refresh ();\n    parameters: []\n  overload: System.IO.Log.LogPolicy.Refresh*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The set of policies installed on the log is invalid.  \\n  \\n -or-  \\n  \\n A policy of the log prevented this operation from completing.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The request could not be performed because of an unexpected I/O exception.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Setting this policy is not supported on the current platform.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of the program.\n  - type: System.IO.Log.SequenceFullException\n    commentId: T:System.IO.Log.SequenceFullException\n    description: The record sequence is full.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IO.IOException\n  isExternal: true\n  name: System.IO.IOException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.OutOfMemoryException\n  isExternal: true\n  name: System.OutOfMemoryException\n- uid: System.IO.PathTooLongException\n  isExternal: true\n  name: System.IO.PathTooLongException\n- uid: System.IO.Log.SequenceFullException\n  parent: System.IO.Log\n  isExternal: false\n  name: SequenceFullException\n  nameWithType: SequenceFullException\n  fullName: System.IO.Log.SequenceFullException\n- uid: System.UnauthorizedAccessException\n  isExternal: true\n  name: System.UnauthorizedAccessException\n- uid: System.IO.Log.LogPolicy.AutoGrow\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: AutoGrow\n  nameWithType: LogPolicy.AutoGrow\n  fullName: System.IO.Log.LogPolicy.AutoGrow\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Log.LogPolicy.AutoShrinkPercentage\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: AutoShrinkPercentage\n  nameWithType: LogPolicy.AutoShrinkPercentage\n  fullName: System.IO.Log.LogPolicy.AutoShrinkPercentage\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Log.LogPolicy.Commit\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: Commit()\n  nameWithType: LogPolicy.Commit()\n  fullName: System.IO.Log.LogPolicy.Commit()\n- uid: System.IO.Log.LogPolicy.GrowthRate\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: GrowthRate\n  nameWithType: LogPolicy.GrowthRate\n  fullName: System.IO.Log.LogPolicy.GrowthRate\n- uid: System.IO.Log.PolicyUnit\n  parent: System.IO.Log\n  isExternal: false\n  name: PolicyUnit\n  nameWithType: PolicyUnit\n  fullName: System.IO.Log.PolicyUnit\n- uid: System.IO.Log.LogPolicy.MaximumExtentCount\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: MaximumExtentCount\n  nameWithType: LogPolicy.MaximumExtentCount\n  fullName: System.IO.Log.LogPolicy.MaximumExtentCount\n- uid: System.IO.Log.LogPolicy.MinimumExtentCount\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: MinimumExtentCount\n  nameWithType: LogPolicy.MinimumExtentCount\n  fullName: System.IO.Log.LogPolicy.MinimumExtentCount\n- uid: System.IO.Log.LogPolicy.NewExtentPrefix\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: NewExtentPrefix\n  nameWithType: LogPolicy.NewExtentPrefix\n  fullName: System.IO.Log.LogPolicy.NewExtentPrefix\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Log.LogPolicy.NextExtentSuffix\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: NextExtentSuffix\n  nameWithType: LogPolicy.NextExtentSuffix\n  fullName: System.IO.Log.LogPolicy.NextExtentSuffix\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Log.LogPolicy.PinnedTailThreshold\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: PinnedTailThreshold\n  nameWithType: LogPolicy.PinnedTailThreshold\n  fullName: System.IO.Log.LogPolicy.PinnedTailThreshold\n- uid: System.IO.Log.LogPolicy.Refresh\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: Refresh()\n  nameWithType: LogPolicy.Refresh()\n  fullName: System.IO.Log.LogPolicy.Refresh()\n- uid: System.IO.Log.LogPolicy.AutoGrow*\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: AutoGrow\n  nameWithType: LogPolicy.AutoGrow\n- uid: System.IO.Log.LogPolicy.AutoShrinkPercentage*\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: AutoShrinkPercentage\n  nameWithType: LogPolicy.AutoShrinkPercentage\n- uid: System.IO.Log.LogPolicy.Commit*\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: Commit\n  nameWithType: LogPolicy.Commit\n- uid: System.IO.Log.LogPolicy.GrowthRate*\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: GrowthRate\n  nameWithType: LogPolicy.GrowthRate\n- uid: System.IO.Log.LogPolicy.MaximumExtentCount*\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: MaximumExtentCount\n  nameWithType: LogPolicy.MaximumExtentCount\n- uid: System.IO.Log.LogPolicy.MinimumExtentCount*\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: MinimumExtentCount\n  nameWithType: LogPolicy.MinimumExtentCount\n- uid: System.IO.Log.LogPolicy.NewExtentPrefix*\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: NewExtentPrefix\n  nameWithType: LogPolicy.NewExtentPrefix\n- uid: System.IO.Log.LogPolicy.NextExtentSuffix*\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: NextExtentSuffix\n  nameWithType: LogPolicy.NextExtentSuffix\n- uid: System.IO.Log.LogPolicy.PinnedTailThreshold*\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: PinnedTailThreshold\n  nameWithType: LogPolicy.PinnedTailThreshold\n- uid: System.IO.Log.LogPolicy.Refresh*\n  parent: System.IO.Log.LogPolicy\n  isExternal: false\n  name: Refresh\n  nameWithType: LogPolicy.Refresh\n"}