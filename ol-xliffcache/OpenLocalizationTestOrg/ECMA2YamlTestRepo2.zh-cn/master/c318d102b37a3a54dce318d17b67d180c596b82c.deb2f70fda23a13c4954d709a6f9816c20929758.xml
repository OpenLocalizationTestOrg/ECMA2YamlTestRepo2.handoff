{"nodes":[{"pos":[902,1015],"content":"An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints.","needQuote":true,"needEscape":true,"nodes":[{"content":"An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints.","pos":[0,113]}]},{"pos":[1027,1824],"content":"Derive a class from DiscoveryServiceExtension and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service. Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service. When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a DiscoveryServiceExtension. If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service. If an extension is not found the default discovery service implementation is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Derive a class from DiscoveryServiceExtension and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service. Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service. When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a DiscoveryServiceExtension. If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service. If an extension is not found the default discovery service implementation is used.","pos":[0,797],"nodes":[{"content":"Derive a class from DiscoveryServiceExtension and override the &lt;xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A&gt; method to return your custom discovery service.","pos":[0,196],"source":"Derive a class from DiscoveryServiceExtension and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service."},{"content":"Add your derived class to the &lt;xref:System.ServiceModel.ServiceHost&gt; extensions that host your discoverable service.","pos":[197,313],"source":" Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service."},{"content":"When the &lt;xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A&gt; is called the behavior iterates through the extensions in the service host and looks for a DiscoveryServiceExtension.","pos":[314,561],"source":" When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a DiscoveryServiceExtension."},{"content":"If one is found its &lt;xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A&gt; is called to get the custom discovery service.","pos":[562,714],"source":" If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service."},{"content":"If an extension is not found the default discovery service implementation is used.","pos":[715,797]}]}]},{"pos":[2626,2743],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Discovery.DiscoveryServiceExtension\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Discovery.DiscoveryServiceExtension\"></xref> class."},{"pos":[3437,3563],"content":"Override this method to return your custom <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Discovery.DiscoveryService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation.","needQuote":true,"needEscape":true,"source":"Override this method to return your custom <xref href=\"System.ServiceModel.Discovery.DiscoveryService\"></xref> implementation."},{"pos":[3575,3688],"content":"An &lt;xref:System.InvalidOperationException&gt; is thrown while opening the service host if this method returns <ph id=\"ph1\">`null`</ph>","needQuote":true,"needEscape":true,"source":"An <xref:System.InvalidOperationException> is thrown while opening the service host if this method returns `null`"},{"pos":[3911,3953],"content":"A custom discovery service implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A custom discovery service implementation.","pos":[0,42]}]},{"pos":[4570,4621],"content":"Gets a read-only collection of published endpoints.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a read-only collection of published endpoints.","pos":[0,51]}]},{"pos":[4633,4965],"content":"The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened. When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened. When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection.","pos":[0,332],"nodes":[{"content":"The property should be accessed only after the &lt;xref:System.ServiceModel.ServiceHost&gt; has successfully opened.","pos":[0,110],"source":"The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened."},{"content":"When the &lt;xref:System.ServiceModel.ServiceHost&gt; is in &lt;xref:System.ServiceModel.CommunicationState&gt; state, the &lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt; is being generated and added to the collection.","pos":[111,332],"source":" When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection."}]}]},{"pos":[5281,5327],"content":"A read-only collection of published endpoints.","needQuote":true,"needEscape":true,"nodes":[{"content":"A read-only collection of published endpoints.","pos":[0,46]}]},{"pos":[6424,6436],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7589,7601],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  id: DiscoveryServiceExtension\n  children:\n  - System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor\n  - System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService\n  - System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints\n  - System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)\n  - System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)\n  langs:\n  - csharp\n  name: DiscoveryServiceExtension\n  nameWithType: DiscoveryServiceExtension\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  type: Class\n  summary: An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints.\n  remarks: Derive a class from DiscoveryServiceExtension and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service. Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service. When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a DiscoveryServiceExtension. If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service. If an extension is not found the default discovery service implementation is used.\n  syntax:\n    content: 'public abstract class DiscoveryServiceExtension : System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  langs:\n  - csharp\n  name: DiscoveryServiceExtension()\n  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension()\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.DiscoveryServiceExtension()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Discovery.DiscoveryServiceExtension\"></xref> class.\n  syntax:\n    content: protected DiscoveryServiceExtension ();\n    parameters: []\n  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService\n  id: GetDiscoveryService\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  langs:\n  - csharp\n  name: GetDiscoveryService()\n  nameWithType: DiscoveryServiceExtension.GetDiscoveryService()\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Override this method to return your custom <xref href=\"System.ServiceModel.Discovery.DiscoveryService\"></xref> implementation.\n  remarks: An <xref:System.InvalidOperationException> is thrown while opening the service host if this method returns `null`\n  syntax:\n    content: protected abstract System.ServiceModel.Discovery.DiscoveryService GetDiscoveryService ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Discovery.DiscoveryService\n      description: A custom discovery service implementation.\n  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints\n  id: PublishedEndpoints\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  langs:\n  - csharp\n  name: PublishedEndpoints\n  nameWithType: DiscoveryServiceExtension.PublishedEndpoints\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints\n  type: Property\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Gets a read-only collection of published endpoints.\n  remarks: The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened. When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata> PublishedEndpoints { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}\n      description: A read-only collection of published endpoints.\n  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)\n  id: System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)\n  isEii: true\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  langs:\n  - csharp\n  name: System.ServiceModel.IExtension(ServiceHostBase)\n  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  syntax:\n    content: void IExtension<ServiceHostBase>.Attach (System.ServiceModel.ServiceHostBase owner);\n    parameters:\n    - id: owner\n      type: System.ServiceModel.ServiceHostBase\n      description: To be added.\n  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)\n  id: System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)\n  isEii: true\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  langs:\n  - csharp\n  name: System.ServiceModel.IExtension(ServiceHostBase)\n  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  syntax:\n    content: void IExtension<ServiceHostBase>.Detach (System.ServiceModel.ServiceHostBase owner);\n    parameters:\n    - id: owner\n      type: System.ServiceModel.ServiceHostBase\n      description: To be added.\n  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Detach*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: DiscoveryServiceExtension()\n  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension()\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.DiscoveryServiceExtension()\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: GetDiscoveryService()\n  nameWithType: DiscoveryServiceExtension.GetDiscoveryService()\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService()\n- uid: System.ServiceModel.Discovery.DiscoveryService\n  parent: System.ServiceModel.Discovery\n  isExternal: false\n  name: DiscoveryService\n  nameWithType: DiscoveryService\n  fullName: System.ServiceModel.Discovery.DiscoveryService\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: PublishedEndpoints\n  nameWithType: DiscoveryServiceExtension.PublishedEndpoints\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<EndpointDiscoveryMetadata>\n  nameWithType: ReadOnlyCollection<EndpointDiscoveryMetadata>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Discovery.EndpointDiscoveryMetadata\n    name: EndpointDiscoveryMetadata\n    nameWithType: EndpointDiscoveryMetadata\n    fullName: EndpointDiscoveryMetadata\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: System.ServiceModel.IExtension(ServiceHostBase)\n  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: System.ServiceModel.IExtension(ServiceHostBase)\n  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor*\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: DiscoveryServiceExtension\n  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService*\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: GetDiscoveryService\n  nameWithType: DiscoveryServiceExtension.GetDiscoveryService\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints*\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: PublishedEndpoints\n  nameWithType: DiscoveryServiceExtension.PublishedEndpoints\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Attach*\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Attach\n  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Attach\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Detach*\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Detach\n  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Detach\n"}