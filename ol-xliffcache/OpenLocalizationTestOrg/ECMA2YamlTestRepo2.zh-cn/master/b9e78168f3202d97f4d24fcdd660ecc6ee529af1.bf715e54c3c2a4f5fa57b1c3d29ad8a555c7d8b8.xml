{"nodes":[{"pos":[6657,6669],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8706,8718],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9900,9912],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11138,11150],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11213,11225],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11964,11976],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12739,12751],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13871,13883],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13940,13952],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15026,15038],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15095,15107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16227,16239],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16298,16310],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17336,17348],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17407,17419],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18206,18218],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18270,18282],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19404,19416],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19475,19487],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20569,20581],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20640,20652],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21442,21454],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21511,21523],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23473,23485],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23547,23559],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23667,23679],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25287,25299],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25360,25372],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25489,25501],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25609,25621],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26815,26827],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26939,26951],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28108,28120],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28232,28244],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29477,29489],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29597,29609],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30898,30910],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30969,30981],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31089,31101],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32245,32257],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32316,32328],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33369,33381],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33440,33452],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34613,34625],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34684,34696],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36129,36141],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36258,36270],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36329,36341],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37547,37559],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37618,37630],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38790,38802],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38861,38873],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39751,39763],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40998,41010],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41118,41130],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42419,42431],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42490,42502],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42610,42622],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43778,43790],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43849,43861],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44916,44928],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44987,44999],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46144,46156],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46215,46227],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47317,47329],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47388,47400],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48585,48597],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48656,48668],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50129,50141],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50258,50270],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50329,50341],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51540,51552],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51604,51616],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52833,52845],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52897,52909],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54026,54038],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54095,54107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55413,55425],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55487,55499],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55607,55619],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57038,57050],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  id: ConstContainerRandomAccessIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid\n  langs:\n  - csharp\n  name: ConstContainerRandomAccessIterator<TValue>\n  nameWithType: ConstContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>\n  type: Class\n  syntax:\n    content: 'public class ConstContainerRandomAccessIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ConstContainerRandomAccessIterator()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerRandomAccessIterator ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ConstContainerRandomAccessIterator(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(ConstContainerRandomAccessIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ConstContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ConstContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue> _Cont, int _Offset);\n    parameters:\n    - id: _Cont\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n      description: To be added.\n    - id: _Offset\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: distance(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.distance(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.distance(ConstContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public int distance (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: distance(IRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: equal_to(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.equal_to(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.equal_to(ConstContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.Item(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public TValue this[int _Pos] { get; }\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: less_than(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.less_than(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.less_than(ConstContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool less_than (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: less_than(IRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)\n  id: move(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: move(Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.move(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.move(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual int move (int _Offset);\n    parameters:\n    - id: _Offset\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue> , int _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n      description: To be added.\n    - id: _Right\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32,ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32,ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32,ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue> , int _Left, Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n      description: To be added.\n    - id: _Left\n      type: System.Int32\n      description: To be added.\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Assign(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Assign(ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ConstContainerRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Decrement(ConstContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Decrement(ConstContainerRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ConstContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Decrement(ConstContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Decrement(ConstContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n      description: To be added.\n    - id: A_0\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Equality(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Equality(ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThan(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_GreaterThan(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_GreaterThan(ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThan(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Left, Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ConstContainerRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Increment(ConstContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Increment(ConstContainerRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ConstContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Increment(ConstContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Increment(ConstContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n      description: To be added.\n    - id: A_0\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Inequality(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Inequality(ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThan(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_LessThan(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_LessThan(ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThan(IRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Left, Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_MemberSelection(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_MemberSelection(ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_PointerDereference(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_PointerDereference(ConstContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Subtraction(IRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public int op_Subtraction (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Subtraction(ConstContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Subtraction(ConstContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Subtraction(ConstContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Subtraction (ref Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue> , int _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n      description: To be added.\n    - id: _Right\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: ConstContainerRandomAccessIterator()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: ConstContainerRandomAccessIterator(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerRandomAccessIterator\n  nameWithType: ConstContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: ConstContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: ConstContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessContainer<TValue>\n  nameWithType: IRandomAccessContainer<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.Clone()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.container()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: distance(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.distance(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.distance(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: distance(IRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: equal_to(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.equal_to(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.equal_to(ConstContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.Item(Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: less_than(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.less_than(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.less_than(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: less_than(IRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: move(Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.move(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.move(Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstContainerRandomAccessIterator<TValue>\n  nameWithType: ConstContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32,ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32,ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Addition(ConstContainerRandomAccessIterator<TValue>,Int32,ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Assign(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Assign(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Assign(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Assign(ContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement(ConstContainerRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Decrement(ConstContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Decrement(ConstContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement(ConstContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Decrement(ConstContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Decrement(ConstContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Equality(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Equality(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_GreaterThan(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_GreaterThan(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment(ConstContainerRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Increment(ConstContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Increment(ConstContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment(ConstContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Increment(ConstContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Increment(ConstContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Inequality(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Inequality(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_LessThan(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_LessThan(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan(IRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_MemberSelection(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_MemberSelection(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_MemberSelection(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_PointerDereference(ConstContainerRandomAccessIterator)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_PointerDereference(ConstContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_PointerDereference(ConstContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction(IRandomAccessIterator<TValue>)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction(ConstContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Subtraction(ConstContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.op_Subtraction(ConstContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator<TValue>.valid()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: ConstContainerRandomAccessIterator<TValue>\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.ConstContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: Clone\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.Clone\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: container\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.container\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: distance\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.distance\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: equal_to\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.equal_to\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: Item\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.Item\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: less_than\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.less_than\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: move\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.move\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: next\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.next\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Addition\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Assign\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Assign\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Decrement\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Equality\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_GreaterThan\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Increment\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Inequality\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_LessThan\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_LessThanOrEqual\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_MemberSelection\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_MemberSelection\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_PointerDereference\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_PointerDereference\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.op_Subtraction\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: prev\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.prev\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1\n  isExternal: false\n  name: valid\n  nameWithType: ConstContainerRandomAccessIterator<TValue>.valid\n"}