{"nodes":[{"pos":[1244,1333],"content":"Specifies values that succinctly describe the results of a masked text parsing operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies values that succinctly describe the results of a masked text parsing operation.","pos":[0,89]}]},{"pos":[1346,2031],"content":"The <xref:System.Windows.Forms.MaskedTextBox> control delegates the actual responsibility for parsing the input characters to the <xref:System.ComponentModel.MaskedTextProvider> class. Many of the methods of <xref:System.ComponentModel.MaskedTextProvider>, in addition to returning a <xref:System.Boolean> success result, also provide an additional output parameter of type MaskedTextResultHint. This enumeration provides additional information about the operation of the method.      > [!NOTE] >  The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method can be used to convert a MaskedTextResultHint value into a <xref:System.Boolean> success value.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control delegates the actual responsibility for parsing the input characters to the &lt;xref:System.ComponentModel.MaskedTextProvider&gt; class.","pos":[0,184],"source":"The <xref:System.Windows.Forms.MaskedTextBox> control delegates the actual responsibility for parsing the input characters to the <xref:System.ComponentModel.MaskedTextProvider> class."},{"content":"Many of the methods of &lt;xref:System.ComponentModel.MaskedTextProvider&gt;, in addition to returning a &lt;xref:System.Boolean&gt; success result, also provide an additional output parameter of type MaskedTextResultHint.","pos":[185,395],"source":" Many of the methods of <xref:System.ComponentModel.MaskedTextProvider>, in addition to returning a <xref:System.Boolean> success result, also provide an additional output parameter of type MaskedTextResultHint."},{"content":"This enumeration provides additional information about the operation of the method.","pos":[396,479]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A&gt; method can be used to convert a MaskedTextResultHint value into a &lt;xref:System.Boolean&gt; success value.","pos":[485,682],"source":"      > [!NOTE] >  The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method can be used to convert a MaskedTextResultHint value into a <xref:System.Boolean> success value."}]},{"pos":[2607,2696],"content":"Operation did not succeed.An input character was encountered that was not alphanumeric. .","needQuote":true,"needEscape":true,"nodes":[{"content":"Operation did not succeed.An input character was encountered that was not alphanumeric. .","pos":[0,89],"nodes":[{"content":"Operation did not succeed.An input character was encountered that was not alphanumeric.","pos":[0,87]},{"content":".","pos":[88,89]}]}]},{"pos":[2836,2848],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3318,3428],"content":"Operation did not succeed.An input character was encountered that was not a member of the ASCII character set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Operation did not succeed.An input character was encountered that was not a member of the ASCII character set.","pos":[0,110]}]},{"pos":[3561,3573],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4013,4245],"content":"Success. The operation succeeded because a literal, prompt or space character was an escaped character. For more information about escaped characters, see the <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Success. The operation succeeded because a literal, prompt or space character was an escaped character. For more information about escaped characters, see the <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*> method.","pos":[0,232],"nodes":[{"content":"Success.","pos":[0,8]},{"content":"The operation succeeded because a literal, prompt or space character was an escaped character.","pos":[9,103]},{"content":"For more information about escaped characters, see the &lt;xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*&gt; method.","pos":[104,232],"source":" For more information about escaped characters, see the <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*> method."}]}]},{"pos":[4372,4384],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4809,4892],"content":"Operation did not succeed. An input character was encountered that was not a digit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Operation did not succeed. An input character was encountered that was not a digit.","pos":[0,83],"nodes":[{"content":"Operation did not succeed.","pos":[0,26]},{"content":"An input character was encountered that was not a digit.","pos":[27,83]}]}]},{"pos":[5016,5028],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5448,5678],"content":"Operation did not succeed. The program encountered an  input character that was not valid. For more information about characters that are not valid, see the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Operation did not succeed. The program encountered an  input character that was not valid. For more information about characters that are not valid, see the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar*> method.","pos":[0,230],"nodes":[{"content":"Operation did not succeed.","pos":[0,26]},{"content":"The program encountered an  input character that was not valid.","pos":[27,90]},{"content":"For more information about characters that are not valid, see the &lt;xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar*&gt; method.","pos":[91,230],"source":" For more information about characters that are not valid, see the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar*> method."}]}]},{"pos":[5801,5813],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6243,6327],"content":"Operation did not succeed. An input character was encountered that was not a letter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Operation did not succeed. An input character was encountered that was not a letter.","pos":[0,84],"nodes":[{"content":"Operation did not succeed.","pos":[0,26]},{"content":"An input character was encountered that was not a letter.","pos":[27,84]}]}]},{"pos":[6452,6464],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6864,6979],"content":"Success. The primary operation was not performed because it was not needed; therefore, no side effect was produced.","needQuote":true,"needEscape":true,"nodes":[{"content":"Success. The primary operation was not performed because it was not needed; therefore, no side effect was produced.","pos":[0,115],"nodes":[{"content":"Success.","pos":[0,8]},{"content":"The primary operation was not performed because it was not needed; therefore, no side effect was produced.","pos":[9,115]}]}]},{"pos":[7098,7110],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7545,7640],"content":"Operation did not succeed. The current position in the formatted string is a literal character.","needQuote":true,"needEscape":true,"nodes":[{"content":"Operation did not succeed. The current position in the formatted string is a literal character.","pos":[0,95],"nodes":[{"content":"Operation did not succeed.","pos":[0,26]},{"content":"The current position in the formatted string is a literal character.","pos":[27,95]}]}]},{"pos":[7766,7778],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8228,8406],"content":"Operation did not succeed. The specified position is not in the range of the target string; typically it is either less than zero or greater then the length of the target string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Operation did not succeed. The specified position is not in the range of the target string; typically it is either less than zero or greater then the length of the target string.","pos":[0,178],"nodes":[{"content":"Operation did not succeed.","pos":[0,26]},{"content":"The specified position is not in the range of the target string; typically it is either less than zero or greater then the length of the target string.","pos":[27,178]}]}]},{"pos":[8535,8547],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9007,9248],"content":"Operation did not succeed. The prompt character is not valid at input, perhaps because the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Operation did not succeed.","pos":[0,26]},{"content":"The prompt character is not valid at input, perhaps because the &lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*&gt; property is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[27,241],"source":" The prompt character is not valid at input, perhaps because the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[9379,9391],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9801,10114],"content":"Success. The primary operation was not performed because it was not needed, but the method produced a side effect. For example, the <xref:System.ComponentModel.MaskedTextProvider.RemoveAt*> method can delete an unassigned edit position, which causes left-shifting of subsequent characters in the formatted string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Success. The primary operation was not performed because it was not needed, but the method produced a side effect. For example, the <xref:System.ComponentModel.MaskedTextProvider.RemoveAt*> method can delete an unassigned edit position, which causes left-shifting of subsequent characters in the formatted string.","pos":[0,313],"nodes":[{"content":"Success.","pos":[0,8]},{"content":"The primary operation was not performed because it was not needed, but the method produced a side effect.","pos":[9,114]},{"content":"For example, the &lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt*&gt; method can delete an unassigned edit position, which causes left-shifting of subsequent characters in the formatted string.","pos":[115,313],"source":" For example, the <xref:System.ComponentModel.MaskedTextProvider.RemoveAt*> method can delete an unassigned edit position, which causes left-shifting of subsequent characters in the formatted string."}]}]},{"pos":[10235,10247],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10702,10792],"content":"Operation did not succeed. An input character was encountered that was not a signed digit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Operation did not succeed. An input character was encountered that was not a signed digit.","pos":[0,90],"nodes":[{"content":"Operation did not succeed.","pos":[0,26]},{"content":"An input character was encountered that was not a signed digit.","pos":[27,90]}]}]},{"pos":[10922,10934],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11329,11370],"content":"Success. The primary operation succeeded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Success. The primary operation succeeded.","pos":[0,41],"nodes":[{"content":"Success.","pos":[0,8]},{"content":"The primary operation succeeded.","pos":[9,41]}]}]},{"pos":[11488,11500],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11975,12072],"content":"Operation did not succeed. There were not enough edit positions available to fulfill the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Operation did not succeed. There were not enough edit positions available to fulfill the request.","pos":[0,97],"nodes":[{"content":"Operation did not succeed.","pos":[0,26]},{"content":"There were not enough edit positions available to fulfill the request.","pos":[27,97]}]}]},{"pos":[12206,12218],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12613,12674],"content":"Unknown. The result of the operation could not be determined.","needQuote":true,"needEscape":true,"nodes":[{"content":"Unknown. The result of the operation could not be determined.","pos":[0,61],"nodes":[{"content":"Unknown.","pos":[0,8]},{"content":"The result of the operation could not be determined.","pos":[9,61]}]}]},{"pos":[12792,12804],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.MaskedTextResultHint\n  id: MaskedTextResultHint\n  children:\n  - System.ComponentModel.MaskedTextResultHint.AlphanumericCharacterExpected\n  - System.ComponentModel.MaskedTextResultHint.AsciiCharacterExpected\n  - System.ComponentModel.MaskedTextResultHint.CharacterEscaped\n  - System.ComponentModel.MaskedTextResultHint.DigitExpected\n  - System.ComponentModel.MaskedTextResultHint.InvalidInput\n  - System.ComponentModel.MaskedTextResultHint.LetterExpected\n  - System.ComponentModel.MaskedTextResultHint.NoEffect\n  - System.ComponentModel.MaskedTextResultHint.NonEditPosition\n  - System.ComponentModel.MaskedTextResultHint.PositionOutOfRange\n  - System.ComponentModel.MaskedTextResultHint.PromptCharNotAllowed\n  - System.ComponentModel.MaskedTextResultHint.SideEffect\n  - System.ComponentModel.MaskedTextResultHint.SignedDigitExpected\n  - System.ComponentModel.MaskedTextResultHint.Success\n  - System.ComponentModel.MaskedTextResultHint.UnavailableEditPosition\n  - System.ComponentModel.MaskedTextResultHint.Unknown\n  langs:\n  - csharp\n  name: MaskedTextResultHint\n  nameWithType: MaskedTextResultHint\n  fullName: System.ComponentModel.MaskedTextResultHint\n  type: Enum\n  summary: Specifies values that succinctly describe the results of a masked text parsing operation.\n  remarks: \"The <xref:System.Windows.Forms.MaskedTextBox> control delegates the actual responsibility for parsing the input characters to the <xref:System.ComponentModel.MaskedTextProvider> class. Many of the methods of <xref:System.ComponentModel.MaskedTextProvider>, in addition to returning a <xref:System.Boolean> success result, also provide an additional output parameter of type MaskedTextResultHint. This enumeration provides additional information about the operation of the method.  \\n  \\n> [!NOTE]\\n>  The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method can be used to convert a MaskedTextResultHint value into a <xref:System.Boolean> success value.\"\n  syntax:\n    content: public enum MaskedTextResultHint\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.AlphanumericCharacterExpected\n  id: AlphanumericCharacterExpected\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: AlphanumericCharacterExpected\n  nameWithType: MaskedTextResultHint.AlphanumericCharacterExpected\n  fullName: System.ComponentModel.MaskedTextResultHint.AlphanumericCharacterExpected\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Operation did not succeed.An input character was encountered that was not alphanumeric. .\n  syntax:\n    content: AlphanumericCharacterExpected\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.AsciiCharacterExpected\n  id: AsciiCharacterExpected\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: AsciiCharacterExpected\n  nameWithType: MaskedTextResultHint.AsciiCharacterExpected\n  fullName: System.ComponentModel.MaskedTextResultHint.AsciiCharacterExpected\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Operation did not succeed.An input character was encountered that was not a member of the ASCII character set.\n  syntax:\n    content: AsciiCharacterExpected\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.CharacterEscaped\n  id: CharacterEscaped\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: CharacterEscaped\n  nameWithType: MaskedTextResultHint.CharacterEscaped\n  fullName: System.ComponentModel.MaskedTextResultHint.CharacterEscaped\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Success. The operation succeeded because a literal, prompt or space character was an escaped character. For more information about escaped characters, see the <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*> method.\n  syntax:\n    content: CharacterEscaped\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.DigitExpected\n  id: DigitExpected\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: DigitExpected\n  nameWithType: MaskedTextResultHint.DigitExpected\n  fullName: System.ComponentModel.MaskedTextResultHint.DigitExpected\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Operation did not succeed. An input character was encountered that was not a digit.\n  syntax:\n    content: DigitExpected\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.InvalidInput\n  id: InvalidInput\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: InvalidInput\n  nameWithType: MaskedTextResultHint.InvalidInput\n  fullName: System.ComponentModel.MaskedTextResultHint.InvalidInput\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Operation did not succeed. The program encountered an  input character that was not valid. For more information about characters that are not valid, see the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar*> method.\n  syntax:\n    content: InvalidInput\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.LetterExpected\n  id: LetterExpected\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: LetterExpected\n  nameWithType: MaskedTextResultHint.LetterExpected\n  fullName: System.ComponentModel.MaskedTextResultHint.LetterExpected\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Operation did not succeed. An input character was encountered that was not a letter.\n  syntax:\n    content: LetterExpected\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.NoEffect\n  id: NoEffect\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: NoEffect\n  nameWithType: MaskedTextResultHint.NoEffect\n  fullName: System.ComponentModel.MaskedTextResultHint.NoEffect\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Success. The primary operation was not performed because it was not needed; therefore, no side effect was produced.\n  syntax:\n    content: NoEffect\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.NonEditPosition\n  id: NonEditPosition\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: NonEditPosition\n  nameWithType: MaskedTextResultHint.NonEditPosition\n  fullName: System.ComponentModel.MaskedTextResultHint.NonEditPosition\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Operation did not succeed. The current position in the formatted string is a literal character.\n  syntax:\n    content: NonEditPosition\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.PositionOutOfRange\n  id: PositionOutOfRange\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: PositionOutOfRange\n  nameWithType: MaskedTextResultHint.PositionOutOfRange\n  fullName: System.ComponentModel.MaskedTextResultHint.PositionOutOfRange\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Operation did not succeed. The specified position is not in the range of the target string; typically it is either less than zero or greater then the length of the target string.\n  syntax:\n    content: PositionOutOfRange\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.PromptCharNotAllowed\n  id: PromptCharNotAllowed\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: PromptCharNotAllowed\n  nameWithType: MaskedTextResultHint.PromptCharNotAllowed\n  fullName: System.ComponentModel.MaskedTextResultHint.PromptCharNotAllowed\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Operation did not succeed. The prompt character is not valid at input, perhaps because the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  syntax:\n    content: PromptCharNotAllowed\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.SideEffect\n  id: SideEffect\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: SideEffect\n  nameWithType: MaskedTextResultHint.SideEffect\n  fullName: System.ComponentModel.MaskedTextResultHint.SideEffect\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Success. The primary operation was not performed because it was not needed, but the method produced a side effect. For example, the <xref:System.ComponentModel.MaskedTextProvider.RemoveAt*> method can delete an unassigned edit position, which causes left-shifting of subsequent characters in the formatted string.\n  syntax:\n    content: SideEffect\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.SignedDigitExpected\n  id: SignedDigitExpected\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: SignedDigitExpected\n  nameWithType: MaskedTextResultHint.SignedDigitExpected\n  fullName: System.ComponentModel.MaskedTextResultHint.SignedDigitExpected\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Operation did not succeed. An input character was encountered that was not a signed digit.\n  syntax:\n    content: SignedDigitExpected\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.Success\n  id: Success\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: Success\n  nameWithType: MaskedTextResultHint.Success\n  fullName: System.ComponentModel.MaskedTextResultHint.Success\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Success. The primary operation succeeded.\n  syntax:\n    content: Success\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.UnavailableEditPosition\n  id: UnavailableEditPosition\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: UnavailableEditPosition\n  nameWithType: MaskedTextResultHint.UnavailableEditPosition\n  fullName: System.ComponentModel.MaskedTextResultHint.UnavailableEditPosition\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Operation did not succeed. There were not enough edit positions available to fulfill the request.\n  syntax:\n    content: UnavailableEditPosition\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.MaskedTextResultHint.Unknown\n  id: Unknown\n  parent: System.ComponentModel.MaskedTextResultHint\n  langs:\n  - csharp\n  name: Unknown\n  nameWithType: MaskedTextResultHint.Unknown\n  fullName: System.ComponentModel.MaskedTextResultHint.Unknown\n  type: Field\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Unknown. The result of the operation could not be determined.\n  syntax:\n    content: Unknown\n    return:\n      type: System.ComponentModel.MaskedTextResultHint\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.ComponentModel.MaskedTextResultHint.AlphanumericCharacterExpected\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: AlphanumericCharacterExpected\n  nameWithType: MaskedTextResultHint.AlphanumericCharacterExpected\n  fullName: System.ComponentModel.MaskedTextResultHint.AlphanumericCharacterExpected\n- uid: System.ComponentModel.MaskedTextResultHint\n  parent: System.ComponentModel\n  isExternal: false\n  name: MaskedTextResultHint\n  nameWithType: MaskedTextResultHint\n  fullName: System.ComponentModel.MaskedTextResultHint\n- uid: System.ComponentModel.MaskedTextResultHint.AsciiCharacterExpected\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: AsciiCharacterExpected\n  nameWithType: MaskedTextResultHint.AsciiCharacterExpected\n  fullName: System.ComponentModel.MaskedTextResultHint.AsciiCharacterExpected\n- uid: System.ComponentModel.MaskedTextResultHint.CharacterEscaped\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: CharacterEscaped\n  nameWithType: MaskedTextResultHint.CharacterEscaped\n  fullName: System.ComponentModel.MaskedTextResultHint.CharacterEscaped\n- uid: System.ComponentModel.MaskedTextResultHint.DigitExpected\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: DigitExpected\n  nameWithType: MaskedTextResultHint.DigitExpected\n  fullName: System.ComponentModel.MaskedTextResultHint.DigitExpected\n- uid: System.ComponentModel.MaskedTextResultHint.InvalidInput\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: InvalidInput\n  nameWithType: MaskedTextResultHint.InvalidInput\n  fullName: System.ComponentModel.MaskedTextResultHint.InvalidInput\n- uid: System.ComponentModel.MaskedTextResultHint.LetterExpected\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: LetterExpected\n  nameWithType: MaskedTextResultHint.LetterExpected\n  fullName: System.ComponentModel.MaskedTextResultHint.LetterExpected\n- uid: System.ComponentModel.MaskedTextResultHint.NoEffect\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: NoEffect\n  nameWithType: MaskedTextResultHint.NoEffect\n  fullName: System.ComponentModel.MaskedTextResultHint.NoEffect\n- uid: System.ComponentModel.MaskedTextResultHint.NonEditPosition\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: NonEditPosition\n  nameWithType: MaskedTextResultHint.NonEditPosition\n  fullName: System.ComponentModel.MaskedTextResultHint.NonEditPosition\n- uid: System.ComponentModel.MaskedTextResultHint.PositionOutOfRange\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: PositionOutOfRange\n  nameWithType: MaskedTextResultHint.PositionOutOfRange\n  fullName: System.ComponentModel.MaskedTextResultHint.PositionOutOfRange\n- uid: System.ComponentModel.MaskedTextResultHint.PromptCharNotAllowed\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: PromptCharNotAllowed\n  nameWithType: MaskedTextResultHint.PromptCharNotAllowed\n  fullName: System.ComponentModel.MaskedTextResultHint.PromptCharNotAllowed\n- uid: System.ComponentModel.MaskedTextResultHint.SideEffect\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: SideEffect\n  nameWithType: MaskedTextResultHint.SideEffect\n  fullName: System.ComponentModel.MaskedTextResultHint.SideEffect\n- uid: System.ComponentModel.MaskedTextResultHint.SignedDigitExpected\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: SignedDigitExpected\n  nameWithType: MaskedTextResultHint.SignedDigitExpected\n  fullName: System.ComponentModel.MaskedTextResultHint.SignedDigitExpected\n- uid: System.ComponentModel.MaskedTextResultHint.Success\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: Success\n  nameWithType: MaskedTextResultHint.Success\n  fullName: System.ComponentModel.MaskedTextResultHint.Success\n- uid: System.ComponentModel.MaskedTextResultHint.UnavailableEditPosition\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: UnavailableEditPosition\n  nameWithType: MaskedTextResultHint.UnavailableEditPosition\n  fullName: System.ComponentModel.MaskedTextResultHint.UnavailableEditPosition\n- uid: System.ComponentModel.MaskedTextResultHint.Unknown\n  parent: System.ComponentModel.MaskedTextResultHint\n  isExternal: false\n  name: Unknown\n  nameWithType: MaskedTextResultHint.Unknown\n  fullName: System.ComponentModel.MaskedTextResultHint.Unknown\n"}