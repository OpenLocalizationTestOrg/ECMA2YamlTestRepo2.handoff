{"nodes":[{"pos":[5910,6024],"content":"Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.","pos":[0,114]}]},{"pos":[6762,6887],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure using the specified byte value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure using the specified byte value."},{"pos":[7015,7171],"content":"A byte value to be stored in the &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; property of the new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A byte value to be stored in the <xref:System.Data.SqlTypes.SqlByte.Value*> property of the new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[7713,7812],"content":"Computes the sum of the two specified <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures.","needQuote":true,"needEscape":true,"source":"Computes the sum of the two specified <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structures."},{"pos":[8037,8099],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[8172,8234],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[8307,8484],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> property contains the results of the addition.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> property contains the results of the addition."},{"pos":[9059,9150],"content":"Computes the bitwise AND of its <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"Computes the bitwise AND of its <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands."},{"pos":[9382,9444],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[9517,9579],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[9652,9693],"content":"The results of the bitwise AND operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the bitwise AND operation.","pos":[0,41]}]},{"pos":[10270,10364],"content":"Computes the bitwise OR of its two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"Computes the bitwise OR of its two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands."},{"pos":[10595,10657],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[10730,10792],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[10865,10905],"content":"The results of the bitwise OR operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the bitwise OR operation.","pos":[0,40]}]},{"pos":[11399,11546],"content":"Compares this instance to the supplied <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this instance to the supplied <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> object and returns an indication of their relative values."},{"pos":[11721,11797],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to be compared.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> object to be compared."},{"pos":[11855,12496],"content":"A signed number that indicates the relative values of the instance and the object.       <table><thead><tr><th> Return Value       </th><th> Condition       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> This instance is less than the object.       </td></tr><tr><td> Zero       </td><td> This instance is the same as the object.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.       ","pos":[0,89],"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.","pos":[0,82]}]},{"content":"Return Value","pos":[112,124]},{"content":"Condition","pos":[141,150]},{"content":"Less than zero","pos":[191,205]},{"content":" This instance is less than the object.       ","pos":[221,267],"nodes":[{"content":"This instance is less than the object.","pos":[1,39]}]},{"content":"Zero","pos":[286,290]},{"content":" This instance is the same as the object.       ","pos":[306,354],"nodes":[{"content":"This instance is the same as the object.","pos":[1,41]}]},{"content":"Greater than zero","pos":[373,390]},{"content":"This instance is greater than the object       -or-       The object is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic)","pos":[407,580],"source":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)       "}]},{"pos":[12958,13069],"content":"Compares this instance to the supplied <xref:System.Object> and returns an indication of their relative values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares this instance to the supplied &lt;xref:System.Object&gt; and returns an indication of their relative values.","pos":[0,111],"source":"Compares this instance to the supplied <xref:System.Object> and returns an indication of their relative values."}]},{"pos":[13207,13247],"content":"The <xref:System.Object> to be compared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to be compared.","pos":[0,40],"source":"The <xref:System.Object> to be compared."}]},{"pos":[13305,13946],"content":"A signed number that indicates the relative values of the instance and the object.       <table><thead><tr><th> Return Value       </th><th> Condition       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> This instance is less than the object.       </td></tr><tr><td> Zero       </td><td> This instance is the same as the object.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.       ","pos":[0,89],"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.","pos":[0,82]}]},{"content":"Return Value","pos":[112,124]},{"content":"Condition","pos":[141,150]},{"content":"Less than zero","pos":[191,205]},{"content":" This instance is less than the object.       ","pos":[221,267],"nodes":[{"content":"This instance is less than the object.","pos":[1,39]}]},{"content":"Zero","pos":[286,290]},{"content":" This instance is the same as the object.       ","pos":[306,354],"nodes":[{"content":"This instance is the same as the object.","pos":[1,41]}]},{"content":"Greater than zero","pos":[373,390]},{"content":"This instance is greater than the object       -or-       The object is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic)","pos":[407,580],"source":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)       "}]},{"pos":[14508,14598],"content":"Divides its first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand by its second.","needQuote":true,"needEscape":true,"source":"Divides its first <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand by its second."},{"pos":[14826,14888],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[14961,15023],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[15096,15257],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; property contains the results of the division.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the results of the division."},{"pos":[15700,15876],"content":"Compares the supplied &lt;xref:System.Object&gt; parameter to the &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; property of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Compares the supplied <xref:System.Object> parameter to the <xref:System.Data.SqlTypes.SqlByte.Value*> property of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> object."},{"pos":[16021,16061],"content":"The <xref:System.Object> to be compared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to be compared.","pos":[0,40],"source":"The <xref:System.Object> to be compared."}]},{"pos":[16120,16355],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if object is an instance of <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the two are equal; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if object is an instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> and the two are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16913,17047],"content":"Performs a logical comparison of two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structures to determine whether they are equal."},{"pos":[17278,17340],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[17413,17475],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[17551,17833],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If either instance is null, then the <xref uid=\"langword_csharp_SqlByte\" name=\"SqlByte\" href=\"\"></xref> will be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two values are equal.","pos":[0,89],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,164],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"If either instance is null, then the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlByte\" name=\"SqlByte\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> will be null.","pos":[165,282],"source":" If either instance is null, then the <xref uid=\"langword_csharp_SqlByte\" name=\"SqlByte\" href=\"\"></xref> will be null."}]},{"pos":[18253,18293],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[18428,18462],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[18982,19100],"content":"Returns the XML Schema definition language (XSD) of the specified <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[19319,19373],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[19445,19610],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that indicates the XSD of the specified <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> value that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[20197,20331],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is greater than the second."},{"pos":[20567,20629],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[20702,20764],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[20840,21337],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance.","pos":[0,174],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[175,239],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[240,497],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[21960,22104],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structures to determine whether the first is greater than or equal to the second."},{"pos":[22347,22409],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[22482,22544],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[22620,23129],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance.","pos":[0,186],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,251],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[252,509],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[23532,23649],"content":"Gets a Boolean value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure is null.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value that indicates whether this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure is null."},{"pos":[23661,23749],"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."},{"pos":[23859,24003],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if null.","pos":[0,69],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[70,144],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[24571,24702],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is less than the second."},{"pos":[24935,24997],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[25070,25132],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[25208,25702],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance.","pos":[0,171],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,236],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[237,494],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[26307,26450],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is less than or equal to the second."},{"pos":[26690,26752],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[26825,26887],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[26963,27469],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance.","pos":[0,183],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,248],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[249,506],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[27876,27982],"content":"A constant representing the largest possible value of a <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A constant representing the largest possible value of a <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[27994,28049],"content":"The value of this constant is 255 or, hexadecimal 0xFF.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this constant is 255 or, hexadecimal 0xFF.","pos":[0,55]}]},{"pos":[28207,28219],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28568,28675],"content":"A constant representing the smallest possible value of a <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A constant representing the smallest possible value of a <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[28687,28719],"content":"The value of this constant is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this constant is 0.","pos":[0,32]}]},{"pos":[28877,28889],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29383,29503],"content":"Computes the remainder after dividing its first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand by its second.","needQuote":true,"needEscape":true,"source":"Computes the remainder after dividing its first <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand by its second."},{"pos":[29728,29790],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[29863,29925],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[29998,30132],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; contains the remainder.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> contains the remainder."},{"pos":[30692,30787],"content":"Divides two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values and returns the remainder.","needQuote":true,"needEscape":true,"source":"Divides two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> values and returns the remainder."},{"pos":[30799,30864],"content":"If either instance of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is null, the value will be null.","needQuote":true,"needEscape":true,"source":"If either instance of `x` or `y` is null, the value will be null."},{"pos":[31093,31145],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[31218,31270],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[31343,31427],"content":"The remainder left after division is performed on <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">x</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">y</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The remainder left after division is performed on <code>x</code> and <code>y</code>."},{"pos":[31996,32087],"content":"Computes the product of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"Computes the product of the two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands."},{"pos":[32317,32379],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[32452,32514],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[32587,32754],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; property contains the product of the multiplication.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the product of the multiplication."},{"pos":[33329,33445],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether they are not equal.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether they are not equal."},{"pos":[33679,33741],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[33814,33876],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[33952,34448],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,496],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[34833,34986],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.DBNull\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be assigned to this instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[34999,35173],"content":"`Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlByte> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">`Null`</ph> functions as a constant for the &lt;xref:System.Data.SqlTypes.SqlByte&gt; structure.","pos":[0,85],"source":"`Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlByte> structure."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[86,174],"source":" For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[35328,35340],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35807,35947],"content":"The ones complement operator performs a bitwise one's complement operation on its <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand.","needQuote":true,"needEscape":true,"source":"The ones complement operator performs a bitwise one's complement operation on its <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand."},{"pos":[36151,36213],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[36286,36502],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; property contains the ones complement of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the ones complement of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> parameter."},{"pos":[37095,37194],"content":"Computes the sum of the two specified <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures.","needQuote":true,"needEscape":true,"source":"Computes the sum of the two specified <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structures."},{"pos":[37427,37489],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[37562,37624],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[37697,37844],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; property contains the sum of the two operands.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the sum of the two operands."},{"pos":[38444,38535],"content":"Computes the bitwise AND of its <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"Computes the bitwise AND of its <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands."},{"pos":[38770,38832],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[38905,38967],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[39040,39081],"content":"The results of the bitwise AND operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the bitwise AND operation.","pos":[0,41]}]},{"pos":[39678,39772],"content":"Computes the bitwise OR of its two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"Computes the bitwise OR of its two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands."},{"pos":[40006,40068],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[40141,40203],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[40276,40316],"content":"The results of the bitwise OR operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the bitwise OR operation.","pos":[0,40]}]},{"pos":[40907,40997],"content":"Divides its first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand by its second.","needQuote":true,"needEscape":true,"source":"Divides its first <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand by its second."},{"pos":[41230,41292],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[41365,41427],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[41500,41661],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; property contains the results of the division.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the results of the division."},{"pos":[42251,42385],"content":"Performs a logical comparison of two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structures to determine whether they are equal."},{"pos":[42621,42683],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[42756,42818],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[42894,43390],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are not equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,496],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[43995,44064],"content":"Performs a bitwise exclusive-OR operation on the supplied parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a bitwise exclusive-OR operation on the supplied parameters.","pos":[0,69]}]},{"pos":[44300,44362],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[44435,44497],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[44570,44611],"content":"The results of the bitwise XOR operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the bitwise XOR operation.","pos":[0,41]}]},{"pos":[45396,45408],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45481,45493],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46196,46208],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46264,46276],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47058,47070],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47143,47155],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47930,47942],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48015,48027],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48795,48807],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48880,48892],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49660,49672],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49745,49757],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50525,50537],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50610,50622],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51390,51402],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51475,51487],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52262,52274],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52347,52359],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53134,53146],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53219,53231],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53836,53970],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is greater than the second."},{"pos":[54209,54271],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[54344,54406],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[54482,54979],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance.","pos":[0,174],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[175,239],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[240,497],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[55622,55768],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is greater than or equal to the second."},{"pos":[56014,56076],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[56149,56211],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[56287,56816],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref uid=\"langword_csharp_SqlBoolean\" name=\"SqlBoolean\" href=\"\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance.","pos":[0,186],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,251],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_SqlBoolean\" name=\"SqlBoolean\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[252,529],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref uid=\"langword_csharp_SqlBoolean\" name=\"SqlBoolean\" href=\"\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[57439,57451],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57524,57536],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58136,58252],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether they are not equal.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether they are not equal."},{"pos":[58490,58552],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[58625,58687],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[58763,59259],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,496],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[59851,59982],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is less than the second."},{"pos":[60218,60280],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[60353,60415],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[60491,60985],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance.","pos":[0,171],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,236],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[237,494],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[61610,61753],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is less than or equal to the second."},{"pos":[61996,62058],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[62131,62193],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[62269,62775],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance.","pos":[0,183],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,248],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[249,506],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[63367,63487],"content":"Computes the remainder after dividing its first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand by its second.","needQuote":true,"needEscape":true,"source":"Computes the remainder after dividing its first <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand by its second."},{"pos":[63719,63781],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[63854,63916],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[63989,64123],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; contains the remainder.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> contains the remainder."},{"pos":[64712,64803],"content":"Computes the product of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operands.","needQuote":true,"needEscape":true,"source":"Computes the product of the two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands."},{"pos":[65036,65098],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[65171,65233],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[65306,65473],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; property contains the product of the multiplication.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the product of the multiplication."},{"pos":[66011,66151],"content":"The ones complement operator performs a bitwise one's complement operation on its <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand.","needQuote":true,"needEscape":true,"source":"The ones complement operator performs a bitwise one's complement operation on its <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand."},{"pos":[66358,66420],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[66493,66709],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; property contains the ones complement of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the ones complement of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> parameter."},{"pos":[67320,67414],"content":"Subtracts the second <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand from the first.","needQuote":true,"needEscape":true,"source":"Subtracts the second <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand from the first."},{"pos":[67650,67712],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[67785,67847],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[67920,68031],"content":"The results of subtracting the second <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand from the first.","needQuote":true,"needEscape":true,"source":"The results of subtracting the second <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand from the first."},{"pos":[68477,68579],"content":"Converts the <xref:System.String> representation of a number to its 8-bit unsigned integer equivalent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the &lt;xref:System.String&gt; representation of a number to its 8-bit unsigned integer equivalent.","pos":[0,102],"source":"Converts the <xref:System.String> representation of a number to its 8-bit unsigned integer equivalent."}]},{"pos":[68737,68819],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be parsed.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> to be parsed."},{"pos":[68892,69079],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the 8-bit number represented by the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure that contains the 8-bit number represented by the <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> parameter."},{"pos":[69646,69740],"content":"Subtracts the second <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand from the first.","needQuote":true,"needEscape":true,"source":"Subtracts the second <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand from the first."},{"pos":[69970,70032],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[70105,70167],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[70240,70351],"content":"The results of subtracting the second <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operand from the first.","needQuote":true,"needEscape":true,"source":"The results of subtracting the second <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand from the first."},{"pos":[70987,71097],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[71270,71344],"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref>."},{"pos":[72084,72194],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[73179,73289],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[74001,74131],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[74305,74516],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; is non-zero; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if zero; otherwise Null.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Data.SqlTypes.SqlByte.Value*> is non-zero; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if zero; otherwise Null."},{"pos":[74947,75077],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>."},{"pos":[75251,75510],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlDecimal\" name=\"SqlDecimal\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlDecimal.Value<bpt id=\"p2\">*</bpt>&gt; equals the &lt;xref:System.Data.SqlTypes.SqlByte.Value<ept id=\"p2\">*</ept>&gt; of this <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlDecimal\" name=\"SqlDecimal\" href=\"\"></xref> structure whose <xref:System.Data.SqlTypes.SqlDecimal.Value*> equals the <xref:System.Data.SqlTypes.SqlByte.Value*> of this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[75936,76065],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."},{"pos":[76236,76397],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlDouble\" name=\"SqlDouble\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure with the same value as this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlDouble\" name=\"SqlDouble\" href=\"\"></xref> structure with the same value as this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[76817,76945],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>."},{"pos":[77113,77272],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure with the same value as this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"></xref> structure with the same value as this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[77691,77809],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt32\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>."},{"pos":[77977,78136],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure with the same value as this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"></xref> structure with the same value as this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[78555,78683],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[78851,79092],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure who &lt;xref:System.Data.SqlTypes.SqlInt64.Value<bpt id=\"p2\">*</bpt>&gt; equals the &lt;xref:System.Data.SqlTypes.SqlByte.Value<ept id=\"p2\">*</ept>&gt; of this <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> structure who <xref:System.Data.SqlTypes.SqlInt64.Value*> equals the <xref:System.Data.SqlTypes.SqlByte.Value*> of this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[79511,79639],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[79807,80060],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlMoney\" name=\"SqlMoney\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlMoney.Value<bpt id=\"p2\">*</bpt>&gt; equals the &lt;xref:System.Data.SqlTypes.SqlByte.Value<ept id=\"p2\">*</ept>&gt; of this <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlMoney\" name=\"SqlMoney\" href=\"\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> equals the <xref:System.Data.SqlTypes.SqlByte.Value*> of this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[80484,80613],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>."},{"pos":[80784,80998],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlSingle\" name=\"SqlSingle\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that has the same &lt;xref:System.Data.SqlTypes.SqlSingle.Value*&gt; as this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlSingle\" name=\"SqlSingle\" href=\"\"></xref> structure that has the same <xref:System.Data.SqlTypes.SqlSingle.Value*> as this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[81423,81554],"content":"Converts this instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to <xref href=\"System.Data.SqlTypes.SqlString\"></xref>."},{"pos":[81725,81950],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlString\" name=\"SqlString\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the string representation of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure's &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt;.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_SqlString\" name=\"SqlString\" href=\"\"></xref> that contains the string representation of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure's <xref:System.Data.SqlTypes.SqlByte.Value*>."},{"pos":[82360,82460],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to a &lt;xref:System.String&gt;.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to a <xref:System.String>."},{"pos":[82596,82894],"content":"A string that contains the <xref:System.Data.SqlTypes.SqlByte.Value*> of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>. If the <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> is null, the <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> will be a null string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,127],"source":"A string that contains the <xref:System.Data.SqlTypes.SqlByte.Value*> of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"content":"If the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be a null string.","pos":[128,298],"source":" If the <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> is null, the <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> will be a null string."}]},{"pos":[83282,83391],"content":"Gets the value of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure. This property is read-only","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,82],"source":"Gets the value of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"content":"This property is read-only","pos":[83,109]}]},{"pos":[83497,83574],"content":"The value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The value of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[84116,84185],"content":"Performs a bitwise exclusive-OR operation on the supplied parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a bitwise exclusive-OR operation on the supplied parameters.","pos":[0,69]}]},{"pos":[84410,84472],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[84545,84607],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[84680,84713],"content":"The results of the XOR operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the XOR operation.","pos":[0,33]}]},{"pos":[85088,85274],"content":"Represents a zero value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlByte.Value*&gt; property of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a zero value that can be assigned to the <xref:System.Data.SqlTypes.SqlByte.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure."},{"pos":[85286,85369],"content":"The Zero field is a constant for the <xref:System.Data.SqlTypes.SqlByte> structure.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Zero field is a constant for the &lt;xref:System.Data.SqlTypes.SqlByte&gt; structure.","pos":[0,83],"source":"The Zero field is a constant for the <xref:System.Data.SqlTypes.SqlByte> structure."}]},{"pos":[85523,85535],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlTypes.SqlByte\n  id: SqlByte\n  children:\n  - System.Data.SqlTypes.SqlByte.#ctor(System.Byte)\n  - System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.CompareTo(System.Object)\n  - System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.Equals(System.Object)\n  - System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.GetHashCode\n  - System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  - System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.IsNull\n  - System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.MaxValue\n  - System.Data.SqlTypes.SqlByte.MinValue\n  - System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.Null\n  - System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte to System.Byte)\n  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)\n  - System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.Parse(System.String)\n  - System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema\n  - System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  - System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  - System.Data.SqlTypes.SqlByte.ToSqlBoolean\n  - System.Data.SqlTypes.SqlByte.ToSqlDecimal\n  - System.Data.SqlTypes.SqlByte.ToSqlDouble\n  - System.Data.SqlTypes.SqlByte.ToSqlInt16\n  - System.Data.SqlTypes.SqlByte.ToSqlInt32\n  - System.Data.SqlTypes.SqlByte.ToSqlInt64\n  - System.Data.SqlTypes.SqlByte.ToSqlMoney\n  - System.Data.SqlTypes.SqlByte.ToSqlSingle\n  - System.Data.SqlTypes.SqlByte.ToSqlString\n  - System.Data.SqlTypes.SqlByte.ToString\n  - System.Data.SqlTypes.SqlByte.Value\n  - System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlByte.Zero\n  langs:\n  - csharp\n  name: SqlByte\n  nameWithType: SqlByte\n  fullName: System.Data.SqlTypes.SqlByte\n  type: Struct\n  summary: Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.\n  syntax:\n    content: >-\n      [System.Xml.Serialization.XmlSchemaProvider(\"GetXsdType\")]\n\n      public struct SqlByte : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.IComparable\n  - System.Xml.Serialization.IXmlSerializable\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.#ctor(System.Byte)\n  id: '#ctor(System.Byte)'\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: SqlByte(Byte)\n  nameWithType: SqlByte.SqlByte(Byte)\n  fullName: System.Data.SqlTypes.SqlByte.SqlByte(Byte)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure using the specified byte value.\n  syntax:\n    content: public SqlByte (byte value);\n    parameters:\n    - id: value\n      type: System.Byte\n      description: A byte value to be stored in the <xref:System.Data.SqlTypes.SqlByte.Value*> property of the new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlByte.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Add(SqlByte,SqlByte)\n  nameWithType: SqlByte.Add(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Add(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the sum of the two specified <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structures.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte Add (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> property contains the results of the addition.\n  overload: System.Data.SqlTypes.SqlByte.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: BitwiseAnd(SqlByte,SqlByte)\n  nameWithType: SqlByte.BitwiseAnd(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.BitwiseAnd(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise AND of its <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte BitwiseAnd (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: The results of the bitwise AND operation.\n  overload: System.Data.SqlTypes.SqlByte.BitwiseAnd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: BitwiseOr(SqlByte,SqlByte)\n  nameWithType: SqlByte.BitwiseOr(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.BitwiseOr(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise OR of its two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte BitwiseOr (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: The results of the bitwise OR operation.\n  overload: System.Data.SqlTypes.SqlByte.BitwiseOr*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)\n  id: CompareTo(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: CompareTo(SqlByte)\n  nameWithType: SqlByte.CompareTo(SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.CompareTo(SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this instance to the supplied <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> object and returns an indication of their relative values.\n  syntax:\n    content: public int CompareTo (System.Data.SqlTypes.SqlByte value);\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlByte\n      description: The <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> object to be compared.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of the instance and the object.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than the object.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is the same as the object.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than the object  \\n  \\n -or-  \\n  \\n The object is a null reference (<xref uid=\\\"langword_csharp_Nothing\\\" name=\\\"Nothing\\\" href=\\\"\\\"></xref> in Visual Basic)  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlByte.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: SqlByte.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlByte.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this instance to the supplied <xref:System.Object> and returns an indication of their relative values.\n  syntax:\n    content: public int CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to be compared.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of the instance and the object.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than the object.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is the same as the object.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than the object  \\n  \\n -or-  \\n  \\n The object is a null reference (<xref uid=\\\"langword_csharp_Nothing\\\" name=\\\"Nothing\\\" href=\\\"\\\"></xref> in Visual Basic)  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlByte.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Divide(SqlByte,SqlByte)\n  nameWithType: SqlByte.Divide(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Divide(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Divides its first <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand by its second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte Divide (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the results of the division.\n  overload: System.Data.SqlTypes.SqlByte.Divide*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SqlByte.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlByte.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares the supplied <xref:System.Object> parameter to the <xref:System.Data.SqlTypes.SqlByte.Value*> property of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> object.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to be compared.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if object is an instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> and the two are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Equals(SqlByte,SqlByte)\n  nameWithType: SqlByte.Equals(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Equals(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structures to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If either instance is null, then the <xref uid=\"langword_csharp_SqlByte\" name=\"SqlByte\" href=\"\"></xref> will be null.\n  overload: System.Data.SqlTypes.SqlByte.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.GetHashCode\n  id: GetHashCode\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SqlByte.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlByte.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Data.SqlTypes.SqlByte.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlByte.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlByte.GetXsdType(XmlSchemaSet)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  syntax:\n    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);\n    parameters:\n    - id: schemaSet\n      type: System.Xml.Schema.XmlSchemaSet\n      description: A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> value that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.GetXsdType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: GreaterThan(SqlByte,SqlByte)\n  nameWithType: SqlByte.GreaterThan(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.GreaterThan(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is greater than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: GreaterThanOrEqual(SqlByte,SqlByte)\n  nameWithType: SqlByte.GreaterThanOrEqual(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structures to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: IsNull\n  nameWithType: SqlByte.IsNull\n  fullName: System.Data.SqlTypes.SqlByte.IsNull\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets a Boolean value that indicates whether this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure is null.\n  remarks: For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public bool IsNull { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.IsNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: LessThan(SqlByte,SqlByte)\n  nameWithType: SqlByte.LessThan(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.LessThan(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is less than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: LessThanOrEqual(SqlByte,SqlByte)\n  nameWithType: SqlByte.LessThanOrEqual(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.LessThanOrEqual(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.MaxValue\n  id: MaxValue\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: MaxValue\n  nameWithType: SqlByte.MaxValue\n  fullName: System.Data.SqlTypes.SqlByte.MaxValue\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: A constant representing the largest possible value of a <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  remarks: The value of this constant is 255 or, hexadecimal 0xFF.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlByte MaxValue;\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.MinValue\n  id: MinValue\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: MinValue\n  nameWithType: SqlByte.MinValue\n  fullName: System.Data.SqlTypes.SqlByte.MinValue\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: A constant representing the smallest possible value of a <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  remarks: The value of this constant is 0.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlByte MinValue;\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Mod(SqlByte,SqlByte)\n  nameWithType: SqlByte.Mod(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Mod(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the remainder after dividing its first <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand by its second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte Mod (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> contains the remainder.\n  overload: System.Data.SqlTypes.SqlByte.Mod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Modulus(SqlByte,SqlByte)\n  nameWithType: SqlByte.Modulus(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Modulus(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Divides two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> values and returns the remainder.\n  remarks: If either instance of `x` or `y` is null, the value will be null.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte Modulus (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: The remainder left after division is performed on <code>x</code> and <code>y</code>.\n  overload: System.Data.SqlTypes.SqlByte.Modulus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Multiply(SqlByte,SqlByte)\n  nameWithType: SqlByte.Multiply(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Multiply(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the product of the two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte Multiply (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the product of the multiplication.\n  overload: System.Data.SqlTypes.SqlByte.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: NotEquals(SqlByte,SqlByte)\n  nameWithType: SqlByte.NotEquals(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.NotEquals(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether they are not equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.NotEquals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Null\n  id: \"Null\"\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: SqlByte.Null\n  fullName: System.Data.SqlTypes.SqlByte.Null\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n  remarks: '`Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlByte> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlByte Null;\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)\n  id: OnesComplement(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: OnesComplement(SqlByte)\n  nameWithType: SqlByte.OnesComplement(SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.OnesComplement(SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The ones complement operator performs a bitwise one's complement operation on its <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte OnesComplement (System.Data.SqlTypes.SqlByte x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the ones complement of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> parameter.\n  overload: System.Data.SqlTypes.SqlByte.OnesComplement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Addition(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Addition(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Addition(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the sum of the two specified <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structures.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Addition (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the sum of the two operands.\n  overload: System.Data.SqlTypes.SqlByte.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_BitwiseAnd(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_BitwiseAnd(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_BitwiseAnd(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise AND of its <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_BitwiseAnd (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: The results of the bitwise AND operation.\n  overload: System.Data.SqlTypes.SqlByte.op_BitwiseAnd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_BitwiseOr(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_BitwiseOr(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_BitwiseOr(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise OR of its two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_BitwiseOr (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: The results of the bitwise OR operation.\n  overload: System.Data.SqlTypes.SqlByte.op_BitwiseOr*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Division(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Division(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Division(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Divides its first <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand by its second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Division (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the results of the division.\n  overload: System.Data.SqlTypes.SqlByte.op_Division*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Equality(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Equality(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Equality(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structures to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_ExclusiveOr(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_ExclusiveOr(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_ExclusiveOr(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a bitwise exclusive-OR operation on the supplied parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_ExclusiveOr (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: The results of the bitwise XOR operation.\n  overload: System.Data.SqlTypes.SqlByte.op_ExclusiveOr*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)\n  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Explicit(SqlBoolean)\n  nameWithType: SqlByte.op_Explicit(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlBoolean x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte to System.Byte)\n  id: op_Explicit(System.Data.SqlTypes.SqlByte to System.Byte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Explicit(SqlByte)\n  nameWithType: SqlByte.op_Explicit(SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static byte op_Explicit (System.Data.SqlTypes.SqlByte x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n    return:\n      type: System.Byte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)\n  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Explicit(SqlDecimal)\n  nameWithType: SqlByte.op_Explicit(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlDecimal)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlDecimal x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)\n  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Explicit(SqlDouble)\n  nameWithType: SqlByte.op_Explicit(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlDouble x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)\n  id: op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Explicit(SqlInt16)\n  nameWithType: SqlByte.op_Explicit(SqlInt16)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt16)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlInt16 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt16\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)\n  id: op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Explicit(SqlInt32)\n  nameWithType: SqlByte.op_Explicit(SqlInt32)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt32)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlInt32 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt32\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)\n  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Explicit(SqlInt64)\n  nameWithType: SqlByte.op_Explicit(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlInt64 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)\n  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Explicit(SqlMoney)\n  nameWithType: SqlByte.op_Explicit(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlMoney x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)\n  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Explicit(SqlSingle)\n  nameWithType: SqlByte.op_Explicit(SqlSingle)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlSingle)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlSingle x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlSingle\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)\n  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Explicit(SqlString)\n  nameWithType: SqlByte.op_Explicit(SqlString)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlString)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Explicit (System.Data.SqlTypes.SqlString x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlString\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_GreaterThan(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_GreaterThan(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_GreaterThan(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is greater than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_GreaterThanOrEqual(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref uid=\"langword_csharp_SqlBoolean\" name=\"SqlBoolean\" href=\"\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)\n  id: op_Implicit(System.Byte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Implicit(Byte)\n  nameWithType: SqlByte.op_Implicit(Byte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Implicit(Byte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Implicit (byte x);\n    parameters:\n    - id: x\n      type: System.Byte\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlByte.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Inequality(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Inequality(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Inequality(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether they are not equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_LessThan(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_LessThan(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_LessThan(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is less than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_LessThanOrEqual(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Modulus(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Modulus(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Modulus(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the remainder after dividing its first <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand by its second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Modulus (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> contains the remainder.\n  overload: System.Data.SqlTypes.SqlByte.op_Modulus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Multiply(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Multiply(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Multiply(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the product of the two <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Multiply (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the product of the multiplication.\n  overload: System.Data.SqlTypes.SqlByte.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)\n  id: op_OnesComplement(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_OnesComplement(SqlByte)\n  nameWithType: SqlByte.op_OnesComplement(SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_OnesComplement(SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The ones complement operator performs a bitwise one's complement operation on its <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_OnesComplement (System.Data.SqlTypes.SqlByte x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose <xref:System.Data.SqlTypes.SqlByte.Value*> property contains the ones complement of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> parameter.\n  overload: System.Data.SqlTypes.SqlByte.op_OnesComplement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: op_Subtraction(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Subtraction(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Subtraction(SqlByte,SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Subtracts the second <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand from the first.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte op_Subtraction (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: The results of subtracting the second <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand from the first.\n  overload: System.Data.SqlTypes.SqlByte.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: SqlByte.Parse(String)\n  fullName: System.Data.SqlTypes.SqlByte.Parse(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts the <xref:System.String> representation of a number to its 8-bit unsigned integer equivalent.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte Parse (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> to be parsed.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure that contains the 8-bit number represented by the <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> parameter.\n  overload: System.Data.SqlTypes.SqlByte.Parse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Subtract(SqlByte,SqlByte)\n  nameWithType: SqlByte.Subtract(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Subtract(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Subtracts the second <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand from the first.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte Subtract (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: The results of subtracting the second <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> operand from the first.\n  overload: System.Data.SqlTypes.SqlByte.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema\n  id: System#Xml#Serialization#IXmlSerializable#GetSchema\n  isEii: true\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();\n    parameters: []\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: An <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: <xref uid=\"langword_csharp_XmlReader \" name=\"XmlReader \" href=\"\"></xref>\n  overload: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: <xref uid=\"langword_csharp_XmlWriter \" name=\"XmlWriter \" href=\"\"></xref>\n  overload: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.ToSqlBoolean\n  id: ToSqlBoolean\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: ToSqlBoolean()\n  nameWithType: SqlByte.ToSqlBoolean()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlBoolean()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Data.SqlTypes.SqlByte.Value*> is non-zero; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if zero; otherwise Null.\n  overload: System.Data.SqlTypes.SqlByte.ToSqlBoolean*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.ToSqlDecimal\n  id: ToSqlDecimal\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: ToSqlDecimal()\n  nameWithType: SqlByte.ToSqlDecimal()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlDecimal()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: A <xref uid=\"langword_csharp_SqlDecimal\" name=\"SqlDecimal\" href=\"\"></xref> structure whose <xref:System.Data.SqlTypes.SqlDecimal.Value*> equals the <xref:System.Data.SqlTypes.SqlByte.Value*> of this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlByte.ToSqlDecimal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.ToSqlDouble\n  id: ToSqlDouble\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: ToSqlDouble()\n  nameWithType: SqlByte.ToSqlDouble()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlDouble()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: A <xref uid=\"langword_csharp_SqlDouble\" name=\"SqlDouble\" href=\"\"></xref> structure with the same value as this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.ToSqlDouble*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.ToSqlInt16\n  id: ToSqlInt16\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: ToSqlInt16()\n  nameWithType: SqlByte.ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt16()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt16\n      description: A <xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"></xref> structure with the same value as this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.ToSqlInt16*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.ToSqlInt32\n  id: ToSqlInt32\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: ToSqlInt32()\n  nameWithType: SqlByte.ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt32()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt32\n      description: A <xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"></xref> structure with the same value as this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.ToSqlInt32*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.ToSqlInt64\n  id: ToSqlInt64\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: ToSqlInt64()\n  nameWithType: SqlByte.ToSqlInt64()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt64()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> structure who <xref:System.Data.SqlTypes.SqlInt64.Value*> equals the <xref:System.Data.SqlTypes.SqlByte.Value*> of this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  overload: System.Data.SqlTypes.SqlByte.ToSqlInt64*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.ToSqlMoney\n  id: ToSqlMoney\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: ToSqlMoney()\n  nameWithType: SqlByte.ToSqlMoney()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlMoney()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref uid=\"langword_csharp_SqlMoney\" name=\"SqlMoney\" href=\"\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> equals the <xref:System.Data.SqlTypes.SqlByte.Value*> of this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlByte.ToSqlMoney*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.ToSqlSingle\n  id: ToSqlSingle\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: ToSqlSingle()\n  nameWithType: SqlByte.ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlSingle()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlSingle\n      description: A <xref uid=\"langword_csharp_SqlSingle\" name=\"SqlSingle\" href=\"\"></xref> structure that has the same <xref:System.Data.SqlTypes.SqlSingle.Value*> as this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlByte.ToSqlSingle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.ToSqlString\n  id: ToSqlString\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: ToSqlString()\n  nameWithType: SqlByte.ToSqlString()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this instance of <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> to <xref href=\"System.Data.SqlTypes.SqlString\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlString ToSqlString ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: A <xref uid=\"langword_csharp_SqlString\" name=\"SqlString\" href=\"\"></xref> that contains the string representation of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure's <xref:System.Data.SqlTypes.SqlByte.Value*>.\n  overload: System.Data.SqlTypes.SqlByte.ToSqlString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.ToString\n  id: ToString\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SqlByte.ToString()\n  fullName: System.Data.SqlTypes.SqlByte.ToString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure to a <xref:System.String>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the <xref:System.Data.SqlTypes.SqlByte.Value*> of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>. If the <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> is null, the <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> will be a null string.\n  overload: System.Data.SqlTypes.SqlByte.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Value\n  nameWithType: SqlByte.Value\n  fullName: System.Data.SqlTypes.SqlByte.Value\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets the value of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure. This property is read-only\n  syntax:\n    content: public byte Value { get; }\n    return:\n      type: System.Byte\n      description: The value of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlByte.Value*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  id: Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Xor(SqlByte,SqlByte)\n  nameWithType: SqlByte.Xor(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Xor(SqlByte,SqlByte)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a bitwise exclusive-OR operation on the supplied parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlByte Xor (System.Data.SqlTypes.SqlByte x, System.Data.SqlTypes.SqlByte y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: The results of the XOR operation.\n  overload: System.Data.SqlTypes.SqlByte.Xor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlByte.Zero\n  id: Zero\n  parent: System.Data.SqlTypes.SqlByte\n  langs:\n  - csharp\n  name: Zero\n  nameWithType: SqlByte.Zero\n  fullName: System.Data.SqlTypes.SqlByte.Zero\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a zero value that can be assigned to the <xref:System.Data.SqlTypes.SqlByte.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure.\n  remarks: The Zero field is a constant for the <xref:System.Data.SqlTypes.SqlByte> structure.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlByte Zero;\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Data.SqlTypes.SqlByte.#ctor(System.Byte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: SqlByte(Byte)\n  nameWithType: SqlByte.SqlByte(Byte)\n  fullName: System.Data.SqlTypes.SqlByte.SqlByte(Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Add(SqlByte,SqlByte)\n  nameWithType: SqlByte.Add(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Add(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlByte\n  nameWithType: SqlByte\n  fullName: System.Data.SqlTypes.SqlByte\n- uid: System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: BitwiseAnd(SqlByte,SqlByte)\n  nameWithType: SqlByte.BitwiseAnd(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.BitwiseAnd(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: BitwiseOr(SqlByte,SqlByte)\n  nameWithType: SqlByte.BitwiseOr(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.BitwiseOr(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: CompareTo(SqlByte)\n  nameWithType: SqlByte.CompareTo(SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.CompareTo(SqlByte)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: SqlByte.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlByte.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Divide(SqlByte,SqlByte)\n  nameWithType: SqlByte.Divide(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Divide(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SqlByte.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlByte.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Equals(SqlByte,SqlByte)\n  nameWithType: SqlByte.Equals(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Equals(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  nameWithType: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n- uid: System.Data.SqlTypes.SqlByte.GetHashCode\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SqlByte.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlByte.GetHashCode()\n- uid: System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlByte.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlByte.GetXsdType(XmlSchemaSet)\n- uid: System.Xml.XmlQualifiedName\n  parent: System.Xml\n  isExternal: true\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: GreaterThan(SqlByte,SqlByte)\n  nameWithType: SqlByte.GreaterThan(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.GreaterThan(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: GreaterThanOrEqual(SqlByte,SqlByte)\n  nameWithType: SqlByte.GreaterThanOrEqual(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.IsNull\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlByte.IsNull\n  fullName: System.Data.SqlTypes.SqlByte.IsNull\n- uid: System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: LessThan(SqlByte,SqlByte)\n  nameWithType: SqlByte.LessThan(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.LessThan(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: LessThanOrEqual(SqlByte,SqlByte)\n  nameWithType: SqlByte.LessThanOrEqual(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.LessThanOrEqual(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.MaxValue\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: MaxValue\n  nameWithType: SqlByte.MaxValue\n  fullName: System.Data.SqlTypes.SqlByte.MaxValue\n- uid: System.Data.SqlTypes.SqlByte.MinValue\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: MinValue\n  nameWithType: SqlByte.MinValue\n  fullName: System.Data.SqlTypes.SqlByte.MinValue\n- uid: System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Mod(SqlByte,SqlByte)\n  nameWithType: SqlByte.Mod(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Mod(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Modulus(SqlByte,SqlByte)\n  nameWithType: SqlByte.Modulus(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Modulus(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Multiply(SqlByte,SqlByte)\n  nameWithType: SqlByte.Multiply(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Multiply(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: NotEquals(SqlByte,SqlByte)\n  nameWithType: SqlByte.NotEquals(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.NotEquals(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.Null\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: \"Null\"\n  nameWithType: SqlByte.Null\n  fullName: System.Data.SqlTypes.SqlByte.Null\n- uid: System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: OnesComplement(SqlByte)\n  nameWithType: SqlByte.OnesComplement(SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.OnesComplement(SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Addition(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Addition(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Addition(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_BitwiseAnd(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_BitwiseAnd(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_BitwiseAnd(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_BitwiseOr(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_BitwiseOr(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_BitwiseOr(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Division(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Division(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Division(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Equality(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Equality(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Equality(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_ExclusiveOr(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_ExclusiveOr(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_ExclusiveOr(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit(SqlBoolean)\n  nameWithType: SqlByte.op_Explicit(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte to System.Byte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit(SqlByte)\n  nameWithType: SqlByte.op_Explicit(SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit(SqlDecimal)\n  nameWithType: SqlByte.op_Explicit(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDecimal\n  nameWithType: SqlDecimal\n  fullName: System.Data.SqlTypes.SqlDecimal\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit(SqlDouble)\n  nameWithType: SqlByte.op_Explicit(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDouble\n  nameWithType: SqlDouble\n  fullName: System.Data.SqlTypes.SqlDouble\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit(SqlInt16)\n  nameWithType: SqlByte.op_Explicit(SqlInt16)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt16)\n- uid: System.Data.SqlTypes.SqlInt16\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt16\n  nameWithType: SqlInt16\n  fullName: System.Data.SqlTypes.SqlInt16\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit(SqlInt32)\n  nameWithType: SqlByte.op_Explicit(SqlInt32)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt32)\n- uid: System.Data.SqlTypes.SqlInt32\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt32\n  nameWithType: SqlInt32\n  fullName: System.Data.SqlTypes.SqlInt32\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit(SqlInt64)\n  nameWithType: SqlByte.op_Explicit(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt64\n  nameWithType: SqlInt64\n  fullName: System.Data.SqlTypes.SqlInt64\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit(SqlMoney)\n  nameWithType: SqlByte.op_Explicit(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlMoney\n  nameWithType: SqlMoney\n  fullName: System.Data.SqlTypes.SqlMoney\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit(SqlSingle)\n  nameWithType: SqlByte.op_Explicit(SqlSingle)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlSingle)\n- uid: System.Data.SqlTypes.SqlSingle\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlSingle\n  nameWithType: SqlSingle\n  fullName: System.Data.SqlTypes.SqlSingle\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit(SqlString)\n  nameWithType: SqlByte.op_Explicit(SqlString)\n  fullName: System.Data.SqlTypes.SqlByte.op_Explicit(SqlString)\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  nameWithType: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n- uid: System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_GreaterThan(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_GreaterThan(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_GreaterThan(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_GreaterThanOrEqual(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_GreaterThanOrEqual(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Implicit(Byte)\n  nameWithType: SqlByte.op_Implicit(Byte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Implicit(Byte)\n- uid: System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Inequality(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Inequality(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Inequality(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_LessThan(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_LessThan(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_LessThan(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_LessThanOrEqual(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_LessThanOrEqual(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Modulus(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Modulus(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Modulus(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Multiply(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Multiply(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Multiply(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_OnesComplement(SqlByte)\n  nameWithType: SqlByte.op_OnesComplement(SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_OnesComplement(SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Subtraction(SqlByte,SqlByte)\n  nameWithType: SqlByte.op_Subtraction(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.op_Subtraction(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.Parse(System.String)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Parse(String)\n  nameWithType: SqlByte.Parse(String)\n  fullName: System.Data.SqlTypes.SqlByte.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Subtract(SqlByte,SqlByte)\n  nameWithType: SqlByte.Subtract(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Subtract(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema()\n- uid: System.Xml.Schema.XmlSchema\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema\n- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Data.SqlTypes.SqlByte.ToSqlBoolean\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlBoolean()\n  nameWithType: SqlByte.ToSqlBoolean()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlBoolean()\n- uid: System.Data.SqlTypes.SqlByte.ToSqlDecimal\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlDecimal()\n  nameWithType: SqlByte.ToSqlDecimal()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlDecimal()\n- uid: System.Data.SqlTypes.SqlByte.ToSqlDouble\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlDouble()\n  nameWithType: SqlByte.ToSqlDouble()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlDouble()\n- uid: System.Data.SqlTypes.SqlByte.ToSqlInt16\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlInt16()\n  nameWithType: SqlByte.ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt16()\n- uid: System.Data.SqlTypes.SqlByte.ToSqlInt32\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlInt32()\n  nameWithType: SqlByte.ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt32()\n- uid: System.Data.SqlTypes.SqlByte.ToSqlInt64\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlInt64()\n  nameWithType: SqlByte.ToSqlInt64()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt64()\n- uid: System.Data.SqlTypes.SqlByte.ToSqlMoney\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlMoney()\n  nameWithType: SqlByte.ToSqlMoney()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlMoney()\n- uid: System.Data.SqlTypes.SqlByte.ToSqlSingle\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlSingle()\n  nameWithType: SqlByte.ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlSingle()\n- uid: System.Data.SqlTypes.SqlByte.ToSqlString\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlString()\n  nameWithType: SqlByte.ToSqlString()\n  fullName: System.Data.SqlTypes.SqlByte.ToSqlString()\n- uid: System.Data.SqlTypes.SqlByte.ToString\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToString()\n  nameWithType: SqlByte.ToString()\n  fullName: System.Data.SqlTypes.SqlByte.ToString()\n- uid: System.Data.SqlTypes.SqlByte.Value\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Value\n  nameWithType: SqlByte.Value\n  fullName: System.Data.SqlTypes.SqlByte.Value\n- uid: System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Xor(SqlByte,SqlByte)\n  nameWithType: SqlByte.Xor(SqlByte,SqlByte)\n  fullName: System.Data.SqlTypes.SqlByte.Xor(SqlByte,SqlByte)\n- uid: System.Data.SqlTypes.SqlByte.Zero\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Zero\n  nameWithType: SqlByte.Zero\n  fullName: System.Data.SqlTypes.SqlByte.Zero\n- uid: System.Data.SqlTypes.SqlByte.#ctor*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: SqlByte\n  nameWithType: SqlByte.SqlByte\n- uid: System.Data.SqlTypes.SqlByte.Add*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Add\n  nameWithType: SqlByte.Add\n- uid: System.Data.SqlTypes.SqlByte.BitwiseAnd*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: BitwiseAnd\n  nameWithType: SqlByte.BitwiseAnd\n- uid: System.Data.SqlTypes.SqlByte.BitwiseOr*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: BitwiseOr\n  nameWithType: SqlByte.BitwiseOr\n- uid: System.Data.SqlTypes.SqlByte.CompareTo*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: CompareTo\n  nameWithType: SqlByte.CompareTo\n- uid: System.Data.SqlTypes.SqlByte.Divide*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Divide\n  nameWithType: SqlByte.Divide\n- uid: System.Data.SqlTypes.SqlByte.Equals*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Equals\n  nameWithType: SqlByte.Equals\n- uid: System.Data.SqlTypes.SqlByte.GetHashCode*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SqlByte.GetHashCode\n- uid: System.Data.SqlTypes.SqlByte.GetXsdType*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: GetXsdType\n  nameWithType: SqlByte.GetXsdType\n- uid: System.Data.SqlTypes.SqlByte.GreaterThan*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: GreaterThan\n  nameWithType: SqlByte.GreaterThan\n- uid: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: GreaterThanOrEqual\n  nameWithType: SqlByte.GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlByte.IsNull*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlByte.IsNull\n- uid: System.Data.SqlTypes.SqlByte.LessThan*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: LessThan\n  nameWithType: SqlByte.LessThan\n- uid: System.Data.SqlTypes.SqlByte.LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: LessThanOrEqual\n  nameWithType: SqlByte.LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlByte.Mod*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Mod\n  nameWithType: SqlByte.Mod\n- uid: System.Data.SqlTypes.SqlByte.Modulus*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Modulus\n  nameWithType: SqlByte.Modulus\n- uid: System.Data.SqlTypes.SqlByte.Multiply*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Multiply\n  nameWithType: SqlByte.Multiply\n- uid: System.Data.SqlTypes.SqlByte.NotEquals*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: NotEquals\n  nameWithType: SqlByte.NotEquals\n- uid: System.Data.SqlTypes.SqlByte.OnesComplement*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: OnesComplement\n  nameWithType: SqlByte.OnesComplement\n- uid: System.Data.SqlTypes.SqlByte.op_Addition*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Addition\n  nameWithType: SqlByte.op_Addition\n- uid: System.Data.SqlTypes.SqlByte.op_BitwiseAnd*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_BitwiseAnd\n  nameWithType: SqlByte.op_BitwiseAnd\n- uid: System.Data.SqlTypes.SqlByte.op_BitwiseOr*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_BitwiseOr\n  nameWithType: SqlByte.op_BitwiseOr\n- uid: System.Data.SqlTypes.SqlByte.op_Division*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Division\n  nameWithType: SqlByte.op_Division\n- uid: System.Data.SqlTypes.SqlByte.op_Equality*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Equality\n  nameWithType: SqlByte.op_Equality\n- uid: System.Data.SqlTypes.SqlByte.op_ExclusiveOr*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_ExclusiveOr\n  nameWithType: SqlByte.op_ExclusiveOr\n- uid: System.Data.SqlTypes.SqlByte.op_Explicit*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Explicit\n  nameWithType: SqlByte.op_Explicit\n- uid: System.Data.SqlTypes.SqlByte.op_GreaterThan*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: SqlByte.op_GreaterThan\n- uid: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: SqlByte.op_GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlByte.op_Implicit*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Implicit\n  nameWithType: SqlByte.op_Implicit\n- uid: System.Data.SqlTypes.SqlByte.op_Inequality*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SqlByte.op_Inequality\n- uid: System.Data.SqlTypes.SqlByte.op_LessThan*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_LessThan\n  nameWithType: SqlByte.op_LessThan\n- uid: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: SqlByte.op_LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlByte.op_Modulus*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Modulus\n  nameWithType: SqlByte.op_Modulus\n- uid: System.Data.SqlTypes.SqlByte.op_Multiply*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Multiply\n  nameWithType: SqlByte.op_Multiply\n- uid: System.Data.SqlTypes.SqlByte.op_OnesComplement*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_OnesComplement\n  nameWithType: SqlByte.op_OnesComplement\n- uid: System.Data.SqlTypes.SqlByte.op_Subtraction*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: SqlByte.op_Subtraction\n- uid: System.Data.SqlTypes.SqlByte.Parse*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Parse\n  nameWithType: SqlByte.Parse\n- uid: System.Data.SqlTypes.SqlByte.Subtract*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Subtract\n  nameWithType: SqlByte.Subtract\n- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema\n  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema\n- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml\n  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml\n- uid: System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml\n  nameWithType: SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml\n- uid: System.Data.SqlTypes.SqlByte.ToSqlBoolean*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlBoolean\n  nameWithType: SqlByte.ToSqlBoolean\n- uid: System.Data.SqlTypes.SqlByte.ToSqlDecimal*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlDecimal\n  nameWithType: SqlByte.ToSqlDecimal\n- uid: System.Data.SqlTypes.SqlByte.ToSqlDouble*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlDouble\n  nameWithType: SqlByte.ToSqlDouble\n- uid: System.Data.SqlTypes.SqlByte.ToSqlInt16*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlInt16\n  nameWithType: SqlByte.ToSqlInt16\n- uid: System.Data.SqlTypes.SqlByte.ToSqlInt32*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlInt32\n  nameWithType: SqlByte.ToSqlInt32\n- uid: System.Data.SqlTypes.SqlByte.ToSqlInt64*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlInt64\n  nameWithType: SqlByte.ToSqlInt64\n- uid: System.Data.SqlTypes.SqlByte.ToSqlMoney*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlMoney\n  nameWithType: SqlByte.ToSqlMoney\n- uid: System.Data.SqlTypes.SqlByte.ToSqlSingle*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlSingle\n  nameWithType: SqlByte.ToSqlSingle\n- uid: System.Data.SqlTypes.SqlByte.ToSqlString*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToSqlString\n  nameWithType: SqlByte.ToSqlString\n- uid: System.Data.SqlTypes.SqlByte.ToString*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: ToString\n  nameWithType: SqlByte.ToString\n- uid: System.Data.SqlTypes.SqlByte.Value*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Value\n  nameWithType: SqlByte.Value\n- uid: System.Data.SqlTypes.SqlByte.Xor*\n  parent: System.Data.SqlTypes.SqlByte\n  isExternal: false\n  name: Xor\n  nameWithType: SqlByte.Xor\n"}