{"nodes":[{"pos":[536,614],"content":"Provides a set of utility functions for interpreting performance counter data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a set of utility functions for interpreting performance counter data.","pos":[0,78]}]},{"pos":[1306,1367],"content":"Computes the calculated value of a single raw counter sample.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the calculated value of a single raw counter sample.","pos":[0,61]}]},{"pos":[1380,1926],"content":"The ComputeCounterValue method overload returns meaningful results only for performance counters of the following <xref:System.Diagnostics.PerformanceCounterType>:      -   <xref:System.Diagnostics.PerformanceCounterType>      -   <xref:System.Diagnostics.PerformanceCounterType>      -   <xref:System.Diagnostics.PerformanceCounterType>      -   <xref:System.Diagnostics.PerformanceCounterType>      -   <xref:System.Diagnostics.PerformanceCounterType>       For other counter types, this overload always returns a value of 0 (zero).","needQuote":false,"needEscape":true,"nodes":[{"content":"The ComputeCounterValue method overload returns meaningful results only for performance counters of the following &lt;xref:System.Diagnostics.PerformanceCounterType&gt;:      -   &lt;xref:System.Diagnostics.PerformanceCounterType&gt;      -   &lt;xref:System.Diagnostics.PerformanceCounterType&gt;      -   &lt;xref:System.Diagnostics.PerformanceCounterType&gt;      -   &lt;xref:System.Diagnostics.PerformanceCounterType&gt;      -   &lt;xref:System.Diagnostics.PerformanceCounterType&gt;       For other counter types, this overload always returns a value of 0 (zero).","pos":[0,534],"source":"The ComputeCounterValue method overload returns meaningful results only for performance counters of the following <xref:System.Diagnostics.PerformanceCounterType>:      -   <xref:System.Diagnostics.PerformanceCounterType>      -   <xref:System.Diagnostics.PerformanceCounterType>      -   <xref:System.Diagnostics.PerformanceCounterType>      -   <xref:System.Diagnostics.PerformanceCounterType>      -   <xref:System.Diagnostics.PerformanceCounterType>       For other counter types, this overload always returns a value of 0 (zero)."}]},{"pos":[2137,2252],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the most recent sample the system has taken.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates the most recent sample the system has taken."},{"pos":[2310,2388],"content":"A floating-point representation of the performance counter's calculated value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A floating-point representation of the performance counter's calculated value.","pos":[0,78]}]},{"pos":[3141,3198],"content":"Computes the calculated value of two raw counter samples.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the calculated value of two raw counter samples.","pos":[0,57]}]},{"pos":[3966,4076],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates a previous sample the system has taken.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates a previous sample the system has taken."},{"pos":[4161,4276],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the most recent sample the system has taken.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates the most recent sample the system has taken."},{"pos":[4334,4412],"content":"A floating-point representation of the performance counter's calculated value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A floating-point representation of the performance counter's calculated value.","pos":[0,78]}]},{"pos":[4613,4702],"content":"<ph id=\"ph1\">&lt;code&gt;oldSample&lt;/code&gt;</ph> uses a counter type that is different from <ph id=\"ph2\">&lt;code&gt;newSample&lt;/code&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>oldSample</code> uses a counter type that is different from <code>newSample</code>."},{"pos":[4821,5028],"content":"<code>newSample</code> counter type has a Performance Data Helper (PDH) error. For more information, see \"Checking PDH Interface Return Values\" in the Win32 and COM Development section of this documentation.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;newSample&lt;/code&gt;</ph> counter type has a Performance Data Helper (PDH) error.","pos":[0,78],"source":"<code>newSample</code> counter type has a Performance Data Helper (PDH) error."},{"content":"For more information, see \"Checking PDH Interface Return Values\" in the Win32 and COM Development section of this documentation.","pos":[79,207]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.CounterSampleCalculator\n  id: CounterSampleCalculator\n  children:\n  - System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)\n  - System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  langs:\n  - csharp\n  name: CounterSampleCalculator\n  nameWithType: CounterSampleCalculator\n  fullName: System.Diagnostics.CounterSampleCalculator\n  type: Class\n  summary: Provides a set of utility functions for interpreting performance counter data.\n  syntax:\n    content: public static class CounterSampleCalculator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)\n  id: ComputeCounterValue(System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSampleCalculator\n  langs:\n  - csharp\n  name: ComputeCounterValue(CounterSample)\n  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample)\n  fullName: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(CounterSample)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Computes the calculated value of a single raw counter sample.\n  remarks: \"The ComputeCounterValue method overload returns meaningful results only for performance counters of the following <xref:System.Diagnostics.PerformanceCounterType>:  \\n  \\n-   <xref:System.Diagnostics.PerformanceCounterType>  \\n  \\n-   <xref:System.Diagnostics.PerformanceCounterType>  \\n  \\n-   <xref:System.Diagnostics.PerformanceCounterType>  \\n  \\n-   <xref:System.Diagnostics.PerformanceCounterType>  \\n  \\n-   <xref:System.Diagnostics.PerformanceCounterType>  \\n  \\n For other counter types, this overload always returns a value of 0 (zero).\"\n  syntax:\n    content: public static float ComputeCounterValue (System.Diagnostics.CounterSample newSample);\n    parameters:\n    - id: newSample\n      type: System.Diagnostics.CounterSample\n      description: A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates the most recent sample the system has taken.\n    return:\n      type: System.Single\n      description: A floating-point representation of the performance counter's calculated value.\n  overload: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  id: ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSampleCalculator\n  langs:\n  - csharp\n  name: ComputeCounterValue(CounterSample,CounterSample)\n  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample,CounterSample)\n  fullName: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(CounterSample,CounterSample)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Computes the calculated value of two raw counter samples.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the ComputeCounterValue method overload to calculate the value of two raw counter samples.  \\n  \\n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/398b3a8c-6226-4ab5-87ac-_1.cpp)]\\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/398b3a8c-6226-4ab5-87ac-_1.cs)]\\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/398b3a8c-6226-4ab5-87ac-_1.vb)]\"\n  syntax:\n    content: public static float ComputeCounterValue (System.Diagnostics.CounterSample oldSample, System.Diagnostics.CounterSample newSample);\n    parameters:\n    - id: oldSample\n      type: System.Diagnostics.CounterSample\n      description: A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates a previous sample the system has taken.\n    - id: newSample\n      type: System.Diagnostics.CounterSample\n      description: A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates the most recent sample the system has taken.\n    return:\n      type: System.Single\n      description: A floating-point representation of the performance counter's calculated value.\n  overload: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>oldSample</code> uses a counter type that is different from <code>newSample</code>.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: <code>newSample</code> counter type has a Performance Data Helper (PDH) error. For more information, see \"Checking PDH Interface Return Values\" in the Win32 and COM Development section of this documentation.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ComponentModel.Win32Exception\n  parent: System.ComponentModel\n  isExternal: false\n  name: Win32Exception\n  nameWithType: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSampleCalculator\n  isExternal: false\n  name: ComputeCounterValue(CounterSample)\n  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample)\n  fullName: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(CounterSample)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Diagnostics.CounterSample\n  parent: System.Diagnostics\n  isExternal: false\n  name: CounterSample\n  nameWithType: CounterSample\n  fullName: System.Diagnostics.CounterSample\n- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSampleCalculator\n  isExternal: false\n  name: ComputeCounterValue(CounterSample,CounterSample)\n  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample,CounterSample)\n  fullName: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(CounterSample,CounterSample)\n- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*\n  parent: System.Diagnostics.CounterSampleCalculator\n  isExternal: false\n  name: ComputeCounterValue\n  nameWithType: CounterSampleCalculator.ComputeCounterValue\n"}