{"nodes":[{"pos":[1419,1533],"content":"Represents a selection of content between two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> positions.","needQuote":true,"needEscape":true,"source":"Represents a selection of content between two <xref href=\"System.Windows.Documents.TextPointer\"></xref> positions."},{"pos":[1546,2693],"content":"The TextRange class introduces the following terminology.      -   **Selection** - A TextRange is a selection of content between two positions indicated by **TextPointers**.  One of these positions a fixed anchor with respect to the selection, while the other position is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.      -   **Current Selection** - Because a TextRange always indicates a selection in content, it makes sense to simply refer to the selection indicated by a TextRange as the *current selection*.      -   **Text Container** - A *text container* is the element that forms the ultimate border for the flow content at hand; the selection indicated by a TextRange always falls within a text container.  Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.      -   **Document** - The content collectively contained within a text container is referred to as a *document*.       For more information about other related terms like *position*, see <xref:System.Windows.Documents.TextPointer>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The TextRange class introduces the following terminology.","pos":[0,57]},{"content":"-   <bpt id=\"p1\">**</bpt>Selection<ept id=\"p1\">**</ept> - A TextRange is a selection of content between two positions indicated by <bpt id=\"p2\">**</bpt>TextPointers<ept id=\"p2\">**</ept>.","pos":[63,173],"source":"      -   **Selection** - A TextRange is a selection of content between two positions indicated by **TextPointers**."},{"content":"One of these positions a fixed anchor with respect to the selection, while the other position is movable.","pos":[175,280]},{"content":"This is similar to how a selection made by a user using the mouse or keyboard behaves.","pos":[282,368]},{"content":"-   <bpt id=\"p1\">**</bpt>Current Selection<ept id=\"p1\">**</ept> - Because a TextRange always indicates a selection in content, it makes sense to simply refer to the selection indicated by a TextRange as the <bpt id=\"p2\">*</bpt>current selection<ept id=\"p2\">*</ept>.","pos":[374,563],"source":"      -   **Current Selection** - Because a TextRange always indicates a selection in content, it makes sense to simply refer to the selection indicated by a TextRange as the *current selection*."},{"content":"-   <bpt id=\"p1\">**</bpt>Text Container<ept id=\"p1\">**</ept> - A <bpt id=\"p2\">*</bpt>text container<ept id=\"p2\">*</ept> is the element that forms the ultimate border for the flow content at hand; the selection indicated by a TextRange always falls within a text container.","pos":[569,765],"source":"      -   **Text Container** - A *text container* is the element that forms the ultimate border for the flow content at hand; the selection indicated by a TextRange always falls within a text container."},{"content":"Currently, a text container must be either a &lt;xref:System.Windows.Documents.FlowDocument&gt; or a &lt;xref:System.Windows.Controls.TextBlock&gt;.","pos":[767,903],"source":"  Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>."},{"content":"-   <bpt id=\"p1\">**</bpt>Document<ept id=\"p1\">**</ept> - The content collectively contained within a text container is referred to as a <bpt id=\"p2\">*</bpt>document<ept id=\"p2\">*</ept>.","pos":[909,1018],"source":"      -   **Document** - The content collectively contained within a text container is referred to as a *document*."},{"content":"For more information about other related terms like <bpt id=\"p1\">*</bpt>position<ept id=\"p1\">*</ept>, see &lt;xref:System.Windows.Documents.TextPointer&gt;.","pos":[1025,1137],"source":"       For more information about other related terms like *position*, see <xref:System.Windows.Documents.TextPointer>."}]},{"pos":[3917,4156],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, taking two specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> positions as the beginning and end positions for the new range.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Documents.TextRange\"></xref> class, taking two specified <xref href=\"System.Windows.Documents.TextPointer\"></xref> positions as the beginning and end positions for the new range."},{"pos":[4169,4763],"content":"A <xref:System.Windows.Documents.TextRange> is formed from a selection between two positions indicated by **TextPointers**.  One of these positions (indicated by `position1`) is fixed with respect to the selection, while the other position (indicated by `position2`) is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.       The actual ends of the new <xref:System.Windows.Documents.TextRange> may be adjusted to match any selection heuristics that are applicable to the document that contains the new <xref:System.Windows.Documents.TextRange>.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Windows.Documents.TextRange&gt; is formed from a selection between two positions indicated by <bpt id=\"p1\">**</bpt>TextPointers<ept id=\"p1\">**</ept>.","pos":[0,123],"source":"A <xref:System.Windows.Documents.TextRange> is formed from a selection between two positions indicated by **TextPointers**."},{"content":"One of these positions (indicated by <ph id=\"ph1\">`position1`</ph>) is fixed with respect to the selection, while the other position (indicated by <ph id=\"ph2\">`position2`</ph>) is movable.","pos":[125,278],"source":"  One of these positions (indicated by `position1`) is fixed with respect to the selection, while the other position (indicated by `position2`) is movable."},{"content":"This is similar to how a selection made by a user using the mouse or keyboard behaves.","pos":[280,366]},{"content":"The actual ends of the new &lt;xref:System.Windows.Documents.TextRange&gt; may be adjusted to match any selection heuristics that are applicable to the document that contains the new &lt;xref:System.Windows.Documents.TextRange&gt;.","pos":[373,592],"source":"       The actual ends of the new <xref:System.Windows.Documents.TextRange> may be adjusted to match any selection heuristics that are applicable to the document that contains the new <xref:System.Windows.Documents.TextRange>."}]},{"pos":[5400,5537],"content":"A fixed anchor position that marks one end of the selection used to form the new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A fixed anchor position that marks one end of the selection used to form the new <xref href=\"System.Windows.Documents.TextRange\"></xref>."},{"pos":[5626,5764],"content":"A movable position that marks the other end of the selection used to form the new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A movable position that marks the other end of the selection used to form the new <xref href=\"System.Windows.Documents.TextRange\"></xref>."},{"pos":[5927,6033],"content":"Occurs when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">position2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not positioned within the same document.","needQuote":true,"needEscape":true,"source":"Occurs when <code>position1</code> and <code>position2</code> are not positioned within the same document."},{"pos":[6136,6261],"content":"Occurs when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position1</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">position2</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when <code>position1</code> or <code>position2</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6857,6932],"content":"Applies a specified formatting property and value to the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies a specified formatting property and value to the current selection.","pos":[0,75]}]},{"pos":[6944,7221],"content":"This method applies formatting by inserting the appropriate <xref:System.Windows.Documents.Inline> elements, such as <xref:System.Windows.Documents.Bold> and <xref:System.Windows.Documents.Italic>, into the selection indicated by this <xref:System.Windows.Documents.TextRange>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method applies formatting by inserting the appropriate &lt;xref:System.Windows.Documents.Inline&gt; elements, such as &lt;xref:System.Windows.Documents.Bold&gt; and &lt;xref:System.Windows.Documents.Italic&gt;, into the selection indicated by this &lt;xref:System.Windows.Documents.TextRange&gt;.","pos":[0,277],"source":"This method applies formatting by inserting the appropriate <xref:System.Windows.Documents.Inline> elements, such as <xref:System.Windows.Documents.Bold> and <xref:System.Windows.Documents.Italic>, into the selection indicated by this <xref:System.Windows.Documents.TextRange>."}]},{"pos":[7837,7868],"content":"A formatting property to apply.","needQuote":true,"needEscape":true,"nodes":[{"content":"A formatting property to apply.","pos":[0,31]}]},{"pos":[7930,7968],"content":"The value for the formatting property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value for the formatting property.","pos":[0,38]}]},{"pos":[8144,8319],"content":"Occurs when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">formattingProperty</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not specify a valid formatting property, or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> specifies an invalid value for <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">formattingProperty</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when <code>formattingProperty</code> does not specify a valid formatting property, or <code>value</code> specifies an invalid value for <code>formattingProperty</code>."},{"pos":[8422,8530],"content":"Occurs when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">formattingProperty</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when <code>formattingProperty</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8946,9037],"content":"Checks whether the current selection can be loaded with content in a specified data format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks whether the current selection can be loaded with content in a specified data format.","pos":[0,91]}]},{"pos":[9049,9207],"content":"Use the corresponding <xref:System.Windows.Documents.TextRange.Load%2A> method to actually load content into the current selection in a specified data format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the corresponding &lt;xref:System.Windows.Documents.TextRange.Load%2A&gt; method to actually load content into the current selection in a specified data format.","pos":[0,158],"source":"Use the corresponding <xref:System.Windows.Documents.TextRange.Load%2A> method to actually load content into the current selection in a specified data format."}]},{"pos":[9724,9889],"content":"A data format to check for load-compatibility into the current selection.  See <xref href=\"System.Windows.DataFormats\"></xref> for a list of predefined data formats.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data format to check for load-compatibility into the current selection.","pos":[0,73]},{"content":"See <bpt id=\"p1\">&lt;xref href=\"System.Windows.DataFormats\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a list of predefined data formats.","pos":[75,165],"source":"  See <xref href=\"System.Windows.DataFormats\"></xref> for a list of predefined data formats."}]},{"pos":[9948,10165],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current selection can be loaded with content in the specified data format; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection can be loaded with content in the specified data format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10654,10731],"content":"Checks whether the current selection can be saved as a specified data format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks whether the current selection can be saved as a specified data format.","pos":[0,77]}]},{"pos":[10743,10888],"content":"Use the corresponding <xref:System.Windows.Documents.TextRange.Save%2A> method to actually save the current selection in a specified data format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the corresponding &lt;xref:System.Windows.Documents.TextRange.Save%2A&gt; method to actually save the current selection in a specified data format.","pos":[0,145],"source":"Use the corresponding <xref:System.Windows.Documents.TextRange.Save%2A> method to actually save the current selection in a specified data format."}]},{"pos":[11405,11570],"content":"A data format to check for save compatibility with the current selection.  See <xref href=\"System.Windows.DataFormats\"></xref> for a list of predefined data formats.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data format to check for save compatibility with the current selection.","pos":[0,73]},{"content":"See <bpt id=\"p1\">&lt;xref href=\"System.Windows.DataFormats\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a list of predefined data formats.","pos":[75,165],"source":"  See <xref href=\"System.Windows.DataFormats\"></xref> for a list of predefined data formats."}]},{"pos":[11629,11832],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current selection can be saved as the specified data format; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection can be saved as the specified data format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12266,12335],"content":"Occurs when the range is repositioned to cover a new span of content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the range is repositioned to cover a new span of content.","pos":[0,69]}]},{"pos":[12457,12469],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12909,13049],"content":"Removes all formatting properties (represented by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.Inline\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> elements) from the current selection.","needQuote":true,"needEscape":true,"source":"Removes all formatting properties (represented by <xref href=\"System.Windows.Documents.Inline\"></xref> elements) from the current selection."},{"pos":[13061,13350],"content":"This method only affects any <xref:System.Windows.Documents.Inline> formatting elements, such as <xref:System.Windows.Documents.Bold> or <xref:System.Windows.Documents.Italic>. Properties set on paragraphs and other enclosing <xref:System.Windows.Documents.Block> elements are not changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method only affects any <xref:System.Windows.Documents.Inline> formatting elements, such as <xref:System.Windows.Documents.Bold> or <xref:System.Windows.Documents.Italic>. Properties set on paragraphs and other enclosing <xref:System.Windows.Documents.Block> elements are not changed.","pos":[0,289],"nodes":[{"content":"This method only affects any &lt;xref:System.Windows.Documents.Inline&gt; formatting elements, such as &lt;xref:System.Windows.Documents.Bold&gt; or &lt;xref:System.Windows.Documents.Italic&gt;.","pos":[0,176],"source":"This method only affects any <xref:System.Windows.Documents.Inline> formatting elements, such as <xref:System.Windows.Documents.Bold> or <xref:System.Windows.Documents.Italic>."},{"content":"Properties set on paragraphs and other enclosing &lt;xref:System.Windows.Documents.Block&gt; elements are not changed.","pos":[177,289],"source":" Properties set on paragraphs and other enclosing <xref:System.Windows.Documents.Block> elements are not changed."}]}]},{"pos":[13993,14134],"content":"Checks whether a position (specified by a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) is located within the current selection.","needQuote":true,"needEscape":true,"source":"Checks whether a position (specified by a <xref href=\"System.Windows.Documents.TextPointer\"></xref>) is located within the current selection."},{"pos":[14146,14365],"content":"Positions at either end of the current selection (indicated by <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>) are considered to be part of the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Positions at either end of the current selection (indicated by &lt;xref:System.Windows.Documents.TextRange.Start%2A&gt; and &lt;xref:System.Windows.Documents.TextRange.End%2A&gt;) are considered to be part of the current selection.","pos":[0,219],"source":"Positions at either end of the current selection (indicated by <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>) are considered to be part of the current selection."}]},{"pos":[14939,14997],"content":"A position to test for inclusion in the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A position to test for inclusion in the current selection.","pos":[0,58]}]},{"pos":[15056,15258],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified position is located within the current selection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified position is located within the current selection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15424,15503],"content":"Occurs when <bpt id=\"p1\">*</bpt>textPointer<ept id=\"p1\">*</ept> is not in the same document as the current selection.","needQuote":true,"needEscape":true,"source":"Occurs when *textPointer* is not in the same document as the current selection."},{"pos":[15847,15908],"content":"Get the position that marks the end of the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get the position that marks the end of the current selection.","pos":[0,61]}]},{"pos":[16451,16559],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that points to the end of the current selection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that points to the end of the current selection."},{"pos":[17165,17253],"content":"Returns the effective value of a specified formatting property on the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the effective value of a specified formatting property on the current selection.","pos":[0,88]}]},{"pos":[17265,17622],"content":"In order to return a property value, the entire <xref:System.Windows.Documents.TextRange> must extend over text with only one value for the `formattingProperty`. If the <xref:System.Windows.Documents.TextRange> extends over text with two or more different values for the `formattingProperty`, <xref:System.Windows.DependencyProperty.UnsetValue> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"In order to return a property value, the entire &lt;xref:System.Windows.Documents.TextRange&gt; must extend over text with only one value for the <ph id=\"ph1\">`formattingProperty`</ph>.","pos":[0,161],"source":"In order to return a property value, the entire <xref:System.Windows.Documents.TextRange> must extend over text with only one value for the `formattingProperty`."},{"content":"If the &lt;xref:System.Windows.Documents.TextRange&gt; extends over text with two or more different values for the <ph id=\"ph1\">`formattingProperty`</ph>, &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt; is returned.","pos":[162,357],"source":" If the <xref:System.Windows.Documents.TextRange> extends over text with two or more different values for the `formattingProperty`, <xref:System.Windows.DependencyProperty.UnsetValue> is returned."}]},{"pos":[17843,17923],"content":"A formatting property to get the value of with respect to the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A formatting property to get the value of with respect to the current selection.","pos":[0,80]}]},{"pos":[17981,18049],"content":"An object specifying the value of the specified formatting property.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object specifying the value of the specified formatting property.","pos":[0,68]}]},{"pos":[18223,18398],"content":"Occurs when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">formattingProperty</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not specify a valid formatting property, or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> specifies an invalid value for <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">formattingProperty</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when <code>formattingProperty</code> does not specify a valid formatting property, or <code>value</code> specifies an invalid value for <code>formattingProperty</code>."},{"pos":[18501,18609],"content":"Occurs when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">formattingProperty</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when <code>formattingProperty</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18973,19043],"content":"Gets a value indicating whether or not the current selection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether or not the current selection is empty.","pos":[0,70]}]},{"pos":[19055,19250],"content":"A <xref:System.Windows.Documents.TextRange> is considered empty if the <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A> positions are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Windows.Documents.TextRange&gt; is considered empty if the &lt;xref:System.Windows.Documents.TextRange.Start%2A&gt; and &lt;xref:System.Windows.Documents.TextRange.End%2A&gt; positions are equal.","pos":[0,195],"source":"A <xref:System.Windows.Documents.TextRange> is considered empty if the <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A> positions are equal."}]},{"pos":[19733,19903],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current selection is empty; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection is empty; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20432,20511],"content":"Loads the current selection in a specified data format from a specified stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loads the current selection in a specified data format from a specified stream.","pos":[0,79]}]},{"pos":[20524,20971],"content":"If <xref:System.IO.Stream.CanSeek%2A> is `true` for `stream`, content will be loaded from the beginning of the stream to the end of the stream.  Otherwise, content will be read from the current <xref:System.IO.Stream.Position%2A> to the end of the stream.  When this method returns, `stream` is left open, and the current position within `stream` is undefined.       A load operation replaces the current selection with the newly loaded content.","needQuote":false,"needEscape":true,"nodes":[{"content":"If &lt;xref:System.IO.Stream.CanSeek%2A&gt; is <ph id=\"ph1\">`true`</ph> for <ph id=\"ph2\">`stream`</ph>, content will be loaded from the beginning of the stream to the end of the stream.","pos":[0,143],"source":"If <xref:System.IO.Stream.CanSeek%2A> is `true` for `stream`, content will be loaded from the beginning of the stream to the end of the stream."},{"content":"Otherwise, content will be read from the current &lt;xref:System.IO.Stream.Position%2A&gt; to the end of the stream.","pos":[145,255],"source":"  Otherwise, content will be read from the current <xref:System.IO.Stream.Position%2A> to the end of the stream."},{"content":"When this method returns, <ph id=\"ph1\">`stream`</ph> is left open, and the current position within <ph id=\"ph2\">`stream`</ph> is undefined.","pos":[257,360],"source":"  When this method returns, `stream` is left open, and the current position within `stream` is undefined."},{"content":"A load operation replaces the current selection with the newly loaded content.","pos":[367,445]}]},{"pos":[21507,21579],"content":"A readable stream that contains data to load into the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A readable stream that contains data to load into the current selection.","pos":[0,72]}]},{"pos":[21646,21944],"content":"A data format to load the data as.  Currently supported data formats are <xref href=\"System.Windows.DataFormats.Rtf\"></xref>, <xref href=\"System.Windows.DataFormats.Text\"></xref>, <xref href=\"System.Windows.DataFormats.Xaml\"></xref>, and <xref href=\"System.Windows.DataFormats.XamlPackage\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data format to load the data as.","pos":[0,34]},{"content":"Currently supported data formats are <bpt id=\"p1\">&lt;xref href=\"System.Windows.DataFormats.Rtf\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Windows.DataFormats.Text\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Windows.DataFormats.Xaml\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, and <bpt id=\"p4\">&lt;xref href=\"System.Windows.DataFormats.XamlPackage\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[36,298],"source":"  Currently supported data formats are <xref href=\"System.Windows.DataFormats.Rtf\"></xref>, <xref href=\"System.Windows.DataFormats.Text\"></xref>, <xref href=\"System.Windows.DataFormats.Xaml\"></xref>, and <xref href=\"System.Windows.DataFormats.XamlPackage\"></xref>."}]},{"pos":[22114,22237],"content":"Occurs when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">stream</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">dataFormat</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when <code>stream</code> or <code>dataFormat</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22332,22490],"content":"Occurs when the specified data format is unsupported.  May also be raised if content loaded from <code>stream</code> does not match the specified data format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the specified data format is unsupported.","pos":[0,53]},{"content":"May also be raised if content loaded from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">stream</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not match the specified data format.","pos":[55,158],"source":"  May also be raised if content loaded from <code>stream</code> does not match the specified data format."}]},{"pos":[22946,23023],"content":"Saves the current selection to a specified stream in a specified data format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the current selection to a specified stream in a specified data format.","pos":[0,77]}]},{"pos":[23036,23274],"content":"When this method returns, `stream` is left open, and the current position within `stream` is undefined.       As part of the save operation, content in the current selection may be converted to the data format specified by `dataFormat`.","needQuote":false,"needEscape":true,"nodes":[{"content":"When this method returns, <ph id=\"ph1\">`stream`</ph> is left open, and the current position within <ph id=\"ph2\">`stream`</ph> is undefined.","pos":[0,103],"source":"When this method returns, `stream` is left open, and the current position within `stream` is undefined."},{"content":"As part of the save operation, content in the current selection may be converted to the data format specified by <ph id=\"ph1\">`dataFormat`</ph>.","pos":[110,236],"source":"       As part of the save operation, content in the current selection may be converted to the data format specified by `dataFormat`."}]},{"pos":[23810,23869],"content":"An empty, writable stream to save the current selection to.","needQuote":true,"needEscape":true,"nodes":[{"content":"An empty, writable stream to save the current selection to.","pos":[0,59]}]},{"pos":[23936,24247],"content":"A data format to save the current selection as.  Currently supported data formats are <xref href=\"System.Windows.DataFormats.Rtf\"></xref>, <xref href=\"System.Windows.DataFormats.Text\"></xref>, <xref href=\"System.Windows.DataFormats.Xaml\"></xref>, and <xref href=\"System.Windows.DataFormats.XamlPackage\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data format to save the current selection as.","pos":[0,47]},{"content":"Currently supported data formats are <bpt id=\"p1\">&lt;xref href=\"System.Windows.DataFormats.Rtf\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Windows.DataFormats.Text\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Windows.DataFormats.Xaml\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, and <bpt id=\"p4\">&lt;xref href=\"System.Windows.DataFormats.XamlPackage\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[49,311],"source":"  Currently supported data formats are <xref href=\"System.Windows.DataFormats.Rtf\"></xref>, <xref href=\"System.Windows.DataFormats.Text\"></xref>, <xref href=\"System.Windows.DataFormats.Xaml\"></xref>, and <xref href=\"System.Windows.DataFormats.XamlPackage\"></xref>."}]},{"pos":[24417,24528],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;dataFormat&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>stream</code> or <code>dataFormat</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[24624,24767],"content":"The specified data format is unsupported.       -or       Content loaded from <code>stream</code> does not match the specified data format.","needQuote":false,"needEscape":true,"nodes":[{"content":"The specified data format is unsupported.","pos":[0,41]},{"content":"-or       Content loaded from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">stream</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not match the specified data format.","pos":[48,139],"source":"       -or       Content loaded from <code>stream</code> does not match the specified data format."}]},{"pos":[25278,25459],"content":"Saves the current selection to a specified stream in a specified data format, with the option of preserving custom <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Saves the current selection to a specified stream in a specified data format, with the option of preserving custom <xref href=\"System.Windows.Documents.TextElement\"></xref> objects."},{"pos":[25472,26409],"content":"When `preserveTextElements` is `false`, custom <xref:System.Windows.Documents.TextElement> objects are saved as known <xref:System.Windows.Documents.TextElement> types.  For example, suppose you create a custom <xref:System.Windows.Documents.TextElement> called `Heading1`, which inherits from <xref:System.Windows.Documents.Paragraph>. When you call this method with `preserveTextElements` set to `false`, `Heading1` is converted to a <xref:System.Windows.Documents.Paragraph> when the <xref:System.Windows.Documents.TextRange> is saved.  When you call this method with `preserveTextElements` set to `true`, `Heading1` is saved without being converted. To preserve custom text elements, `dataFormat` must be set to <xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>.       Save is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"When <ph id=\"ph1\">`preserveTextElements`</ph> is <ph id=\"ph2\">`false`</ph>, custom &lt;xref:System.Windows.Documents.TextElement&gt; objects are saved as known &lt;xref:System.Windows.Documents.TextElement&gt; types.","pos":[0,168],"source":"When `preserveTextElements` is `false`, custom <xref:System.Windows.Documents.TextElement> objects are saved as known <xref:System.Windows.Documents.TextElement> types."},{"content":"For example, suppose you create a custom &lt;xref:System.Windows.Documents.TextElement&gt; called <ph id=\"ph1\">`Heading1`</ph>, which inherits from &lt;xref:System.Windows.Documents.Paragraph&gt;.","pos":[170,336],"source":"  For example, suppose you create a custom <xref:System.Windows.Documents.TextElement> called `Heading1`, which inherits from <xref:System.Windows.Documents.Paragraph>."},{"content":"When you call this method with <ph id=\"ph1\">`preserveTextElements`</ph> set to <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">`Heading1`</ph> is converted to a &lt;xref:System.Windows.Documents.Paragraph&gt; when the &lt;xref:System.Windows.Documents.TextRange&gt; is saved.","pos":[337,538],"source":" When you call this method with `preserveTextElements` set to `false`, `Heading1` is converted to a <xref:System.Windows.Documents.Paragraph> when the <xref:System.Windows.Documents.TextRange> is saved."},{"content":"When you call this method with <ph id=\"ph1\">`preserveTextElements`</ph> set to <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">`Heading1`</ph> is saved without being converted.","pos":[540,653],"source":"  When you call this method with `preserveTextElements` set to `true`, `Heading1` is saved without being converted."},{"content":"To preserve custom text elements, <ph id=\"ph1\">`dataFormat`</ph> must be set to &lt;xref:System.Windows.DataFormats.Xaml?displayProperty=fullName&gt;.","pos":[654,780],"source":" To preserve custom text elements, `dataFormat` must be set to <xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>."},{"content":"Save is introduced in the .NET Framework version 3.5.","pos":[787,840]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[842,935],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[26605,26664],"content":"An empty, writable stream to save the current selection to.","needQuote":true,"needEscape":true,"nodes":[{"content":"An empty, writable stream to save the current selection to.","pos":[0,59]}]},{"pos":[26731,27042],"content":"A data format to save the current selection as.  Currently supported data formats are <xref href=\"System.Windows.DataFormats.Rtf\"></xref>, <xref href=\"System.Windows.DataFormats.Text\"></xref>, <xref href=\"System.Windows.DataFormats.Xaml\"></xref>, and <xref href=\"System.Windows.DataFormats.XamlPackage\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data format to save the current selection as.","pos":[0,47]},{"content":"Currently supported data formats are <bpt id=\"p1\">&lt;xref href=\"System.Windows.DataFormats.Rtf\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Windows.DataFormats.Text\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Windows.DataFormats.Xaml\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, and <bpt id=\"p4\">&lt;xref href=\"System.Windows.DataFormats.XamlPackage\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[49,311],"source":"  Currently supported data formats are <xref href=\"System.Windows.DataFormats.Rtf\"></xref>, <xref href=\"System.Windows.DataFormats.Text\"></xref>, <xref href=\"System.Windows.DataFormats.Xaml\"></xref>, and <xref href=\"System.Windows.DataFormats.XamlPackage\"></xref>."}]},{"pos":[27120,27341],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to preserve custom <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.TextElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to preserve custom <xref href=\"System.Windows.Documents.TextElement\"></xref> objects; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27511,27634],"content":"Occurs when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">stream</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">dataFormat</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when <code>stream</code> or <code>dataFormat</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[27729,27887],"content":"Occurs when the specified data format is unsupported.  May also be raised if content loaded from <code>stream</code> does not match the specified data format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the specified data format is unsupported.","pos":[0,53]},{"content":"May also be raised if content loaded from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">stream</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not match the specified data format.","pos":[55,158],"source":"  May also be raised if content loaded from <code>stream</code> does not match the specified data format."}]},{"pos":[28469,28613],"content":"Updates the current selection, taking two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> positions to indicate the updated selection.","needQuote":true,"needEscape":true,"source":"Updates the current selection, taking two <xref href=\"System.Windows.Documents.TextPointer\"></xref> positions to indicate the updated selection."},{"pos":[28626,29164],"content":"A <xref:System.Windows.Documents.TextRange> is formed from a selection between two positions indicated by **TextPointers**.  One of these positions (indicated by `position1`) is fixed with respect to the selection, while the other position (indicated by `position2`) is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.       The actual ends of the new selection may be adjusted to match any selection heuristics that are applicable to the document that contains the new current selection.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Windows.Documents.TextRange&gt; is formed from a selection between two positions indicated by <bpt id=\"p1\">**</bpt>TextPointers<ept id=\"p1\">**</ept>.","pos":[0,123],"source":"A <xref:System.Windows.Documents.TextRange> is formed from a selection between two positions indicated by **TextPointers**."},{"content":"One of these positions (indicated by <ph id=\"ph1\">`position1`</ph>) is fixed with respect to the selection, while the other position (indicated by <ph id=\"ph2\">`position2`</ph>) is movable.","pos":[125,278],"source":"  One of these positions (indicated by `position1`) is fixed with respect to the selection, while the other position (indicated by `position2`) is movable."},{"content":"This is similar to how a selection made by a user using the mouse or keyboard behaves.","pos":[280,366]},{"content":"The actual ends of the new selection may be adjusted to match any selection heuristics that are applicable to the document that contains the new current selection.","pos":[373,536]}]},{"pos":[29410,29478],"content":"A fixed anchor position that marks one end of the updated selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A fixed anchor position that marks one end of the updated selection.","pos":[0,68]}]},{"pos":[29567,29636],"content":"A movable position that marks the other end of the updated selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A movable position that marks the other end of the updated selection.","pos":[0,69]}]},{"pos":[29800,29906],"content":"Occurs when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">position2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not positioned within the same document.","needQuote":true,"needEscape":true,"source":"Occurs when <code>position1</code> and <code>position2</code> are not positioned within the same document."},{"pos":[30009,30134],"content":"Occurs when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">position1</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">position2</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when <code>position1</code> or <code>position2</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30488,30556],"content":"Gets the position that marks the beginning of the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the position that marks the beginning of the current selection.","pos":[0,68]}]},{"pos":[31103,31217],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that points to the beginning of the current selection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that points to the beginning of the current selection."},{"pos":[31637,31699],"content":"Gets or sets the plain text contents of the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the plain text contents of the current selection.","pos":[0,62]}]},{"pos":[31712,32062],"content":"Use this property to extract the plain text content in the current selection, regardless of any formatting that may be present.       New line characters and paragraph breaks are treated as equivalent with respect to this property.  Any types of content breaks present in the current selection are converted to new lines when this property is read.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this property to extract the plain text content in the current selection, regardless of any formatting that may be present.       New line characters and paragraph breaks are treated as equivalent with respect to this property.  Any types of content breaks present in the current selection are converted to new lines when this property is read.","pos":[0,348],"nodes":[{"content":"Use this property to extract the plain text content in the current selection, regardless of any formatting that may be present.","pos":[0,127]},{"content":"New line characters and paragraph breaks are treated as equivalent with respect to this property.","pos":[134,231]},{"content":"Any types of content breaks present in the current selection are converted to new lines when this property is read.","pos":[233,348]}]}]},{"pos":[32530,32599],"content":"A string containing the plain text contents of the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the plain text contents of the current selection.","pos":[0,69]}]},{"pos":[32769,32885],"content":"Occurs when an attempt is made to set this property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when an attempt is made to set this property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Documents.TextRange\n  id: TextRange\n  children:\n  - System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)\n  - System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.Documents.TextRange.CanLoad(System.String)\n  - System.Windows.Documents.TextRange.CanSave(System.String)\n  - System.Windows.Documents.TextRange.Changed\n  - System.Windows.Documents.TextRange.ClearAllProperties\n  - System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)\n  - System.Windows.Documents.TextRange.End\n  - System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)\n  - System.Windows.Documents.TextRange.IsEmpty\n  - System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)\n  - System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)\n  - System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)\n  - System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)\n  - System.Windows.Documents.TextRange.Start\n  - System.Windows.Documents.TextRange.Text\n  langs:\n  - csharp\n  name: TextRange\n  nameWithType: TextRange\n  fullName: System.Windows.Documents.TextRange\n  type: Class\n  summary: Represents a selection of content between two <xref href=\"System.Windows.Documents.TextPointer\"></xref> positions.\n  remarks: \"The TextRange class introduces the following terminology.  \\n  \\n-   **Selection** - A TextRange is a selection of content between two positions indicated by **TextPointers**.  One of these positions a fixed anchor with respect to the selection, while the other position is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.  \\n  \\n-   **Current Selection** - Because a TextRange always indicates a selection in content, it makes sense to simply refer to the selection indicated by a TextRange as the *current selection*.  \\n  \\n-   **Text Container** - A *text container* is the element that forms the ultimate border for the flow content at hand; the selection indicated by a TextRange always falls within a text container.  Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.  \\n  \\n-   **Document** - The content collectively contained within a text container is referred to as a *document*.  \\n  \\n For more information about other related terms like *position*, see <xref:System.Windows.Documents.TextPointer>.\"\n  example:\n  - \"The following example demonstrates using the <xref:System.Windows.Documents.TextRange.Text%2A> property of a TextRange to return the plain text representation of a specified <xref:System.Windows.Documents.FlowDocument>.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]\"\n  syntax:\n    content: public class TextRange\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)\n  id: '#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)'\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: TextRange(TextPointer,TextPointer)\n  nameWithType: TextRange.TextRange(TextPointer,TextPointer)\n  fullName: System.Windows.Documents.TextRange.TextRange(TextPointer,TextPointer)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Documents.TextRange\"></xref> class, taking two specified <xref href=\"System.Windows.Documents.TextPointer\"></xref> positions as the beginning and end positions for the new range.\n  remarks: \"A <xref:System.Windows.Documents.TextRange> is formed from a selection between two positions indicated by **TextPointers**.  One of these positions (indicated by `position1`) is fixed with respect to the selection, while the other position (indicated by `position2`) is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.  \\n  \\n The actual ends of the new <xref:System.Windows.Documents.TextRange> may be adjusted to match any selection heuristics that are applicable to the document that contains the new <xref:System.Windows.Documents.TextRange>.\"\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange> constructor.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]\"\n  syntax:\n    content: public TextRange (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);\n    parameters:\n    - id: position1\n      type: System.Windows.Documents.TextPointer\n      description: A fixed anchor position that marks one end of the selection used to form the new <xref href=\"System.Windows.Documents.TextRange\"></xref>.\n    - id: position2\n      type: System.Windows.Documents.TextPointer\n      description: A movable position that marks the other end of the selection used to form the new <xref href=\"System.Windows.Documents.TextRange\"></xref>.\n  overload: System.Windows.Documents.TextRange.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Occurs when <code>position1</code> and <code>position2</code> are not positioned within the same document.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Occurs when <code>position1</code> or <code>position2</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)\n  id: ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: ApplyPropertyValue(DependencyProperty,Object)\n  nameWithType: TextRange.ApplyPropertyValue(DependencyProperty,Object)\n  fullName: System.Windows.Documents.TextRange.ApplyPropertyValue(DependencyProperty,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Applies a specified formatting property and value to the current selection.\n  remarks: This method applies formatting by inserting the appropriate <xref:System.Windows.Documents.Inline> elements, such as <xref:System.Windows.Documents.Bold> and <xref:System.Windows.Documents.Italic>, into the selection indicated by this <xref:System.Windows.Documents.TextRange>.\n  example:\n  - \"The following example demonstrates the use of the ApplyPropertyValue method.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]\"\n  syntax:\n    content: public void ApplyPropertyValue (System.Windows.DependencyProperty formattingProperty, object value);\n    parameters:\n    - id: formattingProperty\n      type: System.Windows.DependencyProperty\n      description: A formatting property to apply.\n    - id: value\n      type: System.Object\n      description: The value for the formatting property.\n  overload: System.Windows.Documents.TextRange.ApplyPropertyValue*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Occurs when <code>formattingProperty</code> does not specify a valid formatting property, or <code>value</code> specifies an invalid value for <code>formattingProperty</code>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Occurs when <code>formattingProperty</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.CanLoad(System.String)\n  id: CanLoad(System.String)\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: CanLoad(String)\n  nameWithType: TextRange.CanLoad(String)\n  fullName: System.Windows.Documents.TextRange.CanLoad(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Checks whether the current selection can be loaded with content in a specified data format.\n  remarks: Use the corresponding <xref:System.Windows.Documents.TextRange.Load%2A> method to actually load content into the current selection in a specified data format.\n  example:\n  - \"The following example demonstrates the use of the CanLoad method.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]\"\n  syntax:\n    content: public bool CanLoad (string dataFormat);\n    parameters:\n    - id: dataFormat\n      type: System.String\n      description: A data format to check for load-compatibility into the current selection.  See <xref href=\"System.Windows.DataFormats\"></xref> for a list of predefined data formats.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection can be loaded with content in the specified data format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Documents.TextRange.CanLoad*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.CanSave(System.String)\n  id: CanSave(System.String)\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: CanSave(String)\n  nameWithType: TextRange.CanSave(String)\n  fullName: System.Windows.Documents.TextRange.CanSave(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Checks whether the current selection can be saved as a specified data format.\n  remarks: Use the corresponding <xref:System.Windows.Documents.TextRange.Save%2A> method to actually save the current selection in a specified data format.\n  example:\n  - \"The following example demonstrates the use of the CanSave method.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]\"\n  syntax:\n    content: public bool CanSave (string dataFormat);\n    parameters:\n    - id: dataFormat\n      type: System.String\n      description: A data format to check for save compatibility with the current selection.  See <xref href=\"System.Windows.DataFormats\"></xref> for a list of predefined data formats.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection can be saved as the specified data format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Documents.TextRange.CanSave*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.Changed\n  id: Changed\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: Changed\n  nameWithType: TextRange.Changed\n  fullName: System.Windows.Documents.TextRange.Changed\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Occurs when the range is repositioned to cover a new span of content.\n  syntax:\n    content: public event EventHandler Changed;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.ClearAllProperties\n  id: ClearAllProperties\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: ClearAllProperties()\n  nameWithType: TextRange.ClearAllProperties()\n  fullName: System.Windows.Documents.TextRange.ClearAllProperties()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Removes all formatting properties (represented by <xref href=\"System.Windows.Documents.Inline\"></xref> elements) from the current selection.\n  remarks: This method only affects any <xref:System.Windows.Documents.Inline> formatting elements, such as <xref:System.Windows.Documents.Bold> or <xref:System.Windows.Documents.Italic>. Properties set on paragraphs and other enclosing <xref:System.Windows.Documents.Block> elements are not changed.\n  syntax:\n    content: public void ClearAllProperties ();\n    parameters: []\n  overload: System.Windows.Documents.TextRange.ClearAllProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)\n  id: Contains(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: Contains(TextPointer)\n  nameWithType: TextRange.Contains(TextPointer)\n  fullName: System.Windows.Documents.TextRange.Contains(TextPointer)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Checks whether a position (specified by a <xref href=\"System.Windows.Documents.TextPointer\"></xref>) is located within the current selection.\n  remarks: Positions at either end of the current selection (indicated by <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>) are considered to be part of the current selection.\n  example:\n  - \"The following example demonstrates the use of the Contains method.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]\"\n  syntax:\n    content: public bool Contains (System.Windows.Documents.TextPointer textPointer);\n    parameters:\n    - id: textPointer\n      type: System.Windows.Documents.TextPointer\n      description: A position to test for inclusion in the current selection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified position is located within the current selection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Documents.TextRange.Contains*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Occurs when *textPointer* is not in the same document as the current selection.\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.End\n  id: End\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: End\n  nameWithType: TextRange.End\n  fullName: System.Windows.Documents.TextRange.End\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Get the position that marks the end of the current selection.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the End property.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]\"\n  syntax:\n    content: public System.Windows.Documents.TextPointer End { get; }\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that points to the end of the current selection.\n  overload: System.Windows.Documents.TextRange.End*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)\n  id: GetPropertyValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: GetPropertyValue(DependencyProperty)\n  nameWithType: TextRange.GetPropertyValue(DependencyProperty)\n  fullName: System.Windows.Documents.TextRange.GetPropertyValue(DependencyProperty)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Returns the effective value of a specified formatting property on the current selection.\n  remarks: In order to return a property value, the entire <xref:System.Windows.Documents.TextRange> must extend over text with only one value for the `formattingProperty`. If the <xref:System.Windows.Documents.TextRange> extends over text with two or more different values for the `formattingProperty`, <xref:System.Windows.DependencyProperty.UnsetValue> is returned.\n  syntax:\n    content: public object GetPropertyValue (System.Windows.DependencyProperty formattingProperty);\n    parameters:\n    - id: formattingProperty\n      type: System.Windows.DependencyProperty\n      description: A formatting property to get the value of with respect to the current selection.\n    return:\n      type: System.Object\n      description: An object specifying the value of the specified formatting property.\n  overload: System.Windows.Documents.TextRange.GetPropertyValue*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Occurs when <code>formattingProperty</code> does not specify a valid formatting property, or <code>value</code> specifies an invalid value for <code>formattingProperty</code>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Occurs when <code>formattingProperty</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.IsEmpty\n  id: IsEmpty\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: TextRange.IsEmpty\n  fullName: System.Windows.Documents.TextRange.IsEmpty\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets a value indicating whether or not the current selection is empty.\n  remarks: A <xref:System.Windows.Documents.TextRange> is considered empty if the <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A> positions are equal.\n  example:\n  - \"The following example demonstrates the use of the IsEmpty property.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]\"\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection is empty; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Documents.TextRange.IsEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)\n  id: Load(System.IO.Stream,System.String)\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: Load(Stream,String)\n  nameWithType: TextRange.Load(Stream,String)\n  fullName: System.Windows.Documents.TextRange.Load(Stream,String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Loads the current selection in a specified data format from a specified stream.\n  remarks: \"If <xref:System.IO.Stream.CanSeek%2A> is `true` for `stream`, content will be loaded from the beginning of the stream to the end of the stream.  Otherwise, content will be read from the current <xref:System.IO.Stream.Position%2A> to the end of the stream.  When this method returns, `stream` is left open, and the current position within `stream` is undefined.  \\n  \\n A load operation replaces the current selection with the newly loaded content.\"\n  example:\n  - \"The following example demonstrates the use of the Load method.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]\"\n  syntax:\n    content: public void Load (System.IO.Stream stream, string dataFormat);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A readable stream that contains data to load into the current selection.\n    - id: dataFormat\n      type: System.String\n      description: A data format to load the data as.  Currently supported data formats are <xref href=\"System.Windows.DataFormats.Rtf\"></xref>, <xref href=\"System.Windows.DataFormats.Text\"></xref>, <xref href=\"System.Windows.DataFormats.Xaml\"></xref>, and <xref href=\"System.Windows.DataFormats.XamlPackage\"></xref>.\n  overload: System.Windows.Documents.TextRange.Load*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Occurs when <code>stream</code> or <code>dataFormat</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Occurs when the specified data format is unsupported.  May also be raised if content loaded from <code>stream</code> does not match the specified data format.\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)\n  id: Save(System.IO.Stream,System.String)\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: Save(Stream,String)\n  nameWithType: TextRange.Save(Stream,String)\n  fullName: System.Windows.Documents.TextRange.Save(Stream,String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Saves the current selection to a specified stream in a specified data format.\n  remarks: \"When this method returns, `stream` is left open, and the current position within `stream` is undefined.  \\n  \\n As part of the save operation, content in the current selection may be converted to the data format specified by `dataFormat`.\"\n  example:\n  - \"The following example demonstrates the use of the Save method.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]\"\n  syntax:\n    content: public void Save (System.IO.Stream stream, string dataFormat);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: An empty, writable stream to save the current selection to.\n    - id: dataFormat\n      type: System.String\n      description: A data format to save the current selection as.  Currently supported data formats are <xref href=\"System.Windows.DataFormats.Rtf\"></xref>, <xref href=\"System.Windows.DataFormats.Text\"></xref>, <xref href=\"System.Windows.DataFormats.Xaml\"></xref>, and <xref href=\"System.Windows.DataFormats.XamlPackage\"></xref>.\n  overload: System.Windows.Documents.TextRange.Save*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>dataFormat</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The specified data format is unsupported.  \\n  \\n -or  \\n  \\n Content loaded from <code>stream</code> does not match the specified data format.\"\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)\n  id: Save(System.IO.Stream,System.String,System.Boolean)\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: Save(Stream,String,Boolean)\n  nameWithType: TextRange.Save(Stream,String,Boolean)\n  fullName: System.Windows.Documents.TextRange.Save(Stream,String,Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Saves the current selection to a specified stream in a specified data format, with the option of preserving custom <xref href=\"System.Windows.Documents.TextElement\"></xref> objects.\n  remarks: \"When `preserveTextElements` is `false`, custom <xref:System.Windows.Documents.TextElement> objects are saved as known <xref:System.Windows.Documents.TextElement> types.  For example, suppose you create a custom <xref:System.Windows.Documents.TextElement> called `Heading1`, which inherits from <xref:System.Windows.Documents.Paragraph>. When you call this method with `preserveTextElements` set to `false`, `Heading1` is converted to a <xref:System.Windows.Documents.Paragraph> when the <xref:System.Windows.Documents.TextRange> is saved.  When you call this method with `preserveTextElements` set to `true`, `Heading1` is saved without being converted. To preserve custom text elements, `dataFormat` must be set to <xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>.  \\n  \\n Save is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void Save (System.IO.Stream stream, string dataFormat, bool preserveTextElements);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: An empty, writable stream to save the current selection to.\n    - id: dataFormat\n      type: System.String\n      description: A data format to save the current selection as.  Currently supported data formats are <xref href=\"System.Windows.DataFormats.Rtf\"></xref>, <xref href=\"System.Windows.DataFormats.Text\"></xref>, <xref href=\"System.Windows.DataFormats.Xaml\"></xref>, and <xref href=\"System.Windows.DataFormats.XamlPackage\"></xref>.\n    - id: preserveTextElements\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to preserve custom <xref href=\"System.Windows.Documents.TextElement\"></xref> objects; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Documents.TextRange.Save*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Occurs when <code>stream</code> or <code>dataFormat</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Occurs when the specified data format is unsupported.  May also be raised if content loaded from <code>stream</code> does not match the specified data format.\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)\n  id: Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: Select(TextPointer,TextPointer)\n  nameWithType: TextRange.Select(TextPointer,TextPointer)\n  fullName: System.Windows.Documents.TextRange.Select(TextPointer,TextPointer)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Updates the current selection, taking two <xref href=\"System.Windows.Documents.TextPointer\"></xref> positions to indicate the updated selection.\n  remarks: \"A <xref:System.Windows.Documents.TextRange> is formed from a selection between two positions indicated by **TextPointers**.  One of these positions (indicated by `position1`) is fixed with respect to the selection, while the other position (indicated by `position2`) is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.  \\n  \\n The actual ends of the new selection may be adjusted to match any selection heuristics that are applicable to the document that contains the new current selection.\"\n  syntax:\n    content: public void Select (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);\n    parameters:\n    - id: position1\n      type: System.Windows.Documents.TextPointer\n      description: A fixed anchor position that marks one end of the updated selection.\n    - id: position2\n      type: System.Windows.Documents.TextPointer\n      description: A movable position that marks the other end of the updated selection.\n  overload: System.Windows.Documents.TextRange.Select*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Occurs when <code>position1</code> and <code>position2</code> are not positioned within the same document.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Occurs when <code>position1</code> or <code>position2</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.Start\n  id: Start\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: Start\n  nameWithType: TextRange.Start\n  fullName: System.Windows.Documents.TextRange.Start\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets the position that marks the beginning of the current selection.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the Start property.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]\"\n  syntax:\n    content: public System.Windows.Documents.TextPointer Start { get; }\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that points to the beginning of the current selection.\n  overload: System.Windows.Documents.TextRange.Start*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.TextRange.Text\n  id: Text\n  parent: System.Windows.Documents.TextRange\n  langs:\n  - csharp\n  name: Text\n  nameWithType: TextRange.Text\n  fullName: System.Windows.Documents.TextRange.Text\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets or sets the plain text contents of the current selection.\n  remarks: \"Use this property to extract the plain text content in the current selection, regardless of any formatting that may be present.  \\n  \\n New line characters and paragraph breaks are treated as equivalent with respect to this property.  Any types of content breaks present in the current selection are converted to new lines when this property is read.\"\n  example:\n  - \"The following example demonstrates the use of the Text property.  \\n  \\n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]\"\n  syntax:\n    content: public string Text { get; set; }\n    return:\n      type: System.String\n      description: A string containing the plain text contents of the current selection.\n  overload: System.Windows.Documents.TextRange.Text*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Occurs when an attempt is made to set this property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: TextRange(TextPointer,TextPointer)\n  nameWithType: TextRange.TextRange(TextPointer,TextPointer)\n  fullName: System.Windows.Documents.TextRange.TextRange(TextPointer,TextPointer)\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: ApplyPropertyValue(DependencyProperty,Object)\n  nameWithType: TextRange.ApplyPropertyValue(DependencyProperty,Object)\n  fullName: System.Windows.Documents.TextRange.ApplyPropertyValue(DependencyProperty,Object)\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Documents.TextRange.CanLoad(System.String)\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: CanLoad(String)\n  nameWithType: TextRange.CanLoad(String)\n  fullName: System.Windows.Documents.TextRange.CanLoad(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Documents.TextRange.CanSave(System.String)\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: CanSave(String)\n  nameWithType: TextRange.CanSave(String)\n  fullName: System.Windows.Documents.TextRange.CanSave(String)\n- uid: System.Windows.Documents.TextRange.Changed\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Changed\n  nameWithType: TextRange.Changed\n  fullName: System.Windows.Documents.TextRange.Changed\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Documents.TextRange.ClearAllProperties\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: ClearAllProperties()\n  nameWithType: TextRange.ClearAllProperties()\n  fullName: System.Windows.Documents.TextRange.ClearAllProperties()\n- uid: System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Contains(TextPointer)\n  nameWithType: TextRange.Contains(TextPointer)\n  fullName: System.Windows.Documents.TextRange.Contains(TextPointer)\n- uid: System.Windows.Documents.TextRange.End\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: End\n  nameWithType: TextRange.End\n  fullName: System.Windows.Documents.TextRange.End\n- uid: System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: GetPropertyValue(DependencyProperty)\n  nameWithType: TextRange.GetPropertyValue(DependencyProperty)\n  fullName: System.Windows.Documents.TextRange.GetPropertyValue(DependencyProperty)\n- uid: System.Windows.Documents.TextRange.IsEmpty\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: IsEmpty\n  nameWithType: TextRange.IsEmpty\n  fullName: System.Windows.Documents.TextRange.IsEmpty\n- uid: System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Load(Stream,String)\n  nameWithType: TextRange.Load(Stream,String)\n  fullName: System.Windows.Documents.TextRange.Load(Stream,String)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Save(Stream,String)\n  nameWithType: TextRange.Save(Stream,String)\n  fullName: System.Windows.Documents.TextRange.Save(Stream,String)\n- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Save(Stream,String,Boolean)\n  nameWithType: TextRange.Save(Stream,String,Boolean)\n  fullName: System.Windows.Documents.TextRange.Save(Stream,String,Boolean)\n- uid: System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Select(TextPointer,TextPointer)\n  nameWithType: TextRange.Select(TextPointer,TextPointer)\n  fullName: System.Windows.Documents.TextRange.Select(TextPointer,TextPointer)\n- uid: System.Windows.Documents.TextRange.Start\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Start\n  nameWithType: TextRange.Start\n  fullName: System.Windows.Documents.TextRange.Start\n- uid: System.Windows.Documents.TextRange.Text\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Text\n  nameWithType: TextRange.Text\n  fullName: System.Windows.Documents.TextRange.Text\n- uid: System.Windows.Documents.TextRange.#ctor*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: TextRange\n  nameWithType: TextRange.TextRange\n- uid: System.Windows.Documents.TextRange.ApplyPropertyValue*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: ApplyPropertyValue\n  nameWithType: TextRange.ApplyPropertyValue\n- uid: System.Windows.Documents.TextRange.CanLoad*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: CanLoad\n  nameWithType: TextRange.CanLoad\n- uid: System.Windows.Documents.TextRange.CanSave*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: CanSave\n  nameWithType: TextRange.CanSave\n- uid: System.Windows.Documents.TextRange.ClearAllProperties*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: ClearAllProperties\n  nameWithType: TextRange.ClearAllProperties\n- uid: System.Windows.Documents.TextRange.Contains*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Contains\n  nameWithType: TextRange.Contains\n- uid: System.Windows.Documents.TextRange.End*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: End\n  nameWithType: TextRange.End\n- uid: System.Windows.Documents.TextRange.GetPropertyValue*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: GetPropertyValue\n  nameWithType: TextRange.GetPropertyValue\n- uid: System.Windows.Documents.TextRange.IsEmpty*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: IsEmpty\n  nameWithType: TextRange.IsEmpty\n- uid: System.Windows.Documents.TextRange.Load*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Load\n  nameWithType: TextRange.Load\n- uid: System.Windows.Documents.TextRange.Save*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Save\n  nameWithType: TextRange.Save\n- uid: System.Windows.Documents.TextRange.Select*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Select\n  nameWithType: TextRange.Select\n- uid: System.Windows.Documents.TextRange.Start*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Start\n  nameWithType: TextRange.Start\n- uid: System.Windows.Documents.TextRange.Text*\n  parent: System.Windows.Documents.TextRange\n  isExternal: false\n  name: Text\n  nameWithType: TextRange.Text\n"}