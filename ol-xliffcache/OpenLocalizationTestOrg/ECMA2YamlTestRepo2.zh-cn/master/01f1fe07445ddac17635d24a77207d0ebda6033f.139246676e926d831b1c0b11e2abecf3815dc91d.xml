{"nodes":[{"pos":[575,664],"content":"Represents an array of <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.RemoteArgument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Represents an array of <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> objects."},{"pos":[677,1050],"content":"Use an IRemoteArgumentArrayContract to pass an array of <xref:System.AddIn.Contract.RemoteArgument> objects between contracts by reference.       An IRemoteArgumentArrayContract does not dynamically resize itself. If you need to use a collection that dynamically resizes itself, use the <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use an IRemoteArgumentArrayContract to pass an array of <xref:System.AddIn.Contract.RemoteArgument> objects between contracts by reference.       An IRemoteArgumentArrayContract does not dynamically resize itself. If you need to use a collection that dynamically resizes itself, use the <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract> interface.","pos":[0,371],"nodes":[{"content":"Use an IRemoteArgumentArrayContract to pass an array of &lt;xref:System.AddIn.Contract.RemoteArgument&gt; objects between contracts by reference.","pos":[0,139],"source":"Use an IRemoteArgumentArrayContract to pass an array of <xref:System.AddIn.Contract.RemoteArgument> objects between contracts by reference."},{"content":"An IRemoteArgumentArrayContract does not dynamically resize itself.","pos":[146,213]},{"content":"If you need to use a collection that dynamically resizes itself, use the &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&gt; interface.","pos":[214,371],"source":" If you need to use a collection that dynamically resizes itself, use the <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract> interface."}]}]},{"pos":[1801,1844],"content":"Returns the element at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the element at the specified index.","pos":[0,43]}]},{"pos":[2009,2055],"content":"The zero-based index of the element to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the element to return.","pos":[0,46]}]},{"pos":[2136,2171],"content":"The element at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element at the specified index.","pos":[0,35]}]},{"pos":[2379,2590],"content":"<code>index</code> is less than zero.       -or-       <code>index</code> is equal to or greater than the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount*>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","pos":[0,37],"source":"<code>index</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount*&gt;</ph>.","pos":[44,207],"source":"       -or-       <code>index</code> is equal to or greater than the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount*>."}]},{"pos":[3233,3354],"content":"Replaces the element at the specified index with the specified <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.RemoteArgument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Replaces the element at the specified index with the specified <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref>."},{"pos":[3531,3578],"content":"The zero-based index of the element to replace.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the element to replace.","pos":[0,47]}]},{"pos":[3663,3716],"content":"The new value for the element at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value for the element at the specified index.","pos":[0,53]}]},{"pos":[3924,4135],"content":"<code>index</code> is less than zero.       -or-       <code>index</code> is equal to or greater than the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount*>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","pos":[0,37],"source":"<code>index</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount*&gt;</ph>.","pos":[44,207],"source":"       -or-       <code>index</code> is equal to or greater than the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount*>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  id: IRemoteArgumentArrayContract\n  children:\n  - System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem(System.Int32)\n  - System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem(System.Int32,System.AddIn.Contract.RemoteArgument)\n  langs:\n  - csharp\n  name: IRemoteArgumentArrayContract\n  nameWithType: IRemoteArgumentArrayContract\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  type: Interface\n  summary: Represents an array of <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> objects.\n  remarks: \"Use an IRemoteArgumentArrayContract to pass an array of <xref:System.AddIn.Contract.RemoteArgument> objects between contracts by reference.  \\n  \\n An IRemoteArgumentArrayContract does not dynamically resize itself. If you need to use a collection that dynamically resizes itself, use the <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract> interface.\"\n  syntax:\n    content: 'public interface IRemoteArgumentArrayContract : System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract'\n  implements:\n  - System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem(System.Int32)\n  id: GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  langs:\n  - csharp\n  name: GetItem(Int32)\n  nameWithType: IRemoteArgumentArrayContract.GetItem(Int32)\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Returns the element at the specified index.\n  syntax:\n    content: public System.AddIn.Contract.RemoteArgument GetItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to return.\n    return:\n      type: System.AddIn.Contract.RemoteArgument\n      description: The element at the specified index.\n  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount*>.\"\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem(System.Int32,System.AddIn.Contract.RemoteArgument)\n  id: SetItem(System.Int32,System.AddIn.Contract.RemoteArgument)\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  langs:\n  - csharp\n  name: SetItem(Int32,RemoteArgument)\n  nameWithType: IRemoteArgumentArrayContract.SetItem(Int32,RemoteArgument)\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem(Int32,RemoteArgument)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Replaces the element at the specified index with the specified <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref>.\n  syntax:\n    content: public void SetItem (int index, System.AddIn.Contract.RemoteArgument value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to replace.\n    - id: value\n      type: System.AddIn.Contract.RemoteArgument\n      description: The new value for the element at the specified index.\n  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount*>.\"\n  platform:\n  - net462\nreferences:\n- uid: System.IndexOutOfRangeException\n  isExternal: true\n  name: System.IndexOutOfRangeException\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  isExternal: false\n  name: GetItem(Int32)\n  nameWithType: IRemoteArgumentArrayContract.GetItem(Int32)\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem(Int32)\n- uid: System.AddIn.Contract.RemoteArgument\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: RemoteArgument\n  nameWithType: RemoteArgument\n  fullName: System.AddIn.Contract.RemoteArgument\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem(System.Int32,System.AddIn.Contract.RemoteArgument)\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  isExternal: false\n  name: SetItem(Int32,RemoteArgument)\n  nameWithType: IRemoteArgumentArrayContract.SetItem(Int32,RemoteArgument)\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem(Int32,RemoteArgument)\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem*\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  isExternal: false\n  name: GetItem\n  nameWithType: IRemoteArgumentArrayContract.GetItem\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem*\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  isExternal: false\n  name: SetItem\n  nameWithType: IRemoteArgumentArrayContract.SetItem\n"}