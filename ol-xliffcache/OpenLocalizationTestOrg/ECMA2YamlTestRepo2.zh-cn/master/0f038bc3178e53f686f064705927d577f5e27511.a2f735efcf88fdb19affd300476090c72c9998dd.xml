{"nodes":[{"pos":[763,933],"content":"Represents a security token handler that processes Kerberos tokens. Handles tokens of type <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a security token handler that processes Kerberos tokens.","pos":[0,67]},{"content":"Handles tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,170],"source":" Handles tokens of type <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref>."}]},{"pos":[3840,3958],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosSecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.KerberosSecurityTokenHandler\"></xref> class."},{"pos":[4629,4715],"content":"Gets a value that indicates whether the current instance can validate security tokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the current instance can validate security tokens.","pos":[0,86]}]},{"pos":[4727,4892],"content":"Indicates whether the handler can validate tokens of the type specified by the <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the handler can validate tokens of the type specified by the &lt;xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType%2A&gt; property.","pos":[0,165],"source":"Indicates whether the handler can validate tokens of the type specified by the <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType%2A> property."}]},{"pos":[5021,5269],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can validate tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler can validate tokens; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can validate tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,248],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[5908,6001],"content":"Gets the Kerberos Security token type defined in WS-Security Kerberos Security Token profile.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the Kerberos Security token type defined in WS-Security Kerberos Security Token profile.","pos":[0,93]}]},{"pos":[6156,6329],"content":"The Kerberos Security token type URI. By default, the value of the &lt;xref:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos%2A?displayProperty=fullName&gt; property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Kerberos Security token type URI. By default, the value of the &lt;xref:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos%2A?displayProperty=fullName&gt; property.","pos":[0,173],"nodes":[{"content":"The Kerberos Security token type URI.","pos":[0,37]},{"content":"By default, the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[38,173],"source":" By default, the value of the &lt;xref:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos%2A?displayProperty=fullName&gt; property."}]}]},{"pos":[6901,6960],"content":"Gets the type of the token handled by the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the token handled by the current instance.","pos":[0,59]}]},{"pos":[7079,7254],"content":"The type of the token handled by the current instance. By default this is the type of the <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the token handled by the current instance.","pos":[0,54]},{"content":"By default this is the type of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[55,175],"source":" By default this is the type of the <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref> class."}]},{"pos":[7961,8009],"content":"Validates the specified Kerberos security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the specified Kerberos security token.","pos":[0,48]}]},{"pos":[8308,8461],"content":"The security token to be validated. This must be an instance of the <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token to be validated.","pos":[0,35]},{"content":"This must be an instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[36,153],"source":" This must be an instance of the <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref> class."}]},{"pos":[8594,8641],"content":"The identities that are contained in the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identities that are contained in the token.","pos":[0,47]}]},{"pos":[8842,8925],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9020,9142],"content":"The specified token is not assignable as a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The specified token is not assignable as a <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  id: KerberosSecurityTokenHandler\n  children:\n  - System.IdentityModel.Tokens.KerberosSecurityTokenHandler.#ctor\n  - System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Tokens.KerberosSecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: KerberosSecurityTokenHandler\n  nameWithType: KerberosSecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  type: Class\n  summary: Represents a security token handler that processes Kerberos tokens. Handles tokens of type <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref>.\n  syntax:\n    content: 'public class KerberosSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  langs:\n  - csharp\n  name: KerberosSecurityTokenHandler()\n  nameWithType: KerberosSecurityTokenHandler.KerberosSecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.KerberosSecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.KerberosSecurityTokenHandler\"></xref> class.\n  syntax:\n    content: public KerberosSecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanValidateToken\n  id: CanValidateToken\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanValidateToken\n  nameWithType: KerberosSecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanValidateToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the current instance can validate security tokens.\n  remarks: Indicates whether the handler can validate tokens of the type specified by the <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType%2A> property.\n  syntax:\n    content: public override bool CanValidateToken { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can validate tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanValidateToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.GetTokenTypeIdentifiers\n  id: GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  langs:\n  - csharp\n  name: GetTokenTypeIdentifiers()\n  nameWithType: KerberosSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.GetTokenTypeIdentifiers()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the Kerberos Security token type defined in WS-Security Kerberos Security Token profile.\n  syntax:\n    content: public override string[] GetTokenTypeIdentifiers ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: The Kerberos Security token type URI. By default, the value of the &lt;xref:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos%2A?displayProperty=fullName&gt; property.\n  overload: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.GetTokenTypeIdentifiers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType\n  id: TokenType\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  langs:\n  - csharp\n  name: TokenType\n  nameWithType: KerberosSecurityTokenHandler.TokenType\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the type of the token handled by the current instance.\n  syntax:\n    content: public override Type TokenType { get; }\n    return:\n      type: System.Type\n      description: The type of the token handled by the current instance. By default this is the type of the <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref> class.\n  overload: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  langs:\n  - csharp\n  name: ValidateToken(SecurityToken)\n  nameWithType: KerberosSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Validates the specified Kerberos security token.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token to be validated. This must be an instance of the <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref> class.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n      description: The identities that are contained in the token.\n  overload: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ValidateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified token is not assignable as a <xref href=\"System.IdentityModel.Tokens.KerberosReceiverSecurityToken\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: System.IdentityModel.Tokens.SecurityTokenHandler\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  isExternal: false\n  name: KerberosSecurityTokenHandler()\n  nameWithType: KerberosSecurityTokenHandler.KerberosSecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.KerberosSecurityTokenHandler()\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanValidateToken\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: KerberosSecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanValidateToken\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers()\n  nameWithType: KerberosSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.GetTokenTypeIdentifiers()\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: KerberosSecurityTokenHandler.TokenType\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: KerberosSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ValidateToken(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ClaimsIdentity>\n  nameWithType: ReadOnlyCollection<ClaimsIdentity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    nameWithType: ClaimsIdentity\n    fullName: ClaimsIdentity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  isExternal: false\n  name: KerberosSecurityTokenHandler\n  nameWithType: KerberosSecurityTokenHandler.KerberosSecurityTokenHandler\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanValidateToken*\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: KerberosSecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.GetTokenTypeIdentifiers*\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers\n  nameWithType: KerberosSecurityTokenHandler.GetTokenTypeIdentifiers\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType*\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: KerberosSecurityTokenHandler.TokenType\n- uid: System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ValidateToken*\n  parent: System.IdentityModel.Tokens.KerberosSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken\n  nameWithType: KerberosSecurityTokenHandler.ValidateToken\n"}