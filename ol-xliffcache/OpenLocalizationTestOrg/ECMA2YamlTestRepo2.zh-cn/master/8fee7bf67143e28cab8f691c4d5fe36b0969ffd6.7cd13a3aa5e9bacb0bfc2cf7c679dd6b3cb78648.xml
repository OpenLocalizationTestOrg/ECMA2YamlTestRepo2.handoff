{"nodes":[{"pos":[3867,4180],"content":"Contains values that each expression class uses to denote the operation it represents. The <xref:System.Data.Common.CommandTrees.DbExpression.ExpressionKind*> property of an <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> can be retrieved to determine which operation that expression represents.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains values that each expression class uses to denote the operation it represents.","pos":[0,86]},{"content":"The &lt;xref:System.Data.Common.CommandTrees.DbExpression.ExpressionKind*&gt; property of an <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can be retrieved to determine which operation that expression represents.","pos":[87,313],"source":" The <xref:System.Data.Common.CommandTrees.DbExpression.ExpressionKind*> property of an <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> can be retrieved to determine which operation that expression represents."}]},{"pos":[4192,4384],"content":"Use the DbExpressionKind enumeration to specify the various kinds of expressions. The Members table lists the functions that are members of this class and the type of expressions they specify.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the DbExpressionKind enumeration to specify the various kinds of expressions. The Members table lists the functions that are members of this class and the type of expressions they specify.","pos":[0,192],"nodes":[{"content":"Use the DbExpressionKind enumeration to specify the various kinds of expressions.","pos":[0,81]},{"content":"The Members table lists the functions that are members of this class and the type of expressions they specify.","pos":[82,192]}]}]},{"pos":[4861,4942],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>-for-all expressions.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>-for-all expressions."},{"pos":[5062,5074],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5485,5509],"content":"Logical AND expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Logical AND expressions.","pos":[0,24]}]},{"pos":[5629,5641],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6052,6133],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>-for-any expressions.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>-for-any expressions."},{"pos":[6253,6265],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6681,6720],"content":"Conditional case statement expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Conditional case statement expressions.","pos":[0,39]}]},{"pos":[6841,6853],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7269,7303],"content":"Polymorphic type cast expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Polymorphic type cast expressions.","pos":[0,34]}]},{"pos":[7424,7436],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7872,7899],"content":"Constant value expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Constant value expressions.","pos":[0,27]}]},{"pos":[8024,8036],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8482,8506],"content":"Cross apply expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cross apply expressions.","pos":[0,24]}]},{"pos":[8633,8645],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9086,9109],"content":"Cross join expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cross join expressions.","pos":[0,23]}]},{"pos":[9235,9247],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9668,9692],"content":"Dereference expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Dereference expressions.","pos":[0,24]}]},{"pos":[9814,9826],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10262,10292],"content":"Duplicate removal expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Duplicate removal expressions.","pos":[0,30]}]},{"pos":[10417,10429],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10855,10876],"content":"Division expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Division expressions.","pos":[0,21]}]},{"pos":[10999,11011],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11442,11482],"content":"Set-to-singleton conversion expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Set-to-singleton conversion expressions.","pos":[0,40]}]},{"pos":[11606,11618],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12059,12104],"content":"Entity reference value retrieval expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Entity reference value retrieval expressions.","pos":[0,45]}]},{"pos":[12230,12242],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12668,12689],"content":"Equality expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Equality expressions.","pos":[0,21]}]},{"pos":[12812,12824],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13250,13278],"content":"Set subtraction expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Set subtraction expressions.","pos":[0,28]}]},{"pos":[13401,13413],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13839,13863],"content":"Restriction expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Restriction expressions.","pos":[0,24]}]},{"pos":[13986,13998],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14459,14487],"content":"Full outer join expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Full outer join expressions.","pos":[0,28]}]},{"pos":[14617,14629],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15065,15097],"content":"Standalone function expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Standalone function expressions.","pos":[0,32]}]},{"pos":[15222,15234],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15685,15710],"content":"Greater than expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Greater than expressions.","pos":[0,25]}]},{"pos":[15838,15850],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16341,16375],"content":"Greater than or equal expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Greater than or equal expressions.","pos":[0,34]}]},{"pos":[16511,16523],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16954,16975],"content":"Grouping expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Grouping expressions.","pos":[0,21]}]},{"pos":[17099,17111],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17552,17575],"content":"Inner join expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inner join expressions.","pos":[0,23]}]},{"pos":[17701,17713],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18154,18183],"content":"Set intersection expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Set intersection expressions.","pos":[0,29]}]},{"pos":[18309,18321],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18752,18788],"content":"Empty set determination expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty set determination expressions.","pos":[0,36]}]},{"pos":[18912,18924],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19350,19381],"content":"Null determination expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Null determination expressions.","pos":[0,31]}]},{"pos":[19504,19516],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19932,19988],"content":"Type comparison (specified Type or Subtype) expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Type comparison (specified Type or Subtype) expressions.","pos":[0,56]}]},{"pos":[20109,20121],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20557,20607],"content":"Type comparison (specified Type only) expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Type comparison (specified Type only) expressions.","pos":[0,50]}]},{"pos":[20732,20744],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21170,21198],"content":"Lambda function expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Lambda function expressions.","pos":[0,28]}]},{"pos":[21321,21333],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21794,21822],"content":"Left outer join expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Left outer join expressions.","pos":[0,28]}]},{"pos":[21952,21964],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22400,22422],"content":"Less than expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Less than expressions.","pos":[0,22]}]},{"pos":[22547,22559],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23035,23066],"content":"Less than or equal expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Less than or equal expressions.","pos":[0,31]}]},{"pos":[23199,23211],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23627,23657],"content":"String comparison expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"String comparison expressions.","pos":[0,30]}]},{"pos":[23778,23790],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24211,24244],"content":"Result count restriction (TOP n).","needQuote":true,"needEscape":true,"nodes":[{"content":"Result count restriction (TOP n).","pos":[0,33]}]},{"pos":[24366,24378],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24799,24823],"content":"Subtraction expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtraction expressions.","pos":[0,24]}]},{"pos":[24945,24957],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25383,25402],"content":"Modulo expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Modulo expressions.","pos":[0,19]}]},{"pos":[25525,25537],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25973,26000],"content":"Multiplication expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiplication expressions.","pos":[0,27]}]},{"pos":[26125,26137],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26588,26636],"content":"Instance, row, and set construction expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Instance, row, and set construction expressions.","pos":[0,48]}]},{"pos":[26764,26776],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27187,27211],"content":"Logical NOT expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Logical NOT expressions.","pos":[0,24]}]},{"pos":[27331,27343],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27784,27807],"content":"Inequality expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inequality expressions.","pos":[0,23]}]},{"pos":[27933,27945],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28365,28382],"content":"Null expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Null expressions.","pos":[0,17]}]},{"pos":[28505,28517],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28943,28988],"content":"Set members by type (or subtype) expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Set members by type (or subtype) expressions.","pos":[0,45]}]},{"pos":[29111,29123],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29569,29607],"content":"Set members by exact type expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Set members by exact type expressions.","pos":[0,38]}]},{"pos":[29734,29746],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30152,30175],"content":"Logical OR expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Logical OR expressions.","pos":[0,23]}]},{"pos":[30294,30306],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30752,30775],"content":"Outer apply expressions","needQuote":true,"needEscape":true,"nodes":[{"content":"Outer apply expressions","pos":[0,23]}]},{"pos":[30902,30914],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31400,31437],"content":"Reference to a parameter expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reference to a parameter expressions.","pos":[0,37]}]},{"pos":[31572,31584],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32000,32021],"content":"Addition expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Addition expressions.","pos":[0,21]}]},{"pos":[32142,32154],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32585,32608],"content":"Projection expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Projection expressions.","pos":[0,23]}]},{"pos":[32732,32744],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33180,33230],"content":"Static or instance property retrieval expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Static or instance property retrieval expressions.","pos":[0,50]}]},{"pos":[33355,33367],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33778,33800],"content":"Reference expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reference expressions.","pos":[0,22]}]},{"pos":[33920,33932],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34358,34394],"content":"Ref key value retrieval expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ref key value retrieval expressions.","pos":[0,36]}]},{"pos":[34517,34529],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35035,35100],"content":"Relationship (composition or association) navigation expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Relationship (composition or association) navigation expressions.","pos":[0,65]}]},{"pos":[35239,35251],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35667,35711],"content":"Entity or relationship set scan expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Entity or relationship set scan expressions.","pos":[0,44]}]},{"pos":[35832,35844],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36260,36299],"content":"Skip elements of an ordered collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Skip elements of an ordered collection.","pos":[0,39]}]},{"pos":[36420,36432],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36848,36868],"content":"Sorting expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sorting expressions.","pos":[0,20]}]},{"pos":[36989,37001],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37422,37450],"content":"Type conversion expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Type conversion expressions.","pos":[0,28]}]},{"pos":[37572,37584],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38030,38051],"content":"Negation expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Negation expressions.","pos":[0,21]}]},{"pos":[38178,38190],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38626,38666],"content":"Set union (with duplicates) expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Set union (with duplicates) expressions.","pos":[0,40]}]},{"pos":[38791,38803],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39284,39320],"content":"Reference to a variable expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reference to a variable expressions.","pos":[0,36]}]},{"pos":[39454,39466],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbExpressionKind\n  id: DbExpressionKind\n  children:\n  - System.Data.Common.CommandTrees.DbExpressionKind.All\n  - System.Data.Common.CommandTrees.DbExpressionKind.And\n  - System.Data.Common.CommandTrees.DbExpressionKind.Any\n  - System.Data.Common.CommandTrees.DbExpressionKind.Case\n  - System.Data.Common.CommandTrees.DbExpressionKind.Cast\n  - System.Data.Common.CommandTrees.DbExpressionKind.Constant\n  - System.Data.Common.CommandTrees.DbExpressionKind.CrossApply\n  - System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin\n  - System.Data.Common.CommandTrees.DbExpressionKind.Deref\n  - System.Data.Common.CommandTrees.DbExpressionKind.Distinct\n  - System.Data.Common.CommandTrees.DbExpressionKind.Divide\n  - System.Data.Common.CommandTrees.DbExpressionKind.Element\n  - System.Data.Common.CommandTrees.DbExpressionKind.EntityRef\n  - System.Data.Common.CommandTrees.DbExpressionKind.Equals\n  - System.Data.Common.CommandTrees.DbExpressionKind.Except\n  - System.Data.Common.CommandTrees.DbExpressionKind.Filter\n  - System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin\n  - System.Data.Common.CommandTrees.DbExpressionKind.Function\n  - System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan\n  - System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals\n  - System.Data.Common.CommandTrees.DbExpressionKind.GroupBy\n  - System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin\n  - System.Data.Common.CommandTrees.DbExpressionKind.Intersect\n  - System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty\n  - System.Data.Common.CommandTrees.DbExpressionKind.IsNull\n  - System.Data.Common.CommandTrees.DbExpressionKind.IsOf\n  - System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly\n  - System.Data.Common.CommandTrees.DbExpressionKind.Lambda\n  - System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin\n  - System.Data.Common.CommandTrees.DbExpressionKind.LessThan\n  - System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals\n  - System.Data.Common.CommandTrees.DbExpressionKind.Like\n  - System.Data.Common.CommandTrees.DbExpressionKind.Limit\n  - System.Data.Common.CommandTrees.DbExpressionKind.Minus\n  - System.Data.Common.CommandTrees.DbExpressionKind.Modulo\n  - System.Data.Common.CommandTrees.DbExpressionKind.Multiply\n  - System.Data.Common.CommandTrees.DbExpressionKind.NewInstance\n  - System.Data.Common.CommandTrees.DbExpressionKind.Not\n  - System.Data.Common.CommandTrees.DbExpressionKind.NotEquals\n  - System.Data.Common.CommandTrees.DbExpressionKind.Null\n  - System.Data.Common.CommandTrees.DbExpressionKind.OfType\n  - System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly\n  - System.Data.Common.CommandTrees.DbExpressionKind.Or\n  - System.Data.Common.CommandTrees.DbExpressionKind.OuterApply\n  - System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference\n  - System.Data.Common.CommandTrees.DbExpressionKind.Plus\n  - System.Data.Common.CommandTrees.DbExpressionKind.Project\n  - System.Data.Common.CommandTrees.DbExpressionKind.Property\n  - System.Data.Common.CommandTrees.DbExpressionKind.Ref\n  - System.Data.Common.CommandTrees.DbExpressionKind.RefKey\n  - System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation\n  - System.Data.Common.CommandTrees.DbExpressionKind.Scan\n  - System.Data.Common.CommandTrees.DbExpressionKind.Skip\n  - System.Data.Common.CommandTrees.DbExpressionKind.Sort\n  - System.Data.Common.CommandTrees.DbExpressionKind.Treat\n  - System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus\n  - System.Data.Common.CommandTrees.DbExpressionKind.UnionAll\n  - System.Data.Common.CommandTrees.DbExpressionKind.VariableReference\n  langs:\n  - csharp\n  name: DbExpressionKind\n  nameWithType: DbExpressionKind\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind\n  type: Enum\n  summary: Contains values that each expression class uses to denote the operation it represents. The <xref:System.Data.Common.CommandTrees.DbExpression.ExpressionKind*> property of an <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> can be retrieved to determine which operation that expression represents.\n  remarks: Use the DbExpressionKind enumeration to specify the various kinds of expressions. The Members table lists the functions that are members of this class and the type of expressions they specify.\n  syntax:\n    content: public enum DbExpressionKind\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.All\n  id: All\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: All\n  nameWithType: DbExpressionKind.All\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.All\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>-for-all expressions.\n  syntax:\n    content: All\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.And\n  id: And\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: And\n  nameWithType: DbExpressionKind.And\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.And\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Logical AND expressions.\n  syntax:\n    content: And\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Any\n  id: Any\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Any\n  nameWithType: DbExpressionKind.Any\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Any\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>-for-any expressions.\n  syntax:\n    content: Any\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Case\n  id: Case\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Case\n  nameWithType: DbExpressionKind.Case\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Case\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Conditional case statement expressions.\n  syntax:\n    content: Case\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Cast\n  id: Cast\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Cast\n  nameWithType: DbExpressionKind.Cast\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Cast\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Polymorphic type cast expressions.\n  syntax:\n    content: Cast\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Constant\n  id: Constant\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Constant\n  nameWithType: DbExpressionKind.Constant\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Constant\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Constant value expressions.\n  syntax:\n    content: Constant\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.CrossApply\n  id: CrossApply\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: CrossApply\n  nameWithType: DbExpressionKind.CrossApply\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.CrossApply\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Cross apply expressions.\n  syntax:\n    content: CrossApply\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin\n  id: CrossJoin\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: CrossJoin\n  nameWithType: DbExpressionKind.CrossJoin\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Cross join expressions.\n  syntax:\n    content: CrossJoin\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Deref\n  id: Deref\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Deref\n  nameWithType: DbExpressionKind.Deref\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Deref\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Dereference expressions.\n  syntax:\n    content: Deref\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Distinct\n  id: Distinct\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Distinct\n  nameWithType: DbExpressionKind.Distinct\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Distinct\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Duplicate removal expressions.\n  syntax:\n    content: Distinct\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Divide\n  id: Divide\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Divide\n  nameWithType: DbExpressionKind.Divide\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Divide\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Division expressions.\n  syntax:\n    content: Divide\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Element\n  id: Element\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Element\n  nameWithType: DbExpressionKind.Element\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Element\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Set-to-singleton conversion expressions.\n  syntax:\n    content: Element\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.EntityRef\n  id: EntityRef\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: EntityRef\n  nameWithType: DbExpressionKind.EntityRef\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.EntityRef\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Entity reference value retrieval expressions.\n  syntax:\n    content: EntityRef\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Equals\n  id: Equals\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Equals\n  nameWithType: DbExpressionKind.Equals\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Equals\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Equality expressions.\n  syntax:\n    content: Equals\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Except\n  id: Except\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Except\n  nameWithType: DbExpressionKind.Except\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Except\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Set subtraction expressions.\n  syntax:\n    content: Except\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Filter\n  id: Filter\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Filter\n  nameWithType: DbExpressionKind.Filter\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Filter\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Restriction expressions.\n  syntax:\n    content: Filter\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin\n  id: FullOuterJoin\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: FullOuterJoin\n  nameWithType: DbExpressionKind.FullOuterJoin\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Full outer join expressions.\n  syntax:\n    content: FullOuterJoin\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Function\n  id: Function\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Function\n  nameWithType: DbExpressionKind.Function\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Function\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Standalone function expressions.\n  syntax:\n    content: Function\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan\n  id: GreaterThan\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: GreaterThan\n  nameWithType: DbExpressionKind.GreaterThan\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Greater than expressions.\n  syntax:\n    content: GreaterThan\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals\n  id: GreaterThanOrEquals\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: GreaterThanOrEquals\n  nameWithType: DbExpressionKind.GreaterThanOrEquals\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Greater than or equal expressions.\n  syntax:\n    content: GreaterThanOrEquals\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.GroupBy\n  id: GroupBy\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: GroupBy\n  nameWithType: DbExpressionKind.GroupBy\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GroupBy\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Grouping expressions.\n  syntax:\n    content: GroupBy\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin\n  id: InnerJoin\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: InnerJoin\n  nameWithType: DbExpressionKind.InnerJoin\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Inner join expressions.\n  syntax:\n    content: InnerJoin\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Intersect\n  id: Intersect\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Intersect\n  nameWithType: DbExpressionKind.Intersect\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Intersect\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Set intersection expressions.\n  syntax:\n    content: Intersect\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty\n  id: IsEmpty\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: DbExpressionKind.IsEmpty\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Empty set determination expressions.\n  syntax:\n    content: IsEmpty\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsNull\n  id: IsNull\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: IsNull\n  nameWithType: DbExpressionKind.IsNull\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsNull\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Null determination expressions.\n  syntax:\n    content: IsNull\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsOf\n  id: IsOf\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: IsOf\n  nameWithType: DbExpressionKind.IsOf\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsOf\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Type comparison (specified Type or Subtype) expressions.\n  syntax:\n    content: IsOf\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly\n  id: IsOfOnly\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: IsOfOnly\n  nameWithType: DbExpressionKind.IsOfOnly\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Type comparison (specified Type only) expressions.\n  syntax:\n    content: IsOfOnly\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Lambda\n  id: Lambda\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Lambda\n  nameWithType: DbExpressionKind.Lambda\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Lambda\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Lambda function expressions.\n  syntax:\n    content: Lambda\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin\n  id: LeftOuterJoin\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: LeftOuterJoin\n  nameWithType: DbExpressionKind.LeftOuterJoin\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Left outer join expressions.\n  syntax:\n    content: LeftOuterJoin\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.LessThan\n  id: LessThan\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: LessThan\n  nameWithType: DbExpressionKind.LessThan\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LessThan\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Less than expressions.\n  syntax:\n    content: LessThan\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals\n  id: LessThanOrEquals\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: LessThanOrEquals\n  nameWithType: DbExpressionKind.LessThanOrEquals\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Less than or equal expressions.\n  syntax:\n    content: LessThanOrEquals\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Like\n  id: Like\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Like\n  nameWithType: DbExpressionKind.Like\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Like\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: String comparison expressions.\n  syntax:\n    content: Like\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Limit\n  id: Limit\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Limit\n  nameWithType: DbExpressionKind.Limit\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Limit\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Result count restriction (TOP n).\n  syntax:\n    content: Limit\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Minus\n  id: Minus\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Minus\n  nameWithType: DbExpressionKind.Minus\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Minus\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Subtraction expressions.\n  syntax:\n    content: Minus\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Modulo\n  id: Modulo\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Modulo\n  nameWithType: DbExpressionKind.Modulo\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Modulo\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Modulo expressions.\n  syntax:\n    content: Modulo\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Multiply\n  id: Multiply\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Multiply\n  nameWithType: DbExpressionKind.Multiply\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Multiply\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Multiplication expressions.\n  syntax:\n    content: Multiply\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.NewInstance\n  id: NewInstance\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: NewInstance\n  nameWithType: DbExpressionKind.NewInstance\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.NewInstance\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Instance, row, and set construction expressions.\n  syntax:\n    content: NewInstance\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Not\n  id: Not\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Not\n  nameWithType: DbExpressionKind.Not\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Not\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Logical NOT expressions.\n  syntax:\n    content: Not\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.NotEquals\n  id: NotEquals\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: NotEquals\n  nameWithType: DbExpressionKind.NotEquals\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.NotEquals\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Inequality expressions.\n  syntax:\n    content: NotEquals\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Null\n  id: \"Null\"\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: DbExpressionKind.Null\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Null\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Null expressions.\n  syntax:\n    content: \"Null\"\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.OfType\n  id: OfType\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: OfType\n  nameWithType: DbExpressionKind.OfType\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OfType\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Set members by type (or subtype) expressions.\n  syntax:\n    content: OfType\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly\n  id: OfTypeOnly\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: OfTypeOnly\n  nameWithType: DbExpressionKind.OfTypeOnly\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Set members by exact type expressions.\n  syntax:\n    content: OfTypeOnly\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Or\n  id: Or\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Or\n  nameWithType: DbExpressionKind.Or\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Or\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Logical OR expressions.\n  syntax:\n    content: Or\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.OuterApply\n  id: OuterApply\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: OuterApply\n  nameWithType: DbExpressionKind.OuterApply\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OuterApply\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Outer apply expressions\n  syntax:\n    content: OuterApply\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference\n  id: ParameterReference\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: ParameterReference\n  nameWithType: DbExpressionKind.ParameterReference\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Reference to a parameter expressions.\n  syntax:\n    content: ParameterReference\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Plus\n  id: Plus\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Plus\n  nameWithType: DbExpressionKind.Plus\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Plus\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Addition expressions.\n  syntax:\n    content: Plus\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Project\n  id: Project\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Project\n  nameWithType: DbExpressionKind.Project\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Project\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Projection expressions.\n  syntax:\n    content: Project\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Property\n  id: Property\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Property\n  nameWithType: DbExpressionKind.Property\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Property\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Static or instance property retrieval expressions.\n  syntax:\n    content: Property\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Ref\n  id: Ref\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Ref\n  nameWithType: DbExpressionKind.Ref\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Ref\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Reference expressions.\n  syntax:\n    content: Ref\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.RefKey\n  id: RefKey\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: RefKey\n  nameWithType: DbExpressionKind.RefKey\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.RefKey\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Ref key value retrieval expressions.\n  syntax:\n    content: RefKey\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation\n  id: RelationshipNavigation\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: RelationshipNavigation\n  nameWithType: DbExpressionKind.RelationshipNavigation\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Relationship (composition or association) navigation expressions.\n  syntax:\n    content: RelationshipNavigation\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Scan\n  id: Scan\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Scan\n  nameWithType: DbExpressionKind.Scan\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Scan\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Entity or relationship set scan expressions.\n  syntax:\n    content: Scan\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Skip\n  id: Skip\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Skip\n  nameWithType: DbExpressionKind.Skip\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Skip\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Skip elements of an ordered collection.\n  syntax:\n    content: Skip\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Sort\n  id: Sort\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Sort\n  nameWithType: DbExpressionKind.Sort\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Sort\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Sorting expressions.\n  syntax:\n    content: Sort\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Treat\n  id: Treat\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: Treat\n  nameWithType: DbExpressionKind.Treat\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Treat\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Type conversion expressions.\n  syntax:\n    content: Treat\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus\n  id: UnaryMinus\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: UnaryMinus\n  nameWithType: DbExpressionKind.UnaryMinus\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Negation expressions.\n  syntax:\n    content: UnaryMinus\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.UnionAll\n  id: UnionAll\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: UnionAll\n  nameWithType: DbExpressionKind.UnionAll\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.UnionAll\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Set union (with duplicates) expressions.\n  syntax:\n    content: UnionAll\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.VariableReference\n  id: VariableReference\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  langs:\n  - csharp\n  name: VariableReference\n  nameWithType: DbExpressionKind.VariableReference\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.VariableReference\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Reference to a variable expressions.\n  syntax:\n    content: VariableReference\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.All\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: All\n  nameWithType: DbExpressionKind.All\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.All\n- uid: System.Data.Common.CommandTrees.DbExpressionKind\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionKind\n  nameWithType: DbExpressionKind\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.And\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: And\n  nameWithType: DbExpressionKind.And\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.And\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Any\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Any\n  nameWithType: DbExpressionKind.Any\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Any\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Case\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Case\n  nameWithType: DbExpressionKind.Case\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Case\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Cast\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Cast\n  nameWithType: DbExpressionKind.Cast\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Cast\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Constant\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Constant\n  nameWithType: DbExpressionKind.Constant\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Constant\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.CrossApply\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: CrossApply\n  nameWithType: DbExpressionKind.CrossApply\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.CrossApply\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: CrossJoin\n  nameWithType: DbExpressionKind.CrossJoin\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Deref\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Deref\n  nameWithType: DbExpressionKind.Deref\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Deref\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Distinct\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Distinct\n  nameWithType: DbExpressionKind.Distinct\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Distinct\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Divide\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Divide\n  nameWithType: DbExpressionKind.Divide\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Divide\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Element\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Element\n  nameWithType: DbExpressionKind.Element\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Element\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.EntityRef\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: EntityRef\n  nameWithType: DbExpressionKind.EntityRef\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.EntityRef\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Equals\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Equals\n  nameWithType: DbExpressionKind.Equals\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Equals\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Except\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Except\n  nameWithType: DbExpressionKind.Except\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Except\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Filter\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Filter\n  nameWithType: DbExpressionKind.Filter\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Filter\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: FullOuterJoin\n  nameWithType: DbExpressionKind.FullOuterJoin\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Function\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Function\n  nameWithType: DbExpressionKind.Function\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Function\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: GreaterThan\n  nameWithType: DbExpressionKind.GreaterThan\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: GreaterThanOrEquals\n  nameWithType: DbExpressionKind.GreaterThanOrEquals\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.GroupBy\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: GroupBy\n  nameWithType: DbExpressionKind.GroupBy\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GroupBy\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: InnerJoin\n  nameWithType: DbExpressionKind.InnerJoin\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Intersect\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Intersect\n  nameWithType: DbExpressionKind.Intersect\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Intersect\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: IsEmpty\n  nameWithType: DbExpressionKind.IsEmpty\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsNull\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: IsNull\n  nameWithType: DbExpressionKind.IsNull\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsNull\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsOf\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: IsOf\n  nameWithType: DbExpressionKind.IsOf\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsOf\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: IsOfOnly\n  nameWithType: DbExpressionKind.IsOfOnly\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Lambda\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Lambda\n  nameWithType: DbExpressionKind.Lambda\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Lambda\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: LeftOuterJoin\n  nameWithType: DbExpressionKind.LeftOuterJoin\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.LessThan\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: LessThan\n  nameWithType: DbExpressionKind.LessThan\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LessThan\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: LessThanOrEquals\n  nameWithType: DbExpressionKind.LessThanOrEquals\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Like\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Like\n  nameWithType: DbExpressionKind.Like\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Like\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Limit\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Limit\n  nameWithType: DbExpressionKind.Limit\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Limit\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Minus\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Minus\n  nameWithType: DbExpressionKind.Minus\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Minus\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Modulo\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Modulo\n  nameWithType: DbExpressionKind.Modulo\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Modulo\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Multiply\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Multiply\n  nameWithType: DbExpressionKind.Multiply\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Multiply\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.NewInstance\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: NewInstance\n  nameWithType: DbExpressionKind.NewInstance\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.NewInstance\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Not\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Not\n  nameWithType: DbExpressionKind.Not\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Not\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.NotEquals\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: NotEquals\n  nameWithType: DbExpressionKind.NotEquals\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.NotEquals\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Null\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: \"Null\"\n  nameWithType: DbExpressionKind.Null\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Null\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.OfType\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: OfType\n  nameWithType: DbExpressionKind.OfType\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OfType\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: OfTypeOnly\n  nameWithType: DbExpressionKind.OfTypeOnly\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Or\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Or\n  nameWithType: DbExpressionKind.Or\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Or\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.OuterApply\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: OuterApply\n  nameWithType: DbExpressionKind.OuterApply\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OuterApply\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: ParameterReference\n  nameWithType: DbExpressionKind.ParameterReference\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Plus\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Plus\n  nameWithType: DbExpressionKind.Plus\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Plus\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Project\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Project\n  nameWithType: DbExpressionKind.Project\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Project\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Property\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Property\n  nameWithType: DbExpressionKind.Property\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Property\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Ref\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Ref\n  nameWithType: DbExpressionKind.Ref\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Ref\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.RefKey\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: RefKey\n  nameWithType: DbExpressionKind.RefKey\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.RefKey\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: RelationshipNavigation\n  nameWithType: DbExpressionKind.RelationshipNavigation\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Scan\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Scan\n  nameWithType: DbExpressionKind.Scan\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Scan\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Skip\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Skip\n  nameWithType: DbExpressionKind.Skip\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Skip\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Sort\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Sort\n  nameWithType: DbExpressionKind.Sort\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Sort\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.Treat\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: Treat\n  nameWithType: DbExpressionKind.Treat\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Treat\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: UnaryMinus\n  nameWithType: DbExpressionKind.UnaryMinus\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.UnionAll\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: UnionAll\n  nameWithType: DbExpressionKind.UnionAll\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.UnionAll\n- uid: System.Data.Common.CommandTrees.DbExpressionKind.VariableReference\n  parent: System.Data.Common.CommandTrees.DbExpressionKind\n  isExternal: false\n  name: VariableReference\n  nameWithType: DbExpressionKind.VariableReference\n  fullName: System.Data.Common.CommandTrees.DbExpressionKind.VariableReference\n"}