{"nodes":[{"pos":[1055,1171],"content":"Writes resources in the system-default format to an output file or an output stream. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes resources in the system-default format to an output file or an output stream. This class cannot be inherited.","pos":[0,116],"nodes":[{"content":"Writes resources in the system-default format to an output file or an output stream.","pos":[0,84]},{"content":"This class cannot be inherited.","pos":[85,116]}]}]},{"pos":[1184,3354],"content":"ResourceWriter provides a default implementation of the <xref:System.Resources.IResourceWriter> interface. It enables you to programmatically create a binary resource (.resources) file.       Resources are specified as name and value pairs using the <xref:System.Resources.ResourceWriter.AddResource%2A> method. Resource names are case-sensitive when used for lookups, but to more easily support authoring tools and help eliminate bugs, ResourceWriter will not allow a .resources file to have names that vary only by case. The ResourceWriter class enables you to create string, object, and binary resources. Binary resources can be written to the resource file as a byte array or a stream.      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.       To create a resources file, create a ResourceWriter with a unique file name, call <xref:System.Resources.ResourceWriter.AddResource%2A> at least once, call <xref:System.Resources.ResourceWriter.Generate%2A> to write the resources file to disk, and then call <xref:System.Resources.ResourceWriter.Close%2A> to close the file. Calling <xref:System.Resources.ResourceWriter.Close%2A> will implicitly call <xref:System.Resources.ResourceWriter.Generate%2A> if you do not explicitly call <xref:System.Resources.ResourceWriter.Generate%2A>.       The resources will not necessarily be written in the same order they were added.       To retrieve resources from a binary .resources file created by the ResourceWriter class, you can use the <xref:System.Resources.ResourceManager> class, which lets you retrieve named resources, or the <xref:System.Resources.ResourceReader> class, which lets you enumerate all the resources in the file.","needQuote":false,"needEscape":true,"nodes":[{"content":"ResourceWriter provides a default implementation of the &lt;xref:System.Resources.IResourceWriter&gt; interface.","pos":[0,106],"source":"ResourceWriter provides a default implementation of the <xref:System.Resources.IResourceWriter> interface."},{"content":"It enables you to programmatically create a binary resource (.resources) file.","pos":[107,185]},{"content":"Resources are specified as name and value pairs using the &lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt; method.","pos":[192,311],"source":"       Resources are specified as name and value pairs using the <xref:System.Resources.ResourceWriter.AddResource%2A> method."},{"content":"Resource names are case-sensitive when used for lookups, but to more easily support authoring tools and help eliminate bugs, ResourceWriter will not allow a .resources file to have names that vary only by case.","pos":[312,522]},{"content":"The ResourceWriter class enables you to create string, object, and binary resources.","pos":[523,607]},{"content":"Binary resources can be written to the resource file as a byte array or a stream.","pos":[608,689]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.","pos":[695,774],"source":"      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[775,869]},{"content":"To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id=\"ph1\">`try`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`catch`</ph> block.","pos":[870,981],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[982,1089],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.","pos":[1090,1223],"source":" For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic."},{"content":"To create a resources file, create a ResourceWriter with a unique file name, call &lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt; at least once, call &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; to write the resources file to disk, and then call &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; to close the file.","pos":[1230,1554],"source":"       To create a resources file, create a ResourceWriter with a unique file name, call <xref:System.Resources.ResourceWriter.AddResource%2A> at least once, call <xref:System.Resources.ResourceWriter.Generate%2A> to write the resources file to disk, and then call <xref:System.Resources.ResourceWriter.Close%2A> to close the file."},{"content":"Calling &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; will implicitly call &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; if you do not explicitly call &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;.","pos":[1555,1764],"source":" Calling <xref:System.Resources.ResourceWriter.Close%2A> will implicitly call <xref:System.Resources.ResourceWriter.Generate%2A> if you do not explicitly call <xref:System.Resources.ResourceWriter.Generate%2A>."},{"content":"The resources will not necessarily be written in the same order they were added.","pos":[1771,1851]},{"content":"To retrieve resources from a binary .resources file created by the ResourceWriter class, you can use the &lt;xref:System.Resources.ResourceManager&gt; class, which lets you retrieve named resources, or the &lt;xref:System.Resources.ResourceReader&gt; class, which lets you enumerate all the resources in the file.","pos":[1858,2159],"source":"       To retrieve resources from a binary .resources file created by the ResourceWriter class, you can use the <xref:System.Resources.ResourceManager> class, which lets you retrieve named resources, or the <xref:System.Resources.ResourceReader> class, which lets you enumerate all the resources in the file."}]},{"pos":[4466,4608],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that writes the resources to the provided stream.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResourceWriter\"></xref> class that writes the resources to the provided stream."},{"pos":[5381,5399],"content":"The output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The output stream.","pos":[0,18]}]},{"pos":[5559,5609],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">stream</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not writable.","needQuote":true,"needEscape":true,"source":"The <code>stream</code> parameter is not writable."},{"pos":[5712,5810],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">stream</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>stream</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6225,6366],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that writes the resources to the specified file.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Resources.ResourceWriter\"></xref> class that writes the resources to the specified file."},{"pos":[7085,7106],"content":"The output file name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The output file name.","pos":[0,21]}]},{"pos":[7274,7374],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>fileName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7834,7921],"content":"Adds a named resource specified as a byte array to the list of resources to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a named resource specified as a byte array to the list of resources to be written.","pos":[0,87]}]},{"pos":[7934,8203],"content":"The resource is not written until <xref:System.Resources.ResourceWriter.Generate%2A> is called.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The resource is not written until <xref:System.Resources.ResourceWriter.Generate%2A> is called.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method.","pos":[0,267],"nodes":[{"content":"The resource is not written until &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; is called.","pos":[0,95],"source":"The resource is not written until <xref:System.Resources.ResourceWriter.Generate%2A> is called."},{"content":"You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt; method.","pos":[102,267],"source":"       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method."}]}]},{"pos":[8787,8812],"content":"The name of the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the resource.","pos":[0,25]}]},{"pos":[8874,8931],"content":"Value of the resource as an 8-bit unsigned integer array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Value of the resource as an 8-bit unsigned integer array.","pos":[0,57]}]},{"pos":[9097,9246],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\"System.Resources.ResourceWriter\"></xref>."},{"pos":[9349,9445],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9556,9664],"content":"This <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.","needQuote":true,"needEscape":true,"source":"This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed and its hash table is unavailable."},{"pos":[10130,10213],"content":"Adds a named resource specified as a stream to the list of resources to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a named resource specified as a stream to the list of resources to be written.","pos":[0,83]}]},{"pos":[10226,10525],"content":"You can specify any stream that supports the <xref:System.IO.Stream.Length%2A?displayProperty=fullName> property for `value`.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can specify any stream that supports the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property for <ph id=\"ph1\">`value`</ph>.","pos":[0,125],"source":"You can specify any stream that supports the <xref:System.IO.Stream.Length%2A?displayProperty=fullName> property for `value`."},{"content":"You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt; method.","pos":[132,297],"source":"       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method."}]},{"pos":[11143,11175],"content":"The name of the resource to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the resource to add.","pos":[0,32]}]},{"pos":[11240,11378],"content":"The value of the resource to add. The resource must support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the resource to add. The resource must support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property.","pos":[0,138],"nodes":[{"content":"The value of the resource to add.","pos":[0,33]},{"content":"The resource must support the <ph id=\"ph1\">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[34,138],"source":" The resource must support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property."}]}]},{"pos":[11545,11824],"content":"<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\"System.Resources.ResourceWriter\"></xref>.       -or-       The stream does not support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,149],"source":"<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\"System.Resources.ResourceWriter\"></xref>."},{"content":"-or-       The stream does not support the <ph id=\"ph1\">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[156,273],"source":"       -or-       The stream does not support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property."}]},{"pos":[11928,12032],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>name</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12143,12217],"content":"This <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has been closed.","needQuote":true,"needEscape":true,"source":"This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed."},{"pos":[12677,12761],"content":"Adds a named resource specified as an object to the list of resources to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a named resource specified as an object to the list of resources to be written.","pos":[0,84]}]},{"pos":[12774,13092],"content":"`value` must be serializable.       The resource is not written until the <xref:System.Resources.ResourceWriter.Generate%2A> method is called.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">`value`</ph> must be serializable.","pos":[0,29],"source":"`value` must be serializable."},{"content":"The resource is not written until the &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; method is called.","pos":[36,142],"source":"       The resource is not written until the <xref:System.Resources.ResourceWriter.Generate%2A> method is called."},{"content":"You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName&gt; method.","pos":[149,314],"source":"       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName> method."}]},{"pos":[13829,13854],"content":"The name of the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the resource.","pos":[0,25]}]},{"pos":[13916,13942],"content":"The value of the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the resource.","pos":[0,26]}]},{"pos":[14108,14257],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\"System.Resources.ResourceWriter\"></xref>."},{"pos":[14360,14456],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14567,14675],"content":"This <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.","needQuote":true,"needEscape":true,"source":"This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed and its hash table is unavailable."},{"pos":[15135,15197],"content":"Adds a string resource to the list of resources to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a string resource to the list of resources to be written.","pos":[0,62]}]},{"pos":[15210,15479],"content":"The resource is not written until <xref:System.Resources.ResourceWriter.Generate%2A> is called.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The resource is not written until <xref:System.Resources.ResourceWriter.Generate%2A> is called.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> method.","pos":[0,267],"nodes":[{"content":"The resource is not written until &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; is called.","pos":[0,95],"source":"The resource is not written until <xref:System.Resources.ResourceWriter.Generate%2A> is called."},{"content":"You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName&gt; method.","pos":[102,267],"source":"       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> method."}]}]},{"pos":[16146,16171],"content":"The name of the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the resource.","pos":[0,25]}]},{"pos":[16233,16259],"content":"The value of the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the resource.","pos":[0,26]}]},{"pos":[16425,16536],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this ResourceWriter.","needQuote":true,"needEscape":true,"source":"<code>name</code> (or a name that varies only by capitalization) has already been added to this ResourceWriter."},{"pos":[16639,16735],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16846,16954],"content":"This <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.","needQuote":true,"needEscape":true,"source":"This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed and its hash table is unavailable."},{"pos":[17474,17684],"content":"Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the <xref:System.Resources.ResourceWriter.Generate*> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the &lt;xref:System.Resources.ResourceWriter.Generate*&gt; method is called.","pos":[0,210],"source":"Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the <xref:System.Resources.ResourceWriter.Generate*> method is called."}]},{"pos":[17697,17996],"content":"You can specify any stream that supports the <xref:System.IO.Stream.Length%2A?displayProperty=fullName> property for `value`.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can specify any stream that supports the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property for <ph id=\"ph1\">`value`</ph>.","pos":[0,125],"source":"You can specify any stream that supports the <xref:System.IO.Stream.Length%2A?displayProperty=fullName> property for `value`."},{"content":"You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt; method.","pos":[132,297],"source":"       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method."}]},{"pos":[18630,18662],"content":"The name of the resource to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the resource to add.","pos":[0,32]}]},{"pos":[18727,18865],"content":"The value of the resource to add. The resource must support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the resource to add. The resource must support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property.","pos":[0,138],"nodes":[{"content":"The value of the resource to add.","pos":[0,33]},{"content":"The resource must support the <ph id=\"ph1\">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[34,138],"source":" The resource must support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property."}]}]},{"pos":[18938,19170],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to close the stream after the &lt;xref:System.Resources.ResourceWriter.Generate*&gt; method is called; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to close the stream after the <xref:System.Resources.ResourceWriter.Generate*> method is called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19337,19616],"content":"<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\"System.Resources.ResourceWriter\"></xref>.       -or-       The stream does not support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,149],"source":"<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\"System.Resources.ResourceWriter\"></xref>."},{"content":"-or-       The stream does not support the <ph id=\"ph1\">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[156,273],"source":"       -or-       The stream does not support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property."}]},{"pos":[19720,19824],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>name</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19935,20009],"content":"This <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has been closed.","needQuote":true,"needEscape":true,"source":"This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed."},{"pos":[20538,20611],"content":"Adds a unit of data as a resource to the list of resources to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a unit of data as a resource to the list of resources to be written.","pos":[0,73]}]},{"pos":[20624,23258],"content":"Use the AddResourceData method to add a resource in binary form (that is, as an array of bytes) to the list of resources to be written. You must specify the name of the resource, the type name of the data contained in the resource, and the binary representation of the data itself. After you have added each resource you require, use the <xref:System.Resources.ResourceWriter.Generate%2A> method to write the list of resources to the resources file or stream that was specified in the <xref:System.Resources.ResourceWriter.%23ctor%2A> constructor.       `typeName` is a string that represents the data type of the resource. It can be any of the following values:      -   The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource. `ResourceTypeCode` is a private enumeration that is used by  to indicate that a special binary format is used to store one of 19 common data types. These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>. In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.          |`ResourceTypeCode` value|Description|       |------------------------------|-----------------|       |`ResourceTypeCode.ByteArray`|The data is a byte array.|       |`ResourceTypeCode.Null`|The data is a null reference.|       |`ResourceTypeCode.Stream`|The data is stored in a stream.|      -   A string that contains the fully qualified name of the type whose binary data is assigned to the `serializedData` argument (for example, `System.String`). In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type. For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.           `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`       A parallel method for reading resource data written with the AddResourceData method is <xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the AddResourceData method to add a resource in binary form (that is, as an array of bytes) to the list of resources to be written.","pos":[0,135]},{"content":"You must specify the name of the resource, the type name of the data contained in the resource, and the binary representation of the data itself.","pos":[136,281]},{"content":"After you have added each resource you require, use the &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; method to write the list of resources to the resources file or stream that was specified in the &lt;xref:System.Resources.ResourceWriter.%23ctor%2A&gt; constructor.","pos":[282,547],"source":" After you have added each resource you require, use the <xref:System.Resources.ResourceWriter.Generate%2A> method to write the list of resources to the resources file or stream that was specified in the <xref:System.Resources.ResourceWriter.%23ctor%2A> constructor."},{"content":"<ph id=\"ph1\">`typeName`</ph> is a string that represents the data type of the resource.","pos":[554,623],"source":"`typeName` is a string that represents the data type of the resource."},{"content":"It can be any of the following values:      -   The string representation of a <ph id=\"ph1\">`ResourceTypeCode`</ph> enumeration member that indicates the data type of the resource.","pos":[624,786],"source":" It can be any of the following values:      -   The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource."},{"content":"<ph id=\"ph1\">`ResourceTypeCode`</ph> is a private enumeration that is used by  to indicate that a special binary format is used to store one of 19 common data types.","pos":[787,934],"source":"`ResourceTypeCode` is a private enumeration that is used by  to indicate that a special binary format is used to store one of 19 common data types."},{"content":"These include the .NET Framework primitive data types (&lt;xref:System.Boolean&gt;, &lt;xref:System.Byte&gt;, &lt;xref:System.Char&gt;, &lt;xref:System.Decimal&gt;, &lt;xref:System.Double&gt;, &lt;xref:System.Int16&gt;, &lt;xref:System.Int32&gt;, &lt;xref:System.Int64&gt;, &lt;xref:System.Single&gt;, &lt;xref:System.SByte&gt;, &lt;xref:System.UInt16&gt;, &lt;xref:System.UInt32&gt;, &lt;xref:System.UInt64&gt;), as well as &lt;xref:System.String&gt;, &lt;xref:System.DateTime&gt;, and &lt;xref:System.TimeSpan&gt;.","pos":[935,1355],"source":" These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>."},{"content":"In addition, the <ph id=\"ph1\">`ResourceTypeCode`</ph> enumeration includes the values shown in the following table.","pos":[1356,1453],"source":" In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table."},{"content":"|<ph id=\"ph1\">`ResourceTypeCode`</ph> value|Description|       |------------------------------|-----------------|       |<ph id=\"ph2\">`ResourceTypeCode.ByteArray`</ph>|The data is a byte array.|       |<ph id=\"ph3\">`ResourceTypeCode.Null`</ph>|The data is a null reference.|       |<ph id=\"ph4\">`ResourceTypeCode.Stream`</ph>|The data is stored in a stream.|      -   A string that contains the fully qualified name of the type whose binary data is assigned to the <ph id=\"ph5\">`serializedData`</ph> argument (for example, <ph id=\"ph6\">`System.String`</ph>).","pos":[1463,1913],"source":"          |`ResourceTypeCode` value|Description|       |------------------------------|-----------------|       |`ResourceTypeCode.ByteArray`|The data is a byte array.|       |`ResourceTypeCode.Null`|The data is a null reference.|       |`ResourceTypeCode.Stream`|The data is stored in a stream.|      -   A string that contains the fully qualified name of the type whose binary data is assigned to the `serializedData` argument (for example, `System.String`)."},{"content":"In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.","pos":[1914,2094]},{"content":"For example, the following string indicates that the serialized data represents an instance of the <ph id=\"ph1\">`Person`</ph> type in the <ph id=\"ph2\">`Extensions`</ph> namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.","pos":[2095,2347],"source":" For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture."},{"content":"<ph id=\"ph1\">`Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`</ph>       A parallel method for reading resource data written with the AddResourceData method is &lt;xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName&gt;.","pos":[2358,2618],"source":"`Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`       A parallel method for reading resource data written with the AddResourceData method is <xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName>."}]},{"pos":[23894,23959],"content":"A name that identifies the resource that contains the added data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name that identifies the resource that contains the added data.","pos":[0,65]}]},{"pos":[24024,24103],"content":"The type name of the added data. For more information, see the Remarks section.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type name of the added data. For more information, see the Remarks section.","pos":[0,79],"nodes":[{"content":"The type name of the added data.","pos":[0,32]},{"content":"For more information, see the Remarks section.","pos":[33,79]}]}]},{"pos":[24174,24245],"content":"A byte array that contains the binary representation of the added data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains the binary representation of the added data.","pos":[0,71]}]},{"pos":[24423,24560],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;typeName&lt;/code&gt;</ph>, or <ph id=\"ph3\">&lt;code&gt;serializedData&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>name</code>, <code>typeName</code>, or <code>serializedData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[24655,24811],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\"System.Resources.ResourceWriter\"></xref> object."},{"pos":[24922,25115],"content":"The current <xref href=\"System.Resources.ResourceWriter\"></xref> object is not initialized. The probable cause is that the <xref href=\"System.Resources.ResourceWriter\"></xref> object is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is not initialized.","pos":[0,91],"source":"The current <xref href=\"System.Resources.ResourceWriter\"></xref> object is not initialized."},{"content":"The probable cause is that the <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is closed.","pos":[92,193],"source":" The probable cause is that the <xref href=\"System.Resources.ResourceWriter\"></xref> object is closed."}]},{"pos":[25448,25508],"content":"Saves the resources to the output stream and then closes it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the resources to the output stream and then closes it.","pos":[0,60]}]},{"pos":[25520,25614],"content":"<xref:System.Resources.ResourceWriter.Generate%2A> is called implicitly by Close, if required.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; is called implicitly by Close, if required.","pos":[0,94],"source":"<xref:System.Resources.ResourceWriter.Generate%2A> is called implicitly by Close, if required."}]},{"pos":[26402,26428],"content":"An I/O error has occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error has occurred.","pos":[0,26]}]},{"pos":[26577,26634],"content":"An error has occurred during serialization of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error has occurred during serialization of the object.","pos":[0,57]}]},{"pos":[26977,27059],"content":"Allows users to close the resource file or stream, explicitly releasing resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows users to close the resource file or stream, explicitly releasing resources.","pos":[0,82]}]},{"pos":[27071,27168],"content":"The implementation of this method is the same as <xref:System.Resources.ResourceWriter.Close%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The implementation of this method is the same as &lt;xref:System.Resources.ResourceWriter.Close%2A&gt;.","pos":[0,97],"source":"The implementation of this method is the same as <xref:System.Resources.ResourceWriter.Close%2A>."}]},{"pos":[28035,28061],"content":"An I/O error has occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error has occurred.","pos":[0,26]}]},{"pos":[28210,28267],"content":"An error has occurred during serialization of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error has occurred during serialization of the object.","pos":[0,57]}]},{"pos":[28615,28685],"content":"Saves all resources to the output stream in the system default format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves all resources to the output stream in the system default format.","pos":[0,70]}]},{"pos":[28698,29486],"content":"The Generate method is called implicitly by the <xref:System.Resources.ResourceWriter.Close%2A> method if it is not called by your application code.       Generate can only be called once, after all calls to <xref:System.Resources.ResourceWriter.AddResource%2A> and <xref:System.Resources.ResourceWriter.AddResourceData%2A> have been made. If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.       Generate does not close the output stream in normal cases. Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call <xref:System.Resources.ResourceWriter.Close%2A> after calling Generate, or simply call <xref:System.Resources.ResourceWriter.Close%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Generate method is called implicitly by the <xref:System.Resources.ResourceWriter.Close%2A> method if it is not called by your application code.       Generate can only be called once, after all calls to <xref:System.Resources.ResourceWriter.AddResource%2A> and <xref:System.Resources.ResourceWriter.AddResourceData%2A> have been made. If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.       Generate does not close the output stream in normal cases. Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call <xref:System.Resources.ResourceWriter.Close%2A> after calling Generate, or simply call <xref:System.Resources.ResourceWriter.Close%2A>.","pos":[0,784],"nodes":[{"content":"The Generate method is called implicitly by the &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; method if it is not called by your application code.","pos":[0,148],"source":"The Generate method is called implicitly by the <xref:System.Resources.ResourceWriter.Close%2A> method if it is not called by your application code."},{"content":"Generate can only be called once, after all calls to &lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt; and &lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt; have been made.","pos":[155,339],"source":"       Generate can only be called once, after all calls to <xref:System.Resources.ResourceWriter.AddResource%2A> and <xref:System.Resources.ResourceWriter.AddResourceData%2A> have been made."},{"content":"If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.","pos":[340,464]},{"content":"Generate does not close the output stream in normal cases.","pos":[471,529]},{"content":"Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; after calling Generate, or simply call &lt;xref:System.Resources.ResourceWriter.Close%2A&gt;.","pos":[530,784],"source":" Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call <xref:System.Resources.ResourceWriter.Close%2A> after calling Generate, or simply call <xref:System.Resources.ResourceWriter.Close%2A>."}]}]},{"pos":[30263,30285],"content":"An I/O error occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred.","pos":[0,22]}]},{"pos":[30434,30487],"content":"An error occurred during serialization of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred during serialization of the object.","pos":[0,53]}]},{"pos":[30598,30706],"content":"This <bpt id=\"p1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.","needQuote":true,"needEscape":true,"source":"This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed and its hash table is unavailable."},{"pos":[31095,31316],"content":"Gets or sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework prior to the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.","needQuote":true,"needEscape":true,"source":"Gets or sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework prior to the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] by using qualified assembly names."},{"pos":[31329,31476],"content":"<ph id=\"ph1\">[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]</ph> and MSBuild set this property if you target an earlier version of the .NET Framework.","needQuote":false,"needEscape":true,"source":"[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] and MSBuild set this property if you target an earlier version of the .NET Framework."},{"pos":[31640,31686],"content":"The type that is encapsulated by the delegate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type that is encapsulated by the delegate.","pos":[0,46]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Resources.ResourceWriter\n  id: ResourceWriter\n  children:\n  - System.Resources.ResourceWriter.#ctor(System.IO.Stream)\n  - System.Resources.ResourceWriter.#ctor(System.String)\n  - System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])\n  - System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)\n  - System.Resources.ResourceWriter.AddResource(System.String,System.Object)\n  - System.Resources.ResourceWriter.AddResource(System.String,System.String)\n  - System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)\n  - System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])\n  - System.Resources.ResourceWriter.Close\n  - System.Resources.ResourceWriter.Dispose\n  - System.Resources.ResourceWriter.Generate\n  - System.Resources.ResourceWriter.TypeNameConverter\n  langs:\n  - csharp\n  name: ResourceWriter\n  nameWithType: ResourceWriter\n  fullName: System.Resources.ResourceWriter\n  type: Class\n  summary: Writes resources in the system-default format to an output file or an output stream. This class cannot be inherited.\n  remarks: \"ResourceWriter provides a default implementation of the <xref:System.Resources.IResourceWriter> interface. It enables you to programmatically create a binary resource (.resources) file.  \\n  \\n Resources are specified as name and value pairs using the <xref:System.Resources.ResourceWriter.AddResource%2A> method. Resource names are case-sensitive when used for lookups, but to more easily support authoring tools and help eliminate bugs, ResourceWriter will not allow a .resources file to have names that vary only by case. The ResourceWriter class enables you to create string, object, and binary resources. Binary resources can be written to the resource file as a byte array or a stream.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \\n  \\n To create a resources file, create a ResourceWriter with a unique file name, call <xref:System.Resources.ResourceWriter.AddResource%2A> at least once, call <xref:System.Resources.ResourceWriter.Generate%2A> to write the resources file to disk, and then call <xref:System.Resources.ResourceWriter.Close%2A> to close the file. Calling <xref:System.Resources.ResourceWriter.Close%2A> will implicitly call <xref:System.Resources.ResourceWriter.Generate%2A> if you do not explicitly call <xref:System.Resources.ResourceWriter.Generate%2A>.  \\n  \\n The resources will not necessarily be written in the same order they were added.  \\n  \\n To retrieve resources from a binary .resources file created by the ResourceWriter class, you can use the <xref:System.Resources.ResourceManager> class, which lets you retrieve named resources, or the <xref:System.Resources.ResourceReader> class, which lets you enumerate all the resources in the file.\"\n  example:\n  - \"The following example writes several strings into the myResources.resources file.  \\n  \\n [!code-cpp[Classic ResourceWriter Example#1](~/add/codesnippet/cpp/t-system.resources.resou_1_1.cpp)]\\n [!code-vb[Classic ResourceWriter Example#1](~/add/codesnippet/visualbasic/t-system.resources.resou_1_1.vb)]\\n [!code-cs[Classic ResourceWriter Example#1](~/add/codesnippet/csharp/t-system.resources.resou_1_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ResourceWriter : System.Resources.IResourceWriter\n  inheritance:\n  - System.Object\n  implements:\n  - System.Resources.IResourceWriter\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: ResourceWriter(Stream)\n  nameWithType: ResourceWriter.ResourceWriter(Stream)\n  fullName: System.Resources.ResourceWriter.ResourceWriter(Stream)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResourceWriter\"></xref> class that writes the resources to the provided stream.\n  remarks: ''\n  example:\n  - \"The following code example defines a new instance of the <xref:System.Resources.ResourceWriter> class that writes to a specified stream. The code adds resources to the writer and writes the resources to the stream.  \\n  \\n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_11_1.cs)]\\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_11_1.cpp)]\\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_11_1.vb)]\"\n  syntax:\n    content: public ResourceWriter (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The output stream.\n  overload: System.Resources.ResourceWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>stream</code> parameter is not writable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>stream</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: ResourceWriter(String)\n  nameWithType: ResourceWriter.ResourceWriter(String)\n  fullName: System.Resources.ResourceWriter.ResourceWriter(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.ResourceWriter\"></xref> class that writes the resources to the specified file.\n  remarks: ''\n  example:\n  - \"The following code example defines a new instance of the <xref:System.Resources.ResourceWriter> class that will write to a specified file. The code adds resources to the writer and writes the resources to the file.  \\n  \\n [!code-cpp[Classic ResourceWriter Example#1](~/add/codesnippet/cpp/m-system.resources.resou_14_1.cpp)]\\n [!code-vb[Classic ResourceWriter Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_14_1.vb)]\\n [!code-cs[Classic ResourceWriter Example#1](~/add/codesnippet/csharp/m-system.resources.resou_14_1.cs)]\"\n  syntax:\n    content: public ResourceWriter (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The output file name.\n  overload: System.Resources.ResourceWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>fileName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])\n  id: AddResource(System.String,System.Byte[])\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: AddResource(String,Byte[])\n  nameWithType: ResourceWriter.AddResource(String,Byte[])\n  fullName: System.Resources.ResourceWriter.AddResource(String,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Adds a named resource specified as a byte array to the list of resources to be written.\n  remarks: \"The resource is not written until <xref:System.Resources.ResourceWriter.Generate%2A> is called.  \\n  \\n You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example uses the AddResource method to add a graphics image that has been read as an array of bytes to a <xref:System.Resources.ResourceWriter> object.  \\n  \\n [!code-cs[System.Resources.ResourceWriter.AddResource#4](~/add/codesnippet/csharp/m-system.resources.resou_9_1.cs)]\\n [!code-vb[System.Resources.ResourceWriter.AddResource#4](~/add/codesnippet/visualbasic/m-system.resources.resou_9_1.vb)]\"\n  syntax:\n    content: public void AddResource (string name, byte[] value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the resource.\n    - id: value\n      type: System.Byte[]\n      description: Value of the resource as an 8-bit unsigned integer array.\n  overload: System.Resources.ResourceWriter.AddResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\"System.Resources.ResourceWriter\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed and its hash table is unavailable.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)\n  id: AddResource(System.String,System.IO.Stream)\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: AddResource(String,Stream)\n  nameWithType: ResourceWriter.AddResource(String,Stream)\n  fullName: System.Resources.ResourceWriter.AddResource(String,Stream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Adds a named resource specified as a stream to the list of resources to be written.\n  remarks: \"You can specify any stream that supports the <xref:System.IO.Stream.Length%2A?displayProperty=fullName> property for `value`.  \\n  \\n You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example uses the AddResource method to add a graphics image that has been saved to a <xref:System.IO.MemoryStream> object to a <xref:System.Resources.ResourceWriter> object.  \\n  \\n [!code-vb[System.Resources.ResourceWriter.AddResource#2](~/add/codesnippet/visualbasic/m-system.resources.resou_10_1.vb)]\\n [!code-cs[System.Resources.ResourceWriter.AddResource#2](~/add/codesnippet/csharp/m-system.resources.resou_10_1.cs)]\"\n  syntax:\n    content: public void AddResource (string name, System.IO.Stream value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the resource to add.\n    - id: value\n      type: System.IO.Stream\n      description: The value of the resource to add. The resource must support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property.\n  overload: System.Resources.ResourceWriter.AddResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\\\"System.Resources.ResourceWriter\\\"></xref>.  \\n  \\n -or-  \\n  \\n The stream does not support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Object)\n  id: AddResource(System.String,System.Object)\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: AddResource(String,Object)\n  nameWithType: ResourceWriter.AddResource(String,Object)\n  fullName: System.Resources.ResourceWriter.AddResource(String,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Adds a named resource specified as an object to the list of resources to be written.\n  remarks: \"`value` must be serializable.  \\n  \\n The resource is not written until the <xref:System.Resources.ResourceWriter.Generate%2A> method is called.  \\n  \\n You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example uses the AddResource method to add object data to a binary resources file.  \\n  \\n [!code-cs[System.Resources.ResourceWriter.AddResource#1](~/add/codesnippet/csharp/m-system.resources.resou_13_1.cs)]  \\n  \\n `DonorColumns` is a custom class whose fields contain the names of columns to be displayed in the user interface. Note that the class is marked with the <xref:System.SerializableAttribute> attribute. Ordinarily, the class would be defined in a separate assembly, and a reference to it would be provided to the compiler at compile time.\"\n  syntax:\n    content: public void AddResource (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the resource.\n    - id: value\n      type: System.Object\n      description: The value of the resource.\n  overload: System.Resources.ResourceWriter.AddResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\"System.Resources.ResourceWriter\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed and its hash table is unavailable.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.AddResource(System.String,System.String)\n  id: AddResource(System.String,System.String)\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: AddResource(String,String)\n  nameWithType: ResourceWriter.AddResource(String,String)\n  fullName: System.Resources.ResourceWriter.AddResource(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Adds a string resource to the list of resources to be written.\n  remarks: \"The resource is not written until <xref:System.Resources.ResourceWriter.Generate%2A> is called.  \\n  \\n You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example uses the AddResource method to add string resources to a <xref:System.Resources.ResourceWriter> object.  \\n  \\n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_4_1.cs)]\\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_4_1.cpp)]\\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_4_1.vb)]\"\n  syntax:\n    content: public void AddResource (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the resource.\n    - id: value\n      type: System.String\n      description: The value of the resource.\n  overload: System.Resources.ResourceWriter.AddResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> (or a name that varies only by capitalization) has already been added to this ResourceWriter.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed and its hash table is unavailable.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)\n  id: AddResource(System.String,System.IO.Stream,System.Boolean)\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: AddResource(String,Stream,Boolean)\n  nameWithType: ResourceWriter.AddResource(String,Stream,Boolean)\n  fullName: System.Resources.ResourceWriter.AddResource(String,Stream,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the <xref:System.Resources.ResourceWriter.Generate*> method is called.\n  remarks: \"You can specify any stream that supports the <xref:System.IO.Stream.Length%2A?displayProperty=fullName> property for `value`.  \\n  \\n You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example uses the AddResource method to add a graphics image that has been saved to a <xref:System.IO.MemoryStream> object to a <xref:System.Resources.ResourceWriter> object.  \\n  \\n [!code-cs[System.Resources.ResourceWriter.AddResource#3](~/add/codesnippet/csharp/7232e6d2-2ac8-47d7-a388-_1.cs)]\\n [!code-vb[System.Resources.ResourceWriter.AddResource#3](~/add/codesnippet/visualbasic/7232e6d2-2ac8-47d7-a388-_1.vb)]\"\n  syntax:\n    content: public void AddResource (string name, System.IO.Stream value, bool closeAfterWrite);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the resource to add.\n    - id: value\n      type: System.IO.Stream\n      description: The value of the resource to add. The resource must support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property.\n    - id: closeAfterWrite\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to close the stream after the <xref:System.Resources.ResourceWriter.Generate*> method is called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Resources.ResourceWriter.AddResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\\\"System.Resources.ResourceWriter\\\"></xref>.  \\n  \\n -or-  \\n  \\n The stream does not support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])\n  id: AddResourceData(System.String,System.String,System.Byte[])\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: AddResourceData(String,String,Byte[])\n  nameWithType: ResourceWriter.AddResourceData(String,String,Byte[])\n  fullName: System.Resources.ResourceWriter.AddResourceData(String,String,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Adds a unit of data as a resource to the list of resources to be written.\n  remarks: \"Use the AddResourceData method to add a resource in binary form (that is, as an array of bytes) to the list of resources to be written. You must specify the name of the resource, the type name of the data contained in the resource, and the binary representation of the data itself. After you have added each resource you require, use the <xref:System.Resources.ResourceWriter.Generate%2A> method to write the list of resources to the resources file or stream that was specified in the <xref:System.Resources.ResourceWriter.%23ctor%2A> constructor.  \\n  \\n `typeName` is a string that represents the data type of the resource. It can be any of the following values:  \\n  \\n-   The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource. `ResourceTypeCode` is a private enumeration that is used by  to indicate that a special binary format is used to store one of 19 common data types. These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>. In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.  \\n  \\n    |`ResourceTypeCode` value|Description|  \\n    |------------------------------|-----------------|  \\n    |`ResourceTypeCode.ByteArray`|The data is a byte array.|  \\n    |`ResourceTypeCode.Null`|The data is a null reference.|  \\n    |`ResourceTypeCode.Stream`|The data is stored in a stream.|  \\n  \\n-   A string that contains the fully qualified name of the type whose binary data is assigned to the `serializedData` argument (for example, `System.String`). In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type. For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.  \\n  \\n     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  \\n  \\n A parallel method for reading resource data written with the AddResourceData method is <xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following example uses the AddResourceData method to write two integer values to a .resources file, and then uses a <xref:System.Resources.ResourceReader> object to retrieve them.  \\n  \\n [!code-cs[System.Resources.ResourceWriter.AddResourceData#1](~/add/codesnippet/csharp/4bc2b306-6493-47e4-9e15-_1.cs)]\\n [!code-vb[System.Resources.ResourceWriter.AddResourceData#1](~/add/codesnippet/visualbasic/4bc2b306-6493-47e4-9e15-_1.vb)]\"\n  syntax:\n    content: public void AddResourceData (string name, string typeName, byte[] serializedData);\n    parameters:\n    - id: name\n      type: System.String\n      description: A name that identifies the resource that contains the added data.\n    - id: typeName\n      type: System.String\n      description: The type name of the added data. For more information, see the Remarks section.\n    - id: serializedData\n      type: System.Byte[]\n      description: A byte array that contains the binary representation of the added data.\n  overload: System.Resources.ResourceWriter.AddResourceData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code>, <code>typeName</code>, or <code>serializedData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=\"System.Resources.ResourceWriter\"></xref> object.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The current <xref href=\"System.Resources.ResourceWriter\"></xref> object is not initialized. The probable cause is that the <xref href=\"System.Resources.ResourceWriter\"></xref> object is closed.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.Close\n  id: Close\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: ResourceWriter.Close()\n  fullName: System.Resources.ResourceWriter.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Saves the resources to the output stream and then closes it.\n  remarks: <xref:System.Resources.ResourceWriter.Generate%2A> is called implicitly by Close, if required.\n  example:\n  - \"The following example uses the Close method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream. The code then shuts down the writer.  \\n  \\n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_6_1.cs)]\\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_6_1.cpp)]\\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_6_1.vb)]\"\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Resources.ResourceWriter.Close*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error has occurred.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: An error has occurred during serialization of the object.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.Dispose\n  id: Dispose\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ResourceWriter.Dispose()\n  fullName: System.Resources.ResourceWriter.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Allows users to close the resource file or stream, explicitly releasing resources.\n  remarks: The implementation of this method is the same as <xref:System.Resources.ResourceWriter.Close%2A>.\n  example:\n  - \"The following code example uses the Dispose method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream. The code then shuts down the writer and make the writer's resources available for other processes.  \\n  \\n [!code-cs[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/csharp/m-system.resources.resou_0_1.cs)]\\n [!code-cpp[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/cpp/m-system.resources.resou_0_1.cpp)]\\n [!code-vb[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_0_1.vb)]\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Resources.ResourceWriter.Dispose*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error has occurred.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: An error has occurred during serialization of the object.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.Generate\n  id: Generate\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: Generate()\n  nameWithType: ResourceWriter.Generate()\n  fullName: System.Resources.ResourceWriter.Generate()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Saves all resources to the output stream in the system default format.\n  remarks: \"The Generate method is called implicitly by the <xref:System.Resources.ResourceWriter.Close%2A> method if it is not called by your application code.  \\n  \\n Generate can only be called once, after all calls to <xref:System.Resources.ResourceWriter.AddResource%2A> and <xref:System.Resources.ResourceWriter.AddResourceData%2A> have been made. If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.  \\n  \\n Generate does not close the output stream in normal cases. Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call <xref:System.Resources.ResourceWriter.Close%2A> after calling Generate, or simply call <xref:System.Resources.ResourceWriter.Close%2A>.\"\n  example:\n  - \"The following code example uses the Generate method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream  \\n  \\n [!code-vb[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_12_1.vb)]\\n [!code-cs[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/csharp/m-system.resources.resou_12_1.cs)]\\n [!code-cpp[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/cpp/m-system.resources.resou_12_1.cpp)]\"\n  syntax:\n    content: public void Generate ();\n    parameters: []\n  overload: System.Resources.ResourceWriter.Generate*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: An error occurred during serialization of the object.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This <xref href=\"System.Resources.ResourceWriter\"></xref> has been closed and its hash table is unavailable.\n  platform:\n  - net462\n- uid: System.Resources.ResourceWriter.TypeNameConverter\n  id: TypeNameConverter\n  parent: System.Resources.ResourceWriter\n  langs:\n  - csharp\n  name: TypeNameConverter\n  nameWithType: ResourceWriter.TypeNameConverter\n  fullName: System.Resources.ResourceWriter.TypeNameConverter\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Gets or sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework prior to the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] by using qualified assembly names.\n  remarks: '[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] and MSBuild set this property if you target an earlier version of the .NET Framework.'\n  syntax:\n    content: public Func<Type,string> TypeNameConverter { get; set; }\n    return:\n      type: System.Func{System.Type,System.String}\n      description: The type that is encapsulated by the delegate.\n  overload: System.Resources.ResourceWriter.TypeNameConverter*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IO.IOException\n  isExternal: true\n  name: System.IO.IOException\n- uid: System.Runtime.Serialization.SerializationException\n  isExternal: true\n  name: System.Runtime.Serialization.SerializationException\n- uid: System.Resources.ResourceWriter.#ctor(System.IO.Stream)\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: ResourceWriter(Stream)\n  nameWithType: ResourceWriter.ResourceWriter(Stream)\n  fullName: System.Resources.ResourceWriter.ResourceWriter(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Resources.ResourceWriter.#ctor(System.String)\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: ResourceWriter(String)\n  nameWithType: ResourceWriter.ResourceWriter(String)\n  fullName: System.Resources.ResourceWriter.ResourceWriter(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: AddResource(String,Byte[])\n  nameWithType: ResourceWriter.AddResource(String,Byte[])\n  fullName: System.Resources.ResourceWriter.AddResource(String,Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: AddResource(String,Stream)\n  nameWithType: ResourceWriter.AddResource(String,Stream)\n  fullName: System.Resources.ResourceWriter.AddResource(String,Stream)\n- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Object)\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: AddResource(String,Object)\n  nameWithType: ResourceWriter.AddResource(String,Object)\n  fullName: System.Resources.ResourceWriter.AddResource(String,Object)\n- uid: System.Resources.ResourceWriter.AddResource(System.String,System.String)\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: AddResource(String,String)\n  nameWithType: ResourceWriter.AddResource(String,String)\n  fullName: System.Resources.ResourceWriter.AddResource(String,String)\n- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: AddResource(String,Stream,Boolean)\n  nameWithType: ResourceWriter.AddResource(String,Stream,Boolean)\n  fullName: System.Resources.ResourceWriter.AddResource(String,Stream,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: AddResourceData(String,String,Byte[])\n  nameWithType: ResourceWriter.AddResourceData(String,String,Byte[])\n  fullName: System.Resources.ResourceWriter.AddResourceData(String,String,Byte[])\n- uid: System.Resources.ResourceWriter.Close\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: Close()\n  nameWithType: ResourceWriter.Close()\n  fullName: System.Resources.ResourceWriter.Close()\n- uid: System.Resources.ResourceWriter.Dispose\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: Dispose()\n  nameWithType: ResourceWriter.Dispose()\n  fullName: System.Resources.ResourceWriter.Dispose()\n- uid: System.Resources.ResourceWriter.Generate\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: Generate()\n  nameWithType: ResourceWriter.Generate()\n  fullName: System.Resources.ResourceWriter.Generate()\n- uid: System.Resources.ResourceWriter.TypeNameConverter\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: TypeNameConverter\n  nameWithType: ResourceWriter.TypeNameConverter\n  fullName: System.Resources.ResourceWriter.TypeNameConverter\n- uid: System.Func{System.Type,System.String}\n  parent: System\n  isExternal: true\n  name: Func<Type,String>\n  nameWithType: Func<Type,String>\n  fullName: System.Func<System.Type,System.String>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Type,System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Resources.ResourceWriter.#ctor*\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: ResourceWriter\n  nameWithType: ResourceWriter.ResourceWriter\n- uid: System.Resources.ResourceWriter.AddResource*\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: AddResource\n  nameWithType: ResourceWriter.AddResource\n- uid: System.Resources.ResourceWriter.AddResourceData*\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: AddResourceData\n  nameWithType: ResourceWriter.AddResourceData\n- uid: System.Resources.ResourceWriter.Close*\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: Close\n  nameWithType: ResourceWriter.Close\n- uid: System.Resources.ResourceWriter.Dispose*\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: Dispose\n  nameWithType: ResourceWriter.Dispose\n- uid: System.Resources.ResourceWriter.Generate*\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: Generate\n  nameWithType: ResourceWriter.Generate\n- uid: System.Resources.ResourceWriter.TypeNameConverter*\n  parent: System.Resources.ResourceWriter\n  isExternal: false\n  name: TypeNameConverter\n  nameWithType: ResourceWriter.TypeNameConverter\n"}