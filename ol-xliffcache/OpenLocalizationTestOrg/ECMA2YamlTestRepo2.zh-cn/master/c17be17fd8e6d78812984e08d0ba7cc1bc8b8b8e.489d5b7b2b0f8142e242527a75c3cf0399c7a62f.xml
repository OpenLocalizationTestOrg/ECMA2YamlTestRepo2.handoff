{"nodes":[{"pos":[3150,3246],"content":"Represents a variable-length stream of binary data to be stored in or retrieved from a database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a variable-length stream of binary data to be stored in or retrieved from a database.","pos":[0,96]}]},{"pos":[4010,4216],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure, setting the &lt;xref:System.Data.SqlTypes.SqlBinary.Value*&gt; property to the contents of the supplied byte array.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure, setting the <xref:System.Data.SqlTypes.SqlBinary.Value*> property to the contents of the supplied byte array."},{"pos":[4350,4391],"content":"The byte array to be stored or retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte array to be stored or retrieved.","pos":[0,41]}]},{"pos":[4963,5127],"content":"Concatenates two specified <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values to create a new <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Concatenates two specified <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> values to create a new <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[5140,5234],"content":"<ph id=\"ph1\">`x`</ph> will appear first in the resulting &lt;xref:System.Data.SqlTypes.SqlBinary&gt;, followed by <ph id=\"ph2\">`y`</ph>.","needQuote":false,"needEscape":true,"source":"`x` will appear first in the resulting <xref:System.Data.SqlTypes.SqlBinary>, followed by `y`."},{"pos":[5468,5522],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>."},{"pos":[5597,5651],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>."},{"pos":[5726,5822],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the concatenated value of x and y.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> that is the concatenated value of x and y."},{"pos":[6330,6529],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the supplied <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object to the supplied <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object and returns an indication of their relative values."},{"pos":[6708,6856],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to be compared to this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object to be compared to this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[6914,7683],"content":"A signed number that indicates the relative values of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure and the object.       <table><thead><tr><th> Return value       </th><th> Condition       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> The value of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is less than the object.       </td></tr><tr><td> Zero       </td><td> This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is the same as object.       </td></tr><tr><td> Greater than zero       </td><td> This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is greater than object.       -or-       The object is a null reference.       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure and the object.       ","pos":[0,143],"nodes":[{"content":"A signed number that indicates the relative values of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure and the object.","pos":[0,136],"source":"A signed number that indicates the relative values of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure and the object."}]},{"content":"Return value","pos":[166,178]},{"content":"Condition","pos":[195,204]},{"content":"Less than zero","pos":[245,259]},{"content":" The value of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is less than the object.       ","pos":[275,384],"nodes":[{"content":"The value of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is less than the object.","pos":[1,102],"source":" The value of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is less than the object."}]},{"content":"Zero","pos":[403,407]},{"content":" This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is the same as object.       ","pos":[423,517],"nodes":[{"content":"This <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is the same as object.","pos":[1,87],"source":" This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is the same as object."}]},{"content":"Greater than zero","pos":[536,553]},{"content":" This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is greater than object.       -or-       The object is a null reference.       ","pos":[569,713],"nodes":[{"content":"This <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is greater than object.","pos":[1,88],"source":" This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is greater than object."},{"content":"-or-       The object is a null reference.","pos":[95,137]}]}]},{"pos":[8155,8302],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the supplied object and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object to the supplied object and returns an indication of their relative values."},{"pos":[8440,8536],"content":"The object to be compared to this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The object to be compared to this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[8594,9363],"content":"A signed number that indicates the relative values of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure and the object.       <table><thead><tr><th> Return value       </th><th> Condition       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> The value of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is less than the object.       </td></tr><tr><td> Zero       </td><td> This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is the same as object.       </td></tr><tr><td> Greater than zero       </td><td> This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is greater than object.       -or-       The object is a null reference.       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure and the object.       ","pos":[0,143],"nodes":[{"content":"A signed number that indicates the relative values of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure and the object.","pos":[0,136],"source":"A signed number that indicates the relative values of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure and the object."}]},{"content":"Return value","pos":[166,178]},{"content":"Condition","pos":[195,204]},{"content":"Less than zero","pos":[245,259]},{"content":" The value of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is less than the object.       ","pos":[275,384],"nodes":[{"content":"The value of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is less than the object.","pos":[1,102],"source":" The value of this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is less than the object."}]},{"content":"Zero","pos":[403,407]},{"content":" This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is the same as object.       ","pos":[423,517],"nodes":[{"content":"This <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is the same as object.","pos":[1,87],"source":" This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is the same as object."}]},{"content":"Greater than zero","pos":[536,553]},{"content":" This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is greater than object.       -or-       The object is a null reference.       ","pos":[569,713],"nodes":[{"content":"This <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is greater than object.","pos":[1,88],"source":" This <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object is greater than object."},{"content":"-or-       The object is a null reference.","pos":[95,137]}]}]},{"pos":[9955,10113],"content":"Concatenates two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to create a new <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Concatenates two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to create a new <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[10349,10413],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[10488,10552],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[10627,10703],"content":"The concatenated values of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">x</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">y</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"The concatenated values of the <code>x</code> and <code>y</code> parameters."},{"pos":[11156,11322],"content":"Compares the supplied object parameter to the &lt;xref:System.Data.SqlTypes.SqlBinary.Value*&gt; property of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Compares the supplied object parameter to the <xref:System.Data.SqlTypes.SqlBinary.Value*> property of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[11467,11493],"content":"The object to be compared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to be compared.","pos":[0,26]}]},{"pos":[11552,11789],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if object is an instance of <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the two are equal; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if object is an instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> and the two are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12377,12489],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether they are equal."},{"pos":[12726,12790],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[12865,12929],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[13005,13291],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If either instance is null, then the <xref uid=\"langword_csharp_SqlBinary\" name=\"SqlBinary\" href=\"\"></xref> will be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two values are equal.","pos":[0,89],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,164],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"If either instance is null, then the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlBinary\" name=\"SqlBinary\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> will be null.","pos":[165,286],"source":" If either instance is null, then the <xref uid=\"langword_csharp_SqlBinary\" name=\"SqlBinary\" href=\"\"></xref> will be null."}]},{"pos":[13721,13814],"content":"Returns the hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Returns the hash code for this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[13949,13983],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[14513,14631],"content":"Returns the XML Schema definition language (XSD) of the specified <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[14850,14905],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[14977,15136],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the XSD of the specified <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[15753,15887],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is greater than the second."},{"pos":[16129,16193],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[16268,16332],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[16408,16906],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance.","pos":[0,174],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance."},{"content":"Otherwise <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[175,238],"source":" Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[17559,17705],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is greater than or equal to the second."},{"pos":[17954,18018],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[18093,18157],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[18233,18743],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance.","pos":[0,186],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance."},{"content":"Otherwise <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,250],"source":" Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[251,510],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[19156,19277],"content":"Indicates whether this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure is null. This property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure is null.","pos":[0,93],"source":"Indicates whether this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure is null."},{"content":"This property is read-only.","pos":[94,121]}]},{"pos":[19289,19377],"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."},{"pos":[19487,19687],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20127,20477],"content":"Gets the single byte from the <xref:System.Data.SqlTypes.SqlBinary.Value*> property located at the position indicated by the integer parameter, <code>index</code>. If <code>index</code> indicates a position beyond the end of the byte array, a <xref href=\"System.Data.SqlTypes.SqlNullValueException\"></xref> will be raised. This property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the single byte from the &lt;xref:System.Data.SqlTypes.SqlBinary.Value*&gt; property located at the position indicated by the integer parameter, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,163],"source":"Gets the single byte from the <xref:System.Data.SqlTypes.SqlBinary.Value*> property located at the position indicated by the integer parameter, <code>index</code>."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> indicates a position beyond the end of the byte array, a <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlNullValueException\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be raised.","pos":[164,322],"source":" If <code>index</code> indicates a position beyond the end of the byte array, a <xref href=\"System.Data.SqlTypes.SqlNullValueException\"></xref> will be raised."},{"content":"This property is read-only.","pos":[323,350]}]},{"pos":[20489,20729],"content":"To avoid raising a <xref:System.Data.SqlTypes.SqlNullValueException>, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property and the <xref:System.Data.SqlTypes.SqlBinary.Length%2A> property before reading this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid raising a &lt;xref:System.Data.SqlTypes.SqlNullValueException&gt;, always examine the &lt;xref:System.Data.SqlTypes.SqlBinary.IsNull%2A&gt; property and the &lt;xref:System.Data.SqlTypes.SqlBinary.Length%2A&gt; property before reading this property.","pos":[0,240],"source":"To avoid raising a <xref:System.Data.SqlTypes.SqlNullValueException>, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property and the <xref:System.Data.SqlTypes.SqlBinary.Length%2A> property before reading this property."}]},{"pos":[20866,20907],"content":"The position of the byte to be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position of the byte to be retrieved.","pos":[0,41]}]},{"pos":[20963,21031],"content":"The byte located at the position indicated by the integer parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte located at the position indicated by the integer parameter.","pos":[0,68]}]},{"pos":[21901,22015],"content":"Gets the length in bytes of the <xref:System.Data.SqlTypes.SqlBinary.Value*> property. This property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the length in bytes of the <xref:System.Data.SqlTypes.SqlBinary.Value*> property. This property is read-only.","pos":[0,114],"nodes":[{"content":"Gets the length in bytes of the &lt;xref:System.Data.SqlTypes.SqlBinary.Value*&gt; property.","pos":[0,86],"source":"Gets the length in bytes of the <xref:System.Data.SqlTypes.SqlBinary.Value*> property."},{"content":"This property is read-only.","pos":[87,114]}]}]},{"pos":[22027,22208],"content":"To avoid raising a <xref:System.Data.SqlTypes.SqlNullValueException>, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property before reading the Length property.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid raising a &lt;xref:System.Data.SqlTypes.SqlNullValueException&gt;, always examine the &lt;xref:System.Data.SqlTypes.SqlBinary.IsNull%2A&gt; property before reading the Length property.","pos":[0,181],"source":"To avoid raising a <xref:System.Data.SqlTypes.SqlNullValueException>, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property before reading the Length property."}]},{"pos":[22315,22406],"content":"The length of the binary data in the <xref:System.Data.SqlTypes.SqlBinary.Value*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the binary data in the &lt;xref:System.Data.SqlTypes.SqlBinary.Value*&gt; property.","pos":[0,91],"source":"The length of the binary data in the <xref:System.Data.SqlTypes.SqlBinary.Value*> property."}]},{"pos":[22602,22759],"content":"The Length property is read when the &lt;xref:System.Data.SqlTypes.SqlBinary.Value*&gt; property contains <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary.Null\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The Length property is read when the <xref:System.Data.SqlTypes.SqlBinary.Value*> property contains <xref href=\"System.Data.SqlTypes.SqlBinary.Null\"></xref>."},{"pos":[23289,23420],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is less than the second."},{"pos":[23659,23723],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[23798,23862],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[23938,24433],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance.","pos":[0,171],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance."},{"content":"Otherwise <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,235],"source":" Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[236,495],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[25068,25211],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is less than or equal to the second."},{"pos":[25457,25521],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[25596,25660],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[25736,26243],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance.","pos":[0,183],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance."},{"content":"Otherwise <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,247],"source":" Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[248,507],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[26855,26971],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether they are not equal.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether they are not equal."},{"pos":[27211,27275],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[27350,27414],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[27490,27988],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[28383,28538],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.DBNull\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be assigned to this instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[28551,28727],"content":"`Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlBinary> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">`Null`</ph> functions as a constant for the &lt;xref:System.Data.SqlTypes.SqlBinary&gt; structure.","pos":[0,87],"source":"`Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlBinary> structure."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[88,176],"source":" For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[28886,28898],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29462,29624],"content":"Concatenates the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to create a new <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Concatenates the two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> parameters to create a new <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[29637,29731],"content":"<ph id=\"ph1\">`x`</ph> will appear first in the resulting &lt;xref:System.Data.SqlTypes.SqlBinary&gt;, followed by <ph id=\"ph2\">`y`</ph>.","needQuote":false,"needEscape":true,"source":"`x` will appear first in the resulting <xref:System.Data.SqlTypes.SqlBinary>, followed by `y`."},{"pos":[29973,30034],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[30109,30170],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[30245,30321],"content":"The concatenated values of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">x</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">y</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"The concatenated values of the <code>x</code> and <code>y</code> parameters."},{"pos":[30941,31053],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether they are equal."},{"pos":[31295,31356],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[31431,31492],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[31568,32066],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are not equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[32799,32811],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32869,32881],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33658,33670],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33745,33757],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34392,34526],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is greater than the second."},{"pos":[34771,34832],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[34907,34968],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[35044,35542],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance.","pos":[0,174],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance."},{"content":"Otherwise <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[175,238],"source":" Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[36215,36360],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structues to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structues to determine whether the first is greater than or equal to the second."},{"pos":[36612,36673],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[36748,36809],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[36885,37395],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance.","pos":[0,186],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance."},{"content":"Otherwise <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,250],"source":" Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[251,510],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[38044,38056],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38131,38143],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38773,38889],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether they are not equal.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether they are not equal."},{"pos":[39133,39194],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[39269,39330],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[39406,39904],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[40526,40657],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is less than the second."},{"pos":[40899,40960],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[41035,41096],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[41172,41667],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance.","pos":[0,171],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance."},{"content":"Otherwise <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,235],"source":" Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[236,495],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[42322,42465],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is less than or equal to the second."},{"pos":[42714,42775],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[42850,42911],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object."},{"pos":[42987,43494],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance.","pos":[0,183],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance."},{"content":"Otherwise <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,247],"source":" Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[248,507],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[44150,44248],"content":"For a description of this member, see <xref:System.Xml.Serialization.IXmlSerializable.GetSchema*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see &lt;xref:System.Xml.Serialization.IXmlSerializable.GetSchema*&gt;.","pos":[0,98],"source":"For a description of this member, see <xref:System.Xml.Serialization.IXmlSerializable.GetSchema*>."}]},{"pos":[44260,44469],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.SqlTypes.SqlBinary&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface."}]}]},{"pos":[44642,44689],"content":"An <xref:System.Xml.Schema.XMLSchema> instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.Schema.XMLSchema&gt; instance.","pos":[0,47],"source":"An <xref:System.Xml.Schema.XMLSchema> instance."}]},{"pos":[45439,45535],"content":"For a description of this member, see <xref:System.Xml.Serialization.IXmlSerializable.ReadXml*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see &lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml*&gt;.","pos":[0,96],"source":"For a description of this member, see <xref:System.Xml.Serialization.IXmlSerializable.ReadXml*>."}]},{"pos":[45547,45756],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.SqlTypes.SqlBinary&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface."}]}]},{"pos":[45926,45956],"content":"A <xref:System.Xml.XmlReader>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.XmlReader&gt;.","pos":[0,30],"source":"A <xref:System.Xml.XmlReader>."}]},{"pos":[46709,46806],"content":"For a description of this member, see <xref:System.Xml.Serialization.IXmlSerializable.WriteXml*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see &lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml*&gt;.","pos":[0,97],"source":"For a description of this member, see <xref:System.Xml.Serialization.IXmlSerializable.WriteXml*>."}]},{"pos":[46818,47027],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.SqlTypes.SqlBinary&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface."}]}]},{"pos":[47198,47228],"content":"A <xref:System.Xml.XmlWriter>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.XmlWriter&gt;.","pos":[0,30],"source":"A <xref:System.Xml.XmlWriter>."}]},{"pos":[47692,47823],"content":"Converts this instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlGuid\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> to <xref href=\"System.Data.SqlTypes.SqlGuid\"></xref>."},{"pos":[47988,48050],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlGuid\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlGuid\"></xref> structure."},{"pos":[48468,48553],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to a string.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object to a string."},{"pos":[48689,48912],"content":"A string that contains the &lt;xref:System.Data.SqlTypes.SqlBinary.Value<bpt id=\"p1\">*</bpt>&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>. If the &lt;xref:System.Data.SqlTypes.SqlBinary.Value<ept id=\"p1\">*</ept>&gt; is null the string will contain \"null\".","needQuote":true,"needEscape":true,"source":"A string that contains the <xref:System.Data.SqlTypes.SqlBinary.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>. If the <xref:System.Data.SqlTypes.SqlBinary.Value*> is null the string will contain \"null\"."},{"pos":[49310,49422],"content":"Gets the value of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure. This property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,84],"source":"Gets the value of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"content":"This property is read-only.","pos":[85,112]}]},{"pos":[49434,49586],"content":"To avoid raising a SqlNullValueException, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property before reading the Value property.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid raising a SqlNullValueException, always examine the &lt;xref:System.Data.SqlTypes.SqlBinary.IsNull%2A&gt; property before reading the Value property.","pos":[0,152],"source":"To avoid raising a SqlNullValueException, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property before reading the Value property."}]},{"pos":[49696,49775],"content":"The value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The value of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure."},{"pos":[49970,50081],"content":"The Value property is read when the property contains <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary.Null\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The Value property is read when the property contains <xref href=\"System.Data.SqlTypes.SqlBinary.Null\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlTypes.SqlBinary\n  id: SqlBinary\n  children:\n  - System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])\n  - System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)\n  - System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.Equals(System.Object)\n  - System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.GetHashCode\n  - System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  - System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.IsNull\n  - System.Data.SqlTypes.SqlBinary.Item(System.Int32)\n  - System.Data.SqlTypes.SqlBinary.Length\n  - System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.Null\n  - System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])\n  - System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])\n  - System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema\n  - System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  - System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  - System.Data.SqlTypes.SqlBinary.ToSqlGuid\n  - System.Data.SqlTypes.SqlBinary.ToString\n  - System.Data.SqlTypes.SqlBinary.Value\n  langs:\n  - csharp\n  name: SqlBinary\n  nameWithType: SqlBinary\n  fullName: System.Data.SqlTypes.SqlBinary\n  type: Struct\n  summary: Represents a variable-length stream of binary data to be stored in or retrieved from a database.\n  syntax:\n    content: >-\n      [System.Xml.Serialization.XmlSchemaProvider(\"GetXsdType\")]\n\n      public struct SqlBinary : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.IComparable\n  - System.Xml.Serialization.IXmlSerializable\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: SqlBinary(Byte[])\n  nameWithType: SqlBinary.SqlBinary(Byte[])\n  fullName: System.Data.SqlTypes.SqlBinary.SqlBinary(Byte[])\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure, setting the <xref:System.Data.SqlTypes.SqlBinary.Value*> property to the contents of the supplied byte array.\n  syntax:\n    content: public SqlBinary (byte[] value);\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: The byte array to be stored or retrieved.\n  overload: System.Data.SqlTypes.SqlBinary.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: Add(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.Add(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.Add(SqlBinary,SqlBinary)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Concatenates two specified <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> values to create a new <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n  remarks: '`x` will appear first in the resulting <xref:System.Data.SqlTypes.SqlBinary>, followed by `y`.'\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBinary Add (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>.\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> that is the concatenated value of x and y.\n  overload: System.Data.SqlTypes.SqlBinary.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)\n  id: CompareTo(System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: CompareTo(SqlBinary)\n  nameWithType: SqlBinary.CompareTo(SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(SqlBinary)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object to the supplied <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object and returns an indication of their relative values.\n  syntax:\n    content: public int CompareTo (System.Data.SqlTypes.SqlBinary value);\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlBinary\n      description: The <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object to be compared to this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of this <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\"></xref> structure and the object.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> The value of this <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\"></xref> object is less than the object.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\"></xref> object is the same as object.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\"></xref> object is greater than object.  \\n  \\n -or-  \\n  \\n The object is a null reference.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlBinary.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: SqlBinary.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object to the supplied object and returns an indication of their relative values.\n  syntax:\n    content: public int CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to be compared to this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of this <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\"></xref> structure and the object.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> The value of this <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\"></xref> object is less than the object.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\"></xref> object is the same as object.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\"></xref> object is greater than object.  \\n  \\n -or-  \\n  \\n The object is a null reference.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlBinary.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: Concat(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.Concat(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.Concat(SqlBinary,SqlBinary)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Concatenates two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to create a new <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBinary Concat (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: The concatenated values of the <code>x</code> and <code>y</code> parameters.\n  overload: System.Data.SqlTypes.SqlBinary.Concat*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SqlBinary.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlBinary.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares the supplied object parameter to the <xref:System.Data.SqlTypes.SqlBinary.Value*> property of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to be compared.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if object is an instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> and the two are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: Equals(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.Equals(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.Equals(SqlBinary,SqlBinary)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If either instance is null, then the <xref uid=\"langword_csharp_SqlBinary\" name=\"SqlBinary\" href=\"\"></xref> will be null.\n  overload: System.Data.SqlTypes.SqlBinary.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.GetHashCode\n  id: GetHashCode\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SqlBinary.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlBinary.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the hash code for this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Data.SqlTypes.SqlBinary.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlBinary.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlBinary.GetXsdType(XmlSchemaSet)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  syntax:\n    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);\n    parameters:\n    - id: schemaSet\n      type: System.Xml.Schema.XmlSchemaSet\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.GetXsdType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: GreaterThan(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.GreaterThan(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.GreaterThan(SqlBinary,SqlBinary)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is greater than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: GreaterThanOrEqual(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: IsNull\n  nameWithType: SqlBinary.IsNull\n  fullName: System.Data.SqlTypes.SqlBinary.IsNull\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Indicates whether this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure is null. This property is read-only.\n  remarks: For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public bool IsNull { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.IsNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: SqlBinary.Item(Int32)\n  fullName: System.Data.SqlTypes.SqlBinary.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets the single byte from the <xref:System.Data.SqlTypes.SqlBinary.Value*> property located at the position indicated by the integer parameter, <code>index</code>. If <code>index</code> indicates a position beyond the end of the byte array, a <xref href=\"System.Data.SqlTypes.SqlNullValueException\"></xref> will be raised. This property is read-only.\n  remarks: To avoid raising a <xref:System.Data.SqlTypes.SqlNullValueException>, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property and the <xref:System.Data.SqlTypes.SqlBinary.Length%2A> property before reading this property.\n  syntax:\n    content: public byte this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The position of the byte to be retrieved.\n    return:\n      type: System.Byte\n      description: The byte located at the position indicated by the integer parameter.\n  overload: System.Data.SqlTypes.SqlBinary.Item*\n  exceptions:\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"The property is read when the <xref:System.Data.SqlTypes.SqlBinary.Value*> property contains <xref href=\\\"System.Data.SqlTypes.SqlBinary.Null\\\"></xref>  \\n  \\n \\\\- or -  \\n  \\n The <code>index</code> parameter indicates a position byond the length of the byte array as indicated by the <xref:System.Data.SqlTypes.SqlBinary.Length*> property.\"\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.Length\n  id: Length\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: Length\n  nameWithType: SqlBinary.Length\n  fullName: System.Data.SqlTypes.SqlBinary.Length\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets the length in bytes of the <xref:System.Data.SqlTypes.SqlBinary.Value*> property. This property is read-only.\n  remarks: To avoid raising a <xref:System.Data.SqlTypes.SqlNullValueException>, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property before reading the Length property.\n  syntax:\n    content: public int Length { get; }\n    return:\n      type: System.Int32\n      description: The length of the binary data in the <xref:System.Data.SqlTypes.SqlBinary.Value*> property.\n  overload: System.Data.SqlTypes.SqlBinary.Length*\n  exceptions:\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: The Length property is read when the <xref:System.Data.SqlTypes.SqlBinary.Value*> property contains <xref href=\"System.Data.SqlTypes.SqlBinary.Null\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: LessThan(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.LessThan(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.LessThan(SqlBinary,SqlBinary)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is less than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: LessThanOrEqual(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: NotEquals(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.NotEquals(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.NotEquals(SqlBinary,SqlBinary)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether they are not equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.NotEquals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.Null\n  id: \"Null\"\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: SqlBinary.Null\n  fullName: System.Data.SqlTypes.SqlBinary.Null\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n  remarks: '`Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlBinary> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlBinary Null;\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: op_Addition(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_Addition(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_Addition(SqlBinary,SqlBinary)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Concatenates the two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> parameters to create a new <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n  remarks: '`x` will appear first in the resulting <xref:System.Data.SqlTypes.SqlBinary>, followed by `y`.'\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBinary op_Addition (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: The concatenated values of the <code>x</code> and <code>y</code> parameters.\n  overload: System.Data.SqlTypes.SqlBinary.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: op_Equality(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_Equality(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_Equality(SqlBinary,SqlBinary)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])\n  id: op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: op_Explicit(SqlBinary)\n  nameWithType: SqlBinary.op_Explicit(SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlBinary)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static byte[] op_Explicit (System.Data.SqlTypes.SqlBinary x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: To be added.\n    return:\n      type: System.Byte[]\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBinary.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)\n  id: op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: op_Explicit(SqlGuid)\n  nameWithType: SqlBinary.op_Explicit(SqlGuid)\n  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlGuid)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBinary op_Explicit (System.Data.SqlTypes.SqlGuid x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlGuid\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBinary.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: op_GreaterThan(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is greater than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structues to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])\n  id: op_Implicit(System.Byte[])\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: op_Implicit(Byte[])\n  nameWithType: SqlBinary.op_Implicit(Byte[])\n  fullName: System.Data.SqlTypes.SqlBinary.op_Implicit(Byte[])\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBinary op_Implicit (byte[] x);\n    parameters:\n    - id: x\n      type: System.Byte[]\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBinary.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: op_Inequality(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_Inequality(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_Inequality(SqlBinary,SqlBinary)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether they are not equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: op_LessThan(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_LessThan(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_LessThan(SqlBinary,SqlBinary)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is less than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structures to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    - id: y\n      type: System.Data.SqlTypes.SqlBinary\n      description: A <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema\n  id: System#Xml#Serialization#IXmlSerializable#GetSchema\n  isEii: true\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: For a description of this member, see <xref:System.Xml.Serialization.IXmlSerializable.GetSchema*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.\n  syntax:\n    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();\n    parameters: []\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: An <xref:System.Xml.Schema.XMLSchema> instance.\n  overload: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: For a description of this member, see <xref:System.Xml.Serialization.IXmlSerializable.ReadXml*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.\n  syntax:\n    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: A <xref:System.Xml.XmlReader>.\n  overload: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: For a description of this member, see <xref:System.Xml.Serialization.IXmlSerializable.WriteXml*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.\n  syntax:\n    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: A <xref:System.Xml.XmlWriter>.\n  overload: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.ToSqlGuid\n  id: ToSqlGuid\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: ToSqlGuid()\n  nameWithType: SqlBinary.ToSqlGuid()\n  fullName: System.Data.SqlTypes.SqlBinary.ToSqlGuid()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this instance of <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> to <xref href=\"System.Data.SqlTypes.SqlGuid\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlGuid ToSqlGuid ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlGuid\n      description: A <xref href=\"System.Data.SqlTypes.SqlGuid\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlBinary.ToSqlGuid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.ToString\n  id: ToString\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SqlBinary.ToString()\n  fullName: System.Data.SqlTypes.SqlBinary.ToString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> object to a string.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the <xref:System.Data.SqlTypes.SqlBinary.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>. If the <xref:System.Data.SqlTypes.SqlBinary.Value*> is null the string will contain \"null\".\n  overload: System.Data.SqlTypes.SqlBinary.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBinary.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlBinary\n  langs:\n  - csharp\n  name: Value\n  nameWithType: SqlBinary.Value\n  fullName: System.Data.SqlTypes.SqlBinary.Value\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets the value of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure. This property is read-only.\n  remarks: To avoid raising a SqlNullValueException, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property before reading the Value property.\n  syntax:\n    content: public byte[] Value { get; }\n    return:\n      type: System.Byte[]\n      description: The value of the <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlBinary.Value*\n  exceptions:\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: The Value property is read when the property contains <xref href=\"System.Data.SqlTypes.SqlBinary.Null\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Data.SqlTypes.SqlNullValueException\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlNullValueException\n  nameWithType: SqlNullValueException\n  fullName: System.Data.SqlTypes.SqlNullValueException\n- uid: System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: SqlBinary(Byte[])\n  nameWithType: SqlBinary.SqlBinary(Byte[])\n  fullName: System.Data.SqlTypes.SqlBinary.SqlBinary(Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Add(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.Add(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.Add(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBinary\n  nameWithType: SqlBinary\n  fullName: System.Data.SqlTypes.SqlBinary\n- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: CompareTo(SqlBinary)\n  nameWithType: SqlBinary.CompareTo(SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(SqlBinary)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: SqlBinary.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Concat(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.Concat(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.Concat(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SqlBinary.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlBinary.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Equals(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.Equals(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.Equals(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  nameWithType: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n- uid: System.Data.SqlTypes.SqlBinary.GetHashCode\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SqlBinary.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlBinary.GetHashCode()\n- uid: System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlBinary.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlBinary.GetXsdType(XmlSchemaSet)\n- uid: System.Xml.XmlQualifiedName\n  parent: System.Xml\n  isExternal: true\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: GreaterThan(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.GreaterThan(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.GreaterThan(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: GreaterThanOrEqual(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.IsNull\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlBinary.IsNull\n  fullName: System.Data.SqlTypes.SqlBinary.IsNull\n- uid: System.Data.SqlTypes.SqlBinary.Item(System.Int32)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: SqlBinary.Item(Int32)\n  fullName: System.Data.SqlTypes.SqlBinary.Item(Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.SqlTypes.SqlBinary.Length\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Length\n  nameWithType: SqlBinary.Length\n  fullName: System.Data.SqlTypes.SqlBinary.Length\n- uid: System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: LessThan(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.LessThan(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.LessThan(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: LessThanOrEqual(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: NotEquals(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.NotEquals(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.NotEquals(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.Null\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: \"Null\"\n  nameWithType: SqlBinary.Null\n  fullName: System.Data.SqlTypes.SqlBinary.Null\n- uid: System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Addition(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_Addition(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_Addition(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Equality(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_Equality(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_Equality(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Explicit(SqlBinary)\n  nameWithType: SqlBinary.op_Explicit(SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Explicit(SqlGuid)\n  nameWithType: SqlBinary.op_Explicit(SqlGuid)\n  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlGuid)\n- uid: System.Data.SqlTypes.SqlGuid\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlGuid\n  nameWithType: SqlGuid\n  fullName: System.Data.SqlTypes.SqlGuid\n- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_GreaterThan(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_GreaterThanOrEqual(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Implicit(Byte[])\n  nameWithType: SqlBinary.op_Implicit(Byte[])\n  fullName: System.Data.SqlTypes.SqlBinary.op_Implicit(Byte[])\n- uid: System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Inequality(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_Inequality(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_Inequality(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_LessThan(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_LessThan(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_LessThan(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_LessThanOrEqual(SqlBinary,SqlBinary)\n  nameWithType: SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)\n- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()\n- uid: System.Xml.Schema.XmlSchema\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema\n- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Data.SqlTypes.SqlBinary.ToSqlGuid\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: ToSqlGuid()\n  nameWithType: SqlBinary.ToSqlGuid()\n  fullName: System.Data.SqlTypes.SqlBinary.ToSqlGuid()\n- uid: System.Data.SqlTypes.SqlBinary.ToString\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: ToString()\n  nameWithType: SqlBinary.ToString()\n  fullName: System.Data.SqlTypes.SqlBinary.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlTypes.SqlBinary.Value\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Value\n  nameWithType: SqlBinary.Value\n  fullName: System.Data.SqlTypes.SqlBinary.Value\n- uid: System.Data.SqlTypes.SqlBinary.#ctor*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: SqlBinary\n  nameWithType: SqlBinary.SqlBinary\n- uid: System.Data.SqlTypes.SqlBinary.Add*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Add\n  nameWithType: SqlBinary.Add\n- uid: System.Data.SqlTypes.SqlBinary.CompareTo*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: CompareTo\n  nameWithType: SqlBinary.CompareTo\n- uid: System.Data.SqlTypes.SqlBinary.Concat*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Concat\n  nameWithType: SqlBinary.Concat\n- uid: System.Data.SqlTypes.SqlBinary.Equals*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Equals\n  nameWithType: SqlBinary.Equals\n- uid: System.Data.SqlTypes.SqlBinary.GetHashCode*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SqlBinary.GetHashCode\n- uid: System.Data.SqlTypes.SqlBinary.GetXsdType*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: GetXsdType\n  nameWithType: SqlBinary.GetXsdType\n- uid: System.Data.SqlTypes.SqlBinary.GreaterThan*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: GreaterThan\n  nameWithType: SqlBinary.GreaterThan\n- uid: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: GreaterThanOrEqual\n  nameWithType: SqlBinary.GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlBinary.IsNull*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlBinary.IsNull\n- uid: System.Data.SqlTypes.SqlBinary.Item*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Item\n  nameWithType: SqlBinary.Item\n- uid: System.Data.SqlTypes.SqlBinary.Length*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Length\n  nameWithType: SqlBinary.Length\n- uid: System.Data.SqlTypes.SqlBinary.LessThan*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: LessThan\n  nameWithType: SqlBinary.LessThan\n- uid: System.Data.SqlTypes.SqlBinary.LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: LessThanOrEqual\n  nameWithType: SqlBinary.LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlBinary.NotEquals*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: NotEquals\n  nameWithType: SqlBinary.NotEquals\n- uid: System.Data.SqlTypes.SqlBinary.op_Addition*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Addition\n  nameWithType: SqlBinary.op_Addition\n- uid: System.Data.SqlTypes.SqlBinary.op_Equality*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Equality\n  nameWithType: SqlBinary.op_Equality\n- uid: System.Data.SqlTypes.SqlBinary.op_Explicit*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Explicit\n  nameWithType: SqlBinary.op_Explicit\n- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThan*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: SqlBinary.op_GreaterThan\n- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: SqlBinary.op_GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlBinary.op_Implicit*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Implicit\n  nameWithType: SqlBinary.op_Implicit\n- uid: System.Data.SqlTypes.SqlBinary.op_Inequality*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SqlBinary.op_Inequality\n- uid: System.Data.SqlTypes.SqlBinary.op_LessThan*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_LessThan\n  nameWithType: SqlBinary.op_LessThan\n- uid: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: SqlBinary.op_LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema\n  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema\n- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml\n  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml\n- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml\n  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml\n- uid: System.Data.SqlTypes.SqlBinary.ToSqlGuid*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: ToSqlGuid\n  nameWithType: SqlBinary.ToSqlGuid\n- uid: System.Data.SqlTypes.SqlBinary.ToString*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: ToString\n  nameWithType: SqlBinary.ToString\n- uid: System.Data.SqlTypes.SqlBinary.Value*\n  parent: System.Data.SqlTypes.SqlBinary\n  isExternal: false\n  name: Value\n  nameWithType: SqlBinary.Value\n"}