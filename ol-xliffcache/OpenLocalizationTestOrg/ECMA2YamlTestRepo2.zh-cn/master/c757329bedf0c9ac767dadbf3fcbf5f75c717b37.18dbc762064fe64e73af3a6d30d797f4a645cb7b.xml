{"nodes":[{"pos":[442,727],"content":"Provides data for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_EmulateRecognizeCompleted\" name=\"EmulateRecognizeCompleted\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event of the <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> classes.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref uid=\"langword_csharp_EmulateRecognizeCompleted\" name=\"EmulateRecognizeCompleted\" href=\"\"></xref> event of the <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> and <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> classes."},{"pos":[740,1895],"content":"An instance of EmulateRecognizeCompletedEventArgs is created when the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object raises the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event. To obtain information about the result of recognition, access the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property in the handler for the event.       Emulation is the process by which text, instead of audio, is the input to a speech recognition engine. To bypass the audio inputs for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object during emulation, use the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> method.       If the speech recognition engine encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property is set to `null`.       EmulateRecognizeCompletedEventArgs derives from <xref:System.ComponentModel.AsyncCompletedEventArgs>.","needQuote":false,"needEscape":true,"nodes":[{"content":"An instance of EmulateRecognizeCompletedEventArgs is created when the &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt; object raises the &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted&gt; event.","pos":[0,234],"source":"An instance of EmulateRecognizeCompletedEventArgs is created when the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object raises the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event."},{"content":"To obtain information about the result of recognition, access the &lt;xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A&gt; property in the handler for the event.","pos":[235,417],"source":" To obtain information about the result of recognition, access the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property in the handler for the event."},{"content":"Emulation is the process by which text, instead of audio, is the input to a speech recognition engine.","pos":[424,526]},{"content":"To bypass the audio inputs for a &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt; object during emulation, use the &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A&gt; method.","pos":[527,732],"source":" To bypass the audio inputs for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object during emulation, use the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> method."},{"content":"If the speech recognition engine encounters an exception during the recognition operation, the &lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A&gt; property is set to the exception and the &lt;xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A&gt; property is set to <ph id=\"ph1\">`null`</ph>.","pos":[739,1041],"source":"       If the speech recognition engine encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property is set to `null`."},{"content":"EmulateRecognizeCompletedEventArgs derives from &lt;xref:System.ComponentModel.AsyncCompletedEventArgs&gt;.","pos":[1048,1149],"source":"       EmulateRecognizeCompletedEventArgs derives from <xref:System.ComponentModel.AsyncCompletedEventArgs>."}]},{"pos":[3644,3685],"content":"Gets the results of emulated recognition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the results of emulated recognition.","pos":[0,41]}]},{"pos":[3698,4266],"content":"The <xref:System.Speech.Recognition.RecognitionResult> object derives from <xref:System.Speech.Recognition.RecognizedPhrase> and contains full information about a phrase returned by a recognition operation. You can obtain a list off all the recognition candidates from the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property.       If recognizer encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the Result property is set to `null`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Speech.Recognition.RecognitionResult&gt; object derives from &lt;xref:System.Speech.Recognition.RecognizedPhrase&gt; and contains full information about a phrase returned by a recognition operation.","pos":[0,206],"source":"The <xref:System.Speech.Recognition.RecognitionResult> object derives from <xref:System.Speech.Recognition.RecognizedPhrase> and contains full information about a phrase returned by a recognition operation."},{"content":"You can obtain a list off all the recognition candidates from the &lt;xref:System.Speech.Recognition.RecognitionResult.Alternates%2A&gt; property.","pos":[207,347],"source":" You can obtain a list off all the recognition candidates from the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property."},{"content":"If recognizer encounters an exception during the recognition operation, the &lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A&gt; property is set to the exception and the Result property is set to <ph id=\"ph1\">`null`</ph>.","pos":[354,566],"source":"       If recognizer encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the Result property is set to `null`."}]},{"pos":[4445,4585],"content":"Detailed information about the results of recognition, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an error occurred.","needQuote":true,"needEscape":true,"source":"Detailed information about the results of recognition, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if an error occurred."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  id: EmulateRecognizeCompletedEventArgs\n  children:\n  - System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result\n  langs:\n  - csharp\n  name: EmulateRecognizeCompletedEventArgs\n  nameWithType: EmulateRecognizeCompletedEventArgs\n  fullName: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  type: Class\n  summary: Provides data for the <xref uid=\"langword_csharp_EmulateRecognizeCompleted\" name=\"EmulateRecognizeCompleted\" href=\"\"></xref> event of the <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> and <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> classes.\n  remarks: \"An instance of EmulateRecognizeCompletedEventArgs is created when the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object raises the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event. To obtain information about the result of recognition, access the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property in the handler for the event.  \\n  \\n Emulation is the process by which text, instead of audio, is the input to a speech recognition engine. To bypass the audio inputs for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object during emulation, use the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> method.  \\n  \\n If the speech recognition engine encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property is set to `null`.  \\n  \\n EmulateRecognizeCompletedEventArgs derives from <xref:System.ComponentModel.AsyncCompletedEventArgs>.\"\n  example:\n  - \"The following example adds an event handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event to a <xref:System.Speech.Recognition.SpeechRecognitionEngine>. The handler gets the recognized text from the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property.  \\n  \\n```c#  \\n  \\nprivate SpeechRecognitionEngine sre;  \\n  \\n// Initialize the speech recognition engine.   \\nprivate void Initialize()  \\n{  \\n  sre = new SpeechRecognitionEngine();  \\n  \\n  // Add a handler for the EmulateRecognizeCompleted event.  \\n  sre.EmulateRecognizeCompleted += new EventHandler<EmulateRecognizeCompletedEventArgs>(sre_EmulateRecognizeCompleted);  \\n  \\n  // Add other initialization code here.  \\n}  \\n  \\n// Handle the EmulateRecognizeCompleted event.   \\nvoid sre_EmulateRecognizeCompleted(object sender, EmulateRecognizeCompletedEventArgs e)  \\n{  \\n  if (e.Result == null) return;  \\n  \\n  string phrase = e.Result.Text;  \\n  \\n  // Add event handler code here.  \\n}  \\n  \\n```\"\n  syntax:\n    content: 'public class EmulateRecognizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs'\n  inheritance:\n  - System.ComponentModel.AsyncCompletedEventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result\n  id: Result\n  parent: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  langs:\n  - csharp\n  name: Result\n  nameWithType: EmulateRecognizeCompletedEventArgs.Result\n  fullName: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the results of emulated recognition.\n  remarks: \"The <xref:System.Speech.Recognition.RecognitionResult> object derives from <xref:System.Speech.Recognition.RecognizedPhrase> and contains full information about a phrase returned by a recognition operation. You can obtain a list off all the recognition candidates from the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property.  \\n  \\n If recognizer encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the Result property is set to `null`.\"\n  syntax:\n    content: public System.Speech.Recognition.RecognitionResult Result { get; }\n    return:\n      type: System.Speech.Recognition.RecognitionResult\n      description: Detailed information about the results of recognition, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if an error occurred.\n  overload: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: System.ComponentModel.AsyncCompletedEventArgs\n- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result\n  parent: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  isExternal: false\n  name: Result\n  nameWithType: EmulateRecognizeCompletedEventArgs.Result\n  fullName: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result\n- uid: System.Speech.Recognition.RecognitionResult\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: RecognitionResult\n  nameWithType: RecognitionResult\n  fullName: System.Speech.Recognition.RecognitionResult\n- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result*\n  parent: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs\n  isExternal: false\n  name: Result\n  nameWithType: EmulateRecognizeCompletedEventArgs.Result\n"}