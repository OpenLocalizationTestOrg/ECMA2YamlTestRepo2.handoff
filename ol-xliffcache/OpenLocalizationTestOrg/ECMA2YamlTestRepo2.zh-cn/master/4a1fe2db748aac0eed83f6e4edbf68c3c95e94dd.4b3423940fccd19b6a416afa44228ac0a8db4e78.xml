{"nodes":[{"pos":[1205,1217],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2748,2760],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2811,2823],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2918,2930],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3815,3827],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3878,3890],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3985,3997],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5462,5474],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5525,5537],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5643,5655],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5761,5773],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5868,5880],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7185,7197],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7248,7260],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7366,7378],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7484,7496],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7591,7603],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8144,8156],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.AccessRule`1\n  id: AccessRule`1\n  children:\n  - System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControl`0ype)\n  - System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.AccessControl`0ype)\n  - System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  - System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  - System.Security.AccessControl.AccessRule`1.Rights\n  langs:\n  - csharp\n  name: AccessRule<T>\n  nameWithType: AccessRule<T>\n  fullName: System.Security.AccessControl.AccessRule<T>\n  type: Class\n  syntax:\n    content: 'public class AccessRule<T> : System.Security.AccessControl.AccessRule where T : struct'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AccessRule\n  implements: []\n  inheritedMembers:\n  - System.Security.AccessControl.AccessRule.AccessControlType\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net462\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControl`0ype)\n  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControl`0ype)'\n  parent: System.Security.AccessControl.AccessRule`1\n  langs:\n  - csharp\n  name: AccessRule(IdentityReference,T,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(IdentityReference,T,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(IdentityReference,T,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AccessRule (System.Security.Principal.IdentityReference identity, T rights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: To be added.\n    - id: rights\n      type: T\n      description: To be added.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: To be added.\n  overload: System.Security.AccessControl.AccessRule`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.AccessControl`0ype)\n  id: '#ctor(System.String,`0,System.Security.AccessControl.AccessControl`0ype)'\n  parent: System.Security.AccessControl.AccessRule`1\n  langs:\n  - csharp\n  name: AccessRule(String,T,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(String,T,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(String,T,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AccessRule (string identity, T rights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.String\n      description: To be added.\n    - id: rights\n      type: T\n      description: To be added.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: To be added.\n  overload: System.Security.AccessControl.AccessRule`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)'\n  parent: System.Security.AccessControl.AccessRule`1\n  langs:\n  - csharp\n  name: AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AccessRule (System.Security.Principal.IdentityReference identity, T rights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: To be added.\n    - id: rights\n      type: T\n      description: To be added.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: To be added.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: To be added.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: To be added.\n  overload: System.Security.AccessControl.AccessRule`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  id: '#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)'\n  parent: System.Security.AccessControl.AccessRule`1\n  langs:\n  - csharp\n  name: AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AccessRule (string identity, T rights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.String\n      description: To be added.\n    - id: rights\n      type: T\n      description: To be added.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: To be added.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: To be added.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: To be added.\n  overload: System.Security.AccessControl.AccessRule`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.AccessRule`1.Rights\n  id: Rights\n  parent: System.Security.AccessControl.AccessRule`1\n  langs:\n  - csharp\n  name: Rights\n  nameWithType: AccessRule<T>.Rights\n  fullName: System.Security.AccessControl.AccessRule<T>.Rights\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public T Rights { get; }\n    return:\n      type: T\n      description: To be added.\n  overload: System.Security.AccessControl.AccessRule`1.Rights*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.AccessControl.AccessRule\n  isExternal: false\n  name: System.Security.AccessControl.AccessRule\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControl`0ype)\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: AccessRule(IdentityReference,T,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(IdentityReference,T,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(IdentityReference,T,AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.AccessControl`0ype)\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: AccessRule(String,T,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(String,T,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(String,T,AccessControlType)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n- uid: System.Security.AccessControl.AccessRule`1.Rights\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: Rights\n  nameWithType: AccessRule<T>.Rights\n  fullName: System.Security.AccessControl.AccessRule<T>.Rights\n- uid: System.Security.AccessControl.AccessRule`1.#ctor*\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: AccessRule<T>\n  nameWithType: AccessRule<T>.AccessRule<T>\n- uid: System.Security.AccessControl.AccessRule`1.Rights*\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: Rights\n  nameWithType: AccessRule<T>.Rights\n"}