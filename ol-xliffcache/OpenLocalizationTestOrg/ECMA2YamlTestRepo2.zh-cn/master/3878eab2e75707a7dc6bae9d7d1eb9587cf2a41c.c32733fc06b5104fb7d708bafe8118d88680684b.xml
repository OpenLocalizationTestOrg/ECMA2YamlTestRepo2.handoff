{"nodes":[{"pos":[497,629],"content":"Defines the methods necessary to inspect or modify the creation of <xref:System.ServiceModel.InstanceContext> objects when required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the methods necessary to inspect or modify the creation of &lt;xref:System.ServiceModel.InstanceContext&gt; objects when required.","pos":[0,132],"source":"Defines the methods necessary to inspect or modify the creation of <xref:System.ServiceModel.InstanceContext> objects when required."}]},{"pos":[642,1464],"content":"To inspect or modify <xref:System.ServiceModel.InstanceContext> objects when they are created, implement the IInstanceContextInitializer interface and use an <xref:System.ServiceModel.Description.IContractBehavior> to add it to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> property.       There can be any number of context initializers for a service. Typically, the IInstanceContextInitializer is added to attach an extension to the <xref:System.ServiceModel.InstanceContext> object as a mechanism for passing data throughout an application.       If you want to participate in providing or selecting the <xref:System.ServiceModel.InstanceContext> object that processes a message, see <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"To inspect or modify <xref:System.ServiceModel.InstanceContext> objects when they are created, implement the IInstanceContextInitializer interface and use an <xref:System.ServiceModel.Description.IContractBehavior> to add it to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> property.       There can be any number of context initializers for a service. Typically, the IInstanceContextInitializer is added to attach an extension to the <xref:System.ServiceModel.InstanceContext> object as a mechanism for passing data throughout an application.       If you want to participate in providing or selecting the <xref:System.ServiceModel.InstanceContext> object that processes a message, see <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName>.","pos":[0,818],"nodes":[{"content":"To inspect or modify &lt;xref:System.ServiceModel.InstanceContext&gt; objects when they are created, implement the IInstanceContextInitializer interface and use an &lt;xref:System.ServiceModel.Description.IContractBehavior&gt; to add it to the &lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A&gt; property.","pos":[0,326],"source":"To inspect or modify <xref:System.ServiceModel.InstanceContext> objects when they are created, implement the IInstanceContextInitializer interface and use an <xref:System.ServiceModel.Description.IContractBehavior> to add it to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> property."},{"content":"There can be any number of context initializers for a service.","pos":[333,395]},{"content":"Typically, the IInstanceContextInitializer is added to attach an extension to the &lt;xref:System.ServiceModel.InstanceContext&gt; object as a mechanism for passing data throughout an application.","pos":[396,586],"source":" Typically, the IInstanceContextInitializer is added to attach an extension to the <xref:System.ServiceModel.InstanceContext> object as a mechanism for passing data throughout an application."},{"content":"If you want to participate in providing or selecting the &lt;xref:System.ServiceModel.InstanceContext&gt; object that processes a message, see &lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName&gt;.","pos":[593,818],"source":"       If you want to participate in providing or selecting the <xref:System.ServiceModel.InstanceContext> object that processes a message, see <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName>."}]}]},{"pos":[2244,2343],"content":"Provides the ability to modify the newly created <xref:System.ServiceModel.InstanceContext> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the ability to modify the newly created &lt;xref:System.ServiceModel.InstanceContext&gt; object.","pos":[0,99],"source":"Provides the ability to modify the newly created <xref:System.ServiceModel.InstanceContext> object."}]},{"pos":[2355,2572],"content":"The Initialize method is called when an <xref:System.ServiceModel.InstanceContext> object is created. Typically this method is used to attach an extension so that custom data can be accessed throughout an application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Initialize method is called when an <xref:System.ServiceModel.InstanceContext> object is created. Typically this method is used to attach an extension so that custom data can be accessed throughout an application.","pos":[0,217],"nodes":[{"content":"The Initialize method is called when an &lt;xref:System.ServiceModel.InstanceContext&gt; object is created.","pos":[0,101],"source":"The Initialize method is called when an <xref:System.ServiceModel.InstanceContext> object is created."},{"content":"Typically this method is used to attach an extension so that custom data can be accessed throughout an application.","pos":[102,217]}]}]},{"pos":[2829,2866],"content":"The system-supplied instance context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The system-supplied instance context.","pos":[0,37]}]},{"pos":[2953,3017],"content":"The message that triggered the creation of the instance context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message that triggered the creation of the instance context.","pos":[0,64]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer\n  id: IInstanceContextInitializer\n  children:\n  - System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)\n  langs:\n  - csharp\n  name: IInstanceContextInitializer\n  nameWithType: IInstanceContextInitializer\n  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer\n  type: Interface\n  summary: Defines the methods necessary to inspect or modify the creation of <xref:System.ServiceModel.InstanceContext> objects when required.\n  remarks: \"To inspect or modify <xref:System.ServiceModel.InstanceContext> objects when they are created, implement the IInstanceContextInitializer interface and use an <xref:System.ServiceModel.Description.IContractBehavior> to add it to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> property.  \\n  \\n There can be any number of context initializers for a service. Typically, the IInstanceContextInitializer is added to attach an extension to the <xref:System.ServiceModel.InstanceContext> object as a mechanism for passing data throughout an application.  \\n  \\n If you want to participate in providing or selecting the <xref:System.ServiceModel.InstanceContext> object that processes a message, see <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName>.\"\n  syntax:\n    content: public interface IInstanceContextInitializer\n  implements: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)\n  id: Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer\n  langs:\n  - csharp\n  name: Initialize(InstanceContext,Message)\n  nameWithType: IInstanceContextInitializer.Initialize(InstanceContext,Message)\n  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(InstanceContext,Message)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Provides the ability to modify the newly created <xref:System.ServiceModel.InstanceContext> object.\n  remarks: The Initialize method is called when an <xref:System.ServiceModel.InstanceContext> object is created. Typically this method is used to attach an extension so that custom data can be accessed throughout an application.\n  syntax:\n    content: public void Initialize (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message);\n    parameters:\n    - id: instanceContext\n      type: System.ServiceModel.InstanceContext\n      description: The system-supplied instance context.\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The message that triggered the creation of the instance context.\n  overload: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer\n  isExternal: false\n  name: Initialize(InstanceContext,Message)\n  nameWithType: IInstanceContextInitializer.Initialize(InstanceContext,Message)\n  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(InstanceContext,Message)\n- uid: System.ServiceModel.InstanceContext\n  parent: System.ServiceModel\n  isExternal: true\n  name: InstanceContext\n  nameWithType: InstanceContext\n  fullName: System.ServiceModel.InstanceContext\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize*\n  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer\n  isExternal: false\n  name: Initialize\n  nameWithType: IInstanceContextInitializer.Initialize\n"}