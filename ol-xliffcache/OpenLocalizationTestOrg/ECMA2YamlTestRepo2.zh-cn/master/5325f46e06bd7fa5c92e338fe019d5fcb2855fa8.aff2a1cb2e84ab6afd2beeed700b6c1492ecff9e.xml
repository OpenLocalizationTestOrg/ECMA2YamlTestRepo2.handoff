{"nodes":[{"pos":[630,702],"content":"Converts between type and string values. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts between type and string values. This class cannot be inherited.","pos":[0,72],"nodes":[{"content":"Converts between type and string values.","pos":[0,40]},{"content":"This class cannot be inherited.","pos":[41,72]}]}]},{"pos":[715,1147],"content":"This type, like all the other configuration converter types, converts strings found in the configuration file to and from the related strongly typed properties.       In particular, the TypeNameConverter class converts a <xref:System.String> value, assigned to a configuration type, to a <xref:System.Type> value and vice versa. The type referred to is the class responsible for processing the configuration it is associated with.","needQuote":false,"needEscape":true,"nodes":[{"content":"This type, like all the other configuration converter types, converts strings found in the configuration file to and from the related strongly typed properties.       In particular, the TypeNameConverter class converts a <xref:System.String> value, assigned to a configuration type, to a <xref:System.Type> value and vice versa. The type referred to is the class responsible for processing the configuration it is associated with.","pos":[0,430],"nodes":[{"content":"This type, like all the other configuration converter types, converts strings found in the configuration file to and from the related strongly typed properties.","pos":[0,160]},{"content":"In particular, the TypeNameConverter class converts a &lt;xref:System.String&gt; value, assigned to a configuration type, to a &lt;xref:System.Type&gt; value and vice versa.","pos":[167,328],"source":"       In particular, the TypeNameConverter class converts a <xref:System.String> value, assigned to a configuration type, to a <xref:System.Type> value and vice versa."},{"content":"The type referred to is the class responsible for processing the configuration it is associated with.","pos":[329,430]}]}]},{"pos":[6569,6669],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.TypeNameConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.TypeNameConverter\"></xref> class."},{"pos":[6681,6851],"content":"Normally, you use the converter types provided by the system. The only time you need to use the TypeNameConverter constructor is when you create your own conversion type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Normally, you use the converter types provided by the system. The only time you need to use the TypeNameConverter constructor is when you create your own conversion type.","pos":[0,170],"nodes":[{"content":"Normally, you use the converter types provided by the system.","pos":[0,61]},{"content":"The only time you need to use the TypeNameConverter constructor is when you create your own conversion type.","pos":[62,170]}]}]},{"pos":[7709,7779],"content":"Converts a <xref:System.String> object to a <xref:System.Type> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a &lt;xref:System.String&gt; object to a &lt;xref:System.Type&gt; object.","pos":[0,70],"source":"Converts a <xref:System.String> object to a <xref:System.Type> object."}]},{"pos":[7791,7939],"content":"The system uses the ConvertFrom method when reading from a configuration file to convert a <xref:System.String> value to a <xref:System.Type> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The system uses the ConvertFrom method when reading from a configuration file to convert a &lt;xref:System.String&gt; value to a &lt;xref:System.Type&gt; value.","pos":[0,148],"source":"The system uses the ConvertFrom method when reading from a configuration file to convert a <xref:System.String> value to a <xref:System.Type> value."}]},{"pos":[8206,8309],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used for type conversions.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions."},{"pos":[8387,8461],"content":"The <xref:System.Globalization.CultureInfo> object used during conversion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; object used during conversion.","pos":[0,74],"source":"The <xref:System.Globalization.CultureInfo> object used during conversion."}]},{"pos":[8522,8565],"content":"The <xref:System.String> object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.String&gt; object to convert.","pos":[0,43],"source":"The <xref:System.String> object to convert."}]},{"pos":[8623,8694],"content":"The &lt;xref:System.Type&gt; that represents the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">data</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The <xref:System.Type> that represents the <code>data</code> parameter."},{"pos":[8867,8915],"content":"The <xref:System.Type> value cannot be resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; value cannot be resolved.","pos":[0,48],"source":"The <xref:System.Type> value cannot be resolved."}]},{"pos":[9656,9726],"content":"Converts a <xref:System.Type> object to a <xref:System.String> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts a &lt;xref:System.Type&gt; object to a &lt;xref:System.String&gt; object.","pos":[0,70],"source":"Converts a <xref:System.Type> object to a <xref:System.String> object."}]},{"pos":[9738,9882],"content":"The system uses the ConvertTo method when writing to a configuration file to convert a <xref:System.Type> value to a <xref:System.String> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The system uses the ConvertTo method when writing to a configuration file to convert a &lt;xref:System.Type&gt; value to a &lt;xref:System.String&gt; value.","pos":[0,144],"source":"The system uses the ConvertTo method when writing to a configuration file to convert a <xref:System.Type> value to a <xref:System.String> value."}]},{"pos":[10159,10262],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used for type conversions.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions."},{"pos":[10340,10414],"content":"The <xref:System.Globalization.CultureInfo> object used during conversion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; object used during conversion.","pos":[0,74],"source":"The <xref:System.Globalization.CultureInfo> object used during conversion."}]},{"pos":[10476,10500],"content":"The value to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert to.","pos":[0,24]}]},{"pos":[10559,10582],"content":"The type to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert to.","pos":[0,23]}]},{"pos":[10640,10714],"content":"The &lt;xref:System.String&gt; that represents the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The <xref:System.String> that represents the <code>value</code> parameter."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.TypeNameConverter\n  id: TypeNameConverter\n  children:\n  - System.Configuration.TypeNameConverter.#ctor\n  - System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: TypeNameConverter\n  nameWithType: TypeNameConverter\n  fullName: System.Configuration.TypeNameConverter\n  type: Class\n  summary: Converts between type and string values. This class cannot be inherited.\n  remarks: \"This type, like all the other configuration converter types, converts strings found in the configuration file to and from the related strongly typed properties.  \\n  \\n In particular, the TypeNameConverter class converts a <xref:System.String> value, assigned to a configuration type, to a <xref:System.Type> value and vice versa. The type referred to is the class responsible for processing the configuration it is associated with.\"\n  example:\n  - \"The following example shows how to obtain a type associated with a custom section. For the implementation of the custom section, refer to the code example in the <xref:System.Configuration.ConfigurationConverterBase> class reference.  \\n  \\n [!code-vb[System.Configuration.TypeNameConverter#1](~/add/codesnippet/visualbasic/t-system.configuration.t_0_1.vb)]\\n [!code-cs[System.Configuration.TypeNameConverter#1](~/add/codesnippet/csharp/t-system.configuration.t_0_1.cs)]  \\n  \\n The following example is a configuration excerpt used by the previous example.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n  \\n  <configSections>  \\n    <section name=\\\"CustomSection\\\"   \\n      type=\\\"Samples.AspNet.CustomSection,   \\n      ConfigurationConverters,   \\n      Version=1.0.0.0, Culture=neutral,   \\n      PublicKeyToken=null\\\"   \\n      allowDefinition=\\\"Everywhere\\\"   \\n      allowExeDefinition=\\\"MachineToApplication\\\"   \\n      restartOnExternalChanges=\\\"true\\\" />  \\n  </configSections>  \\n  \\n  <CustomSection fileName=\\\"default.txt\\\" maxIdleTime=\\\"90\\\"   \\n    timeDelay=\\\"infinite\\\" cdStr=\\\"str0, str1\\\" permission=\\\"Read\\\"  \\n    maxUsers=\\\"Infinite\\\"/>  \\n  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public sealed class TypeNameConverter : System.Configuration.ConfigurationConverterBase'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  - System.Configuration.ConfigurationConverterBase\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  platform:\n  - net462\n- uid: System.Configuration.TypeNameConverter.#ctor\n  id: '#ctor'\n  parent: System.Configuration.TypeNameConverter\n  langs:\n  - csharp\n  name: TypeNameConverter()\n  nameWithType: TypeNameConverter.TypeNameConverter()\n  fullName: System.Configuration.TypeNameConverter.TypeNameConverter()\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.TypeNameConverter\"></xref> class.\n  remarks: Normally, you use the converter types provided by the system. The only time you need to use the TypeNameConverter constructor is when you create your own conversion type.\n  syntax:\n    content: public TypeNameConverter ();\n    parameters: []\n  overload: System.Configuration.TypeNameConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Configuration.TypeNameConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: TypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Configuration.TypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Converts a <xref:System.String> object to a <xref:System.Type> object.\n  remarks: The system uses the ConvertFrom method when reading from a configuration file to convert a <xref:System.String> value to a <xref:System.Type> value.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);\n    parameters:\n    - id: ctx\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions.\n    - id: ci\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> object used during conversion.\n    - id: data\n      type: System.Object\n      description: The <xref:System.String> object to convert.\n    return:\n      type: System.Object\n      description: The <xref:System.Type> that represents the <code>data</code> parameter.\n  overload: System.Configuration.TypeNameConverter.ConvertFrom*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref:System.Type> value cannot be resolved.\n  platform:\n  - net462\n- uid: System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Configuration.TypeNameConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: TypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Configuration.TypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Converts a <xref:System.Type> object to a <xref:System.String> object.\n  remarks: The system uses the ConvertTo method when writing to a configuration file to convert a <xref:System.Type> value to a <xref:System.String> value.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);\n    parameters:\n    - id: ctx\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions.\n    - id: ci\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> object used during conversion.\n    - id: value\n      type: System.Object\n      description: The value to convert to.\n    - id: type\n      type: System.Type\n      description: The type to convert to.\n    return:\n      type: System.Object\n      description: The <xref:System.String> that represents the <code>value</code> parameter.\n  overload: System.Configuration.TypeNameConverter.ConvertTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationConverterBase\n  isExternal: false\n  name: System.Configuration.ConfigurationConverterBase\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Configuration.TypeNameConverter.#ctor\n  parent: System.Configuration.TypeNameConverter\n  isExternal: false\n  name: TypeNameConverter()\n  nameWithType: TypeNameConverter.TypeNameConverter()\n  fullName: System.Configuration.TypeNameConverter.TypeNameConverter()\n- uid: System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Configuration.TypeNameConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: TypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Configuration.TypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Configuration.TypeNameConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: TypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Configuration.TypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.TypeNameConverter.#ctor*\n  parent: System.Configuration.TypeNameConverter\n  isExternal: false\n  name: TypeNameConverter\n  nameWithType: TypeNameConverter.TypeNameConverter\n- uid: System.Configuration.TypeNameConverter.ConvertFrom*\n  parent: System.Configuration.TypeNameConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: TypeNameConverter.ConvertFrom\n- uid: System.Configuration.TypeNameConverter.ConvertTo*\n  parent: System.Configuration.TypeNameConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: TypeNameConverter.ConvertTo\n"}