{"nodes":[{"pos":[771,951],"content":"Represents time in divisions, such as months, days, and years. Years are calculated using the Gregorian calendar, while days and months are calculated using the lunisolar calendar.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents time in divisions, such as months, days, and years. Years are calculated using the Gregorian calendar, while days and months are calculated using the lunisolar calendar.","pos":[0,180],"nodes":[{"content":"Represents time in divisions, such as months, days, and years.","pos":[0,62]},{"content":"Years are calculated using the Gregorian calendar, while days and months are calculated using the lunisolar calendar.","pos":[63,180]}]}]},{"pos":[964,3280],"content":"The KoreanLunisolarCalendar class is derived from the <xref:System.Globalization.EastAsianLunisolarCalendar> class, which represents the lunisolar calendar. The <xref:System.Globalization.EastAsianLunisolarCalendar> class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months. Each solar year in the calendar is associated with a Sexagenary Year, a Celestial Stem, and a Terrestrial Branch, and these calendars can have leap months after any month of the year.      > [!NOTE] >  For information about using the KoreanLunisolarCalendar class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/add/includes/ajax-current-ext-md.md).       The KoreanLunisolarCalendar class calculates years using the Gregorian calendar, and days and months using the <xref:System.Globalization.EastAsianLunisolarCalendar> class.       A leap month can occur after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.       Currently, the KoreanLunisolarCalendar is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class. Therefore, this class can be used only to calculate dates in the Korean lunisolar calendar.       Each <xref:System.Globalization.CultureInfo> supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The KoreanLunisolarCalendar class is derived from the &lt;xref:System.Globalization.EastAsianLunisolarCalendar&gt; class, which represents the lunisolar calendar.","pos":[0,156],"source":"The KoreanLunisolarCalendar class is derived from the <xref:System.Globalization.EastAsianLunisolarCalendar> class, which represents the lunisolar calendar."},{"content":"The &lt;xref:System.Globalization.EastAsianLunisolarCalendar&gt; class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months.","pos":[157,332],"source":" The <xref:System.Globalization.EastAsianLunisolarCalendar> class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months."},{"content":"Each solar year in the calendar is associated with a Sexagenary Year, a Celestial Stem, and a Terrestrial Branch, and these calendars can have leap months after any month of the year.","pos":[333,516]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For information about using the KoreanLunisolarCalendar class and the other calendar classes in the .NET Framework, see <bpt id=\"p1\">[</bpt>Working with Calendars<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[522,719],"source":"      > [!NOTE] >  For information about using the KoreanLunisolarCalendar class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/add/includes/ajax-current-ext-md.md)."},{"content":"The KoreanLunisolarCalendar class calculates years using the Gregorian calendar, and days and months using the &lt;xref:System.Globalization.EastAsianLunisolarCalendar&gt; class.","pos":[726,898],"source":"       The KoreanLunisolarCalendar class calculates years using the Gregorian calendar, and days and months using the <xref:System.Globalization.EastAsianLunisolarCalendar> class."},{"content":"A leap month can occur after any month in a year.","pos":[905,954]},{"content":"For example, the &lt;xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName&gt; method returns a number between 1 and 13 that indicates the month associated with a specified date.","pos":[955,1181],"source":" For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> method returns a number between 1 and 13 that indicates the month associated with a specified date."},{"content":"If there is a leap month between the eighth and ninth months of the year, the &lt;xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A&gt; method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","pos":[1182,1422],"source":" If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month."},{"content":"Currently, the KoreanLunisolarCalendar is not used by any of the cultures supported by the &lt;xref:System.Globalization.CultureInfo&gt; class.","pos":[1429,1566],"source":"       Currently, the KoreanLunisolarCalendar is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class."},{"content":"Therefore, this class can be used only to calculate dates in the Korean lunisolar calendar.","pos":[1567,1658]},{"content":"Each &lt;xref:System.Globalization.CultureInfo&gt; supports a set of calendars.","pos":[1665,1738],"source":"       Each <xref:System.Globalization.CultureInfo> supports a set of calendars."},{"content":"The &lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt; property returns the default calendar for the culture, and the &lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt; property returns an array containing all the calendars supported by the culture.","pos":[1739,1999],"source":" The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture."},{"content":"To change the calendar used by a &lt;xref:System.Globalization.CultureInfo&gt;, the application should set the &lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A&gt; property of &lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt; to a new &lt;xref:System.Globalization.Calendar&gt;.","pos":[2000,2305],"source":" To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>."}]},{"pos":[5899,6005],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class."},{"pos":[6679,6838],"content":"Gets the number of days in the year that precedes the year specified by the <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of days in the year that precedes the year specified by the &lt;xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*&gt; property.","pos":[0,159],"source":"Gets the number of days in the year that precedes the year specified by the <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*> property."}]},{"pos":[6850,6896],"content":"This property returns a constant value of 384.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property returns a constant value of 384.","pos":[0,46]}]},{"pos":[7041,7182],"content":"The number of days in the year that precedes the year specified by <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of days in the year that precedes the year specified by &lt;xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*&gt;.","pos":[0,141],"source":"The number of days in the year that precedes the year specified by <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>."}]},{"pos":[7666,7826],"content":"Gets the eras that correspond to the range of dates and times supported by the current <bpt id=\"p1\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the eras that correspond to the range of dates and times supported by the current <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> object."},{"pos":[7944,8247],"content":"An array of 32-bit signed integers that specify the relevant eras. The return value for a <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> object is always an array containing one element equal to the <xref href=\"System.Globalization.KoreanLunisolarCalendar.GregorianEra\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of 32-bit signed integers that specify the relevant eras.","pos":[0,66]},{"content":"The return value for a <bpt id=\"p1\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is always an array containing one element equal to the <bpt id=\"p2\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar.GregorianEra\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[67,303],"source":" The return value for a <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> object is always an array containing one element equal to the <xref href=\"System.Globalization.KoreanLunisolarCalendar.GregorianEra\"></xref> value."}]},{"pos":[8775,8850],"content":"Retrieves the era that corresponds to the specified <xref:System.DateTime>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the era that corresponds to the specified &lt;xref:System.DateTime&gt;.","pos":[0,75],"source":"Retrieves the era that corresponds to the specified <xref:System.DateTime>."}]},{"pos":[8996,9031],"content":"The <xref:System.DateTime> to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.DateTime&gt; to read.","pos":[0,35],"source":"The <xref:System.DateTime> to read."}]},{"pos":[9088,9364],"content":"An integer that represents the era specified by the <code>time</code> parameter. The return value for a <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> object is always the <xref href=\"System.Globalization.KoreanLunisolarCalendar.GregorianEra\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that represents the era specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,80],"source":"An integer that represents the era specified by the <code>time</code> parameter."},{"content":"The return value for a <bpt id=\"p1\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is always the <bpt id=\"p2\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar.GregorianEra\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[81,276],"source":" The return value for a <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> object is always the <xref href=\"System.Globalization.KoreanLunisolarCalendar.GregorianEra\"></xref> value."}]},{"pos":[9558,9777],"content":"<ph id=\"ph1\">&lt;code&gt;time&lt;/code&gt;</ph> represents a date and time less than <ph id=\"ph2\">&lt;xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref:System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>time</code> represents a date and time less than <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*> or greater than <xref:System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*>."},{"pos":[10190,10323],"content":"Specifies the Gregorian era that corresponds to the current <bpt id=\"p1\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Specifies the Gregorian era that corresponds to the current <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> object."},{"pos":[10336,10468],"content":"The value of this field is 1.       The <xref:System.Globalization.KoreanLunisolarCalendar> class recognizes only the current era.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of this field is 1.       The <xref:System.Globalization.KoreanLunisolarCalendar> class recognizes only the current era.","pos":[0,130],"nodes":[{"content":"The value of this field is 1.","pos":[0,29]},{"content":"The &lt;xref:System.Globalization.KoreanLunisolarCalendar&gt; class recognizes only the current era.","pos":[36,130],"source":"       The <xref:System.Globalization.KoreanLunisolarCalendar> class recognizes only the current era."}]}]},{"pos":[10584,10596],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11069,11189],"content":"Gets the maximum date and time supported by the <bpt id=\"p1\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets the maximum date and time supported by the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class."},{"pos":[11327,11534],"content":"The latest date and time supported by the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class, which is equivalent to the last  moment of February 10, 2051 C.E. in the Gregorian calendar.","needQuote":true,"needEscape":true,"nodes":[{"content":"The latest date and time supported by the <bpt id=\"p1\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, which is equivalent to the last  moment of February 10, 2051 C.E.","pos":[0,180],"source":"The latest date and time supported by the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class, which is equivalent to the last  moment of February 10, 2051 C.E."},{"content":"in the Gregorian calendar.","pos":[181,207]}]},{"pos":[12086,12206],"content":"Gets the minimum date and time supported by the <bpt id=\"p1\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets the minimum date and time supported by the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class."},{"pos":[12344,12552],"content":"The earliest date and time supported by the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class, which is equivalent to the first moment of February 14, 918 C.E. in the Gregorian calendar.","needQuote":true,"needEscape":true,"nodes":[{"content":"The earliest date and time supported by the <bpt id=\"p1\">&lt;xref href=\"System.Globalization.KoreanLunisolarCalendar\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, which is equivalent to the first moment of February 14, 918 C.E.","pos":[0,181],"source":"The earliest date and time supported by the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class, which is equivalent to the first moment of February 14, 918 C.E."},{"content":"in the Gregorian calendar.","pos":[182,208]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Globalization.KoreanLunisolarCalendar\n  id: KoreanLunisolarCalendar\n  children:\n  - System.Globalization.KoreanLunisolarCalendar.#ctor\n  - System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  - System.Globalization.KoreanLunisolarCalendar.Eras\n  - System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)\n  - System.Globalization.KoreanLunisolarCalendar.GregorianEra\n  - System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime\n  - System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime\n  langs:\n  - csharp\n  name: KoreanLunisolarCalendar\n  nameWithType: KoreanLunisolarCalendar\n  fullName: System.Globalization.KoreanLunisolarCalendar\n  type: Class\n  summary: Represents time in divisions, such as months, days, and years. Years are calculated using the Gregorian calendar, while days and months are calculated using the lunisolar calendar.\n  remarks: \"The KoreanLunisolarCalendar class is derived from the <xref:System.Globalization.EastAsianLunisolarCalendar> class, which represents the lunisolar calendar. The <xref:System.Globalization.EastAsianLunisolarCalendar> class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months. Each solar year in the calendar is associated with a Sexagenary Year, a Celestial Stem, and a Terrestrial Branch, and these calendars can have leap months after any month of the year.  \\n  \\n> [!NOTE]\\n>  For information about using the KoreanLunisolarCalendar class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The KoreanLunisolarCalendar class calculates years using the Gregorian calendar, and days and months using the <xref:System.Globalization.EastAsianLunisolarCalendar> class.  \\n  \\n A leap month can occur after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.  \\n  \\n Currently, the KoreanLunisolarCalendar is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class. Therefore, this class can be used only to calculate dates in the Korean lunisolar calendar.  \\n  \\n Each <xref:System.Globalization.CultureInfo> supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>.\"\n  syntax:\n    content: 'public class KoreanLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'\n  inheritance:\n  - System.Globalization.Calendar\n  - System.Globalization.EastAsianLunisolarCalendar\n  implements: []\n  inheritedMembers:\n  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType\n  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax\n  platform:\n  - net462\n- uid: System.Globalization.KoreanLunisolarCalendar.#ctor\n  id: '#ctor'\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: KoreanLunisolarCalendar()\n  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar()\n  fullName: System.Globalization.KoreanLunisolarCalendar.KoreanLunisolarCalendar()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Initializes a new instance of the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class.\n  syntax:\n    content: public KoreanLunisolarCalendar ();\n    parameters: []\n  overload: System.Globalization.KoreanLunisolarCalendar.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  id: DaysInYearBeforeMinSupportedYear\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  fullName: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Gets the number of days in the year that precedes the year specified by the <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*> property.\n  remarks: This property returns a constant value of 384.\n  syntax:\n    content: protected override int DaysInYearBeforeMinSupportedYear { get; }\n    return:\n      type: System.Int32\n      description: The number of days in the year that precedes the year specified by <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>.\n  overload: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.KoreanLunisolarCalendar.Eras\n  id: Eras\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: Eras\n  nameWithType: KoreanLunisolarCalendar.Eras\n  fullName: System.Globalization.KoreanLunisolarCalendar.Eras\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Gets the eras that correspond to the range of dates and times supported by the current <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> object.\n  syntax:\n    content: public override int[] Eras { get; }\n    return:\n      type: System.Int32[]\n      description: An array of 32-bit signed integers that specify the relevant eras. The return value for a <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> object is always an array containing one element equal to the <xref href=\"System.Globalization.KoreanLunisolarCalendar.GregorianEra\"></xref> value.\n  overload: System.Globalization.KoreanLunisolarCalendar.Eras*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)\n  id: GetEra(System.DateTime)\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: GetEra(DateTime)\n  nameWithType: KoreanLunisolarCalendar.GetEra(DateTime)\n  fullName: System.Globalization.KoreanLunisolarCalendar.GetEra(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Retrieves the era that corresponds to the specified <xref:System.DateTime>.\n  syntax:\n    content: public override int GetEra (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref:System.DateTime> to read.\n    return:\n      type: System.Int32\n      description: An integer that represents the era specified by the <code>time</code> parameter. The return value for a <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> object is always the <xref href=\"System.Globalization.KoreanLunisolarCalendar.GregorianEra\"></xref> value.\n  overload: System.Globalization.KoreanLunisolarCalendar.GetEra*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>time</code> represents a date and time less than <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*> or greater than <xref:System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*>.\n  platform:\n  - net462\n- uid: System.Globalization.KoreanLunisolarCalendar.GregorianEra\n  id: GregorianEra\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: GregorianEra\n  nameWithType: KoreanLunisolarCalendar.GregorianEra\n  fullName: System.Globalization.KoreanLunisolarCalendar.GregorianEra\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Specifies the Gregorian era that corresponds to the current <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> object.\n  remarks: \"The value of this field is 1.  \\n  \\n The <xref:System.Globalization.KoreanLunisolarCalendar> class recognizes only the current era.\"\n  syntax:\n    content: public const int GregorianEra = 1;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime\n  id: MaxSupportedDateTime\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: MaxSupportedDateTime\n  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime\n  fullName: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Gets the maximum date and time supported by the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class.\n  syntax:\n    content: public override DateTime MaxSupportedDateTime { get; }\n    return:\n      type: System.DateTime\n      description: The latest date and time supported by the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class, which is equivalent to the last  moment of February 10, 2051 C.E. in the Gregorian calendar.\n  overload: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime\n  id: MinSupportedDateTime\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: MinSupportedDateTime\n  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime\n  fullName: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  summary: Gets the minimum date and time supported by the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class.\n  syntax:\n    content: public override DateTime MinSupportedDateTime { get; }\n    return:\n      type: System.DateTime\n      description: The earliest date and time supported by the <xref href=\"System.Globalization.KoreanLunisolarCalendar\"></xref> class, which is equivalent to the first moment of February 14, 918 C.E. in the Gregorian calendar.\n  overload: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Globalization.EastAsianLunisolarCalendar\n  isExternal: false\n  name: System.Globalization.EastAsianLunisolarCalendar\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Globalization.KoreanLunisolarCalendar.#ctor\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: KoreanLunisolarCalendar()\n  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar()\n  fullName: System.Globalization.KoreanLunisolarCalendar.KoreanLunisolarCalendar()\n- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  fullName: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.KoreanLunisolarCalendar.Eras\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: Eras\n  nameWithType: KoreanLunisolarCalendar.Eras\n  fullName: System.Globalization.KoreanLunisolarCalendar.Eras\n- uid: System.Int32[]\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: GetEra(DateTime)\n  nameWithType: KoreanLunisolarCalendar.GetEra(DateTime)\n  fullName: System.Globalization.KoreanLunisolarCalendar.GetEra(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Globalization.KoreanLunisolarCalendar.GregorianEra\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: GregorianEra\n  nameWithType: KoreanLunisolarCalendar.GregorianEra\n  fullName: System.Globalization.KoreanLunisolarCalendar.GregorianEra\n- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: MaxSupportedDateTime\n  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime\n  fullName: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime\n- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: MinSupportedDateTime\n  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime\n  fullName: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime\n- uid: System.Globalization.KoreanLunisolarCalendar.#ctor*\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: KoreanLunisolarCalendar\n  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar\n- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear*\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n- uid: System.Globalization.KoreanLunisolarCalendar.Eras*\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: Eras\n  nameWithType: KoreanLunisolarCalendar.Eras\n- uid: System.Globalization.KoreanLunisolarCalendar.GetEra*\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: GetEra\n  nameWithType: KoreanLunisolarCalendar.GetEra\n- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: MaxSupportedDateTime\n  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime\n- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: MinSupportedDateTime\n  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime\n"}