{"nodes":[{"pos":[1085,1200],"content":"Defines the client endpoint behavior used to marshal messages between different binding types and message versions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the client endpoint behavior used to marshal messages between different binding types and message versions.","pos":[0,115]}]},{"pos":[1213,2129],"content":"SOAP processing is the process where messages are converted between message versions.       Processing messages from one <xref:System.ServiceModel.Channels.MessageVersion> to another is accomplished by constructing a new WCF message that contains the body part and relevant headers from the incoming WCF message. Headers that are specific to addressing, or that are understood at the router level, are not used during construction of the new WCF message because these headers are either of a different version (in the case of addressing headers) or have been processed as part of the communication between the client and the router.       Whether a header is placed in the outbound message is determined by whether or not it was marked as understood as it passed through the incoming channel layer. Headers that are not understood (such as custom headers) are not removed and so pass through the routing service.","needQuote":false,"needEscape":true,"nodes":[{"content":"SOAP processing is the process where messages are converted between message versions.       Processing messages from one <xref:System.ServiceModel.Channels.MessageVersion> to another is accomplished by constructing a new WCF message that contains the body part and relevant headers from the incoming WCF message. Headers that are specific to addressing, or that are understood at the router level, are not used during construction of the new WCF message because these headers are either of a different version (in the case of addressing headers) or have been processed as part of the communication between the client and the router.       Whether a header is placed in the outbound message is determined by whether or not it was marked as understood as it passed through the incoming channel layer. Headers that are not understood (such as custom headers) are not removed and so pass through the routing service.","pos":[0,912],"nodes":[{"content":"SOAP processing is the process where messages are converted between message versions.","pos":[0,85]},{"content":"Processing messages from one &lt;xref:System.ServiceModel.Channels.MessageVersion&gt; to another is accomplished by constructing a new WCF message that contains the body part and relevant headers from the incoming WCF message.","pos":[92,312],"source":"       Processing messages from one <xref:System.ServiceModel.Channels.MessageVersion> to another is accomplished by constructing a new WCF message that contains the body part and relevant headers from the incoming WCF message."},{"content":"Headers that are specific to addressing, or that are understood at the router level, are not used during construction of the new WCF message because these headers are either of a different version (in the case of addressing headers) or have been processed as part of the communication between the client and the router.","pos":[313,632]},{"content":"Whether a header is placed in the outbound message is determined by whether or not it was marked as understood as it passed through the incoming channel layer.","pos":[639,798]},{"content":"Headers that are not understood (such as custom headers) are not removed and so pass through the routing service.","pos":[799,912]}]}]},{"pos":[2853,2961],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.SoapProcessingBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.ServiceModel.Routing.SoapProcessingBehavior\"></xref> class."},{"pos":[3963,4004],"content":"Adds new binding elements to an endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds new binding elements to an endpoint.","pos":[0,41]}]},{"pos":[4310,4364],"content":"The service endpoint to apply the binding elements to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service endpoint to apply the binding elements to.","pos":[0,54]}]},{"pos":[4480,4538],"content":"The binding parameter collection to apply to the endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding parameter collection to apply to the endpoint.","pos":[0,58]}]},{"pos":[5413,5467],"content":"Applies the specified endpoint behavior to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies the specified endpoint behavior to the client.","pos":[0,54]}]},{"pos":[5757,5801],"content":"The service endpoint to apply to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service endpoint to apply to the client.","pos":[0,44]}]},{"pos":[5902,5928],"content":"The runtime on the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The runtime on the client.","pos":[0,26]}]},{"pos":[6837,6904],"content":"Applies the specified endpoint behavior to the endpoint dispatcher.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies the specified endpoint behavior to the endpoint dispatcher.","pos":[0,67]}]},{"pos":[7206,7250],"content":"The service endpoint to apply to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service endpoint to apply to the client.","pos":[0,44]}]},{"pos":[7361,7385],"content":"The endpoint dispatcher.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint dispatcher.","pos":[0,24]}]},{"pos":[7962,8035],"content":"Gets or sets a value that indicates whether messages should be processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether messages should be processed.","pos":[0,73]}]},{"pos":[8048,9009],"content":"By default, the <xref:System.ServiceModel.Routing.RoutingBehavior> creates and attaches a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with ProcessMessages set to `true` for each client endpoint. If you do not want to use the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on a specific endpoint, create a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with this value set to `false`, and then attach it to the endpoint on which you do not want processing to occur. If the <xref:System.ServiceModel.Routing.RoutingBehavior> observes that a client already has a <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, it does not attempt to attach another.       To disable the application of <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on any endpoint, disable SOAP processing on the <xref:System.ServiceModel.Routing.RoutingBehavior> and the <xref:System.ServiceModel.Routing.RoutingConfiguration>.","needQuote":false,"needEscape":true,"nodes":[{"content":"By default, the &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt; creates and attaches a new &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; with ProcessMessages set to <ph id=\"ph1\">`true`</ph> for each client endpoint.","pos":[0,212],"source":"By default, the <xref:System.ServiceModel.Routing.RoutingBehavior> creates and attaches a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with ProcessMessages set to `true` for each client endpoint."},{"content":"If you do not want to use the &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; on a specific endpoint, create a new &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; with this value set to <ph id=\"ph1\">`false`</ph>, and then attach it to the endpoint on which you do not want processing to occur.","pos":[213,508],"source":" If you do not want to use the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on a specific endpoint, create a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with this value set to `false`, and then attach it to the endpoint on which you do not want processing to occur."},{"content":"If the &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt; observes that a client already has a &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;, it does not attempt to attach another.","pos":[509,701],"source":" If the <xref:System.ServiceModel.Routing.RoutingBehavior> observes that a client already has a <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, it does not attempt to attach another."},{"content":"To disable the application of &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt; on any endpoint, disable SOAP processing on the &lt;xref:System.ServiceModel.Routing.RoutingBehavior&gt; and the &lt;xref:System.ServiceModel.Routing.RoutingConfiguration&gt;.","pos":[708,959],"source":"       To disable the application of <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on any endpoint, disable SOAP processing on the <xref:System.ServiceModel.Routing.RoutingBehavior> and the <xref:System.ServiceModel.Routing.RoutingConfiguration>."}]},{"pos":[9135,9229],"content":"**true** if messages should be marshaled; otherwise, **false**. The default value is **true**.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if messages should be marshaled; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","pos":[0,63],"source":"**true** if messages should be marshaled; otherwise, **false**."},{"content":"The default value is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[64,94],"source":" The default value is **true**."}]},{"pos":[9913,9944],"content":"Validates the service endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the service endpoint.","pos":[0,31]}]},{"pos":[10163,10196],"content":"The service endpoint to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service endpoint to validate.","pos":[0,33]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior\n  id: SoapProcessingBehavior\n  children:\n  - System.ServiceModel.Routing.SoapProcessingBehavior.#ctor\n  - System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)\n  - System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)\n  - System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages\n  - System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)\n  langs:\n  - csharp\n  name: SoapProcessingBehavior\n  nameWithType: SoapProcessingBehavior\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior\n  type: Class\n  summary: Defines the client endpoint behavior used to marshal messages between different binding types and message versions.\n  remarks: \"SOAP processing is the process where messages are converted between message versions.  \\n  \\n Processing messages from one <xref:System.ServiceModel.Channels.MessageVersion> to another is accomplished by constructing a new WCF message that contains the body part and relevant headers from the incoming WCF message. Headers that are specific to addressing, or that are understood at the router level, are not used during construction of the new WCF message because these headers are either of a different version (in the case of addressing headers) or have been processed as part of the communication between the client and the router.  \\n  \\n Whether a header is placed in the outbound message is determined by whether or not it was marked as understood as it passed through the incoming channel layer. Headers that are not understood (such as custom headers) are not removed and so pass through the routing service.\"\n  syntax:\n    content: 'public class SoapProcessingBehavior : System.ServiceModel.Description.IEndpointBehavior'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ServiceModel.Description.IEndpointBehavior\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  langs:\n  - csharp\n  name: SoapProcessingBehavior()\n  nameWithType: SoapProcessingBehavior.SoapProcessingBehavior()\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.SoapProcessingBehavior()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Creates a new instance of the <xref href=\"System.ServiceModel.Routing.SoapProcessingBehavior\"></xref> class.\n  syntax:\n    content: public SoapProcessingBehavior ();\n    parameters: []\n  overload: System.ServiceModel.Routing.SoapProcessingBehavior.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)\n  id: AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  langs:\n  - csharp\n  name: AddBindingParameters(ServiceEndpoint,BindingParameterCollection)\n  nameWithType: SoapProcessingBehavior.AddBindingParameters(ServiceEndpoint,BindingParameterCollection)\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(ServiceEndpoint,BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Adds new binding elements to an endpoint.\n  syntax:\n    content: public void AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The service endpoint to apply the binding elements to.\n    - id: bindingParameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The binding parameter collection to apply to the endpoint.\n  overload: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)\n  id: ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  langs:\n  - csharp\n  name: ApplyClientBehavior(ServiceEndpoint,ClientRuntime)\n  nameWithType: SoapProcessingBehavior.ApplyClientBehavior(ServiceEndpoint,ClientRuntime)\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(ServiceEndpoint,ClientRuntime)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Applies the specified endpoint behavior to the client.\n  syntax:\n    content: public void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The service endpoint to apply to the client.\n    - id: clientRuntime\n      type: System.ServiceModel.Dispatcher.ClientRuntime\n      description: The runtime on the client.\n  overload: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)\n  id: ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  langs:\n  - csharp\n  name: ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)\n  nameWithType: SoapProcessingBehavior.ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Applies the specified endpoint behavior to the endpoint dispatcher.\n  syntax:\n    content: public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The service endpoint to apply to the client.\n    - id: endpointDispatcher\n      type: System.ServiceModel.Dispatcher.EndpointDispatcher\n      description: The endpoint dispatcher.\n  overload: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages\n  id: ProcessMessages\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  langs:\n  - csharp\n  name: ProcessMessages\n  nameWithType: SoapProcessingBehavior.ProcessMessages\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Gets or sets a value that indicates whether messages should be processed.\n  remarks: \"By default, the <xref:System.ServiceModel.Routing.RoutingBehavior> creates and attaches a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with ProcessMessages set to `true` for each client endpoint. If you do not want to use the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on a specific endpoint, create a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with this value set to `false`, and then attach it to the endpoint on which you do not want processing to occur. If the <xref:System.ServiceModel.Routing.RoutingBehavior> observes that a client already has a <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, it does not attempt to attach another.  \\n  \\n To disable the application of <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on any endpoint, disable SOAP processing on the <xref:System.ServiceModel.Routing.RoutingBehavior> and the <xref:System.ServiceModel.Routing.RoutingConfiguration>.\"\n  syntax:\n    content: public bool ProcessMessages { get; set; }\n    return:\n      type: System.Boolean\n      description: '**true** if messages should be marshaled; otherwise, **false**. The default value is **true**.'\n  overload: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)\n  id: Validate(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  langs:\n  - csharp\n  name: Validate(ServiceEndpoint)\n  nameWithType: SoapProcessingBehavior.Validate(ServiceEndpoint)\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.Validate(ServiceEndpoint)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Validates the service endpoint.\n  syntax:\n    content: public void Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The service endpoint to validate.\n  overload: System.ServiceModel.Routing.SoapProcessingBehavior.Validate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.#ctor\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: SoapProcessingBehavior()\n  nameWithType: SoapProcessingBehavior.SoapProcessingBehavior()\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.SoapProcessingBehavior()\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: AddBindingParameters(ServiceEndpoint,BindingParameterCollection)\n  nameWithType: SoapProcessingBehavior.AddBindingParameters(ServiceEndpoint,BindingParameterCollection)\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(ServiceEndpoint,BindingParameterCollection)\n- uid: System.ServiceModel.Description.ServiceEndpoint\n  parent: System.ServiceModel.Description\n  isExternal: true\n  name: ServiceEndpoint\n  nameWithType: ServiceEndpoint\n  fullName: System.ServiceModel.Description.ServiceEndpoint\n- uid: System.ServiceModel.Channels.BindingParameterCollection\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: BindingParameterCollection\n  nameWithType: BindingParameterCollection\n  fullName: System.ServiceModel.Channels.BindingParameterCollection\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: ApplyClientBehavior(ServiceEndpoint,ClientRuntime)\n  nameWithType: SoapProcessingBehavior.ApplyClientBehavior(ServiceEndpoint,ClientRuntime)\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(ServiceEndpoint,ClientRuntime)\n- uid: System.ServiceModel.Dispatcher.ClientRuntime\n  parent: System.ServiceModel.Dispatcher\n  isExternal: true\n  name: ClientRuntime\n  nameWithType: ClientRuntime\n  fullName: System.ServiceModel.Dispatcher.ClientRuntime\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)\n  nameWithType: SoapProcessingBehavior.ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)\n- uid: System.ServiceModel.Dispatcher.EndpointDispatcher\n  parent: System.ServiceModel.Dispatcher\n  isExternal: true\n  name: EndpointDispatcher\n  nameWithType: EndpointDispatcher\n  fullName: System.ServiceModel.Dispatcher.EndpointDispatcher\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: ProcessMessages\n  nameWithType: SoapProcessingBehavior.ProcessMessages\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: Validate(ServiceEndpoint)\n  nameWithType: SoapProcessingBehavior.Validate(ServiceEndpoint)\n  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.Validate(ServiceEndpoint)\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.#ctor*\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: SoapProcessingBehavior\n  nameWithType: SoapProcessingBehavior.SoapProcessingBehavior\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters*\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: AddBindingParameters\n  nameWithType: SoapProcessingBehavior.AddBindingParameters\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior*\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: ApplyClientBehavior\n  nameWithType: SoapProcessingBehavior.ApplyClientBehavior\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior*\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: ApplyDispatchBehavior\n  nameWithType: SoapProcessingBehavior.ApplyDispatchBehavior\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages*\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: ProcessMessages\n  nameWithType: SoapProcessingBehavior.ProcessMessages\n- uid: System.ServiceModel.Routing.SoapProcessingBehavior.Validate*\n  parent: System.ServiceModel.Routing.SoapProcessingBehavior\n  isExternal: false\n  name: Validate\n  nameWithType: SoapProcessingBehavior.Validate\n"}