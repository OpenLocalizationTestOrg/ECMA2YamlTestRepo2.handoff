{"nodes":[{"pos":[707,839],"content":"Represents the coordinates of a three-dimensional (3D) data point. This class is used when performing custom drawing with 3D charts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the coordinates of a three-dimensional (3D) data point. This class is used when performing custom drawing with 3D charts.","pos":[0,132],"nodes":[{"content":"Represents the coordinates of a three-dimensional (3D) data point.","pos":[0,66]},{"content":"This class is used when performing custom drawing with 3D charts.","pos":[67,132]}]}]},{"pos":[852,1917],"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y-values of the Point3D objects are changed so that they reflect the 3-dimensional space. The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method.       Note that the Z coordinate may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).       To both enable 3D charts and work with their styles, use the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> property. The Point3D class is not used for 3D styles.","needQuote":false,"needEscape":true,"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y-values of the Point3D objects are changed so that they reflect the 3-dimensional space. The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method.       Note that the Z coordinate may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).       To both enable 3D charts and work with their styles, use the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> property. The Point3D class is not used for 3D styles.","pos":[0,1061],"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt; method.","pos":[0,271],"source":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method."},{"content":"By calling &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;, the X and Y-values of the Point3D objects are changed so that they reflect the 3-dimensional space.","pos":[272,467],"source":" By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y-values of the Point3D objects are changed so that they reflect the 3-dimensional space."},{"content":"The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A&gt; method.","pos":[468,718],"source":" The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method."},{"content":"Note that the Z coordinate may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).","pos":[725,859]},{"content":"To both enable 3D charts and work with their styles, use the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A&gt; property.","pos":[866,1016],"source":"       To both enable 3D charts and work with their styles, use the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> property."},{"content":"The Point3D class is not used for 3D styles.","pos":[1017,1061]}]}]},{"pos":[2507,2624],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.Point3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.Point3D\"></xref> class."},{"pos":[3395,3566],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified X, Y and Z coordinates.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint\"></xref> class with the specified X, Y and Z coordinates."},{"pos":[3707,3736],"content":"The X coordinate of 3D point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X coordinate of 3D point.","pos":[0,29]}]},{"pos":[3794,3823],"content":"The Y coordinate of 3D point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Y coordinate of 3D point.","pos":[0,29]}]},{"pos":[3881,3938],"content":"The Z coordinate, which represents the depth of 3D point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Z coordinate, which represents the depth of 3D point.","pos":[0,57]}]},{"pos":[4490,4610],"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure, which stores the X and Y coordinates of a 3D point.","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref href=\"System.Drawing.PointF\"></xref> structure, which stores the X and Y coordinates of a 3D point."},{"pos":[4623,5554],"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects as its only parameter. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y property values are changed to reflect the 3-dimensional space.       These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. After converting the coordinates, the PointF property of each Point3D object can be used for any GDI+ method that take a <xref:System.Drawing.PointF> object as a parameter.","needQuote":false,"needEscape":true,"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects as its only parameter. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y property values are changed to reflect the 3-dimensional space.       These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. After converting the coordinates, the PointF property of each Point3D object can be used for any GDI+ method that take a <xref:System.Drawing.PointF> object as a parameter.","pos":[0,929],"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt; method.","pos":[0,253],"source":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method."},{"content":"This method takes an array of &lt;xref:System.Windows.Forms.DataVisualization.Charting.Point3D&gt; objects as its only parameter.","pos":[254,377],"source":" This method takes an array of <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects as its only parameter."},{"content":"By calling &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[378,549],"source":" By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y property values are changed to reflect the 3-dimensional space."},{"content":"These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A&gt; method.","pos":[556,756],"source":"       These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method."},{"content":"After converting the coordinates, the PointF property of each Point3D object can be used for any GDI+ method that take a &lt;xref:System.Drawing.PointF&gt; object as a parameter.","pos":[757,929],"source":" After converting the coordinates, the PointF property of each Point3D object can be used for any GDI+ method that take a <xref:System.Drawing.PointF> object as a parameter."}]}]},{"pos":[5694,5800],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure which stores the X and Y coordinates of a 3D point.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.PointF\"></xref> structure which stores the X and Y coordinates of a 3D point."},{"pos":[6328,6372],"content":"Gets or sets the X coordinate of a 3D point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the X coordinate of a 3D point.","pos":[0,44]}]},{"pos":[6385,7289],"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.       These new X and Y coordinates are then converted to absolute coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.       A relative X coordinate can be obtained from an axis value by calling the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.       These new X and Y coordinates are then converted to absolute coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.       A relative X coordinate can be obtained from an axis value by calling the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.","pos":[0,900],"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt; method.","pos":[0,253],"source":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method."},{"content":"This method takes an array of Point3D objects as its only parameter.","pos":[254,322]},{"content":"By calling the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt; method, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[323,505],"source":" By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space."},{"content":"These new X and Y coordinates are then converted to absolute coordinates using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A&gt; method.","pos":[512,691],"source":"       These new X and Y coordinates are then converted to absolute coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method."},{"content":"They are then used for GDI+ method calls.","pos":[692,733]},{"content":"A relative X coordinate can be obtained from an axis value by calling the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A&gt; method.","pos":[740,900],"source":"       A relative X coordinate can be obtained from an axis value by calling the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method."}]}]},{"pos":[7400,7512],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the X coordinate of a 3D point.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref> that represents the X coordinate of a 3D point."},{"pos":[8035,8079],"content":"Gets or sets the Y coordinate of a 3D point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the Y coordinate of a 3D point.","pos":[0,44]}]},{"pos":[8092,8994],"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.       These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.       A relative Y coordinate can be obtained from an axis value using the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.       These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.       A relative Y coordinate can be obtained from an axis value using the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.","pos":[0,898],"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt; method.","pos":[0,253],"source":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method."},{"content":"This method takes an array of Point3D objects as its only parameter.","pos":[254,322]},{"content":"By calling the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt; method, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[323,505],"source":" By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space."},{"content":"These new X and Y coordinates are then converted to absolute coordinates by using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A&gt; method.","pos":[512,694],"source":"       These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method."},{"content":"They are then used for GDI+ method calls.","pos":[695,736]},{"content":"A relative Y coordinate can be obtained from an axis value using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A&gt; method.","pos":[743,898],"source":"       A relative Y coordinate can be obtained from an axis value using the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method."}]}]},{"pos":[9105,9223],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the Y coordinate of a 3D point.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref> value that represents the Y coordinate of a 3D point."},{"pos":[9746,9790],"content":"Gets or sets the Z coordinate of a 3D point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the Z coordinate of a 3D point.","pos":[0,44]}]},{"pos":[9803,11191],"content":"This Z property is always expressed as a percentage of the relevant chart area's depth. With 3D charts, Z coordinates are relative, and have a value of 0 for the back wall of the chart area and a value of 100 for the front wall of the chart area.       **Note** This Z property may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).       Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.       These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.       Relative Z coordinates can be obtained for series by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> methods.","needQuote":false,"needEscape":true,"nodes":[{"content":"This Z property is always expressed as a percentage of the relevant chart area's depth.","pos":[0,87]},{"content":"With 3D charts, Z coordinates are relative, and have a value of 0 for the back wall of the chart area and a value of 100 for the front wall of the chart area.","pos":[88,246]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This Z property may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).","pos":[253,385],"source":"**Note** This Z property may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area)."},{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt; method.","pos":[392,645],"source":"       Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method."},{"content":"This method takes an array of Point3D objects as its only parameter.","pos":[646,714]},{"content":"By calling the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt; method, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[715,897],"source":" By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space."},{"content":"These new X and Y coordinates are then converted to absolute coordinates by using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A&gt; method.","pos":[904,1086],"source":"       These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method."},{"content":"They are then used for GDI+ method calls.","pos":[1087,1128]},{"content":"Relative Z coordinates can be obtained for series by using the &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A&gt; and &lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A&gt; methods.","pos":[1135,1380],"source":"       Relative Z coordinates can be obtained for series by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> methods."}]},{"pos":[11302,11403],"content":"The Z coordinate of a 3D point, which is measured as a percentage of the relevant chart area's depth.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Z coordinate of a 3D point, which is measured as a percentage of the relevant chart area's depth.","pos":[0,101]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D\n  id: Point3D\n  children:\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.PointF\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.X\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.Y\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.Z\n  langs:\n  - csharp\n  name: Point3D\n  nameWithType: Point3D\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D\n  type: Class\n  summary: Represents the coordinates of a three-dimensional (3D) data point. This class is used when performing custom drawing with 3D charts.\n  remarks: \"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y-values of the Point3D objects are changed so that they reflect the 3-dimensional space. The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method.  \\n  \\n Note that the Z coordinate may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).  \\n  \\n To both enable 3D charts and work with their styles, use the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> property. The Point3D class is not used for 3D styles.\"\n  syntax:\n    content: public class Point3D\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: Point3D()\n  nameWithType: Point3D.Point3D()\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.Point3D()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.Point3D\"></xref> class.\n  syntax:\n    content: public Point3D ();\n    parameters: []\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single,System.Single)'\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: Point3D(Single,Single,Single)\n  nameWithType: Point3D.Point3D(Single,Single,Single)\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.Point3D(Single,Single,Single)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint\"></xref> class with the specified X, Y and Z coordinates.\n  syntax:\n    content: public Point3D (float x, float y, float z);\n    parameters:\n    - id: x\n      type: System.Single\n      description: The X coordinate of 3D point.\n    - id: y\n      type: System.Single\n      description: The Y coordinate of 3D point.\n    - id: z\n      type: System.Single\n      description: The Z coordinate, which represents the depth of 3D point.\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.PointF\n  id: PointF\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: PointF\n  nameWithType: Point3D.PointF\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.PointF\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets a <xref href=\"System.Drawing.PointF\"></xref> structure, which stores the X and Y coordinates of a 3D point.\n  remarks: \"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects as its only parameter. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y property values are changed to reflect the 3-dimensional space.  \\n  \\n These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. After converting the coordinates, the PointF property of each Point3D object can be used for any GDI+ method that take a <xref:System.Drawing.PointF> object as a parameter.\"\n  syntax:\n    content: public System.Drawing.PointF PointF { get; set; }\n    return:\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> structure which stores the X and Y coordinates of a 3D point.\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.PointF*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.X\n  id: X\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: X\n  nameWithType: Point3D.X\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.X\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the X coordinate of a 3D point.\n  remarks: \"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.  \\n  \\n These new X and Y coordinates are then converted to absolute coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.  \\n  \\n A relative X coordinate can be obtained from an axis value by calling the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.\"\n  syntax:\n    content: public float X { get; set; }\n    return:\n      type: System.Single\n      description: A <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref> that represents the X coordinate of a 3D point.\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.X*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Y\n  id: Y\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: Y\n  nameWithType: Point3D.Y\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.Y\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the Y coordinate of a 3D point.\n  remarks: \"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.  \\n  \\n These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.  \\n  \\n A relative Y coordinate can be obtained from an axis value using the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.\"\n  syntax:\n    content: public float Y { get; set; }\n    return:\n      type: System.Single\n      description: A <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref> value that represents the Y coordinate of a 3D point.\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.Y*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Z\n  id: Z\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: Z\n  nameWithType: Point3D.Z\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.Z\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the Z coordinate of a 3D point.\n  remarks: \"This Z property is always expressed as a percentage of the relevant chart area's depth. With 3D charts, Z coordinates are relative, and have a value of 0 for the back wall of the chart area and a value of 100 for the front wall of the chart area.  \\n  \\n **Note** This Z property may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).  \\n  \\n Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.  \\n  \\n These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.  \\n  \\n Relative Z coordinates can be obtained for series by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> methods.\"\n  syntax:\n    content: public float Z { get; set; }\n    return:\n      type: System.Single\n      description: The Z coordinate of a 3D point, which is measured as a percentage of the relevant chart area's depth.\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.Z*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Point3D()\n  nameWithType: Point3D.Point3D()\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.Point3D()\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Point3D(Single,Single,Single)\n  nameWithType: Point3D.Point3D(Single,Single,Single)\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.Point3D(Single,Single,Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.PointF\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: PointF\n  nameWithType: Point3D.PointF\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.PointF\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  nameWithType: PointF\n  fullName: System.Drawing.PointF\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.X\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: X\n  nameWithType: Point3D.X\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.X\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Y\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Y\n  nameWithType: Point3D.Y\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.Y\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Z\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Z\n  nameWithType: Point3D.Z\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D.Z\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor*\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Point3D\n  nameWithType: Point3D.Point3D\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.PointF*\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: PointF\n  nameWithType: Point3D.PointF\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.X*\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: X\n  nameWithType: Point3D.X\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Y*\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Y\n  nameWithType: Point3D.Y\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Z*\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Z\n  nameWithType: Point3D.Z\n"}