{"nodes":[{"pos":[1497,1572],"content":"Provides a common base implementation for channel listeners on the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a common base implementation for channel listeners on the service.","pos":[0,75]}]},{"pos":[1584,2298],"content":"The channel listeners on the service wait for and then accept the channels created by factories on the client. Once the channel connection is established between client and service, messages can be exchanged and distributed applications can communicate. The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] features to deploy. Each channel listener in the service stack corresponds to a channel factory in the client stack. The channel created by the factory is really a stack of channels that are accepted and processed by the stack of listeners on the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The channel listeners on the service wait for and then accept the channels created by factories on the client.","pos":[0,110]},{"content":"Once the channel connection is established between client and service, messages can be exchanged and distributed applications can communicate.","pos":[111,253]},{"content":"The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> features to deploy.","pos":[254,478],"source":" The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] features to deploy."},{"content":"Each channel listener in the service stack corresponds to a channel factory in the client stack.","pos":[479,575]},{"content":"The channel created by the factory is really a stack of channels that are accepted and processed by the stack of listeners on the service.","pos":[576,714]}]},{"pos":[3077,3187],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"></xref> class."},{"pos":[3199,3615],"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","pos":[0,416],"nodes":[{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages.","pos":[0,118]},{"content":"The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.","pos":[119,227]},{"content":"Use &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt; if you want to specify other values for these operation timeouts.","pos":[228,416],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts."}]}]},{"pos":[4426,4582],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with specified default communication timeouts.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"></xref> class with specified default communication timeouts."},{"pos":[4594,4798],"content":"Use ChannelListenerBase instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use ChannelListenerBase instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","pos":[0,204]}]},{"pos":[5030,5196],"content":"The <xref:System.ServiceModel.IDefaultCommunicationTimeouts> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.IDefaultCommunicationTimeouts&gt; that specify the default timeouts for open, send, receive, and close operations when exchanging messages.","pos":[0,166],"source":"The <xref:System.ServiceModel.IDefaultCommunicationTimeouts> that specify the default timeouts for open, send, receive, and close operations when exchanging messages."}]},{"pos":[5954,6056],"content":"When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.","pos":[0,102]}]},{"pos":[6259,6377],"content":"The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.TimeSpan&gt; that specifies how long the wait for a channel operation has to complete before timing out.","pos":[0,118],"source":"The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out."}]},{"pos":[6449,6588],"content":"The <xref:System.AsyncCallback> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous completion of the wait for a channel operation.","pos":[0,139],"source":"The <xref:System.AsyncCallback> delegate that receives the notification of the asynchronous completion of the wait for a channel operation."}]},{"pos":[6650,6785],"content":"An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.","pos":[0,135]}]},{"pos":[6849,6942],"content":"The <xref:System.IAsyncResult> that references the asynchronous wait for a channel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous wait for a channel operation.","pos":[0,93],"source":"The <xref:System.IAsyncResult> that references the asynchronous wait for a channel operation."}]},{"pos":[7149,7212],"content":"The channel listener has not been opened and so cannot be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The channel listener has not been opened and so cannot be used.","pos":[0,63]}]},{"pos":[7690,7767],"content":"Gets the default interval of time provided for a close operation to complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default interval of time provided for a close operation to complete.","pos":[0,77]}]},{"pos":[7779,8208],"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultCloseTimeout property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","needQuote":true,"needEscape":true,"nodes":[{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultCloseTimeout property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","pos":[0,429],"nodes":[{"content":"This value is set when creating a new &lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt; object.","pos":[0,101],"source":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object."},{"content":"The default &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor&gt; constructor sets the DefaultCloseTimeout property to a value of 1 minute.","pos":[102,251],"source":" The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultCloseTimeout property to a value of 1 minute."},{"content":"Use &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt; if you want to specify another value for this timeout.","pos":[252,429],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout."}]}]},{"pos":[8348,8461],"content":"The default <xref:System.TimeSpan> that specifies how long the close operation has to complete before timing out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default &lt;xref:System.TimeSpan&gt; that specifies how long the close operation has to complete before timing out.","pos":[0,113],"source":"The default <xref:System.TimeSpan> that specifies how long the close operation has to complete before timing out."}]},{"pos":[9033,9110],"content":"Gets the default interval of time provided for an open operation to complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default interval of time provided for an open operation to complete.","pos":[0,77]}]},{"pos":[9122,9550],"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultOpenTimeout property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","needQuote":true,"needEscape":true,"nodes":[{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultOpenTimeout property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","pos":[0,428],"nodes":[{"content":"This value is set when creating a new &lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt; object.","pos":[0,101],"source":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object."},{"content":"The default &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor&gt; constructor sets the DefaultOpenTimeout property to a value of 1 minute.","pos":[102,250],"source":" The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultOpenTimeout property to a value of 1 minute."},{"content":"Use &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt; if you want to specify another value for this timeout.","pos":[251,428],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout."}]}]},{"pos":[9689,9801],"content":"The default <xref:System.TimeSpan> that specifies how long the open operation has to complete before timing out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default &lt;xref:System.TimeSpan&gt; that specifies how long the open operation has to complete before timing out.","pos":[0,112],"source":"The default <xref:System.TimeSpan> that specifies how long the open operation has to complete before timing out."}]},{"pos":[10387,10466],"content":"Gets the default interval of time provided for a receive operation to complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default interval of time provided for a receive operation to complete.","pos":[0,79]}]},{"pos":[10478,10911],"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultReceiveTimeout property to a value of 10 minutes. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","needQuote":true,"needEscape":true,"nodes":[{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultReceiveTimeout property to a value of 10 minutes. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","pos":[0,433],"nodes":[{"content":"This value is set when creating a new &lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt; object.","pos":[0,101],"source":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object."},{"content":"The default &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor&gt; constructor sets the DefaultReceiveTimeout property to a value of 10 minutes.","pos":[102,255],"source":" The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultReceiveTimeout property to a value of 10 minutes."},{"content":"Use &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt; if you want to specify another value for this timeout.","pos":[256,433],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout."}]}]},{"pos":[11053,11168],"content":"The default <xref:System.TimeSpan> that specifies how long the receive operation has to complete before timing out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default &lt;xref:System.TimeSpan&gt; that specifies how long the receive operation has to complete before timing out.","pos":[0,115],"source":"The default <xref:System.TimeSpan> that specifies how long the receive operation has to complete before timing out."}]},{"pos":[11742,11818],"content":"Gets the default interval of time provided for a send operation to complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default interval of time provided for a send operation to complete.","pos":[0,76]}]},{"pos":[11830,12258],"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultSendTimeout property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","needQuote":true,"needEscape":true,"nodes":[{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultSendTimeout property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","pos":[0,428],"nodes":[{"content":"This value is set when creating a new &lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt; object.","pos":[0,101],"source":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object."},{"content":"The default &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor&gt; constructor sets the DefaultSendTimeout property to a value of 1 minute.","pos":[102,250],"source":" The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultSendTimeout property to a value of 1 minute."},{"content":"Use &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt; if you want to specify another value for this timeout.","pos":[251,428],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout."}]}]},{"pos":[12397,12509],"content":"The default <xref:System.TimeSpan> that specifies how long the send operation has to complete before timing out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default &lt;xref:System.TimeSpan&gt; that specifies how long the send operation has to complete before timing out.","pos":[0,112],"source":"The default <xref:System.TimeSpan> that specifies how long the send operation has to complete before timing out."}]},{"pos":[13157,13261],"content":"When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.","pos":[0,104]}]},{"pos":[13422,13504],"content":"The <xref:System.IAsyncResult> returned by a call to the EndWaitForChannel method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; returned by a call to the EndWaitForChannel method.","pos":[0,82],"source":"The <xref:System.IAsyncResult> returned by a call to the EndWaitForChannel method."}]},{"pos":[13563,13719],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a message arrived; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a message arrived; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14394,14406],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15183,15300],"content":"When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.","pos":[0,117]}]},{"pos":[15517,15630],"content":"The <xref:System.TimeSpan> that specifies how long the on begin wait operation has to complete before timing out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.TimeSpan&gt; that specifies how long the on begin wait operation has to complete before timing out.","pos":[0,113],"source":"The <xref:System.TimeSpan> that specifies how long the on begin wait operation has to complete before timing out."}]},{"pos":[15702,15829],"content":"The <xref:System.AsyncCallback> delegate that receives the notification of the asynchronous operation on begin wait completion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous operation on begin wait completion.","pos":[0,127],"source":"The <xref:System.AsyncCallback> delegate that receives the notification of the asynchronous operation on begin wait completion."}]},{"pos":[15891,16021],"content":"An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.","pos":[0,130]}]},{"pos":[16085,16173],"content":"The <xref:System.IAsyncResult> that references the asynchronous on begin wait operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous on begin wait operation.","pos":[0,88],"source":"The <xref:System.IAsyncResult> that references the asynchronous on begin wait operation."}]},{"pos":[16834,16953],"content":"When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.","pos":[0,119]}]},{"pos":[17128,17336],"content":"The <xref:System.IAsyncResult> returned by a call to the &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; returned by a call to the <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,208],"source":"The <xref:System.IAsyncResult> returned by a call to the &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; method."}]},{"pos":[17395,17628],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the method completed before the interval of time specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">timeout</ph><ept id=\"p2\">&lt;/code&gt;</ept> expired; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18252,18359],"content":"When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.","pos":[0,107]}]},{"pos":[18525,18646],"content":"The <xref:System.TimeSpan> that specifies how long the on wait for a channel operation has to complete before timing out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.TimeSpan&gt; that specifies how long the on wait for a channel operation has to complete before timing out.","pos":[0,121],"source":"The <xref:System.TimeSpan> that specifies how long the on wait for a channel operation has to complete before timing out."}]},{"pos":[18705,18938],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the method completed before the interval of time specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">timeout</ph><ept id=\"p2\">&lt;/code&gt;</ept> expired; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19432,19542],"content":"When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.","pos":[0,110]}]},{"pos":[19653,19735],"content":"The <xref:System.Uri> on which the channel listener listens for incoming channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; on which the channel listener listens for incoming channels.","pos":[0,82],"source":"The <xref:System.Uri> on which the channel listener listens for incoming channels."}]},{"pos":[20333,20400],"content":"When implemented in a derived class, waits for a channel to arrive.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, waits for a channel to arrive.","pos":[0,67]}]},{"pos":[20552,20670],"content":"The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.TimeSpan&gt; that specifies how long the wait for a channel operation has to complete before timing out.","pos":[0,118],"source":"The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out."}]},{"pos":[20729,20959],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a channel arrived before the interval of time specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">timeout</ph><ept id=\"p2\">&lt;/code&gt;</ept> expired; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a channel arrived before the interval of time specified by the <code>timeout</code> expired; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.ChannelListenerBase\n  id: ChannelListenerBase\n  children:\n  - System.ServiceModel.Channels.ChannelListenerBase.#ctor\n  - System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  - System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1\n  - System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.ChannelListenerBase.Uri\n  - System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)\n  langs:\n  - csharp\n  name: ChannelListenerBase\n  nameWithType: ChannelListenerBase\n  fullName: System.ServiceModel.Channels.ChannelListenerBase\n  type: Class\n  summary: Provides a common base implementation for channel listeners on the service.\n  remarks: The channel listeners on the service wait for and then accept the channels created by factories on the client. Once the channel connection is established between client and service, messages can be exchanged and distributed applications can communicate. The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] features to deploy. Each channel listener in the service stack corresponds to a channel factory in the client stack. The channel created by the factory is really a stack of channels that are accepted and processed by the stack of listeners on the service.\n  syntax:\n    content: 'public abstract class ChannelListenerBase : System.ServiceModel.Channels.ChannelManagerBase, System.ServiceModel.Channels.IChannelListener'\n  inheritance:\n  - System.ServiceModel.Channels.ChannelManagerBase\n  implements:\n  - System.ServiceModel.Channels.IChannelListener\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: ChannelListenerBase()\n  nameWithType: ChannelListenerBase.ChannelListenerBase()\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"></xref> class.\n  remarks: The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.\n  syntax:\n    content: protected ChannelListenerBase ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: ChannelListenerBase(IDefaultCommunicationTimeouts)\n  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"></xref> class with specified default communication timeouts.\n  remarks: Use ChannelListenerBase instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.\n  syntax:\n    content: protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);\n    parameters:\n    - id: timeouts\n      type: System.ServiceModel.IDefaultCommunicationTimeouts\n      description: The <xref:System.ServiceModel.IDefaultCommunicationTimeouts> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.\n  syntax:\n    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous wait for a channel operation.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The channel listener has not been opened and so cannot be used.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  id: DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: DefaultCloseTimeout\n  nameWithType: ChannelListenerBase.DefaultCloseTimeout\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for a close operation to complete.\n  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultCloseTimeout property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.\n  syntax:\n    content: protected override TimeSpan DefaultCloseTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref:System.TimeSpan> that specifies how long the close operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  id: DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: DefaultOpenTimeout\n  nameWithType: ChannelListenerBase.DefaultOpenTimeout\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for an open operation to complete.\n  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultOpenTimeout property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.\n  syntax:\n    content: protected override TimeSpan DefaultOpenTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref:System.TimeSpan> that specifies how long the open operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  id: DefaultReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelListenerBase.DefaultReceiveTimeout\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for a receive operation to complete.\n  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultReceiveTimeout property to a value of 10 minutes. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.\n  syntax:\n    content: protected override TimeSpan DefaultReceiveTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref:System.TimeSpan> that specifies how long the receive operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  id: DefaultSendTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: DefaultSendTimeout\n  nameWithType: ChannelListenerBase.DefaultSendTimeout\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for a send operation to complete.\n  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the DefaultSendTimeout property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.\n  syntax:\n    content: protected override TimeSpan DefaultSendTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref:System.TimeSpan> that specifies how long the send operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\n  id: EndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: EndWaitForChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.\n  syntax:\n    content: public bool EndWaitForChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> returned by a call to the EndWaitForChannel method.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a message arrived; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1\n  id: GetProperty``1\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: GetProperty()\n  nameWithType: ChannelListenerBase.GetProperty()\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.GetProperty()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: 'public virtual T GetProperty<T> () where T : class;'\n    parameters: []\n    return:\n      type: T\n      description: To be added.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.GetProperty<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.\n  syntax:\n    content: protected abstract IAsyncResult OnBeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref:System.TimeSpan> that specifies how long the on begin wait operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives the notification of the asynchronous operation on begin wait completion.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous on begin wait operation.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)\n  id: OnEndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: OnEndWaitForChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.\n  syntax:\n    content: protected abstract bool OnEndWaitForChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> returned by a call to the &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; method.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)\n  id: OnWaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: OnWaitForChannel(TimeSpan)\n  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.\n  syntax:\n    content: protected abstract bool OnWaitForChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref:System.TimeSpan> that specifies how long the on wait for a channel operation has to complete before timing out.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri\n  id: Uri\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: Uri\n  nameWithType: ChannelListenerBase.Uri\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.Uri\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.\n  syntax:\n    content: public abstract Uri Uri { get; }\n    return:\n      type: System.Uri\n      description: The <xref:System.Uri> on which the channel listener listens for incoming channels.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.Uri*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)\n  id: WaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: WaitForChannel(TimeSpan)\n  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, waits for a channel to arrive.\n  syntax:\n    content: public bool WaitForChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a channel arrived before the interval of time specified by the <code>timeout</code> expired; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: System.ServiceModel.Channels.ChannelManagerBase\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: ChannelListenerBase()\n  nameWithType: ChannelListenerBase.ChannelListenerBase()\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase()\n- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: ChannelListenerBase(IDefaultCommunicationTimeouts)\n  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: true\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelListenerBase.DefaultCloseTimeout\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelListenerBase.DefaultOpenTimeout\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelListenerBase.DefaultReceiveTimeout\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultSendTimeout\n  nameWithType: ChannelListenerBase.DefaultSendTimeout\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: EndWaitForChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(IAsyncResult)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: GetProperty()\n  nameWithType: ChannelListenerBase.GetProperty()\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.GetProperty()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnEndWaitForChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnWaitForChannel(TimeSpan)\n  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(TimeSpan)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: Uri\n  nameWithType: ChannelListenerBase.Uri\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.Uri\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: WaitForChannel(TimeSpan)\n  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(TimeSpan)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: ChannelListenerBase\n  nameWithType: ChannelListenerBase.ChannelListenerBase\n- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: BeginWaitForChannel\n  nameWithType: ChannelListenerBase.BeginWaitForChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelListenerBase.DefaultCloseTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelListenerBase.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelListenerBase.DefaultReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultSendTimeout\n  nameWithType: ChannelListenerBase.DefaultSendTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: EndWaitForChannel\n  nameWithType: ChannelListenerBase.EndWaitForChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty<T>*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: ChannelListenerBase.GetProperty<T>\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnBeginWaitForChannel\n  nameWithType: ChannelListenerBase.OnBeginWaitForChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnEndWaitForChannel\n  nameWithType: ChannelListenerBase.OnEndWaitForChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnWaitForChannel\n  nameWithType: ChannelListenerBase.OnWaitForChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: Uri\n  nameWithType: ChannelListenerBase.Uri\n- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: WaitForChannel\n  nameWithType: ChannelListenerBase.WaitForChannel\n"}