{"nodes":[{"pos":[1160,1257],"content":"Provides a set of services for registering and unregistering managed assemblies for use from COM.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a set of services for registering and unregistering managed assemblies for use from COM.","pos":[0,97]}]},{"pos":[1269,1358],"content":"Registration is needed when the objects within an assembly are being used by COM clients.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registration is needed when the objects within an assembly are being used by COM clients.","pos":[0,89]}]},{"pos":[2090,2161],"content":"Returns the GUID of the COM category that contains the managed classes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the GUID of the COM category that contains the managed classes.","pos":[0,71]}]},{"pos":[2298,2361],"content":"The GUID of the COM category that contains the managed classes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GUID of the COM category that contains the managed classes.","pos":[0,63]}]},{"pos":[2977,3023],"content":"Retrieves the COM ProgID for a specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the COM ProgID for a specified type.","pos":[0,46]}]},{"pos":[3165,3206],"content":"The type whose ProgID is being requested.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type whose ProgID is being requested.","pos":[0,41]}]},{"pos":[3264,3298],"content":"The ProgID for the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ProgID for the specified type.","pos":[0,34]}]},{"pos":[4015,4174],"content":"Retrieves a list of classes in an assembly that would be registered by a call to <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a list of classes in an assembly that would be registered by a call to &lt;xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly*&gt;.","pos":[0,159],"source":"Retrieves a list of classes in an assembly that would be registered by a call to <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly*>."}]},{"pos":[4374,4409],"content":"The assembly to search for classes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assembly to search for classes.","pos":[0,35]}]},{"pos":[4467,4548],"content":"A &lt;xref:System.Type&gt; array containing a list of classes in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">assembly</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Type> array containing a list of classes in <code>assembly</code>."},{"pos":[5405,5477],"content":"Registers the classes in a managed assembly to enable creation from COM.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers the classes in a managed assembly to enable creation from COM.","pos":[0,72]}]},{"pos":[5490,5759],"content":"`RegisterAssembly` adds the appropriate registry entries for the types in the specified assembly. This method also calls any registration functions found in the assembly.       Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> to get an assembly.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">`RegisterAssembly`</ph> adds the appropriate registry entries for the types in the specified assembly.","pos":[0,97],"source":"`RegisterAssembly` adds the appropriate registry entries for the types in the specified assembly."},{"content":"This method also calls any registration functions found in the assembly.","pos":[98,170]},{"content":"Use &lt;xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName&gt; to get an assembly.","pos":[177,267],"source":"       Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> to get an assembly."}]},{"pos":[6009,6039],"content":"The assembly to be registered.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assembly to be registered.","pos":[0,30]}]},{"pos":[6144,6298],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.AssemblyRegistrationFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating any special settings needed when registering <ph id=\"ph1\">`assembly`</ph>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Runtime.InteropServices.AssemblyRegistrationFlags\"></xref> value indicating any special settings needed when registering `assembly`."},{"pos":[6357,6609],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">assembly</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains types that were successfully registered; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the assembly contains no eligible types.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>assembly</code> contains types that were successfully registered; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the assembly contains no eligible types."},{"pos":[6809,6895],"content":"<ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>assembly</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7007,7659],"content":"The full name of <code>assembly</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       A method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> is not <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref>.       -or-       There is more than one method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> at a given level of the hierarchy.       -or-       The signature of the method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> is not valid.","needQuote":false,"needEscape":true,"nodes":[{"content":"The full name of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">assembly</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,103],"source":"The full name of <code>assembly</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       A method marked with <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[110,295],"source":"       -or-       A method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> is not <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref>."},{"content":"-or-       There is more than one method marked with <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at a given level of the hierarchy.","pos":[302,470],"source":"       -or-       There is more than one method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> at a given level of the hierarchy."},{"content":"-or-       The signature of the method marked with <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not valid.","pos":[477,622],"source":"       -or-       The signature of the method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> is not valid."}]},{"pos":[8256,8319],"content":"Registers the specified type with COM using the specified GUID.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers the specified type with COM using the specified GUID.","pos":[0,63]}]},{"pos":[8331,8399],"content":"This method is equivalent to calling <ph id=\"ph1\">`CoRegisterClassObject`</ph> in COM.","needQuote":true,"needEscape":true,"source":"This method is equivalent to calling `CoRegisterClassObject` in COM."},{"pos":[8560,8603],"content":"The type to be registered for use from COM.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to be registered for use from COM.","pos":[0,43]}]},{"pos":[8659,8700],"content":"GUID used to register the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"GUID used to register the specified type.","pos":[0,41]}]},{"pos":[9344,9396],"content":"Determines whether the specified type is a COM type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified type is a COM type.","pos":[0,52]}]},{"pos":[9541,9583],"content":"The type to determine if it is a COM type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to determine if it is a COM type.","pos":[0,42]}]},{"pos":[9642,9813],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified type is a COM type; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified type is a COM type; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10468,10528],"content":"Determines whether the specified type requires registration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified type requires registration.","pos":[0,60]}]},{"pos":[10676,10728],"content":"The type to check for COM registration requirements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to check for COM registration requirements.","pos":[0,52]}]},{"pos":[10787,10970],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the type must be registered for use from COM; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type must be registered for use from COM; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11640,11686],"content":"Unregisters the classes in a managed assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Unregisters the classes in a managed assembly.","pos":[0,46]}]},{"pos":[11699,11964],"content":"`UnregisterAssembly` removes the registry entries for the types in the specified assembly previously added by <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A>. This method also calls any unregistration functions found in the assembly.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">`UnregisterAssembly`</ph> removes the registry entries for the types in the specified assembly previously added by &lt;xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A&gt;.","pos":[0,190],"source":"`UnregisterAssembly` removes the registry entries for the types in the specified assembly previously added by <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A>."},{"content":"This method also calls any unregistration functions found in the assembly.","pos":[191,265]}]},{"pos":[12152,12184],"content":"The assembly to be unregistered.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assembly to be unregistered.","pos":[0,32]}]},{"pos":[12243,12497],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">assembly</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains types that were successfully unregistered; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the assembly contains no eligible types.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>assembly</code> contains types that were successfully unregistered; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the assembly contains no eligible types."},{"pos":[12699,12785],"content":"<ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>assembly</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12897,13555],"content":"The full name of <code>assembly</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       A method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> is not <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref>.       -or-       There is more than one method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> at a given level of the hierarchy.       -or-       The signature of the method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> is not valid.","needQuote":false,"needEscape":true,"nodes":[{"content":"The full name of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">assembly</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,103],"source":"The full name of <code>assembly</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       A method marked with <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[110,297],"source":"       -or-       A method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> is not <xref uid=\"langword_csharp_static\" name=\"static\" href=\"\"></xref>."},{"content":"-or-       There is more than one method marked with <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at a given level of the hierarchy.","pos":[304,474],"source":"       -or-       There is more than one method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> at a given level of the hierarchy."},{"content":"-or-       The signature of the method marked with <bpt id=\"p1\">&lt;xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not valid.","pos":[481,628],"source":"       -or-       The signature of the method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> is not valid."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.IRegistrationServices\n  id: IRegistrationServices\n  children:\n  - System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid\n  - System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)\n  - System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)\n  - System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\n  - System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)\n  - System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)\n  - System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)\n  - System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)\n  langs:\n  - csharp\n  name: IRegistrationServices\n  nameWithType: IRegistrationServices\n  fullName: System.Runtime.InteropServices.IRegistrationServices\n  type: Interface\n  summary: Provides a set of services for registering and unregistering managed assemblies for use from COM.\n  remarks: Registration is needed when the objects within an assembly are being used by COM clients.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"CCBD682C-73A5-4568-B8B0-C7007E11ABA2\")]\n\n      public interface IRegistrationServices\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid\n  id: GetManagedCategoryGuid\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: GetManagedCategoryGuid()\n  nameWithType: IRegistrationServices.GetManagedCategoryGuid()\n  fullName: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Returns the GUID of the COM category that contains the managed classes.\n  syntax:\n    content: public Guid GetManagedCategoryGuid ();\n    parameters: []\n    return:\n      type: System.Guid\n      description: The GUID of the COM category that contains the managed classes.\n  overload: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)\n  id: GetProgIdForType(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: GetProgIdForType(Type)\n  nameWithType: IRegistrationServices.GetProgIdForType(Type)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the COM ProgID for a specified type.\n  syntax:\n    content: public string GetProgIdForType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type whose ProgID is being requested.\n    return:\n      type: System.String\n      description: The ProgID for the specified type.\n  overload: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)\n  id: GetRegistrableTypesInAssembly(System.Reflection.Assembly)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: GetRegistrableTypesInAssembly(Assembly)\n  nameWithType: IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves a list of classes in an assembly that would be registered by a call to <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly*>.\n  syntax:\n    content: public Type[] GetRegistrableTypesInAssembly (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly to search for classes.\n    return:\n      type: System.Type[]\n      description: A <xref:System.Type> array containing a list of classes in <code>assembly</code>.\n  overload: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\n  id: RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: RegisterAssembly(Assembly,AssemblyRegistrationFlags)\n  nameWithType: IRegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Registers the classes in a managed assembly to enable creation from COM.\n  remarks: \"`RegisterAssembly` adds the appropriate registry entries for the types in the specified assembly. This method also calls any registration functions found in the assembly.  \\n  \\n Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> to get an assembly.\"\n  syntax:\n    content: public bool RegisterAssembly (System.Reflection.Assembly assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags flags);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly to be registered.\n    - id: flags\n      type: System.Runtime.InteropServices.AssemblyRegistrationFlags\n      description: An <xref href=\"System.Runtime.InteropServices.AssemblyRegistrationFlags\"></xref> value indicating any special settings needed when registering `assembly`.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>assembly</code> contains types that were successfully registered; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the assembly contains no eligible types.\n  overload: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assembly</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The full name of <code>assembly</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n A method marked with <xref href=\\\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\\\"></xref> is not <xref uid=\\\"langword_csharp_static\\\" name=\\\"static\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n There is more than one method marked with <xref href=\\\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\\\"></xref> at a given level of the hierarchy.  \\n  \\n -or-  \\n  \\n The signature of the method marked with <xref href=\\\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\\\"></xref> is not valid.\"\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)\n  id: RegisterTypeForComClients(System.Type,System.Guid@)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: RegisterTypeForComClients(Type,Guid)\n  nameWithType: IRegistrationServices.RegisterTypeForComClients(Type,Guid)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(Type,Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Registers the specified type with COM using the specified GUID.\n  remarks: This method is equivalent to calling `CoRegisterClassObject` in COM.\n  syntax:\n    content: public void RegisterTypeForComClients (Type type, ref Guid g);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to be registered for use from COM.\n    - id: g\n      type: System.Guid\n      description: GUID used to register the specified type.\n  overload: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)\n  id: TypeRepresentsComType(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: TypeRepresentsComType(Type)\n  nameWithType: IRegistrationServices.TypeRepresentsComType(Type)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Determines whether the specified type is a COM type.\n  syntax:\n    content: public bool TypeRepresentsComType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to determine if it is a COM type.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified type is a COM type; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)\n  id: TypeRequiresRegistration(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: TypeRequiresRegistration(Type)\n  nameWithType: IRegistrationServices.TypeRequiresRegistration(Type)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Determines whether the specified type requires registration.\n  syntax:\n    content: public bool TypeRequiresRegistration (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to check for COM registration requirements.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type must be registered for use from COM; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)\n  id: UnregisterAssembly(System.Reflection.Assembly)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: UnregisterAssembly(Assembly)\n  nameWithType: IRegistrationServices.UnregisterAssembly(Assembly)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(Assembly)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Unregisters the classes in a managed assembly.\n  remarks: '`UnregisterAssembly` removes the registry entries for the types in the specified assembly previously added by <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A>. This method also calls any unregistration functions found in the assembly.'\n  syntax:\n    content: public bool UnregisterAssembly (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly to be unregistered.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>assembly</code> contains types that were successfully unregistered; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the assembly contains no eligible types.\n  overload: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assembly</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The full name of <code>assembly</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n A method marked with <xref href=\\\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\\\"></xref> is not <xref uid=\\\"langword_csharp_static\\\" name=\\\"static\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n There is more than one method marked with <xref href=\\\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\\\"></xref> at a given level of the hierarchy.  \\n  \\n -or-  \\n  \\n The signature of the method marked with <xref href=\\\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\\\"></xref> is not valid.\"\n  platform:\n  - net462\nreferences:\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetManagedCategoryGuid()\n  nameWithType: IRegistrationServices.GetManagedCategoryGuid()\n  fullName: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid()\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetProgIdForType(Type)\n  nameWithType: IRegistrationServices.GetProgIdForType(Type)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(Type)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetRegistrableTypesInAssembly(Assembly)\n  nameWithType: IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)\n- uid: System.Type[]\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: RegisterAssembly(Assembly,AssemblyRegistrationFlags)\n  nameWithType: IRegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.AssemblyRegistrationFlags\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: AssemblyRegistrationFlags\n  nameWithType: AssemblyRegistrationFlags\n  fullName: System.Runtime.InteropServices.AssemblyRegistrationFlags\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: RegisterTypeForComClients(Type,Guid)\n  nameWithType: IRegistrationServices.RegisterTypeForComClients(Type,Guid)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(Type,Guid)\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: TypeRepresentsComType(Type)\n  nameWithType: IRegistrationServices.TypeRepresentsComType(Type)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(Type)\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: TypeRequiresRegistration(Type)\n  nameWithType: IRegistrationServices.TypeRequiresRegistration(Type)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(Type)\n- uid: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: UnregisterAssembly(Assembly)\n  nameWithType: IRegistrationServices.UnregisterAssembly(Assembly)\n  fullName: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(Assembly)\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetManagedCategoryGuid\n  nameWithType: IRegistrationServices.GetManagedCategoryGuid\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetProgIdForType\n  nameWithType: IRegistrationServices.GetProgIdForType\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetRegistrableTypesInAssembly\n  nameWithType: IRegistrationServices.GetRegistrableTypesInAssembly\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: RegisterAssembly\n  nameWithType: IRegistrationServices.RegisterAssembly\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: RegisterTypeForComClients\n  nameWithType: IRegistrationServices.RegisterTypeForComClients\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: TypeRepresentsComType\n  nameWithType: IRegistrationServices.TypeRepresentsComType\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: TypeRequiresRegistration\n  nameWithType: IRegistrationServices.TypeRequiresRegistration\n- uid: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: UnregisterAssembly\n  nameWithType: IRegistrationServices.UnregisterAssembly\n"}