{"nodes":[{"pos":[747,880],"content":"Compares the value entered by the user in an input control with the value entered in another input control, or with a constant value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares the value entered by the user in an input control with the value entered in another input control, or with a constant value.","pos":[0,133]}]},{"pos":[893,6793],"content":"Use the CompareValidator control to compare the value entered by the user in an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, with the value entered in another input control or a constant value. The CompareValidator control passes validation if the value of the input control matches the criteria specified by the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>, <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>, and/or <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> properties.       You can also use the CompareValidator control to indicate whether the value entered in an input control can be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property.       Specify the input control to validate by setting the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property. If you want to compare a specific input control with another input control, set the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property to specify the control to compare with.      > [!NOTE] >  If the value entered in the input control specified by the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property cannot be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, but the value entered in the input control specified by the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property can be converted, the input control being validated is considered valid. Therefore, you should also place a CompareValidator or <xref:System.Web.UI.WebControls.RangeValidator> control on the input control specified by the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property.       Instead of comparing the value of an input control with another input control, you can compare the value of an input control to a constant value. Specify the constant value to compare with by setting the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property.      > [!NOTE] >  If the value specified by the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property cannot be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, an exception is thrown. Be sure to check the data type of a value before programmatically assigning it to the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property.      > [!NOTE] >  Do not set both the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property at the same time. You can either compare the value of an input control to another input control, or to a constant value. If both properties are set, the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property takes precedence.       Use the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to specify the type of comparison to perform, such as greater than, equal to, and so on. If you set the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to `ValidationCompareOperator.DataTypeCheck`, the CompareValidator control ignores the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> properties and simply indicates whether the value entered in the input control can be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property.       The <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property is used to specify the data type of both comparison values. Both values are automatically converted to this data type before the comparison operation is performed.      > [!IMPORTANT] >  When the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> property is set to <xref:System.Web.UI.WebControls.ValidationDataType> and the current calendar type is non-Gregorian, the validator performs server-side validation only. The validator client script supports only Gregorian calendars.       The following table lists the various data types that can be compared.      |Data type|Description|   |---------------|-----------------|   |`String`|A string data type.|   |`Integer`|A 32-bit signed integer data type.|   |`Double`|A double-precision floating-point number data type.|   |`Date`|A date data type.|   |`Currency`|A decimal data type. It cannot contain currency symbols.|      > [!NOTE] >  If the input control is empty, no validation functions are called and validation succeeds. Use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control to require the user to enter data in the input control.      > [!NOTE] >  When you use the CompareValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel. For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).       For more information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.      ## Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the CompareValidator control to compare the value entered by the user in an input control, such as a &lt;xref:System.Web.UI.WebControls.TextBox&gt; control, with the value entered in another input control or a constant value.","pos":[0,223],"source":"Use the CompareValidator control to compare the value entered by the user in an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, with the value entered in another input control or a constant value."},{"content":"The CompareValidator control passes validation if the value of the input control matches the criteria specified by the &lt;xref:System.Web.UI.WebControls.CompareValidator.Operator%2A&gt;, &lt;xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A&gt;, and/or &lt;xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A&gt; properties.","pos":[224,563],"source":" The CompareValidator control passes validation if the value of the input control matches the criteria specified by the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>, <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>, and/or <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> properties."},{"content":"You can also use the CompareValidator control to indicate whether the value entered in an input control can be converted to the data type specified by the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName&gt; property.","pos":[570,821],"source":"       You can also use the CompareValidator control to indicate whether the value entered in an input control can be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property."},{"content":"Specify the input control to validate by setting the &lt;xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A&gt; property.","pos":[828,958],"source":"       Specify the input control to validate by setting the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property."},{"content":"If you want to compare a specific input control with another input control, set the &lt;xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A&gt; property to specify the control to compare with.","pos":[959,1161],"source":" If you want to compare a specific input control with another input control, set the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property to specify the control to compare with."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the value entered in the input control specified by the &lt;xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A&gt; property cannot be converted to the data type specified by the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName&gt; property, but the value entered in the input control specified by the &lt;xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A&gt; property can be converted, the input control being validated is considered valid.","pos":[1167,1678],"source":"      > [!NOTE] >  If the value entered in the input control specified by the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property cannot be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, but the value entered in the input control specified by the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property can be converted, the input control being validated is considered valid."},{"content":"Therefore, you should also place a CompareValidator or &lt;xref:System.Web.UI.WebControls.RangeValidator&gt; control on the input control specified by the &lt;xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A&gt; property.","pos":[1679,1907],"source":" Therefore, you should also place a CompareValidator or <xref:System.Web.UI.WebControls.RangeValidator> control on the input control specified by the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property."},{"content":"Instead of comparing the value of an input control with another input control, you can compare the value of an input control to a constant value.","pos":[1914,2059]},{"content":"Specify the constant value to compare with by setting the &lt;xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A&gt; property.","pos":[2060,2195],"source":" Specify the constant value to compare with by setting the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the value specified by the &lt;xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A&gt; property cannot be converted to the data type specified by the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName&gt; property, an exception is thrown.","pos":[2201,2495],"source":"      > [!NOTE] >  If the value specified by the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property cannot be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, an exception is thrown."},{"content":"Be sure to check the data type of a value before programmatically assigning it to the &lt;xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A&gt; property.","pos":[2496,2659],"source":" Be sure to check the data type of a value before programmatically assigning it to the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not set both the &lt;xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A&gt; and the &lt;xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A&gt; property at the same time.","pos":[2665,2870],"source":"      > [!NOTE] >  Do not set both the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property at the same time."},{"content":"You can either compare the value of an input control to another input control, or to a constant value.","pos":[2871,2973]},{"content":"If both properties are set, the &lt;xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A&gt; property takes precedence.","pos":[2974,3102],"source":" If both properties are set, the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property takes precedence."},{"content":"Use the &lt;xref:System.Web.UI.WebControls.CompareValidator.Operator%2A&gt; property to specify the type of comparison to perform, such as greater than, equal to, and so on.","pos":[3109,3276],"source":"       Use the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to specify the type of comparison to perform, such as greater than, equal to, and so on."},{"content":"If you set the &lt;xref:System.Web.UI.WebControls.CompareValidator.Operator%2A&gt; property to <ph id=\"ph1\">`ValidationCompareOperator.DataTypeCheck`</ph>, the CompareValidator control ignores the &lt;xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A&gt; and &lt;xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A&gt; properties and simply indicates whether the value entered in the input control can be converted to the data type specified by the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName&gt; property.","pos":[3277,3818],"source":" If you set the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to `ValidationCompareOperator.DataTypeCheck`, the CompareValidator control ignores the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> properties and simply indicates whether the value entered in the input control can be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property."},{"content":"The &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName&gt; property is used to specify the data type of both comparison values.","pos":[3825,3984],"source":"       The <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property is used to specify the data type of both comparison values."},{"content":"Both values are automatically converted to this data type before the comparison operation is performed.","pos":[3985,4088]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  When the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A&gt; property is set to &lt;xref:System.Web.UI.WebControls.ValidationDataType&gt; and the current calendar type is non-Gregorian, the validator performs server-side validation only.","pos":[4094,4353],"source":"      > [!IMPORTANT] >  When the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> property is set to <xref:System.Web.UI.WebControls.ValidationDataType> and the current calendar type is non-Gregorian, the validator performs server-side validation only."},{"content":"The validator client script supports only Gregorian calendars.","pos":[4354,4416]},{"content":"The following table lists the various data types that can be compared.","pos":[4423,4493]},{"content":"|Data type|Description|   |---------------|-----------------|   |<ph id=\"ph1\">`String`</ph>|A string data type.|   |<ph id=\"ph2\">`Integer`</ph>|A 32-bit signed integer data type.|   |<ph id=\"ph3\">`Double`</ph>|A double-precision floating-point number data type.|   |<ph id=\"ph4\">`Date`</ph>|A date data type.|   |<ph id=\"ph5\">`Currency`</ph>|A decimal data type.","pos":[4499,4771],"source":"      |Data type|Description|   |---------------|-----------------|   |`String`|A string data type.|   |`Integer`|A 32-bit signed integer data type.|   |`Double`|A double-precision floating-point number data type.|   |`Date`|A date data type.|   |`Currency`|A decimal data type."},{"content":"It cannot contain currency symbols.|      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the input control is empty, no validation functions are called and validation succeeds.","pos":[4772,4917],"source":" It cannot contain currency symbols.|      > [!NOTE] >  If the input control is empty, no validation functions are called and validation succeeds."},{"content":"Use a &lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt; control to require the user to enter data in the input control.","pos":[4918,5043],"source":" Use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control to require the user to enter data in the input control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When you use the CompareValidator control inside an &lt;xref:System.Web.UI.UpdatePanel&gt; control, make sure that the validator control and the control it is associated with are in the same panel.","pos":[5049,5253],"source":"      > [!NOTE] >  When you use the CompareValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel."},{"content":"For more information about using the &lt;xref:System.Web.UI.UpdatePanel&gt; control for partial-page updates, see <bpt id=\"p1\">[</bpt>Partial-Page Rendering Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[5254,5435],"source":" For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information about validation controls, see &lt;xref:System.Web.UI.WebControls.BaseValidator&gt;.","pos":[5442,5541],"source":"       For more information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>."},{"content":"Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see <bpt id=\"p1\">[</bpt>Accessibility in Visual Studio and ASP.NET<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>ASP.NET Controls and Accessibility<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[5550,5857],"source":"      ## Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[18964,19068],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.CompareValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.CompareValidator\"></xref> class."},{"pos":[19080,19151],"content":"The default constructor initializes any fields to their default values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default constructor initializes any fields to their default values.","pos":[0,71]}]},{"pos":[19861,19946],"content":"Adds the attributes of this control to the output stream for rendering on the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the attributes of this control to the output stream for rendering on the client.","pos":[0,85]}]},{"pos":[21186,21298],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the output stream for rendering on the client.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that contains the output stream for rendering on the client."},{"pos":[21857,21911],"content":"Checks the properties of the control for valid values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks the properties of the control for valid values.","pos":[0,54]}]},{"pos":[23289,23461],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control properties are valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control properties are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23649,23735],"content":"The value of a target property cannot be converted to the expected <xref:System.Type>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of a target property cannot be converted to the expected &lt;xref:System.Type&gt;.","pos":[0,86],"source":"The value of a target property cannot be converted to the expected <xref:System.Type>."}]},{"pos":[24165,24246],"content":"Gets or sets the input control to compare with the input control being validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the input control to compare with the input control being validated.","pos":[0,81]}]},{"pos":[24259,25487],"content":"Use the ControlToCompare property to specify an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, to compare with the input control being validated. If the input control specified by this property is not a control on the page, an exception is thrown.      > [!NOTE] >  Do not set both the ControlToCompare and the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property at the same time. You can either compare the value of an input control to another input control, or to a constant value. If both properties are set, the ControlToCompare property takes precedence.       For more information, see <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=fullName>.      > [!IMPORTANT] >  If the control to compare is hidden or is inside a container (such as a <xref:System.Web.UI.WebControls.Panel> control) that is not visible, the validator performs server-side validation only. The validator client script supports only visible controls.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the ControlToCompare property to specify an input control, such as a &lt;xref:System.Web.UI.WebControls.TextBox&gt; control, to compare with the input control being validated.","pos":[0,173],"source":"Use the ControlToCompare property to specify an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, to compare with the input control being validated."},{"content":"If the input control specified by this property is not a control on the page, an exception is thrown.","pos":[174,275]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not set both the ControlToCompare and the &lt;xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A&gt; property at the same time.","pos":[281,433],"source":"      > [!NOTE] >  Do not set both the ControlToCompare and the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property at the same time."},{"content":"You can either compare the value of an input control to another input control, or to a constant value.","pos":[434,536]},{"content":"If both properties are set, the ControlToCompare property takes precedence.","pos":[537,612]},{"content":"For more information, see &lt;xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=fullName&gt;.","pos":[619,738],"source":"       For more information, see <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=fullName>."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  If the control to compare is hidden or is inside a container (such as a &lt;xref:System.Web.UI.WebControls.Panel&gt; control) that is not visible, the validator performs server-side validation only.","pos":[744,954],"source":"      > [!IMPORTANT] >  If the control to compare is hidden or is inside a container (such as a <xref:System.Web.UI.WebControls.Panel> control) that is not visible, the validator performs server-side validation only."},{"content":"The validator client script supports only visible controls.","pos":[955,1014]},{"content":"This property cannot be set by themes or style sheet themes.","pos":[1021,1081]},{"content":"For more information, see &lt;xref:System.Web.UI.ThemeableAttribute&gt; and <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1082,1218],"source":" For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[26320,26462],"content":"The input control to compare with the input control being validated. The default value is &lt;xref:System.String?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The input control to compare with the input control being validated. The default value is &lt;xref:System.String?displayProperty=fullName&gt;.","pos":[0,142],"nodes":[{"content":"The input control to compare with the input control being validated.","pos":[0,68]},{"content":"The default value is <ph id=\"ph1\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[69,142],"source":" The default value is &lt;xref:System.String?displayProperty=fullName&gt;."}]}]},{"pos":[26981,27108],"content":"When overridden in a derived class, this method contains the code to determine whether the value in the input control is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, this method contains the code to determine whether the value in the input control is valid.","pos":[0,127]}]},{"pos":[28290,28469],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value in the input control is valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value in the input control is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28948,28997],"content":"Gets or sets the comparison operation to perform.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the comparison operation to perform.","pos":[0,49]}]},{"pos":[29010,30839],"content":"Use the Operator property to specify the comparison operation to perform. The following table lists the comparison operations that are possible.      |Operation|Description|   |---------------|-----------------|   |`Equal`|A comparison for equality between the values of the input control being validated and another control, or a constant value.|   |`NotEqual`|A comparison for inequality between the values of the input control being validated and another control, or a constant value.|   |`GreaterThan`|A comparison for greater than between the values of the input control being validated and another control, or a constant value.|   |`GreaterThanEqual`|A comparison for greater than or equal to between the values of the input control being validated and another control, or a constant value.|   |`LessThan`|A comparison for less than between the values of the input control being validated and another control, or a constant value.|   |`LessThanEqual`|A comparison for less than or equal to between the values of the input control being validated and another control, or a constant value.|   |`DataTypeCheck`|A data type comparison of the value entered in the input control being validated and the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property. Validation fails if the value cannot be converted to the specified data type. **Note:**  The <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> properties are ignored when this operator is used.|       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Operator property to specify the comparison operation to perform.","pos":[0,73]},{"content":"The following table lists the comparison operations that are possible.","pos":[74,144]},{"content":"|Operation|Description|   |---------------|-----------------|   |<ph id=\"ph1\">`Equal`</ph>|A comparison for equality between the values of the input control being validated and another control, or a constant value.|   |<ph id=\"ph2\">`NotEqual`</ph>|A comparison for inequality between the values of the input control being validated and another control, or a constant value.|   |<ph id=\"ph3\">`GreaterThan`</ph>|A comparison for greater than between the values of the input control being validated and another control, or a constant value.|   |<ph id=\"ph4\">`GreaterThanEqual`</ph>|A comparison for greater than or equal to between the values of the input control being validated and another control, or a constant value.|   |<ph id=\"ph5\">`LessThan`</ph>|A comparison for less than between the values of the input control being validated and another control, or a constant value.|   |<ph id=\"ph6\">`LessThanEqual`</ph>|A comparison for less than or equal to between the values of the input control being validated and another control, or a constant value.|   |<ph id=\"ph7\">`DataTypeCheck`</ph>|A data type comparison of the value entered in the input control being validated and the data type specified by the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName&gt; property.","pos":[150,1326],"source":"      |Operation|Description|   |---------------|-----------------|   |`Equal`|A comparison for equality between the values of the input control being validated and another control, or a constant value.|   |`NotEqual`|A comparison for inequality between the values of the input control being validated and another control, or a constant value.|   |`GreaterThan`|A comparison for greater than between the values of the input control being validated and another control, or a constant value.|   |`GreaterThanEqual`|A comparison for greater than or equal to between the values of the input control being validated and another control, or a constant value.|   |`LessThan`|A comparison for less than between the values of the input control being validated and another control, or a constant value.|   |`LessThanEqual`|A comparison for less than or equal to between the values of the input control being validated and another control, or a constant value.|   |`DataTypeCheck`|A data type comparison of the value entered in the input control being validated and the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property."},{"content":"Validation fails if the value cannot be converted to the specified data type.","pos":[1327,1404]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  The &lt;xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A&gt; and &lt;xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A&gt; properties are ignored when this operator is used.|       This property cannot be set by themes or style sheet themes.","pos":[1405,1680],"source":"**Note:**  The <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> properties are ignored when this operator is used.|       This property cannot be set by themes or style sheet themes."},{"content":"For more information, see &lt;xref:System.Web.UI.ThemeableAttribute&gt; and <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1681,1817],"source":" For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[31708,31884],"content":"One of the <xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"></xref> values. The default value is <xref uid=\"langword_csharp_Equal\" name=\"Equal\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,91],"source":"One of the <xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"></xref> values."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Equal\" name=\"Equal\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[92,176],"source":" The default value is <xref uid=\"langword_csharp_Equal\" name=\"Equal\" href=\"\"></xref>."}]},{"pos":[32078,32210],"content":"The specified comparison operator is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The specified comparison operator is not one of the <xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"></xref> values."},{"pos":[32630,32743],"content":"Gets or sets a constant value to compare with the value entered by the user in the input control being validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a constant value to compare with the value entered by the user in the input control being validated.","pos":[0,113]}]},{"pos":[32756,33719],"content":"Use the ValueToCompare property to specify a constant value to compare with the value entered by the user in the input control being validated. If the constant value specified by this property fails to convert to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, an exception is thrown.      > [!NOTE] >  Do not set both the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and the ValueToCompare property at the same time. You can either compare the value of an input control to another input control, or to a constant value. If both properties are set, the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property takes precedence.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the ValueToCompare property to specify a constant value to compare with the value entered by the user in the input control being validated.","pos":[0,143]},{"content":"If the constant value specified by this property fails to convert to the data type specified by the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName&gt; property, an exception is thrown.","pos":[144,364],"source":" If the constant value specified by this property fails to convert to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, an exception is thrown."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not set both the &lt;xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A&gt; and the ValueToCompare property at the same time.","pos":[370,522],"source":"      > [!NOTE] >  Do not set both the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and the ValueToCompare property at the same time."},{"content":"You can either compare the value of an input control to another input control, or to a constant value.","pos":[523,625]},{"content":"If both properties are set, the &lt;xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A&gt; property takes precedence.","pos":[626,754],"source":" If both properties are set, the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property takes precedence."},{"content":"This property cannot be set by themes or style sheet themes.","pos":[761,821]},{"content":"For more information, see &lt;xref:System.Web.UI.ThemeableAttribute&gt; and <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[822,958],"source":" For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[34626,34802],"content":"The constant value to compare with the value entered by the user in the input control being validated. The default value is &lt;xref:System.String?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The constant value to compare with the value entered by the user in the input control being validated. The default value is &lt;xref:System.String?displayProperty=fullName&gt;.","pos":[0,176],"nodes":[{"content":"The constant value to compare with the value entered by the user in the input control being validated.","pos":[0,102]},{"content":"The default value is <ph id=\"ph1\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[103,176],"source":" The default value is &lt;xref:System.String?displayProperty=fullName&gt;."}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.CompareValidator\n  id: CompareValidator\n  children:\n  - System.Web.UI.WebControls.CompareValidator.#ctor\n  - System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid\n  - System.Web.UI.WebControls.CompareValidator.ControlToCompare\n  - System.Web.UI.WebControls.CompareValidator.EvaluateIsValid\n  - System.Web.UI.WebControls.CompareValidator.Operator\n  - System.Web.UI.WebControls.CompareValidator.ValueToCompare\n  langs:\n  - csharp\n  name: CompareValidator\n  nameWithType: CompareValidator\n  fullName: System.Web.UI.WebControls.CompareValidator\n  type: Class\n  summary: Compares the value entered by the user in an input control with the value entered in another input control, or with a constant value.\n  remarks: \"Use the CompareValidator control to compare the value entered by the user in an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, with the value entered in another input control or a constant value. The CompareValidator control passes validation if the value of the input control matches the criteria specified by the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>, <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>, and/or <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> properties.  \\n  \\n You can also use the CompareValidator control to indicate whether the value entered in an input control can be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property.  \\n  \\n Specify the input control to validate by setting the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property. If you want to compare a specific input control with another input control, set the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property to specify the control to compare with.  \\n  \\n> [!NOTE]\\n>  If the value entered in the input control specified by the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property cannot be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, but the value entered in the input control specified by the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property can be converted, the input control being validated is considered valid. Therefore, you should also place a CompareValidator or <xref:System.Web.UI.WebControls.RangeValidator> control on the input control specified by the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property.  \\n  \\n Instead of comparing the value of an input control with another input control, you can compare the value of an input control to a constant value. Specify the constant value to compare with by setting the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property.  \\n  \\n> [!NOTE]\\n>  If the value specified by the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property cannot be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, an exception is thrown. Be sure to check the data type of a value before programmatically assigning it to the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property.  \\n  \\n> [!NOTE]\\n>  Do not set both the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property at the same time. You can either compare the value of an input control to another input control, or to a constant value. If both properties are set, the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property takes precedence.  \\n  \\n Use the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to specify the type of comparison to perform, such as greater than, equal to, and so on. If you set the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to `ValidationCompareOperator.DataTypeCheck`, the CompareValidator control ignores the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> properties and simply indicates whether the value entered in the input control can be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property.  \\n  \\n The <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property is used to specify the data type of both comparison values. Both values are automatically converted to this data type before the comparison operation is performed.  \\n  \\n> [!IMPORTANT]\\n>  When the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> property is set to <xref:System.Web.UI.WebControls.ValidationDataType> and the current calendar type is non-Gregorian, the validator performs server-side validation only. The validator client script supports only Gregorian calendars.  \\n  \\n The following table lists the various data types that can be compared.  \\n  \\n|Data type|Description|  \\n|---------------|-----------------|  \\n|`String`|A string data type.|  \\n|`Integer`|A 32-bit signed integer data type.|  \\n|`Double`|A double-precision floating-point number data type.|  \\n|`Date`|A date data type.|  \\n|`Currency`|A decimal data type. It cannot contain currency symbols.|  \\n  \\n> [!NOTE]\\n>  If the input control is empty, no validation functions are called and validation succeeds. Use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control to require the user to enter data in the input control.  \\n  \\n> [!NOTE]\\n>  When you use the CompareValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel. For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n For more information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.  \\n  \\n## Accessibility  \\n For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to use a CompareValidator control to compare the values in two <xref:System.Web.UI.WebControls.TextBox> controls.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Classic CompareValidator Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_165_1.aspx)]\\n [!code-vb[Classic CompareValidator Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_165_1.aspx)]\"\n  syntax:\n    content: >-\n      [System.Web.UI.ToolboxData(\"<{0}:CompareValidator runat=\"server\" ErrorMessage=\"CompareValidator\"></{0}:CompareValidator>\")]\n\n      public class CompareValidator : System.Web.UI.WebControls.BaseCompareValidator\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  - System.Web.UI.WebControls.WebControl\n  - System.Web.UI.WebControls.Label\n  - System.Web.UI.WebControls.BaseValidator\n  - System.Web.UI.WebControls.BaseCompareValidator\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.Controls\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.CreateControlCollection\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String)\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.Control.Visible\n  - System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)\n  - System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)\n  - System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)\n  - System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)\n  - System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)\n  - System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)\n  - System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues\n  - System.Web.UI.WebControls.BaseCompareValidator.CutoffYear\n  - System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel\n  - System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder\n  - System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)\n  - System.Web.UI.WebControls.BaseCompareValidator.Type\n  - System.Web.UI.WebControls.BaseValidator.AssociatedControlID\n  - System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)\n  - System.Web.UI.WebControls.BaseValidator.ControlToValidate\n  - System.Web.UI.WebControls.BaseValidator.Display\n  - System.Web.UI.WebControls.BaseValidator.EnableClientScript\n  - System.Web.UI.WebControls.BaseValidator.Enabled\n  - System.Web.UI.WebControls.BaseValidator.ErrorMessage\n  - System.Web.UI.WebControls.BaseValidator.ForeColor\n  - System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)\n  - System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)\n  - System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)\n  - System.Web.UI.WebControls.BaseValidator.IsUnobtrusive\n  - System.Web.UI.WebControls.BaseValidator.IsValid\n  - System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.PropertiesValid\n  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript\n  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration\n  - System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.BaseValidator.RenderUplevel\n  - System.Web.UI.WebControls.BaseValidator.SetFocusOnError\n  - System.Web.UI.WebControls.BaseValidator.Text\n  - System.Web.UI.WebControls.BaseValidator.Validate\n  - System.Web.UI.WebControls.BaseValidator.ValidationGroup\n  - System.Web.UI.WebControls.Label.AddParsedSubObject(System.Object)\n  - System.Web.UI.WebControls.Label.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Label.RenderContents(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.Label.SupportsDisabledAttribute\n  - System.Web.UI.WebControls.Label.TagKey\n  - System.Web.UI.WebControls.WebControl.AccessKey\n  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.Attributes\n  - System.Web.UI.WebControls.WebControl.BackColor\n  - System.Web.UI.WebControls.WebControl.BorderColor\n  - System.Web.UI.WebControls.WebControl.BorderStyle\n  - System.Web.UI.WebControls.WebControl.BorderWidth\n  - System.Web.UI.WebControls.WebControl.ControlStyle\n  - System.Web.UI.WebControls.WebControl.ControlStyleCreated\n  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)\n  - System.Web.UI.WebControls.WebControl.CreateControlStyle\n  - System.Web.UI.WebControls.WebControl.CssClass\n  - System.Web.UI.WebControls.WebControl.DisabledCssClass\n  - System.Web.UI.WebControls.WebControl.EnableTheming\n  - System.Web.UI.WebControls.WebControl.Font\n  - System.Web.UI.WebControls.WebControl.HasAttributes\n  - System.Web.UI.WebControls.WebControl.Height\n  - System.Web.UI.WebControls.WebControl.IsEnabled\n  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.SaveViewState\n  - System.Web.UI.WebControls.WebControl.SkinID\n  - System.Web.UI.WebControls.WebControl.Style\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  - System.Web.UI.WebControls.WebControl.TabIndex\n  - System.Web.UI.WebControls.WebControl.TagName\n  - System.Web.UI.WebControls.WebControl.ToolTip\n  - System.Web.UI.WebControls.WebControl.TrackViewState\n  - System.Web.UI.WebControls.WebControl.Width\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CompareValidator.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.CompareValidator\n  langs:\n  - csharp\n  name: CompareValidator()\n  nameWithType: CompareValidator.CompareValidator()\n  fullName: System.Web.UI.WebControls.CompareValidator.CompareValidator()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.CompareValidator\"></xref> class.\n  remarks: The default constructor initializes any fields to their default values.\n  syntax:\n    content: public CompareValidator ();\n    parameters: []\n  overload: System.Web.UI.WebControls.CompareValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.CompareValidator\n  langs:\n  - csharp\n  name: AddAttributesToRender(HtmlTextWriter)\n  nameWithType: CompareValidator.AddAttributesToRender(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Adds the attributes of this control to the output stream for rendering on the client.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the AddAttributesToRender method in a custom server control so that the <xref:System.Web.UI.WebControls.CompareValidator> error message always appears in bold.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[CustomCompareValidatorAddAttributesToRender#1](~/add/codesnippet/csharp/1b994f47-9dd1-4b95-a5df-_1.aspx)]\\n [!code-vb[CustomCompareValidatorAddAttributesToRender#1](~/add/codesnippet/visualbasic/1b994f47-9dd1-4b95-a5df-_1.aspx)]  \\n[!code-cs[CustomCompareValidatorAddAttributesToRender#2](~/add/codesnippet/csharp/1b994f47-9dd1-4b95-a5df-_2.cs)]\\n[!code-vb[CustomCompareValidatorAddAttributesToRender#2](~/add/codesnippet/visualbasic/1b994f47-9dd1-4b95-a5df-_2.vb)]\"\n  syntax:\n    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that contains the output stream for rendering on the client.\n  overload: System.Web.UI.WebControls.CompareValidator.AddAttributesToRender*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid\n  id: ControlPropertiesValid\n  parent: System.Web.UI.WebControls.CompareValidator\n  langs:\n  - csharp\n  name: ControlPropertiesValid()\n  nameWithType: CompareValidator.ControlPropertiesValid()\n  fullName: System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Checks the properties of the control for valid values.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the ControlPropertiesValid method in a custom server control so that it always returns the value of the visible property, as long as the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property of the <xref:System.Web.UI.WebControls.CompareValidator> control is on the page and contains validation properties.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[CustomCompareValidatorControlPropertiesValid#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_12_1.aspx)]\\n [!code-vb[CustomCompareValidatorControlPropertiesValid#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_12_1.aspx)]  \\n[!code-cs[CustomCompareValidatorControlPropertiesValid#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_12_2.cs)]\\n[!code-vb[CustomCompareValidatorControlPropertiesValid#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_12_2.vb)]\"\n  syntax:\n    content: protected override bool ControlPropertiesValid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control properties are valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The value of a target property cannot be converted to the expected <xref:System.Type>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CompareValidator.ControlToCompare\n  id: ControlToCompare\n  parent: System.Web.UI.WebControls.CompareValidator\n  langs:\n  - csharp\n  name: ControlToCompare\n  nameWithType: CompareValidator.ControlToCompare\n  fullName: System.Web.UI.WebControls.CompareValidator.ControlToCompare\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the input control to compare with the input control being validated.\n  remarks: \"Use the ControlToCompare property to specify an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, to compare with the input control being validated. If the input control specified by this property is not a control on the page, an exception is thrown.  \\n  \\n> [!NOTE]\\n>  Do not set both the ControlToCompare and the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property at the same time. You can either compare the value of an input control to another input control, or to a constant value. If both properties are set, the ControlToCompare property takes precedence.  \\n  \\n For more information, see <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=fullName>.  \\n  \\n> [!IMPORTANT]\\n>  If the control to compare is hidden or is inside a container (such as a <xref:System.Web.UI.WebControls.Panel> control) that is not visible, the validator performs server-side validation only. The validator client script supports only visible controls.  \\n  \\n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to use the ControlToCompare property to specify the control to compare with the control being validated.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Classic CompareValidator Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_139_1.aspx)]\\n [!code-vb[Classic CompareValidator Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_139_1.aspx)]\"\n  syntax:\n    content: public string ControlToCompare { get; set; }\n    return:\n      type: System.String\n      description: The input control to compare with the input control being validated. The default value is &lt;xref:System.String?displayProperty=fullName&gt;.\n  overload: System.Web.UI.WebControls.CompareValidator.ControlToCompare*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CompareValidator.EvaluateIsValid\n  id: EvaluateIsValid\n  parent: System.Web.UI.WebControls.CompareValidator\n  langs:\n  - csharp\n  name: EvaluateIsValid()\n  nameWithType: CompareValidator.EvaluateIsValid()\n  fullName: System.Web.UI.WebControls.CompareValidator.EvaluateIsValid()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: When overridden in a derived class, this method contains the code to determine whether the value in the input control is valid.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the EvaluateIsValid method in a custom server control so that it always returns `true` if the values of the two specified controls are the same and `false` otherwise.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[CustomCompareValidatorEvaluateIsValid#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_237_1.aspx)]\\n [!code-cs[CustomCompareValidatorEvaluateIsValid#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_237_1.aspx)]  \\n[!code-cs[CustomCompareValidatorEvaluateIsValid#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_237_2.cs)]\\n[!code-vb[CustomCompareValidatorEvaluateIsValid#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_237_2.vb)]\"\n  syntax:\n    content: protected override bool EvaluateIsValid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value in the input control is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.CompareValidator.EvaluateIsValid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CompareValidator.Operator\n  id: Operator\n  parent: System.Web.UI.WebControls.CompareValidator\n  langs:\n  - csharp\n  name: Operator\n  nameWithType: CompareValidator.Operator\n  fullName: System.Web.UI.WebControls.CompareValidator.Operator\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the comparison operation to perform.\n  remarks: \"Use the Operator property to specify the comparison operation to perform. The following table lists the comparison operations that are possible.  \\n  \\n|Operation|Description|  \\n|---------------|-----------------|  \\n|`Equal`|A comparison for equality between the values of the input control being validated and another control, or a constant value.|  \\n|`NotEqual`|A comparison for inequality between the values of the input control being validated and another control, or a constant value.|  \\n|`GreaterThan`|A comparison for greater than between the values of the input control being validated and another control, or a constant value.|  \\n|`GreaterThanEqual`|A comparison for greater than or equal to between the values of the input control being validated and another control, or a constant value.|  \\n|`LessThan`|A comparison for less than between the values of the input control being validated and another control, or a constant value.|  \\n|`LessThanEqual`|A comparison for less than or equal to between the values of the input control being validated and another control, or a constant value.|  \\n|`DataTypeCheck`|A data type comparison of the value entered in the input control being validated and the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property. Validation fails if the value cannot be converted to the specified data type. **Note:**  The <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> properties are ignored when this operator is used.|  \\n  \\n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to use the Operator property to specify the comparison operation.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Classic CompareValidator Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_641_1.aspx)]\\n [!code-vb[Classic CompareValidator Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_641_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.ValidationCompareOperator Operator { get; set; }\n    return:\n      type: System.Web.UI.WebControls.ValidationCompareOperator\n      description: One of the <xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"></xref> values. The default value is <xref uid=\"langword_csharp_Equal\" name=\"Equal\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.CompareValidator.Operator*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified comparison operator is not one of the <xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"></xref> values.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.CompareValidator.ValueToCompare\n  id: ValueToCompare\n  parent: System.Web.UI.WebControls.CompareValidator\n  langs:\n  - csharp\n  name: ValueToCompare\n  nameWithType: CompareValidator.ValueToCompare\n  fullName: System.Web.UI.WebControls.CompareValidator.ValueToCompare\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a constant value to compare with the value entered by the user in the input control being validated.\n  remarks: \"Use the ValueToCompare property to specify a constant value to compare with the value entered by the user in the input control being validated. If the constant value specified by this property fails to convert to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, an exception is thrown.  \\n  \\n> [!NOTE]\\n>  Do not set both the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and the ValueToCompare property at the same time. You can either compare the value of an input control to another input control, or to a constant value. If both properties are set, the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property takes precedence.  \\n  \\n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to use the ValueToCompare property to compare the value entered by the user in a <xref:System.Web.UI.WebControls.TextBox> control with a constant value.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Classic CompareValidator.ValueToCompare Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_36_1.aspx)]\\n [!code-vb[Classic CompareValidator.ValueToCompare Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_36_1.aspx)]\"\n  syntax:\n    content: public string ValueToCompare { get; set; }\n    return:\n      type: System.String\n      description: The constant value to compare with the value entered by the user in the input control being validated. The default value is &lt;xref:System.String?displayProperty=fullName&gt;.\n  overload: System.Web.UI.WebControls.CompareValidator.ValueToCompare*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: System.Web.UI.WebControls.BaseCompareValidator\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Web.UI.WebControls.CompareValidator.#ctor\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: CompareValidator()\n  nameWithType: CompareValidator.CompareValidator()\n  fullName: System.Web.UI.WebControls.CompareValidator.CompareValidator()\n- uid: System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: AddAttributesToRender(HtmlTextWriter)\n  nameWithType: CompareValidator.AddAttributesToRender(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(HtmlTextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: ControlPropertiesValid()\n  nameWithType: CompareValidator.ControlPropertiesValid()\n  fullName: System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.CompareValidator.ControlToCompare\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: ControlToCompare\n  nameWithType: CompareValidator.ControlToCompare\n  fullName: System.Web.UI.WebControls.CompareValidator.ControlToCompare\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.CompareValidator.EvaluateIsValid\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: EvaluateIsValid()\n  nameWithType: CompareValidator.EvaluateIsValid()\n  fullName: System.Web.UI.WebControls.CompareValidator.EvaluateIsValid()\n- uid: System.Web.UI.WebControls.CompareValidator.Operator\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: Operator\n  nameWithType: CompareValidator.Operator\n  fullName: System.Web.UI.WebControls.CompareValidator.Operator\n- uid: System.Web.UI.WebControls.ValidationCompareOperator\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: ValidationCompareOperator\n  nameWithType: ValidationCompareOperator\n  fullName: System.Web.UI.WebControls.ValidationCompareOperator\n- uid: System.Web.UI.WebControls.CompareValidator.ValueToCompare\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: ValueToCompare\n  nameWithType: CompareValidator.ValueToCompare\n  fullName: System.Web.UI.WebControls.CompareValidator.ValueToCompare\n- uid: System.Web.UI.WebControls.CompareValidator.#ctor*\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: CompareValidator\n  nameWithType: CompareValidator.CompareValidator\n- uid: System.Web.UI.WebControls.CompareValidator.AddAttributesToRender*\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: AddAttributesToRender\n  nameWithType: CompareValidator.AddAttributesToRender\n- uid: System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid*\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: ControlPropertiesValid\n  nameWithType: CompareValidator.ControlPropertiesValid\n- uid: System.Web.UI.WebControls.CompareValidator.ControlToCompare*\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: ControlToCompare\n  nameWithType: CompareValidator.ControlToCompare\n- uid: System.Web.UI.WebControls.CompareValidator.EvaluateIsValid*\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: EvaluateIsValid\n  nameWithType: CompareValidator.EvaluateIsValid\n- uid: System.Web.UI.WebControls.CompareValidator.Operator*\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: Operator\n  nameWithType: CompareValidator.Operator\n- uid: System.Web.UI.WebControls.CompareValidator.ValueToCompare*\n  parent: System.Web.UI.WebControls.CompareValidator\n  isExternal: false\n  name: ValueToCompare\n  nameWithType: CompareValidator.ValueToCompare\n"}