{"nodes":[{"pos":[583,637],"content":"Represents a statement consisting of a single comment.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a statement consisting of a single comment.","pos":[0,54]}]},{"pos":[649,1023],"content":"CodeCommentStatement can be used to represent a single-line comment statement. CodeCommentStatement is a statement, so it can be inserted into a statements collection and will appear on its own line. CodeCommentStatement can also be added to the comments collection of <xref:System.CodeDom.CodeNamespace> or any object that derives from <xref:System.CodeDom.CodeTypeMember>.","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeCommentStatement can be used to represent a single-line comment statement. CodeCommentStatement is a statement, so it can be inserted into a statements collection and will appear on its own line. CodeCommentStatement can also be added to the comments collection of <xref:System.CodeDom.CodeNamespace> or any object that derives from <xref:System.CodeDom.CodeTypeMember>.","pos":[0,374],"nodes":[{"content":"CodeCommentStatement can be used to represent a single-line comment statement.","pos":[0,78]},{"content":"CodeCommentStatement is a statement, so it can be inserted into a statements collection and will appear on its own line.","pos":[79,199]},{"content":"CodeCommentStatement can also be added to the comments collection of &lt;xref:System.CodeDom.CodeNamespace&gt; or any object that derives from &lt;xref:System.CodeDom.CodeTypeMember&gt;.","pos":[200,374],"source":" CodeCommentStatement can also be added to the comments collection of <xref:System.CodeDom.CodeNamespace> or any object that derives from <xref:System.CodeDom.CodeTypeMember>."}]}]},{"pos":[2407,2504],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeCommentStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCommentStatement\"></xref> class."},{"pos":[3138,3263],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeCommentStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified comment.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCommentStatement\"></xref> class using the specified comment."},{"pos":[3445,3522],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeComment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the comment.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeComment\"></xref> that indicates the comment."},{"pos":[4041,4175],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeCommentStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified text as contents.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCommentStatement\"></xref> class using the specified text as contents."},{"pos":[4318,4346],"content":"The contents of the comment.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contents of the comment.","pos":[0,28]}]},{"pos":[4919,5072],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeCommentStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified text and documentation comment flag.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCommentStatement\"></xref> class using the specified text and documentation comment flag."},{"pos":[5084,5469],"content":"If the `docComment` parameter is `true`, the <xref:System.CodeDom.CodeCommentStatement> is a documentation comment and the comment is structured using triple delimiter characters. For example, in C# the comment is \"`///`\", in Visual Basic \"`'''`\". Documentation comments are used to identify an XML comment field, such as a type or member summary identified by the `<summary>` element.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the <ph id=\"ph1\">`docComment`</ph> parameter is <ph id=\"ph2\">`true`</ph>, the &lt;xref:System.CodeDom.CodeCommentStatement&gt; is a documentation comment and the comment is structured using triple delimiter characters.","pos":[0,179],"source":"If the `docComment` parameter is `true`, the <xref:System.CodeDom.CodeCommentStatement> is a documentation comment and the comment is structured using triple delimiter characters."},{"content":"For example, in C# the comment is \"<ph id=\"ph1\">`///`</ph>\", in Visual Basic \"<ph id=\"ph2\">`'''`</ph>\".","pos":[180,247],"source":" For example, in C# the comment is \"`///`\", in Visual Basic \"`'''`\"."},{"content":"Documentation comments are used to identify an XML comment field, such as a type or member summary identified by the <ph id=\"ph1\">`&lt;summary&gt;`</ph> element.","pos":[248,385],"source":" Documentation comments are used to identify an XML comment field, such as a type or member summary identified by the `<summary>` element."}]},{"pos":[6448,6476],"content":"The contents of the comment.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contents of the comment.","pos":[0,28]}]},{"pos":[6544,6722],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the comment is a documentation comment; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the comment is a documentation comment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7147,7188],"content":"Gets or sets the contents of the comment.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the comment.","pos":[0,41]}]},{"pos":[7338,7415],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeComment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the comment.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeComment\"></xref> that indicates the comment."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeCommentStatement\n  id: CodeCommentStatement\n  children:\n  - System.CodeDom.CodeCommentStatement.#ctor\n  - System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)\n  - System.CodeDom.CodeCommentStatement.#ctor(System.String)\n  - System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)\n  - System.CodeDom.CodeCommentStatement.Comment\n  langs:\n  - csharp\n  name: CodeCommentStatement\n  nameWithType: CodeCommentStatement\n  fullName: System.CodeDom.CodeCommentStatement\n  type: Class\n  summary: Represents a statement consisting of a single comment.\n  remarks: CodeCommentStatement can be used to represent a single-line comment statement. CodeCommentStatement is a statement, so it can be inserted into a statements collection and will appear on its own line. CodeCommentStatement can also be added to the comments collection of <xref:System.CodeDom.CodeNamespace> or any object that derives from <xref:System.CodeDom.CodeTypeMember>.\n  example:\n  - \"This example demonstrates using a CodeCommentStatement to represent a comment in source code.  \\n  \\n [!code-cs[CodeCommentExample#2](~/add/codesnippet/csharp/t-system.codedom.codecom_2_1.cs)]\\n [!code-cpp[CodeCommentExample#2](~/add/codesnippet/cpp/t-system.codedom.codecom_2_1.cpp)]\\n [!code-vb[CodeCommentExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codecom_2_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeCommentStatement : System.CodeDom.CodeStatement\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeStatement\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  - System.CodeDom.CodeStatement.EndDirectives\n  - System.CodeDom.CodeStatement.LinePragma\n  - System.CodeDom.CodeStatement.StartDirectives\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCommentStatement.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeCommentStatement\n  langs:\n  - csharp\n  name: CodeCommentStatement()\n  nameWithType: CodeCommentStatement.CodeCommentStatement()\n  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCommentStatement\"></xref> class.\n  syntax:\n    content: public CodeCommentStatement ();\n    parameters: []\n  overload: System.CodeDom.CodeCommentStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)\n  id: '#ctor(System.CodeDom.CodeComment)'\n  parent: System.CodeDom.CodeCommentStatement\n  langs:\n  - csharp\n  name: CodeCommentStatement(CodeComment)\n  nameWithType: CodeCommentStatement.CodeCommentStatement(CodeComment)\n  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(CodeComment)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCommentStatement\"></xref> class using the specified comment.\n  syntax:\n    content: public CodeCommentStatement (System.CodeDom.CodeComment comment);\n    parameters:\n    - id: comment\n      type: System.CodeDom.CodeComment\n      description: A <xref href=\"System.CodeDom.CodeComment\"></xref> that indicates the comment.\n  overload: System.CodeDom.CodeCommentStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCommentStatement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.CodeDom.CodeCommentStatement\n  langs:\n  - csharp\n  name: CodeCommentStatement(String)\n  nameWithType: CodeCommentStatement.CodeCommentStatement(String)\n  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCommentStatement\"></xref> class using the specified text as contents.\n  syntax:\n    content: public CodeCommentStatement (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: The contents of the comment.\n  overload: System.CodeDom.CodeCommentStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.CodeDom.CodeCommentStatement\n  langs:\n  - csharp\n  name: CodeCommentStatement(String,Boolean)\n  nameWithType: CodeCommentStatement.CodeCommentStatement(String,Boolean)\n  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(String,Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCommentStatement\"></xref> class using the specified text and documentation comment flag.\n  remarks: If the `docComment` parameter is `true`, the <xref:System.CodeDom.CodeCommentStatement> is a documentation comment and the comment is structured using triple delimiter characters. For example, in C# the comment is \"`///`\", in Visual Basic \"`'''`\". Documentation comments are used to identify an XML comment field, such as a type or member summary identified by the `<summary>` element.\n  example:\n  - \"The following code example demonstrates the use of the CodeCommentStatement constructor to create a comment statement to be used as an XML comment field. This example is part of a larger example that follows.  \\n  \\n [!code-cs[CodeDomHelloWorldSample#3](~/add/codesnippet/csharp/m-system.codedom.codecom_1.cs)]\\n [!code-vb[CodeDomHelloWorldSample#3](~/add/codesnippet/visualbasic/m-system.codedom.codecom_1.vb)]  \\n  \\n The following code example demonstrates the creation of a simple \\\"Hello World\\\" console application and the generation of an XML documentation file for the compiled application.  \\n  \\n [!code-cs[CodeDomHelloWorldSample#1](~/add/codesnippet/csharp/m-system.codedom.codecom_2.cs)]\\n [!code-vb[CodeDomHelloWorldSample#1](~/add/codesnippet/visualbasic/m-system.codedom.codecom_2.vb)]\"\n  syntax:\n    content: public CodeCommentStatement (string text, bool docComment);\n    parameters:\n    - id: text\n      type: System.String\n      description: The contents of the comment.\n    - id: docComment\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the comment is a documentation comment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.CodeDom.CodeCommentStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeCommentStatement.Comment\n  id: Comment\n  parent: System.CodeDom.CodeCommentStatement\n  langs:\n  - csharp\n  name: Comment\n  nameWithType: CodeCommentStatement.Comment\n  fullName: System.CodeDom.CodeCommentStatement.Comment\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the contents of the comment.\n  syntax:\n    content: public System.CodeDom.CodeComment Comment { get; set; }\n    return:\n      type: System.CodeDom.CodeComment\n      description: A <xref href=\"System.CodeDom.CodeComment\"></xref> that indicates the comment.\n  overload: System.CodeDom.CodeCommentStatement.Comment*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeStatement\n  isExternal: false\n  name: System.CodeDom.CodeStatement\n- uid: System.CodeDom.CodeCommentStatement.#ctor\n  parent: System.CodeDom.CodeCommentStatement\n  isExternal: false\n  name: CodeCommentStatement()\n  nameWithType: CodeCommentStatement.CodeCommentStatement()\n  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement()\n- uid: System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)\n  parent: System.CodeDom.CodeCommentStatement\n  isExternal: false\n  name: CodeCommentStatement(CodeComment)\n  nameWithType: CodeCommentStatement.CodeCommentStatement(CodeComment)\n  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(CodeComment)\n- uid: System.CodeDom.CodeComment\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeComment\n  nameWithType: CodeComment\n  fullName: System.CodeDom.CodeComment\n- uid: System.CodeDom.CodeCommentStatement.#ctor(System.String)\n  parent: System.CodeDom.CodeCommentStatement\n  isExternal: false\n  name: CodeCommentStatement(String)\n  nameWithType: CodeCommentStatement.CodeCommentStatement(String)\n  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)\n  parent: System.CodeDom.CodeCommentStatement\n  isExternal: false\n  name: CodeCommentStatement(String,Boolean)\n  nameWithType: CodeCommentStatement.CodeCommentStatement(String,Boolean)\n  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(String,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.CodeDom.CodeCommentStatement.Comment\n  parent: System.CodeDom.CodeCommentStatement\n  isExternal: false\n  name: Comment\n  nameWithType: CodeCommentStatement.Comment\n  fullName: System.CodeDom.CodeCommentStatement.Comment\n- uid: System.CodeDom.CodeCommentStatement.#ctor*\n  parent: System.CodeDom.CodeCommentStatement\n  isExternal: false\n  name: CodeCommentStatement\n  nameWithType: CodeCommentStatement.CodeCommentStatement\n- uid: System.CodeDom.CodeCommentStatement.Comment*\n  parent: System.CodeDom.CodeCommentStatement\n  isExternal: false\n  name: Comment\n  nameWithType: CodeCommentStatement.Comment\n"}