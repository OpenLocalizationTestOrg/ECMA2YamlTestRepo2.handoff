{"nodes":[{"pos":[3700,3782],"content":"Represents a collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Represents a collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects."},{"pos":[3795,5226],"content":"The StrokeCollection enables you to perform functions such as hit testing, clipping, and erasing strokes. The <xref:System.Windows.Controls.InkCanvas> control performs many of these functions, but if you need more control than the <xref:System.Windows.Controls.InkCanvas> provides, the StrokeCollection offers more options.       The following table lists where to learn about managing digital ink on a custom control.      |To do this…|See this article|   |-----------------|----------------------|   |Create a control that collects digital ink|[Creating an Ink Input Control](~/add/includes/ajax-current-ext-md.md)|   |Create a control that enables the user to select ink|[How to: Select Ink from a Custom Control](~/add/includes/ajax-current-ext-md.md)|   |Create a control that enables the user to point-erase ink|[How to: Erase Ink on a Custom Control](~/add/includes/ajax-current-ext-md.md)|      <a name=\"xamlAttributeUsage_StrokeCollection\"></a>    ## XAML Attribute Usage      ```   <object StrokeCollection=\"isfString\"/>   ```      <a name=\"xamlObjectElementUsage_StrokeCollection\"></a>    ## XAML Object Element Usage      ```   <object>isfString</object>   ```      <a name=\"xamlValues_StrokeCollection\"></a>    ## XAML Values      |Term|Definition|   |----------|----------------|   |`isfString`|A string that represents the stroke in base-64, encoded Ink Serialized Format (ISF).|","needQuote":false,"needEscape":true,"nodes":[{"content":"The StrokeCollection enables you to perform functions such as hit testing, clipping, and erasing strokes.","pos":[0,105]},{"content":"The &lt;xref:System.Windows.Controls.InkCanvas&gt; control performs many of these functions, but if you need more control than the &lt;xref:System.Windows.Controls.InkCanvas&gt; provides, the StrokeCollection offers more options.","pos":[106,323],"source":" The <xref:System.Windows.Controls.InkCanvas> control performs many of these functions, but if you need more control than the <xref:System.Windows.Controls.InkCanvas> provides, the StrokeCollection offers more options."},{"content":"The following table lists where to learn about managing digital ink on a custom control.","pos":[330,418]},{"content":"|To do this…|See this article|   |-----------------|----------------------|   |Create a control that collects digital ink|<bpt id=\"p1\">[</bpt>Creating an Ink Input Control<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Create a control that enables the user to select ink|<bpt id=\"p2\">[</bpt>How to: Select Ink from a Custom Control<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Create a control that enables the user to point-erase ink|<bpt id=\"p3\">[</bpt>How to: Erase Ink on a Custom Control<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept><ph id=\"ph1\">|      </ph><bpt id=\"p4\">&lt;a name=\"xamlAttributeUsage_StrokeCollection\"&gt;</bpt><ept id=\"p4\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph2\">```   &lt;object StrokeCollection=\"isfString\"/&gt;   ```</ph>      <bpt id=\"p5\">&lt;a name=\"xamlObjectElementUsage_StrokeCollection\"&gt;</bpt><ept id=\"p5\">&lt;/a&gt;</ept>    ## XAML Object Element Usage      <ph id=\"ph3\">```   &lt;object&gt;isfString&lt;/object&gt;   ```</ph>      <bpt id=\"p6\">&lt;a name=\"xamlValues_StrokeCollection\"&gt;</bpt><ept id=\"p6\">&lt;/a&gt;</ept>    ## XAML Values      |Term|Definition|   |----------|----------------|   |<ph id=\"ph4\">`isfString`</ph>|A string that represents the stroke in base-64, encoded Ink Serialized Format (ISF).|","pos":[424,1394],"source":"      |To do this…|See this article|   |-----------------|----------------------|   |Create a control that collects digital ink|[Creating an Ink Input Control](~/add/includes/ajax-current-ext-md.md)|   |Create a control that enables the user to select ink|[How to: Select Ink from a Custom Control](~/add/includes/ajax-current-ext-md.md)|   |Create a control that enables the user to point-erase ink|[How to: Erase Ink on a Custom Control](~/add/includes/ajax-current-ext-md.md)|      <a name=\"xamlAttributeUsage_StrokeCollection\"></a>    ## XAML Attribute Usage      ```   <object StrokeCollection=\"isfString\"/>   ```      <a name=\"xamlObjectElementUsage_StrokeCollection\"></a>    ## XAML Object Element Usage      ```   <object>isfString</object>   ```      <a name=\"xamlValues_StrokeCollection\"></a>    ## XAML Values      |Term|Definition|   |----------|----------------|   |`isfString`|A string that represents the stroke in base-64, encoded Ink Serialized Format (ISF).|"}]},{"pos":[6825,6922],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> class."},{"pos":[7652,7785],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that contains the specified strokes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> class that contains the specified strokes."},{"pos":[8041,8124],"content":"The strokes to add to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The strokes to add to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[8647,8792],"content":"Initializes a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified &lt;xref:System.IO.Stream&gt; of Ink Serialized Format (ISF).","needQuote":true,"needEscape":true,"source":"Initializes a <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> from the specified <xref:System.IO.Stream> of Ink Serialized Format (ISF)."},{"pos":[9637,9669],"content":"A stream that contains ink data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A stream that contains ink data.","pos":[0,32]}]},{"pos":[10210,10301],"content":"Adds the specified strokes to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds the specified strokes to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[10313,10403],"content":"The Add method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Add method raises the &lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt; event.","pos":[0,90],"source":"The Add method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event."}]},{"pos":[11252,11338],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to add to the collection."},{"pos":[11500,11657],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">strokes</ph><ept id=\"p2\">&lt;/code&gt;</ept> is already a member of the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokes</code> is already a member of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[11760,11845],"content":"<ph id=\"ph1\">&lt;code&gt;strokes&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>strokes</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12339,12426],"content":"Adds a custom property to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds a custom property to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[12438,12640],"content":"The AddPropertyData method enables you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The AddPropertyData method enables you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.","pos":[0,202],"nodes":[{"content":"The AddPropertyData method enables you to add custom properties to a &lt;xref:System.Windows.Ink.StrokeCollection&gt;.","pos":[0,112],"source":"The AddPropertyData method enables you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>."},{"content":"You can then include extra information with a &lt;xref:System.Windows.Ink.StrokeCollection&gt;.","pos":[113,202],"source":" You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>."}]}]},{"pos":[13571,13632],"content":"The <xref:System.Guid> to associate with the custom property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Guid&gt; to associate with the custom property.","pos":[0,61],"source":"The <xref:System.Guid> to associate with the custom property."}]},{"pos":[13701,14152],"content":"The value of the custom property. `propertyData` must be of type <xref:System.Char>, <xref:System.Byte>,<xref:System.Int16>,,<xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.DateTime>, <xref:System.Boolean>, <xref:System.String>, <xref:System.Decimal> or an array of these data types, except <xref:System.String>, which is not allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the custom property.","pos":[0,33]},{"content":"<ph id=\"ph1\">`propertyData`</ph> must be of type &lt;xref:System.Char&gt;, &lt;xref:System.Byte&gt;,&lt;xref:System.Int16&gt;,,&lt;xref:System.UInt16&gt;, &lt;xref:System.Int32&gt;, &lt;xref:System.UInt32&gt;, &lt;xref:System.Int64&gt;, &lt;xref:System.UInt64&gt;, &lt;xref:System.Single&gt;, &lt;xref:System.Double&gt;, &lt;xref:System.DateTime&gt;, &lt;xref:System.Boolean&gt;, &lt;xref:System.String&gt;, &lt;xref:System.Decimal&gt; or an array of these data types, except &lt;xref:System.String&gt;, which is not allowed.","pos":[34,451],"source":"`propertyData` must be of type <xref:System.Char>, <xref:System.Byte>,<xref:System.Int16>,,<xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.DateTime>, <xref:System.Boolean>, <xref:System.String>, <xref:System.Decimal> or an array of these data types, except <xref:System.String>, which is not allowed."}]},{"pos":[14327,14572],"content":"<code>propertyDataId</code> is an empty <xref:System.Guid>.       -or-       <code>propertyData</code> is not one of the allowed data types listed in the <xref uid=\"langword_csharp_Parameters\" name=\"Parameters\" href=\"\"></xref> section.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;propertyDataId&lt;/code&gt;</ph> is an empty <ph id=\"ph2\">&lt;xref:System.Guid&gt;</ph>.","pos":[0,59],"source":"<code>propertyDataId</code> is an empty <xref:System.Guid>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;propertyData&lt;/code&gt;</ph> is not one of the allowed data types listed in the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Parameters\" name=\"Parameters\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> section.","pos":[66,235],"source":"       -or-       <code>propertyData</code> is not one of the allowed data types listed in the <xref uid=\"langword_csharp_Parameters\" name=\"Parameters\" href=\"\"></xref> section."}]},{"pos":[14955,15040],"content":"Clears all strokes from the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Clears all strokes from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[15735,15912],"content":"Removes all strokes in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that are outside the bounds of the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> array.","needQuote":true,"needEscape":true,"source":"Removes all strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that are outside the bounds of the specified <xref href=\"System.Drawing.Point\"></xref> array."},{"pos":[15925,16164],"content":"The Clip method connects the first and last points in `lassoPoints` to create the lasso.       The Clip method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it clips.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Clip method connects the first and last points in <ph id=\"ph1\">`lassoPoints`</ph> to create the lasso.","pos":[0,88],"source":"The Clip method connects the first and last points in `lassoPoints` to create the lasso."},{"content":"The Clip method raises the &lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt; event for each &lt;xref:System.Windows.Ink.Stroke&gt; it clips.","pos":[95,237],"source":"       The Clip method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it clips."}]},{"pos":[16886,16983],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the area to be clipped.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Drawing.Point\"></xref> that specifies the area to be clipped."},{"pos":[17460,17592],"content":"Replaces all strokes that are clipped by the specified rectangle with new strokes that do not extend beyond the specified rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces all strokes that are clipped by the specified rectangle with new strokes that do not extend beyond the specified rectangle.","pos":[0,132]}]},{"pos":[17604,17678],"content":"All strokes that are entirely outside the specified rectangle are removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"All strokes that are entirely outside the specified rectangle are removed.","pos":[0,74]}]},{"pos":[18315,18396],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the area to be clipped.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to be clipped."},{"pos":[18824,18892],"content":"Copies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Copies the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[18904,19066],"content":"The Clone method copies each <xref:System.Windows.Ink.Stroke> in the collection and the new <xref:System.Windows.Ink.StrokeCollection> references the new strokes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Clone method copies each &lt;xref:System.Windows.Ink.Stroke&gt; in the collection and the new &lt;xref:System.Windows.Ink.StrokeCollection&gt; references the new strokes.","pos":[0,162],"source":"The Clone method copies each <xref:System.Windows.Ink.Stroke> in the collection and the new <xref:System.Windows.Ink.StrokeCollection> references the new strokes."}]},{"pos":[19910,19981],"content":"A copy of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A copy of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[20523,20647],"content":"Returns whether the specified custom property identifier is in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns whether the specified custom property identifier is in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[21460,21557],"content":"The &lt;xref:System.Guid&gt; to locate in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Guid> to locate in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[21616,21863],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified custom property identifier is in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified custom property identifier is in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22418,22500],"content":"Draws the strokes in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Draws the strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[23260,23399],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on which to draw the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.DrawingContext\"></xref> on which to draw the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[24005,24069],"content":"Removes the ink that is within the bounds of the specified area.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the ink that is within the bounds of the specified area.","pos":[0,64]}]},{"pos":[24082,24627],"content":"The Erase method connects the first and last points in `lassoPoints` to create the lasso.       The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the Erase method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.       The Erase method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Erase method connects the first and last points in <ph id=\"ph1\">`lassoPoints`</ph> to create the lasso.","pos":[0,89],"source":"The Erase method connects the first and last points in `lassoPoints` to create the lasso."},{"content":"The &lt;xref:System.Windows.Ink.StrokeCollection&gt; might contain new strokes after the Erase method is called.","pos":[96,202],"source":"       The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the Erase method is called."},{"content":"For example, if the specified area is through the middle of a &lt;xref:System.Windows.Ink.Stroke&gt;, the erase method removes that &lt;xref:System.Windows.Ink.Stroke&gt; and creates two new strokes.","pos":[203,390],"source":" For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes."},{"content":"The Erase method raises the &lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt; event for each &lt;xref:System.Windows.Ink.Stroke&gt; it erases.","pos":[397,541],"source":"       The Erase method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases."}]},{"pos":[25343,25439],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the area to be erased.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Drawing.Point\"></xref> that specifies the area to be erased."},{"pos":[25922,26060],"content":"Replaces all strokes that are clipped by the specified rectangle with new strokes that do not enter the bounds of the specified rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces all strokes that are clipped by the specified rectangle with new strokes that do not enter the bounds of the specified rectangle.","pos":[0,138]}]},{"pos":[26073,26595],"content":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the Erase method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  All strokes that are entirely inside the specified rectangle are removed.       The Erase method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the Erase method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  All strokes that are entirely inside the specified rectangle are removed.       The Erase method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.","pos":[0,520],"nodes":[{"content":"The &lt;xref:System.Windows.Ink.StrokeCollection&gt; might contain new strokes after the Erase method is called.","pos":[0,106],"source":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the Erase method is called."},{"content":"For example, if the specified area is through the middle of a &lt;xref:System.Windows.Ink.Stroke&gt;, the erase method removes that &lt;xref:System.Windows.Ink.Stroke&gt; and creates two new strokes.","pos":[107,294],"source":" For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes."},{"content":"All strokes that are entirely inside the specified rectangle are removed.","pos":[296,369]},{"content":"The Erase method raises the &lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt; event for each &lt;xref:System.Windows.Ink.Stroke&gt; it erases.","pos":[376,520],"source":"       The Erase method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases."}]}]},{"pos":[27213,27293],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the area to be erased.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to be erased."},{"pos":[27998,28204],"content":"Replaces all strokes that are clipped by the region created by the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> along the specified path with new Strokes that are not clipped by the region.","needQuote":true,"needEscape":true,"source":"Replaces all strokes that are clipped by the region created by the specified <xref href=\"System.Windows.Ink.StylusShape\"></xref> along the specified path with new Strokes that are not clipped by the region."},{"pos":[28217,28652],"content":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the Erase method is called. For example, if `path` intersects the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.       The Erase method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Ink.StrokeCollection&gt; might contain new strokes after the Erase method is called.","pos":[0,106],"source":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the Erase method is called."},{"content":"For example, if <ph id=\"ph1\">`path`</ph> intersects the middle of a &lt;xref:System.Windows.Ink.Stroke&gt;, the erase method removes that &lt;xref:System.Windows.Ink.Stroke&gt; and creates two new strokes.","pos":[107,282],"source":" For example, if `path` intersects the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes."},{"content":"The Erase method raises the &lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt; event for each &lt;xref:System.Windows.Ink.Stroke&gt; it erases.","pos":[289,433],"source":"       The Erase method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases."}]},{"pos":[29384,29480],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the path to be erased.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Windows.Point\"></xref> that specifies the path to be erased."},{"pos":[29565,29658],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the shape of the eraser.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of the eraser."},{"pos":[30107,30159],"content":"Returns the bounds of the strokes in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the bounds of the strokes in the collection.","pos":[0,52]}]},{"pos":[30171,30496],"content":"The GetBounds method returns a <xref:System.Windows.Rect> that takes the appearance of the rendered <xref:System.Windows.Ink.Stroke>. For example, if <xref:System.Windows.Ink.Stroke> is 10 display independent pixels (DIP) wide, the <xref:System.Windows.Rect> includes the entire width of the <xref:System.Windows.Ink.Stroke>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GetBounds method returns a <xref:System.Windows.Rect> that takes the appearance of the rendered <xref:System.Windows.Ink.Stroke>. For example, if <xref:System.Windows.Ink.Stroke> is 10 display independent pixels (DIP) wide, the <xref:System.Windows.Rect> includes the entire width of the <xref:System.Windows.Ink.Stroke>.","pos":[0,325],"nodes":[{"content":"The GetBounds method returns a &lt;xref:System.Windows.Rect&gt; that takes the appearance of the rendered &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[0,133],"source":"The GetBounds method returns a <xref:System.Windows.Rect> that takes the appearance of the rendered <xref:System.Windows.Ink.Stroke>."},{"content":"For example, if &lt;xref:System.Windows.Ink.Stroke&gt; is 10 display independent pixels (DIP) wide, the &lt;xref:System.Windows.Rect&gt; includes the entire width of the &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[134,325],"source":" For example, if <xref:System.Windows.Ink.Stroke> is 10 display independent pixels (DIP) wide, the <xref:System.Windows.Rect> includes the entire width of the <xref:System.Windows.Ink.Stroke>."}]}]},{"pos":[31128,31275],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the bounds of the strokes in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> that contains the bounds of the strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[31866,32048],"content":"Creates an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that hit tests the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with a lasso (freehand) path.","needQuote":true,"needEscape":true,"source":"Creates an <xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with a lasso (freehand) path."},{"pos":[32060,32502],"content":"The GetIncrementalLassoHitTester method returns an <xref:System.Windows.Ink.IncrementalLassoHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the lasso path surrounds it. This is useful for implementing features, such as the ability to select a stroke with a lasso tool. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalLassoHitTester> to implement the lasso selection tool.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GetIncrementalLassoHitTester method returns an <xref:System.Windows.Ink.IncrementalLassoHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the lasso path surrounds it. This is useful for implementing features, such as the ability to select a stroke with a lasso tool. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalLassoHitTester> to implement the lasso selection tool.","pos":[0,442],"nodes":[{"content":"The GetIncrementalLassoHitTester method returns an &lt;xref:System.Windows.Ink.IncrementalLassoHitTester&gt; that considers a &lt;xref:System.Windows.Ink.Stroke&gt; to be \"hit\" when the lasso path surrounds it.","pos":[0,198],"source":"The GetIncrementalLassoHitTester method returns an <xref:System.Windows.Ink.IncrementalLassoHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the lasso path surrounds it."},{"content":"This is useful for implementing features, such as the ability to select a stroke with a lasso tool.","pos":[199,298]},{"content":"The &lt;xref:System.Windows.Controls.InkCanvas&gt; uses an &lt;xref:System.Windows.Ink.IncrementalLassoHitTester&gt; to implement the lasso selection tool.","pos":[299,442],"source":" The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalLassoHitTester> to implement the lasso selection tool."}]}]},{"pos":[33274,33420],"content":"The minimum percentage of each <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that must be contained within the lasso for it to be considered hit.","needQuote":true,"needEscape":true,"source":"The minimum percentage of each <xref href=\"System.Windows.Ink.Stroke\"></xref> that must be contained within the lasso for it to be considered hit."},{"pos":[33509,33654],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that hit tests the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[34323,34498],"content":"Creates an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that hit tests the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with an erasing path.","needQuote":true,"needEscape":true,"source":"Creates an <xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with an erasing path."},{"pos":[34510,35070],"content":"The GetIncrementalStrokeHitTester method returns an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the eraser path intersects it. This is useful for implementing features, such as the ability to erase part of a <xref:System.Windows.Ink.Stroke>. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalStrokeHitTester> when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GetIncrementalStrokeHitTester method returns an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the eraser path intersects it. This is useful for implementing features, such as the ability to erase part of a <xref:System.Windows.Ink.Stroke>. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalStrokeHitTester> when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode>.","pos":[0,560],"nodes":[{"content":"The GetIncrementalStrokeHitTester method returns an &lt;xref:System.Windows.Ink.IncrementalStrokeHitTester&gt; that considers a &lt;xref:System.Windows.Ink.Stroke&gt; to be \"hit\" when the eraser path intersects it.","pos":[0,202],"source":"The GetIncrementalStrokeHitTester method returns an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the eraser path intersects it."},{"content":"This is useful for implementing features, such as the ability to erase part of a &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[203,317],"source":" This is useful for implementing features, such as the ability to erase part of a <xref:System.Windows.Ink.Stroke>."},{"content":"The &lt;xref:System.Windows.Controls.InkCanvas&gt; uses an &lt;xref:System.Windows.Ink.IncrementalStrokeHitTester&gt; when the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; property is set to &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;.","pos":[318,560],"source":" The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalStrokeHitTester> when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode>."}]}]},{"pos":[35819,35910],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the tip of the stylus.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the tip of the stylus."},{"pos":[36000,36146],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that hit tests the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[36687,36777],"content":"Returns the value of the custom property associated with the specified <xref:System.Guid>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the custom property associated with the specified &lt;xref:System.Guid&gt;.","pos":[0,90],"source":"Returns the value of the custom property associated with the specified <xref:System.Guid>."}]},{"pos":[36789,37057],"content":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> and GetPropertyData methods enable you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> and GetPropertyData methods enable you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.","pos":[0,268],"nodes":[{"content":"The &lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt; and GetPropertyData methods enable you to add custom properties to a &lt;xref:System.Windows.Ink.StrokeCollection&gt;.","pos":[0,178],"source":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> and GetPropertyData methods enable you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>."},{"content":"You can then include extra information with a &lt;xref:System.Windows.Ink.StrokeCollection&gt;.","pos":[179,268],"source":" You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>."}]}]},{"pos":[37969,38035],"content":"The <xref:System.Guid> associated with the custom property to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Guid&gt; associated with the custom property to get.","pos":[0,66],"source":"The <xref:System.Guid> associated with the custom property to get."}]},{"pos":[38093,38175],"content":"The value of the custom property associated with the specified <xref:System.Guid>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the custom property associated with the specified &lt;xref:System.Guid&gt;.","pos":[0,82],"source":"The value of the custom property associated with the specified <xref:System.Guid>."}]},{"pos":[38349,38482],"content":"<ph id=\"ph1\">&lt;code&gt;propertyDataId&lt;/code&gt;</ph> is not associated with a custom property of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[38904,39024],"content":"Returns the GUIDs of any custom properties associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the GUIDs of any custom properties associated with the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[39554,39637],"content":"An array of type <xref:System.Guid> that represent the custom property identifiers.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Guid&gt; that represent the custom property identifiers.","pos":[0,83],"source":"An array of type <xref:System.Guid> that represent the custom property identifiers."}]},{"pos":[40148,40215],"content":"Returns a collection of strokes that intersect the specified point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of strokes that intersect the specified point.","pos":[0,67]}]},{"pos":[40900,40922],"content":"The point to hit test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The point to hit test.","pos":[0,22]}]},{"pos":[41002,41108],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that intersect the specified point.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects that intersect the specified point."},{"pos":[41771,41883],"content":"Returns a collection of strokes that have at least the specified percentage of length within the specified area.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of strokes that have at least the specified percentage of length within the specified area.","pos":[0,112]}]},{"pos":[42874,42989],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the bounds of the area to be hit tested.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.Windows.Point\"></xref> that represents the bounds of the area to be hit tested."},{"pos":[43066,43189],"content":"The acceptable length of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, as a percentage, for <ph id=\"ph1\">`lassoPoints`</ph> to contain.","needQuote":true,"needEscape":true,"source":"The acceptable length of the <xref href=\"System.Windows.Ink.Stroke\"></xref>, as a percentage, for `lassoPoints` to contain."},{"pos":[43269,43443],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that has strokes with at least the specified percentage within the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> array.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that has strokes with at least the specified percentage within the <xref href=\"System.Windows.Point\"></xref> array."},{"pos":[43618,43840],"content":"<code>lassoPoints</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>percentageWithinLasso</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;lassoPoints&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,89],"source":"<code>lassoPoints</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;percentageWithinLasso&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[96,206],"source":"       -or-       <code>percentageWithinLasso</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[43936,43985],"content":"<ph id=\"ph1\">&lt;code&gt;lassoPoints&lt;/code&gt;</ph> contains an empty array.","needQuote":true,"needEscape":true,"source":"<code>lassoPoints</code> contains an empty array."},{"pos":[44100,44170],"content":"<ph id=\"ph1\">&lt;code&gt;percentageWithinLasso&lt;/code&gt;</ph> is less than 0 or greater than 100.","needQuote":true,"needEscape":true,"source":"<code>percentageWithinLasso</code> is less than 0 or greater than 100."},{"pos":[44813,44884],"content":"Returns a collection of strokes that intersect with the specified path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of strokes that intersect with the specified path.","pos":[0,71]}]},{"pos":[45717,45818],"content":"An array to type <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the path to be hit tested.","needQuote":true,"needEscape":true,"source":"An array to type <xref href=\"System.Windows.Point\"></xref> that represents the path to be hit tested."},{"pos":[45903,46000],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the shape of <ph id=\"ph1\">`eraserPath`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of `eraserPath`."},{"pos":[46080,46188],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of strokes that intersect with <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> of strokes that intersect with <code>path</code>."},{"pos":[46737,46803],"content":"Returns a collection of strokes that intersect the specified area.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of strokes that intersect the specified area.","pos":[0,66]}]},{"pos":[47505,47563],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to hit test.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Point\"></xref> to hit test."},{"pos":[47628,47714],"content":"The size of the area around the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to hit test.","needQuote":true,"needEscape":true,"source":"The size of the area around the <xref href=\"System.Windows.Point\"></xref> to hit test."},{"pos":[47794,47900],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that intersect the specified point.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects that intersect the specified point."},{"pos":[48439,48556],"content":"Returns a collection of strokes that have at least the specified percentage of length within the specified rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of strokes that have at least the specified percentage of length within the specified rectangle.","pos":[0,117]}]},{"pos":[49269,49355],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the bounds to be hit tested.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the bounds to be hit tested."},{"pos":[49433,49531],"content":"The minimum required length of a Stroke that must exist within bounds for it to be considered hit.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minimum required length of a Stroke that must exist within bounds for it to be considered hit.","pos":[0,98]}]},{"pos":[49611,49778],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that has strokes with at least the specified percentage within the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that has strokes with at least the specified percentage within the <xref href=\"System.Windows.Rect\"></xref>."},{"pos":[50291,50437],"content":"Returns the index of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the index of the specified <xref href=\"System.Windows.Ink.Stroke\"></xref> in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[50449,50557],"content":"The IndexOf method returns -1 if <ph id=\"ph1\">`stroke`</ph> is not a member of the &lt;xref:System.Windows.Ink.StrokeCollection&gt;.","needQuote":true,"needEscape":true,"source":"The IndexOf method returns -1 if `stroke` is not a member of the <xref:System.Windows.Ink.StrokeCollection>."},{"pos":[50726,50764],"content":"The stroke whose position is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stroke whose position is required.","pos":[0,38]}]},{"pos":[50821,50845],"content":"The index of the stroke.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the stroke.","pos":[0,24]}]},{"pos":[51339,51393],"content":"Represents the native persistence format for ink data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the native persistence format for ink data.","pos":[0,54]}]},{"pos":[51405,51621],"content":"Use the InkSerializedFormat field to specify the format of the <xref:System.Windows.Ink.StrokeCollection> when you transfer data, such as when you copy the <xref:System.Windows.Ink.StrokeCollection> to the Clipboard.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the InkSerializedFormat field to specify the format of the &lt;xref:System.Windows.Ink.StrokeCollection&gt; when you transfer data, such as when you copy the &lt;xref:System.Windows.Ink.StrokeCollection&gt; to the Clipboard.","pos":[0,216],"source":"Use the InkSerializedFormat field to specify the format of the <xref:System.Windows.Ink.StrokeCollection> when you transfer data, such as when you copy the <xref:System.Windows.Ink.StrokeCollection> to the Clipboard."}]},{"pos":[52314,52326],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52841,52947],"content":"Inserts a stroke into the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index.","needQuote":true,"needEscape":true,"source":"Inserts a stroke into the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> at the specified index."},{"pos":[53136,53156],"content":"The specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified index.","pos":[0,20]}]},{"pos":[53231,53251],"content":"The specified stroke","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified stroke","pos":[0,20]}]},{"pos":[53913,54003],"content":"Occurs when any <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property changes.","needQuote":true,"needEscape":true,"source":"Occurs when any <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> property changes."},{"pos":[54226,54237],"content":"Event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Event data.","pos":[0,11]}]},{"pos":[54940,55034],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection.PropertyDataChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Ink.StrokeCollection.PropertyDataChanged\"></xref> event."},{"pos":[55263,55363],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> that contains the event data."},{"pos":[56065,56154],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection.StrokesChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Ink.StrokeCollection.StrokesChanged\"></xref> event."},{"pos":[56167,56419],"content":"Raising an event invokes the event handler through a delegate.       The OnStrokesChanged method also allows derived classes to handle the event without attaching a delegate, which is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.       The OnStrokesChanged method also allows derived classes to handle the event without attaching a delegate, which is the preferred technique for handling the event in a derived class.","pos":[0,250],"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"The OnStrokesChanged method also allows derived classes to handle the event without attaching a delegate, which is the preferred technique for handling the event in a derived class.","pos":[69,250]}]}]},{"pos":[56652,56756],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollectionChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Ink.StrokeCollectionChangedEventArgs\"></xref> that contains the event data."},{"pos":[57259,57373],"content":"Occurs when custom property is added or removed from the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when custom property is added or removed from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[58105,58117],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58618,58668],"content":"Removes the specified strokes from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified strokes from the collection.","pos":[0,50]}]},{"pos":[58680,58826],"content":"The Remove method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it removes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Remove method raises the &lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt; event for each &lt;xref:System.Windows.Ink.Stroke&gt; it removes.","pos":[0,146],"source":"The Remove method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it removes."}]},{"pos":[59686,59777],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove from the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to remove from the collection."},{"pos":[60275,60383],"content":"Removes the stroke at the specified index from the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes the stroke at the specified index from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[60538,60558],"content":"The specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified index.","pos":[0,20]}]},{"pos":[61095,61172],"content":"Removes the custom property associated with the specified <xref:System.Guid>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the custom property associated with the specified &lt;xref:System.Guid&gt;.","pos":[0,77],"source":"Removes the custom property associated with the specified <xref:System.Guid>."}]},{"pos":[61860,61929],"content":"The <xref:System.Guid> associated with the custom property to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Guid&gt; associated with the custom property to remove.","pos":[0,69],"source":"The <xref:System.Guid> associated with the custom property to remove."}]},{"pos":[62576,62722],"content":"Replaces the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Replaces the specified <xref href=\"System.Windows.Ink.Stroke\"></xref> with the specified <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[62734,62828],"content":"The Replace method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Replace method raises the &lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt; event.","pos":[0,94],"source":"The Replace method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event."}]},{"pos":[63593,63655],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to replace.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Ink.Stroke\"></xref> to replace."},{"pos":[63754,63822],"content":"The source <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The source <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[63989,64247],"content":"<code>strokesToReplace</code> is empty.       -or-       <code>strokesToReplaceWith</code> is empty.       -or-       A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace</code>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;strokesToReplace&lt;/code&gt;</ph> is empty.","pos":[0,39],"source":"<code>strokesToReplace</code> is empty."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;strokesToReplaceWith&lt;/code&gt;</ph> is empty.","pos":[46,100],"source":"       -or-       <code>strokesToReplaceWith</code> is empty."},{"content":"-or-       A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in <ph id=\"ph1\">&lt;code&gt;strokesToReplaceWith&lt;/code&gt;</ph> is already in <ph id=\"ph2\">&lt;code&gt;strokesToReplace&lt;/code&gt;</ph>.","pos":[107,248],"source":"       -or-       A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace</code>."}]},{"pos":[64860,65008],"content":"Replaces the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with a new <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Replaces the specified <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with a new <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[65020,65168],"content":"The Replace method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it replaces.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Replace method raises the &lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt; event for each &lt;xref:System.Windows.Ink.Stroke&gt; it replaces.","pos":[0,148],"source":"The Replace method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it replaces."}]},{"pos":[65955,66028],"content":"The destination <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The destination <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[66127,66195],"content":"The source <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The source <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[66362,66710],"content":"<code>strokesToReplace</code> is empty.       -or-       <code>strokesToReplaceWith</code> is empty.       -or-       A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace.</code>       -or-       The strokes in <code>strokesToReplaceWith</code> are not continuous.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;strokesToReplace&lt;/code&gt;</ph> is empty.","pos":[0,39],"source":"<code>strokesToReplace</code> is empty."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;strokesToReplaceWith&lt;/code&gt;</ph> is empty.","pos":[46,100],"source":"       -or-       <code>strokesToReplaceWith</code> is empty."},{"content":"-or-       A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in <ph id=\"ph1\">&lt;code&gt;strokesToReplaceWith&lt;/code&gt;</ph> is already in <ph id=\"ph2\">&lt;code&gt;strokesToReplace.&lt;/code&gt;</ph>       -or-       The strokes in <ph id=\"ph3\">&lt;code&gt;strokesToReplaceWith&lt;/code&gt;</ph> are not continuous.","pos":[107,334],"source":"       -or-       A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace.</code>       -or-       The strokes in <code>strokesToReplaceWith</code> are not continuous."}]},{"pos":[67117,67225],"content":"Saves the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified &lt;xref:System.IO.Stream&gt;.","needQuote":true,"needEscape":true,"source":"Saves the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to the specified <xref:System.IO.Stream>."},{"pos":[67237,67337],"content":"The Save method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF).","needQuote":true,"needEscape":true,"nodes":[{"content":"The Save method saves the &lt;xref:System.Windows.Ink.StrokeCollection&gt; as Ink Serialized Format (ISF).","pos":[0,100],"source":"The Save method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF)."}]},{"pos":[68044,68150],"content":"The &lt;xref:System.IO.Stream&gt; to which to save the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IO.Stream> to which to save the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[68681,68823],"content":"Saves the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified &lt;xref:System.IO.Stream&gt; and compresses it, when specified.","needQuote":true,"needEscape":true,"source":"Saves the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to the specified <xref:System.IO.Stream> and compresses it, when specified."},{"pos":[68835,68981],"content":"The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF).","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Ink.StrokeCollection.Save%2A&gt; method saves the &lt;xref:System.Windows.Ink.StrokeCollection&gt; as Ink Serialized Format (ISF).","pos":[0,146],"source":"The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF)."}]},{"pos":[69629,69735],"content":"The &lt;xref:System.IO.Stream&gt; to which to save the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IO.Stream> to which to save the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[69801,70010],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compress the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to compress the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[70564,70607],"content":"Replaces the stroke at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces the stroke at the specified index.","pos":[0,43]}]},{"pos":[70793,70837],"content":"The position at which to replace the stroke.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position at which to replace the stroke.","pos":[0,44]}]},{"pos":[70912,70953],"content":"The stroke to replace the current stroke.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stroke to replace the current stroke.","pos":[0,41]}]},{"pos":[71422,71509],"content":"Occurs when a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the collection changes.","needQuote":true,"needEscape":true,"source":"Occurs when a <xref href=\"System.Windows.Ink.Stroke\"></xref> in the collection changes."},{"pos":[72191,72203],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[72727,73034],"content":"Modifies each of the &lt;xref:System.Windows.Ink.Stroke.StylusPoints<bpt id=\"p1\">*</bpt>&gt; and optionally the &lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform<ept id=\"p1\">*</ept>&gt; for each stroke in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> according to the specified <bpt id=\"p3\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Modifies each of the <xref:System.Windows.Ink.Stroke.StylusPoints*> and optionally the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform*> for each stroke in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> according to the specified <xref href=\"System.Windows.Media.Matrix\"></xref>."},{"pos":[73046,73357],"content":"When `applyToStylusTip` is `true`, the Transform method affects the shape of the stylus tip, as well as the position of the strokes. For example, if you rotate a <xref:System.Windows.Ink.StrokeCollection> 90 degrees, the strokes move around an axis and the height and width of the strokes appear to be inverted.","needQuote":true,"needEscape":true,"nodes":[{"content":"When <ph id=\"ph1\">`applyToStylusTip`</ph> is <ph id=\"ph2\">`true`</ph>, the Transform method affects the shape of the stylus tip, as well as the position of the strokes.","pos":[0,132],"source":"When `applyToStylusTip` is `true`, the Transform method affects the shape of the stylus tip, as well as the position of the strokes."},{"content":"For example, if you rotate a &lt;xref:System.Windows.Ink.StrokeCollection&gt; 90 degrees, the strokes move around an axis and the height and width of the strokes appear to be inverted.","pos":[133,311],"source":" For example, if you rotate a <xref:System.Windows.Ink.StrokeCollection> 90 degrees, the strokes move around an axis and the height and width of the strokes appear to be inverted."}]},{"pos":[74029,74190],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> which specifies the transformation to perform on the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.Matrix\"></xref> which specifies the transformation to perform on the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."},{"pos":[74264,74453],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to apply the transformation to the tip of the stylus; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to apply the transformation to the tip of the stylus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Ink.StrokeCollection\n  id: StrokeCollection\n  children:\n  - System.Windows.Ink.StrokeCollection.#ctor\n  - System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})\n  - System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)\n  - System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)\n  - System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)\n  - System.Windows.Ink.StrokeCollection.ClearItems\n  - System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  - System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)\n  - System.Windows.Ink.StrokeCollection.Clone\n  - System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)\n  - System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)\n  - System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  - System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)\n  - System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  - System.Windows.Ink.StrokeCollection.GetBounds\n  - System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)\n  - System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)\n  - System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)\n  - System.Windows.Ink.StrokeCollection.GetPropertyDataIds\n  - System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)\n  - System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  - System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  - System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)\n  - System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)\n  - System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)\n  - System.Windows.Ink.StrokeCollection.InkSerializedFormat\n  - System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)\n  - System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  - System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  - System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)\n  - System.Windows.Ink.StrokeCollection.PropertyDataChanged\n  - System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)\n  - System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)\n  - System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)\n  - System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)\n  - System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)\n  - System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)\n  - System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)\n  - System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)\n  - System.Windows.Ink.StrokeCollection.StrokesChanged\n  - System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)\n  langs:\n  - csharp\n  name: StrokeCollection\n  nameWithType: StrokeCollection\n  fullName: System.Windows.Ink.StrokeCollection\n  type: Class\n  summary: Represents a collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects.\n  remarks: \"The StrokeCollection enables you to perform functions such as hit testing, clipping, and erasing strokes. The <xref:System.Windows.Controls.InkCanvas> control performs many of these functions, but if you need more control than the <xref:System.Windows.Controls.InkCanvas> provides, the StrokeCollection offers more options.  \\n  \\n The following table lists where to learn about managing digital ink on a custom control.  \\n  \\n|To do this…|See this article|  \\n|-----------------|----------------------|  \\n|Create a control that collects digital ink|[Creating an Ink Input Control](~/add/includes/ajax-current-ext-md.md)|  \\n|Create a control that enables the user to select ink|[How to: Select Ink from a Custom Control](~/add/includes/ajax-current-ext-md.md)|  \\n|Create a control that enables the user to point-erase ink|[How to: Erase Ink on a Custom Control](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n<a name=\\\"xamlAttributeUsage_StrokeCollection\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object StrokeCollection=\\\"isfString\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlObjectElementUsage_StrokeCollection\\\"></a>   \\n## XAML Object Element Usage  \\n  \\n```  \\n<object>isfString</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_StrokeCollection\\\"></a>   \\n## XAML Values  \\n  \\n|Term|Definition|  \\n|----------|----------------|  \\n|`isfString`|A string that represents the stroke in base-64, encoded Ink Serialized Format (ISF).|\"\n  example:\n  - \"The following example demonstrates how to copy the ink in one <xref:System.Windows.Controls.InkCanvas> onto another <xref:System.Windows.Controls.InkCanvas>. This example assumes:  \\n  \\n-   There are two <xref:System.Windows.Controls.InkCanvas> objects called `inkCanvas1` and `inkCanvas2`.  \\n  \\n-   The <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event has been connected to the event handler.  \\n  \\n [!code-cs[StrokeCollectionMethods#21](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#21)]\\n [!code-vb[StrokeCollectionMethods#21](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#21)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.StrokeCollectionConverter))]\n\n      public class StrokeCollection : System.Collections.ObjectModel.Collection<System.Windows.Ink.Stroke>, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged\n  inheritance:\n  - System.Collections.ObjectModel.Collection`1\n  implements:\n  - System.Collections.Specialized.INotifyCollectionChanged\n  - System.ComponentModel.INotifyPropertyChanged\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: StrokeCollection()\n  nameWithType: StrokeCollection.StrokeCollection()\n  fullName: System.Windows.Ink.StrokeCollection.StrokeCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> class.\n  syntax:\n    content: public StrokeCollection ();\n    parameters: []\n  overload: System.Windows.Ink.StrokeCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})'\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: StrokeCollection(IEnumerable<Stroke>)\n  nameWithType: StrokeCollection.StrokeCollection(IEnumerable<Stroke>)\n  fullName: System.Windows.Ink.StrokeCollection.StrokeCollection(IEnumerable<Stroke>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> class that contains the specified strokes.\n  syntax:\n    content: public StrokeCollection (System.Collections.Generic.IEnumerable<System.Windows.Ink.Stroke> strokes);\n    parameters:\n    - id: strokes\n      type: System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke}\n      description: The strokes to add to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: StrokeCollection(Stream)\n  nameWithType: StrokeCollection.StrokeCollection(Stream)\n  fullName: System.Windows.Ink.StrokeCollection.StrokeCollection(Stream)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Initializes a <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> from the specified <xref:System.IO.Stream> of Ink Serialized Format (ISF).\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to save and load a <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[StrokeCollectionMethods#10](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#10)]\\n [!code-vb[StrokeCollectionMethods#10](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#10)]  \\n[!code-cs[StrokeCollectionMethods#11](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#11)]\\n[!code-vb[StrokeCollectionMethods#11](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#11)]\"\n  syntax:\n    content: public StrokeCollection (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A stream that contains ink data.\n  overload: System.Windows.Ink.StrokeCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)\n  id: Add(System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Add(StrokeCollection)\n  nameWithType: StrokeCollection.Add(StrokeCollection)\n  fullName: System.Windows.Ink.StrokeCollection.Add(StrokeCollection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Adds the specified strokes to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The Add method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event.\n  example:\n  - \"The following example demonstrates how to copy the ink in one <xref:System.Windows.Controls.InkCanvas> onto another <xref:System.Windows.Controls.InkCanvas>. This example assumes:  \\n  \\n-   There are two <xref:System.Windows.Controls.InkCanvas> objects called `inkCanvas1` and `inkCanvas2`.  \\n  \\n-   The <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event has been connected to the event handler.  \\n  \\n [!code-cs[StrokeCollectionMethods#21](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#21)]\\n [!code-vb[StrokeCollectionMethods#21](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#21)]\"\n  syntax:\n    content: public void Add (System.Windows.Ink.StrokeCollection strokes);\n    parameters:\n    - id: strokes\n      type: System.Windows.Ink.StrokeCollection\n      description: The <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to add to the collection.\n  overload: System.Windows.Ink.StrokeCollection.Add*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokes</code> is already a member of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>strokes</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)\n  id: AddPropertyData(System.Guid,System.Object)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: AddPropertyData(Guid,Object)\n  nameWithType: StrokeCollection.AddPropertyData(Guid,Object)\n  fullName: System.Windows.Ink.StrokeCollection.AddPropertyData(Guid,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Adds a custom property to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The AddPropertyData method enables you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.\n  example:\n  - \"The following example demonstrates how to add and get custom property data. The `AddTimeStamp_Click` method uses the AddPropertyData method to add the current time to the <xref:System.Windows.Ink.StrokeCollection>. The `GetTimeStap_Click` method uses the <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> method to retrieve the timestamp from the <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[StrokeCollectionMethods#12](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#12)]\\n [!code-vb[StrokeCollectionMethods#12](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#12)]\"\n  syntax:\n    content: public void AddPropertyData (Guid propertyDataId, object propertyData);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref:System.Guid> to associate with the custom property.\n    - id: propertyData\n      type: System.Object\n      description: The value of the custom property. `propertyData` must be of type <xref:System.Char>, <xref:System.Byte>,<xref:System.Int16>,,<xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.DateTime>, <xref:System.Boolean>, <xref:System.String>, <xref:System.Decimal> or an array of these data types, except <xref:System.String>, which is not allowed.\n  overload: System.Windows.Ink.StrokeCollection.AddPropertyData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>propertyDataId</code> is an empty <xref:System.Guid>.  \\n  \\n -or-  \\n  \\n <code>propertyData</code> is not one of the allowed data types listed in the <xref uid=\\\"langword_csharp_Parameters\\\" name=\\\"Parameters\\\" href=\\\"\\\"></xref> section.\"\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.ClearItems\n  id: ClearItems\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: ClearItems()\n  nameWithType: StrokeCollection.ClearItems()\n  fullName: System.Windows.Ink.StrokeCollection.ClearItems()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Clears all strokes from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  syntax:\n    content: protected override sealed void ClearItems ();\n    parameters: []\n  overload: System.Windows.Ink.StrokeCollection.ClearItems*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  id: Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Clip(IEnumerable<Point>)\n  nameWithType: StrokeCollection.Clip(IEnumerable<Point>)\n  fullName: System.Windows.Ink.StrokeCollection.Clip(IEnumerable<Point>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes all strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that are outside the bounds of the specified <xref href=\"System.Drawing.Point\"></xref> array.\n  remarks: \"The Clip method connects the first and last points in `lassoPoints` to create the lasso.  \\n  \\n The Clip method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it clips.\"\n  example:\n  - \"The following example demonstrates how to clip the strokes in a <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-cs[StrokeCollectionMethods#13](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#13)]\\n [!code-vb[StrokeCollectionMethods#13](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#13)]\"\n  syntax:\n    content: public void Clip (System.Collections.Generic.IEnumerable<System.Windows.Point> lassoPoints);\n    parameters:\n    - id: lassoPoints\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Drawing.Point\"></xref> that specifies the area to be clipped.\n  overload: System.Windows.Ink.StrokeCollection.Clip*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)\n  id: Clip(System.Windows.Rect)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Clip(Rect)\n  nameWithType: StrokeCollection.Clip(Rect)\n  fullName: System.Windows.Ink.StrokeCollection.Clip(Rect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces all strokes that are clipped by the specified rectangle with new strokes that do not extend beyond the specified rectangle.\n  remarks: All strokes that are entirely outside the specified rectangle are removed.\n  example:\n  - \"The following example demonstrates how to erase the ink that is outside the bounds of a <xref:System.Windows.Rect>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-cs[StrokeCollectionMethods#35](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#35)]\\n [!code-vb[StrokeCollectionMethods#35](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#35)]\"\n  syntax:\n    content: public void Clip (System.Windows.Rect bounds);\n    parameters:\n    - id: bounds\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to be clipped.\n  overload: System.Windows.Ink.StrokeCollection.Clip*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Clone\n  id: Clone\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: StrokeCollection.Clone()\n  fullName: System.Windows.Ink.StrokeCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Copies the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The Clone method copies each <xref:System.Windows.Ink.Stroke> in the collection and the new <xref:System.Windows.Ink.StrokeCollection> references the new strokes.\n  example:\n  - \"The following example demonstrates how to copy the ink in one <xref:System.Windows.Controls.InkCanvas> onto another <xref:System.Windows.Controls.InkCanvas>. This example assumes:  \\n  \\n-   There are two <xref:System.Windows.Controls.InkCanvas> objects called `inkCanvas1` and `inkCanvas2.`  \\n  \\n-   The <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event has been connected to the event handler.  \\n  \\n [!code-cs[StrokeCollectionMethods#21](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#21)]\\n [!code-vb[StrokeCollectionMethods#21](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#21)]\"\n  syntax:\n    content: public virtual System.Windows.Ink.StrokeCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A copy of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)\n  id: ContainsPropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: ContainsPropertyData(Guid)\n  nameWithType: StrokeCollection.ContainsPropertyData(Guid)\n  fullName: System.Windows.Ink.StrokeCollection.ContainsPropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns whether the specified custom property identifier is in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to check for custom property in a <xref:System.Windows.Ink.StrokeCollection>. If a custom property has been associated with `timestamp`, the example gets that custom property and shows when the <xref:System.Windows.Ink.StrokeCollection> was saved. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[StrokeCollectionMethods#12](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#12)]\\n [!code-vb[StrokeCollectionMethods#12](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#12)]\"\n  syntax:\n    content: public bool ContainsPropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref:System.Guid> to locate in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified custom property identifier is in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.ContainsPropertyData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)\n  id: Draw(System.Windows.Media.DrawingContext)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Draw(DrawingContext)\n  nameWithType: StrokeCollection.Draw(DrawingContext)\n  fullName: System.Windows.Ink.StrokeCollection.Draw(DrawingContext)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Draws the strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example creates a custom element that displays a thumbnail view of an <xref:System.Windows.Controls.InkCanvas>. The custom element keeps a reference to an <xref:System.Windows.Controls.InkCanvas> and redraws itself when the <xref:System.Windows.Controls.InkCanvas.StrokeCollected> event occurs.  \\n  \\n [!code-cs[StrokeCollectionMethods#33](~/add/codesnippet/csharp/StrokeCollectionMethods/Window3.xaml.cs#33)]\\n [!code-vb[StrokeCollectionMethods#33](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window3.xaml.vb#33)]\"\n  syntax:\n    content: public void Draw (System.Windows.Media.DrawingContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Media.DrawingContext\n      description: The <xref href=\"System.Windows.Media.DrawingContext\"></xref> on which to draw the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Draw*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  id: Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Erase(IEnumerable<Point>)\n  nameWithType: StrokeCollection.Erase(IEnumerable<Point>)\n  fullName: System.Windows.Ink.StrokeCollection.Erase(IEnumerable<Point>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes the ink that is within the bounds of the specified area.\n  remarks: \"The Erase method connects the first and last points in `lassoPoints` to create the lasso.  \\n  \\n The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the Erase method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  \\n  \\n The Erase method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.\"\n  example:\n  - \"The following example demonstrates how to erase strokes in a <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-cs[StrokeCollectionMethods#2](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#2)]\\n [!code-vb[StrokeCollectionMethods#2](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#2)]\"\n  syntax:\n    content: public void Erase (System.Collections.Generic.IEnumerable<System.Windows.Point> lassoPoints);\n    parameters:\n    - id: lassoPoints\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Drawing.Point\"></xref> that specifies the area to be erased.\n  overload: System.Windows.Ink.StrokeCollection.Erase*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)\n  id: Erase(System.Windows.Rect)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Erase(Rect)\n  nameWithType: StrokeCollection.Erase(Rect)\n  fullName: System.Windows.Ink.StrokeCollection.Erase(Rect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces all strokes that are clipped by the specified rectangle with new strokes that do not enter the bounds of the specified rectangle.\n  remarks: \"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the Erase method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  All strokes that are entirely inside the specified rectangle are removed.  \\n  \\n The Erase method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.\"\n  example:\n  - \"The following example demonstrates how to erase the ink within the <xref:System.Windows.Rect>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-cs[StrokeCollectionMethods#34](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#34)]\\n [!code-vb[StrokeCollectionMethods#34](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#34)]\"\n  syntax:\n    content: public void Erase (System.Windows.Rect bounds);\n    parameters:\n    - id: bounds\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to be erased.\n  overload: System.Windows.Ink.StrokeCollection.Erase*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  id: Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Erase(IEnumerable<Point>,StylusShape)\n  nameWithType: StrokeCollection.Erase(IEnumerable<Point>,StylusShape)\n  fullName: System.Windows.Ink.StrokeCollection.Erase(IEnumerable<Point>,StylusShape)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces all strokes that are clipped by the region created by the specified <xref href=\"System.Windows.Ink.StylusShape\"></xref> along the specified path with new Strokes that are not clipped by the region.\n  remarks: \"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the Erase method is called. For example, if `path` intersects the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  \\n  \\n The Erase method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.\"\n  example:\n  - \"The following example demonstrates how to erase ink along a specific path. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-cs[StrokeCollectionMethods#14](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#14)]\\n [!code-vb[StrokeCollectionMethods#14](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#14)]\"\n  syntax:\n    content: public void Erase (System.Collections.Generic.IEnumerable<System.Windows.Point> eraserPath, System.Windows.Ink.StylusShape eraserShape);\n    parameters:\n    - id: eraserPath\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Windows.Point\"></xref> that specifies the path to be erased.\n    - id: eraserShape\n      type: System.Windows.Ink.StylusShape\n      description: A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of the eraser.\n  overload: System.Windows.Ink.StrokeCollection.Erase*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.GetBounds\n  id: GetBounds\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: GetBounds()\n  nameWithType: StrokeCollection.GetBounds()\n  fullName: System.Windows.Ink.StrokeCollection.GetBounds()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the bounds of the strokes in the collection.\n  remarks: The GetBounds method returns a <xref:System.Windows.Rect> that takes the appearance of the rendered <xref:System.Windows.Ink.Stroke>. For example, if <xref:System.Windows.Ink.Stroke> is 10 display independent pixels (DIP) wide, the <xref:System.Windows.Rect> includes the entire width of the <xref:System.Windows.Ink.Stroke>.\n  example:\n  - \"The following example demonstrates how to get the bounds of the <xref:System.Windows.Ink.StrokeCollection> and draw them on the control. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[StrokeCollectionMethods#20](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#20)]\\n [!code-vb[StrokeCollectionMethods#20](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#20)]\"\n  syntax:\n    content: public System.Windows.Rect GetBounds ();\n    parameters: []\n    return:\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that contains the bounds of the strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.GetBounds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)\n  id: GetIncrementalLassoHitTester(System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: GetIncrementalLassoHitTester(Int32)\n  nameWithType: StrokeCollection.GetIncrementalLassoHitTester(Int32)\n  fullName: System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Creates an <xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with a lasso (freehand) path.\n  remarks: The GetIncrementalLassoHitTester method returns an <xref:System.Windows.Ink.IncrementalLassoHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the lasso path surrounds it. This is useful for implementing features, such as the ability to select a stroke with a lasso tool. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalLassoHitTester> to implement the lasso selection tool.\n  example:\n  - \"The following example demonstrates how to get an <xref:System.Windows.Ink.IncrementalLassoHitTester> that enables a user to select strokes with a lasso tool. To create a control that enables a user to select ink, see [How to: Select Ink from a Custom Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[StrokeCollectionMethods#17](~/add/codesnippet/csharp/StrokeCollectionMethods/InkSelector.cs#17)]\\n [!code-vb[StrokeCollectionMethods#17](~/add/codesnippet/visualbasic/StrokeCollectionMethods/InkSelector.vb#17)]\"\n  syntax:\n    content: public System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester (int percentageWithinLasso);\n    parameters:\n    - id: percentageWithinLasso\n      type: System.Int32\n      description: The minimum percentage of each <xref href=\"System.Windows.Ink.Stroke\"></xref> that must be contained within the lasso for it to be considered hit.\n    return:\n      type: System.Windows.Ink.IncrementalLassoHitTester\n      description: An <xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)\n  id: GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: GetIncrementalStrokeHitTester(StylusShape)\n  nameWithType: StrokeCollection.GetIncrementalStrokeHitTester(StylusShape)\n  fullName: System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(StylusShape)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Creates an <xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with an erasing path.\n  remarks: The GetIncrementalStrokeHitTester method returns an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the eraser path intersects it. This is useful for implementing features, such as the ability to erase part of a <xref:System.Windows.Ink.Stroke>. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalStrokeHitTester> when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode>.\n  example:\n  - \"The following example demonstrates how to get an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that can be used to erase part of a <xref:System.Windows.Ink.Stroke>. To create a control that enables a user to erase ink, see [How to: Erase Ink on a Custom Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[InkEraser#4](~/add/codesnippet/csharp/MyInkEraser/InkEraser.cs#4)]\\n [!code-vb[InkEraser#4](~/add/codesnippet/visualbasic/MyInkEraser/InkEraser.vb#4)]\"\n  syntax:\n    content: public System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester (System.Windows.Ink.StylusShape eraserShape);\n    parameters:\n    - id: eraserShape\n      type: System.Windows.Ink.StylusShape\n      description: A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the tip of the stylus.\n    return:\n      type: System.Windows.Ink.IncrementalStrokeHitTester\n      description: An <xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)\n  id: GetPropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: GetPropertyData(Guid)\n  nameWithType: StrokeCollection.GetPropertyData(Guid)\n  fullName: System.Windows.Ink.StrokeCollection.GetPropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the value of the custom property associated with the specified <xref:System.Guid>.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> and GetPropertyData methods enable you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.\n  example:\n  - \"The following example demonstrates how to add and get custom property data. The `AddTimeStamp_Click` method uses the <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> method to add the current time to the <xref:System.Windows.Ink.StrokeCollection>. The `GetTimeStap_Click` method uses the GetPropertyData method to retrieve the timestamp from the <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[StrokeCollectionMethods#12](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#12)]\\n [!code-vb[StrokeCollectionMethods#12](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#12)]\"\n  syntax:\n    content: public object GetPropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref:System.Guid> associated with the custom property to get.\n    return:\n      type: System.Object\n      description: The value of the custom property associated with the specified <xref:System.Guid>.\n  overload: System.Windows.Ink.StrokeCollection.GetPropertyData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyDataIds\n  id: GetPropertyDataIds\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: GetPropertyDataIds()\n  nameWithType: StrokeCollection.GetPropertyDataIds()\n  fullName: System.Windows.Ink.StrokeCollection.GetPropertyDataIds()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the GUIDs of any custom properties associated with the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the custom property identifiers from the <xref:System.Windows.Ink.StrokeCollection>.  \\n  \\n [!code-cs[StrokeCollectionMethods#27](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#27)]\\n [!code-vb[StrokeCollectionMethods#27](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#27)]\"\n  syntax:\n    content: public Guid[] GetPropertyDataIds ();\n    parameters: []\n    return:\n      type: System.Guid[]\n      description: An array of type <xref:System.Guid> that represent the custom property identifiers.\n  overload: System.Windows.Ink.StrokeCollection.GetPropertyDataIds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)\n  id: HitTest(System.Windows.Point)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: HitTest(Point)\n  nameWithType: StrokeCollection.HitTest(Point)\n  fullName: System.Windows.Ink.StrokeCollection.HitTest(Point)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a collection of strokes that intersect the specified point.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the strokes that intersect the specified <xref:System.Windows.Point>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-cs[StrokeCollectionMethods#15](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#15)]\\n [!code-vb[StrokeCollectionMethods#15](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#15)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point to hit test.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects that intersect the specified point.\n  overload: System.Windows.Ink.StrokeCollection.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  id: HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: HitTest(IEnumerable<Point>,Int32)\n  nameWithType: StrokeCollection.HitTest(IEnumerable<Point>,Int32)\n  fullName: System.Windows.Ink.StrokeCollection.HitTest(IEnumerable<Point>,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a collection of strokes that have at least the specified percentage of length within the specified area.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to remove all strokes that are at least 80 percent within the specified lasso from a <xref:System.Windows.Ink.StrokeCollection>. This is useful when a custom control enables the user to select ink with a lasso. To create a control that enables a user to select ink with a lasso, see [How to: Select Ink from a Custom Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[StrokeCollectionMethods#16](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#16)]\\n [!code-vb[StrokeCollectionMethods#16](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#16)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable<System.Windows.Point> lassoPoints, int percentageWithinLasso);\n    parameters:\n    - id: lassoPoints\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Windows.Point\"></xref> that represents the bounds of the area to be hit tested.\n    - id: percentageWithinLasso\n      type: System.Int32\n      description: The acceptable length of the <xref href=\"System.Windows.Ink.Stroke\"></xref>, as a percentage, for `lassoPoints` to contain.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that has strokes with at least the specified percentage within the <xref href=\"System.Windows.Point\"></xref> array.\n  overload: System.Windows.Ink.StrokeCollection.HitTest*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>lassoPoints</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>percentageWithinLasso</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>lassoPoints</code> contains an empty array.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>percentageWithinLasso</code> is less than 0 or greater than 100.\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  id: HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: HitTest(IEnumerable<Point>,StylusShape)\n  nameWithType: StrokeCollection.HitTest(IEnumerable<Point>,StylusShape)\n  fullName: System.Windows.Ink.StrokeCollection.HitTest(IEnumerable<Point>,StylusShape)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a collection of strokes that intersect with the specified path.\n  remarks: ''\n  example:\n  - \"The following example changes the color of all the strokes that intersect the path that is created by the <xref:System.Windows.Point> array.  This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-cs[StrokeCollectionMethods#37](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#37)]\\n [!code-vb[StrokeCollectionMethods#37](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#37)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable<System.Windows.Point> path, System.Windows.Ink.StylusShape stylusShape);\n    parameters:\n    - id: path\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array to type <xref href=\"System.Windows.Point\"></xref> that represents the path to be hit tested.\n    - id: stylusShape\n      type: System.Windows.Ink.StylusShape\n      description: The <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of `eraserPath`.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> of strokes that intersect with <code>path</code>.\n  overload: System.Windows.Ink.StrokeCollection.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)\n  id: HitTest(System.Windows.Point,System.Double)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: HitTest(Point,Double)\n  nameWithType: StrokeCollection.HitTest(Point,Double)\n  fullName: System.Windows.Ink.StrokeCollection.HitTest(Point,Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a collection of strokes that intersect the specified area.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the strokes that intersect the specified <xref:System.Windows.Point>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-cs[StrokeCollectionMethods#15](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#15)]\\n [!code-vb[StrokeCollectionMethods#15](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#15)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point, double diameter);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The <xref href=\"System.Windows.Point\"></xref> to hit test.\n    - id: diameter\n      type: System.Double\n      description: The size of the area around the <xref href=\"System.Windows.Point\"></xref> to hit test.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects that intersect the specified point.\n  overload: System.Windows.Ink.StrokeCollection.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)\n  id: HitTest(System.Windows.Rect,System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: HitTest(Rect,Int32)\n  nameWithType: StrokeCollection.HitTest(Rect,Int32)\n  fullName: System.Windows.Ink.StrokeCollection.HitTest(Rect,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a collection of strokes that have at least the specified percentage of length within the specified rectangle.\n  remarks: ''\n  example:\n  - \"The following example erases the strokes that are at least 50% within the bounds of the <xref:System.Windows.Rect>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-cs[StrokeCollectionMethods#36](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#36)]\\n [!code-vb[StrokeCollectionMethods#36](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#36)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Rect bounds, int percentageWithinBounds);\n    parameters:\n    - id: bounds\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that specifies the bounds to be hit tested.\n    - id: percentageWithinBounds\n      type: System.Int32\n      description: The minimum required length of a Stroke that must exist within bounds for it to be considered hit.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that has strokes with at least the specified percentage within the <xref href=\"System.Windows.Rect\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.HitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)\n  id: IndexOf(System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: IndexOf(Stroke)\n  nameWithType: StrokeCollection.IndexOf(Stroke)\n  fullName: System.Windows.Ink.StrokeCollection.IndexOf(Stroke)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the index of the specified <xref href=\"System.Windows.Ink.Stroke\"></xref> in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The IndexOf method returns -1 if `stroke` is not a member of the <xref:System.Windows.Ink.StrokeCollection>.\n  syntax:\n    content: public int IndexOf (System.Windows.Ink.Stroke stroke);\n    parameters:\n    - id: stroke\n      type: System.Windows.Ink.Stroke\n      description: The stroke whose position is required.\n    return:\n      type: System.Int32\n      description: The index of the stroke.\n  overload: System.Windows.Ink.StrokeCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.InkSerializedFormat\n  id: InkSerializedFormat\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: InkSerializedFormat\n  nameWithType: StrokeCollection.InkSerializedFormat\n  fullName: System.Windows.Ink.StrokeCollection.InkSerializedFormat\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Represents the native persistence format for ink data.\n  remarks: Use the InkSerializedFormat field to specify the format of the <xref:System.Windows.Ink.StrokeCollection> when you transfer data, such as when you copy the <xref:System.Windows.Ink.StrokeCollection> to the Clipboard.\n  example:\n  - \"The following example demonstrates how to copy a <xref:System.Windows.Ink.StrokeCollection> to the Clipboard. The example specifies that the <xref:System.Windows.Ink.StrokeCollection> is in Ink Serialized Format (ISF), so that other programs, such as Microsoft Office Word can accept the copied data.  \\n  \\n [!code-cs[StrokeCollectionMethods#5](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#5)]\\n [!code-vb[StrokeCollectionMethods#5](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#5)]\"\n  syntax:\n    content: public static readonly string InkSerializedFormat;\n    return:\n      type: System.String\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)\n  id: InsertItem(System.Int32,System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: InsertItem(Int32,Stroke)\n  nameWithType: StrokeCollection.InsertItem(Int32,Stroke)\n  fullName: System.Windows.Ink.StrokeCollection.InsertItem(Int32,Stroke)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Inserts a stroke into the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> at the specified index.\n  syntax:\n    content: protected override sealed void InsertItem (int index, System.Windows.Ink.Stroke stroke);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The specified index.\n    - id: stroke\n      type: System.Windows.Ink.Stroke\n      description: The specified stroke\n  overload: System.Windows.Ink.StrokeCollection.InsertItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: OnPropertyChanged(PropertyChangedEventArgs)\n  nameWithType: StrokeCollection.OnPropertyChanged(PropertyChangedEventArgs)\n  fullName: System.Windows.Ink.StrokeCollection.OnPropertyChanged(PropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when any <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> property changes.\n  syntax:\n    content: protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.PropertyChangedEventArgs\n      description: Event data.\n  overload: System.Windows.Ink.StrokeCollection.OnPropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  id: OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  nameWithType: StrokeCollection.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  fullName: System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Raises the <xref href=\"System.Windows.Ink.StrokeCollection.PropertyDataChanged\"></xref> event.\n  syntax:\n    content: protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.PropertyDataChangedEventArgs\n      description: A <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Ink.StrokeCollection.OnPropertyDataChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)\n  id: OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: OnStrokesChanged(StrokeCollectionChangedEventArgs)\n  nameWithType: StrokeCollection.OnStrokesChanged(StrokeCollectionChangedEventArgs)\n  fullName: System.Windows.Ink.StrokeCollection.OnStrokesChanged(StrokeCollectionChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Raises the <xref href=\"System.Windows.Ink.StrokeCollection.StrokesChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate.  \\n  \\n The OnStrokesChanged method also allows derived classes to handle the event without attaching a delegate, which is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnStrokesChanged (System.Windows.Ink.StrokeCollectionChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.StrokeCollectionChangedEventArgs\n      description: A <xref href=\"System.Windows.Ink.StrokeCollectionChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Ink.StrokeCollection.OnStrokesChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.PropertyDataChanged\n  id: PropertyDataChanged\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: PropertyDataChanged\n  nameWithType: StrokeCollection.PropertyDataChanged\n  fullName: System.Windows.Ink.StrokeCollection.PropertyDataChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when custom property is added or removed from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to handle the PropertyDataChanged event. This example assumes that there is a <xref:System.Guid> called `dateTimeGuid` and the PropertyDataChanged event is connected to the event handler defined in this example.  \\n  \\n [!code-cs[StrokeCollectionMethods#29](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#29)]\\n [!code-vb[StrokeCollectionMethods#29](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#29)]\"\n  syntax:\n    content: public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;\n    return:\n      type: System.Windows.Ink.PropertyDataChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)\n  id: Remove(System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Remove(StrokeCollection)\n  nameWithType: StrokeCollection.Remove(StrokeCollection)\n  fullName: System.Windows.Ink.StrokeCollection.Remove(StrokeCollection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes the specified strokes from the collection.\n  remarks: The Remove method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it removes.\n  example:\n  - \"The following example demonstrates how to remove all strokes that are at least 80 percent within the specified lasso from a <xref:System.Windows.Ink.StrokeCollection>. This is useful when a custom control enables the user to select ink with a lasso. To create a control that enables a user to select ink with a lasso, see [How to: Select Ink from a Custom Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[StrokeCollectionMethods#16](~/add/codesnippet/csharp/StrokeCollectionMethods/StrokeCollectionDemo.cs#16)]\\n [!code-vb[StrokeCollectionMethods#16](~/add/codesnippet/visualbasic/StrokeCollectionMethods/StrokeCollectionDemo.vb#16)]\"\n  syntax:\n    content: public void Remove (System.Windows.Ink.StrokeCollection strokes);\n    parameters:\n    - id: strokes\n      type: System.Windows.Ink.StrokeCollection\n      description: The <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to remove from the collection.\n  overload: System.Windows.Ink.StrokeCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)\n  id: RemoveItem(System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: RemoveItem(Int32)\n  nameWithType: StrokeCollection.RemoveItem(Int32)\n  fullName: System.Windows.Ink.StrokeCollection.RemoveItem(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes the stroke at the specified index from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  syntax:\n    content: protected override sealed void RemoveItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The specified index.\n  overload: System.Windows.Ink.StrokeCollection.RemoveItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)\n  id: RemovePropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: RemovePropertyData(Guid)\n  nameWithType: StrokeCollection.RemovePropertyData(Guid)\n  fullName: System.Windows.Ink.StrokeCollection.RemovePropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes the custom property associated with the specified <xref:System.Guid>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to remove a custom property from the <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and a <xref:System.Guid> called `timestamp`.  \\n  \\n [!code-cs[StrokeCollectionMethods#28](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#28)]\\n [!code-vb[StrokeCollectionMethods#28](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#28)]\"\n  syntax:\n    content: public void RemovePropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref:System.Guid> associated with the custom property to remove.\n  overload: System.Windows.Ink.StrokeCollection.RemovePropertyData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)\n  id: Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Replace(Stroke,StrokeCollection)\n  nameWithType: StrokeCollection.Replace(Stroke,StrokeCollection)\n  fullName: System.Windows.Ink.StrokeCollection.Replace(Stroke,StrokeCollection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces the specified <xref href=\"System.Windows.Ink.Stroke\"></xref> with the specified <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The Replace method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event.\n  example:\n  - \"The following example demonstrates how to replace the selected strokes on an <xref:System.Windows.Controls.InkCanvas> with another <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[StrokeCollectionMethods#7](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#7)]\\n [!code-vb[StrokeCollectionMethods#7](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#7)]\"\n  syntax:\n    content: public void Replace (System.Windows.Ink.Stroke strokeToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);\n    parameters:\n    - id: strokeToReplace\n      type: System.Windows.Ink.Stroke\n      description: The <xref href=\"System.Windows.Ink.Stroke\"></xref> to replace.\n    - id: strokesToReplaceWith\n      type: System.Windows.Ink.StrokeCollection\n      description: The source <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Replace*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>strokesToReplace</code> is empty.  \\n  \\n -or-  \\n  \\n <code>strokesToReplaceWith</code> is empty.  \\n  \\n -or-  \\n  \\n A <xref href=\\\"System.Windows.Ink.Stroke\\\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace</code>.\"\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)\n  id: Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Replace(StrokeCollection,StrokeCollection)\n  nameWithType: StrokeCollection.Replace(StrokeCollection,StrokeCollection)\n  fullName: System.Windows.Ink.StrokeCollection.Replace(StrokeCollection,StrokeCollection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces the specified <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with a new <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The Replace method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it replaces.\n  example:\n  - \"The following example demonstrates how to replace the selected strokes on an <xref:System.Windows.Controls.InkCanvas> with another <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[StrokeCollectionMethods#7](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#7)]\\n [!code-vb[StrokeCollectionMethods#7](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#7)]\"\n  syntax:\n    content: public void Replace (System.Windows.Ink.StrokeCollection strokesToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);\n    parameters:\n    - id: strokesToReplace\n      type: System.Windows.Ink.StrokeCollection\n      description: The destination <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n    - id: strokesToReplaceWith\n      type: System.Windows.Ink.StrokeCollection\n      description: The source <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Replace*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>strokesToReplace</code> is empty.  \\n  \\n -or-  \\n  \\n <code>strokesToReplaceWith</code> is empty.  \\n  \\n -or-  \\n  \\n A <xref href=\\\"System.Windows.Ink.Stroke\\\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace.</code>  \\n  \\n -or-  \\n  \\n The strokes in <code>strokesToReplaceWith</code> are not continuous.\"\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)\n  id: Save(System.IO.Stream)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Save(Stream)\n  nameWithType: StrokeCollection.Save(Stream)\n  fullName: System.Windows.Ink.StrokeCollection.Save(Stream)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Saves the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to the specified <xref:System.IO.Stream>.\n  remarks: The Save method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF).\n  example:\n  - \"The following example demonstrates how to save a <xref:System.Windows.Ink.StrokeCollection> to a file by using the <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> method. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[StrokeCollectionMethods#10](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#10)]\\n [!code-vb[StrokeCollectionMethods#10](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#10)]\"\n  syntax:\n    content: public void Save (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref:System.IO.Stream> to which to save the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Save*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)\n  id: Save(System.IO.Stream,System.Boolean)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Save(Stream,Boolean)\n  nameWithType: StrokeCollection.Save(Stream,Boolean)\n  fullName: System.Windows.Ink.StrokeCollection.Save(Stream,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Saves the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to the specified <xref:System.IO.Stream> and compresses it, when specified.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF).\n  example:\n  - \"The following example demonstrates how to save a <xref:System.Windows.Ink.StrokeCollection> to a file by using the Save method. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[StrokeCollectionMethods#10](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#10)]\\n [!code-vb[StrokeCollectionMethods#10](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#10)]\"\n  syntax:\n    content: public virtual void Save (System.IO.Stream stream, bool compress);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref:System.IO.Stream> to which to save the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n    - id: compress\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to compress the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Save*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)\n  id: SetItem(System.Int32,System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: SetItem(Int32,Stroke)\n  nameWithType: StrokeCollection.SetItem(Int32,Stroke)\n  fullName: System.Windows.Ink.StrokeCollection.SetItem(Int32,Stroke)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces the stroke at the specified index.\n  syntax:\n    content: protected override sealed void SetItem (int index, System.Windows.Ink.Stroke stroke);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The position at which to replace the stroke.\n    - id: stroke\n      type: System.Windows.Ink.Stroke\n      description: The stroke to replace the current stroke.\n  overload: System.Windows.Ink.StrokeCollection.SetItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.StrokesChanged\n  id: StrokesChanged\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: StrokesChanged\n  nameWithType: StrokeCollection.StrokesChanged\n  fullName: System.Windows.Ink.StrokeCollection.StrokesChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when a <xref href=\"System.Windows.Ink.Stroke\"></xref> in the collection changes.\n  remarks: ''\n  example:\n  - \"The following example adds the current time as a custom property to each new stroke in the StrokesChanged event handler. The example assumes that the StrokesChanged event is connected to the event handler defined in this example.  \\n  \\n [!code-cs[DrawingAttributes#4](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#4)]\\n [!code-vb[DrawingAttributes#4](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#4)]\"\n  syntax:\n    content: public event System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged;\n    return:\n      type: System.Windows.Ink.StrokeCollectionChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)\n  id: Transform(System.Windows.Media.Matrix,System.Boolean)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Transform(Matrix,Boolean)\n  nameWithType: StrokeCollection.Transform(Matrix,Boolean)\n  fullName: System.Windows.Ink.StrokeCollection.Transform(Matrix,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Modifies each of the <xref:System.Windows.Ink.Stroke.StylusPoints*> and optionally the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform*> for each stroke in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> according to the specified <xref href=\"System.Windows.Media.Matrix\"></xref>.\n  remarks: When `applyToStylusTip` is `true`, the Transform method affects the shape of the stylus tip, as well as the position of the strokes. For example, if you rotate a <xref:System.Windows.Ink.StrokeCollection> 90 degrees, the strokes move around an axis and the height and width of the strokes appear to be inverted.\n  example:\n  - \"The following example demonstrates how to move all the strokes on an <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-cs[StrokeCollectionMethods#9](~/add/codesnippet/csharp/StrokeCollectionMethods/Window2.xaml.cs#9)]\\n [!code-vb[StrokeCollectionMethods#9](~/add/codesnippet/visualbasic/StrokeCollectionMethods/Window2.xaml.vb#9)]\"\n  syntax:\n    content: public void Transform (System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip);\n    parameters:\n    - id: transformMatrix\n      type: System.Windows.Media.Matrix\n      description: A <xref href=\"System.Windows.Media.Matrix\"></xref> which specifies the transformation to perform on the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n    - id: applyToStylusTip\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to apply the transformation to the tip of the stylus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Transform*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.ObjectModel.Collection<System.Windows.Ink.Stroke>\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Windows.Ink.StrokeCollection.#ctor\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: StrokeCollection()\n  nameWithType: StrokeCollection.StrokeCollection()\n  fullName: System.Windows.Ink.StrokeCollection.StrokeCollection()\n- uid: System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: StrokeCollection(IEnumerable<Stroke>)\n  nameWithType: StrokeCollection.StrokeCollection(IEnumerable<Stroke>)\n  fullName: System.Windows.Ink.StrokeCollection.StrokeCollection(IEnumerable<Stroke>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Stroke>\n  nameWithType: IEnumerable<Stroke>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Ink.Stroke>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.Ink.Stroke>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Ink.Stroke\n    name: Stroke\n    nameWithType: Stroke\n    fullName: Stroke\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: StrokeCollection(Stream)\n  nameWithType: StrokeCollection.StrokeCollection(Stream)\n  fullName: System.Windows.Ink.StrokeCollection.StrokeCollection(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Add(StrokeCollection)\n  nameWithType: StrokeCollection.Add(StrokeCollection)\n  fullName: System.Windows.Ink.StrokeCollection.Add(StrokeCollection)\n- uid: System.Windows.Ink.StrokeCollection\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StrokeCollection\n  nameWithType: StrokeCollection\n  fullName: System.Windows.Ink.StrokeCollection\n- uid: System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: AddPropertyData(Guid,Object)\n  nameWithType: StrokeCollection.AddPropertyData(Guid,Object)\n  fullName: System.Windows.Ink.StrokeCollection.AddPropertyData(Guid,Object)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Ink.StrokeCollection.ClearItems\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: ClearItems()\n  nameWithType: StrokeCollection.ClearItems()\n  fullName: System.Windows.Ink.StrokeCollection.ClearItems()\n- uid: System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Clip(IEnumerable<Point>)\n  nameWithType: StrokeCollection.Clip(IEnumerable<Point>)\n  fullName: System.Windows.Ink.StrokeCollection.Clip(IEnumerable<Point>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Point}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Point>\n  nameWithType: IEnumerable<Point>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Point>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.Point>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Point\n    name: Point\n    nameWithType: Point\n    fullName: Point\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Clip(Rect)\n  nameWithType: StrokeCollection.Clip(Rect)\n  fullName: System.Windows.Ink.StrokeCollection.Clip(Rect)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Ink.StrokeCollection.Clone\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: StrokeCollection.Clone()\n  fullName: System.Windows.Ink.StrokeCollection.Clone()\n- uid: System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: ContainsPropertyData(Guid)\n  nameWithType: StrokeCollection.ContainsPropertyData(Guid)\n  fullName: System.Windows.Ink.StrokeCollection.ContainsPropertyData(Guid)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Draw(DrawingContext)\n  nameWithType: StrokeCollection.Draw(DrawingContext)\n  fullName: System.Windows.Ink.StrokeCollection.Draw(DrawingContext)\n- uid: System.Windows.Media.DrawingContext\n  parent: System.Windows.Media\n  isExternal: false\n  name: DrawingContext\n  nameWithType: DrawingContext\n  fullName: System.Windows.Media.DrawingContext\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Erase(IEnumerable<Point>)\n  nameWithType: StrokeCollection.Erase(IEnumerable<Point>)\n  fullName: System.Windows.Ink.StrokeCollection.Erase(IEnumerable<Point>)\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Erase(Rect)\n  nameWithType: StrokeCollection.Erase(Rect)\n  fullName: System.Windows.Ink.StrokeCollection.Erase(Rect)\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Erase(IEnumerable<Point>,StylusShape)\n  nameWithType: StrokeCollection.Erase(IEnumerable<Point>,StylusShape)\n  fullName: System.Windows.Ink.StrokeCollection.Erase(IEnumerable<Point>,StylusShape)\n- uid: System.Windows.Ink.StylusShape\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StylusShape\n  nameWithType: StylusShape\n  fullName: System.Windows.Ink.StylusShape\n- uid: System.Windows.Ink.StrokeCollection.GetBounds\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetBounds()\n  nameWithType: StrokeCollection.GetBounds()\n  fullName: System.Windows.Ink.StrokeCollection.GetBounds()\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetIncrementalLassoHitTester(Int32)\n  nameWithType: StrokeCollection.GetIncrementalLassoHitTester(Int32)\n  fullName: System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(Int32)\n- uid: System.Windows.Ink.IncrementalLassoHitTester\n  parent: System.Windows.Ink\n  isExternal: false\n  name: IncrementalLassoHitTester\n  nameWithType: IncrementalLassoHitTester\n  fullName: System.Windows.Ink.IncrementalLassoHitTester\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetIncrementalStrokeHitTester(StylusShape)\n  nameWithType: StrokeCollection.GetIncrementalStrokeHitTester(StylusShape)\n  fullName: System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(StylusShape)\n- uid: System.Windows.Ink.IncrementalStrokeHitTester\n  parent: System.Windows.Ink\n  isExternal: false\n  name: IncrementalStrokeHitTester\n  nameWithType: IncrementalStrokeHitTester\n  fullName: System.Windows.Ink.IncrementalStrokeHitTester\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetPropertyData(Guid)\n  nameWithType: StrokeCollection.GetPropertyData(Guid)\n  fullName: System.Windows.Ink.StrokeCollection.GetPropertyData(Guid)\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyDataIds\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetPropertyDataIds()\n  nameWithType: StrokeCollection.GetPropertyDataIds()\n  fullName: System.Windows.Ink.StrokeCollection.GetPropertyDataIds()\n- uid: System.Guid[]\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid[]\n  spec.csharp:\n  - uid: System.Guid\n    name: Guid\n    nameWithType: Guid\n    fullName: Guid[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest(Point)\n  nameWithType: StrokeCollection.HitTest(Point)\n  fullName: System.Windows.Ink.StrokeCollection.HitTest(Point)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest(IEnumerable<Point>,Int32)\n  nameWithType: StrokeCollection.HitTest(IEnumerable<Point>,Int32)\n  fullName: System.Windows.Ink.StrokeCollection.HitTest(IEnumerable<Point>,Int32)\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest(IEnumerable<Point>,StylusShape)\n  nameWithType: StrokeCollection.HitTest(IEnumerable<Point>,StylusShape)\n  fullName: System.Windows.Ink.StrokeCollection.HitTest(IEnumerable<Point>,StylusShape)\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest(Point,Double)\n  nameWithType: StrokeCollection.HitTest(Point,Double)\n  fullName: System.Windows.Ink.StrokeCollection.HitTest(Point,Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest(Rect,Int32)\n  nameWithType: StrokeCollection.HitTest(Rect,Int32)\n  fullName: System.Windows.Ink.StrokeCollection.HitTest(Rect,Int32)\n- uid: System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: IndexOf(Stroke)\n  nameWithType: StrokeCollection.IndexOf(Stroke)\n  fullName: System.Windows.Ink.StrokeCollection.IndexOf(Stroke)\n- uid: System.Windows.Ink.Stroke\n  parent: System.Windows.Ink\n  isExternal: false\n  name: Stroke\n  nameWithType: Stroke\n  fullName: System.Windows.Ink.Stroke\n- uid: System.Windows.Ink.StrokeCollection.InkSerializedFormat\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: InkSerializedFormat\n  nameWithType: StrokeCollection.InkSerializedFormat\n  fullName: System.Windows.Ink.StrokeCollection.InkSerializedFormat\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: InsertItem(Int32,Stroke)\n  nameWithType: StrokeCollection.InsertItem(Int32,Stroke)\n  fullName: System.Windows.Ink.StrokeCollection.InsertItem(Int32,Stroke)\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnPropertyChanged(PropertyChangedEventArgs)\n  nameWithType: StrokeCollection.OnPropertyChanged(PropertyChangedEventArgs)\n  fullName: System.Windows.Ink.StrokeCollection.OnPropertyChanged(PropertyChangedEventArgs)\n- uid: System.ComponentModel.PropertyChangedEventArgs\n  parent: System.ComponentModel\n  isExternal: true\n  name: PropertyChangedEventArgs\n  nameWithType: PropertyChangedEventArgs\n  fullName: System.ComponentModel.PropertyChangedEventArgs\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  nameWithType: StrokeCollection.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  fullName: System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n- uid: System.Windows.Ink.PropertyDataChangedEventArgs\n  parent: System.Windows.Ink\n  isExternal: false\n  name: PropertyDataChangedEventArgs\n  nameWithType: PropertyDataChangedEventArgs\n  fullName: System.Windows.Ink.PropertyDataChangedEventArgs\n- uid: System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnStrokesChanged(StrokeCollectionChangedEventArgs)\n  nameWithType: StrokeCollection.OnStrokesChanged(StrokeCollectionChangedEventArgs)\n  fullName: System.Windows.Ink.StrokeCollection.OnStrokesChanged(StrokeCollectionChangedEventArgs)\n- uid: System.Windows.Ink.StrokeCollectionChangedEventArgs\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StrokeCollectionChangedEventArgs\n  nameWithType: StrokeCollectionChangedEventArgs\n  fullName: System.Windows.Ink.StrokeCollectionChangedEventArgs\n- uid: System.Windows.Ink.StrokeCollection.PropertyDataChanged\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: PropertyDataChanged\n  nameWithType: StrokeCollection.PropertyDataChanged\n  fullName: System.Windows.Ink.StrokeCollection.PropertyDataChanged\n- uid: System.Windows.Ink.PropertyDataChangedEventHandler\n  parent: System.Windows.Ink\n  isExternal: false\n  name: PropertyDataChangedEventHandler\n  nameWithType: PropertyDataChangedEventHandler\n  fullName: System.Windows.Ink.PropertyDataChangedEventHandler\n- uid: System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Remove(StrokeCollection)\n  nameWithType: StrokeCollection.Remove(StrokeCollection)\n  fullName: System.Windows.Ink.StrokeCollection.Remove(StrokeCollection)\n- uid: System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: RemoveItem(Int32)\n  nameWithType: StrokeCollection.RemoveItem(Int32)\n  fullName: System.Windows.Ink.StrokeCollection.RemoveItem(Int32)\n- uid: System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: RemovePropertyData(Guid)\n  nameWithType: StrokeCollection.RemovePropertyData(Guid)\n  fullName: System.Windows.Ink.StrokeCollection.RemovePropertyData(Guid)\n- uid: System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Replace(Stroke,StrokeCollection)\n  nameWithType: StrokeCollection.Replace(Stroke,StrokeCollection)\n  fullName: System.Windows.Ink.StrokeCollection.Replace(Stroke,StrokeCollection)\n- uid: System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Replace(StrokeCollection,StrokeCollection)\n  nameWithType: StrokeCollection.Replace(StrokeCollection,StrokeCollection)\n  fullName: System.Windows.Ink.StrokeCollection.Replace(StrokeCollection,StrokeCollection)\n- uid: System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: StrokeCollection.Save(Stream)\n  fullName: System.Windows.Ink.StrokeCollection.Save(Stream)\n- uid: System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Save(Stream,Boolean)\n  nameWithType: StrokeCollection.Save(Stream,Boolean)\n  fullName: System.Windows.Ink.StrokeCollection.Save(Stream,Boolean)\n- uid: System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: SetItem(Int32,Stroke)\n  nameWithType: StrokeCollection.SetItem(Int32,Stroke)\n  fullName: System.Windows.Ink.StrokeCollection.SetItem(Int32,Stroke)\n- uid: System.Windows.Ink.StrokeCollection.StrokesChanged\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: StrokesChanged\n  nameWithType: StrokeCollection.StrokesChanged\n  fullName: System.Windows.Ink.StrokeCollection.StrokesChanged\n- uid: System.Windows.Ink.StrokeCollectionChangedEventHandler\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StrokeCollectionChangedEventHandler\n  nameWithType: StrokeCollectionChangedEventHandler\n  fullName: System.Windows.Ink.StrokeCollectionChangedEventHandler\n- uid: System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Transform(Matrix,Boolean)\n  nameWithType: StrokeCollection.Transform(Matrix,Boolean)\n  fullName: System.Windows.Ink.StrokeCollection.Transform(Matrix,Boolean)\n- uid: System.Windows.Media.Matrix\n  parent: System.Windows.Media\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Windows.Media.Matrix\n- uid: System.Windows.Ink.StrokeCollection.#ctor*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: StrokeCollection\n  nameWithType: StrokeCollection.StrokeCollection\n- uid: System.Windows.Ink.StrokeCollection.Add*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Add\n  nameWithType: StrokeCollection.Add\n- uid: System.Windows.Ink.StrokeCollection.AddPropertyData*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: AddPropertyData\n  nameWithType: StrokeCollection.AddPropertyData\n- uid: System.Windows.Ink.StrokeCollection.ClearItems*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: ClearItems\n  nameWithType: StrokeCollection.ClearItems\n- uid: System.Windows.Ink.StrokeCollection.Clip*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Clip\n  nameWithType: StrokeCollection.Clip\n- uid: System.Windows.Ink.StrokeCollection.Clone*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Clone\n  nameWithType: StrokeCollection.Clone\n- uid: System.Windows.Ink.StrokeCollection.ContainsPropertyData*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: ContainsPropertyData\n  nameWithType: StrokeCollection.ContainsPropertyData\n- uid: System.Windows.Ink.StrokeCollection.Draw*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Draw\n  nameWithType: StrokeCollection.Draw\n- uid: System.Windows.Ink.StrokeCollection.Erase*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Erase\n  nameWithType: StrokeCollection.Erase\n- uid: System.Windows.Ink.StrokeCollection.GetBounds*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetBounds\n  nameWithType: StrokeCollection.GetBounds\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetIncrementalLassoHitTester\n  nameWithType: StrokeCollection.GetIncrementalLassoHitTester\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetIncrementalStrokeHitTester\n  nameWithType: StrokeCollection.GetIncrementalStrokeHitTester\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyData*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetPropertyData\n  nameWithType: StrokeCollection.GetPropertyData\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyDataIds*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetPropertyDataIds\n  nameWithType: StrokeCollection.GetPropertyDataIds\n- uid: System.Windows.Ink.StrokeCollection.HitTest*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest\n  nameWithType: StrokeCollection.HitTest\n- uid: System.Windows.Ink.StrokeCollection.IndexOf*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: StrokeCollection.IndexOf\n- uid: System.Windows.Ink.StrokeCollection.InsertItem*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: InsertItem\n  nameWithType: StrokeCollection.InsertItem\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyChanged*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnPropertyChanged\n  nameWithType: StrokeCollection.OnPropertyChanged\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyDataChanged*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnPropertyDataChanged\n  nameWithType: StrokeCollection.OnPropertyDataChanged\n- uid: System.Windows.Ink.StrokeCollection.OnStrokesChanged*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnStrokesChanged\n  nameWithType: StrokeCollection.OnStrokesChanged\n- uid: System.Windows.Ink.StrokeCollection.Remove*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Remove\n  nameWithType: StrokeCollection.Remove\n- uid: System.Windows.Ink.StrokeCollection.RemoveItem*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: RemoveItem\n  nameWithType: StrokeCollection.RemoveItem\n- uid: System.Windows.Ink.StrokeCollection.RemovePropertyData*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: RemovePropertyData\n  nameWithType: StrokeCollection.RemovePropertyData\n- uid: System.Windows.Ink.StrokeCollection.Replace*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Replace\n  nameWithType: StrokeCollection.Replace\n- uid: System.Windows.Ink.StrokeCollection.Save*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Save\n  nameWithType: StrokeCollection.Save\n- uid: System.Windows.Ink.StrokeCollection.SetItem*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: SetItem\n  nameWithType: StrokeCollection.SetItem\n- uid: System.Windows.Ink.StrokeCollection.Transform*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Transform\n  nameWithType: StrokeCollection.Transform\n"}