{"nodes":[{"pos":[6003,6146],"content":"Provides information about the characteristics for a component, such as its attributes, properties, and events. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information about the characteristics for a component, such as its attributes, properties, and events. This class cannot be inherited.","pos":[0,143],"nodes":[{"content":"Provides information about the characteristics for a component, such as its attributes, properties, and events.","pos":[0,111]},{"content":"This class cannot be inherited.","pos":[112,143]}]}]},{"pos":[6159,9007],"content":"The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=fullName> namespace, and the TypeDescriptor class. Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class. The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type. For more information, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md).       In contrast, TypeDescriptor is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface. Unlike reflection, it does not inspect for methods. TypeDescriptor can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>. The following table shows these services.      |Service name|Description|   |------------------|-----------------|   |<xref:System.ComponentModel.IExtenderProvider>|Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.|   |<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|Enables another object to modify the standard metadata that is exposed by a component.|   |<xref:System.ComponentModel.ICustomTypeDescriptor>|Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of TypeDescriptor.|       The extensibility provided by TypeDescriptor allows the design-time representation of a component to differ from its actual run-time representation, which makes TypeDescriptor useful for building design-time infrastructure.       All the methods in TypeDescriptor are `static`. You cannot create an instance of this class, and this class cannot be inherited.       You can set property and event values two different ways: specify them in the component class or change them at design time. Because you can set these values two ways, the overloaded methods of TypeDescriptor take two different types of parameters: a class type or an object instance.       When you want to access TypeDescriptor information and you have an instance of the object, use the method that calls for a component. Use the method that calls for the class type only when you do not have an instance of the object.       Properties and events are cached by TypeDescriptor for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.","needQuote":false,"needEscape":true,"nodes":[{"content":"The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the &lt;xref:System.Reflection?displayProperty=fullName&gt; namespace, and the TypeDescriptor class.","pos":[0,192],"source":"The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=fullName> namespace, and the TypeDescriptor class."},{"content":"Reflection is a general mechanism available to all types because its foundation is established in the &lt;xref:System.Object.GetType%2A&gt; method of the root &lt;xref:System.Object&gt; class.","pos":[193,373],"source":" Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class."},{"content":"The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.","pos":[374,498]},{"content":"For more information, see the topics in <bpt id=\"p1\">[</bpt>Reflection<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[499,591],"source":" For more information, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md)."},{"content":"In contrast, TypeDescriptor is an extensible inspection mechanism for components: those classes that implement the &lt;xref:System.ComponentModel.IComponent&gt; interface.","pos":[598,763],"source":"       In contrast, TypeDescriptor is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface."},{"content":"Unlike reflection, it does not inspect for methods.","pos":[764,815]},{"content":"TypeDescriptor can be dynamically extended by several services available through the target component's &lt;xref:System.ComponentModel.Component.Site%2A&gt;.","pos":[816,967],"source":" TypeDescriptor can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>."},{"content":"The following table shows these services.","pos":[968,1009]},{"content":"|Service name|Description|   |------------------|-----------------|   |&lt;xref:System.ComponentModel.IExtenderProvider&gt;|Enables another class, such as &lt;xref:System.Windows.Forms.ToolTip&gt;, to provide extra properties to a component.|   |&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;|Enables another object to modify the standard metadata that is exposed by a component.|   |&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;|Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of TypeDescriptor.|       The extensibility provided by TypeDescriptor allows the design-time representation of a component to differ from its actual run-time representation, which makes TypeDescriptor useful for building design-time infrastructure.","pos":[1015,1821],"source":"      |Service name|Description|   |------------------|-----------------|   |<xref:System.ComponentModel.IExtenderProvider>|Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.|   |<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|Enables another object to modify the standard metadata that is exposed by a component.|   |<xref:System.ComponentModel.ICustomTypeDescriptor>|Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of TypeDescriptor.|       The extensibility provided by TypeDescriptor allows the design-time representation of a component to differ from its actual run-time representation, which makes TypeDescriptor useful for building design-time infrastructure."},{"content":"All the methods in TypeDescriptor are <ph id=\"ph1\">`static`</ph>.","pos":[1828,1875],"source":"       All the methods in TypeDescriptor are `static`."},{"content":"You cannot create an instance of this class, and this class cannot be inherited.","pos":[1876,1956]},{"content":"You can set property and event values two different ways: specify them in the component class or change them at design time.","pos":[1963,2087]},{"content":"Because you can set these values two ways, the overloaded methods of TypeDescriptor take two different types of parameters: a class type or an object instance.","pos":[2088,2247]},{"content":"When you want to access TypeDescriptor information and you have an instance of the object, use the method that calls for a component.","pos":[2254,2387]},{"content":"Use the method that calls for the class type only when you do not have an instance of the object.","pos":[2388,2485]},{"content":"Properties and events are cached by TypeDescriptor for speed.","pos":[2492,2553]},{"content":"Typically, they are constant for the lifetime of an object.","pos":[2554,2613]},{"content":"However, extender providers and designers can change the set of properties on an object.","pos":[2614,2702]},{"content":"If this is the case, then the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt; method must be called to update the cache.","pos":[2703,2830],"source":" If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache."}]},{"pos":[9652,9713],"content":"Adds class-level attributes to the target component instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds class-level attributes to the target component instance.","pos":[0,61]}]},{"pos":[9725,10446],"content":"The AddAttributes method adds class-level attributes to the specified instance of a component. Because this is a common requirement of applications using the [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class. The return value is the type description provider that was used to add the attributes. This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The AddAttributes method adds class-level attributes to the specified instance of a component.","pos":[0,94]},{"content":"Because this is a common requirement of applications using the <ph id=\"ph1\">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.","pos":[95,412],"source":" Because this is a common requirement of applications using the [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class."},{"content":"The return value is the type description provider that was used to add the attributes.","pos":[413,499]},{"content":"This provider can later be passed to the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method when the added attributes are no longer needed.","pos":[500,721],"source":" This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed."}]},{"pos":[10667,10703],"content":"An instance of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the target component.","pos":[0,36]}]},{"pos":[10775,10851],"content":"An array of <xref:System.Attribute> objects to add to the component's class.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Attribute&gt; objects to add to the component's class.","pos":[0,76],"source":"An array of <xref:System.Attribute> objects to add to the component's class."}]},{"pos":[10941,11072],"content":"The newly created <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that was used to add the specified attributes.","needQuote":true,"needEscape":true,"source":"The newly created <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> that was used to add the specified attributes."},{"pos":[11253,11347],"content":"One or both of the parameters is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11850,11907],"content":"Adds class-level attributes to the target component type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds class-level attributes to the target component type.","pos":[0,57]}]},{"pos":[11919,12634],"content":"The AddAttributes method adds class-level attributes to the specified type of a component. Because this is a common requirement of applications using the [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class. The return value is the type description provider that was used to add the attributes. This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The AddAttributes method adds class-level attributes to the specified type of a component.","pos":[0,90]},{"content":"Because this is a common requirement of applications using the <ph id=\"ph1\">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.","pos":[91,408],"source":" Because this is a common requirement of applications using the [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class."},{"content":"The return value is the type description provider that was used to add the attributes.","pos":[409,495]},{"content":"This provider can later be passed to the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method when the added attributes are no longer needed.","pos":[496,715],"source":" This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed."}]},{"pos":[12843,12890],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[12962,13038],"content":"An array of <xref:System.Attribute> objects to add to the component's class.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Attribute&gt; objects to add to the component's class.","pos":[0,76],"source":"An array of <xref:System.Attribute> objects to add to the component's class."}]},{"pos":[13128,13259],"content":"The newly created <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that was used to add the specified attributes.","needQuote":true,"needEscape":true,"source":"The newly created <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> that was used to add the specified attributes."},{"pos":[13440,13534],"content":"One or both of the parameters is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14056,14108],"content":"Adds an editor table for the given editor base type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an editor table for the given editor base type.","pos":[0,52]}]},{"pos":[14121,15261],"content":"The AddEditorTable method adds an editor table for the given editor base type. Typically, editors are specified as metadata on a component. However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found. Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor. The type descriptor may freely make modifications to this table.       The format for an editor table uses data types as keys and editors as values. The value portion of an entry in the table represents an editor instance. It can have one of three values. If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object. If it contains a type, an instance of this type will be created to obtain an editor. Finally, the value portion may contain an actual editor instance. If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.","needQuote":false,"needEscape":true,"nodes":[{"content":"The AddEditorTable method adds an editor table for the given editor base type. Typically, editors are specified as metadata on a component. However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found. Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor. The type descriptor may freely make modifications to this table.       The format for an editor table uses data types as keys and editors as values. The value portion of an entry in the table represents an editor instance. It can have one of three values. If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object. If it contains a type, an instance of this type will be created to obtain an editor. Finally, the value portion may contain an actual editor instance. If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.","pos":[0,1138],"nodes":[{"content":"The AddEditorTable method adds an editor table for the given editor base type.","pos":[0,78]},{"content":"Typically, editors are specified as metadata on a component.","pos":[79,139]},{"content":"However, if no metadata for a requested editor base type can be found on the component, the associated &lt;xref:System.ComponentModel.TypeDescriptor&gt; will search an editor table for the editor type, if one can be found.","pos":[140,356],"source":" However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found."},{"content":"Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.","pos":[357,472]},{"content":"The type descriptor may freely make modifications to this table.","pos":[473,537]},{"content":"The format for an editor table uses data types as keys and editors as values.","pos":[544,621]},{"content":"The value portion of an entry in the table represents an editor instance.","pos":[622,695]},{"content":"It can have one of three values.","pos":[696,728]},{"content":"If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.","pos":[729,866]},{"content":"If it contains a type, an instance of this type will be created to obtain an editor.","pos":[867,951]},{"content":"Finally, the value portion may contain an actual editor instance.","pos":[952,1017]},{"content":"If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.","pos":[1018,1138]}]}]},{"pos":[15463,15582],"content":"The editor base type to add the editor table for. If a table already exists for this type, this method will do nothing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The editor base type to add the editor table for. If a table already exists for this type, this method will do nothing.","pos":[0,119],"nodes":[{"content":"The editor base type to add the editor table for.","pos":[0,49]},{"content":"If a table already exists for this type, this method will do nothing.","pos":[50,119]}]}]},{"pos":[15659,15720],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.Hashtable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.Hashtable\"></xref> to add."},{"pos":[16395,16465],"content":"Adds a type description provider for a single instance of a component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a type description provider for a single instance of a component.","pos":[0,70]}]},{"pos":[16478,18206],"content":"The AddProvider method adds a type description provider that supplies type information for a single instance of a component. If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.       This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.       It is possible to add multiple type description providers for the same type or object. If this occurs, the first type description provider encountered that provides type information will be used exclusively. Since type information providers are stored in a stack, the last provider added will be the first one queried. This behavior enables the AddProvider and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.       If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.      > [!NOTE] >  The two versions of this method produce results with different scopes. The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified. In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.       Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.","needQuote":false,"needEscape":true,"nodes":[{"content":"The AddProvider method adds a type description provider that supplies type information for a single instance of a component.","pos":[0,124]},{"content":"If a provider is added by this method, the provider's &lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt; method will not be called because the instance already exists.","pos":[125,303],"source":" If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists."},{"content":"This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.","pos":[310,428]},{"content":"It is possible to add multiple type description providers for the same type or object.","pos":[435,521]},{"content":"If this occurs, the first type description provider encountered that provides type information will be used exclusively.","pos":[522,642]},{"content":"Since type information providers are stored in a stack, the last provider added will be the first one queried.","pos":[643,753]},{"content":"This behavior enables the AddProvider and &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt; methods to be used to push and pop type description providers as required for particular scenarios.","pos":[754,957],"source":" This behavior enables the AddProvider and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios."},{"content":"If successful, this method calls the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt; method on the <ph id=\"ph1\">`instance`</ph> parameter.","pos":[964,1107],"source":"       If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The two versions of this method produce results with different scopes.","pos":[1113,1196],"source":"      > [!NOTE] >  The two versions of this method produce results with different scopes."},{"content":"The &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; method that takes an &lt;xref:System.Object&gt; parameter affects only that single instance of the component specified.","pos":[1197,1373],"source":" The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified."},{"content":"In contrast, the other overload, which takes a &lt;xref:System.Type&gt; parameter, affects all instances of the component described by that type.","pos":[1374,1513],"source":" In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type."},{"content":"Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you need to call from partially trusted code.","pos":[1520,1717],"source":"       Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code."}]},{"pos":[18449,18527],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to add."},{"pos":[18592,18628],"content":"An instance of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the target component.","pos":[0,36]}]},{"pos":[18807,18902],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19485,19540],"content":"Adds a type description provider for a component class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a type description provider for a component class.","pos":[0,55]}]},{"pos":[19553,21419],"content":"The AddProvider method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.      > [!NOTE] >  The `type` parameter can be any type, including an interface. For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`. Passing `typeof(object)` will call the provider to supply type information for all types.       This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.       It is possible to add multiple type description providers for the same type or object. If this occurs, the first type description provider encountered that provides type information will be used exclusively. Because type information providers are stored in a stack, the last provider added will be the first one queried. This behavior enables the AddProvider and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.       If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.      > [!NOTE] >  The two versions of this method produce results with different scopes. The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified. In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.       Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.","needQuote":false,"needEscape":true,"nodes":[{"content":"The AddProvider method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.","pos":[0,162]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The <ph id=\"ph2\">`type`</ph> parameter can be any type, including an interface.","pos":[168,242],"source":"      > [!NOTE] >  The `type` parameter can be any type, including an interface."},{"content":"For example, to provide custom type and instance information for all components, you would specify <ph id=\"ph1\">`typeof(IComponent)`</ph>.","pos":[243,363],"source":" For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`."},{"content":"Passing <ph id=\"ph1\">`typeof(object)`</ph> will call the provider to supply type information for all types.","pos":[364,453],"source":" Passing `typeof(object)` will call the provider to supply type information for all types."},{"content":"This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.","pos":[460,569]},{"content":"It is possible to add multiple type description providers for the same type or object.","pos":[576,662]},{"content":"If this occurs, the first type description provider encountered that provides type information will be used exclusively.","pos":[663,783]},{"content":"Because type information providers are stored in a stack, the last provider added will be the first one queried.","pos":[784,896]},{"content":"This behavior enables the AddProvider and &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt; methods to be used to push and pop type description providers as required for particular scenarios.","pos":[897,1100],"source":" This behavior enables the AddProvider and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios."},{"content":"If successful, this method calls the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt; method on the <ph id=\"ph1\">`type`</ph> parameter.","pos":[1107,1244],"source":"       If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The two versions of this method produce results with different scopes.","pos":[1250,1333],"source":"      > [!NOTE] >  The two versions of this method produce results with different scopes."},{"content":"The &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; method that takes an &lt;xref:System.Object&gt; parameter affects only that single instance of the component specified.","pos":[1334,1510],"source":" The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified."},{"content":"In contrast, the other overload, which takes a &lt;xref:System.Type&gt; parameter, affects all instances of the component described by that type.","pos":[1511,1650],"source":" In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type."},{"content":"Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you need to call from partially trusted code.","pos":[1657,1852],"source":"       Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code."}]},{"pos":[21656,21734],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to add."},{"pos":[21793,21840],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[22019,22114],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22762,22832],"content":"Adds a type description provider for a single instance of a component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a type description provider for a single instance of a component.","pos":[0,70]}]},{"pos":[22845,23282],"content":"This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.       Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.       Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.","pos":[0,435],"nodes":[{"content":"This method can be called from partially trusted code.","pos":[0,54]},{"content":"If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can register a provider for the specified instance if its type is also partially trusted.","pos":[55,235],"source":" If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified instance if its type is also partially trusted."},{"content":"Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you do not need to call from partially trusted code.","pos":[242,435],"source":"       Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code."}]}]},{"pos":[23536,23614],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to add."},{"pos":[23679,23715],"content":"An instance of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the target component.","pos":[0,36]}]},{"pos":[23905,24000],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[24638,24693],"content":"Adds a type description provider for a component class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a type description provider for a component class.","pos":[0,55]}]},{"pos":[24706,25131],"content":"This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified type if it is also partially trusted.       Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified type if it is also partially trusted.       Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.","pos":[0,423],"nodes":[{"content":"This method can be called from partially trusted code.","pos":[0,54]},{"content":"If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can register a provider for the specified type if it is also partially trusted.","pos":[55,225],"source":" If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified type if it is also partially trusted."},{"content":"Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you do not need to call from partially trusted code.","pos":[232,423],"source":"       Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code."}]}]},{"pos":[25379,25457],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to add."},{"pos":[25516,25563],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[25753,25848],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[26300,26405],"content":"Gets or sets the provider for the Component Object Model (COM) type information for the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the provider for the Component Object Model (COM) type information for the target component.","pos":[0,105]}]},{"pos":[26417,26646],"content":"The ComNativeDescriptorHandler property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete. For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ComNativeDescriptorHandler property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete. For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.","pos":[0,229],"nodes":[{"content":"The ComNativeDescriptorHandler property and the &lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt; interface are obsolete.","pos":[0,128],"source":"The ComNativeDescriptorHandler property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete."},{"content":"For more information, see the &lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt; property.","pos":[129,229],"source":" For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property."}]}]},{"pos":[26868,26998],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.IComNativeDescriptorHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance representing the COM type information provider.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.IComNativeDescriptorHandler\"></xref> instance representing the COM type information provider."},{"pos":[27479,27572],"content":"Gets the type of the Component Object Model (COM) object represented by the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the Component Object Model (COM) object represented by the target component.","pos":[0,93]}]},{"pos":[27585,28198],"content":"The ComObjectType property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.       The ComObjectType property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface. To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type ComObjectType.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ComObjectType property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.       The ComObjectType property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface. To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type ComObjectType.","pos":[0,611],"nodes":[{"content":"The ComObjectType property returns a type that can be passed to the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method to define a type description provider for COM types.","pos":[0,248],"source":"The ComObjectType property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types."},{"content":"The ComObjectType property and other members in this class replace the functionality in the obsolete &lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt; interface.","pos":[255,423],"source":"       The ComObjectType property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface."},{"content":"To implement a mapping layer between a COM object and &lt;xref:System.ComponentModel.TypeDescriptor&gt;, add a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; to handle type ComObjectType.","pos":[424,611],"source":" To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type ComObjectType."}]}]},{"pos":[28320,28476],"content":"The &lt;xref:System.Type&gt; of the COM object represented by this component, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for non-COM objects.","needQuote":true,"needEscape":true,"source":"The <xref:System.Type> of the COM object represented by this component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-COM objects."},{"pos":[29065,29125],"content":"Creates a primary-secondary association between two objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a primary-secondary association between two objects.","pos":[0,60]}]},{"pos":[29138,29846],"content":"The CreateAssociation method creates an association between a primary and a secondary object. Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set. When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CreateAssociation method creates an association between a primary and a secondary object. Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set. When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.","pos":[0,706],"nodes":[{"content":"The CreateAssociation method creates an association between a primary and a secondary object.","pos":[0,93]},{"content":"Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.","pos":[94,252]},{"content":"When a property invocation is made against the primary object, the &lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt; method will be called to resolve the actual object instance that is related to its type parameter.","pos":[253,480],"source":" When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter."},{"content":"A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.","pos":[487,706],"source":"       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection."}]}]},{"pos":[30023,30056],"content":"The primary <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primary &lt;xref:System.Object&gt;.","pos":[0,33],"source":"The primary <xref:System.Object>."}]},{"pos":[30122,30157],"content":"The secondary <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secondary &lt;xref:System.Object&gt;.","pos":[0,35],"source":"The secondary <xref:System.Object>."}]},{"pos":[30342,30437],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30532,30588],"content":"<ph id=\"ph1\">&lt;code&gt;primary&lt;/code&gt;</ph> is equal to <ph id=\"ph2\">&lt;code&gt;secondary&lt;/code&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>primary</code> is equal to <code>secondary</code>."},{"pos":[31121,31235],"content":"Creates an instance of the designer associated with the specified component and of the specified type of designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an instance of the designer associated with the specified component and of the specified type of designer.","pos":[0,114]}]},{"pos":[31247,31452],"content":"If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer. If it cannot find a designer in the class hierarchy, it returns `null`.","needQuote":true,"needEscape":true,"nodes":[{"content":"If this method cannot find a valid &lt;xref:System.ComponentModel.DesignerAttribute&gt;, it searches up the class hierarchy for a designer.","pos":[0,133],"source":"If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer."},{"content":"If it cannot find a designer in the class hierarchy, it returns <ph id=\"ph1\">`null`</ph>.","pos":[134,205],"source":" If it cannot find a designer in the class hierarchy, it returns `null`."}]},{"pos":[31713,31830],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.IComponent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the component to associate with the designer.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.IComponent\"></xref> that specifies the component to associate with the designer."},{"pos":[31901,31969],"content":"A <xref:System.Type> that represents the type of designer to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type of designer to create.","pos":[0,68],"source":"A <xref:System.Type> that represents the type of designer to create."}]},{"pos":[32052,32262],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesigner\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is an instance of the designer for the component, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if no designer can be found.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.Design.IDesigner\"></xref> that is an instance of the designer for the component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no designer can be found."},{"pos":[32961,33127],"content":"Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <xref href=\"System.ComponentModel.EventDescriptor\"></xref>."},{"pos":[33402,33462],"content":"The type of the component for which to create the new event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the component for which to create the new event.","pos":[0,60]}]},{"pos":[33561,33592],"content":"The existing event information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The existing event information.","pos":[0,31]}]},{"pos":[33664,33683],"content":"The new attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new attributes.","pos":[0,19]}]},{"pos":[33765,33918],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that has merged the specified metadata attributes with the existing metadata attributes.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.ComponentModel.EventDescriptor\"></xref> that has merged the specified metadata attributes with the existing metadata attributes."},{"pos":[34578,34741],"content":"Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.","pos":[0,163]}]},{"pos":[34982,35027],"content":"The type of the component the event lives on.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the component the event lives on.","pos":[0,45]}]},{"pos":[35088,35110],"content":"The name of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the event.","pos":[0,22]}]},{"pos":[35169,35217],"content":"The type of the delegate that handles the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the delegate that handles the event.","pos":[0,48]}]},{"pos":[35289,35319],"content":"The attributes for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attributes for this event.","pos":[0,30]}]},{"pos":[35401,35487],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is bound to a type.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptor\"></xref> that is bound to a type."},{"pos":[36207,36267],"content":"Creates an object that can substitute for another data type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an object that can substitute for another data type.","pos":[0,60]}]},{"pos":[36279,36795],"content":"The CreateInstance method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type. This method first tries to obtain a type description provider from the `provider` parameter. If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>). If it finds a provider, this method will delegate the creation call to that object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CreateInstance method will search for a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; that is associated with the specified <ph id=\"ph1\">`objectType`</ph> data type.","pos":[0,158],"source":"The CreateInstance method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type."},{"content":"This method first tries to obtain a type description provider from the <ph id=\"ph1\">`provider`</ph> parameter.","pos":[159,251],"source":" This method first tries to obtain a type description provider from the `provider` parameter."},{"content":"If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;).","pos":[252,432],"source":" If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>)."},{"content":"If it finds a provider, this method will delegate the creation call to that object.","pos":[433,516]}]},{"pos":[37023,37219],"content":"The service provider that provides a <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> service. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service provider that provides a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> service.","pos":[0,112],"source":"The service provider that provides a <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> service."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[113,196],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[37284,37327],"content":"The <xref:System.Type> of object to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of object to create.","pos":[0,43],"source":"The <xref:System.Type> of object to create."}]},{"pos":[37392,37581],"content":"An optional array of parameter types to be passed to the object's constructor. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an array of zero length.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional array of parameter types to be passed to the object's constructor.","pos":[0,78]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an array of zero length.","pos":[79,189],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an array of zero length."}]},{"pos":[37644,37842],"content":"An optional array of parameter values to pass to the object's constructor. If not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the number of elements must be the same as `argTypes`.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional array of parameter values to pass to the object's constructor.","pos":[0,74]},{"content":"If not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the number of elements must be the same as <ph id=\"ph1\">`argTypes`</ph>.","pos":[75,198],"source":" If not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the number of elements must be the same as `argTypes`."}]},{"pos":[37900,38106],"content":"An instance of the substitute data type if an associated <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is found; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An instance of the substitute data type if an associated <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> is found; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[38288,38557],"content":"<ph id=\"ph1\">&lt;code&gt;objectType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or <ph id=\"ph2\">&lt;code&gt;args&lt;/code&gt;</ph> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> when <ph id=\"ph3\">&lt;code&gt;argTypes&lt;/code&gt;</ph> is not <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>objectType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or <code>args</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> when <code>argTypes</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[38652,38730],"content":"<ph id=\"ph1\">&lt;code&gt;argTypes&lt;/code&gt;</ph> and <ph id=\"ph2\">&lt;code&gt;args&lt;/code&gt;</ph> have different number of elements.","needQuote":true,"needEscape":true,"source":"<code>argTypes</code> and <code>args</code> have different number of elements."},{"pos":[39377,39560],"content":"Creates a new property descriptor from an existing property descriptor, using the specified existing <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and attribute array.","needQuote":true,"needEscape":true,"source":"Creates a new property descriptor from an existing property descriptor, using the specified existing <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> and attribute array."},{"pos":[39847,39920],"content":"The <xref:System.Type> of the component that the property is a member of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the component that the property is a member of.","pos":[0,73],"source":"The <xref:System.Type> of the component that the property is a member of."}]},{"pos":[40025,40058],"content":"The existing property descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The existing property descriptor.","pos":[0,33]}]},{"pos":[40130,40167],"content":"The new attributes for this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new attributes for this property.","pos":[0,37]}]},{"pos":[40252,40408],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that has the specified metadata attributes merged with the existing metadata attributes.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that has the specified metadata attributes merged with the existing metadata attributes."},{"pos":[41086,41210],"content":"Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.","pos":[0,124]}]},{"pos":[41457,41530],"content":"The <xref:System.Type> of the component that the property is a member of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the component that the property is a member of.","pos":[0,73],"source":"The <xref:System.Type> of the component that the property is a member of."}]},{"pos":[41591,41616],"content":"The name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property.","pos":[0,25]}]},{"pos":[41675,41714],"content":"The <xref:System.Type> of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the property.","pos":[0,39],"source":"The <xref:System.Type> of the property."}]},{"pos":[41786,41823],"content":"The new attributes for this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new attributes for this property.","pos":[0,37]}]},{"pos":[41908,42100],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes."},{"pos":[42665,42742],"content":"Returns an instance of the type associated with the specified primary object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an instance of the type associated with the specified primary object.","pos":[0,77]}]},{"pos":[42755,43405],"content":"If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the GetAssociation method returns the correct secondary object to invoke for the requested type. Otherwise, GetAssociation searches for a compatible designer for `type` and returns the designer if one is found. This method never returns `null`.       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"If a previous association has been made for the <ph id=\"ph1\">`type`</ph> parameter using the &lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt; method, then the GetAssociation method returns the correct secondary object to invoke for the requested type.","pos":[0,249],"source":"If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the GetAssociation method returns the correct secondary object to invoke for the requested type."},{"content":"Otherwise, GetAssociation searches for a compatible designer for <ph id=\"ph1\">`type`</ph> and returns the designer if one is found.","pos":[250,363],"source":" Otherwise, GetAssociation searches for a compatible designer for `type` and returns the designer if one is found."},{"content":"This method never returns <ph id=\"ph1\">`null`</ph>.","pos":[364,397],"source":" This method never returns `null`."},{"content":"A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.","pos":[404,648],"source":"       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection."}]},{"pos":[43569,43616],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[43680,43718],"content":"The primary object of the association.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primary object of the association.","pos":[0,38]}]},{"pos":[43776,43952],"content":"An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">primary</ph><ept id=\"p1\">&lt;/code&gt;</ept> if no specified association exists.","needQuote":true,"needEscape":true,"source":"An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <code>primary</code> if no specified association exists."},{"pos":[44134,44229],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[44668,44733],"content":"Returns the collection of attributes for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of attributes for the specified component.","pos":[0,65]}]},{"pos":[44746,46470],"content":"The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.       When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property to make it unique. If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=fullName> to return the object identity of your attribute. If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=fullName> that would return equality in those cases. For example, some attributes have a constructor parameter that acts as a unique key. For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.      > [!NOTE] >  The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=fullName> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> property. In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The attributes returned by the &lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt; method may be dynamically modified from the original component's source listing by extender providers (&lt;xref:System.ComponentModel.IExtenderProvider&gt;), filter services (&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;), and attribute filters.","pos":[0,350],"source":"The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters."},{"content":"When you define a custom attribute with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id=\"ph1\">`true`</ph>, you must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property to make it unique.","pos":[357,600],"source":"       When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property to make it unique."},{"content":"If all instances of your attribute are unique, override &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; to return the object identity of your attribute.","pos":[601,764],"source":" If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=fullName> to return the object identity of your attribute."},{"content":"If only some instances of your attribute are unique, return a value from &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; that would return equality in those cases.","pos":[765,939],"source":" If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=fullName> that would return equality in those cases."},{"content":"For example, some attributes have a constructor parameter that acts as a unique key.","pos":[940,1024]},{"content":"For these attributes, return the value of the constructor parameter from the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.","pos":[1025,1170],"source":" For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The default implementation of &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; returns the type identity regardless of the value of the &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; property.","pos":[1176,1424],"source":"      > [!NOTE] >  The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=fullName> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> property."},{"content":"In order to return multiple instances of an &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; attribute from the &lt;xref:System.ComponentModel.AttributeCollection&gt;, your attribute must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.","pos":[1425,1719],"source":" In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property."}]},{"pos":[46788,46839],"content":"The component for which you want to get attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component for which you want to get attributes.","pos":[0,51]}]},{"pos":[46925,47167],"content":"An <xref href=\"System.ComponentModel.AttributeCollection\"></xref> containing the attributes for the component. If <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns an empty collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.AttributeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the attributes for the component.","pos":[0,110],"source":"An <xref href=\"System.ComponentModel.AttributeCollection\"></xref> containing the attributes for the component."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method returns an empty collection.","pos":[111,242],"source":" If <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns an empty collection."}]},{"pos":[47677,47748],"content":"Returns a collection of attributes for the specified type of component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of attributes for the specified type of component.","pos":[0,71]}]},{"pos":[47761,49520],"content":"Call this version of this method only when you do not have an instance of the object.       For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, the attribute collection removes duplicate instances. These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property returns equal values.       When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property to make it unique. If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=fullName> to return the object identity of your attribute. If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=fullName> that would return equality in those cases. For example, some attributes have a constructor parameter that acts as a unique key. For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.      > [!NOTE] >  The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=fullName> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> property. In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.","pos":[0,85]},{"content":"For attributes with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id=\"ph1\">`true`</ph>, the attribute collection removes duplicate instances.","pos":[92,260],"source":"       For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, the attribute collection removes duplicate instances."},{"content":"These are instances in which the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property returns equal values.","pos":[261,383],"source":" These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property returns equal values."},{"content":"When you define a custom attribute with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id=\"ph1\">`true`</ph>, you must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property to make it unique.","pos":[390,633],"source":"       When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property to make it unique."},{"content":"If all instances of your attribute are unique, override &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; to return the object identity of your attribute.","pos":[634,797],"source":" If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=fullName> to return the object identity of your attribute."},{"content":"If only some instances of your attribute are unique, return a value from &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; that would return equality in those cases.","pos":[798,972],"source":" If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=fullName> that would return equality in those cases."},{"content":"For example, some attributes have a constructor parameter that acts as a unique key.","pos":[973,1057]},{"content":"For these attributes, return the value of the constructor parameter from the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.","pos":[1058,1203],"source":" For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The default implementation of &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; returns the type identity regardless of the value of the &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; property.","pos":[1209,1457],"source":"      > [!NOTE] >  The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=fullName> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> property."},{"content":"In order to return multiple instances of an &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; attribute from the &lt;xref:System.ComponentModel.AttributeCollection&gt;, your attribute must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.","pos":[1458,1752],"source":" In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property."}]},{"pos":[49720,49767],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[49853,50092],"content":"An <xref href=\"System.ComponentModel.AttributeCollection\"></xref> with the attributes for the type of the component. If the component is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns an empty collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.AttributeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the attributes for the type of the component.","pos":[0,116],"source":"An <xref href=\"System.ComponentModel.AttributeCollection\"></xref> with the attributes for the type of the component."},{"content":"If the component is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, this method returns an empty collection.","pos":[117,239],"source":" If the component is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns an empty collection."}]},{"pos":[50666,50801],"content":"Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.","pos":[0,135]}]},{"pos":[50814,52537],"content":"The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.       When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property to make it unique. If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=fullName> to return the object identity of your attribute. If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=fullName> that would return equality in those cases. For example, some attributes have a constructor parameter that acts as a unique key. For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.      > [!NOTE] >  The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=fullName> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> property. In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The attributes returned by the &lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt; method may be dynamically modified from the original components source listing by extender providers (&lt;xref:System.ComponentModel.IExtenderProvider&gt;), filter services (&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;), and attribute filters.","pos":[0,349],"source":"The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters."},{"content":"When you define a custom attribute with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id=\"ph1\">`true`</ph>, you must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property to make it unique.","pos":[356,599],"source":"       When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property to make it unique."},{"content":"If all instances of your attribute are unique, override &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; to return the object identity of your attribute.","pos":[600,763],"source":" If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=fullName> to return the object identity of your attribute."},{"content":"If only some instances of your attribute are unique, return a value from &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; that would return equality in those cases.","pos":[764,938],"source":" If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=fullName> that would return equality in those cases."},{"content":"For example, some attributes have a constructor parameter that acts as a unique key.","pos":[939,1023]},{"content":"For these attributes, return the value of the constructor parameter from the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.","pos":[1024,1169],"source":" For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The default implementation of &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; returns the type identity regardless of the value of the &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; property.","pos":[1175,1423],"source":"      > [!NOTE] >  The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=fullName> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> property."},{"content":"In order to return multiple instances of an &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; attribute from the &lt;xref:System.ComponentModel.AttributeCollection&gt;, your attribute must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.","pos":[1424,1718],"source":" In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property."}]},{"pos":[52756,52807],"content":"The component for which you want to get attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component for which you want to get attributes.","pos":[0,51]}]},{"pos":[52881,53176],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use a baseline set of attributes from the custom type descriptor if <ph id=\"ph1\">`component`</ph> is of type <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.ICustomTypeDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a baseline set of attributes from the custom type descriptor if `component` is of type <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[53262,53489],"content":"An <xref href=\"System.ComponentModel.AttributeCollection\"></xref> with the attributes for the component. If the component is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns an empty collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.AttributeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the attributes for the component.","pos":[0,104],"source":"An <xref href=\"System.ComponentModel.AttributeCollection\"></xref> with the attributes for the component."},{"content":"If the component is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, this method returns an empty collection.","pos":[105,227],"source":" If the component is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns an empty collection."}]},{"pos":[54004,54096],"content":"Returns the name of the class for the specified component using the default type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the name of the class for the specified component using the default type descriptor.","pos":[0,92]}]},{"pos":[54109,54584],"content":"Typically, this method returns the full <xref:System.Type> name for the `component` parameter type. For example, the class name for a button is \"System.Windows.Forms.Button\". If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.       This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.","needQuote":false,"needEscape":true,"nodes":[{"content":"Typically, this method returns the full &lt;xref:System.Type&gt; name for the <ph id=\"ph1\">`component`</ph> parameter type.","pos":[0,99],"source":"Typically, this method returns the full <xref:System.Type> name for the `component` parameter type."},{"content":"For example, the class name for a button is \"System.Windows.Forms.Button\".","pos":[100,174]},{"content":"If <ph id=\"ph1\">`component`</ph> implements &lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;, it can return an alternate name.","pos":[175,285],"source":" If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name."},{"content":"This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt; method with a second parameter of <ph id=\"ph1\">`false`</ph>.","pos":[292,471],"source":"       This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`."}]},{"pos":[54744,54803],"content":"The <xref:System.Object> for which you want the class name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; for which you want the class name.","pos":[0,59],"source":"The <xref:System.Object> for which you want the class name."}]},{"pos":[54861,54945],"content":"A <xref:System.String> containing the name of the class for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the name of the class for the specified component.","pos":[0,84],"source":"A <xref:System.String> containing the name of the class for the specified component."}]},{"pos":[55125,55212],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[55636,55689],"content":"Returns the name of the class for the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the name of the class for the specified type.","pos":[0,53]}]},{"pos":[55701,55813],"content":"This method uses the cached custom type descriptor for the specified type to discover the associated class name.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method uses the cached custom type descriptor for the specified type to discover the associated class name.","pos":[0,112]}]},{"pos":[55976,56023],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[56081,56170],"content":"A <xref:System.String> containing the name of the class for the specified component type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the name of the class for the specified component type.","pos":[0,89],"source":"A <xref:System.String> containing the name of the class for the specified component type."}]},{"pos":[56350,56441],"content":"<ph id=\"ph1\">&lt;code&gt;componentType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>componentType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[56929,57018],"content":"Returns the name of the class for the specified component using a custom type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the name of the class for the specified component using a custom type descriptor.","pos":[0,89]}]},{"pos":[57030,57329],"content":"Typically, this method returns the full <xref:System.Type> name for the `component` parameter type. For example, the class name for a button is \"System.Windows.Forms.Button\". If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Typically, this method returns the full &lt;xref:System.Type&gt; name for the <ph id=\"ph1\">`component`</ph> parameter type.","pos":[0,99],"source":"Typically, this method returns the full <xref:System.Type> name for the `component` parameter type."},{"content":"For example, the class name for a button is \"System.Windows.Forms.Button\".","pos":[100,174]},{"content":"If the <ph id=\"ph1\">`component`</ph> parameter implements &lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;, it can return an alternate name.","pos":[175,299],"source":" If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name."}]},{"pos":[57511,57570],"content":"The <xref:System.Object> for which you want the class name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; for which you want the class name.","pos":[0,59],"source":"The <xref:System.Object> for which you want the class name."}]},{"pos":[57644,57828],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[57886,57970],"content":"A <xref:System.String> containing the name of the class for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; containing the name of the class for the specified component.","pos":[0,84],"source":"A <xref:System.String> containing the name of the class for the specified component."}]},{"pos":[58150,58237],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[58340,58397],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[58851,58929],"content":"Returns the name of the specified component using the default type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the name of the specified component using the default type descriptor.","pos":[0,78]}]},{"pos":[58942,59391],"content":"Typically, this method returns the name for the site of the component, if one exists. For example, the class name for a button is \"System.Windows.Forms.Button\".       This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.       This method is used at design time to retrieve the name of an instance of a component.","needQuote":false,"needEscape":true,"nodes":[{"content":"Typically, this method returns the name for the site of the component, if one exists.","pos":[0,85]},{"content":"For example, the class name for a button is \"System.Windows.Forms.Button\".","pos":[86,160]},{"content":"This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt; method with a second parameter of <ph id=\"ph1\">`false`</ph>.","pos":[167,350],"source":"       This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`."},{"content":"This method is used at design time to retrieve the name of an instance of a component.","pos":[357,443]}]},{"pos":[59555,59614],"content":"The <xref:System.Object> for which you want the class name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; for which you want the class name.","pos":[0,59],"source":"The <xref:System.Object> for which you want the class name."}]},{"pos":[59672,59837],"content":"A &lt;xref:System.String&gt; containing the name of the specified component, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is no component name.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> containing the name of the specified component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no component name."},{"pos":[60021,60108],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[60211,60268],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[60776,60851],"content":"Returns the name of the specified component using a custom type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the name of the specified component using a custom type descriptor.","pos":[0,75]}]},{"pos":[60863,61237],"content":"This method is used at design time to retrieve the name of an instance of a component. Typically, this method returns the name for the site of the component, if one exists. For example, the class name for a button is \"System.Windows.Forms.Button\". If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is used at design time to retrieve the name of an instance of a component. Typically, this method returns the name for the site of the component, if one exists. For example, the class name for a button is \"System.Windows.Forms.Button\". If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.","pos":[0,374],"nodes":[{"content":"This method is used at design time to retrieve the name of an instance of a component.","pos":[0,86]},{"content":"Typically, this method returns the name for the site of the component, if one exists.","pos":[87,172]},{"content":"For example, the class name for a button is \"System.Windows.Forms.Button\".","pos":[173,247]},{"content":"If the component implements the &lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt; interface, it can return an alternate name.","pos":[248,374],"source":" If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name."}]}]},{"pos":[61423,61482],"content":"The <xref:System.Object> for which you want the class name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; for which you want the class name.","pos":[0,59],"source":"The <xref:System.Object> for which you want the class name."}]},{"pos":[61556,61740],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[61798,61943],"content":"The name of the class for the specified component, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is no component name.","needQuote":true,"needEscape":true,"source":"The name of the class for the specified component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no component name."},{"pos":[62127,62214],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[62317,62374],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[62808,62873],"content":"Returns a type converter for the type of the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a type converter for the type of the specified component.","pos":[0,65]}]},{"pos":[62886,63317],"content":"This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>. If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.       This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method locates an appropriate type converter by looking for a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.","pos":[0,119],"source":"This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>."},{"content":"If it cannot find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;, it traverses the base class hierarchy of the class until it finds a primitive type.","pos":[120,276],"source":" If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type."},{"content":"This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt; method with a second parameter of <ph id=\"ph1\">`false`</ph>.","pos":[283,429],"source":"       This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`."}]},{"pos":[63616,63653],"content":"A component to get the converter for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the converter for.","pos":[0,37]}]},{"pos":[63733,63820],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified component.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified component."},{"pos":[64000,64087],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[64190,64247],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[64671,64719],"content":"Returns a type converter for the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a type converter for the specified type.","pos":[0,48]}]},{"pos":[64732,65105],"content":"Call this version of this method only when you do not have an instance of the object.       This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>. If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.       This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>. If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.","pos":[0,371],"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.","pos":[0,85]},{"content":"This method looks for the appropriate type converter by looking for a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.","pos":[92,214],"source":"       This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>."},{"content":"If it cannot find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;, it traverses the base class hierarchy of the class until it finds a primitive type.","pos":[215,371],"source":" If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type."}]}]},{"pos":[65280,65327],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[65407,65489],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified type.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type."},{"pos":[65669,65756],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[66244,66339],"content":"Returns a type converter for the type of the specified component with a custom type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a type converter for the type of the specified component with a custom type descriptor.","pos":[0,95]}]},{"pos":[66351,66633],"content":"This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>. If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>. If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.","pos":[0,282],"nodes":[{"content":"This method looks for the appropriate type converter by trying to find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.","pos":[0,125],"source":"This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>."},{"content":"If it cannot find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;, it traverses the base class hierarchy of the class until it finds a primitive type.","pos":[126,282],"source":" If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type."}]}]},{"pos":[66844,66881],"content":"A component to get the converter for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the converter for.","pos":[0,37]}]},{"pos":[66955,67139],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[67219,67306],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified component.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified component."},{"pos":[67486,67573],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[67676,67733],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[68182,68236],"content":"Returns the default event for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the default event for the specified component.","pos":[0,54]}]},{"pos":[68248,68430],"content":"This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt; method with a second parameter of <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`."},{"pos":[68623,68658],"content":"The component to get the event for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the event for.","pos":[0,35]}]},{"pos":[68740,68913],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the default event, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there are no events.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptor\"></xref> with the default event, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no events."},{"pos":[69096,69183],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[69286,69343],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[69782,69844],"content":"Returns the default event for the specified type of component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the default event for the specified type of component.","pos":[0,62]}]},{"pos":[69856,69941],"content":"Call this version of this method only when you do not have an instance of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.","pos":[0,85]}]},{"pos":[70138,70185],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[70267,70440],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the default event, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there are no events.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptor\"></xref> with the default event, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no events."},{"pos":[70623,70710],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[71213,71285],"content":"Returns the default event for a component with a custom type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the default event for a component with a custom type descriptor.","pos":[0,72]}]},{"pos":[71501,71536],"content":"The component to get the event for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the event for.","pos":[0,35]}]},{"pos":[71610,71794],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[71876,72049],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the default event, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there are no events.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptor\"></xref> with the default event, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no events."},{"pos":[72232,72319],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[72422,72479],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[72943,73000],"content":"Returns the default property for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the default property for the specified component.","pos":[0,57]}]},{"pos":[73012,73079],"content":"If the <ph id=\"ph1\">`component`</ph> parameter is <ph id=\"ph2\">`null`</ph>, this method returns <ph id=\"ph3\">`null`</ph>.","needQuote":true,"needEscape":true,"source":"If the `component` parameter is `null`, this method returns `null`."},{"pos":[73278,73324],"content":"The component to get the default property for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the default property for.","pos":[0,46]}]},{"pos":[73409,73591],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the default property, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there are no properties.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> with the default property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no properties."},{"pos":[73777,73834],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[74288,74353],"content":"Returns the default property for the specified type of component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the default property for the specified type of component.","pos":[0,65]}]},{"pos":[74366,74531],"content":"Call this version of this method only when you do not have an instance of the object.       If the `componentType` parameter is `null`, this method returns `null`.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.","pos":[0,85]},{"content":"If the <ph id=\"ph1\">`componentType`</ph> parameter is <ph id=\"ph2\">`null`</ph>, this method returns <ph id=\"ph3\">`null`</ph>.","pos":[92,163],"source":"       If the `componentType` parameter is `null`, this method returns `null`."}]},{"pos":[74735,74806],"content":"A <xref:System.Type> that represents the class to get the property for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the class to get the property for.","pos":[0,71],"source":"A <xref:System.Type> that represents the class to get the property for."}]},{"pos":[74891,75073],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the default property, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there are no properties.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> with the default property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no properties."},{"pos":[75677,75764],"content":"Returns the default property for the specified component with a custom type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the default property for the specified component with a custom type descriptor.","pos":[0,87]}]},{"pos":[75776,75843],"content":"If the <ph id=\"ph1\">`component`</ph> parameter is <ph id=\"ph2\">`null`</ph>, this method returns <ph id=\"ph3\">`null`</ph>.","needQuote":true,"needEscape":true,"source":"If the `component` parameter is `null`, this method returns `null`."},{"pos":[76065,76111],"content":"The component to get the default property for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the default property for.","pos":[0,46]}]},{"pos":[76185,76369],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[76454,76636],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the default property, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there are no properties.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> with the default property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no properties."},{"pos":[76822,76879],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[77337,77409],"content":"Gets an editor with the specified base type for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an editor with the specified base type for the specified component.","pos":[0,72]}]},{"pos":[77422,77768],"content":"The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).       You can define multiple editors for a property. You use this method to select the editor you want to use.","needQuote":false,"needEscape":true,"nodes":[{"content":"The type of <ph id=\"ph1\">`editorBaseType`</ph> is usually &lt;xref:System.Drawing.Design.UITypeEditor&gt;, but you can also use other types (for example, &lt;xref:System.ComponentModel.ComponentEditor&gt; and &lt;xref:System.ComponentModel.InstanceCreationEditor&gt;).","pos":[0,232],"source":"The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>)."},{"content":"You can define multiple editors for a property.","pos":[239,286]},{"content":"You use this method to select the editor you want to use.","pos":[287,344]}]},{"pos":[77946,77982],"content":"The component to get the editor for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the editor for.","pos":[0,36]}]},{"pos":[78051,78133],"content":"A <xref:System.Type> that represents the base type of the editor you want to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the base type of the editor you want to find.","pos":[0,82],"source":"A <xref:System.Type> that represents the base type of the editor you want to find."}]},{"pos":[78191,78376],"content":"An instance of the editor that can be cast to the specified editor type, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no editor of the requested type can be found.","needQuote":true,"needEscape":true,"source":"An instance of the editor that can be cast to the specified editor type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no editor of the requested type can be found."},{"pos":[78553,78671],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> or <code>editorBaseType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[78774,78831],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[79279,79349],"content":"Returns an editor with the specified base type for the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an editor with the specified base type for the specified type.","pos":[0,70]}]},{"pos":[79362,79794],"content":"The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).       You can define multiple editors for a type. You use this method to select the one you want to use.       Call this version of this method only when you do not have an instance of the object.","needQuote":false,"needEscape":true,"nodes":[{"content":"The type of <ph id=\"ph1\">`editorBaseType`</ph> is usually &lt;xref:System.Drawing.Design.UITypeEditor&gt;, but you can also use other types (for example &lt;xref:System.ComponentModel.ComponentEditor&gt; and &lt;xref:System.ComponentModel.InstanceCreationEditor&gt;).","pos":[0,231],"source":"The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>)."},{"content":"You can define multiple editors for a type.","pos":[238,281]},{"content":"You use this method to select the one you want to use.","pos":[282,336]},{"content":"Call this version of this method only when you do not have an instance of the object.","pos":[343,428]}]},{"pos":[79958,80005],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[80074,80162],"content":"A <xref:System.Type> that represents the base type of the editor you are trying to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the base type of the editor you are trying to find.","pos":[0,88],"source":"A <xref:System.Type> that represents the base type of the editor you are trying to find."}]},{"pos":[80220,80406],"content":"An instance of the editor object that can be cast to the given base type, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no editor of the requested type can be found.","needQuote":true,"needEscape":true,"source":"An instance of the editor object that can be cast to the given base type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no editor of the requested type can be found."},{"pos":[80583,80696],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> or <code>editorBaseType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[81208,81317],"content":"Returns an editor with the specified base type and with a custom type descriptor for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an editor with the specified base type and with a custom type descriptor for the specified component.","pos":[0,109]}]},{"pos":[81330,81675],"content":"The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).       You can define multiple editors for a property. You use this method to select the editor you want to use.","needQuote":false,"needEscape":true,"nodes":[{"content":"The type of <ph id=\"ph1\">`editorBaseType`</ph> is usually &lt;xref:System.Drawing.Design.UITypeEditor&gt;, but you can also use other types (for example &lt;xref:System.ComponentModel.ComponentEditor&gt; and &lt;xref:System.ComponentModel.InstanceCreationEditor&gt;).","pos":[0,231],"source":"The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>)."},{"content":"You can define multiple editors for a property.","pos":[238,285]},{"content":"You use this method to select the editor you want to use.","pos":[286,343]}]},{"pos":[81876,81912],"content":"The component to get the editor for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to get the editor for.","pos":[0,36]}]},{"pos":[81981,82063],"content":"A <xref:System.Type> that represents the base type of the editor you want to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the base type of the editor you want to find.","pos":[0,82],"source":"A <xref:System.Type> that represents the base type of the editor you want to find."}]},{"pos":[82137,82220],"content":"A flag indicating whether custom type description information should be considered.","needQuote":true,"needEscape":true,"nodes":[{"content":"A flag indicating whether custom type description information should be considered.","pos":[0,83]}]},{"pos":[82278,82463],"content":"An instance of the editor that can be cast to the specified editor type, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no editor of the requested type can be found.","needQuote":true,"needEscape":true,"source":"An instance of the editor that can be cast to the specified editor type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no editor of the requested type can be found."},{"pos":[82640,82758],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> or <code>editorBaseType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[82861,82918],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[83337,83398],"content":"Returns the collection of events for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of events for the specified component.","pos":[0,61]}]},{"pos":[83411,83851],"content":"Retrieves a collection of events that the given `component` parameter instance provides. This collection can differ from the set of events the class provides. If the `component` parameter is sited, the site can add or remove additional events.       If `component` is `null`, then an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"Retrieves a collection of events that the given <ph id=\"ph1\">`component`</ph> parameter instance provides.","pos":[0,88],"source":"Retrieves a collection of events that the given `component` parameter instance provides."},{"content":"This collection can differ from the set of events the class provides.","pos":[89,158]},{"content":"If the <ph id=\"ph1\">`component`</ph> parameter is sited, the site can add or remove additional events.","pos":[159,243],"source":" If the `component` parameter is sited, the site can add or remove additional events."},{"content":"If <ph id=\"ph1\">`component`</ph> is <ph id=\"ph2\">`null`</ph>, then an empty collection is returned.","pos":[250,313],"source":"       If `component` is `null`, then an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[320,436]}]},{"pos":[84177,84211],"content":"A component to get the events for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the events for.","pos":[0,34]}]},{"pos":[84303,84410],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the events for this component.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events for this component."},{"pos":[84587,84644],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[85053,85120],"content":"Returns the collection of events for a specified type of component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of events for a specified type of component.","pos":[0,67]}]},{"pos":[85133,85428],"content":"Call this version of this method only when you do not have an instance of the object.       If the `componentType` parameter is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.","pos":[0,85]},{"content":"If the <ph id=\"ph1\">`componentType`</ph> parameter is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[92,168],"source":"       If the `componentType` parameter is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[175,291]}]},{"pos":[85630,85677],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[85769,85876],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the events for this component.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events for this component."},{"pos":[86446,86555],"content":"Returns the collection of events for a specified component using a specified array of attributes as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of events for a specified component using a specified array of attributes as a filter.","pos":[0,109]}]},{"pos":[86568,87701],"content":"The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.       The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:      -   A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.      -   If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.      -   If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.      -   If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.       If `component` is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"The events for the <ph id=\"ph1\">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id=\"ph2\">`component`</ph> parameter is sited.","pos":[0,160],"source":"The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited."},{"content":"The <ph id=\"ph1\">`attributes`</ph> array can have a mix of &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.","pos":[167,263],"source":"       The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects."},{"content":"Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; is treated as a wildcard; it matches any event that has the &lt;xref:System.Type&gt; in its set of attributes.","pos":[264,443],"source":" Filtering is defined by the following rules:      -   A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes."},{"content":"-   If an event does not have an &lt;xref:System.Attribute&gt; of the same class, the event is not included in the returned array.","pos":[449,573],"source":"      -   If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array."},{"content":"-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the event must be an exact match or it is not included in the returned array.","pos":[579,730],"source":"      -   If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array."},{"content":"-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default event, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the event.","pos":[736,931],"source":"      -   If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event."},{"content":"If <ph id=\"ph1\">`component`</ph> is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[938,996],"source":"       If `component` is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[1003,1119]}]},{"pos":[87923,87957],"content":"A component to get the events for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the events for.","pos":[0,34]}]},{"pos":[88029,88099],"content":"An array of type <xref:System.Attribute> that you can use as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Attribute&gt; that you can use as a filter.","pos":[0,70],"source":"An array of type <xref:System.Attribute> that you can use as a filter."}]},{"pos":[88191,88334],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the events that match the specified attributes for this component.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events that match the specified attributes for this component."},{"pos":[88511,88568],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[89041,89130],"content":"Returns the collection of events for a specified component with a custom type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of events for a specified component with a custom type descriptor.","pos":[0,89]}]},{"pos":[89143,89579],"content":"This method retrieves a collection of events that the given `component` parameter instance provides. This can differ from the set of events the class provides. If the `component` parameter is sited, the site can add or remove additional events.       If `component` is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method retrieves a collection of events that the given <ph id=\"ph1\">`component`</ph> parameter instance provides.","pos":[0,100],"source":"This method retrieves a collection of events that the given `component` parameter instance provides."},{"content":"This can differ from the set of events the class provides.","pos":[101,159]},{"content":"If the <ph id=\"ph1\">`component`</ph> parameter is sited, the site can add or remove additional events.","pos":[160,244],"source":" If the `component` parameter is sited, the site can add or remove additional events."},{"content":"If <ph id=\"ph1\">`component`</ph> is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[251,309],"source":"       If `component` is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[316,432]}]},{"pos":[89800,89834],"content":"A component to get the events for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the events for.","pos":[0,34]}]},{"pos":[89908,90092],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[90184,90291],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the events for this component.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events for this component."},{"pos":[90468,90525],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[91008,91125],"content":"Returns the collection of events for a specified type of component using a specified array of attributes as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of events for a specified type of component using a specified array of attributes as a filter.","pos":[0,117]}]},{"pos":[91138,92224],"content":"Call this version of this method only when you do not have an instance of the object.       The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:      -   A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.      -   If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.      -   If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.      -   If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.       If the `componentType` parameter is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.","pos":[0,85]},{"content":"The <ph id=\"ph1\">`attributes`</ph> parameter array can have a mix of &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.","pos":[92,198],"source":"       The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects."},{"content":"Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; is treated as a wildcard; it matches any event that has the &lt;xref:System.Type&gt; in its set of attributes.","pos":[199,378],"source":" Filtering is defined by the following rules:      -   A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes."},{"content":"-   If an event does not have an &lt;xref:System.Attribute&gt; of the same class, the event is not included in the returned array.","pos":[384,508],"source":"      -   If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array."},{"content":"-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the event must be an exact match or it is not included in the returned array.","pos":[514,665],"source":"      -   If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array."},{"content":"-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default event, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the event.","pos":[671,866],"source":"      -   If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event."},{"content":"If the <ph id=\"ph1\">`componentType`</ph> parameter is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[873,949],"source":"       If the `componentType` parameter is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[956,1072]}]},{"pos":[92450,92497],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[92569,92639],"content":"An array of type <xref:System.Attribute> that you can use as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Attribute&gt; that you can use as a filter.","pos":[0,70],"source":"An array of type <xref:System.Attribute> that you can use as a filter."}]},{"pos":[92731,92874],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the events that match the specified attributes for this component.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events that match the specified attributes for this component."},{"pos":[93498,93642],"content":"Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.","pos":[0,144]}]},{"pos":[93655,94798],"content":"The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.       The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:      -   A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.      -   If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.      -   If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.      -   If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.       If `component` is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"The events for the <ph id=\"ph1\">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id=\"ph2\">`component`</ph> parameter is sited.","pos":[0,160],"source":"The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited."},{"content":"The <ph id=\"ph1\">`attributes`</ph> parameter array can have a mix of &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.","pos":[167,273],"source":"       The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects."},{"content":"Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; is treated as a wildcard; it matches any event that has the &lt;xref:System.Type&gt; in its set of attributes.","pos":[274,453],"source":" Filtering is defined by the following rules:      -   A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes."},{"content":"-   If an event does not have an &lt;xref:System.Attribute&gt; of the same class, the event is not included in the returned array.","pos":[459,583],"source":"      -   If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array."},{"content":"-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the event must be an exact match or it is not included in the returned array.","pos":[589,740],"source":"      -   If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array."},{"content":"-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default event, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the event.","pos":[746,941],"source":"      -   If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event."},{"content":"If <ph id=\"ph1\">`component`</ph> is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[948,1006],"source":"       If `component` is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[1013,1129]}]},{"pos":[95043,95077],"content":"A component to get the events for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the events for.","pos":[0,34]}]},{"pos":[95149,95209],"content":"An array of type <xref:System.Attribute> to use as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Attribute&gt; to use as a filter.","pos":[0,60],"source":"An array of type <xref:System.Attribute> to use as a filter."}]},{"pos":[95283,95467],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[95559,95702],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.EventDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the events that match the specified attributes for this component.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events that match the specified attributes for this component."},{"pos":[95879,95936],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[96410,96460],"content":"Returns the fully qualified name of the component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the fully qualified name of the component.","pos":[0,50]}]},{"pos":[96472,96759],"content":"In many cases, the GetFullComponentName method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method. However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"In many cases, the GetFullComponentName method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method. However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.","pos":[0,287],"nodes":[{"content":"In many cases, the GetFullComponentName method will return the same value as the &lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt; method.","pos":[0,152],"source":"In many cases, the GetFullComponentName method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method."},{"content":"However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.","pos":[153,287]}]}]},{"pos":[96926,97004],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Component\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to find the name for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Component\"></xref> to find the name for."},{"pos":[97062,97208],"content":"The fully qualified name of the specified component, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the component has no name.","needQuote":true,"needEscape":true,"source":"The fully qualified name of the specified component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the component has no name."},{"pos":[97396,97483],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[97922,97985],"content":"Returns the collection of properties for a specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of properties for a specified component.","pos":[0,63]}]},{"pos":[97998,98350],"content":"The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.       If the `component` parameter is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.","pos":[0,146]},{"content":"If the <ph id=\"ph1\">`component`</ph> parameter is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[153,225],"source":"       If the `component` parameter is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[232,348]}]},{"pos":[99064,99102],"content":"A component to get the properties for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the properties for.","pos":[0,38]}]},{"pos":[99197,99319],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the properties for the specified component.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties for the specified component."},{"pos":[99500,99557],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[99986,100057],"content":"Returns the collection of properties for a specified type of component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of properties for a specified type of component.","pos":[0,71]}]},{"pos":[100070,100365],"content":"Call this version of this method only when you do not have an instance of the object.       If the `componentType` parameter is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.","pos":[0,85]},{"content":"If the <ph id=\"ph1\">`componentType`</ph> parameter is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[92,168],"source":"       If the `componentType` parameter is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[175,291]}]},{"pos":[100574,100647],"content":"A <xref:System.Type> that represents the component to get properties for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the component to get properties for.","pos":[0,73],"source":"A <xref:System.Type> that represents the component to get properties for."}]},{"pos":[100742,100870],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the properties for a specified type of component.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties for a specified type of component."},{"pos":[101464,101577],"content":"Returns the collection of properties for a specified component using a specified array of attributes as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of properties for a specified component using a specified array of attributes as a filter.","pos":[0,113]}]},{"pos":[101590,102726],"content":"The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.       The `attributes` parameter array is used to filter the array. Filtering is defined by the following rules:      -   If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.      -   If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.      -   If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.      -   If `attributes` has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.       If `component` is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"The properties for the <ph id=\"ph1\">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id=\"ph2\">`component`</ph> parameter is sited.","pos":[0,172],"source":"The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited."},{"content":"The <ph id=\"ph1\">`attributes`</ph> parameter array is used to filter the array.","pos":[179,240],"source":"       The `attributes` parameter array is used to filter the array."},{"content":"Filtering is defined by the following rules:      -   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property is not included in the returned array.","pos":[241,420],"source":" Filtering is defined by the following rules:      -   If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array."},{"content":"-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the property must be an exact match or it is not included in the returned array.","pos":[426,580],"source":"      -   If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array."},{"content":"-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default property, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.","pos":[586,787],"source":"      -   If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property."},{"content":"-   If <ph id=\"ph1\">`attributes`</ph> has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.","pos":[793,934],"source":"      -   If `attributes` has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied."},{"content":"If <ph id=\"ph1\">`component`</ph> is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[941,999],"source":"       If `component` is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[1006,1122]}]},{"pos":[103505,103543],"content":"A component to get the properties for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the properties for.","pos":[0,38]}]},{"pos":[103615,103675],"content":"An array of type <xref:System.Attribute> to use as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Attribute&gt; to use as a filter.","pos":[0,60],"source":"An array of type <xref:System.Attribute> to use as a filter."}]},{"pos":[103770,103928],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the properties that match the specified attributes for the specified component.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes for the specified component."},{"pos":[104109,104166],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[104659,104756],"content":"Returns the collection of properties for a specified component using the default type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of properties for a specified component using the default type descriptor.","pos":[0,97]}]},{"pos":[104769,105133],"content":"The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.       If `component` is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"The properties for the <ph id=\"ph1\">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id=\"ph2\">`component`</ph> parameter is sited.","pos":[0,172],"source":"The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited."},{"content":"If <ph id=\"ph1\">`component`</ph> is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[179,237],"source":"       If `component` is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[244,360]}]},{"pos":[105361,105399],"content":"A component to get the properties for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the properties for.","pos":[0,38]}]},{"pos":[105473,105661],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to not consider custom type description information; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to not consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[105756,105876],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the properties for a specified component.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties for a specified component."},{"pos":[106057,106114],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[106617,106738],"content":"Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.","pos":[0,121]}]},{"pos":[106751,107818],"content":"Call this version of this method only when you do not have an instance of the object.       The `attributes` parameter array is used to filter the array. Filtering is defined by the following rules:      -   If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.      -   If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.      -   If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.      -   If `attributes` has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.       If the `componentType` parameter is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.","pos":[0,85]},{"content":"The <ph id=\"ph1\">`attributes`</ph> parameter array is used to filter the array.","pos":[92,153],"source":"       The `attributes` parameter array is used to filter the array."},{"content":"Filtering is defined by the following rules:      -   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property is not included in the returned array.","pos":[154,333],"source":" Filtering is defined by the following rules:      -   If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array."},{"content":"-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the property must be an exact match or it is not included in the returned array.","pos":[339,493],"source":"      -   If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array."},{"content":"-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default property, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.","pos":[499,700],"source":"      -   If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property."},{"content":"-   If <ph id=\"ph1\">`attributes`</ph> has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.","pos":[706,847],"source":"      -   If `attributes` has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied."},{"content":"If the <ph id=\"ph1\">`componentType`</ph> parameter is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[854,930],"source":"       If the `componentType` parameter is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[937,1053]}]},{"pos":[108601,108648],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[108720,108780],"content":"An array of type <xref:System.Attribute> to use as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Attribute&gt; to use as a filter.","pos":[0,60],"source":"An array of type <xref:System.Attribute> to use as a filter."}]},{"pos":[108875,109032],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the properties that match the specified attributes for this type of component.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes for this type of component."},{"pos":[109680,109828],"content":"Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.","pos":[0,148]}]},{"pos":[109841,110969],"content":"The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.       The `attributes` parameter array is used to filter the array. Filtering is defined by the following rules:      -   If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.      -   If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.      -   If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.      -   If `attributes` has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.       If the `component` parameter is `null`, an empty collection is returned.       The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","needQuote":false,"needEscape":true,"nodes":[{"content":"The properties for a <ph id=\"ph1\">`component`</ph> can differ from the properties of a class, because the site can add or remove properties if the <ph id=\"ph2\">`component`</ph> is sited.","pos":[0,150],"source":"The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited."},{"content":"The <ph id=\"ph1\">`attributes`</ph> parameter array is used to filter the array.","pos":[157,218],"source":"       The `attributes` parameter array is used to filter the array."},{"content":"Filtering is defined by the following rules:      -   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property is not included in the returned array.","pos":[219,398],"source":" Filtering is defined by the following rules:      -   If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array."},{"content":"-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the property must be an exact match or it is not included in the returned array.","pos":[404,558],"source":"      -   If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array."},{"content":"-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default property, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.","pos":[564,765],"source":"      -   If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property."},{"content":"-   If <ph id=\"ph1\">`attributes`</ph> has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.","pos":[771,912],"source":"      -   If `attributes` has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied."},{"content":"If the <ph id=\"ph1\">`component`</ph> parameter is <ph id=\"ph2\">`null`</ph>, an empty collection is returned.","pos":[919,991],"source":"       If the `component` parameter is `null`, an empty collection is returned."},{"content":"The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.","pos":[998,1114]}]},{"pos":[111221,111259],"content":"A component to get the properties for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the properties for.","pos":[0,38]}]},{"pos":[111331,111391],"content":"An array of type <xref:System.Attribute> to use as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Attribute&gt; to use as a filter.","pos":[0,60],"source":"An array of type <xref:System.Attribute> to use as a filter."}]},{"pos":[111465,111649],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[111744,111898],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the events that match the specified attributes for the specified component.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the events that match the specified attributes for the specified component."},{"pos":[112079,112136],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.","needQuote":true,"needEscape":true,"source":"<code>component</code> is a cross-process remoted object."},{"pos":[112565,112631],"content":"Returns the type description provider for the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the type description provider for the specified component.","pos":[0,66]}]},{"pos":[112643,112904],"content":"The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider. Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider. Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.","pos":[0,261],"nodes":[{"content":"The &lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt; method will always return a type description provider.","pos":[0,117],"source":"The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider."},{"content":"Even the default &lt;xref:System.ComponentModel.TypeDescriptor&gt; implementation is built on a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;.","pos":[118,261],"source":" Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>."}]}]},{"pos":[113099,113135],"content":"An instance of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the target component.","pos":[0,36]}]},{"pos":[113225,113334],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the specified component.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> associated with the specified component."},{"pos":[113513,113599],"content":"<ph id=\"ph1\">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>instance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[114018,114079],"content":"Returns the type description provider for the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the type description provider for the specified type.","pos":[0,61]}]},{"pos":[114091,114352],"content":"The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider. Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider. Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.","pos":[0,261],"nodes":[{"content":"The &lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt; method will always return a type description provider.","pos":[0,117],"source":"The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider."},{"content":"Even the default &lt;xref:System.ComponentModel.TypeDescriptor&gt; implementation is built on a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;.","pos":[118,261],"source":" Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>."}]}]},{"pos":[114535,114582],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[114672,114776],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the specified type.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> associated with the specified type."},{"pos":[114955,115037],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[115496,115581],"content":"Returns a <xref:System.Type> that can be used to perform reflection, given an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a &lt;xref:System.Type&gt; that can be used to perform reflection, given an object.","pos":[0,85],"source":"Returns a <xref:System.Type> that can be used to perform reflection, given an object."}]},{"pos":[115593,115966],"content":"The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.","pos":[0,373],"nodes":[{"content":"The &lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; method is a low-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.","pos":[0,187],"source":"The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method."},{"content":"&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.","pos":[188,373],"source":" <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it."}]}]},{"pos":[116126,116162],"content":"An instance of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the target component.","pos":[0,36]}]},{"pos":[116218,116264],"content":"A <xref:System.Type> for the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; for the specified object.","pos":[0,46],"source":"A <xref:System.Type> for the specified object."}]},{"pos":[116449,116535],"content":"<ph id=\"ph1\">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>instance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[116984,117072],"content":"Returns a <xref:System.Type> that can be used to perform reflection, given a class type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a &lt;xref:System.Type&gt; that can be used to perform reflection, given a class type.","pos":[0,88],"source":"Returns a <xref:System.Type> that can be used to perform reflection, given a class type."}]},{"pos":[117084,117455],"content":"The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.","pos":[0,371],"nodes":[{"content":"The &lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; method is a low-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.","pos":[0,187],"source":"The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method."},{"content":"&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.","pos":[188,371],"source":" <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it."}]}]},{"pos":[117603,117650],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[117706,117750],"content":"A <xref:System.Type> of the specified class.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; of the specified class.","pos":[0,44],"source":"A <xref:System.Type> of the specified class."}]},{"pos":[117935,118017],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[118404,118484],"content":"Gets a type that represents a type description provider for all interface types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a type that represents a type description provider for all interface types.","pos":[0,80]}]},{"pos":[118496,118706],"content":"The InterfaceType property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The InterfaceType property gets a &lt;xref:System.Type&gt; object that you can pass to the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; methods to define a type description provider for interface types.","pos":[0,210],"source":"The InterfaceType property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types."}]},{"pos":[118827,118923],"content":"A <xref:System.Type> that represents a custom type description provider for all interface types.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents a custom type description provider for all interface types.","pos":[0,96],"source":"A <xref:System.Type> that represents a custom type description provider for all interface types."}]},{"pos":[119413,119489],"content":"Clears the properties and events for the specified component from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the properties and events for the specified component from the cache.","pos":[0,76]}]},{"pos":[119502,120277],"content":"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they should call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change. This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.","needQuote":false,"needEscape":true,"nodes":[{"content":"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they should call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change. This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.","pos":[0,773],"nodes":[{"content":"Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.","pos":[0,90],"source":"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed."},{"content":"Typically, they are constant for the lifetime of an object.","pos":[91,150]},{"content":"However, extender providers and designers can change the set of properties on an object.","pos":[151,239]},{"content":"If they do, they should call this method to clear the property and event descriptors of the object.","pos":[240,339]},{"content":"This method is used only at design time.","pos":[340,380]},{"content":"It is not used during run time.","pos":[381,412]},{"content":"This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event when the properties or events of a component change.","pos":[419,557],"source":"       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change."},{"content":"This event is only raised if there was a prior call to the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; or &lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt; method that cached the information.","pos":[558,773],"source":" This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information."}]}]},{"pos":[120546,120606],"content":"A component for which the properties or events have changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component for which the properties or events have changed.","pos":[0,60]}]},{"pos":[121122,121197],"content":"Clears the properties and events for the specified assembly from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the properties and events for the specified assembly from the cache.","pos":[0,75]}]},{"pos":[121210,122073],"content":"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they can call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.       Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they can call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.       Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.","pos":[0,859],"nodes":[{"content":"Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.","pos":[0,90],"source":"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed."},{"content":"Typically, they are constant for the lifetime of an object.","pos":[91,150]},{"content":"However, extender providers and designers can change the set of properties on an object.","pos":[151,239]},{"content":"If they do, they can call this method to clear the property and event descriptors of the object.","pos":[240,336]},{"content":"This method is used only at design time.","pos":[337,377]},{"content":"It is not used during run time.","pos":[378,409]},{"content":"Before you make a call to the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt; method to clear the cache, you need to call the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; method for the specific assembly to cache the information first.","pos":[416,674],"source":"       Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first."},{"content":"This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to notify all classes that want to be notified when the property set of a component changes.","pos":[681,859],"source":"       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes."}]}]},{"pos":[122257,122395],"content":"The <xref:System.Reflection.Assembly> that represents the assembly to refresh. Each <xref:System.Type> in this assembly will be refreshed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Reflection.Assembly> that represents the assembly to refresh. Each <xref:System.Type> in this assembly will be refreshed.","pos":[0,138],"nodes":[{"content":"The &lt;xref:System.Reflection.Assembly&gt; that represents the assembly to refresh.","pos":[0,78],"source":"The <xref:System.Reflection.Assembly> that represents the assembly to refresh."},{"content":"Each &lt;xref:System.Type&gt; in this assembly will be refreshed.","pos":[79,138],"source":" Each <xref:System.Type> in this assembly will be refreshed."}]}]},{"pos":[122901,122974],"content":"Clears the properties and events for the specified module from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the properties and events for the specified module from the cache.","pos":[0,73]}]},{"pos":[122987,123848],"content":"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they can call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.       Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they can call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.       Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.","pos":[0,857],"nodes":[{"content":"Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.","pos":[0,90],"source":"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed."},{"content":"Typically, they are constant for the lifetime of an object.","pos":[91,150]},{"content":"However, extender providers and designers can change the set of properties on an object.","pos":[151,239]},{"content":"If they do, they can call this method to clear the property and event descriptors of the object.","pos":[240,336]},{"content":"This method is used only at design time.","pos":[337,377]},{"content":"It is not used during run time.","pos":[378,409]},{"content":"Before you make a call to the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt; method to clear the cache, you need to call the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; method for the specific module to cache the information first.","pos":[416,672],"source":"       Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first."},{"content":"This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to notify all classes that want to be notified when the property set of a component changes.","pos":[679,857],"source":"       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes."}]}]},{"pos":[124024,124156],"content":"The <xref:System.Reflection.Module> that represents the module to refresh. Each <xref:System.Type> in this module will be refreshed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Reflection.Module> that represents the module to refresh. Each <xref:System.Type> in this module will be refreshed.","pos":[0,132],"nodes":[{"content":"The &lt;xref:System.Reflection.Module&gt; that represents the module to refresh.","pos":[0,74],"source":"The <xref:System.Reflection.Module> that represents the module to refresh."},{"content":"Each &lt;xref:System.Type&gt; in this module will be refreshed.","pos":[75,132],"source":" Each <xref:System.Type> in this module will be refreshed."}]}]},{"pos":[124630,124714],"content":"Clears the properties and events for the specified type of component from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the properties and events for the specified type of component from the cache.","pos":[0,84]}]},{"pos":[124727,125593],"content":"Call this version of this method only when you do not have an instance of the object.       Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they can call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change. This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.       Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they can call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change. This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.","pos":[0,862],"nodes":[{"content":"Call this version of this method only when you do not have an instance of the object.","pos":[0,85]},{"content":"Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.","pos":[92,182],"source":"       Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed."},{"content":"Typically, they are constant for the lifetime of an object.","pos":[183,242]},{"content":"However, extender providers and designers can change the set of properties on an object.","pos":[243,331]},{"content":"If they do, they can call this method to clear the property and event descriptors of the object.","pos":[332,428]},{"content":"This method is used only at design time.","pos":[429,469]},{"content":"It is not used during run time.","pos":[470,501]},{"content":"This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event when the properties or events of a component change.","pos":[508,646],"source":"       This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change."},{"content":"This event is only raised if there was a prior call to the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; or &lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt; method that cached the information.","pos":[647,862],"source":" This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information."}]}]},{"pos":[125732,125779],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[126218,126267],"content":"Occurs when the cache for a component is cleared.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the cache for a component is cleared.","pos":[0,49]}]},{"pos":[126280,126422],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","needQuote":false,"needEscape":true,"source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[126720,126732],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[127257,127300],"content":"Removes an association between two objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes an association between two objects.","pos":[0,43]}]},{"pos":[127313,127697],"content":"The RemoveAssociation method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The RemoveAssociation method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.","pos":[0,382],"nodes":[{"content":"The RemoveAssociation method removes an association between two objects formed by the &lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt; method.","pos":[0,158],"source":"The RemoveAssociation method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method."},{"content":"A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.","pos":[165,382],"source":"       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection."}]}]},{"pos":[127874,127907],"content":"The primary <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primary &lt;xref:System.Object&gt;.","pos":[0,33],"source":"The primary <xref:System.Object>."}]},{"pos":[127973,128008],"content":"The secondary <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secondary &lt;xref:System.Object&gt;.","pos":[0,35],"source":"The secondary <xref:System.Object>."}]},{"pos":[128193,128288],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[128752,128798],"content":"Removes all associations for a primary object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all associations for a primary object.","pos":[0,46]}]},{"pos":[128811,129274],"content":"The RemoveAssociations method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The RemoveAssociations method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.","pos":[0,461],"nodes":[{"content":"The RemoveAssociations method removes all associations between a primary object and all of its secondary objects, created by calls to the &lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt; method.","pos":[0,210],"source":"The RemoveAssociations method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method."},{"content":"A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.","pos":[217,461],"source":"       A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection."}]}]},{"pos":[129434,129485],"content":"The primary <xref:System.Object> in an association.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primary &lt;xref:System.Object&gt; in an association.","pos":[0,51],"source":"The primary <xref:System.Object> in an association."}]},{"pos":[129671,129756],"content":"<ph id=\"ph1\">&lt;code&gt;primary&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>primary</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[130364,130462],"content":"Removes a previously added type description provider that is associated with the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a previously added type description provider that is associated with the specified object.","pos":[0,98]}]},{"pos":[130475,131017],"content":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.","pos":[0,540],"nodes":[{"content":"This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method.","pos":[0,204],"source":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method."},{"content":"Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated object.","pos":[205,333],"source":" Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object."},{"content":"Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you need to call from partially trusted code.","pos":[340,540],"source":"       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code."}]}]},{"pos":[131263,131344],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to remove."},{"pos":[131409,131445],"content":"An instance of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the target component.","pos":[0,36]}]},{"pos":[131627,131722],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[132320,132416],"content":"Removes a previously added type description provider that is associated with the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a previously added type description provider that is associated with the specified type.","pos":[0,96]}]},{"pos":[132429,132965],"content":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.","pos":[0,534],"nodes":[{"content":"This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method.","pos":[0,202],"source":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method."},{"content":"Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated type.","pos":[203,329],"source":" Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type."},{"content":"Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you need to call from partially trusted code.","pos":[336,534],"source":"       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code."}]}]},{"pos":[133205,133286],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to remove."},{"pos":[133345,133392],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[133574,133669],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[134332,134430],"content":"Removes a previously added type description provider that is associated with the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a previously added type description provider that is associated with the specified object.","pos":[0,98]}]},{"pos":[134443,135225],"content":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.       This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.       This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.","pos":[0,778],"nodes":[{"content":"This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method.","pos":[0,204],"source":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method."},{"content":"Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated object.","pos":[205,333],"source":" Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object."},{"content":"This method can be called from partially trusted code.","pos":[340,394]},{"content":"If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can register a provider for the specified instance if its type is also partially trusted.","pos":[395,575],"source":" If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified instance if its type is also partially trusted."},{"content":"Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you do not need to call from partially trusted code.","pos":[582,778],"source":"       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code."}]}]},{"pos":[135482,135563],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to remove."},{"pos":[135628,135664],"content":"An instance of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the target component.","pos":[0,36]}]},{"pos":[135857,135952],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[136605,136701],"content":"Removes a previously added type description provider that is associated with the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a previously added type description provider that is associated with the specified type.","pos":[0,96]}]},{"pos":[136714,137482],"content":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.       This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.       This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.","pos":[0,764],"nodes":[{"content":"This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method.","pos":[0,202],"source":"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method."},{"content":"Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated type.","pos":[203,329],"source":" Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type."},{"content":"This method can be called from partially trusted code.","pos":[336,390]},{"content":"If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can unregister a provider for the specified type if it is also partially trusted.","pos":[391,563],"source":" If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can unregister a provider for the specified type if it is also partially trusted."},{"content":"Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you do not need to call from partially trusted code.","pos":[570,764],"source":"       Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code."}]}]},{"pos":[137733,137814],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to remove."},{"pos":[137873,137920],"content":"The <xref:System.Type> of the target component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the target component.","pos":[0,47],"source":"The <xref:System.Type> of the target component."}]},{"pos":[138113,138208],"content":"One or both of the parameters are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[138696,138747],"content":"Sorts descriptors using the name of the descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sorts descriptors using the name of the descriptor.","pos":[0,51]}]},{"pos":[138932,139005],"content":"An <xref:System.Collections.IList> that contains the descriptors to sort.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IList&gt; that contains the descriptors to sort.","pos":[0,73],"source":"An <xref:System.Collections.IList> that contains the descriptors to sort."}]},{"pos":[139192,139275],"content":"<ph id=\"ph1\">&lt;code&gt;infos&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>infos</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.TypeDescriptor\n  id: TypeDescriptor\n  children:\n  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  - System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler\n  - System.ComponentModel.TypeDescriptor.ComObjectType\n  - System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n  - System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)\n  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetClassName(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetConverter(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  - System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)\n  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetProvider(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)\n  - System.ComponentModel.TypeDescriptor.InterfaceType\n  - System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)\n  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)\n  - System.ComponentModel.TypeDescriptor.Refresh(System.Type)\n  - System.ComponentModel.TypeDescriptor.Refreshed\n  - System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)\n  - System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)\n  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  - System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)\n  langs:\n  - csharp\n  name: TypeDescriptor\n  nameWithType: TypeDescriptor\n  fullName: System.ComponentModel.TypeDescriptor\n  type: Class\n  summary: Provides information about the characteristics for a component, such as its attributes, properties, and events. This class cannot be inherited.\n  remarks: \"The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=fullName> namespace, and the TypeDescriptor class. Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class. The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type. For more information, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md).  \\n  \\n In contrast, TypeDescriptor is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface. Unlike reflection, it does not inspect for methods. TypeDescriptor can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>. The following table shows these services.  \\n  \\n|Service name|Description|  \\n|------------------|-----------------|  \\n|<xref:System.ComponentModel.IExtenderProvider>|Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.|  \\n|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|Enables another object to modify the standard metadata that is exposed by a component.|  \\n|<xref:System.ComponentModel.ICustomTypeDescriptor>|Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of TypeDescriptor.|  \\n  \\n The extensibility provided by TypeDescriptor allows the design-time representation of a component to differ from its actual run-time representation, which makes TypeDescriptor useful for building design-time infrastructure.  \\n  \\n All the methods in TypeDescriptor are `static`. You cannot create an instance of this class, and this class cannot be inherited.  \\n  \\n You can set property and event values two different ways: specify them in the component class or change them at design time. Because you can set these values two ways, the overloaded methods of TypeDescriptor take two different types of parameters: a class type or an object instance.  \\n  \\n When you want to access TypeDescriptor information and you have an instance of the object, use the method that calls for a component. Use the method that calls for the class type only when you do not have an instance of the object.  \\n  \\n Properties and events are cached by TypeDescriptor for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.\"\n  syntax:\n    content: public sealed class TypeDescriptor\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n  id: AddAttributes(System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: AddAttributes(Object,Attribute[])\n  nameWithType: TypeDescriptor.AddAttributes(Object,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Object,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Adds class-level attributes to the target component instance.\n  remarks: The AddAttributes method adds class-level attributes to the specified instance of a component. Because this is a common requirement of applications using the [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class. The return value is the type description provider that was used to add the attributes. This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.\n  syntax:\n    content: public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, Attribute[] attributes);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: An instance of the target component.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of <xref:System.Attribute> objects to add to the component's class.\n    return:\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The newly created <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> that was used to add the specified attributes.\n  overload: System.ComponentModel.TypeDescriptor.AddAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])\n  id: AddAttributes(System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: AddAttributes(Type,Attribute[])\n  nameWithType: TypeDescriptor.AddAttributes(Type,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Type,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Adds class-level attributes to the target component type.\n  remarks: The AddAttributes method adds class-level attributes to the specified type of a component. Because this is a common requirement of applications using the [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class. The return value is the type description provider that was used to add the attributes. This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.\n  syntax:\n    content: public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, Attribute[] attributes);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of <xref:System.Attribute> objects to add to the component's class.\n    return:\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The newly created <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> that was used to add the specified attributes.\n  overload: System.ComponentModel.TypeDescriptor.AddAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n  id: AddEditorTable(System.Type,System.Collections.Hashtable)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: AddEditorTable(Type,Hashtable)\n  nameWithType: TypeDescriptor.AddEditorTable(Type,Hashtable)\n  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(Type,Hashtable)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Adds an editor table for the given editor base type.\n  remarks: \"The AddEditorTable method adds an editor table for the given editor base type. Typically, editors are specified as metadata on a component. However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found. Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor. The type descriptor may freely make modifications to this table.  \\n  \\n The format for an editor table uses data types as keys and editors as values. The value portion of an entry in the table represents an editor instance. It can have one of three values. If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object. If it contains a type, an instance of this type will be created to obtain an editor. Finally, the value portion may contain an actual editor instance. If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.\"\n  syntax:\n    content: public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);\n    parameters:\n    - id: editorBaseType\n      type: System.Type\n      description: The editor base type to add the editor table for. If a table already exists for this type, this method will do nothing.\n    - id: table\n      type: System.Collections.Hashtable\n      description: The <xref href=\"System.Collections.Hashtable\"></xref> to add.\n  overload: System.ComponentModel.TypeDescriptor.AddEditorTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: AddProvider(TypeDescriptionProvider,Object)\n  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)\n  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Adds a type description provider for a single instance of a component.\n  remarks: \"The AddProvider method adds a type description provider that supplies type information for a single instance of a component. If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.  \\n  \\n This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.  \\n  \\n It is possible to add multiple type description providers for the same type or object. If this occurs, the first type description provider encountered that provides type information will be used exclusively. Since type information providers are stored in a stack, the last provider added will be the first one queried. This behavior enables the AddProvider and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.  \\n  \\n If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.  \\n  \\n> [!NOTE]\\n>  The two versions of this method produce results with different scopes. The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified. In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.  \\n  \\n Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.\"\n  syntax:\n    content: public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to add.\n    - id: instance\n      type: System.Object\n      description: An instance of the target component.\n  overload: System.ComponentModel.TypeDescriptor.AddProvider*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: AddProvider(TypeDescriptionProvider,Type)\n  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)\n  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Adds a type description provider for a component class.\n  remarks: \"The AddProvider method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.  \\n  \\n> [!NOTE]\\n>  The `type` parameter can be any type, including an interface. For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`. Passing `typeof(object)` will call the provider to supply type information for all types.  \\n  \\n This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.  \\n  \\n It is possible to add multiple type description providers for the same type or object. If this occurs, the first type description provider encountered that provides type information will be used exclusively. Because type information providers are stored in a stack, the last provider added will be the first one queried. This behavior enables the AddProvider and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.  \\n  \\n If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.  \\n  \\n> [!NOTE]\\n>  The two versions of this method produce results with different scopes. The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified. In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.  \\n  \\n Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.\"\n  syntax:\n    content: public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to add.\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n  overload: System.ComponentModel.TypeDescriptor.AddProvider*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: AddProviderTransparent(TypeDescriptionProvider,Object)\n  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)\n  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Adds a type description provider for a single instance of a component.\n  remarks: \"This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.  \\n  \\n Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.\"\n  syntax:\n    content: public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to add.\n    - id: instance\n      type: System.Object\n      description: An instance of the target component.\n  overload: System.ComponentModel.TypeDescriptor.AddProviderTransparent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: AddProviderTransparent(TypeDescriptionProvider,Type)\n  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)\n  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Adds a type description provider for a component class.\n  remarks: \"This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified type if it is also partially trusted.  \\n  \\n Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.\"\n  syntax:\n    content: public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to add.\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n  overload: System.ComponentModel.TypeDescriptor.AddProviderTransparent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler\n  id: ComNativeDescriptorHandler\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: ComNativeDescriptorHandler\n  nameWithType: TypeDescriptor.ComNativeDescriptorHandler\n  fullName: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets or sets the provider for the Component Object Model (COM) type information for the target component.\n  remarks: The ComNativeDescriptorHandler property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete. For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.\n  syntax:\n    content: public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }\n    return:\n      type: System.ComponentModel.IComNativeDescriptorHandler\n      description: An <xref href=\"System.ComponentModel.IComNativeDescriptorHandler\"></xref> instance representing the COM type information provider.\n  overload: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.ComObjectType\n  id: ComObjectType\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: ComObjectType\n  nameWithType: TypeDescriptor.ComObjectType\n  fullName: System.ComponentModel.TypeDescriptor.ComObjectType\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the type of the Component Object Model (COM) object represented by the target component.\n  remarks: \"The ComObjectType property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.  \\n  \\n The ComObjectType property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface. To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type ComObjectType.\"\n  syntax:\n    content: public static Type ComObjectType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> of the COM object represented by this component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-COM objects.\n  overload: System.ComponentModel.TypeDescriptor.ComObjectType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n  id: CreateAssociation(System.Object,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: CreateAssociation(Object,Object)\n  nameWithType: TypeDescriptor.CreateAssociation(Object,Object)\n  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(Object,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Creates a primary-secondary association between two objects.\n  remarks: \"The CreateAssociation method creates an association between a primary and a secondary object. Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set. When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.  \\n  \\n A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.\"\n  syntax:\n    content: public static void CreateAssociation (object primary, object secondary);\n    parameters:\n    - id: primary\n      type: System.Object\n      description: The primary <xref:System.Object>.\n    - id: secondary\n      type: System.Object\n      description: The secondary <xref:System.Object>.\n  overload: System.ComponentModel.TypeDescriptor.CreateAssociation*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>primary</code> is equal to <code>secondary</code>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)\n  id: CreateDesigner(System.ComponentModel.IComponent,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: CreateDesigner(IComponent,Type)\n  nameWithType: TypeDescriptor.CreateDesigner(IComponent,Type)\n  fullName: System.ComponentModel.TypeDescriptor.CreateDesigner(IComponent,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Creates an instance of the designer associated with the specified component and of the specified type of designer.\n  remarks: If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer. If it cannot find a designer in the class hierarchy, it returns `null`.\n  syntax:\n    content: public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: An <xref href=\"System.ComponentModel.IComponent\"></xref> that specifies the component to associate with the designer.\n    - id: designerBaseType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type of designer to create.\n    return:\n      type: System.ComponentModel.Design.IDesigner\n      description: An <xref href=\"System.ComponentModel.Design.IDesigner\"></xref> that is an instance of the designer for the component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no designer can be found.\n  overload: System.ComponentModel.TypeDescriptor.CreateDesigner*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  id: CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: CreateEvent(Type,EventDescriptor,Attribute[])\n  nameWithType: TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <xref href=\"System.ComponentModel.EventDescriptor\"></xref>.\n  syntax:\n    content: public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, Attribute[] attributes);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The type of the component for which to create the new event.\n    - id: oldEventDescriptor\n      type: System.ComponentModel.EventDescriptor\n      description: The existing event information.\n    - id: attributes\n      type: System.Attribute[]\n      description: The new attributes.\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: A new <xref href=\"System.ComponentModel.EventDescriptor\"></xref> that has merged the specified metadata attributes with the existing metadata attributes.\n  overload: System.ComponentModel.TypeDescriptor.CreateEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])\n  id: CreateEvent(System.Type,System.String,System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: CreateEvent(Type,String,Type,Attribute[])\n  nameWithType: TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.\n  syntax:\n    content: public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, Attribute[] attributes);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The type of the component the event lives on.\n    - id: name\n      type: System.String\n      description: The name of the event.\n    - id: type\n      type: System.Type\n      description: The type of the delegate that handles the event.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes for this event.\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: An <xref href=\"System.ComponentModel.EventDescriptor\"></xref> that is bound to a type.\n  overload: System.ComponentModel.TypeDescriptor.CreateEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: CreateInstance(IServiceProvider,Type,Type[],Object[])\n  nameWithType: TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Creates an object that can substitute for another data type.\n  remarks: The CreateInstance method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type. This method first tries to obtain a type description provider from the `provider` parameter. If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>). If it finds a provider, this method will delegate the creation call to that object.\n  syntax:\n    content: public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: The service provider that provides a <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> service. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: objectType\n      type: System.Type\n      description: The <xref:System.Type> of object to create.\n    - id: argTypes\n      type: System.Type[]\n      description: An optional array of parameter types to be passed to the object's constructor. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an array of zero length.\n    - id: args\n      type: System.Object[]\n      description: An optional array of parameter values to pass to the object's constructor. If not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the number of elements must be the same as `argTypes`.\n    return:\n      type: System.Object\n      description: An instance of the substitute data type if an associated <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> is found; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.ComponentModel.TypeDescriptor.CreateInstance*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>objectType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, or <code>args</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> when <code>argTypes</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argTypes</code> and <code>args</code> have different number of elements.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  id: CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: CreateProperty(Type,PropertyDescriptor,Attribute[])\n  nameWithType: TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Creates a new property descriptor from an existing property descriptor, using the specified existing <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> and attribute array.\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, Attribute[] attributes);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The <xref:System.Type> of the component that the property is a member of.\n    - id: oldPropertyDescriptor\n      type: System.ComponentModel.PropertyDescriptor\n      description: The existing property descriptor.\n    - id: attributes\n      type: System.Attribute[]\n      description: The new attributes for this property.\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: A new <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that has the specified metadata attributes merged with the existing metadata attributes.\n  overload: System.ComponentModel.TypeDescriptor.CreateProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])\n  id: CreateProperty(System.Type,System.String,System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: CreateProperty(Type,String,Type,Attribute[])\n  nameWithType: TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, Attribute[] attributes);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The <xref:System.Type> of the component that the property is a member of.\n    - id: name\n      type: System.String\n      description: The name of the property.\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the property.\n    - id: attributes\n      type: System.Attribute[]\n      description: The new attributes for this property.\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.\n  overload: System.ComponentModel.TypeDescriptor.CreateProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n  id: GetAssociation(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetAssociation(Type,Object)\n  nameWithType: TypeDescriptor.GetAssociation(Type,Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(Type,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns an instance of the type associated with the specified primary object.\n  remarks: \"If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the GetAssociation method returns the correct secondary object to invoke for the requested type. Otherwise, GetAssociation searches for a compatible designer for `type` and returns the designer if one is found. This method never returns `null`.  \\n  \\n A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.\"\n  syntax:\n    content: public static object GetAssociation (Type type, object primary);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    - id: primary\n      type: System.Object\n      description: The primary object of the association.\n    return:\n      type: System.Object\n      description: An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <code>primary</code> if no specified association exists.\n  overload: System.ComponentModel.TypeDescriptor.GetAssociation*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  id: GetAttributes(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetAttributes(Object)\n  nameWithType: TypeDescriptor.GetAttributes(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of attributes for the specified component.\n  remarks: \"The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.  \\n  \\n When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property to make it unique. If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=fullName> to return the object identity of your attribute. If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=fullName> that would return equality in those cases. For example, some attributes have a constructor parameter that acts as a unique key. For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.  \\n  \\n> [!NOTE]\\n>  The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=fullName> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> property. In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.\"\n  example:\n  - For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.\n  syntax:\n    content: public static System.ComponentModel.AttributeCollection GetAttributes (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component for which you want to get attributes.\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: An <xref href=\"System.ComponentModel.AttributeCollection\"></xref> containing the attributes for the component. If <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns an empty collection.\n  overload: System.ComponentModel.TypeDescriptor.GetAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)\n  id: GetAttributes(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetAttributes(Type)\n  nameWithType: TypeDescriptor.GetAttributes(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns a collection of attributes for the specified type of component.\n  remarks: \"Call this version of this method only when you do not have an instance of the object.  \\n  \\n For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, the attribute collection removes duplicate instances. These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property returns equal values.  \\n  \\n When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property to make it unique. If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=fullName> to return the object identity of your attribute. If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=fullName> that would return equality in those cases. For example, some attributes have a constructor parameter that acts as a unique key. For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.  \\n  \\n> [!NOTE]\\n>  The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=fullName> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> property. In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.\"\n  syntax:\n    content: public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: An <xref href=\"System.ComponentModel.AttributeCollection\"></xref> with the attributes for the type of the component. If the component is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns an empty collection.\n  overload: System.ComponentModel.TypeDescriptor.GetAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)\n  id: GetAttributes(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetAttributes(Object,Boolean)\n  nameWithType: TypeDescriptor.GetAttributes(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.\n  remarks: \"The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.  \\n  \\n When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property to make it unique. If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=fullName> to return the object identity of your attribute. If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=fullName> that would return equality in those cases. For example, some attributes have a constructor parameter that acts as a unique key. For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.  \\n  \\n> [!NOTE]\\n>  The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=fullName> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> property. In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=fullName> property.\"\n  syntax:\n    content: public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component for which you want to get attributes.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a baseline set of attributes from the custom type descriptor if `component` is of type <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: An <xref href=\"System.ComponentModel.AttributeCollection\"></xref> with the attributes for the component. If the component is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns an empty collection.\n  overload: System.ComponentModel.TypeDescriptor.GetAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  id: GetClassName(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetClassName(Object)\n  nameWithType: TypeDescriptor.GetClassName(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the name of the class for the specified component using the default type descriptor.\n  remarks: \"Typically, this method returns the full <xref:System.Type> name for the `component` parameter type. For example, the class name for a button is \\\"System.Windows.Forms.Button\\\". If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.  \\n  \\n This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.\"\n  syntax:\n    content: public static string GetClassName (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The <xref:System.Object> for which you want the class name.\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the name of the class for the specified component.\n  overload: System.ComponentModel.TypeDescriptor.GetClassName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)\n  id: GetClassName(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetClassName(Type)\n  nameWithType: TypeDescriptor.GetClassName(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the name of the class for the specified type.\n  remarks: This method uses the cached custom type descriptor for the specified type to discover the associated class name.\n  syntax:\n    content: public static string GetClassName (Type componentType);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the name of the class for the specified component type.\n  overload: System.ComponentModel.TypeDescriptor.GetClassName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>componentType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)\n  id: GetClassName(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetClassName(Object,Boolean)\n  nameWithType: TypeDescriptor.GetClassName(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the name of the class for the specified component using a custom type descriptor.\n  remarks: Typically, this method returns the full <xref:System.Type> name for the `component` parameter type. For example, the class name for a button is \"System.Windows.Forms.Button\". If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.\n  syntax:\n    content: public static string GetClassName (object component, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The <xref:System.Object> for which you want the class name.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the name of the class for the specified component.\n  overload: System.ComponentModel.TypeDescriptor.GetClassName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  id: GetComponentName(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetComponentName(Object)\n  nameWithType: TypeDescriptor.GetComponentName(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the name of the specified component using the default type descriptor.\n  remarks: \"Typically, this method returns the name for the site of the component, if one exists. For example, the class name for a button is \\\"System.Windows.Forms.Button\\\".  \\n  \\n This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.  \\n  \\n This method is used at design time to retrieve the name of an instance of a component.\"\n  syntax:\n    content: public static string GetComponentName (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The <xref:System.Object> for which you want the class name.\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the name of the specified component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no component name.\n  overload: System.ComponentModel.TypeDescriptor.GetComponentName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)\n  id: GetComponentName(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetComponentName(Object,Boolean)\n  nameWithType: TypeDescriptor.GetComponentName(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the name of the specified component using a custom type descriptor.\n  remarks: This method is used at design time to retrieve the name of an instance of a component. Typically, this method returns the name for the site of the component, if one exists. For example, the class name for a button is \"System.Windows.Forms.Button\". If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.\n  syntax:\n    content: public static string GetComponentName (object component, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The <xref:System.Object> for which you want the class name.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.String\n      description: The name of the class for the specified component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no component name.\n  overload: System.ComponentModel.TypeDescriptor.GetComponentName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  id: GetConverter(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetConverter(Object)\n  nameWithType: TypeDescriptor.GetConverter(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns a type converter for the type of the specified component.\n  remarks: \"This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>. If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.  \\n  \\n This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.\"\n  example:\n  - For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.\n  syntax:\n    content: public static System.ComponentModel.TypeConverter GetConverter (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component to get the converter for.\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified component.\n  overload: System.ComponentModel.TypeDescriptor.GetConverter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)\n  id: GetConverter(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetConverter(Type)\n  nameWithType: TypeDescriptor.GetConverter(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns a type converter for the specified type.\n  remarks: \"Call this version of this method only when you do not have an instance of the object.  \\n  \\n This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>. If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.\"\n  syntax:\n    content: public static System.ComponentModel.TypeConverter GetConverter (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type.\n  overload: System.ComponentModel.TypeDescriptor.GetConverter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)\n  id: GetConverter(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetConverter(Object,Boolean)\n  nameWithType: TypeDescriptor.GetConverter(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns a type converter for the type of the specified component with a custom type descriptor.\n  remarks: This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>. If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.\n  syntax:\n    content: public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component to get the converter for.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified component.\n  overload: System.ComponentModel.TypeDescriptor.GetConverter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  id: GetDefaultEvent(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetDefaultEvent(Object)\n  nameWithType: TypeDescriptor.GetDefaultEvent(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the default event for the specified component.\n  remarks: This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.\n  syntax:\n    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the event for.\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: An <xref href=\"System.ComponentModel.EventDescriptor\"></xref> with the default event, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no events.\n  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)\n  id: GetDefaultEvent(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetDefaultEvent(Type)\n  nameWithType: TypeDescriptor.GetDefaultEvent(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the default event for the specified type of component.\n  remarks: Call this version of this method only when you do not have an instance of the object.\n  syntax:\n    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: An <xref href=\"System.ComponentModel.EventDescriptor\"></xref> with the default event, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no events.\n  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)\n  id: GetDefaultEvent(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetDefaultEvent(Object,Boolean)\n  nameWithType: TypeDescriptor.GetDefaultEvent(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the default event for a component with a custom type descriptor.\n  syntax:\n    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the event for.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: An <xref href=\"System.ComponentModel.EventDescriptor\"></xref> with the default event, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no events.\n  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  id: GetDefaultProperty(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetDefaultProperty(Object)\n  nameWithType: TypeDescriptor.GetDefaultProperty(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the default property for the specified component.\n  remarks: If the `component` parameter is `null`, this method returns `null`.\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the default property for.\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> with the default property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no properties.\n  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)\n  id: GetDefaultProperty(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetDefaultProperty(Type)\n  nameWithType: TypeDescriptor.GetDefaultProperty(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the default property for the specified type of component.\n  remarks: \"Call this version of this method only when you do not have an instance of the object.  \\n  \\n If the `componentType` parameter is `null`, this method returns `null`.\"\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: A <xref:System.Type> that represents the class to get the property for.\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> with the default property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no properties.\n  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)\n  id: GetDefaultProperty(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetDefaultProperty(Object,Boolean)\n  nameWithType: TypeDescriptor.GetDefaultProperty(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the default property for the specified component with a custom type descriptor.\n  remarks: If the `component` parameter is `null`, this method returns `null`.\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the default property for.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> with the default property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no properties.\n  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  id: GetEditor(System.Object,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetEditor(Object,Type)\n  nameWithType: TypeDescriptor.GetEditor(Object,Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets an editor with the specified base type for the specified component.\n  remarks: \"The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).  \\n  \\n You can define multiple editors for a property. You use this method to select the editor you want to use.\"\n  syntax:\n    content: public static object GetEditor (object component, Type editorBaseType);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the editor for.\n    - id: editorBaseType\n      type: System.Type\n      description: A <xref:System.Type> that represents the base type of the editor you want to find.\n    return:\n      type: System.Object\n      description: An instance of the editor that can be cast to the specified editor type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no editor of the requested type can be found.\n  overload: System.ComponentModel.TypeDescriptor.GetEditor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> or <code>editorBaseType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)\n  id: GetEditor(System.Type,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetEditor(Type,Type)\n  nameWithType: TypeDescriptor.GetEditor(Type,Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Type,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns an editor with the specified base type for the specified type.\n  remarks: \"The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).  \\n  \\n You can define multiple editors for a type. You use this method to select the one you want to use.  \\n  \\n Call this version of this method only when you do not have an instance of the object.\"\n  syntax:\n    content: public static object GetEditor (Type type, Type editorBaseType);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    - id: editorBaseType\n      type: System.Type\n      description: A <xref:System.Type> that represents the base type of the editor you are trying to find.\n    return:\n      type: System.Object\n      description: An instance of the editor object that can be cast to the given base type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no editor of the requested type can be found.\n  overload: System.ComponentModel.TypeDescriptor.GetEditor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> or <code>editorBaseType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)\n  id: GetEditor(System.Object,System.Type,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetEditor(Object,Type,Boolean)\n  nameWithType: TypeDescriptor.GetEditor(Object,Type,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns an editor with the specified base type and with a custom type descriptor for the specified component.\n  remarks: \"The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).  \\n  \\n You can define multiple editors for a property. You use this method to select the editor you want to use.\"\n  syntax:\n    content: public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to get the editor for.\n    - id: editorBaseType\n      type: System.Type\n      description: A <xref:System.Type> that represents the base type of the editor you want to find.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: A flag indicating whether custom type description information should be considered.\n    return:\n      type: System.Object\n      description: An instance of the editor that can be cast to the specified editor type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no editor of the requested type can be found.\n  overload: System.ComponentModel.TypeDescriptor.GetEditor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> or <code>editorBaseType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  id: GetEvents(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetEvents(Object)\n  nameWithType: TypeDescriptor.GetEvents(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of events for the specified component.\n  remarks: \"Retrieves a collection of events that the given `component` parameter instance provides. This collection can differ from the set of events the class provides. If the `component` parameter is sited, the site can add or remove additional events.  \\n  \\n If `component` is `null`, then an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  example:\n  - For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.\n  syntax:\n    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component to get the events for.\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events for this component.\n  overload: System.ComponentModel.TypeDescriptor.GetEvents*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)\n  id: GetEvents(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetEvents(Type)\n  nameWithType: TypeDescriptor.GetEvents(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of events for a specified type of component.\n  remarks: \"Call this version of this method only when you do not have an instance of the object.  \\n  \\n If the `componentType` parameter is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  syntax:\n    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events for this component.\n  overload: System.ComponentModel.TypeDescriptor.GetEvents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])\n  id: GetEvents(System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetEvents(Object,Attribute[])\n  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of events for a specified component using a specified array of attributes as a filter.\n  remarks: \"The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.  \\n  \\n The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \\n  \\n-   A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.  \\n  \\n-   If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.  \\n  \\n-   If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.  \\n  \\n-   If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.  \\n  \\n If `component` is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  syntax:\n    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component to get the events for.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of type <xref:System.Attribute> that you can use as a filter.\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events that match the specified attributes for this component.\n  overload: System.ComponentModel.TypeDescriptor.GetEvents*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)\n  id: GetEvents(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetEvents(Object,Boolean)\n  nameWithType: TypeDescriptor.GetEvents(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of events for a specified component with a custom type descriptor.\n  remarks: \"This method retrieves a collection of events that the given `component` parameter instance provides. This can differ from the set of events the class provides. If the `component` parameter is sited, the site can add or remove additional events.  \\n  \\n If `component` is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  syntax:\n    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component to get the events for.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events for this component.\n  overload: System.ComponentModel.TypeDescriptor.GetEvents*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])\n  id: GetEvents(System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetEvents(Type,Attribute[])\n  nameWithType: TypeDescriptor.GetEvents(Type,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of events for a specified type of component using a specified array of attributes as a filter.\n  remarks: \"Call this version of this method only when you do not have an instance of the object.  \\n  \\n The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \\n  \\n-   A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.  \\n  \\n-   If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.  \\n  \\n-   If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.  \\n  \\n-   If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.  \\n  \\n If the `componentType` parameter is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  syntax:\n    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of type <xref:System.Attribute> that you can use as a filter.\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events that match the specified attributes for this component.\n  overload: System.ComponentModel.TypeDescriptor.GetEvents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)\n  id: GetEvents(System.Object,System.Attribute[],System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetEvents(Object,Attribute[],Boolean)\n  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[],Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[],Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.\n  remarks: \"The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.  \\n  \\n The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \\n  \\n-   A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.  \\n  \\n-   If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.  \\n  \\n-   If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.  \\n  \\n-   If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.  \\n  \\n If `component` is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  syntax:\n    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component to get the events for.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of type <xref:System.Attribute> to use as a filter.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: An <xref href=\"System.ComponentModel.EventDescriptorCollection\"></xref> with the events that match the specified attributes for this component.\n  overload: System.ComponentModel.TypeDescriptor.GetEvents*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  id: GetFullComponentName(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetFullComponentName(Object)\n  nameWithType: TypeDescriptor.GetFullComponentName(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the fully qualified name of the component.\n  remarks: In many cases, the GetFullComponentName method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method. However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.\n  syntax:\n    content: public static string GetFullComponentName (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The <xref href=\"System.ComponentModel.Component\"></xref> to find the name for.\n    return:\n      type: System.String\n      description: The fully qualified name of the specified component, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the component has no name.\n  overload: System.ComponentModel.TypeDescriptor.GetFullComponentName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  id: GetProperties(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetProperties(Object)\n  nameWithType: TypeDescriptor.GetProperties(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of properties for a specified component.\n  remarks: \"The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.  \\n  \\n If the `component` parameter is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  example:\n  - \"The following code example demonstrates the use of the GetProperties method to access the properties of a control. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.  \\n  \\n [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/add/codesnippet/visualbasic/m-system.componentmodel._38_1.vb)]\\n [!code-cs[System.ComponentModel.Design.DesignerServices#8](~/add/codesnippet/csharp/m-system.componentmodel._38_1.cs)]\"\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component to get the properties for.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties for the specified component.\n  overload: System.ComponentModel.TypeDescriptor.GetProperties*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)\n  id: GetProperties(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetProperties(Type)\n  nameWithType: TypeDescriptor.GetProperties(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of properties for a specified type of component.\n  remarks: \"Call this version of this method only when you do not have an instance of the object.  \\n  \\n If the `componentType` parameter is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: A <xref:System.Type> that represents the component to get properties for.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties for a specified type of component.\n  overload: System.ComponentModel.TypeDescriptor.GetProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])\n  id: GetProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetProperties(Object,Attribute[])\n  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of properties for a specified component using a specified array of attributes as a filter.\n  remarks: \"The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.  \\n  \\n The `attributes` parameter array is used to filter the array. Filtering is defined by the following rules:  \\n  \\n-   If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.  \\n  \\n-   If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.  \\n  \\n-   If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.  \\n  \\n-   If `attributes` has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.  \\n  \\n If `component` is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.  \\n  \\n [!code-cs[PropertyTabExample#2](~/add/codesnippet/csharp/0d160e65-8e23-4623-ad72-_1.cs)]\\n [!code-cpp[PropertyTabExample#2](~/add/codesnippet/cpp/0d160e65-8e23-4623-ad72-_1.cpp)]\\n [!code-vb[PropertyTabExample#2](~/add/codesnippet/visualbasic/0d160e65-8e23-4623-ad72-_1.vb)]\"\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component to get the properties for.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of type <xref:System.Attribute> to use as a filter.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes for the specified component.\n  overload: System.ComponentModel.TypeDescriptor.GetProperties*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)\n  id: GetProperties(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetProperties(Object,Boolean)\n  nameWithType: TypeDescriptor.GetProperties(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of properties for a specified component using the default type descriptor.\n  remarks: \"The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.  \\n  \\n If `component` is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component to get the properties for.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to not consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties for a specified component.\n  overload: System.ComponentModel.TypeDescriptor.GetProperties*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])\n  id: GetProperties(System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetProperties(Type,Attribute[])\n  nameWithType: TypeDescriptor.GetProperties(Type,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type,Attribute[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.\n  remarks: \"Call this version of this method only when you do not have an instance of the object.  \\n  \\n The `attributes` parameter array is used to filter the array. Filtering is defined by the following rules:  \\n  \\n-   If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.  \\n  \\n-   If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.  \\n  \\n-   If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.  \\n  \\n-   If `attributes` has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.  \\n  \\n If the `componentType` parameter is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.  \\n  \\n [!code-cs[PropertyTabExample#2](~/add/codesnippet/csharp/af245915-0d17-4307-99bf-_1.cs)]\\n [!code-cpp[PropertyTabExample#2](~/add/codesnippet/cpp/af245915-0d17-4307-99bf-_1.cpp)]\\n [!code-vb[PropertyTabExample#2](~/add/codesnippet/visualbasic/af245915-0d17-4307-99bf-_1.vb)]\"\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of type <xref:System.Attribute> to use as a filter.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes for this type of component.\n  overload: System.ComponentModel.TypeDescriptor.GetProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)\n  id: GetProperties(System.Object,System.Attribute[],System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetProperties(Object,Attribute[],Boolean)\n  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[],Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[],Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.\n  remarks: \"The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.  \\n  \\n The `attributes` parameter array is used to filter the array. Filtering is defined by the following rules:  \\n  \\n-   If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.  \\n  \\n-   If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.  \\n  \\n-   If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.  \\n  \\n-   If `attributes` has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.  \\n  \\n If the `component` parameter is `null`, an empty collection is returned.  \\n  \\n The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.\"\n  syntax:\n    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component to get the properties for.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of type <xref:System.Attribute> to use as a filter.\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to consider custom type description information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the events that match the specified attributes for the specified component.\n  overload: System.ComponentModel.TypeDescriptor.GetProperties*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>component</code> is a cross-process remoted object.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  id: GetProvider(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetProvider(Object)\n  nameWithType: TypeDescriptor.GetProvider(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the type description provider for the specified component.\n  remarks: The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider. Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.\n  syntax:\n    content: public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: An instance of the target component.\n    return:\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: A <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> associated with the specified component.\n  overload: System.ComponentModel.TypeDescriptor.GetProvider*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>instance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)\n  id: GetProvider(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetProvider(Type)\n  nameWithType: TypeDescriptor.GetProvider(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the type description provider for the specified type.\n  remarks: The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider. Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.\n  syntax:\n    content: public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    return:\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: A <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> associated with the specified type.\n  overload: System.ComponentModel.TypeDescriptor.GetProvider*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  id: GetReflectionType(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetReflectionType(Object)\n  nameWithType: TypeDescriptor.GetReflectionType(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns a <xref:System.Type> that can be used to perform reflection, given an object.\n  remarks: The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.\n  syntax:\n    content: public static Type GetReflectionType (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: An instance of the target component.\n    return:\n      type: System.Type\n      description: A <xref:System.Type> for the specified object.\n  overload: System.ComponentModel.TypeDescriptor.GetReflectionType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>instance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)\n  id: GetReflectionType(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: GetReflectionType(Type)\n  nameWithType: TypeDescriptor.GetReflectionType(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns a <xref:System.Type> that can be used to perform reflection, given a class type.\n  remarks: The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.\n  syntax:\n    content: public static Type GetReflectionType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n    return:\n      type: System.Type\n      description: A <xref:System.Type> of the specified class.\n  overload: System.ComponentModel.TypeDescriptor.GetReflectionType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.InterfaceType\n  id: InterfaceType\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: InterfaceType\n  nameWithType: TypeDescriptor.InterfaceType\n  fullName: System.ComponentModel.TypeDescriptor.InterfaceType\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a type that represents a type description provider for all interface types.\n  remarks: The InterfaceType property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.\n  syntax:\n    content: public static Type InterfaceType { get; }\n    return:\n      type: System.Type\n      description: A <xref:System.Type> that represents a custom type description provider for all interface types.\n  overload: System.ComponentModel.TypeDescriptor.InterfaceType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n  id: Refresh(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: Refresh(Object)\n  nameWithType: TypeDescriptor.Refresh(Object)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Clears the properties and events for the specified component from the cache.\n  remarks: \"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they should call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.  \\n  \\n This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change. This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.\"\n  example:\n  - For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.\n  syntax:\n    content: public static void Refresh (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: A component for which the properties or events have changed.\n  overload: System.ComponentModel.TypeDescriptor.Refresh*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)\n  id: Refresh(System.Reflection.Assembly)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: Refresh(Assembly)\n  nameWithType: TypeDescriptor.Refresh(Assembly)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(Assembly)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Clears the properties and events for the specified assembly from the cache.\n  remarks: \"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they can call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.  \\n  \\n Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.  \\n  \\n This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.\"\n  syntax:\n    content: public static void Refresh (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The <xref:System.Reflection.Assembly> that represents the assembly to refresh. Each <xref:System.Type> in this assembly will be refreshed.\n  overload: System.ComponentModel.TypeDescriptor.Refresh*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)\n  id: Refresh(System.Reflection.Module)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: Refresh(Module)\n  nameWithType: TypeDescriptor.Refresh(Module)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(Module)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Clears the properties and events for the specified module from the cache.\n  remarks: \"Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they can call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.  \\n  \\n Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.  \\n  \\n This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.\"\n  syntax:\n    content: public static void Refresh (System.Reflection.Module module);\n    parameters:\n    - id: module\n      type: System.Reflection.Module\n      description: The <xref:System.Reflection.Module> that represents the module to refresh. Each <xref:System.Type> in this module will be refreshed.\n  overload: System.ComponentModel.TypeDescriptor.Refresh*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)\n  id: Refresh(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: Refresh(Type)\n  nameWithType: TypeDescriptor.Refresh(Type)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Clears the properties and events for the specified type of component from the cache.\n  remarks: \"Call this version of this method only when you do not have an instance of the object.  \\n  \\n Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed. Typically, they are constant for the lifetime of an object. However, extender providers and designers can change the set of properties on an object. If they do, they can call this method to clear the property and event descriptors of the object. This method is used only at design time. It is not used during run time.  \\n  \\n This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change. This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.\"\n  syntax:\n    content: public static void Refresh (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n  overload: System.ComponentModel.TypeDescriptor.Refresh*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.Refreshed\n  id: Refreshed\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: Refreshed\n  nameWithType: TypeDescriptor.Refreshed\n  fullName: System.ComponentModel.TypeDescriptor.Refreshed\n  type: Event\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Occurs when the cache for a component is cleared.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.\n  syntax:\n    content: public static event System.ComponentModel.RefreshEventHandler Refreshed;\n    return:\n      type: System.ComponentModel.RefreshEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)\n  id: RemoveAssociation(System.Object,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: RemoveAssociation(Object,Object)\n  nameWithType: TypeDescriptor.RemoveAssociation(Object,Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(Object,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Removes an association between two objects.\n  remarks: \"The RemoveAssociation method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.  \\n  \\n A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.\"\n  syntax:\n    content: public static void RemoveAssociation (object primary, object secondary);\n    parameters:\n    - id: primary\n      type: System.Object\n      description: The primary <xref:System.Object>.\n    - id: secondary\n      type: System.Object\n      description: The secondary <xref:System.Object>.\n  overload: System.ComponentModel.TypeDescriptor.RemoveAssociation*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)\n  id: RemoveAssociations(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: RemoveAssociations(Object)\n  nameWithType: TypeDescriptor.RemoveAssociations(Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Removes all associations for a primary object.\n  remarks: \"The RemoveAssociations method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.  \\n  \\n A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.\"\n  syntax:\n    content: public static void RemoveAssociations (object primary);\n    parameters:\n    - id: primary\n      type: System.Object\n      description: The primary <xref:System.Object> in an association.\n  overload: System.ComponentModel.TypeDescriptor.RemoveAssociations*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>primary</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: RemoveProvider(TypeDescriptionProvider,Object)\n  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Removes a previously added type description provider that is associated with the specified object.\n  remarks: \"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.  \\n  \\n Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.\"\n  syntax:\n    content: public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to remove.\n    - id: instance\n      type: System.Object\n      description: An instance of the target component.\n  overload: System.ComponentModel.TypeDescriptor.RemoveProvider*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: RemoveProvider(TypeDescriptionProvider,Type)\n  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Removes a previously added type description provider that is associated with the specified type.\n  remarks: \"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.  \\n  \\n Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.\"\n  syntax:\n    content: public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to remove.\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n  overload: System.ComponentModel.TypeDescriptor.RemoveProvider*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: RemoveProviderTransparent(TypeDescriptionProvider,Object)\n  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Removes a previously added type description provider that is associated with the specified object.\n  remarks: \"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.  \\n  \\n This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.  \\n  \\n Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.\"\n  syntax:\n    content: public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to remove.\n    - id: instance\n      type: System.Object\n      description: An instance of the target component.\n  overload: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: RemoveProviderTransparent(TypeDescriptionProvider,Type)\n  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Removes a previously added type description provider that is associated with the specified type.\n  remarks: \"This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method. Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.  \\n  \\n This method can be called from partially trusted code. If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.  \\n  \\n Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.\"\n  syntax:\n    content: public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> to remove.\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the target component.\n  overload: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)\n  id: SortDescriptorArray(System.Collections.IList)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  name: SortDescriptorArray(IList)\n  nameWithType: TypeDescriptor.SortDescriptorArray(IList)\n  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(IList)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Sorts descriptors using the name of the descriptor.\n  syntax:\n    content: public static void SortDescriptorArray (System.Collections.IList infos);\n    parameters:\n    - id: infos\n      type: System.Collections.IList\n      description: An <xref:System.Collections.IList> that contains the descriptors to sort.\n  overload: System.ComponentModel.TypeDescriptor.SortDescriptorArray*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>infos</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddAttributes(Object,Attribute[])\n  nameWithType: TypeDescriptor.AddAttributes(Object,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Object,Attribute[])\n- uid: System.ComponentModel.TypeDescriptionProvider\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeDescriptionProvider\n  nameWithType: TypeDescriptionProvider\n  fullName: System.ComponentModel.TypeDescriptionProvider\n- uid: System.Attribute[]\n  parent: System\n  isExternal: true\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: Attribute[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddAttributes(Type,Attribute[])\n  nameWithType: TypeDescriptor.AddAttributes(Type,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Type,Attribute[])\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddEditorTable(Type,Hashtable)\n  nameWithType: TypeDescriptor.AddEditorTable(Type,Hashtable)\n  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(Type,Hashtable)\n- uid: System.Collections.Hashtable\n  parent: System.Collections\n  isExternal: false\n  name: Hashtable\n  nameWithType: Hashtable\n  fullName: System.Collections.Hashtable\n- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddProvider(TypeDescriptionProvider,Object)\n  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)\n  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)\n- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddProvider(TypeDescriptionProvider,Type)\n  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)\n  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)\n- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddProviderTransparent(TypeDescriptionProvider,Object)\n  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)\n  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)\n- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddProviderTransparent(TypeDescriptionProvider,Type)\n  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)\n  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)\n- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: ComNativeDescriptorHandler\n  nameWithType: TypeDescriptor.ComNativeDescriptorHandler\n  fullName: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler\n- uid: System.ComponentModel.IComNativeDescriptorHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComNativeDescriptorHandler\n  nameWithType: IComNativeDescriptorHandler\n  fullName: System.ComponentModel.IComNativeDescriptorHandler\n- uid: System.ComponentModel.TypeDescriptor.ComObjectType\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: ComObjectType\n  nameWithType: TypeDescriptor.ComObjectType\n  fullName: System.ComponentModel.TypeDescriptor.ComObjectType\n- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateAssociation(Object,Object)\n  nameWithType: TypeDescriptor.CreateAssociation(Object,Object)\n  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(Object,Object)\n- uid: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateDesigner(IComponent,Type)\n  nameWithType: TypeDescriptor.CreateDesigner(IComponent,Type)\n  fullName: System.ComponentModel.TypeDescriptor.CreateDesigner(IComponent,Type)\n- uid: System.ComponentModel.Design.IDesigner\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: IDesigner\n  nameWithType: IDesigner\n  fullName: System.ComponentModel.Design.IDesigner\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateEvent(Type,EventDescriptor,Attribute[])\n  nameWithType: TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])\n- uid: System.ComponentModel.EventDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventDescriptor\n  nameWithType: EventDescriptor\n  fullName: System.ComponentModel.EventDescriptor\n- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateEvent(Type,String,Type,Attribute[])\n  nameWithType: TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateInstance(IServiceProvider,Type,Type[],Object[])\n  nameWithType: TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Type[]\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateProperty(Type,PropertyDescriptor,Attribute[])\n  nameWithType: TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])\n- uid: System.ComponentModel.PropertyDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateProperty(Type,String,Type,Attribute[])\n  nameWithType: TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])\n- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetAssociation(Type,Object)\n  nameWithType: TypeDescriptor.GetAssociation(Type,Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(Type,Object)\n- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetAttributes(Object)\n  nameWithType: TypeDescriptor.GetAttributes(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object)\n- uid: System.ComponentModel.AttributeCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: AttributeCollection\n  nameWithType: AttributeCollection\n  fullName: System.ComponentModel.AttributeCollection\n- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetAttributes(Type)\n  nameWithType: TypeDescriptor.GetAttributes(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetAttributes(Object,Boolean)\n  nameWithType: TypeDescriptor.GetAttributes(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetClassName(Object)\n  nameWithType: TypeDescriptor.GetClassName(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetClassName(Type)\n  nameWithType: TypeDescriptor.GetClassName(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetClassName(Object,Boolean)\n  nameWithType: TypeDescriptor.GetClassName(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object,Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetComponentName(Object)\n  nameWithType: TypeDescriptor.GetComponentName(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetComponentName(Object,Boolean)\n  nameWithType: TypeDescriptor.GetComponentName(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object,Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetConverter(Object)\n  nameWithType: TypeDescriptor.GetConverter(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object)\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetConverter(Type)\n  nameWithType: TypeDescriptor.GetConverter(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetConverter(Object,Boolean)\n  nameWithType: TypeDescriptor.GetConverter(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object,Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetDefaultEvent(Object)\n  nameWithType: TypeDescriptor.GetDefaultEvent(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetDefaultEvent(Type)\n  nameWithType: TypeDescriptor.GetDefaultEvent(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetDefaultEvent(Object,Boolean)\n  nameWithType: TypeDescriptor.GetDefaultEvent(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object,Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetDefaultProperty(Object)\n  nameWithType: TypeDescriptor.GetDefaultProperty(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetDefaultProperty(Type)\n  nameWithType: TypeDescriptor.GetDefaultProperty(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetDefaultProperty(Object,Boolean)\n  nameWithType: TypeDescriptor.GetDefaultProperty(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object,Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEditor(Object,Type)\n  nameWithType: TypeDescriptor.GetEditor(Object,Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type)\n- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEditor(Type,Type)\n  nameWithType: TypeDescriptor.GetEditor(Type,Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Type,Type)\n- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEditor(Object,Type,Boolean)\n  nameWithType: TypeDescriptor.GetEditor(Object,Type,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type,Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEvents(Object)\n  nameWithType: TypeDescriptor.GetEvents(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object)\n- uid: System.ComponentModel.EventDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventDescriptorCollection\n  nameWithType: EventDescriptorCollection\n  fullName: System.ComponentModel.EventDescriptorCollection\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEvents(Type)\n  nameWithType: TypeDescriptor.GetEvents(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEvents(Object,Attribute[])\n  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[])\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEvents(Object,Boolean)\n  nameWithType: TypeDescriptor.GetEvents(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEvents(Type,Attribute[])\n  nameWithType: TypeDescriptor.GetEvents(Type,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type,Attribute[])\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEvents(Object,Attribute[],Boolean)\n  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[],Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[],Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetFullComponentName(Object)\n  nameWithType: TypeDescriptor.GetFullComponentName(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeDescriptor.GetProperties(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object)\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetProperties(Type)\n  nameWithType: TypeDescriptor.GetProperties(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetProperties(Object,Attribute[])\n  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[])\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetProperties(Object,Boolean)\n  nameWithType: TypeDescriptor.GetProperties(Object,Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetProperties(Type,Attribute[])\n  nameWithType: TypeDescriptor.GetProperties(Type,Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type,Attribute[])\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetProperties(Object,Attribute[],Boolean)\n  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[],Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[],Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetProvider(Object)\n  nameWithType: TypeDescriptor.GetProvider(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetProvider(Type)\n  nameWithType: TypeDescriptor.GetProvider(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetReflectionType(Object)\n  nameWithType: TypeDescriptor.GetReflectionType(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetReflectionType(Type)\n  nameWithType: TypeDescriptor.GetReflectionType(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Type)\n- uid: System.ComponentModel.TypeDescriptor.InterfaceType\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: InterfaceType\n  nameWithType: TypeDescriptor.InterfaceType\n  fullName: System.ComponentModel.TypeDescriptor.InterfaceType\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: Refresh(Object)\n  nameWithType: TypeDescriptor.Refresh(Object)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(Object)\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: Refresh(Assembly)\n  nameWithType: TypeDescriptor.Refresh(Assembly)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(Assembly)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: Refresh(Module)\n  nameWithType: TypeDescriptor.Refresh(Module)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(Module)\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: true\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: Refresh(Type)\n  nameWithType: TypeDescriptor.Refresh(Type)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(Type)\n- uid: System.ComponentModel.TypeDescriptor.Refreshed\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: Refreshed\n  nameWithType: TypeDescriptor.Refreshed\n  fullName: System.ComponentModel.TypeDescriptor.Refreshed\n- uid: System.ComponentModel.RefreshEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: RefreshEventHandler\n  nameWithType: RefreshEventHandler\n  fullName: System.ComponentModel.RefreshEventHandler\n- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: RemoveAssociation(Object,Object)\n  nameWithType: TypeDescriptor.RemoveAssociation(Object,Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(Object,Object)\n- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: RemoveAssociations(Object)\n  nameWithType: TypeDescriptor.RemoveAssociations(Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(Object)\n- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: RemoveProvider(TypeDescriptionProvider,Object)\n  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)\n- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: RemoveProvider(TypeDescriptionProvider,Type)\n  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)\n- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: RemoveProviderTransparent(TypeDescriptionProvider,Object)\n  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)\n- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: RemoveProviderTransparent(TypeDescriptionProvider,Type)\n  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)\n- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: SortDescriptorArray(IList)\n  nameWithType: TypeDescriptor.SortDescriptorArray(IList)\n  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(IList)\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: true\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.ComponentModel.TypeDescriptor.AddAttributes*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddAttributes\n  nameWithType: TypeDescriptor.AddAttributes\n- uid: System.ComponentModel.TypeDescriptor.AddEditorTable*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddEditorTable\n  nameWithType: TypeDescriptor.AddEditorTable\n- uid: System.ComponentModel.TypeDescriptor.AddProvider*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddProvider\n  nameWithType: TypeDescriptor.AddProvider\n- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: AddProviderTransparent\n  nameWithType: TypeDescriptor.AddProviderTransparent\n- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: ComNativeDescriptorHandler\n  nameWithType: TypeDescriptor.ComNativeDescriptorHandler\n- uid: System.ComponentModel.TypeDescriptor.ComObjectType*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: ComObjectType\n  nameWithType: TypeDescriptor.ComObjectType\n- uid: System.ComponentModel.TypeDescriptor.CreateAssociation*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateAssociation\n  nameWithType: TypeDescriptor.CreateAssociation\n- uid: System.ComponentModel.TypeDescriptor.CreateDesigner*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateDesigner\n  nameWithType: TypeDescriptor.CreateDesigner\n- uid: System.ComponentModel.TypeDescriptor.CreateEvent*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateEvent\n  nameWithType: TypeDescriptor.CreateEvent\n- uid: System.ComponentModel.TypeDescriptor.CreateInstance*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateInstance\n  nameWithType: TypeDescriptor.CreateInstance\n- uid: System.ComponentModel.TypeDescriptor.CreateProperty*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: CreateProperty\n  nameWithType: TypeDescriptor.CreateProperty\n- uid: System.ComponentModel.TypeDescriptor.GetAssociation*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetAssociation\n  nameWithType: TypeDescriptor.GetAssociation\n- uid: System.ComponentModel.TypeDescriptor.GetAttributes*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetAttributes\n  nameWithType: TypeDescriptor.GetAttributes\n- uid: System.ComponentModel.TypeDescriptor.GetClassName*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetClassName\n  nameWithType: TypeDescriptor.GetClassName\n- uid: System.ComponentModel.TypeDescriptor.GetComponentName*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetComponentName\n  nameWithType: TypeDescriptor.GetComponentName\n- uid: System.ComponentModel.TypeDescriptor.GetConverter*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetConverter\n  nameWithType: TypeDescriptor.GetConverter\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetDefaultEvent\n  nameWithType: TypeDescriptor.GetDefaultEvent\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetDefaultProperty\n  nameWithType: TypeDescriptor.GetDefaultProperty\n- uid: System.ComponentModel.TypeDescriptor.GetEditor*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEditor\n  nameWithType: TypeDescriptor.GetEditor\n- uid: System.ComponentModel.TypeDescriptor.GetEvents*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetEvents\n  nameWithType: TypeDescriptor.GetEvents\n- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetFullComponentName\n  nameWithType: TypeDescriptor.GetFullComponentName\n- uid: System.ComponentModel.TypeDescriptor.GetProperties*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetProperties\n  nameWithType: TypeDescriptor.GetProperties\n- uid: System.ComponentModel.TypeDescriptor.GetProvider*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetProvider\n  nameWithType: TypeDescriptor.GetProvider\n- uid: System.ComponentModel.TypeDescriptor.GetReflectionType*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: GetReflectionType\n  nameWithType: TypeDescriptor.GetReflectionType\n- uid: System.ComponentModel.TypeDescriptor.InterfaceType*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: InterfaceType\n  nameWithType: TypeDescriptor.InterfaceType\n- uid: System.ComponentModel.TypeDescriptor.Refresh*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: Refresh\n  nameWithType: TypeDescriptor.Refresh\n- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: RemoveAssociation\n  nameWithType: TypeDescriptor.RemoveAssociation\n- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: RemoveAssociations\n  nameWithType: TypeDescriptor.RemoveAssociations\n- uid: System.ComponentModel.TypeDescriptor.RemoveProvider*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: RemoveProvider\n  nameWithType: TypeDescriptor.RemoveProvider\n- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: RemoveProviderTransparent\n  nameWithType: TypeDescriptor.RemoveProviderTransparent\n- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray*\n  parent: System.ComponentModel.TypeDescriptor\n  isExternal: false\n  name: SortDescriptorArray\n  nameWithType: TypeDescriptor.SortDescriptorArray\n"}