{"nodes":[{"pos":[1897,2090],"content":"Represents a parameter to an <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> and optionally its mapping to a <xref href=\"System.Data.DataSet\"></xref> column. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a parameter to an <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally its mapping to a <bpt id=\"p2\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> column.","pos":[0,161],"source":"Represents a parameter to an <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> and optionally its mapping to a <xref href=\"System.Data.DataSet\"></xref> column."},{"content":"This class cannot be inherited.","pos":[162,193]}]},{"pos":[2103,3864],"content":"The OLE DB.NET Framework Data Provider uses positional parameters that are marked with a question mark (?) instead of named parameters.       When querying an Oracle database using the Microsoft OLE DB Provider for Oracle (MSDAORA) and the OLE DB.NET Framework Data Provider, using the `LIKE` clause to query values in fixed-length fields may not return all expected matches. The reason is that when Oracle matches values for fixed-length fields in a `LIKE` clause, it matches the entire length of the string, including any padding trailing spaces. For example, if a table in an Oracle database contains a field named \"Field1\" that is defined as `char(3)`, and you enter the value \"a\" into a row of that table, the following code does not return the row.      ```vb#   Dim queryString As String = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\"   Dim command As OleDbCommand = New OleDbCommand(queryString, connection)   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\"   Dim reader As OleDbDataReader = command.ExecuteReader()   ```      ```c#   string queryString = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\";   OleDbCommand command = new OleDbCommand(queryString, connection);   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\";   OleDbDataReader reader = command.ExecuteReader();   ```       This is because Oracle stores the column value as \"a  \" (padding \"a\", with trailing spaces, to the fixed field length of 3), which Oracle does not treat as a match for the parameter value of \"a\" in the case of a `LIKE` comparison of fixed-length fields.       To resolve this problem, append a percentage (\"%\") wildcard character to the parameter value (`\"a%\"`), or use an SQL `=` comparison instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"The OLE DB.NET Framework Data Provider uses positional parameters that are marked with a question mark (?) instead of named parameters.","pos":[0,135]},{"content":"When querying an Oracle database using the Microsoft OLE DB Provider for Oracle (MSDAORA) and the OLE DB.NET Framework Data Provider, using the <ph id=\"ph1\">`LIKE`</ph> clause to query values in fixed-length fields may not return all expected matches.","pos":[142,375],"source":"       When querying an Oracle database using the Microsoft OLE DB Provider for Oracle (MSDAORA) and the OLE DB.NET Framework Data Provider, using the `LIKE` clause to query values in fixed-length fields may not return all expected matches."},{"content":"The reason is that when Oracle matches values for fixed-length fields in a <ph id=\"ph1\">`LIKE`</ph> clause, it matches the entire length of the string, including any padding trailing spaces.","pos":[376,548],"source":" The reason is that when Oracle matches values for fixed-length fields in a `LIKE` clause, it matches the entire length of the string, including any padding trailing spaces."},{"content":"For example, if a table in an Oracle database contains a field named \"Field1\" that is defined as <ph id=\"ph1\">`char(3)`</ph>, and you enter the value \"a\" into a row of that table, the following code does not return the row.","pos":[549,754],"source":" For example, if a table in an Oracle database contains a field named \"Field1\" that is defined as `char(3)`, and you enter the value \"a\" into a row of that table, the following code does not return the row."},{"content":"<ph id=\"ph1\">```vb#   Dim queryString As String = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\"   Dim command As OleDbCommand = New OleDbCommand(queryString, connection)   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\"   Dim reader As OleDbDataReader = command.ExecuteReader()   ```</ph>      <ph id=\"ph2\">```c#   string queryString = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\";   OleDbCommand command = new OleDbCommand(queryString, connection);   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\";   OleDbDataReader reader = command.ExecuteReader();   ```</ph>       This is because Oracle stores the column value as \"a  \" (padding \"a\", with trailing spaces, to the fixed field length of 3), which Oracle does not treat as a match for the parameter value of \"a\" in the case of a <ph id=\"ph3\">`LIKE`</ph> comparison of fixed-length fields.","pos":[760,1568],"source":"```vb#   Dim queryString As String = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\"   Dim command As OleDbCommand = New OleDbCommand(queryString, connection)   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\"   Dim reader As OleDbDataReader = command.ExecuteReader()   ```      ```c#   string queryString = \"SELECT * FROM Table1 WHERE Field1 LIKE ?\";   OleDbCommand command = new OleDbCommand(queryString, connection);   command.Parameters.Add(\"@p1\", OleDbType.Char, 3).Value = \"a\";   OleDbDataReader reader = command.ExecuteReader();   ```       This is because Oracle stores the column value as \"a  \" (padding \"a\", with trailing spaces, to the fixed field length of 3), which Oracle does not treat as a match for the parameter value of \"a\" in the case of a `LIKE` comparison of fixed-length fields."},{"content":"To resolve this problem, append a percentage (\"%\") wildcard character to the parameter value (<ph id=\"ph1\">`\"a%\"`</ph>), or use an SQL <ph id=\"ph2\">`=`</ph> comparison instead.","pos":[1575,1715],"source":"       To resolve this problem, append a percentage (\"%\") wildcard character to the parameter value (`\"a%\"`), or use an SQL `=` comparison instead."}]},{"pos":[5736,5830],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class."},{"pos":[6879,7016],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name and data type.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name and data type."},{"pos":[7028,7224],"content":"The data type, and if appropriate, &lt;xref:System.Data.OleDb.OleDbParameter.Size%2A&gt; and &lt;xref:System.Data.OleDb.OleDbParameter.Precision%2A&gt; are inferred from the value of the <ph id=\"ph1\">`dataType`</ph> parameter.","needQuote":true,"needEscape":true,"source":"The data type, and if appropriate, <xref:System.Data.OleDb.OleDbParameter.Size%2A> and <xref:System.Data.OleDb.OleDbParameter.Precision%2A> are inferred from the value of the `dataType` parameter."},{"pos":[7787,7820],"content":"The name of the parameter to map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter to map.","pos":[0,33]}]},{"pos":[7899,7966],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.OleDb.OleDbType\"></xref> values."},{"pos":[8127,8218],"content":"The value supplied in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dataType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid back-end data type.","needQuote":true,"needEscape":true,"source":"The value supplied in the <code>dataType</code> parameter is an invalid back-end data type."},{"pos":[8689,8891],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name and the value of the new <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name and the value of the new <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>."},{"pos":[8904,9504],"content":"Use caution when you are using this overload of the <xref:System.Data.OleDb.OleDbParameter> constructor to specify integer parameter values. Because this overload takes a `value` of type <xref:System.Object>, you must convert the integral value to an <xref:System.Object> type when the value is zero, as the following C# example demonstrates.      ```   Parameter = new OleDbParameter(\"@pname\", Convert.ToInt32(0));   ```       If you do not perform this conversion, the compiler assumes that you are trying to call the <xref:System.Data.OleDb.OleDbParameter.%23ctor%2A> constructor overload.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use caution when you are using this overload of the &lt;xref:System.Data.OleDb.OleDbParameter&gt; constructor to specify integer parameter values.","pos":[0,140],"source":"Use caution when you are using this overload of the <xref:System.Data.OleDb.OleDbParameter> constructor to specify integer parameter values."},{"content":"Because this overload takes a <ph id=\"ph1\">`value`</ph> of type &lt;xref:System.Object&gt;, you must convert the integral value to an &lt;xref:System.Object&gt; type when the value is zero, as the following C# example demonstrates.","pos":[141,342],"source":" Because this overload takes a `value` of type <xref:System.Object>, you must convert the integral value to an <xref:System.Object> type when the value is zero, as the following C# example demonstrates."},{"content":"<ph id=\"ph1\">```   Parameter = new OleDbParameter(\"@pname\", Convert.ToInt32(0));   ```</ph>       If you do not perform this conversion, the compiler assumes that you are trying to call the &lt;xref:System.Data.OleDb.OleDbParameter.%23ctor%2A&gt; constructor overload.","pos":[348,592],"source":"```   Parameter = new OleDbParameter(\"@pname\", Convert.ToInt32(0));   ```       If you do not perform this conversion, the compiler assumes that you are trying to call the <xref:System.Data.OleDb.OleDbParameter.%23ctor%2A> constructor overload."}]},{"pos":[10018,10051],"content":"The name of the parameter to map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter to map.","pos":[0,33]}]},{"pos":[10113,10195],"content":"The value of the new <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The value of the new <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> object."},{"pos":[10816,10962],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name, data type, and length.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name, data type, and length."},{"pos":[10974,11133],"content":"The &lt;xref:System.Data.OleDb.OleDbParameter.Size%2A&gt; is inferred from the value of the <ph id=\"ph1\">`dataType`</ph> parameter if it is not explicitly set in the <ph id=\"ph2\">`size`</ph> parameter.","needQuote":true,"needEscape":true,"source":"The <xref:System.Data.OleDb.OleDbParameter.Size%2A> is inferred from the value of the `dataType` parameter if it is not explicitly set in the `size` parameter."},{"pos":[11706,11739],"content":"The name of the parameter to map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter to map.","pos":[0,33]}]},{"pos":[11818,11885],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.OleDb.OleDbType\"></xref> values."},{"pos":[11945,11973],"content":"The length of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the parameter.","pos":[0,28]}]},{"pos":[12134,12225],"content":"The value supplied in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dataType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid back-end data type.","needQuote":true,"needEscape":true,"source":"The value supplied in the <code>dataType</code> parameter is an invalid back-end data type."},{"pos":[12826,12992],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name, data type, length, and source column name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name, data type, length, and source column name."},{"pos":[13004,13163],"content":"The &lt;xref:System.Data.OleDb.OleDbParameter.Size%2A&gt; is inferred from the value of the <ph id=\"ph1\">`dataType`</ph> parameter if it is not explicitly set in the <ph id=\"ph2\">`size`</ph> parameter.","needQuote":true,"needEscape":true,"source":"The <xref:System.Data.OleDb.OleDbParameter.Size%2A> is inferred from the value of the `dataType` parameter if it is not explicitly set in the `size` parameter."},{"pos":[13754,13787],"content":"The name of the parameter to map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter to map.","pos":[0,33]}]},{"pos":[13866,13933],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.OleDb.OleDbType\"></xref> values."},{"pos":[13993,14021],"content":"The length of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the parameter.","pos":[0,28]}]},{"pos":[14087,14117],"content":"The name of the source column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source column.","pos":[0,30]}]},{"pos":[14278,14369],"content":"The value supplied in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dataType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid back-end data type.","needQuote":true,"needEscape":true,"source":"The value supplied in the <code>dataType</code> parameter is an invalid back-end data type."},{"pos":[15369,15593],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties."},{"pos":[15605,15842],"content":"The &lt;xref:System.Data.OleDb.OleDbParameter.Size%2A&gt; and &lt;xref:System.Data.OleDb.OleDbParameter.Precision%2A&gt; are inferred from the value of the <ph id=\"ph1\">`dataType`</ph> parameter if they are not explicitly set in the <ph id=\"ph2\">`size`</ph> and <ph id=\"ph3\">`precision`</ph> parameters.","needQuote":true,"needEscape":true,"source":"The <xref:System.Data.OleDb.OleDbParameter.Size%2A> and <xref:System.Data.OleDb.OleDbParameter.Precision%2A> are inferred from the value of the `dataType` parameter if they are not explicitly set in the `size` and `precision` parameters."},{"pos":[16631,16657],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[16734,16801],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.OleDb.OleDbType\"></xref> values."},{"pos":[16861,16889],"content":"The length of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the parameter.","pos":[0,28]}]},{"pos":[16972,17042],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.ParameterDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.ParameterDirection\"></xref> values."},{"pos":[17110,17283],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value of the field can be null; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of the field can be null; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17347,17485],"content":"The total number of digits to the left and right of the decimal point to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of digits to the left and right of the decimal point to which &lt;xref:System.Data.OleDb.OleDbParameter.Value*&gt; is resolved.","pos":[0,138],"source":"The total number of digits to the left and right of the decimal point to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved."}]},{"pos":[17545,17648],"content":"The total number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of decimal places to which &lt;xref:System.Data.OleDb.OleDbParameter.Value*&gt; is resolved.","pos":[0,103],"source":"The total number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved."}]},{"pos":[17714,17744],"content":"The name of the source column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source column.","pos":[0,30]}]},{"pos":[17824,17890],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.DataRowVersion\"></xref> values."},{"pos":[17952,18055],"content":"An &lt;xref:System.Object&gt; that is the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that is the value of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>."},{"pos":[18216,18307],"content":"The value supplied in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dataType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid back-end data type.","needQuote":true,"needEscape":true,"source":"The value supplied in the <code>dataType</code> parameter is an invalid back-end data type."},{"pos":[19307,19531],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties."},{"pos":[19543,19780],"content":"The &lt;xref:System.Data.OleDb.OleDbParameter.Size%2A&gt; and &lt;xref:System.Data.OleDb.OleDbParameter.Precision%2A&gt; are inferred from the value of the <ph id=\"ph1\">`dataType`</ph> parameter if they are not explicitly set in the <ph id=\"ph2\">`size`</ph> and <ph id=\"ph3\">`precision`</ph> parameters.","needQuote":true,"needEscape":true,"source":"The <xref:System.Data.OleDb.OleDbParameter.Size%2A> and <xref:System.Data.OleDb.OleDbParameter.Precision%2A> are inferred from the value of the `dataType` parameter if they are not explicitly set in the `size` and `precision` parameters."},{"pos":[20588,20614],"content":"The name of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the parameter.","pos":[0,26]}]},{"pos":[20691,20758],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.OleDb.OleDbType\"></xref> values."},{"pos":[20818,20846],"content":"The length of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the parameter.","pos":[0,28]}]},{"pos":[20929,20999],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.ParameterDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.ParameterDirection\"></xref> values."},{"pos":[21063,21201],"content":"The total number of digits to the left and right of the decimal point to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of digits to the left and right of the decimal point to which &lt;xref:System.Data.OleDb.OleDbParameter.Value*&gt; is resolved.","pos":[0,138],"source":"The total number of digits to the left and right of the decimal point to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved."}]},{"pos":[21261,21364],"content":"The total number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of decimal places to which &lt;xref:System.Data.OleDb.OleDbParameter.Value*&gt; is resolved.","pos":[0,103],"source":"The total number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved."}]},{"pos":[21433,21463],"content":"The name of the source column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source column.","pos":[0,30]}]},{"pos":[21546,21612],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.DataRowVersion\"></xref> values."},{"pos":[21693,21864],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the source column is nullable; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if it is not.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the source column is nullable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not."},{"pos":[21926,22029],"content":"An &lt;xref:System.Object&gt; that is the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that is the value of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>."},{"pos":[22190,22281],"content":"The value supplied in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dataType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid back-end data type.","needQuote":true,"needEscape":true,"source":"The value supplied in the <code>dataType</code> parameter is an invalid back-end data type."},{"pos":[22622,22696],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the parameter.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.DbType\"></xref> of the parameter."},{"pos":[22709,23173],"content":"The <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> and DbType are linked. Therefore, setting the DbType changes the <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> to a supporting <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>.       For a list of the supported data types, see the appropriate <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> member. For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Data.OleDb.OleDbParameter.OleDbType%2A&gt; and DbType are linked.","pos":[0,79],"source":"The <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> and DbType are linked."},{"content":"Therefore, setting the DbType changes the &lt;xref:System.Data.OleDb.OleDbParameter.OleDbType%2A&gt; to a supporting &lt;xref:System.Data.OleDb.OleDbParameter.OleDbType%2A&gt;.","pos":[80,244],"source":" Therefore, setting the DbType changes the <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> to a supporting <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>."},{"content":"For a list of the supported data types, see the appropriate &lt;xref:System.Data.OleDb.OleDbParameter.OleDbType%2A&gt; member.","pos":[251,371],"source":"       For a list of the supported data types, see the appropriate <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> member."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>DataAdapter Parameters<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[372,462],"source":" For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[23692,23806],"content":"One of the <xref href=\"System.Data.DbType\"></xref> values. The default is <xref href=\"System.Data.DbType\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,58],"source":"One of the <xref href=\"System.Data.DbType\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[59,114],"source":" The default is <xref href=\"System.Data.DbType\"></xref>."}]},{"pos":[23988,24064],"content":"The property was not set to a valid <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The property was not set to a valid <xref href=\"System.Data.DbType\"></xref>."},{"pos":[24420,24566],"content":"Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return-value parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return-value parameter.","pos":[0,146]}]},{"pos":[24579,25078],"content":"If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.OleDb.OleDbCommand> does not return a value, the <xref:System.Data.OleDb.OleDbParameter> contains a null value.       `Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> cannot be accessed until you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A> or **Dispose** on the <xref:System.Data.OleDb.OleDbDataReader>.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Data.ParameterDirection&gt; is output, and execution of the associated &lt;xref:System.Data.OleDb.OleDbCommand&gt; does not return a value, the &lt;xref:System.Data.OleDb.OleDbParameter&gt; contains a null value.","pos":[0,217],"source":"If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.OleDb.OleDbCommand> does not return a value, the <xref:System.Data.OleDb.OleDbParameter> contains a null value."},{"content":"<ph id=\"ph1\">`Output`</ph>, <ph id=\"ph2\">`InputOut`</ph>, and <ph id=\"ph3\">`ReturnValue`</ph> parameters returned by calling &lt;xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A&gt; cannot be accessed until you call &lt;xref:System.Data.OleDb.OleDbDataReader.Close%2A&gt; or <bpt id=\"p1\">**</bpt>Dispose<ept id=\"p1\">**</ept> on the &lt;xref:System.Data.OleDb.OleDbDataReader&gt;.","pos":[224,497],"source":"`Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> cannot be accessed until you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A> or **Dispose** on the <xref:System.Data.OleDb.OleDbDataReader>."}]},{"pos":[25821,25970],"content":"One of the <xref href=\"System.Data.ParameterDirection\"></xref> values. The default is <xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.ParameterDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,70],"source":"One of the <xref href=\"System.Data.ParameterDirection\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[71,149],"source":" The default is <xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"></xref>."}]},{"pos":[26135,26239],"content":"The property was not set to one of the valid <bpt id=\"p1\">&lt;xref href=\"System.Data.ParameterDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The property was not set to one of the valid <xref href=\"System.Data.ParameterDirection\"></xref> values."},{"pos":[26600,26678],"content":"Gets or sets a value that indicates whether the parameter accepts null values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the parameter accepts null values.","pos":[0,78]}]},{"pos":[26690,26751],"content":"Null values are handled using the <xref:System.DBNull> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Null values are handled using the &lt;xref:System.DBNull&gt; class.","pos":[0,61],"source":"Null values are handled using the <xref:System.DBNull> class."}]},{"pos":[27523,27765],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null values are accepted; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if null values are accepted; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,163],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null values are accepted; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[164,242],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[28195,28278],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the parameter.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.OleDb.OleDbType\"></xref> of the parameter."},{"pos":[28291,28719],"content":"The OleDbType and <xref:System.Data.OleDb.OleDbParameter.DbType%2A> are linked. Therefore, setting the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> changes the OleDbType to a supporting <xref:System.Data.OleDb.OleDbType>.       For a list of the supported data types, see the appropriate <xref:System.Data.OleDb.OleDbType> member. For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The OleDbType and &lt;xref:System.Data.OleDb.OleDbParameter.DbType%2A&gt; are linked.","pos":[0,79],"source":"The OleDbType and <xref:System.Data.OleDb.OleDbParameter.DbType%2A> are linked."},{"content":"Therefore, setting the &lt;xref:System.Data.OleDb.OleDbParameter.DbType%2A&gt; changes the OleDbType to a supporting &lt;xref:System.Data.OleDb.OleDbType&gt;.","pos":[80,226],"source":" Therefore, setting the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> changes the OleDbType to a supporting <xref:System.Data.OleDb.OleDbType>."},{"content":"For a list of the supported data types, see the appropriate &lt;xref:System.Data.OleDb.OleDbType&gt; member.","pos":[233,335],"source":"       For a list of the supported data types, see the appropriate <xref:System.Data.OleDb.OleDbType> member."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>DataAdapter Parameters<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[336,426],"source":" For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[28874,29009],"content":"The <xref href=\"System.Data.OleDb.OleDbType\"></xref> of the parameter. The default is <xref href=\"System.Data.OleDb.OleDbType\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the parameter.","pos":[0,70],"source":"The <xref href=\"System.Data.OleDb.OleDbType\"></xref> of the parameter."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[71,135],"source":" The default is <xref href=\"System.Data.OleDb.OleDbType\"></xref>."}]},{"pos":[29458,29541],"content":"Gets or sets the name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>."},{"pos":[29553,29674],"content":"The OLE DB .NET Provider uses positional parameters that are marked with a question mark (?) instead of named parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OLE DB .NET Provider uses positional parameters that are marked with a question mark (?) instead of named parameters.","pos":[0,121]}]},{"pos":[30410,30517],"content":"The name of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>. The default is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,70],"source":"The name of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>."},{"content":"The default is an empty string (\"\").","pos":[71,107]}]},{"pos":[30950,31070],"content":"Gets or sets the maximum number of digits used to represent the <xref:System.Data.OleDb.OleDbParameter.Value*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of digits used to represent the &lt;xref:System.Data.OleDb.OleDbParameter.Value*&gt; property.","pos":[0,120],"source":"Gets or sets the maximum number of digits used to represent the <xref:System.Data.OleDb.OleDbParameter.Value*> property."}]},{"pos":[31083,32669],"content":"The Precision property is only used for decimal and numeric input parameters.       The Precision property should be set only for `Decimal` and `Numeric` parameters prior to calling the <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> method of the <xref:System.Data.OleDb.OleDbCommand>.       Setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, truncate, or round data.       The `Precision` property only affects parameters whose <xref:System.Data.OleDb.OleDbType> is `Decimal`, `Numeric`, or `VarNumeric`. For other data types, `Precision` is ignored.      > [!NOTE] >  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.      > [!NOTE] >  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the Precision or <xref:System.Data.OleDb.OleDbParameter.Scale%2A> of <xref:System.Decimal> parameter values. This can cause truncated data to be inserted at the data source. If you are using .NET Framework version 1.0, validate the Precision and <xref:System.Data.OleDb.OleDbParameter.Scale%2A> of <xref:System.Decimal> values before setting the parameter value. <xref:System.Data.OleDb.OleDbParameter.Scale%2A> values that exceed the <xref:System.Decimal> parameter scale are still truncated.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Precision property is only used for decimal and numeric input parameters.","pos":[0,77]},{"content":"The Precision property should be set only for <ph id=\"ph1\">`Decimal`</ph> and <ph id=\"ph2\">`Numeric`</ph> parameters prior to calling the &lt;xref:System.Data.OleDb.OleDbCommand.Prepare%2A&gt; method of the &lt;xref:System.Data.OleDb.OleDbCommand&gt;.","pos":[84,287],"source":"       The Precision property should be set only for `Decimal` and `Numeric` parameters prior to calling the <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> method of the <xref:System.Data.OleDb.OleDbCommand>."},{"content":"Setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, truncate, or round data.","pos":[294,469]},{"content":"The <ph id=\"ph1\">`Precision`</ph> property only affects parameters whose &lt;xref:System.Data.OleDb.OleDbType&gt; is <ph id=\"ph2\">`Decimal`</ph>, <ph id=\"ph3\">`Numeric`</ph>, or <ph id=\"ph4\">`VarNumeric`</ph>.","pos":[476,607],"source":"       The `Precision` property only affects parameters whose <xref:System.Data.OleDb.OleDbType> is `Decimal`, `Numeric`, or `VarNumeric`."},{"content":"For other data types, <ph id=\"ph1\">`Precision`</ph> is ignored.","pos":[608,653],"source":" For other data types, `Precision` is ignored."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Use of this property to coerce data passed to the database is not supported.","pos":[659,748],"source":"      > [!NOTE] >  Use of this property to coerce data passed to the database is not supported."},{"content":"To round, truncate, or otherwise coerce data before passing it to the database, use the &lt;xref:System.Math&gt; class that is part of the <ph id=\"ph1\">`System`</ph> namespace prior to assigning a value to the parameter's <ph id=\"ph2\">`Value`</ph> property.","pos":[749,964],"source":" To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the Precision or &lt;xref:System.Data.OleDb.OleDbParameter.Scale%2A&gt; of &lt;xref:System.Decimal&gt; parameter values.","pos":[970,1189],"source":"      > [!NOTE] >  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the Precision or <xref:System.Data.OleDb.OleDbParameter.Scale%2A> of <xref:System.Decimal> parameter values."},{"content":"This can cause truncated data to be inserted at the data source.","pos":[1190,1254]},{"content":"If you are using .NET Framework version 1.0, validate the Precision and &lt;xref:System.Data.OleDb.OleDbParameter.Scale%2A&gt; of &lt;xref:System.Decimal&gt; values before setting the parameter value.","pos":[1255,1443],"source":" If you are using .NET Framework version 1.0, validate the Precision and <xref:System.Data.OleDb.OleDbParameter.Scale%2A> of <xref:System.Decimal> values before setting the parameter value."},{"content":"&lt;xref:System.Data.OleDb.OleDbParameter.Scale%2A&gt; values that exceed the &lt;xref:System.Decimal&gt; parameter scale are still truncated.","pos":[1444,1574],"source":" <xref:System.Data.OleDb.OleDbParameter.Scale%2A> values that exceed the <xref:System.Decimal> parameter scale are still truncated."}]},{"pos":[33441,33682],"content":"The maximum number of digits used to represent the &lt;xref:System.Data.OleDb.OleDbParameter.Value<bpt id=\"p1\">*</bpt>&gt; property. The default value is 0, which indicates that the data provider sets the precision for &lt;xref:System.Data.OleDb.OleDbParameter.Value<ept id=\"p1\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"The maximum number of digits used to represent the <xref:System.Data.OleDb.OleDbParameter.Value*> property. The default value is 0, which indicates that the data provider sets the precision for <xref:System.Data.OleDb.OleDbParameter.Value*>."},{"pos":[34125,34216],"content":"Resets the type associated with this <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Resets the type associated with this <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>."},{"pos":[34228,34712],"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties of the <xref:System.Data.OleDb.OleDbParameter>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties of the <xref:System.Data.OleDb.OleDbParameter>.","pos":[0,484],"nodes":[{"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value.","pos":[0,164]},{"content":"Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter.","pos":[165,281]},{"content":"Calling this method affects both the &lt;xref:System.Data.OleDb.OleDbParameter.DbType%2A&gt; and &lt;xref:System.Data.OleDb.OleDbParameter.OleDbType%2A&gt; properties of the &lt;xref:System.Data.OleDb.OleDbParameter&gt;.","pos":[282,484],"source":" Calling this method affects both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties of the <xref:System.Data.OleDb.OleDbParameter>."}]}]},{"pos":[35251,35342],"content":"Resets the type associated with this <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Resets the type associated with this <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>."},{"pos":[35354,35838],"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties of the <xref:System.Data.OleDb.OleDbParameter>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties of the <xref:System.Data.OleDb.OleDbParameter>.","pos":[0,484],"nodes":[{"content":"When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value.","pos":[0,164]},{"content":"Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter.","pos":[165,281]},{"content":"Calling this method affects both the &lt;xref:System.Data.OleDb.OleDbParameter.DbType%2A&gt; and &lt;xref:System.Data.OleDb.OleDbParameter.OleDbType%2A&gt; properties of the &lt;xref:System.Data.OleDb.OleDbParameter&gt;.","pos":[282,484],"source":" Calling this method affects both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties of the <xref:System.Data.OleDb.OleDbParameter>."}]}]},{"pos":[36325,36435],"content":"Gets or sets the number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of decimal places to which &lt;xref:System.Data.OleDb.OleDbParameter.Value*&gt; is resolved.","pos":[0,110],"source":"Gets or sets the number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved."}]},{"pos":[36448,37992],"content":"The Scale property is only used for decimal and numeric input parameters before calling the <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> method of the <xref:System.Data.OleDb.OleDbCommand> and to specify numeric output parameters.       Setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, truncate, or round data.       When using SQL Server Native Client 10 (or later), to bind a parameter whose type is `Decimal`, `Numeric,``VarNumeric, DBDate`, or `DBTimeStamp`, you must manually specify an appropriate scale value.      > [!NOTE] >  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.      > [!NOTE] >  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the <xref:System.Data.OleDb.OleDbParameter.Precision%2A> or Scale of <xref:System.Decimal> parameter values. This can cause truncated data to be inserted at the data source. If you are using .NET Framework version 1.0, validate the <xref:System.Data.OleDb.OleDbParameter.Precision%2A> and <xref:System.Data.OleDb.OleDbParameter> of <xref:System.Decimal> values before setting the parameter value. Scale values that exceed the <xref:System.Decimal> parameter scale are still truncated.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Scale property is only used for decimal and numeric input parameters before calling the &lt;xref:System.Data.OleDb.OleDbCommand.Prepare%2A&gt; method of the &lt;xref:System.Data.OleDb.OleDbCommand&gt; and to specify numeric output parameters.","pos":[0,234],"source":"The Scale property is only used for decimal and numeric input parameters before calling the <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> method of the <xref:System.Data.OleDb.OleDbCommand> and to specify numeric output parameters."},{"content":"Setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, truncate, or round data.","pos":[241,416]},{"content":"When using SQL Server Native Client 10 (or later), to bind a parameter whose type is <ph id=\"ph1\">`Decimal`</ph>, <ph id=\"ph2\">`Numeric,``VarNumeric, DBDate`</ph>, or <ph id=\"ph3\">`DBTimeStamp`</ph>, you must manually specify an appropriate scale value.","pos":[423,622],"source":"       When using SQL Server Native Client 10 (or later), to bind a parameter whose type is `Decimal`, `Numeric,``VarNumeric, DBDate`, or `DBTimeStamp`, you must manually specify an appropriate scale value."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Use of this property to coerce data passed to the database is not supported.","pos":[628,717],"source":"      > [!NOTE] >  Use of this property to coerce data passed to the database is not supported."},{"content":"To round, truncate, or otherwise coerce data before passing it to the database, use the &lt;xref:System.Math&gt; class that is part of the <ph id=\"ph1\">`System`</ph> namespace prior to assigning a value to the parameter's <ph id=\"ph2\">`Value`</ph> property.","pos":[718,933],"source":" To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the &lt;xref:System.Data.OleDb.OleDbParameter.Precision%2A&gt; or Scale of &lt;xref:System.Decimal&gt; parameter values.","pos":[939,1158],"source":"      > [!NOTE] >  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the <xref:System.Data.OleDb.OleDbParameter.Precision%2A> or Scale of <xref:System.Decimal> parameter values."},{"content":"This can cause truncated data to be inserted at the data source.","pos":[1159,1223]},{"content":"If you are using .NET Framework version 1.0, validate the &lt;xref:System.Data.OleDb.OleDbParameter.Precision%2A&gt; and &lt;xref:System.Data.OleDb.OleDbParameter&gt; of &lt;xref:System.Decimal&gt; values before setting the parameter value.","pos":[1224,1446],"source":" If you are using .NET Framework version 1.0, validate the <xref:System.Data.OleDb.OleDbParameter.Precision%2A> and <xref:System.Data.OleDb.OleDbParameter> of <xref:System.Decimal> values before setting the parameter value."},{"content":"Scale values that exceed the &lt;xref:System.Decimal&gt; parameter scale are still truncated.","pos":[1447,1534],"source":" Scale values that exceed the <xref:System.Decimal> parameter scale are still truncated."}]},{"pos":[38760,38875],"content":"The number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved. The default is 0.","pos":[0,115],"nodes":[{"content":"The number of decimal places to which &lt;xref:System.Data.OleDb.OleDbParameter.Value*&gt; is resolved.","pos":[0,97],"source":"The number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved."},{"content":"The default is 0.","pos":[98,115]}]}]},{"pos":[39275,39346],"content":"Gets or sets the maximum size, in bytes, of the data within the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum size, in bytes, of the data within the column.","pos":[0,71]}]},{"pos":[39359,41230],"content":"The Size property is used for binary and string types.       For nonstring data types and ANSI string data, the Size property refers to the number of bytes. For Unicode string data, Size refers to the number of characters. The count for strings does not include the terminating character.       For variable-length data types, Size describes the maximum amount of data to transmit to the server. For example, for a Unicode string value, Size could be used to limit the amount of data sent to the server to the first 100 characters.       For bidirectional and output parameters, and return values, you must set the value of Size. This is not required for input parameters, and if not explicitly set, the value of is inferred from the actual size of the specified parameter when a parameterized statement is executed.       The <xref:System.Data.OleDb.OleDbParameter.DbType%2A>, <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>, and Size properties of a parameter can be inferred by setting <xref:System.Data.OleDb.OleDbParameter.Value%2A>. Therefore, you are not required to specify them. However, they are not exposed in <xref:System.Data.OleDb.OleDbParameter> property settings. For example, if the size of the parameter has been inferred, Size does not contain the inferred value after statement execution.       For fixed-length data types, the value of Size is ignored. It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.       If the size of the value supplied for an <xref:System.Data.OleDb.OleDbParameter> exceeds the specified Size, the <xref:System.Data.OleDb.OleDbParameter.Value%2A> of the <xref:System.Data.OleDb.OleDbParameter> contains the specified value, truncated to the size of the <xref:System.Data.OleDb.OleDbParameter>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Size property is used for binary and string types.       For nonstring data types and ANSI string data, the Size property refers to the number of bytes. For Unicode string data, Size refers to the number of characters. The count for strings does not include the terminating character.       For variable-length data types, Size describes the maximum amount of data to transmit to the server. For example, for a Unicode string value, Size could be used to limit the amount of data sent to the server to the first 100 characters.       For bidirectional and output parameters, and return values, you must set the value of Size. This is not required for input parameters, and if not explicitly set, the value of is inferred from the actual size of the specified parameter when a parameterized statement is executed.       The <xref:System.Data.OleDb.OleDbParameter.DbType%2A>, <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>, and Size properties of a parameter can be inferred by setting <xref:System.Data.OleDb.OleDbParameter.Value%2A>. Therefore, you are not required to specify them. However, they are not exposed in <xref:System.Data.OleDb.OleDbParameter> property settings. For example, if the size of the parameter has been inferred, Size does not contain the inferred value after statement execution.       For fixed-length data types, the value of Size is ignored. It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.       If the size of the value supplied for an <xref:System.Data.OleDb.OleDbParameter> exceeds the specified Size, the <xref:System.Data.OleDb.OleDbParameter.Value%2A> of the <xref:System.Data.OleDb.OleDbParameter> contains the specified value, truncated to the size of the <xref:System.Data.OleDb.OleDbParameter>.","pos":[0,1859],"nodes":[{"content":"The Size property is used for binary and string types.","pos":[0,54]},{"content":"For nonstring data types and ANSI string data, the Size property refers to the number of bytes.","pos":[61,156]},{"content":"For Unicode string data, Size refers to the number of characters.","pos":[157,222]},{"content":"The count for strings does not include the terminating character.","pos":[223,288]},{"content":"For variable-length data types, Size describes the maximum amount of data to transmit to the server.","pos":[295,395]},{"content":"For example, for a Unicode string value, Size could be used to limit the amount of data sent to the server to the first 100 characters.","pos":[396,531]},{"content":"For bidirectional and output parameters, and return values, you must set the value of Size.","pos":[538,629]},{"content":"This is not required for input parameters, and if not explicitly set, the value of is inferred from the actual size of the specified parameter when a parameterized statement is executed.","pos":[630,816]},{"content":"The &lt;xref:System.Data.OleDb.OleDbParameter.DbType%2A&gt;, &lt;xref:System.Data.OleDb.OleDbParameter.OleDbType%2A&gt;, and Size properties of a parameter can be inferred by setting &lt;xref:System.Data.OleDb.OleDbParameter.Value%2A&gt;.","pos":[823,1043],"source":"       The <xref:System.Data.OleDb.OleDbParameter.DbType%2A>, <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>, and Size properties of a parameter can be inferred by setting <xref:System.Data.OleDb.OleDbParameter.Value%2A>."},{"content":"Therefore, you are not required to specify them.","pos":[1044,1092]},{"content":"However, they are not exposed in &lt;xref:System.Data.OleDb.OleDbParameter&gt; property settings.","pos":[1093,1184],"source":" However, they are not exposed in <xref:System.Data.OleDb.OleDbParameter> property settings."},{"content":"For example, if the size of the parameter has been inferred, Size does not contain the inferred value after statement execution.","pos":[1185,1313]},{"content":"For fixed-length data types, the value of Size is ignored.","pos":[1320,1378]},{"content":"It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.","pos":[1379,1544]},{"content":"If the size of the value supplied for an &lt;xref:System.Data.OleDb.OleDbParameter&gt; exceeds the specified Size, the &lt;xref:System.Data.OleDb.OleDbParameter.Value%2A&gt; of the &lt;xref:System.Data.OleDb.OleDbParameter&gt; contains the specified value, truncated to the size of the &lt;xref:System.Data.OleDb.OleDbParameter&gt;.","pos":[1551,1859],"source":"       If the size of the value supplied for an <xref:System.Data.OleDb.OleDbParameter> exceeds the specified Size, the <xref:System.Data.OleDb.OleDbParameter.Value%2A> of the <xref:System.Data.OleDb.OleDbParameter> contains the specified value, truncated to the size of the <xref:System.Data.OleDb.OleDbParameter>."}]}]},{"pos":[42260,42374],"content":"The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.","pos":[0,114],"nodes":[{"content":"The maximum size, in bytes, of the data within the column.","pos":[0,58]},{"content":"The default value is inferred from the parameter value.","pos":[59,114]}]}]},{"pos":[42813,42996],"content":"Gets or sets the name of the source column mapped to the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and used for loading or returning the &lt;xref:System.Data.OleDb.OleDbParameter.Value*&gt;.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref> and used for loading or returning the <xref:System.Data.OleDb.OleDbParameter.Value*>."},{"pos":[43009,43730],"content":"When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the SourceColumn name. If <xref:System.Data.OleDb.OleDbParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>. If <xref:System.Data.OleDb.OleDbParameter.Direction%2A> is set to `Output`, the value is taken from the data source. A <xref:System.Data.OleDb.OleDbParameter.Direction%2A> of `InputOutput` is a combination of both.       For more information about how to use the SourceColumn property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md) and [Updating Data Sources with DataAdapters](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the SourceColumn name.","pos":[0,148]},{"content":"If &lt;xref:System.Data.OleDb.OleDbParameter.Direction%2A&gt; is set to <ph id=\"ph1\">`Input`</ph>, the value is taken from the &lt;xref:System.Data.DataSet&gt;.","pos":[149,279],"source":" If <xref:System.Data.OleDb.OleDbParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>."},{"content":"If &lt;xref:System.Data.OleDb.OleDbParameter.Direction%2A&gt; is set to <ph id=\"ph1\">`Output`</ph>, the value is taken from the data source.","pos":[280,396],"source":" If <xref:System.Data.OleDb.OleDbParameter.Direction%2A> is set to `Output`, the value is taken from the data source."},{"content":"A &lt;xref:System.Data.OleDb.OleDbParameter.Direction%2A&gt; of <ph id=\"ph1\">`InputOutput`</ph> is a combination of both.","pos":[397,494],"source":" A <xref:System.Data.OleDb.OleDbParameter.Direction%2A> of `InputOutput` is a combination of both."},{"content":"For more information about how to use the SourceColumn property, see <bpt id=\"p1\">[</bpt>DataAdapter Parameters<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Updating Data Sources with DataAdapters<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[501,719],"source":"       For more information about how to use the SourceColumn property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md) and [Updating Data Sources with DataAdapters](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[44452,44569],"content":"The name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref>. The default is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source column mapped to the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"The name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref>."},{"content":"The default is an empty string.","pos":[86,117]}]},{"pos":[45071,45277],"content":"Sets or gets a value which indicates whether the source column is nullable. This allows <xref href=\"System.Data.Common.DbCommandBuilder\"></xref> to correctly generate Update statements for nullable columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets or gets a value which indicates whether the source column is nullable.","pos":[0,75]},{"content":"This allows <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbCommandBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to correctly generate Update statements for nullable columns.","pos":[76,206],"source":" This allows <xref href=\"System.Data.Common.DbCommandBuilder\"></xref> to correctly generate Update statements for nullable columns."}]},{"pos":[45290,46653],"content":"SourceColumnNullMapping is used by the <xref:System.Data.Common.DbCommandBuilder> to correctly generate update commands when dealing with nullable columns. Generally, use of SourceColumnNullMapping is limited to developers inheriting from <xref:System.Data.Common.DbCommandBuilder>.       <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not. When <xref:System.Data.Common.DbCommandBuilder> is generating its Update statement, it examines the SourceColumnNullMapping for each parameter. If the property is `true`, <xref:System.Data.Common.DbCommandBuilder> generates a WHERE clauses like the following (in this query expression, \"FieldName\" represents the name of the field):      ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```       If SourceColumnNullMapping for the field is false, <xref:System.Data.Common.DbCommandBuilder> generates the following WHERE clause:      ```   FieldName = @OriginalFieldName   ```       In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not. This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.","needQuote":false,"needEscape":true,"nodes":[{"content":"SourceColumnNullMapping is used by the &lt;xref:System.Data.Common.DbCommandBuilder&gt; to correctly generate update commands when dealing with nullable columns.","pos":[0,155],"source":"SourceColumnNullMapping is used by the <xref:System.Data.Common.DbCommandBuilder> to correctly generate update commands when dealing with nullable columns."},{"content":"Generally, use of SourceColumnNullMapping is limited to developers inheriting from &lt;xref:System.Data.Common.DbCommandBuilder&gt;.","pos":[156,282],"source":" Generally, use of SourceColumnNullMapping is limited to developers inheriting from <xref:System.Data.Common.DbCommandBuilder>."},{"content":"&lt;xref:System.Data.Common.DbCommandBuilder&gt; uses this property to determine whether the source column is nullable, and sets this property to <ph id=\"ph1\">`true`</ph> if it is nullable, and <ph id=\"ph2\">`false`</ph> if it is not.","pos":[289,480],"source":"       <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not."},{"content":"When &lt;xref:System.Data.Common.DbCommandBuilder&gt; is generating its Update statement, it examines the SourceColumnNullMapping for each parameter.","pos":[481,624],"source":" When <xref:System.Data.Common.DbCommandBuilder> is generating its Update statement, it examines the SourceColumnNullMapping for each parameter."},{"content":"If the property is <ph id=\"ph1\">`true`</ph>, &lt;xref:System.Data.Common.DbCommandBuilder&gt; generates a WHERE clauses like the following (in this query expression, \"FieldName\" represents the name of the field):      <ph id=\"ph2\">```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```</ph>       If SourceColumnNullMapping for the field is false, &lt;xref:System.Data.Common.DbCommandBuilder&gt; generates the following WHERE clause:      <ph id=\"ph3\">```   FieldName = @OriginalFieldName   ```</ph>       In addition, <ph id=\"ph4\">@IsNull_FieldName</ph> contains 1 if the source field contains null, and 0 if it does not.","pos":[625,1211],"source":" If the property is `true`, <xref:System.Data.Common.DbCommandBuilder> generates a WHERE clauses like the following (in this query expression, \"FieldName\" represents the name of the field):      ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```       If SourceColumnNullMapping for the field is false, <xref:System.Data.Common.DbCommandBuilder> generates the following WHERE clause:      ```   FieldName = @OriginalFieldName   ```       In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not."},{"content":"This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.","pos":[1212,1346]}]},{"pos":[46795,46966],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the source column is nullable; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if it is not.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the source column is nullable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not."},{"pos":[47429,47562],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use when you load &lt;xref:System.Data.OleDb.OleDbParameter.Value*&gt;.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.DataRowVersion\"></xref> to use when you load <xref:System.Data.OleDb.OleDbParameter.Value*>."},{"pos":[47574,48004],"content":"Used by <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> during an update operation to determine whether the parameter value is set to `Current` or `Original`. This lets primary keys be updated. This property is set to the version of the <xref:System.Data.DataRow> used by the <xref:System.Data.DataRow.Item%2A> property, or the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used by &lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt; during an update operation to determine whether the parameter value is set to <ph id=\"ph1\">`Current`</ph> or <ph id=\"ph2\">`Original`</ph>.","pos":[0,169],"source":"Used by <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> during an update operation to determine whether the parameter value is set to `Current` or `Original`."},{"content":"This lets primary keys be updated.","pos":[170,204]},{"content":"This property is set to the version of the &lt;xref:System.Data.DataRow&gt; used by the &lt;xref:System.Data.DataRow.Item%2A&gt; property, or the &lt;xref:System.Data.DataRow.GetChildRows%2A&gt; method of the &lt;xref:System.Data.DataRow&gt; object.","pos":[205,430],"source":" This property is set to the version of the <xref:System.Data.DataRow> used by the <xref:System.Data.DataRow.Item%2A> property, or the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> object."}]},{"pos":[48850,48999],"content":"One of the <xref href=\"System.Data.DataRowVersion\"></xref> values. The default is <xref uid=\"langword_csharp_Current\" name=\"Current\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,66],"source":"One of the <xref href=\"System.Data.DataRowVersion\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Current\" name=\"Current\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[67,149],"source":" The default is <xref uid=\"langword_csharp_Current\" name=\"Current\" href=\"\"></xref>."}]},{"pos":[49168,49262],"content":"The property was not set to one of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The property was not set to one of the <xref href=\"System.Data.DataRowVersion\"></xref> values."},{"pos":[49706,49809],"content":"For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,103],"source":"For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."}]},{"pos":[49821,50008],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbParameter> instance is cast to an <xref:System.ICloneable> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbParameter> instance is cast to an <xref:System.ICloneable> interface.","pos":[0,187],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.OleDb.OleDbParameter&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.","pos":[60,187],"source":" It can be used only when the <xref:System.Data.OleDb.OleDbParameter> instance is cast to an <xref:System.ICloneable> interface."}]}]},{"pos":[50136,50195],"content":"A new <xref:System.Object> that is a copy of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new &lt;xref:System.Object&gt; that is a copy of this instance.","pos":[0,59],"source":"A new <xref:System.Object> that is a copy of this instance."}]},{"pos":[50637,50724],"content":"Gets a string that contains the <xref:System.Data.OleDb.OleDbParameter.ParameterName*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string that contains the &lt;xref:System.Data.OleDb.OleDbParameter.ParameterName*&gt;.","pos":[0,87],"source":"Gets a string that contains the <xref:System.Data.OleDb.OleDbParameter.ParameterName*>."}]},{"pos":[50860,50942],"content":"A string that contains the <xref:System.Data.OleDb.OleDbParameter.ParameterName*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the &lt;xref:System.Data.OleDb.OleDbParameter.ParameterName*&gt;.","pos":[0,82],"source":"A string that contains the <xref:System.Data.OleDb.OleDbParameter.ParameterName*>."}]},{"pos":[51350,51390],"content":"Gets or sets the value of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value of the parameter.","pos":[0,40]}]},{"pos":[51403,52539],"content":"For input parameters, the value is bound to the <xref:System.Data.OleDb.OleDbCommand> that is sent to the server. For output and return value parameters, the value is set on completion of the <xref:System.Data.OleDb.OleDbCommand> and after the <xref:System.Data.OleDb.OleDbDataReader> is closed.       When you send a null parameter value to the server, you must specify <xref:System.DBNull>, not null. The null value in the system is an empty object that has no value. <xref:System.DBNull> is used to represent null values.       If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.       Both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties can be inferred by setting the Value.       The Value property is overwritten by the Update method of <xref:System.Data.IDbDataAdapter>.","needQuote":false,"needEscape":true,"nodes":[{"content":"For input parameters, the value is bound to the <xref:System.Data.OleDb.OleDbCommand> that is sent to the server. For output and return value parameters, the value is set on completion of the <xref:System.Data.OleDb.OleDbCommand> and after the <xref:System.Data.OleDb.OleDbDataReader> is closed.       When you send a null parameter value to the server, you must specify <xref:System.DBNull>, not null. The null value in the system is an empty object that has no value. <xref:System.DBNull> is used to represent null values.       If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.       Both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties can be inferred by setting the Value.       The Value property is overwritten by the Update method of <xref:System.Data.IDbDataAdapter>.","pos":[0,1128],"nodes":[{"content":"For input parameters, the value is bound to the &lt;xref:System.Data.OleDb.OleDbCommand&gt; that is sent to the server.","pos":[0,113],"source":"For input parameters, the value is bound to the <xref:System.Data.OleDb.OleDbCommand> that is sent to the server."},{"content":"For output and return value parameters, the value is set on completion of the &lt;xref:System.Data.OleDb.OleDbCommand&gt; and after the &lt;xref:System.Data.OleDb.OleDbDataReader&gt; is closed.","pos":[114,295],"source":" For output and return value parameters, the value is set on completion of the <xref:System.Data.OleDb.OleDbCommand> and after the <xref:System.Data.OleDb.OleDbDataReader> is closed."},{"content":"When you send a null parameter value to the server, you must specify &lt;xref:System.DBNull&gt;, not null.","pos":[302,402],"source":"       When you send a null parameter value to the server, you must specify <xref:System.DBNull>, not null."},{"content":"The null value in the system is an empty object that has no value.","pos":[403,469]},{"content":"&lt;xref:System.DBNull&gt; is used to represent null values.","pos":[470,524],"source":" <xref:System.DBNull> is used to represent null values."},{"content":"If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server.","pos":[531,668]},{"content":"The provider tries to convert any type of value if it supports the &lt;xref:System.IConvertible&gt; interface.","pos":[669,773],"source":" The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface."},{"content":"Conversion errors may result if the specified type is not compatible with the value.","pos":[774,858]},{"content":"Both the &lt;xref:System.Data.OleDb.OleDbParameter.DbType%2A&gt; and &lt;xref:System.Data.OleDb.OleDbParameter.OleDbType%2A&gt; properties can be inferred by setting the Value.","pos":[865,1029],"source":"       Both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties can be inferred by setting the Value."},{"content":"The Value property is overwritten by the Update method of &lt;xref:System.Data.IDbDataAdapter&gt;.","pos":[1036,1128],"source":"       The Value property is overwritten by the Update method of <xref:System.Data.IDbDataAdapter>."}]}]},{"pos":[53240,53326],"content":"An <xref:System.Object> that is the value of the parameter. The default value is null.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <xref:System.Object> that is the value of the parameter. The default value is null.","pos":[0,86],"nodes":[{"content":"An &lt;xref:System.Object&gt; that is the value of the parameter.","pos":[0,59],"source":"An <xref:System.Object> that is the value of the parameter."},{"content":"The default value is null.","pos":[60,86]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.OleDb.OleDbParameter\n  id: OleDbParameter\n  children:\n  - System.Data.OleDb.OleDbParameter.#ctor\n  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)\n  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)\n  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)\n  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)\n  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)\n  - System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)\n  - System.Data.OleDb.OleDbParameter.DbType\n  - System.Data.OleDb.OleDbParameter.Direction\n  - System.Data.OleDb.OleDbParameter.IsNullable\n  - System.Data.OleDb.OleDbParameter.OleDbType\n  - System.Data.OleDb.OleDbParameter.ParameterName\n  - System.Data.OleDb.OleDbParameter.Precision\n  - System.Data.OleDb.OleDbParameter.ResetDbType\n  - System.Data.OleDb.OleDbParameter.ResetOleDbType\n  - System.Data.OleDb.OleDbParameter.Scale\n  - System.Data.OleDb.OleDbParameter.Size\n  - System.Data.OleDb.OleDbParameter.SourceColumn\n  - System.Data.OleDb.OleDbParameter.SourceColumnNullMapping\n  - System.Data.OleDb.OleDbParameter.SourceVersion\n  - System.Data.OleDb.OleDbParameter.System#ICloneable#Clone\n  - System.Data.OleDb.OleDbParameter.ToString\n  - System.Data.OleDb.OleDbParameter.Value\n  langs:\n  - csharp\n  name: OleDbParameter\n  nameWithType: OleDbParameter\n  fullName: System.Data.OleDb.OleDbParameter\n  type: Class\n  summary: Represents a parameter to an <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> and optionally its mapping to a <xref href=\"System.Data.DataSet\"></xref> column. This class cannot be inherited.\n  remarks: \"The OLE DB.NET Framework Data Provider uses positional parameters that are marked with a question mark (?) instead of named parameters.  \\n  \\n When querying an Oracle database using the Microsoft OLE DB Provider for Oracle (MSDAORA) and the OLE DB.NET Framework Data Provider, using the `LIKE` clause to query values in fixed-length fields may not return all expected matches. The reason is that when Oracle matches values for fixed-length fields in a `LIKE` clause, it matches the entire length of the string, including any padding trailing spaces. For example, if a table in an Oracle database contains a field named \\\"Field1\\\" that is defined as `char(3)`, and you enter the value \\\"a\\\" into a row of that table, the following code does not return the row.  \\n  \\n```vb#  \\nDim queryString As String = \\\"SELECT * FROM Table1 WHERE Field1 LIKE ?\\\"  \\nDim command As OleDbCommand = New OleDbCommand(queryString, connection)  \\ncommand.Parameters.Add(\\\"@p1\\\", OleDbType.Char, 3).Value = \\\"a\\\"  \\nDim reader As OleDbDataReader = command.ExecuteReader()  \\n```  \\n  \\n```c#  \\nstring queryString = \\\"SELECT * FROM Table1 WHERE Field1 LIKE ?\\\";  \\nOleDbCommand command = new OleDbCommand(queryString, connection);  \\ncommand.Parameters.Add(\\\"@p1\\\", OleDbType.Char, 3).Value = \\\"a\\\";  \\nOleDbDataReader reader = command.ExecuteReader();  \\n```  \\n  \\n This is because Oracle stores the column value as \\\"a  \\\" (padding \\\"a\\\", with trailing spaces, to the fixed field length of 3), which Oracle does not treat as a match for the parameter value of \\\"a\\\" in the case of a `LIKE` comparison of fixed-length fields.  \\n  \\n To resolve this problem, append a percentage (\\\"%\\\") wildcard character to the parameter value (`\\\"a%\\\"`), or use an SQL `=` comparison instead.\"\n  example:\n  - \"The following example creates multiple instances of OleDbParameter through the <xref:System.Data.OleDb.OleDbParameterCollection> collection within the <xref:System.Data.OleDb.OleDbDataAdapter>. These parameters are used to select data from the data source and place the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and an <xref:System.Data.OleDb.OleDbDataAdapter> have already been created by using the appropriate schema, commands, and connection.  \\n  \\n [!code-vb[Classic WebData OleDbParameter Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_5_1.vb)]\\n [!code-cs[Classic WebData OleDbParameter Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_5_1.cs)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbParameter/OleDbParameterConverter))]\n\n      public sealed class OleDbParameter : System.Data.Common.DbParameter, ICloneable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Data.Common.DbParameter\n  implements:\n  - System.ICloneable\n  inheritedMembers:\n  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision\n  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.#ctor\n  id: '#ctor'\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: OleDbParameter()\n  nameWithType: OleDbParameter.OleDbParameter()\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [!code-cs[Classic WebData OleDbParameter.OleDbParameter Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_3_1.cs)]\\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_3_1.vb)]\"\n  syntax:\n    content: public OleDbParameter ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbParameter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)\n  id: '#ctor(System.String,System.Data.OleDb.OleDbType)'\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: OleDbParameter(String,OleDbType)\n  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name and data type.\n  remarks: The data type, and if appropriate, <xref:System.Data.OleDb.OleDbParameter.Size%2A> and <xref:System.Data.OleDb.OleDbParameter.Precision%2A> are inferred from the value of the `dataType` parameter.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [!code-cs[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/add/codesnippet/csharp/9545ec3c-a337-4c06-a8da-_1.cs)]\\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/add/codesnippet/visualbasic/9545ec3c-a337-4c06-a8da-_1.vb)]\"\n  syntax:\n    content: public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter to map.\n    - id: dataType\n      type: System.Data.OleDb.OleDbType\n      description: One of the <xref href=\"System.Data.OleDb.OleDbType\"></xref> values.\n  overload: System.Data.OleDb.OleDbParameter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value supplied in the <code>dataType</code> parameter is an invalid back-end data type.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)\n  id: '#ctor(System.String,System.Object)'\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: OleDbParameter(String,Object)\n  nameWithType: OleDbParameter.OleDbParameter(String,Object)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,Object)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name and the value of the new <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>.\n  remarks: \"Use caution when you are using this overload of the <xref:System.Data.OleDb.OleDbParameter> constructor to specify integer parameter values. Because this overload takes a `value` of type <xref:System.Object>, you must convert the integral value to an <xref:System.Object> type when the value is zero, as the following C# example demonstrates.  \\n  \\n```  \\nParameter = new OleDbParameter(\\\"@pname\\\", Convert.ToInt32(0));  \\n```  \\n  \\n If you do not perform this conversion, the compiler assumes that you are trying to call the <xref:System.Data.OleDb.OleDbParameter.%23ctor%2A> constructor overload.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter>.  \\n  \\n [!code-cs[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_16_1.cs)]\\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_16_1.vb)]\"\n  syntax:\n    content: public OleDbParameter (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter to map.\n    - id: value\n      type: System.Object\n      description: The value of the new <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> object.\n  overload: System.Data.OleDb.OleDbParameter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)\n  id: '#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)'\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: OleDbParameter(String,OleDbType,Int32)\n  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name, data type, and length.\n  remarks: The <xref:System.Data.OleDb.OleDbParameter.Size%2A> is inferred from the value of the `dataType` parameter if it is not explicitly set in the `size` parameter.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/add/codesnippet/visualbasic/258d96fc-eacc-4579-be65-_1.vb)]\\n [!code-cs[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/add/codesnippet/csharp/258d96fc-eacc-4579-be65-_1.cs)]\"\n  syntax:\n    content: public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter to map.\n    - id: dataType\n      type: System.Data.OleDb.OleDbType\n      description: One of the <xref href=\"System.Data.OleDb.OleDbType\"></xref> values.\n    - id: size\n      type: System.Int32\n      description: The length of the parameter.\n  overload: System.Data.OleDb.OleDbParameter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value supplied in the <code>dataType</code> parameter is an invalid back-end data type.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)\n  id: '#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)'\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: OleDbParameter(String,OleDbType,Int32,String)\n  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,String)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,String)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name, data type, length, and source column name.\n  remarks: The <xref:System.Data.OleDb.OleDbParameter.Size%2A> is inferred from the value of the `dataType` parameter if it is not explicitly set in the `size` parameter.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/add/codesnippet/visualbasic/a2a04a3a-d9c0-49e2-8704-_1.vb)]\\n [!code-cs[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/add/codesnippet/csharp/a2a04a3a-d9c0-49e2-8704-_1.cs)]\"\n  syntax:\n    content: public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size, string srcColumn);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the parameter to map.\n    - id: dataType\n      type: System.Data.OleDb.OleDbType\n      description: One of the <xref href=\"System.Data.OleDb.OleDbType\"></xref> values.\n    - id: size\n      type: System.Int32\n      description: The length of the parameter.\n    - id: srcColumn\n      type: System.String\n      description: The name of the source column.\n  overload: System.Data.OleDb.OleDbParameter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value supplied in the <code>dataType</code> parameter is an invalid back-end data type.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)\n  id: '#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.\n  remarks: The <xref:System.Data.OleDb.OleDbParameter.Size%2A> and <xref:System.Data.OleDb.OleDbParameter.Precision%2A> are inferred from the value of the `dataType` parameter if they are not explicitly set in the `size` and `precision` parameters.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and displays the <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>.  \\n  \\n [!code-cs[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/add/codesnippet/csharp/21acfaf3-4211-4231-915b-_1.cs)]\\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/add/codesnippet/visualbasic/21acfaf3-4211-4231-915b-_1.vb)]\"\n  syntax:\n    content: public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: The name of the parameter.\n    - id: dbType\n      type: System.Data.OleDb.OleDbType\n      description: One of the <xref href=\"System.Data.OleDb.OleDbType\"></xref> values.\n    - id: size\n      type: System.Int32\n      description: The length of the parameter.\n    - id: direction\n      type: System.Data.ParameterDirection\n      description: One of the <xref href=\"System.Data.ParameterDirection\"></xref> values.\n    - id: isNullable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of the field can be null; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: precision\n      type: System.Byte\n      description: The total number of digits to the left and right of the decimal point to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved.\n    - id: scale\n      type: System.Byte\n      description: The total number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved.\n    - id: srcColumn\n      type: System.String\n      description: The name of the source column.\n    - id: srcVersion\n      type: System.Data.DataRowVersion\n      description: One of the <xref href=\"System.Data.DataRowVersion\"></xref> values.\n    - id: value\n      type: System.Object\n      description: An <xref:System.Object> that is the value of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>.\n  overload: System.Data.OleDb.OleDbParameter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value supplied in the <code>dataType</code> parameter is an invalid back-end data type.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)\n  id: '#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)'\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.\n  remarks: The <xref:System.Data.OleDb.OleDbParameter.Size%2A> and <xref:System.Data.OleDb.OleDbParameter.Precision%2A> are inferred from the value of the `dataType` parameter if they are not explicitly set in the `size` and `precision` parameters.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and displays the <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>.  \\n  \\n [!code-cs[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/add/codesnippet/csharp/93078b65-3e17-4ead-9f09-_1.cs)]\\n [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/add/codesnippet/visualbasic/93078b65-3e17-4ead-9f09-_1.vb)]\"\n  syntax:\n    content: public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: The name of the parameter.\n    - id: dbType\n      type: System.Data.OleDb.OleDbType\n      description: One of the <xref href=\"System.Data.OleDb.OleDbType\"></xref> values.\n    - id: size\n      type: System.Int32\n      description: The length of the parameter.\n    - id: direction\n      type: System.Data.ParameterDirection\n      description: One of the <xref href=\"System.Data.ParameterDirection\"></xref> values.\n    - id: precision\n      type: System.Byte\n      description: The total number of digits to the left and right of the decimal point to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved.\n    - id: scale\n      type: System.Byte\n      description: The total number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved.\n    - id: sourceColumn\n      type: System.String\n      description: The name of the source column.\n    - id: sourceVersion\n      type: System.Data.DataRowVersion\n      description: One of the <xref href=\"System.Data.DataRowVersion\"></xref> values.\n    - id: sourceColumnNullMapping\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the source column is nullable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not.\n    - id: value\n      type: System.Object\n      description: An <xref:System.Object> that is the value of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>.\n  overload: System.Data.OleDb.OleDbParameter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value supplied in the <code>dataType</code> parameter is an invalid back-end data type.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.DbType\n  id: DbType\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: DbType\n  nameWithType: OleDbParameter.DbType\n  fullName: System.Data.OleDb.OleDbParameter.DbType\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the <xref href=\"System.Data.DbType\"></xref> of the parameter.\n  remarks: \"The <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> and DbType are linked. Therefore, setting the DbType changes the <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> to a supporting <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>.  \\n  \\n For a list of the supported data types, see the appropriate <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> member. For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [!code-cs[Classic WebData OleDbParameter.DbType Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_22_1.cs)]\\n [!code-vb[Classic WebData OleDbParameter.DbType Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_22_1.vb)]\"\n  syntax:\n    content: public override System.Data.DbType DbType { get; set; }\n    return:\n      type: System.Data.DbType\n      description: One of the <xref href=\"System.Data.DbType\"></xref> values. The default is <xref href=\"System.Data.DbType\"></xref>.\n  overload: System.Data.OleDb.OleDbParameter.DbType*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property was not set to a valid <xref href=\"System.Data.DbType\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.Direction\n  id: Direction\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: Direction\n  nameWithType: OleDbParameter.Direction\n  fullName: System.Data.OleDb.OleDbParameter.Direction\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return-value parameter.\n  remarks: \"If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.OleDb.OleDbCommand> does not return a value, the <xref:System.Data.OleDb.OleDbParameter> contains a null value.  \\n  \\n `Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> cannot be accessed until you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A> or **Dispose** on the <xref:System.Data.OleDb.OleDbDataReader>.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n```vb#  \\nPublic Sub CreateOleDbParameter()  \\n    Dim parameter As New OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88)  \\n    parameter.Direction = ParameterDirection.Output  \\nEnd Sub 'CreateOleDbParameter  \\n```  \\n  \\n```c#  \\npublic void CreateOleDbParameter()   \\n {  \\n    OleDbParameter parameter = new OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88);  \\n    parameter.Direction = ParameterDirection.Output;  \\n }  \\n```\"\n  syntax:\n    content: public override System.Data.ParameterDirection Direction { get; set; }\n    return:\n      type: System.Data.ParameterDirection\n      description: One of the <xref href=\"System.Data.ParameterDirection\"></xref> values. The default is <xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbParameter.Direction*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The property was not set to one of the valid <xref href=\"System.Data.ParameterDirection\"></xref> values.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.IsNullable\n  id: IsNullable\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: IsNullable\n  nameWithType: OleDbParameter.IsNullable\n  fullName: System.Data.OleDb.OleDbParameter.IsNullable\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets a value that indicates whether the parameter accepts null values.\n  remarks: Null values are handled using the <xref:System.DBNull> class.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n```vb#  \\nPublic Sub CreateOleDbParameter()  \\n    Dim parameter As New OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88)  \\n    parameter.IsNullable = True  \\n    parameter.Direction = ParameterDirection.Output  \\nEnd Sub 'CreateOleDbParameter  \\n```  \\n  \\n```c#  \\npublic void CreateOleDbParameter()   \\n {  \\n    OleDbParameter parameter = new OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88);  \\n    parameter.IsNullable = true;  \\n    parameter.Direction = ParameterDirection.Output;  \\n }  \\n```\"\n  syntax:\n    content: public override bool IsNullable { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null values are accepted; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbParameter.IsNullable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.OleDbType\n  id: OleDbType\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: OleDbType\n  nameWithType: OleDbParameter.OleDbType\n  fullName: System.Data.OleDb.OleDbParameter.OleDbType\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the <xref href=\"System.Data.OleDb.OleDbType\"></xref> of the parameter.\n  remarks: \"The OleDbType and <xref:System.Data.OleDb.OleDbParameter.DbType%2A> are linked. Therefore, setting the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> changes the OleDbType to a supporting <xref:System.Data.OleDb.OleDbType>.  \\n  \\n For a list of the supported data types, see the appropriate <xref:System.Data.OleDb.OleDbType> member. For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public System.Data.OleDb.OleDbType OleDbType { get; set; }\n    return:\n      type: System.Data.OleDb.OleDbType\n      description: The <xref href=\"System.Data.OleDb.OleDbType\"></xref> of the parameter. The default is <xref href=\"System.Data.OleDb.OleDbType\"></xref>.\n  overload: System.Data.OleDb.OleDbParameter.OleDbType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.ParameterName\n  id: ParameterName\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: ParameterName\n  nameWithType: OleDbParameter.ParameterName\n  fullName: System.Data.OleDb.OleDbParameter.ParameterName\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the name of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>.\n  remarks: The OLE DB .NET Provider uses positional parameters that are marked with a question mark (?) instead of named parameters.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [Visual Basic]  \\n  \\n```  \\nPublic Sub CreateOleDbParameter()  \\n    Dim parameter As New OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88)  \\n    parameter.Direction = ParameterDirection.Output  \\nEnd Sub 'CreateOleDbParameter  \\n```  \\n  \\n [C#]  \\n  \\n```  \\npublic void CreateOleDbParameter()   \\n {  \\n    OleDbParameter parameter = new OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88);  \\n    parameter.Direction = ParameterDirection.Output;  \\n }  \\n```\"\n  syntax:\n    content: public override string ParameterName { get; set; }\n    return:\n      type: System.String\n      description: The name of the <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>. The default is an empty string (\"\").\n  overload: System.Data.OleDb.OleDbParameter.ParameterName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.Precision\n  id: Precision\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: Precision\n  nameWithType: OleDbParameter.Precision\n  fullName: System.Data.OleDb.OleDbParameter.Precision\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the maximum number of digits used to represent the <xref:System.Data.OleDb.OleDbParameter.Value*> property.\n  remarks: \"The Precision property is only used for decimal and numeric input parameters.  \\n  \\n The Precision property should be set only for `Decimal` and `Numeric` parameters prior to calling the <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> method of the <xref:System.Data.OleDb.OleDbCommand>.  \\n  \\n Setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, truncate, or round data.  \\n  \\n The `Precision` property only affects parameters whose <xref:System.Data.OleDb.OleDbType> is `Decimal`, `Numeric`, or `VarNumeric`. For other data types, `Precision` is ignored.  \\n  \\n> [!NOTE]\\n>  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.  \\n  \\n> [!NOTE]\\n>  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the Precision or <xref:System.Data.OleDb.OleDbParameter.Scale%2A> of <xref:System.Decimal> parameter values. This can cause truncated data to be inserted at the data source. If you are using .NET Framework version 1.0, validate the Precision and <xref:System.Data.OleDb.OleDbParameter.Scale%2A> of <xref:System.Decimal> values before setting the parameter value. <xref:System.Data.OleDb.OleDbParameter.Scale%2A> values that exceed the <xref:System.Decimal> parameter scale are still truncated.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [Visual Basic]  \\n  \\n```  \\nPublic Sub CreateOleDbParameter()  \\n    Dim parameter As New OleDbParameter(\\\"Price\\\", OleDbType.Decimal)  \\n    parameter.Value = 3.1416  \\n    parameter.Precision = 8  \\n    parameter.Scale = 4  \\nEnd Sub 'CreateOleDbParameter  \\n```  \\n  \\n [C#]  \\n  \\n```  \\npublic void CreateOleDbParameter()   \\n {  \\n    OleDbParameter parameter = new OleDbParameter(\\\"Price\\\", OleDbType.Decimal);  \\n    parameter.Value = 3.1416;  \\n    parameter.Precision = 8;  \\n    parameter.Scale = 4;  \\n }  \\n```\"\n  syntax:\n    content: public byte Precision { get; set; }\n    return:\n      type: System.Byte\n      description: The maximum number of digits used to represent the <xref:System.Data.OleDb.OleDbParameter.Value*> property. The default value is 0, which indicates that the data provider sets the precision for <xref:System.Data.OleDb.OleDbParameter.Value*>.\n  overload: System.Data.OleDb.OleDbParameter.Precision*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.ResetDbType\n  id: ResetDbType\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: ResetDbType()\n  nameWithType: OleDbParameter.ResetDbType()\n  fullName: System.Data.OleDb.OleDbParameter.ResetDbType()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Resets the type associated with this <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>.\n  remarks: When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties of the <xref:System.Data.OleDb.OleDbParameter>.\n  syntax:\n    content: public override void ResetDbType ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbParameter.ResetDbType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.ResetOleDbType\n  id: ResetOleDbType\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: ResetOleDbType()\n  nameWithType: OleDbParameter.ResetOleDbType()\n  fullName: System.Data.OleDb.OleDbParameter.ResetOleDbType()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Resets the type associated with this <xref href=\"System.Data.OleDb.OleDbParameter\"></xref>.\n  remarks: When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties of the <xref:System.Data.OleDb.OleDbParameter>.\n  syntax:\n    content: public void ResetOleDbType ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbParameter.ResetOleDbType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.Scale\n  id: Scale\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: Scale\n  nameWithType: OleDbParameter.Scale\n  fullName: System.Data.OleDb.OleDbParameter.Scale\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved.\n  remarks: \"The Scale property is only used for decimal and numeric input parameters before calling the <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> method of the <xref:System.Data.OleDb.OleDbCommand> and to specify numeric output parameters.  \\n  \\n Setting this property to a value other than the value in the database depends on the implementation of the data provider and may return an error code, truncate, or round data.  \\n  \\n When using SQL Server Native Client 10 (or later), to bind a parameter whose type is `Decimal`, `Numeric,``VarNumeric, DBDate`, or `DBTimeStamp`, you must manually specify an appropriate scale value.  \\n  \\n> [!NOTE]\\n>  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.  \\n  \\n> [!NOTE]\\n>  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the <xref:System.Data.OleDb.OleDbParameter.Precision%2A> or Scale of <xref:System.Decimal> parameter values. This can cause truncated data to be inserted at the data source. If you are using .NET Framework version 1.0, validate the <xref:System.Data.OleDb.OleDbParameter.Precision%2A> and <xref:System.Data.OleDb.OleDbParameter> of <xref:System.Decimal> values before setting the parameter value. Scale values that exceed the <xref:System.Decimal> parameter scale are still truncated.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [Visual Basic]  \\n  \\n```  \\nPublic Sub CreateOleDbParameter()  \\n    Dim parameter As New OleDbParameter(\\\"Price\\\", OleDbType.Decimal)  \\n    parameter.Value = 3.1416  \\n    parameter.Precision = 8  \\n    parameter.Scale = 4  \\nEnd Sub 'CreateOleDbParameter  \\n```  \\n  \\n [C#]  \\n  \\n```  \\npublic void CreateOleDbParameter()   \\n {  \\n    OleDbParameter parameter = new OleDbParameter(\\\"Price\\\", OleDbType.Decimal);  \\n    parameter.Value = 3.1416;  \\n    parameter.Precision = 8;  \\n    parameter.Scale = 4;  \\n }  \\n```\"\n  syntax:\n    content: public byte Scale { get; set; }\n    return:\n      type: System.Byte\n      description: The number of decimal places to which <xref:System.Data.OleDb.OleDbParameter.Value*> is resolved. The default is 0.\n  overload: System.Data.OleDb.OleDbParameter.Scale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.Size\n  id: Size\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: Size\n  nameWithType: OleDbParameter.Size\n  fullName: System.Data.OleDb.OleDbParameter.Size\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the maximum size, in bytes, of the data within the column.\n  remarks: \"The Size property is used for binary and string types.  \\n  \\n For nonstring data types and ANSI string data, the Size property refers to the number of bytes. For Unicode string data, Size refers to the number of characters. The count for strings does not include the terminating character.  \\n  \\n For variable-length data types, Size describes the maximum amount of data to transmit to the server. For example, for a Unicode string value, Size could be used to limit the amount of data sent to the server to the first 100 characters.  \\n  \\n For bidirectional and output parameters, and return values, you must set the value of Size. This is not required for input parameters, and if not explicitly set, the value of is inferred from the actual size of the specified parameter when a parameterized statement is executed.  \\n  \\n The <xref:System.Data.OleDb.OleDbParameter.DbType%2A>, <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>, and Size properties of a parameter can be inferred by setting <xref:System.Data.OleDb.OleDbParameter.Value%2A>. Therefore, you are not required to specify them. However, they are not exposed in <xref:System.Data.OleDb.OleDbParameter> property settings. For example, if the size of the parameter has been inferred, Size does not contain the inferred value after statement execution.  \\n  \\n For fixed-length data types, the value of Size is ignored. It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.  \\n  \\n If the size of the value supplied for an <xref:System.Data.OleDb.OleDbParameter> exceeds the specified Size, the <xref:System.Data.OleDb.OleDbParameter.Value%2A> of the <xref:System.Data.OleDb.OleDbParameter> contains the specified value, truncated to the size of the <xref:System.Data.OleDb.OleDbParameter>.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [Visual Basic]  \\n  \\n```  \\nPublic Sub CreateOleDbParameter()  \\n    Dim myValue As String = \\\"12 foot scarf - multiple colors, one previous owner\\\"  \\n    Dim parameter As New OleDbParameter(\\\"Description\\\", OleDbType.VarChar)  \\n    parameter.Direction = ParameterDirection.Output  \\n    parameter.Size = myValue.Length  \\n    parameter.Value = myValue  \\nEnd Sub 'CreateOleDbParameter  \\n```  \\n  \\n [C#]  \\n  \\n```  \\npublic void CreateOleDbParameter()   \\n {  \\n    string myValue = \\\"12 foot scarf - multiple colors, one previous owner\\\";  \\n    OleDbParameter parameter = new OleDbParameter(\\\"Description\\\", OleDbType.VarChar);  \\n    parameter.Direction = ParameterDirection.Output;  \\n    parameter.Size = myValue.Length;  \\n    parameter.Value = myValue;  \\n }  \\n```\"\n  syntax:\n    content: public override int Size { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.\n  overload: System.Data.OleDb.OleDbParameter.Size*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.SourceColumn\n  id: SourceColumn\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: SourceColumn\n  nameWithType: OleDbParameter.SourceColumn\n  fullName: System.Data.OleDb.OleDbParameter.SourceColumn\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref> and used for loading or returning the <xref:System.Data.OleDb.OleDbParameter.Value*>.\n  remarks: \"When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the SourceColumn name. If <xref:System.Data.OleDb.OleDbParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>. If <xref:System.Data.OleDb.OleDbParameter.Direction%2A> is set to `Output`, the value is taken from the data source. A <xref:System.Data.OleDb.OleDbParameter.Direction%2A> of `InputOutput` is a combination of both.  \\n  \\n For more information about how to use the SourceColumn property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md) and [Updating Data Sources with DataAdapters](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [Visual Basic]  \\n  \\n```  \\nPublic Sub CreateOleDbParameter()  \\n    Dim parameter As New OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88)  \\n    parameter.SourceColumn = \\\"Description\\\"  \\nEnd Sub 'CreateOleDbParameter  \\n```  \\n  \\n [C#]  \\n  \\n```  \\npublic void CreateOleDbParameter()   \\n {  \\n    OleDbParameter parameter = new OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88);  \\n    parameter.SourceColumn = \\\"Description\\\";  \\n }  \\n```\"\n  syntax:\n    content: public override string SourceColumn { get; set; }\n    return:\n      type: System.String\n      description: The name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref>. The default is an empty string.\n  overload: System.Data.OleDb.OleDbParameter.SourceColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping\n  id: SourceColumnNullMapping\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: SourceColumnNullMapping\n  nameWithType: OleDbParameter.SourceColumnNullMapping\n  fullName: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Sets or gets a value which indicates whether the source column is nullable. This allows <xref href=\"System.Data.Common.DbCommandBuilder\"></xref> to correctly generate Update statements for nullable columns.\n  remarks: \"SourceColumnNullMapping is used by the <xref:System.Data.Common.DbCommandBuilder> to correctly generate update commands when dealing with nullable columns. Generally, use of SourceColumnNullMapping is limited to developers inheriting from <xref:System.Data.Common.DbCommandBuilder>.  \\n  \\n <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not. When <xref:System.Data.Common.DbCommandBuilder> is generating its Update statement, it examines the SourceColumnNullMapping for each parameter. If the property is `true`, <xref:System.Data.Common.DbCommandBuilder> generates a WHERE clauses like the following (in this query expression, \\\"FieldName\\\" represents the name of the field):  \\n  \\n```  \\n((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   \\n  (FieldName = @Original_FieldName))  \\n```  \\n  \\n If SourceColumnNullMapping for the field is false, <xref:System.Data.Common.DbCommandBuilder> generates the following WHERE clause:  \\n  \\n```  \\nFieldName = @OriginalFieldName  \\n```  \\n  \\n In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not. This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.\"\n  syntax:\n    content: public override bool SourceColumnNullMapping { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the source column is nullable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not.\n  overload: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.SourceVersion\n  id: SourceVersion\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: SourceVersion\n  nameWithType: OleDbParameter.SourceVersion\n  fullName: System.Data.OleDb.OleDbParameter.SourceVersion\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the <xref href=\"System.Data.DataRowVersion\"></xref> to use when you load <xref:System.Data.OleDb.OleDbParameter.Value*>.\n  remarks: Used by <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> during an update operation to determine whether the parameter value is set to `Current` or `Original`. This lets primary keys be updated. This property is set to the version of the <xref:System.Data.DataRow> used by the <xref:System.Data.DataRow.Item%2A> property, or the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> object.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [Visual Basic]  \\n  \\n```  \\nPublic Sub CreateOleDbParameter()  \\n    Dim parameter As New OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88)  \\n    parameter.SourceColumn = \\\"Description\\\"  \\n    parameter.SourceVersion = DataRowVersion.Current  \\nEnd Sub  \\n```  \\n  \\n [C#]  \\n  \\n```  \\npublic void CreateOleDbParameter()   \\n {  \\n    OleDbParameter parameter = new OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88);  \\n    parameter.SourceColumn = \\\"Description\\\";  \\n    parameter.SourceVersion = DataRowVersion.Current;  \\n }  \\n```\"\n  syntax:\n    content: public override System.Data.DataRowVersion SourceVersion { get; set; }\n    return:\n      type: System.Data.DataRowVersion\n      description: One of the <xref href=\"System.Data.DataRowVersion\"></xref> values. The default is <xref uid=\"langword_csharp_Current\" name=\"Current\" href=\"\"></xref>.\n  overload: System.Data.OleDb.OleDbParameter.SourceVersion*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The property was not set to one of the <xref href=\"System.Data.DataRowVersion\"></xref> values.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: System.ICloneable.Clone()\n  nameWithType: OleDbParameter.System.ICloneable.Clone()\n  fullName: System.Data.OleDb.OleDbParameter.System.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbParameter> instance is cast to an <xref:System.ICloneable> interface.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new <xref:System.Object> that is a copy of this instance.\n  overload: System.Data.OleDb.OleDbParameter.System#ICloneable#Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.ToString\n  id: ToString\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: OleDbParameter.ToString()\n  fullName: System.Data.OleDb.OleDbParameter.ToString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets a string that contains the <xref:System.Data.OleDb.OleDbParameter.ParameterName*>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the <xref:System.Data.OleDb.OleDbParameter.ParameterName*>.\n  overload: System.Data.OleDb.OleDbParameter.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbParameter.Value\n  id: Value\n  parent: System.Data.OleDb.OleDbParameter\n  langs:\n  - csharp\n  name: Value\n  nameWithType: OleDbParameter.Value\n  fullName: System.Data.OleDb.OleDbParameter.Value\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the value of the parameter.\n  remarks: \"For input parameters, the value is bound to the <xref:System.Data.OleDb.OleDbCommand> that is sent to the server. For output and return value parameters, the value is set on completion of the <xref:System.Data.OleDb.OleDbCommand> and after the <xref:System.Data.OleDb.OleDbDataReader> is closed.  \\n  \\n When you send a null parameter value to the server, you must specify <xref:System.DBNull>, not null. The null value in the system is an empty object that has no value. <xref:System.DBNull> is used to represent null values.  \\n  \\n If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.  \\n  \\n Both the <xref:System.Data.OleDb.OleDbParameter.DbType%2A> and <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> properties can be inferred by setting the Value.  \\n  \\n The Value property is overwritten by the Update method of <xref:System.Data.IDbDataAdapter>.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbParameter> and sets some of its properties.  \\n  \\n [Visual Basic]  \\n  \\n```  \\nPublic Sub CreateOleDbParameter()  \\n    Dim parameter As New OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88)  \\n    parameter.Value = \\\"garden hose\\\"  \\nEnd Sub 'CreateOleDbParameter  \\n```  \\n  \\n [C#]  \\n  \\n```  \\npublic void CreateOleDbParameter()   \\n {  \\n    OleDbParameter parameter = new OleDbParameter(\\\"Description\\\", OleDbType.VarChar, 88);  \\n    parameter.Value = \\\"garden hose\\\";  \\n }  \\n```\"\n  syntax:\n    content: public override object Value { get; set; }\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that is the value of the parameter. The default value is null.\n  overload: System.Data.OleDb.OleDbParameter.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.DbParameter\n  isExternal: false\n  name: System.Data.Common.DbParameter\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Data.OleDb.OleDbParameter.#ctor\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: OleDbParameter()\n  nameWithType: OleDbParameter.OleDbParameter()\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter()\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: OleDbParameter(String,OleDbType)\n  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.OleDb.OleDbType\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbType\n  nameWithType: OleDbType\n  fullName: System.Data.OleDb.OleDbType\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: OleDbParameter(String,Object)\n  nameWithType: OleDbParameter.OleDbParameter(String,Object)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: OleDbParameter(String,OleDbType,Int32)\n  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: OleDbParameter(String,OleDbType,Int32,String)\n  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,String)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,String)\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)\n- uid: System.Data.ParameterDirection\n  parent: System.Data\n  isExternal: false\n  name: ParameterDirection\n  nameWithType: ParameterDirection\n  fullName: System.Data.ParameterDirection\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.DataRowVersion\n  parent: System.Data\n  isExternal: false\n  name: DataRowVersion\n  nameWithType: DataRowVersion\n  fullName: System.Data.DataRowVersion\n- uid: System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n  nameWithType: OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n  fullName: System.Data.OleDb.OleDbParameter.OleDbParameter(String,OleDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)\n- uid: System.Data.OleDb.OleDbParameter.DbType\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: DbType\n  nameWithType: OleDbParameter.DbType\n  fullName: System.Data.OleDb.OleDbParameter.DbType\n- uid: System.Data.DbType\n  parent: System.Data\n  isExternal: false\n  name: DbType\n  nameWithType: DbType\n  fullName: System.Data.DbType\n- uid: System.Data.OleDb.OleDbParameter.Direction\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: Direction\n  nameWithType: OleDbParameter.Direction\n  fullName: System.Data.OleDb.OleDbParameter.Direction\n- uid: System.Data.OleDb.OleDbParameter.IsNullable\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: IsNullable\n  nameWithType: OleDbParameter.IsNullable\n  fullName: System.Data.OleDb.OleDbParameter.IsNullable\n- uid: System.Data.OleDb.OleDbParameter.OleDbType\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: OleDbType\n  nameWithType: OleDbParameter.OleDbType\n  fullName: System.Data.OleDb.OleDbParameter.OleDbType\n- uid: System.Data.OleDb.OleDbParameter.ParameterName\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: ParameterName\n  nameWithType: OleDbParameter.ParameterName\n  fullName: System.Data.OleDb.OleDbParameter.ParameterName\n- uid: System.Data.OleDb.OleDbParameter.Precision\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: Precision\n  nameWithType: OleDbParameter.Precision\n  fullName: System.Data.OleDb.OleDbParameter.Precision\n- uid: System.Data.OleDb.OleDbParameter.ResetDbType\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: ResetDbType()\n  nameWithType: OleDbParameter.ResetDbType()\n  fullName: System.Data.OleDb.OleDbParameter.ResetDbType()\n- uid: System.Data.OleDb.OleDbParameter.ResetOleDbType\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: ResetOleDbType()\n  nameWithType: OleDbParameter.ResetOleDbType()\n  fullName: System.Data.OleDb.OleDbParameter.ResetOleDbType()\n- uid: System.Data.OleDb.OleDbParameter.Scale\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: Scale\n  nameWithType: OleDbParameter.Scale\n  fullName: System.Data.OleDb.OleDbParameter.Scale\n- uid: System.Data.OleDb.OleDbParameter.Size\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: Size\n  nameWithType: OleDbParameter.Size\n  fullName: System.Data.OleDb.OleDbParameter.Size\n- uid: System.Data.OleDb.OleDbParameter.SourceColumn\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: SourceColumn\n  nameWithType: OleDbParameter.SourceColumn\n  fullName: System.Data.OleDb.OleDbParameter.SourceColumn\n- uid: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: SourceColumnNullMapping\n  nameWithType: OleDbParameter.SourceColumnNullMapping\n  fullName: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping\n- uid: System.Data.OleDb.OleDbParameter.SourceVersion\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: SourceVersion\n  nameWithType: OleDbParameter.SourceVersion\n  fullName: System.Data.OleDb.OleDbParameter.SourceVersion\n- uid: System.Data.OleDb.OleDbParameter.System#ICloneable#Clone\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: System.ICloneable.Clone()\n  nameWithType: OleDbParameter.System.ICloneable.Clone()\n  fullName: System.Data.OleDb.OleDbParameter.System.ICloneable.Clone()\n- uid: System.Data.OleDb.OleDbParameter.ToString\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: ToString()\n  nameWithType: OleDbParameter.ToString()\n  fullName: System.Data.OleDb.OleDbParameter.ToString()\n- uid: System.Data.OleDb.OleDbParameter.Value\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: Value\n  nameWithType: OleDbParameter.Value\n  fullName: System.Data.OleDb.OleDbParameter.Value\n- uid: System.Data.OleDb.OleDbParameter.#ctor*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: OleDbParameter\n  nameWithType: OleDbParameter.OleDbParameter\n- uid: System.Data.OleDb.OleDbParameter.DbType*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: DbType\n  nameWithType: OleDbParameter.DbType\n- uid: System.Data.OleDb.OleDbParameter.Direction*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: Direction\n  nameWithType: OleDbParameter.Direction\n- uid: System.Data.OleDb.OleDbParameter.IsNullable*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: IsNullable\n  nameWithType: OleDbParameter.IsNullable\n- uid: System.Data.OleDb.OleDbParameter.OleDbType*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: OleDbType\n  nameWithType: OleDbParameter.OleDbType\n- uid: System.Data.OleDb.OleDbParameter.ParameterName*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: ParameterName\n  nameWithType: OleDbParameter.ParameterName\n- uid: System.Data.OleDb.OleDbParameter.Precision*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: Precision\n  nameWithType: OleDbParameter.Precision\n- uid: System.Data.OleDb.OleDbParameter.ResetDbType*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: ResetDbType\n  nameWithType: OleDbParameter.ResetDbType\n- uid: System.Data.OleDb.OleDbParameter.ResetOleDbType*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: ResetOleDbType\n  nameWithType: OleDbParameter.ResetOleDbType\n- uid: System.Data.OleDb.OleDbParameter.Scale*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: Scale\n  nameWithType: OleDbParameter.Scale\n- uid: System.Data.OleDb.OleDbParameter.Size*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: Size\n  nameWithType: OleDbParameter.Size\n- uid: System.Data.OleDb.OleDbParameter.SourceColumn*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: SourceColumn\n  nameWithType: OleDbParameter.SourceColumn\n- uid: System.Data.OleDb.OleDbParameter.SourceColumnNullMapping*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: SourceColumnNullMapping\n  nameWithType: OleDbParameter.SourceColumnNullMapping\n- uid: System.Data.OleDb.OleDbParameter.SourceVersion*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: SourceVersion\n  nameWithType: OleDbParameter.SourceVersion\n- uid: System.Data.OleDb.OleDbParameter.System#ICloneable#Clone*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: OleDbParameter.System.ICloneable.Clone\n- uid: System.Data.OleDb.OleDbParameter.ToString*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: ToString\n  nameWithType: OleDbParameter.ToString\n- uid: System.Data.OleDb.OleDbParameter.Value*\n  parent: System.Data.OleDb.OleDbParameter\n  isExternal: false\n  name: Value\n  nameWithType: OleDbParameter.Value\n"}