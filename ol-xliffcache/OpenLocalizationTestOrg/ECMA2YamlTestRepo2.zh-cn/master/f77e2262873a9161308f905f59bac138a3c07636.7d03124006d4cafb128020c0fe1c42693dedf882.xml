{"nodes":[{"pos":[941,1320],"content":"Specifies address types for local variables, parameters, and fields in the methods &lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable<bpt id=\"p1\">*</bpt>&gt;, &lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter<ept id=\"p1\">*</ept>&gt;, and &lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Specifies address types for local variables, parameters, and fields in the methods <xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable*>, <xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter*>, and <xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField*> of the <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter\"></xref> interface."},{"pos":[1332,1486],"content":"The <ph id=\"ph1\">`addr1`</ph>, <ph id=\"ph2\">`addr2`</ph>, and <ph id=\"ph3\">`addr3`</ph> parameters refer to the address parameters in the &lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt; interface methods.","needQuote":true,"needEscape":true,"source":"The `addr1`, `addr2`, and `addr3` parameters refer to the address parameters in the <xref:System.Diagnostics.SymbolStore.ISymbolWriter> interface methods."},{"pos":[2030,2173],"content":"A bit field. The <code>addr1</code> parameter is the position where the field starts, and the <code>addr2</code> parameter is the field length.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bit field.","pos":[0,12]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the position where the field starts, and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the field length.","pos":[13,143],"source":" The <code>addr1</code> parameter is the position where the field starts, and the <code>addr2</code> parameter is the field length."}]},{"pos":[2295,2307],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2721,2849],"content":"A Microsoft intermediate language (MSIL) offset. The <code>addr1</code> parameter is the MSIL local variable or parameter index.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Microsoft intermediate language (MSIL) offset.","pos":[0,48]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the MSIL local variable or parameter index.","pos":[49,128],"source":" The <code>addr1</code> parameter is the MSIL local variable or parameter index."}]},{"pos":[2971,2983],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3417,3510],"content":"A native offset. The <code>addr1</code> parameter is the offset from the start of the parent.","needQuote":true,"needEscape":true,"nodes":[{"content":"A native offset.","pos":[0,16]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the offset from the start of the parent.","pos":[17,93],"source":" The <code>addr1</code> parameter is the offset from the start of the parent."}]},{"pos":[3636,3648],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4092,4200],"content":"A native register address. The <code>addr1</code> parameter is the register in which the variable is stored.","needQuote":true,"needEscape":true,"nodes":[{"content":"A native register address.","pos":[0,26]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the register in which the variable is stored.","pos":[27,108],"source":" The <code>addr1</code> parameter is the register in which the variable is stored."}]},{"pos":[4328,4340],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4824,4977],"content":"A register-relative address. The <code>addr1</code> parameter is the low-order register, and the <code>addr2</code> parameter is the high-order register.","needQuote":true,"needEscape":true,"nodes":[{"content":"A register-relative address.","pos":[0,28]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the low-order register, and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the high-order register.","pos":[29,153],"source":" The <code>addr1</code> parameter is the low-order register, and the <code>addr2</code> parameter is the high-order register."}]},{"pos":[5113,5125],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5609,5739],"content":"A register-relative address. The <code>addr1</code> parameter is the register, and the <code>addr2</code> parameter is the offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"A register-relative address.","pos":[0,28]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the register, and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the offset.","pos":[29,130],"source":" The <code>addr1</code> parameter is the register, and the <code>addr2</code> parameter is the offset."}]},{"pos":[5875,5887],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6356,6611],"content":"A register-relative address. The <code>addr1</code> parameter is the low-order register, the <code>addr2</code> parameter is the stack register, and the <code>addr3</code> parameter is the offset from the stack pointer to the high-order part of the value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A register-relative address.","pos":[0,28]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the low-order register, the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the stack register, and the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">addr3</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter is the offset from the stack pointer to the high-order part of the value.","pos":[29,255],"source":" The <code>addr1</code> parameter is the low-order register, the <code>addr2</code> parameter is the stack register, and the <code>addr3</code> parameter is the offset from the stack pointer to the high-order part of the value."}]},{"pos":[6744,6756],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7175,7274],"content":"A native Relevant Virtual Address (RVA). The <code>addr1</code> parameter is the RVA in the module.","needQuote":true,"needEscape":true,"nodes":[{"content":"A native Relevant Virtual Address (RVA).","pos":[0,40]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the RVA in the module.","pos":[41,99],"source":" The <code>addr1</code> parameter is the RVA in the module."}]},{"pos":[7397,7409],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7878,8003],"content":"A native section offset. The <code>addr1</code> parameter is the section, and the <code>addr2</code> parameter is the offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"A native section offset.","pos":[0,24]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the section, and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the offset.","pos":[25,125],"source":" The <code>addr1</code> parameter is the section, and the <code>addr2</code> parameter is the offset."}]},{"pos":[8136,8148],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8617,8872],"content":"A register-relative address. The <code>addr1</code> parameter is the stack register, the <code>addr2</code> parameter is the offset from the stack pointer to the low-order part of the value, and the <code>addr3</code> parameter is the high-order register.","needQuote":true,"needEscape":true,"nodes":[{"content":"A register-relative address.","pos":[0,28]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the stack register, the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the offset from the stack pointer to the low-order part of the value, and the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">addr3</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter is the high-order register.","pos":[29,255],"source":" The <code>addr1</code> parameter is the stack register, the <code>addr2</code> parameter is the offset from the stack pointer to the low-order part of the value, and the <code>addr3</code> parameter is the high-order register."}]},{"pos":[9005,9017],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  id: SymAddressKind\n  children:\n  - System.Diagnostics.SymbolStore.SymAddressKind.BitField\n  - System.Diagnostics.SymbolStore.SymAddressKind.ILOffset\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister\n  langs:\n  - csharp\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n  type: Enum\n  summary: Specifies address types for local variables, parameters, and fields in the methods <xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable*>, <xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter*>, and <xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField*> of the <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter\"></xref> interface.\n  remarks: The `addr1`, `addr2`, and `addr3` parameters refer to the address parameters in the <xref:System.Diagnostics.SymbolStore.ISymbolWriter> interface methods.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum SymAddressKind\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.BitField\n  id: BitField\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: BitField\n  nameWithType: SymAddressKind.BitField\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.BitField\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: A bit field. The <code>addr1</code> parameter is the position where the field starts, and the <code>addr2</code> parameter is the field length.\n  syntax:\n    content: BitField\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.ILOffset\n  id: ILOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: ILOffset\n  nameWithType: SymAddressKind.ILOffset\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.ILOffset\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: A Microsoft intermediate language (MSIL) offset. The <code>addr1</code> parameter is the MSIL local variable or parameter index.\n  syntax:\n    content: ILOffset\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset\n  id: NativeOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeOffset\n  nameWithType: SymAddressKind.NativeOffset\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: A native offset. The <code>addr1</code> parameter is the offset from the start of the parent.\n  syntax:\n    content: NativeOffset\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister\n  id: NativeRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeRegister\n  nameWithType: SymAddressKind.NativeRegister\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: A native register address. The <code>addr1</code> parameter is the register in which the variable is stored.\n  syntax:\n    content: NativeRegister\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister\n  id: NativeRegisterRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeRegisterRegister\n  nameWithType: SymAddressKind.NativeRegisterRegister\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: A register-relative address. The <code>addr1</code> parameter is the low-order register, and the <code>addr2</code> parameter is the high-order register.\n  syntax:\n    content: NativeRegisterRegister\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative\n  id: NativeRegisterRelative\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeRegisterRelative\n  nameWithType: SymAddressKind.NativeRegisterRelative\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: A register-relative address. The <code>addr1</code> parameter is the register, and the <code>addr2</code> parameter is the offset.\n  syntax:\n    content: NativeRegisterRelative\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack\n  id: NativeRegisterStack\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeRegisterStack\n  nameWithType: SymAddressKind.NativeRegisterStack\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: A register-relative address. The <code>addr1</code> parameter is the low-order register, the <code>addr2</code> parameter is the stack register, and the <code>addr3</code> parameter is the offset from the stack pointer to the high-order part of the value.\n  syntax:\n    content: NativeRegisterStack\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA\n  id: NativeRVA\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeRVA\n  nameWithType: SymAddressKind.NativeRVA\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: A native Relevant Virtual Address (RVA). The <code>addr1</code> parameter is the RVA in the module.\n  syntax:\n    content: NativeRVA\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset\n  id: NativeSectionOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeSectionOffset\n  nameWithType: SymAddressKind.NativeSectionOffset\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: A native section offset. The <code>addr1</code> parameter is the section, and the <code>addr2</code> parameter is the offset.\n  syntax:\n    content: NativeSectionOffset\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister\n  id: NativeStackRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeStackRegister\n  nameWithType: SymAddressKind.NativeStackRegister\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: A register-relative address. The <code>addr1</code> parameter is the stack register, the <code>addr2</code> parameter is the offset from the stack pointer to the low-order part of the value, and the <code>addr3</code> parameter is the high-order register.\n  syntax:\n    content: NativeStackRegister\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.BitField\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: BitField\n  nameWithType: SymAddressKind.BitField\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.BitField\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.ILOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: ILOffset\n  nameWithType: SymAddressKind.ILOffset\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.ILOffset\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeOffset\n  nameWithType: SymAddressKind.NativeOffset\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeRegister\n  nameWithType: SymAddressKind.NativeRegister\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeRegisterRegister\n  nameWithType: SymAddressKind.NativeRegisterRegister\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeRegisterRelative\n  nameWithType: SymAddressKind.NativeRegisterRelative\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeRegisterStack\n  nameWithType: SymAddressKind.NativeRegisterStack\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeRVA\n  nameWithType: SymAddressKind.NativeRVA\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeSectionOffset\n  nameWithType: SymAddressKind.NativeSectionOffset\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeStackRegister\n  nameWithType: SymAddressKind.NativeStackRegister\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister\n"}