{"nodes":[{"pos":[2871,2998],"content":"Exposes the public members of the &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; class to unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes the public members of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.PropertyInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> class to unmanaged code.","pos":[0,127],"source":"Exposes the public members of the &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; class to unmanaged code."}]},{"pos":[3011,3303],"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.       This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","needQuote":false,"needEscape":true,"nodes":[{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.       This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","pos":[0,290],"nodes":[{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,111]},{"content":"This interface preserves the vtable order of the &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.","pos":[118,290],"source":"       This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."}]}]},{"pos":[4190,4309],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.Attributes*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.Attributes*&gt; property.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.Attributes*> property."}]},{"pos":[4322,4543],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.","pos":[0,219],"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.Attributes%2A&gt; property gets the attributes of this property.","pos":[117,219],"source":"       The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property."}]}]},{"pos":[4712,4744],"content":"The attributes of this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attributes of this property.","pos":[0,32]}]},{"pos":[5221,5337],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.CanRead*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.CanRead*&gt; property.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.CanRead*> property."}]},{"pos":[5350,5588],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.","pos":[0,236],"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.CanRead%2A&gt; property gets a value indicating whether the property can be read.","pos":[117,236],"source":"       The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read."}]}]},{"pos":[5700,5865],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this property can be read; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this property can be read; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6344,6461],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.CanWrite*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.CanWrite*&gt; property.","pos":[0,117],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.CanWrite*> property."}]},{"pos":[6474,6719],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.","pos":[0,243],"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.CanWrite%2A&gt; property gets a value indicating whether the property can be written to.","pos":[117,243],"source":"       The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to."}]}]},{"pos":[6832,7003],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this property can be written to; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this property can be written to; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7508,7628],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.","pos":[0,120],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property."}]},{"pos":[7641,7867],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","pos":[0,224],"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]},{"content":"The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.","pos":[117,224],"source":"       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member."}]}]},{"pos":[7982,8094],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the class that declares this member.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> object for the class that declares this member."},{"pos":[8621,8717],"content":"Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.","pos":[0,96],"source":"Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method."}]},{"pos":[8730,8988],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","pos":[0,256],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.","pos":[115,256],"source":"       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>."}]}]},{"pos":[9125,9199],"content":"The <xref:System.Object> to compare with the current <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.","pos":[0,74],"source":"The <xref:System.Object> to compare with the current <xref:System.Object>."}]},{"pos":[9258,9477],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current <xref:System.Object>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9979,10098],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetAccessors*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetAccessors*&gt; method.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetAccessors*> method."}]},{"pos":[10111,10428],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt; method returns an array whose elements reflect the public <ph id=\"ph1\">`get`</ph>, <ph id=\"ph2\">`set`</ph>, and other accessors of the property reflected by the current instance.","pos":[115,315],"source":"       The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance."}]},{"pos":[10601,10959],"content":"An array of &lt;xref:System.Reflection.MethodInfo&gt; objects that reflect the public <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.","needQuote":true,"needEscape":true,"source":"An array of <xref:System.Reflection.MethodInfo> objects that reflect the public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements."},{"pos":[11520,11639],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetAccessors*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetAccessors*&gt; method.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetAccessors*> method."}]},{"pos":[11652,11999],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt; method returns an array whose elements reflect the public and, if specified, non-public <ph id=\"ph1\">`get`</ph>, <ph id=\"ph2\">`set`</ph>, and other accessors of the property reflected by the current instance.","pos":[115,345],"source":"       The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance."}]},{"pos":[12175,12436],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include non-public methods in the returned <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_MethodInfo\" name=\"MethodInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> array; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include non-public methods in the returned <xref uid=\"langword_csharp_MethodInfo\" name=\"MethodInfo\" href=\"\"></xref> array; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12511,13448],"content":"An array of <xref:System.Reflection.MethodInfo> objects whose elements reflect the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors of the property reflected by the current instance. If the <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this array contains public and non-public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors. If <code>nonPublic</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this array contains only public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors. If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Reflection.MethodInfo&gt; objects whose elements reflect the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and other accessors of the property reflected by the current instance.","pos":[0,273],"source":"An array of <xref:System.Reflection.MethodInfo> objects whose elements reflect the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors of the property reflected by the current instance."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this array contains public and non-public <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, and other accessors.","pos":[274,561],"source":" If the <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this array contains public and non-public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this array contains only public <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, and other accessors.","pos":[562,827],"source":" If <code>nonPublic</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this array contains only public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors."},{"content":"If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.","pos":[828,937]}]},{"pos":[14044,14168],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.","pos":[0,124],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method."}]},{"pos":[14181,14422],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.","pos":[0,239],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array containing all the custom attributes.","pos":[115,239],"source":"       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes."}]}]},{"pos":[14579,14666],"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","needQuote":true,"needEscape":true,"nodes":[{"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","pos":[0,87]}]},{"pos":[14726,14836],"content":"An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.","pos":[0,110]}]},{"pos":[15478,15602],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.","pos":[0,124],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method."}]},{"pos":[15615,15873],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","pos":[0,256],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.","pos":[115,256],"source":"       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>."}]}]},{"pos":[16053,16152],"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","pos":[0,99],"nodes":[{"content":"The type of attribute to search for.","pos":[0,36]},{"content":"Only attributes that are assignable to this type are returned.","pos":[37,99]}]}]},{"pos":[16217,16304],"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","needQuote":true,"needEscape":true,"nodes":[{"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","pos":[0,87]}]},{"pos":[16364,16488],"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","pos":[0,124]}]},{"pos":[17003,17122],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetGetMethod*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetGetMethod*&gt; method.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetGetMethod*> method."}]},{"pos":[17135,17369],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt; method returns the public <ph id=\"ph1\">`get`</ph> accessor for this property.","pos":[115,232],"source":"       The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property."}]},{"pos":[17538,17865],"content":"A &lt;xref:System.Reflection.MethodInfo&gt; object representing the public <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor for this property, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> accessor is non-public or does not exist.","needQuote":true,"needEscape":true,"source":"A <xref:System.Reflection.MethodInfo> object representing the public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor for this property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor is non-public or does not exist."},{"pos":[18426,18545],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetGetMethod*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetGetMethod*&gt; method.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetGetMethod*> method."}]},{"pos":[18558,18806],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt; method returns the public or non-public <ph id=\"ph1\">`get`</ph> accessor for this property.","pos":[115,246],"source":"       The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property."}]},{"pos":[18980,19207],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return a non-public <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return a non-public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19280,19956],"content":"A <xref:System.Reflection.MethodInfo> object representing the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor for this property, if the <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>. Or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>nonPublic</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor is non-public, or if <code>nonPublic</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> but no <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessors exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Reflection.MethodInfo&gt; object representing the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor for this property, if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,253],"source":"A <xref:System.Reflection.MethodInfo> object representing the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor for this property, if the <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"content":"Or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and the <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> accessor is non-public, or if <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph2\">nonPublic</ph><ept id=\"p5\">&lt;/code&gt;</ept> is <bpt id=\"p6\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept> but no <bpt id=\"p7\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept> accessors exist.","pos":[254,676],"source":" Or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>nonPublic</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor is non-public, or if <code>nonPublic</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> but no <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessors exist."}]},{"pos":[20459,20560],"content":"Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.","pos":[0,101],"source":"Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method."}]},{"pos":[20573,20905],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,330],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.","pos":[115,210],"source":"       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type."},{"content":"&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[211,330],"source":" <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table."}]}]},{"pos":[21032,21071],"content":"The hash code for the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code for the current instance.","pos":[0,39]}]},{"pos":[21819,21886],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]},{"pos":[21898,22083],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[109,185],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]},{"pos":[22283,22325],"content":"Reserved for future use. Must be IID_NULL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]},{"pos":[22391,22422],"content":"An array of names to be mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of names to be mapped.","pos":[0,31]}]},{"pos":[22485,22521],"content":"The count of the names to be mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"The count of the names to be mapped.","pos":[0,36]}]},{"pos":[22582,22633],"content":"The locale context in which to interpret the names.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]},{"pos":[22698,22788],"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","pos":[0,90]}]},{"pos":[23327,23452],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetIndexParameters*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetIndexParameters*&gt; method.","pos":[0,125],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetIndexParameters*> method."}]},{"pos":[23465,23714],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property","pos":[0,247],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.GetIndexParameters%2A&gt; method returns an array of all the index parameters for the property","pos":[115,247],"source":"       The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property"}]}]},{"pos":[23899,23997],"content":"An array of type <xref:System.Reflection.ParameterInfo> containing the parameters for the indexes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Reflection.ParameterInfo&gt; containing the parameters for the indexes.","pos":[0,98],"source":"An array of type <xref:System.Reflection.ParameterInfo> containing the parameters for the indexes."}]},{"pos":[24511,24630],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetSetMethod*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetSetMethod*&gt; method.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetSetMethod*> method."}]},{"pos":[24643,24877],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt; method returns the public <ph id=\"ph1\">`set`</ph> accessor for this property.","pos":[115,232],"source":"       The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property."}]},{"pos":[25046,25433],"content":"The &lt;xref:System.Reflection.MethodInfo&gt; object representing the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method for this property if the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> accessor is public, or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> accessor is not public.","needQuote":true,"needEscape":true,"source":"The <xref:System.Reflection.MethodInfo> object representing the <xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"></xref> method for this property if the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is public, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is not public."},{"pos":[25994,26113],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetSetMethod*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetSetMethod*&gt; method.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetSetMethod*> method."}]},{"pos":[26126,26353],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt; method returns the <ph id=\"ph1\">`set`</ph> accessor for this property.","pos":[115,225],"source":"       The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property."}]},{"pos":[26527,26695],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return a non-public accessor; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return a non-public accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26769,28011],"content":"One of the values in the following table.       <table><thead><tr><th> Value       </th><th> Meaning       </th></tr></thead><tbody><tr><td> A <xref:System.Reflection.MethodInfo> object representing the <xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"></xref> method for this property.       </td><td> The <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is public.       -or-       The <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is non-public.       </td></tr><tr><td><xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref></td><td> The <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the property is read-only.       -or-       The <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is non-public.       -or-       There is no <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor.       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"One of the values in the following table.       ","pos":[0,48],"nodes":[{"content":"One of the values in the following table.","pos":[0,41]}]},{"content":"Value","pos":[71,76]},{"content":"Meaning","pos":[93,100]},{"content":" A <xref:System.Reflection.MethodInfo> object representing the <xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"></xref> method for this property.       ","pos":[140,294],"nodes":[{"content":"A &lt;xref:System.Reflection.MethodInfo&gt; object representing the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method for this property.","pos":[1,147],"source":" A <xref:System.Reflection.MethodInfo> object representing the <xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"></xref> method for this property."}]},{"content":" The <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is public.       -or-       The <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is non-public.       ","pos":[303,602],"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor is public.","pos":[1,83],"source":" The <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is public."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> accessor is non-public.","pos":[90,292],"source":"       -or-       The <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is non-public."}]},{"content":" The <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the property is read-only.       -or-       The <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is non-public.       -or-       There is no <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor.       ","pos":[689,1138],"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, but the property is read-only.","pos":[1,133],"source":" The <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the property is read-only."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> accessor is non-public.","pos":[140,344],"source":"       -or-       The <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is non-public."},{"content":"-or-       There is no <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor.","pos":[351,442],"source":"       -or-       There is no <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor."}]}]},{"pos":[28495,28592],"content":"Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType*&gt; method.","pos":[0,97],"source":"Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method."}]},{"pos":[28605,28803],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.GetType%2A> method gets the type of the current instance.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.GetType%2A> method gets the type of the current instance.","pos":[0,196],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.","pos":[115,196],"source":"       The <xref:System.Object.GetType%2A> method gets the type of the current instance."}]}]},{"pos":[28926,28954],"content":"A <xref:System.Type> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; object.","pos":[0,28],"source":"A <xref:System.Type> object."}]},{"pos":[29598,29707],"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","pos":[0,109]}]},{"pos":[29719,29902],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[109,183],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]},{"pos":[30070,30101],"content":"The type information to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type information to return.","pos":[0,31]}]},{"pos":[30162,30209],"content":"The locale identifier for the type information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]},{"pos":[30273,30324],"content":"A pointer to the requested type information object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to the requested type information object.","pos":[0,51]}]},{"pos":[30901,30993],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]},{"pos":[31005,31193],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[109,188],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]},{"pos":[31345,31523],"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","pos":[0,178],"nodes":[{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.","pos":[0,138]},{"content":"This parameter is passed uninitialized.","pos":[139,178]}]}]},{"pos":[32122,32237],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetValue*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetValue*&gt; method.","pos":[0,115],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetValue*> method."}]},{"pos":[32250,32495],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.","pos":[0,243],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.GetValue%2A&gt; method returns a literal value associated with the property by a compiler.","pos":[115,243],"source":"       The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler."}]}]},{"pos":[32648,32697],"content":"The object whose property value will be returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object whose property value will be returned.","pos":[0,49]}]},{"pos":[32761,32916],"content":"Optional index values for indexed properties. This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Optional index values for indexed properties.","pos":[0,45]},{"content":"This value should be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for non-indexed properties.","pos":[46,155],"source":" This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties."}]},{"pos":[32974,33028],"content":"The property value for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The property value for the <code>obj</code> parameter."},{"pos":[33893,34008],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetValue*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.GetValue*&gt; method.","pos":[0,115],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetValue*> method."}]},{"pos":[34021,34312],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.","pos":[0,289],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.GetValue%2A&gt; method returns the value of a property having the specified binding, index, and &lt;xref:System.Globalization.CultureInfo&gt;.","pos":[115,289],"source":"       The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>."}]}]},{"pos":[34583,34632],"content":"The object whose property value will be returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object whose property value will be returned.","pos":[0,49]}]},{"pos":[34717,35624],"content":"The invocation attribute. This must be a bit flag from <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref>: <xref uid=\"langword_csharp_InvokeMethod\" name=\"InvokeMethod\" href=\"\"></xref>, <xref uid=\"langword_csharp_CreateInstance\" name=\"CreateInstance\" href=\"\"></xref>, <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetField\" name=\"GetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_SetField\" name=\"SetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetProperty\" name=\"GetProperty\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SetProperty\" name=\"SetProperty\" href=\"\"></xref>. A suitable invocation attribute must be specified. If a static member will be invoked, the <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref> flag of <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref> must be set.","needQuote":false,"needEscape":true,"nodes":[{"content":"The invocation attribute.","pos":[0,25]},{"content":"This must be a bit flag from <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>: <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_InvokeMethod\" name=\"InvokeMethod\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_CreateInstance\" name=\"CreateInstance\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_GetField\" name=\"GetField\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>, <bpt id=\"p6\">&lt;xref uid=\"langword_csharp_SetField\" name=\"SetField\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>, <bpt id=\"p7\">&lt;xref uid=\"langword_csharp_GetProperty\" name=\"GetProperty\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept>, or <bpt id=\"p8\">&lt;xref uid=\"langword_csharp_SetProperty\" name=\"SetProperty\" href=\"\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>.","pos":[26,653],"source":" This must be a bit flag from <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref>: <xref uid=\"langword_csharp_InvokeMethod\" name=\"InvokeMethod\" href=\"\"></xref>, <xref uid=\"langword_csharp_CreateInstance\" name=\"CreateInstance\" href=\"\"></xref>, <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetField\" name=\"GetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_SetField\" name=\"SetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetProperty\" name=\"GetProperty\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SetProperty\" name=\"SetProperty\" href=\"\"></xref>."},{"content":"A suitable invocation attribute must be specified.","pos":[654,704]},{"content":"If a static member will be invoked, the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> flag of <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> must be set.","pos":[705,907],"source":" If a static member will be invoked, the <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref> flag of <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref> must be set."}]},{"pos":[35699,36008],"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref uid=\"langword_csharp_MemberInfo\" name=\"MemberInfo\" href=\"\"></xref> objects through reflection. If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the default binder is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MemberInfo\" name=\"MemberInfo\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects through reflection.","pos":[0,204],"source":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref uid=\"langword_csharp_MemberInfo\" name=\"MemberInfo\" href=\"\"></xref> objects through reflection."},{"content":"If <ph id=\"ph1\">`binder`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the default binder is used.","pos":[205,309],"source":" If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the default binder is used."}]},{"pos":[36072,36227],"content":"Optional index values for indexed properties. This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Optional index values for indexed properties.","pos":[0,45]},{"content":"This value should be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for non-indexed properties.","pos":[46,155],"source":" This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties."}]},{"pos":[36310,36974],"content":"The <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the <xref uid=\"langword_csharp_CultureInfo.Parent\" name=\"CultureInfo.Parent\" href=\"\"></xref> method will be called successively in search of a match. If this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> is obtained from the <xref uid=\"langword_csharp_CultureInfo.CurrentUICulture\" name=\"CultureInfo.CurrentUICulture\" href=\"\"></xref> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the culture for which the resource will be localized.","pos":[0,155],"source":"The <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> object that represents the culture for which the resource will be localized."},{"content":"Note that if the resource is not localized for this culture, the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_CultureInfo.Parent\" name=\"CultureInfo.Parent\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method will be called successively in search of a match.","pos":[156,366],"source":" Note that if the resource is not localized for this culture, the <xref uid=\"langword_csharp_CultureInfo.Parent\" name=\"CultureInfo.Parent\" href=\"\"></xref> method will be called successively in search of a match."},{"content":"If this value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is obtained from the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_CultureInfo.CurrentUICulture\" name=\"CultureInfo.CurrentUICulture\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> property.","pos":[367,664],"source":" If this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> is obtained from the <xref uid=\"langword_csharp_CultureInfo.CurrentUICulture\" name=\"CultureInfo.CurrentUICulture\" href=\"\"></xref> property."}]},{"pos":[37032,37086],"content":"The property value for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The property value for the <code>obj</code> parameter."},{"pos":[37938,38001],"content":"Provides access to properties and methods exposed by an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]},{"pos":[38013,38191],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[109,178],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]},{"pos":[38454,38480],"content":"An identifier of a member.","needQuote":true,"needEscape":true,"nodes":[{"content":"An identifier of a member.","pos":[0,26]}]},{"pos":[38539,38581],"content":"Reserved for future use. Must be IID_NULL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]},{"pos":[38642,38693],"content":"The locale context in which to interpret arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]},{"pos":[38755,38796],"content":"Flags describing the context of the call.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]},{"pos":[38864,39025],"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,161]}]},{"pos":[39092,39150],"content":"A pointer to the location where the result will be stored.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to the location where the result will be stored.","pos":[0,58]}]},{"pos":[39217,39278],"content":"A pointer to a structure that contains exception information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to a structure that contains exception information.","pos":[0,61]}]},{"pos":[39343,39393],"content":"The index of the first argument that has an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]},{"pos":[39972,40086],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; method.","pos":[0,114],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> method."}]},{"pos":[40099,40374],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; method indicates whether one or more instance of the <ph id=\"ph1\">`attributeType`</ph> parameter is applied to this member.","pos":[115,273],"source":"       The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member."}]},{"pos":[40540,40613],"content":"The <xref:System.Type> object to which the custom attributes are applied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; object to which the custom attributes are applied.","pos":[0,73],"source":"The <xref:System.Type> object to which the custom attributes are applied."}]},{"pos":[40678,40765],"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","needQuote":true,"needEscape":true,"nodes":[{"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","pos":[0,87]}]},{"pos":[40824,41056],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if one or more instances of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">attributeType</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter are applied to this member; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if one or more instances of the <code>attributeType</code> parameter are applied to this member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[41562,41684],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.IsSpecialName*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.IsSpecialName*&gt; property.","pos":[0,122],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.IsSpecialName*> property."}]},{"pos":[41697,41949],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.","pos":[0,250],"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.IsSpecialName%2A&gt; property sets a value indicating whether the property is the special name.","pos":[117,250],"source":"       The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name."}]}]},{"pos":[42067,42240],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this property is the special name; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this property is the special name; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[42735,42854],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.MemberType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.MemberType*&gt; property.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.MemberType*> property."}]},{"pos":[42867,43143],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.","pos":[0,274],"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating that this member is a property.","pos":[117,274],"source":"       The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property."}]}]},{"pos":[43298,43409],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values indicating that this member is a property.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Reflection.MemberTypes\"></xref> values indicating that this member is a property."},{"pos":[43871,43982],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.","pos":[0,111],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property."}]},{"pos":[43995,44207],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","pos":[0,210],"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]},{"content":"The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.","pos":[117,210],"source":"       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member."}]}]},{"pos":[44317,44382],"content":"A <xref:System.String> object containing the name of this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; object containing the name of this member.","pos":[0,65],"source":"A <xref:System.String> object containing the name of this member."}]},{"pos":[44878,44999],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.PropertyType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.PropertyType*&gt; property.","pos":[0,121],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.PropertyType*> property."}]},{"pos":[45012,45229],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.","pos":[0,215],"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.PropertyType%2A&gt; property gets the type of this property.","pos":[117,215],"source":"       The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property."}]}]},{"pos":[45343,45369],"content":"The type of this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of this property.","pos":[0,26]}]},{"pos":[45878,45998],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.","pos":[0,120],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property."}]},{"pos":[46011,46290],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.","pos":[0,277],"nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]},{"content":"The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this &lt;xref:System.Reflection.MemberInfo&gt; object.","pos":[117,277],"source":"       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object."}]}]},{"pos":[46405,46510],"content":"The <xref:System.Type> object through which this <xref:System.Reflection.MemberInfo> object was obtained.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; object through which this &lt;xref:System.Reflection.MemberInfo&gt; object was obtained.","pos":[0,105],"source":"The <xref:System.Type> object through which this <xref:System.Reflection.MemberInfo> object was obtained."}]},{"pos":[47155,47270],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.SetValue*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.PropertyInfo.SetValue*&gt; method.","pos":[0,115],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.SetValue*> method."}]},{"pos":[47283,47540],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.","pos":[0,255],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.PropertyInfo.SetValue%2A&gt; method sets the value of the property with optional index values for index properties.","pos":[115,255],"source":"       The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties."}]}]},{"pos":[47705,47749],"content":"The object whose property value will be set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object whose property value will be set.","pos":[0,44]}]},{"pos":[47811,47843],"content":"The new value for this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value for this property.","pos":[0,32]}]},{"pos":[47907,48062],"content":"Optional index values for indexed properties. This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Optional index values for indexed properties.","pos":[0,45]},{"content":"This value should be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for non-indexed properties.","pos":[46,155],"source":" This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties."}]},{"pos":[48976,49088],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.SetValue*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.FieldInfo.SetValue*&gt; method.","pos":[0,112],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.SetValue*> method."}]},{"pos":[49101,49340],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.","pos":[0,237],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.FieldInfo.SetValue%2A&gt; method sets the property value for the given object to the given value.","pos":[115,237],"source":"       The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value."}]}]},{"pos":[49623,49672],"content":"The object whose property value will be returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object whose property value will be returned.","pos":[0,49]}]},{"pos":[49734,49766],"content":"The new value for this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value for this property.","pos":[0,32]}]},{"pos":[49851,50733],"content":"The invocation attribute. This must be a bit flag from <xref href=\"System.Reflection.BindingFlags\"></xref>: <xref uid=\"langword_csharp_InvokeMethod\" name=\"InvokeMethod\" href=\"\"></xref>, <xref uid=\"langword_csharp_CreateInstance\" name=\"CreateInstance\" href=\"\"></xref>, <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetField\" name=\"GetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_SetField\" name=\"SetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetProperty\" name=\"GetProperty\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SetProperty\" name=\"SetProperty\" href=\"\"></xref>. A suitable invocation attribute must be specified. If a static member will be invoked, the <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref> flag of <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref> must be set.","needQuote":false,"needEscape":true,"nodes":[{"content":"The invocation attribute.","pos":[0,25]},{"content":"This must be a bit flag from <bpt id=\"p1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>: <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_InvokeMethod\" name=\"InvokeMethod\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_CreateInstance\" name=\"CreateInstance\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_GetField\" name=\"GetField\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>, <bpt id=\"p6\">&lt;xref uid=\"langword_csharp_SetField\" name=\"SetField\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>, <bpt id=\"p7\">&lt;xref uid=\"langword_csharp_GetProperty\" name=\"GetProperty\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept>, or <bpt id=\"p8\">&lt;xref uid=\"langword_csharp_SetProperty\" name=\"SetProperty\" href=\"\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>.","pos":[26,628],"source":" This must be a bit flag from <xref href=\"System.Reflection.BindingFlags\"></xref>: <xref uid=\"langword_csharp_InvokeMethod\" name=\"InvokeMethod\" href=\"\"></xref>, <xref uid=\"langword_csharp_CreateInstance\" name=\"CreateInstance\" href=\"\"></xref>, <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetField\" name=\"GetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_SetField\" name=\"SetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetProperty\" name=\"GetProperty\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SetProperty\" name=\"SetProperty\" href=\"\"></xref>."},{"content":"A suitable invocation attribute must be specified.","pos":[629,679]},{"content":"If a static member will be invoked, the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> flag of <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> must be set.","pos":[680,882],"source":" If a static member will be invoked, the <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref> flag of <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref> must be set."}]},{"pos":[50808,51080],"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref:System.Reflection.MemberInfo> objects through reflection. If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the default binder is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of &lt;xref:System.Reflection.MemberInfo&gt; objects through reflection.","pos":[0,167],"source":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref:System.Reflection.MemberInfo> objects through reflection."},{"content":"If <ph id=\"ph1\">`binder`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the default binder is used.","pos":[168,272],"source":" If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the default binder is used."}]},{"pos":[51144,51299],"content":"Optional index values for indexed properties. This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Optional index values for indexed properties.","pos":[0,45]},{"content":"This value should be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for non-indexed properties.","pos":[46,155],"source":" This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties."}]},{"pos":[51382,52011],"content":"The <xref:System.Globalization.CultureInfo> object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the <xref uid=\"langword_csharp_CultureInfo.Parent\" name=\"CultureInfo.Parent\" href=\"\"></xref> method will be called successively in search of a match. If this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> is obtained from the <xref uid=\"langword_csharp_CultureInfo.CurrentUICulture\" name=\"CultureInfo.CurrentUICulture\" href=\"\"></xref> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; object that represents the culture for which the resource will be localized.","pos":[0,120],"source":"The <xref:System.Globalization.CultureInfo> object that represents the culture for which the resource will be localized."},{"content":"Note that if the resource is not localized for this culture, the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_CultureInfo.Parent\" name=\"CultureInfo.Parent\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method will be called successively in search of a match.","pos":[121,331],"source":" Note that if the resource is not localized for this culture, the <xref uid=\"langword_csharp_CultureInfo.Parent\" name=\"CultureInfo.Parent\" href=\"\"></xref> method will be called successively in search of a match."},{"content":"If this value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is obtained from the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_CultureInfo.CurrentUICulture\" name=\"CultureInfo.CurrentUICulture\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> property.","pos":[332,629],"source":" If this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> is obtained from the <xref uid=\"langword_csharp_CultureInfo.CurrentUICulture\" name=\"CultureInfo.CurrentUICulture\" href=\"\"></xref> property."}]},{"pos":[52495,52593],"content":"Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.","pos":[0,98],"source":"Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method."}]},{"pos":[52605,52713],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[52840,52898],"content":"A string that represents the current <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the current &lt;xref:System.Object&gt;.","pos":[0,58],"source":"A string that represents the current <xref:System.Object>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices._PropertyInfo\n  id: _PropertyInfo\n  children:\n  - System.Runtime.InteropServices._PropertyInfo.Attributes\n  - System.Runtime.InteropServices._PropertyInfo.CanRead\n  - System.Runtime.InteropServices._PropertyInfo.CanWrite\n  - System.Runtime.InteropServices._PropertyInfo.DeclaringType\n  - System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)\n  - System.Runtime.InteropServices._PropertyInfo.GetAccessors\n  - System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod\n  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.GetHashCode\n  - System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._PropertyInfo.GetIndexParameters\n  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod\n  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.GetType\n  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)\n  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])\n  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.IsSpecialName\n  - System.Runtime.InteropServices._PropertyInfo.MemberType\n  - System.Runtime.InteropServices._PropertyInfo.Name\n  - System.Runtime.InteropServices._PropertyInfo.PropertyType\n  - System.Runtime.InteropServices._PropertyInfo.ReflectedType\n  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\n  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Runtime.InteropServices._PropertyInfo.ToString\n  langs:\n  - csharp\n  name: _PropertyInfo\n  nameWithType: _PropertyInfo\n  fullName: System.Runtime.InteropServices._PropertyInfo\n  type: Interface\n  summary: Exposes the public members of the &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; class to unmanaged code.\n  remarks: \"This interface is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"F59ED4E4-E68F-3218-BD77-061AA82824BF\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))]\n\n      public interface _PropertyInfo\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.Attributes\n  id: Attributes\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: _PropertyInfo.Attributes\n  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.Attributes*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.\"\n  syntax:\n    content: public System.Reflection.PropertyAttributes Attributes { get; }\n    return:\n      type: System.Reflection.PropertyAttributes\n      description: The attributes of this property.\n  overload: System.Runtime.InteropServices._PropertyInfo.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.CanRead\n  id: CanRead\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: _PropertyInfo.CanRead\n  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.CanRead*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.\"\n  syntax:\n    content: public bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this property can be read; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._PropertyInfo.CanRead*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite\n  id: CanWrite\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: _PropertyInfo.CanWrite\n  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.CanWrite*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.\"\n  syntax:\n    content: public bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this property can be written to; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._PropertyInfo.CanWrite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType\n  id: DeclaringType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: _PropertyInfo.DeclaringType\n  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.\"\n  syntax:\n    content: public Type DeclaringType { get; }\n    return:\n      type: System.Type\n      description: The <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> object for the class that declares this member.\n  overload: System.Runtime.InteropServices._PropertyInfo.DeclaringType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: _PropertyInfo.Equals(Object)\n  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.\"\n  syntax:\n    content: public bool Equals (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The <xref:System.Object> to compare with the current <xref:System.Object>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current <xref:System.Object>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._PropertyInfo.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors\n  id: GetAccessors\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetAccessors()\n  nameWithType: _PropertyInfo.GetAccessors()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetAccessors*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance.\"\n  syntax:\n    content: public System.Reflection.MethodInfo[] GetAccessors ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: An array of <xref:System.Reflection.MethodInfo> objects that reflect the public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)\n  id: GetAccessors(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetAccessors(Boolean)\n  nameWithType: _PropertyInfo.GetAccessors(Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetAccessors*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance.\"\n  syntax:\n    content: public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include non-public methods in the returned <xref uid=\"langword_csharp_MethodInfo\" name=\"MethodInfo\" href=\"\"></xref> array; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: An array of <xref:System.Reflection.MethodInfo> objects whose elements reflect the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors of the property reflected by the current instance. If the <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this array contains public and non-public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors. If <code>nonPublic</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this array contains only public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref>, <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref>, and other accessors. If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.\"\n  syntax:\n    content: public object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: true to search this member's inheritance chain to find the attributes; otherwise false.\n    return:\n      type: System.Object[]\n      description: An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.\"\n  syntax:\n    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.\n    - id: inherit\n      type: System.Boolean\n      description: true to search this member's inheritance chain to find the attributes; otherwise false.\n    return:\n      type: System.Object[]\n      description: An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod\n  id: GetGetMethod\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetGetMethod()\n  nameWithType: _PropertyInfo.GetGetMethod()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetGetMethod*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetGetMethod ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref:System.Reflection.MethodInfo> object representing the public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor for this property, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor is non-public or does not exist.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)\n  id: GetGetMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetGetMethod(Boolean)\n  nameWithType: _PropertyInfo.GetGetMethod(Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetGetMethod*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return a non-public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref:System.Reflection.MethodInfo> object representing the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor for this property, if the <code>nonPublic</code> parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>. Or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>nonPublic</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor is non-public, or if <code>nonPublic</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> but no <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessors exist.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: _PropertyInfo.GetHashCode()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.\"\n  syntax:\n    content: public int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current instance.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: An array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: The count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: An array allocated by the caller that receives the identifiers corresponding to the names.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters\n  id: GetIndexParameters\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetIndexParameters()\n  nameWithType: _PropertyInfo.GetIndexParameters()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetIndexParameters*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property\"\n  syntax:\n    content: public System.Reflection.ParameterInfo[] GetIndexParameters ();\n    parameters: []\n    return:\n      type: System.Reflection.ParameterInfo[]\n      description: An array of type <xref:System.Reflection.ParameterInfo> containing the parameters for the indexes.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod\n  id: GetSetMethod\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetSetMethod()\n  nameWithType: _PropertyInfo.GetSetMethod()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetSetMethod*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetSetMethod ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: The <xref:System.Reflection.MethodInfo> object representing the <xref uid=\"langword_csharp_Set\" name=\"Set\" href=\"\"></xref> method for this property if the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is public, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor is not public.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)\n  id: GetSetMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetSetMethod(Boolean)\n  nameWithType: _PropertyInfo.GetSetMethod(Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetSetMethod*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return a non-public accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Reflection.MethodInfo\n      description: \"One of the values in the following table.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> A <xref:System.Reflection.MethodInfo> object representing the <xref uid=\\\"langword_csharp_Set\\\" name=\\\"Set\\\" href=\\\"\\\"></xref> method for this property.  \\n  \\n </td><td> The <xref uid=\\\"langword_csharp_set\\\" name=\\\"set\\\" href=\\\"\\\"></xref> accessor is public.  \\n  \\n -or-  \\n  \\n The <code>nonPublic</code> parameter is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> and the <xref uid=\\\"langword_csharp_set\\\" name=\\\"set\\\" href=\\\"\\\"></xref> accessor is non-public.  \\n  \\n </td></tr><tr><td><xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref></td><td> The <code>nonPublic</code> parameter is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>, but the property is read-only.  \\n  \\n -or-  \\n  \\n The <code>nonPublic</code> parameter is <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref> and the <xref uid=\\\"langword_csharp_set\\\" name=\\\"set\\\" href=\\\"\\\"></xref> accessor is non-public.  \\n  \\n -or-  \\n  \\n There is no <xref uid=\\\"langword_csharp_set\\\" name=\\\"set\\\" href=\\\"\\\"></xref> accessor.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetType\n  id: GetType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetType()\n  nameWithType: _PropertyInfo.GetType()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetType%2A> method gets the type of the current instance.\"\n  syntax:\n    content: public Type GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: A <xref:System.Type> object.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the type information for an object, which can be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: A pointer to the requested type information object.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)\n  id: GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])\n  id: GetValue(System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetValue(Object,Object[])\n  nameWithType: _PropertyInfo.GetValue(Object,Object[])\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetValue*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.\"\n  syntax:\n    content: public object GetValue (object obj, object[] index);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose property value will be returned.\n    - id: index\n      type: System.Object[]\n      description: Optional index values for indexed properties. This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties.\n    return:\n      type: System.Object\n      description: The property value for the <code>obj</code> parameter.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.GetValue*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.\"\n  syntax:\n    content: public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose property value will be returned.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: 'The invocation attribute. This must be a bit flag from <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref>: <xref uid=\"langword_csharp_InvokeMethod\" name=\"InvokeMethod\" href=\"\"></xref>, <xref uid=\"langword_csharp_CreateInstance\" name=\"CreateInstance\" href=\"\"></xref>, <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetField\" name=\"GetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_SetField\" name=\"SetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetProperty\" name=\"GetProperty\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SetProperty\" name=\"SetProperty\" href=\"\"></xref>. A suitable invocation attribute must be specified. If a static member will be invoked, the <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref> flag of <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref> must be set.'\n    - id: binder\n      type: System.Reflection.Binder\n      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref uid=\"langword_csharp_MemberInfo\" name=\"MemberInfo\" href=\"\"></xref> objects through reflection. If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the default binder is used.\n    - id: index\n      type: System.Object[]\n      description: Optional index values for indexed properties. This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the <xref uid=\"langword_csharp_CultureInfo.Parent\" name=\"CultureInfo.Parent\" href=\"\"></xref> method will be called successively in search of a match. If this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> is obtained from the <xref uid=\"langword_csharp_CultureInfo.CurrentUICulture\" name=\"CultureInfo.CurrentUICulture\" href=\"\"></xref> property.\n    return:\n      type: System.Object\n      description: The property value for the <code>obj</code> parameter.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: An identifier of a member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: A pointer to the location where the result will be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: A pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Runtime.InteropServices._PropertyInfo.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: IsDefined(Type,Boolean)\n  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member.\"\n  syntax:\n    content: public bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The <xref:System.Type> object to which the custom attributes are applied.\n    - id: inherit\n      type: System.Boolean\n      description: true to search this member's inheritance chain to find the attributes; otherwise false.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if one or more instances of the <code>attributeType</code> parameter are applied to this member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._PropertyInfo.IsDefined*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName\n  id: IsSpecialName\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: IsSpecialName\n  nameWithType: _PropertyInfo.IsSpecialName\n  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.IsSpecialName*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.\"\n  syntax:\n    content: public bool IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this property is the special name; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.MemberType\n  id: MemberType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: _PropertyInfo.MemberType\n  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.MemberType*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.\"\n  syntax:\n    content: public System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: One of the <xref href=\"System.Reflection.MemberTypes\"></xref> values indicating that this member is a property.\n  overload: System.Runtime.InteropServices._PropertyInfo.MemberType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.Name\n  id: Name\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: _PropertyInfo.Name\n  fullName: System.Runtime.InteropServices._PropertyInfo.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> object containing the name of this member.\n  overload: System.Runtime.InteropServices._PropertyInfo.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType\n  id: PropertyType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: PropertyType\n  nameWithType: _PropertyInfo.PropertyType\n  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.PropertyType*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.\"\n  syntax:\n    content: public Type PropertyType { get; }\n    return:\n      type: System.Type\n      description: The type of this property.\n  overload: System.Runtime.InteropServices._PropertyInfo.PropertyType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType\n  id: ReflectedType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: ReflectedType\n  nameWithType: _PropertyInfo.ReflectedType\n  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.\"\n  syntax:\n    content: public Type ReflectedType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> object through which this <xref:System.Reflection.MemberInfo> object was obtained.\n  overload: System.Runtime.InteropServices._PropertyInfo.ReflectedType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\n  id: SetValue(System.Object,System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: SetValue(Object,Object,Object[])\n  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])\n  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.PropertyInfo.SetValue*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.\"\n  syntax:\n    content: public void SetValue (object obj, object value, object[] index);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose property value will be set.\n    - id: value\n      type: System.Object\n      description: The new value for this property.\n    - id: index\n      type: System.Object[]\n      description: Optional index values for indexed properties. This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties.\n  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.FieldInfo.SetValue*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.\"\n  syntax:\n    content: public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose property value will be returned.\n    - id: value\n      type: System.Object\n      description: The new value for this property.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: 'The invocation attribute. This must be a bit flag from <xref href=\"System.Reflection.BindingFlags\"></xref>: <xref uid=\"langword_csharp_InvokeMethod\" name=\"InvokeMethod\" href=\"\"></xref>, <xref uid=\"langword_csharp_CreateInstance\" name=\"CreateInstance\" href=\"\"></xref>, <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetField\" name=\"GetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_SetField\" name=\"SetField\" href=\"\"></xref>, <xref uid=\"langword_csharp_GetProperty\" name=\"GetProperty\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SetProperty\" name=\"SetProperty\" href=\"\"></xref>. A suitable invocation attribute must be specified. If a static member will be invoked, the <xref uid=\"langword_csharp_Static\" name=\"Static\" href=\"\"></xref> flag of <xref uid=\"langword_csharp_BindingFlags\" name=\"BindingFlags\" href=\"\"></xref> must be set.'\n    - id: binder\n      type: System.Reflection.Binder\n      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref:System.Reflection.MemberInfo> objects through reflection. If `binder` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the default binder is used.\n    - id: index\n      type: System.Object[]\n      description: Optional index values for indexed properties. This value should be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> for non-indexed properties.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the <xref uid=\"langword_csharp_CultureInfo.Parent\" name=\"CultureInfo.Parent\" href=\"\"></xref> method will be called successively in search of a match. If this value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the <xref uid=\"langword_csharp_CultureInfo\" name=\"CultureInfo\" href=\"\"></xref> is obtained from the <xref uid=\"langword_csharp_CultureInfo.CurrentUICulture\" name=\"CultureInfo.CurrentUICulture\" href=\"\"></xref> property.\n  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._PropertyInfo.ToString\n  id: ToString\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: _PropertyInfo.ToString()\n  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code.\n  syntax:\n    content: public string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref:System.Object>.\n  overload: System.Runtime.InteropServices._PropertyInfo.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices._PropertyInfo.Attributes\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _PropertyInfo.Attributes\n  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes\n- uid: System.Reflection.PropertyAttributes\n  parent: System.Reflection\n  isExternal: true\n  name: PropertyAttributes\n  nameWithType: PropertyAttributes\n  fullName: System.Reflection.PropertyAttributes\n- uid: System.Runtime.InteropServices._PropertyInfo.CanRead\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: CanRead\n  nameWithType: _PropertyInfo.CanRead\n  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: CanWrite\n  nameWithType: _PropertyInfo.CanWrite\n  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite\n- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _PropertyInfo.DeclaringType\n  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: _PropertyInfo.Equals(Object)\n  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetAccessors()\n  nameWithType: _PropertyInfo.GetAccessors()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()\n- uid: System.Reflection.MethodInfo[]\n  parent: System.Reflection\n  isExternal: true\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    nameWithType: MethodInfo\n    fullName: MethodInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetAccessors(Boolean)\n  nameWithType: _PropertyInfo.GetAccessors(Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetGetMethod()\n  nameWithType: _PropertyInfo.GetGetMethod()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetGetMethod(Boolean)\n  nameWithType: _PropertyInfo.GetGetMethod(Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: _PropertyInfo.GetHashCode()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: true\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetIndexParameters()\n  nameWithType: _PropertyInfo.GetIndexParameters()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()\n- uid: System.Reflection.ParameterInfo[]\n  parent: System.Reflection\n  isExternal: true\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo[]\n  spec.csharp:\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    nameWithType: ParameterInfo\n    fullName: ParameterInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetSetMethod()\n  nameWithType: _PropertyInfo.GetSetMethod()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()\n- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetSetMethod(Boolean)\n  nameWithType: _PropertyInfo.GetSetMethod(Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetType()\n  nameWithType: _PropertyInfo.GetType()\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetValue(Object,Object[])\n  nameWithType: _PropertyInfo.GetValue(Object,Object[])\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])\n- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: IsDefined(Type,Boolean)\n  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)\n  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)\n- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _PropertyInfo.IsSpecialName\n  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName\n- uid: System.Runtime.InteropServices._PropertyInfo.MemberType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _PropertyInfo.MemberType\n  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Runtime.InteropServices._PropertyInfo.Name\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Name\n  nameWithType: _PropertyInfo.Name\n  fullName: System.Runtime.InteropServices._PropertyInfo.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: PropertyType\n  nameWithType: _PropertyInfo.PropertyType\n  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType\n- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _PropertyInfo.ReflectedType\n  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType\n- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: SetValue(Object,Object,Object[])\n  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])\n  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])\n- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)\n- uid: System.Runtime.InteropServices._PropertyInfo.ToString\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: ToString()\n  nameWithType: _PropertyInfo.ToString()\n  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()\n- uid: System.Runtime.InteropServices._PropertyInfo.Attributes*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _PropertyInfo.Attributes\n- uid: System.Runtime.InteropServices._PropertyInfo.CanRead*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: CanRead\n  nameWithType: _PropertyInfo.CanRead\n- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: CanWrite\n  nameWithType: _PropertyInfo.CanWrite\n- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _PropertyInfo.DeclaringType\n- uid: System.Runtime.InteropServices._PropertyInfo.Equals*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Equals\n  nameWithType: _PropertyInfo.Equals\n- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetAccessors\n  nameWithType: _PropertyInfo.GetAccessors\n- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: _PropertyInfo.GetCustomAttributes\n- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetGetMethod\n  nameWithType: _PropertyInfo.GetGetMethod\n- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: _PropertyInfo.GetHashCode\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetIDsOfNames\n  nameWithType: _PropertyInfo.GetIDsOfNames\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetIndexParameters\n  nameWithType: _PropertyInfo.GetIndexParameters\n- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetSetMethod\n  nameWithType: _PropertyInfo.GetSetMethod\n- uid: System.Runtime.InteropServices._PropertyInfo.GetType*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetType\n  nameWithType: _PropertyInfo.GetType\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetTypeInfo\n  nameWithType: _PropertyInfo.GetTypeInfo\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetTypeInfoCount\n  nameWithType: _PropertyInfo.GetTypeInfoCount\n- uid: System.Runtime.InteropServices._PropertyInfo.GetValue*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetValue\n  nameWithType: _PropertyInfo.GetValue\n- uid: System.Runtime.InteropServices._PropertyInfo.Invoke*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Invoke\n  nameWithType: _PropertyInfo.Invoke\n- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: IsDefined\n  nameWithType: _PropertyInfo.IsDefined\n- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _PropertyInfo.IsSpecialName\n- uid: System.Runtime.InteropServices._PropertyInfo.MemberType*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _PropertyInfo.MemberType\n- uid: System.Runtime.InteropServices._PropertyInfo.Name*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Name\n  nameWithType: _PropertyInfo.Name\n- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: PropertyType\n  nameWithType: _PropertyInfo.PropertyType\n- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _PropertyInfo.ReflectedType\n- uid: System.Runtime.InteropServices._PropertyInfo.SetValue*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: SetValue\n  nameWithType: _PropertyInfo.SetValue\n- uid: System.Runtime.InteropServices._PropertyInfo.ToString*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: ToString\n  nameWithType: _PropertyInfo.ToString\n"}