{"nodes":[{"pos":[1065,1115],"content":"Represents a Windows menu or toolbar command item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a Windows menu or toolbar command item.","pos":[0,50]}]},{"pos":[1128,2438],"content":"The MenuCommand class represents information about a Windows menu or toolbar command. The <xref:System.ComponentModel.Design.IMenuCommandService> interface allows you to add MenuCommand objects to the Visual Studio menu.       This class provides the following members:      -   An event-handler property to which you can attach an event handler for the command.      -   A <xref:System.ComponentModel.Design.CommandID> property that uniquely identifies the command.      -   An <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method that executes the command.      -   An <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method that can be overridden to handle the event that occurs when a new command is selected.      -   Boolean flag states that indicate whether the command is <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, or <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>.      -   An <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A> property that indicates the OLE command status code for the command.      -   An override for the <xref:System.ComponentModel.Design.MenuCommand.ToString%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The MenuCommand class represents information about a Windows menu or toolbar command. The <xref:System.ComponentModel.Design.IMenuCommandService> interface allows you to add MenuCommand objects to the Visual Studio menu.       This class provides the following members:      -   An event-handler property to which you can attach an event handler for the command.      -   A <xref:System.ComponentModel.Design.CommandID> property that uniquely identifies the command.      -   An <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method that executes the command.      -   An <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method that can be overridden to handle the event that occurs when a new command is selected.      -   Boolean flag states that indicate whether the command is <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, or <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>.      -   An <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A> property that indicates the OLE command status code for the command.      -   An override for the <xref:System.ComponentModel.Design.MenuCommand.ToString%2A> method.","pos":[0,1294],"nodes":[{"content":"The MenuCommand class represents information about a Windows menu or toolbar command.","pos":[0,85]},{"content":"The &lt;xref:System.ComponentModel.Design.IMenuCommandService&gt; interface allows you to add MenuCommand objects to the Visual Studio menu.","pos":[86,220],"source":" The <xref:System.ComponentModel.Design.IMenuCommandService> interface allows you to add MenuCommand objects to the Visual Studio menu."},{"content":"This class provides the following members:      -   An event-handler property to which you can attach an event handler for the command.","pos":[227,362]},{"content":"-   A &lt;xref:System.ComponentModel.Design.CommandID&gt; property that uniquely identifies the command.","pos":[368,466],"source":"      -   A <xref:System.ComponentModel.Design.CommandID> property that uniquely identifies the command."},{"content":"-   An &lt;xref:System.ComponentModel.Design.MenuCommand.Invoke%2A&gt; method that executes the command.","pos":[472,570],"source":"      -   An <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method that executes the command."},{"content":"-   An &lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt; method that can be overridden to handle the event that occurs when a new command is selected.","pos":[576,744],"source":"      -   An <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method that can be overridden to handle the event that occurs when a new command is selected."},{"content":"-   Boolean flag states that indicate whether the command is &lt;xref:System.ComponentModel.Design.MenuCommand.Checked%2A&gt;, &lt;xref:System.ComponentModel.Design.MenuCommand.Enabled%2A&gt;, &lt;xref:System.ComponentModel.Design.MenuCommand.Supported%2A&gt;, or &lt;xref:System.ComponentModel.Design.MenuCommand.Visible%2A&gt;.","pos":[750,1055],"source":"      -   Boolean flag states that indicate whether the command is <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, or <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>."},{"content":"-   An &lt;xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A&gt; property that indicates the OLE command status code for the command.","pos":[1061,1197],"source":"      -   An <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A> property that indicates the OLE command status code for the command."},{"content":"-   An override for the &lt;xref:System.ComponentModel.Design.MenuCommand.ToString%2A&gt; method.","pos":[1203,1294],"source":"      -   An override for the <xref:System.ComponentModel.Design.MenuCommand.ToString%2A> method."}]}]},{"pos":[3848,3950],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> class."},{"pos":[4669,4742],"content":"The event to raise when the user selects the menu item or toolbar button.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event to raise when the user selects the menu item or toolbar button.","pos":[0,73]}]},{"pos":[4831,4908],"content":"The unique command ID that links this menu command to the environment's menu.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique command ID that links this menu command to the environment's menu.","pos":[0,77]}]},{"pos":[5358,5424],"content":"Gets or sets a value indicating whether this menu item is checked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether this menu item is checked.","pos":[0,66]}]},{"pos":[5548,5707],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the item is checked; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item is checked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6191,6228],"content":"Occurs when the menu command changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the menu command changes.","pos":[0,37]}]},{"pos":[6240,6295],"content":"A command can change if it becomes checked or disabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"A command can change if it becomes checked or disabled.","pos":[0,55]}]},{"pos":[6424,6436],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6836,6939],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.CommandID\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this menu command.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.ComponentModel.Design.CommandID\"></xref> associated with this menu command."},{"pos":[7118,7215],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.CommandID\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the menu command.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> associated with the menu command."},{"pos":[7669,7729],"content":"Gets a value indicating whether this menu item is available.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this menu item is available.","pos":[0,60]}]},{"pos":[8371,8530],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the item is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8981,9001],"content":"Invokes the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes the command.","pos":[0,20]}]},{"pos":[9572,9617],"content":"Invokes the command with the given parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes the command with the given parameter.","pos":[0,45]}]},{"pos":[9757,9801],"content":"An optional argument for use by the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional argument for use by the command.","pos":[0,44]}]},{"pos":[10262,10314],"content":"Gets the OLE command status code for this menu item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the OLE command status code for this menu item.","pos":[0,52]}]},{"pos":[10432,10521],"content":"An integer containing a mixture of status flags that reflect the state of this menu item.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer containing a mixture of status flags that reflect the state of this menu item.","pos":[0,89]}]},{"pos":[11087,11181],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand.CommandChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Design.MenuCommand.CommandChanged\"></xref> event."},{"pos":[11194,11566],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCommandChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnCommandChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[190,295]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[296,370]}]},{"pos":[11722,11778],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[12254,12363],"content":"Gets the public properties associated with the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the public properties associated with the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref>."},{"pos":[12375,12676],"content":"All menu commands store their public properties in the Properties collection. The key in the properties dictionary is the property name. This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"All menu commands store their public properties in the Properties collection. The key in the properties dictionary is the property name. This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.","pos":[0,301],"nodes":[{"content":"All menu commands store their public properties in the Properties collection.","pos":[0,77]},{"content":"The key in the properties dictionary is the property name.","pos":[78,136]},{"content":"This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.","pos":[137,301]}]}]},{"pos":[12840,12983],"content":"An &lt;xref:System.Collections.IDictionary&gt; containing the public properties of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IDictionary> containing the public properties of the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref>."},{"pos":[13448,13516],"content":"Gets or sets a value indicating whether this menu item is supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether this menu item is supported.","pos":[0,68]}]},{"pos":[14164,14347],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the item is supported, which is the default; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item is supported, which is the default; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14810,14863],"content":"Returns a string representation of this menu command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string representation of this menu command.","pos":[0,53]}]},{"pos":[14999,15450],"content":"A string containing the value of the &lt;xref:System.ComponentModel.Design.MenuCommand.CommandID<bpt id=\"p1\">*</bpt>&gt; property appended with the names of any flags that are set, separated by pipe bars (|). These flag properties include &lt;xref:System.ComponentModel.Design.MenuCommand.Checked<ept id=\"p1\">*</ept>&gt;, &lt;xref:System.ComponentModel.Design.MenuCommand.Enabled<bpt id=\"p2\">*</bpt>&gt;, &lt;xref:System.ComponentModel.Design.MenuCommand.Supported<ept id=\"p2\">*</ept>&gt;, and &lt;xref:System.ComponentModel.Design.MenuCommand.Visible*&gt;.","needQuote":true,"needEscape":true,"source":"A string containing the value of the <xref:System.ComponentModel.Design.MenuCommand.CommandID*> property appended with the names of any flags that are set, separated by pipe bars (|). These flag properties include <xref:System.ComponentModel.Design.MenuCommand.Checked*>, <xref:System.ComponentModel.Design.MenuCommand.Enabled*>, <xref:System.ComponentModel.Design.MenuCommand.Supported*>, and <xref:System.ComponentModel.Design.MenuCommand.Visible*>."},{"pos":[15903,15969],"content":"Gets or sets a value indicating whether this menu item is visible.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether this menu item is visible.","pos":[0,66]}]},{"pos":[16615,16774],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the item is visible; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.MenuCommand\n  id: MenuCommand\n  children:\n  - System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)\n  - System.ComponentModel.Design.MenuCommand.Checked\n  - System.ComponentModel.Design.MenuCommand.CommandChanged\n  - System.ComponentModel.Design.MenuCommand.CommandID\n  - System.ComponentModel.Design.MenuCommand.Enabled\n  - System.ComponentModel.Design.MenuCommand.Invoke\n  - System.ComponentModel.Design.MenuCommand.Invoke(System.Object)\n  - System.ComponentModel.Design.MenuCommand.OleStatus\n  - System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)\n  - System.ComponentModel.Design.MenuCommand.Properties\n  - System.ComponentModel.Design.MenuCommand.Supported\n  - System.ComponentModel.Design.MenuCommand.ToString\n  - System.ComponentModel.Design.MenuCommand.Visible\n  langs:\n  - csharp\n  name: MenuCommand\n  nameWithType: MenuCommand\n  fullName: System.ComponentModel.Design.MenuCommand\n  type: Class\n  summary: Represents a Windows menu or toolbar command item.\n  remarks: \"The MenuCommand class represents information about a Windows menu or toolbar command. The <xref:System.ComponentModel.Design.IMenuCommandService> interface allows you to add MenuCommand objects to the Visual Studio menu.  \\n  \\n This class provides the following members:  \\n  \\n-   An event-handler property to which you can attach an event handler for the command.  \\n  \\n-   A <xref:System.ComponentModel.Design.CommandID> property that uniquely identifies the command.  \\n  \\n-   An <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method that executes the command.  \\n  \\n-   An <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method that can be overridden to handle the event that occurs when a new command is selected.  \\n  \\n-   Boolean flag states that indicate whether the command is <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, or <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>.  \\n  \\n-   An <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A> property that indicates the OLE command status code for the command.  \\n  \\n-   An override for the <xref:System.ComponentModel.Design.MenuCommand.ToString%2A> method.\"\n  example:\n  - \"The following code example creates a MenuCommand object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \\n  \\n Create an instance of the `Component1` class on your form and open the form in a design environment like Visual Studio. Press the F1 key to invoke the MenuCommand.  \\n  \\n [!code-cpp[MenuCommand Example#10](~/add/codesnippet/cpp/t-system.componentmodel._8_1.cpp)]\\n [!code-cs[MenuCommand Example#10](~/add/codesnippet/csharp/t-system.componentmodel._8_1.cs)]\\n [!code-vb[MenuCommand Example#10](~/add/codesnippet/visualbasic/t-system.componentmodel._8_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class MenuCommand\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)\n  id: '#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)'\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: MenuCommand(EventHandler,CommandID)\n  nameWithType: MenuCommand.MenuCommand(EventHandler,CommandID)\n  fullName: System.ComponentModel.Design.MenuCommand.MenuCommand(EventHandler,CommandID)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to an <xref:System.ComponentModel.Design.IMenuCommandService> object.  \\n  \\n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/0d01c3a9-eede-4f5b-b9c2-_1.cpp)]\\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/0d01c3a9-eede-4f5b-b9c2-_1.cs)]\\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/0d01c3a9-eede-4f5b-b9c2-_1.vb)]\"\n  syntax:\n    content: public MenuCommand (EventHandler handler, System.ComponentModel.Design.CommandID command);\n    parameters:\n    - id: handler\n      type: System.EventHandler\n      description: The event to raise when the user selects the menu item or toolbar button.\n    - id: command\n      type: System.ComponentModel.Design.CommandID\n      description: The unique command ID that links this menu command to the environment's menu.\n  overload: System.ComponentModel.Design.MenuCommand.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.Checked\n  id: Checked\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: Checked\n  nameWithType: MenuCommand.Checked\n  fullName: System.ComponentModel.Design.MenuCommand.Checked\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets or sets a value indicating whether this menu item is checked.\n  syntax:\n    content: public virtual bool Checked { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item is checked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.MenuCommand.Checked*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.CommandChanged\n  id: CommandChanged\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: CommandChanged\n  nameWithType: MenuCommand.CommandChanged\n  fullName: System.ComponentModel.Design.MenuCommand.CommandChanged\n  type: Event\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the menu command changes.\n  remarks: A command can change if it becomes checked or disabled.\n  syntax:\n    content: public event EventHandler CommandChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.CommandID\n  id: CommandID\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: CommandID\n  nameWithType: MenuCommand.CommandID\n  fullName: System.ComponentModel.Design.MenuCommand.CommandID\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the <xref href=\"System.ComponentModel.Design.CommandID\"></xref> associated with this menu command.\n  syntax:\n    content: public virtual System.ComponentModel.Design.CommandID CommandID { get; }\n    return:\n      type: System.ComponentModel.Design.CommandID\n      description: The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> associated with the menu command.\n  overload: System.ComponentModel.Design.MenuCommand.CommandID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.Enabled\n  id: Enabled\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: MenuCommand.Enabled\n  fullName: System.ComponentModel.Design.MenuCommand.Enabled\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets a value indicating whether this menu item is available.\n  remarks: ''\n  example:\n  - \"The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to <xref:System.ComponentModel.Design.IMenuCommandService>.  \\n  \\n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._15_1.cpp)]\\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._15_1.cs)]\\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._15_1.vb)]\"\n  syntax:\n    content: public virtual bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.MenuCommand.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.Invoke\n  id: Invoke\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: Invoke()\n  nameWithType: MenuCommand.Invoke()\n  fullName: System.ComponentModel.Design.MenuCommand.Invoke()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Invokes the command.\n  syntax:\n    content: public virtual void Invoke ();\n    parameters: []\n  overload: System.ComponentModel.Design.MenuCommand.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.Invoke(System.Object)\n  id: Invoke(System.Object)\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: Invoke(Object)\n  nameWithType: MenuCommand.Invoke(Object)\n  fullName: System.ComponentModel.Design.MenuCommand.Invoke(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Invokes the command with the given parameter.\n  syntax:\n    content: public virtual void Invoke (object arg);\n    parameters:\n    - id: arg\n      type: System.Object\n      description: An optional argument for use by the command.\n  overload: System.ComponentModel.Design.MenuCommand.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.OleStatus\n  id: OleStatus\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: OleStatus\n  nameWithType: MenuCommand.OleStatus\n  fullName: System.ComponentModel.Design.MenuCommand.OleStatus\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the OLE command status code for this menu item.\n  syntax:\n    content: public virtual int OleStatus { get; }\n    return:\n      type: System.Int32\n      description: An integer containing a mixture of status flags that reflect the state of this menu item.\n  overload: System.ComponentModel.Design.MenuCommand.OleStatus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)\n  id: OnCommandChanged(System.EventArgs)\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: OnCommandChanged(EventArgs)\n  nameWithType: MenuCommand.OnCommandChanged(EventArgs)\n  fullName: System.ComponentModel.Design.MenuCommand.OnCommandChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.MenuCommand.CommandChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnCommandChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnCommandChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.ComponentModel.Design.MenuCommand.OnCommandChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.Properties\n  id: Properties\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: MenuCommand.Properties\n  fullName: System.ComponentModel.Design.MenuCommand.Properties\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the public properties associated with the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref>.\n  remarks: All menu commands store their public properties in the Properties collection. The key in the properties dictionary is the property name. This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.\n  syntax:\n    content: public virtual System.Collections.IDictionary Properties { get; }\n    return:\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> containing the public properties of the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref>.\n  overload: System.ComponentModel.Design.MenuCommand.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.Supported\n  id: Supported\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: Supported\n  nameWithType: MenuCommand.Supported\n  fullName: System.ComponentModel.Design.MenuCommand.Supported\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets or sets a value indicating whether this menu item is supported.\n  remarks: ''\n  example:\n  - \"The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \\n  \\n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._20_1.cpp)]\\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._20_1.cs)]\\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._20_1.vb)]\"\n  syntax:\n    content: public virtual bool Supported { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item is supported, which is the default; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.MenuCommand.Supported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.ToString\n  id: ToString\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: MenuCommand.ToString()\n  fullName: System.ComponentModel.Design.MenuCommand.ToString()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Returns a string representation of this menu command.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the value of the <xref:System.ComponentModel.Design.MenuCommand.CommandID*> property appended with the names of any flags that are set, separated by pipe bars (|). These flag properties include <xref:System.ComponentModel.Design.MenuCommand.Checked*>, <xref:System.ComponentModel.Design.MenuCommand.Enabled*>, <xref:System.ComponentModel.Design.MenuCommand.Supported*>, and <xref:System.ComponentModel.Design.MenuCommand.Visible*>.\n  overload: System.ComponentModel.Design.MenuCommand.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.MenuCommand.Visible\n  id: Visible\n  parent: System.ComponentModel.Design.MenuCommand\n  langs:\n  - csharp\n  name: Visible\n  nameWithType: MenuCommand.Visible\n  fullName: System.ComponentModel.Design.MenuCommand.Visible\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets or sets a value indicating whether this menu item is visible.\n  remarks: ''\n  example:\n  - \"The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \\n  \\n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._26_1.cpp)]\\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._26_1.cs)]\\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._26_1.vb)]\"\n  syntax:\n    content: public virtual bool Visible { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.MenuCommand.Visible*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: MenuCommand(EventHandler,CommandID)\n  nameWithType: MenuCommand.MenuCommand(EventHandler,CommandID)\n  fullName: System.ComponentModel.Design.MenuCommand.MenuCommand(EventHandler,CommandID)\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.Design.CommandID\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: CommandID\n  nameWithType: CommandID\n  fullName: System.ComponentModel.Design.CommandID\n- uid: System.ComponentModel.Design.MenuCommand.Checked\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Checked\n  nameWithType: MenuCommand.Checked\n  fullName: System.ComponentModel.Design.MenuCommand.Checked\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.MenuCommand.CommandChanged\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: CommandChanged\n  nameWithType: MenuCommand.CommandChanged\n  fullName: System.ComponentModel.Design.MenuCommand.CommandChanged\n- uid: System.ComponentModel.Design.MenuCommand.CommandID\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: CommandID\n  nameWithType: MenuCommand.CommandID\n  fullName: System.ComponentModel.Design.MenuCommand.CommandID\n- uid: System.ComponentModel.Design.MenuCommand.Enabled\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Enabled\n  nameWithType: MenuCommand.Enabled\n  fullName: System.ComponentModel.Design.MenuCommand.Enabled\n- uid: System.ComponentModel.Design.MenuCommand.Invoke\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Invoke()\n  nameWithType: MenuCommand.Invoke()\n  fullName: System.ComponentModel.Design.MenuCommand.Invoke()\n- uid: System.ComponentModel.Design.MenuCommand.Invoke(System.Object)\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Invoke(Object)\n  nameWithType: MenuCommand.Invoke(Object)\n  fullName: System.ComponentModel.Design.MenuCommand.Invoke(Object)\n- uid: System.ComponentModel.Design.MenuCommand.OleStatus\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: OleStatus\n  nameWithType: MenuCommand.OleStatus\n  fullName: System.ComponentModel.Design.MenuCommand.OleStatus\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: OnCommandChanged(EventArgs)\n  nameWithType: MenuCommand.OnCommandChanged(EventArgs)\n  fullName: System.ComponentModel.Design.MenuCommand.OnCommandChanged(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.ComponentModel.Design.MenuCommand.Properties\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Properties\n  nameWithType: MenuCommand.Properties\n  fullName: System.ComponentModel.Design.MenuCommand.Properties\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.ComponentModel.Design.MenuCommand.Supported\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Supported\n  nameWithType: MenuCommand.Supported\n  fullName: System.ComponentModel.Design.MenuCommand.Supported\n- uid: System.ComponentModel.Design.MenuCommand.ToString\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: ToString()\n  nameWithType: MenuCommand.ToString()\n  fullName: System.ComponentModel.Design.MenuCommand.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Design.MenuCommand.Visible\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Visible\n  nameWithType: MenuCommand.Visible\n  fullName: System.ComponentModel.Design.MenuCommand.Visible\n- uid: System.ComponentModel.Design.MenuCommand.#ctor*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: MenuCommand\n  nameWithType: MenuCommand.MenuCommand\n- uid: System.ComponentModel.Design.MenuCommand.Checked*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Checked\n  nameWithType: MenuCommand.Checked\n- uid: System.ComponentModel.Design.MenuCommand.CommandID*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: CommandID\n  nameWithType: MenuCommand.CommandID\n- uid: System.ComponentModel.Design.MenuCommand.Enabled*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Enabled\n  nameWithType: MenuCommand.Enabled\n- uid: System.ComponentModel.Design.MenuCommand.Invoke*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Invoke\n  nameWithType: MenuCommand.Invoke\n- uid: System.ComponentModel.Design.MenuCommand.OleStatus*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: OleStatus\n  nameWithType: MenuCommand.OleStatus\n- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: OnCommandChanged\n  nameWithType: MenuCommand.OnCommandChanged\n- uid: System.ComponentModel.Design.MenuCommand.Properties*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Properties\n  nameWithType: MenuCommand.Properties\n- uid: System.ComponentModel.Design.MenuCommand.Supported*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Supported\n  nameWithType: MenuCommand.Supported\n- uid: System.ComponentModel.Design.MenuCommand.ToString*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: ToString\n  nameWithType: MenuCommand.ToString\n- uid: System.ComponentModel.Design.MenuCommand.Visible*\n  parent: System.ComponentModel.Design.MenuCommand\n  isExternal: false\n  name: Visible\n  nameWithType: MenuCommand.Visible\n"}