{"nodes":[{"pos":[1644,1703],"content":"Represents configuration setting for WS-Reliable Messaging.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents configuration setting for WS-Reliable Messaging.","pos":[0,59]}]},{"pos":[1715,1830],"content":"When this element is added to a custom binding, the resulting channel can support exactly-once delivery assurances.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this element is added to a custom binding, the resulting channel can support exactly-once delivery assurances.","pos":[0,115]}]},{"pos":[5768,5886],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ReliableSessionElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ReliableSessionElement\"></xref> class."},{"pos":[6585,6752],"content":"Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory.","pos":[0,167]}]},{"pos":[6889,7057],"content":"A <xref:System.TimeSpan> that specifies the interval of time that a service waits until sending an acknowledgment to the message source. The default value is 2 seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that specifies the interval of time that a service waits until sending an acknowledgment to the message source. The default value is 2 seconds.","pos":[0,168],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the interval of time that a service waits until sending an acknowledgment to the message source.","pos":[0,136],"source":"A <xref:System.TimeSpan> that specifies the interval of time that a service waits until sending an acknowledgment to the message source."},{"content":"The default value is 2 seconds.","pos":[137,168]}]}]},{"pos":[7809,7898],"content":"Applies the content of a specified binding element to this binding configuration section.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies the content of a specified binding element to this binding configuration section.","pos":[0,89]}]},{"pos":[8140,8158],"content":"A binding element.","needQuote":true,"needEscape":true,"nodes":[{"content":"A binding element.","pos":[0,18]}]},{"pos":[8769,8807],"content":"Gets the type of this binding element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of this binding element.","pos":[0,38]}]},{"pos":[8935,8968],"content":"The type of this binding element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of this binding element.","pos":[0,33]}]},{"pos":[9745,9833],"content":"Copies the content of the specified configuration section to this configuration section.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the content of the specified configuration section to this configuration section.","pos":[0,88]}]},{"pos":[10083,10122],"content":"The configuration section to be copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration section to be copied.","pos":[0,39]}]},{"pos":[10943,10955],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11568,11727],"content":"Gets or sets a value that indicates whether advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated.","pos":[0,159]}]},{"pos":[11854,12185],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,254],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[255,331],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[12791,12973],"content":"Gets or sets a <xref:System.TimeSpan> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a &lt;xref:System.TimeSpan&gt; value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel.","pos":[0,182],"source":"Gets or sets a <xref:System.TimeSpan> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel."}]},{"pos":[12985,13270],"content":"Activity on a channel is defined as receiving an application or infrastructure message. This property controls the maximum amount of time to keep an inactive session alive. If there is a longer time with no activity, the session is aborted by the infrastructure and the channel faults.","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity on a channel is defined as receiving an application or infrastructure message. This property controls the maximum amount of time to keep an inactive session alive. If there is a longer time with no activity, the session is aborted by the infrastructure and the channel faults.","pos":[0,285],"nodes":[{"content":"Activity on a channel is defined as receiving an application or infrastructure message.","pos":[0,87]},{"content":"This property controls the maximum amount of time to keep an inactive session alive.","pos":[88,172]},{"content":"If there is a longer time with no activity, the session is aborted by the infrastructure and the channel faults.","pos":[173,285]}]}]},{"pos":[13401,13595],"content":"A <xref:System.TimeSpan> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel. The default is 00:10:00.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel. The default is 00:10:00.","pos":[0,194],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel.","pos":[0,169],"source":"A <xref:System.TimeSpan> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel."},{"content":"The default is 00:10:00.","pos":[170,194]}]}]},{"pos":[14550,14562],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15169,15258],"content":"Gets or sets the maximum number of channels that can wait to be accepted on the listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of channels that can wait to be accepted on the listener.","pos":[0,89]}]},{"pos":[15271,15833],"content":"This value should be an integer between 1 and 16384 inclusively.       Channels are pending when they are waiting to be accepted. Once that limit is reached, no channels are created. Rather, they are put in pending mode until this number goes down (by accepting pending channels). This limit is for each factory.       When the threshold is reached and a remote application tries to establish a new reliable session, the request is denied and the open operation that prompted this faults. This limit does not apply to the number of pending outgoing channels.","needQuote":false,"needEscape":true,"nodes":[{"content":"This value should be an integer between 1 and 16384 inclusively.       Channels are pending when they are waiting to be accepted. Once that limit is reached, no channels are created. Rather, they are put in pending mode until this number goes down (by accepting pending channels). This limit is for each factory.       When the threshold is reached and a remote application tries to establish a new reliable session, the request is denied and the open operation that prompted this faults. This limit does not apply to the number of pending outgoing channels.","pos":[0,558],"nodes":[{"content":"This value should be an integer between 1 and 16384 inclusively.","pos":[0,64]},{"content":"Channels are pending when they are waiting to be accepted.","pos":[71,129]},{"content":"Once that limit is reached, no channels are created.","pos":[130,182]},{"content":"Rather, they are put in pending mode until this number goes down (by accepting pending channels).","pos":[183,280]},{"content":"This limit is for each factory.","pos":[281,312]},{"content":"When the threshold is reached and a remote application tries to establish a new reliable session, the request is denied and the open operation that prompted this faults.","pos":[319,488]},{"content":"This limit does not apply to the number of pending outgoing channels.","pos":[489,558]}]}]},{"pos":[15958,16054],"content":"The maximum number of channels that can wait to be accepted on the listener. The default is 128.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of channels that can wait to be accepted on the listener. The default is 128.","pos":[0,96],"nodes":[{"content":"The maximum number of channels that can wait to be accepted on the listener.","pos":[0,76]},{"content":"The default is 128.","pos":[77,96]}]}]},{"pos":[16640,16818],"content":"Gets or sets the maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel.","pos":[0,178]}]},{"pos":[16831,18102],"content":"This value should be an integer greater than zero. If an acknowledgment is not received after the last retransmission, the channel faults.       A message is considered to be transferred if its delivery at the recipient is acknowledged by the recipient.       If an acknowledgment is not received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message. The infrastructure tries to resend the message for, at most, the number of times specified by this property. If an acknowledgment is not received after the last retransmission, the channel faults.       The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time. The time initially starts at 1 second before retransmission and doubling the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt. The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly. This allows the retransmission time to dynamically adapt to varying network conditions.","needQuote":false,"needEscape":true,"nodes":[{"content":"This value should be an integer greater than zero. If an acknowledgment is not received after the last retransmission, the channel faults.       A message is considered to be transferred if its delivery at the recipient is acknowledged by the recipient.       If an acknowledgment is not received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message. The infrastructure tries to resend the message for, at most, the number of times specified by this property. If an acknowledgment is not received after the last retransmission, the channel faults.       The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time. The time initially starts at 1 second before retransmission and doubling the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt. The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly. This allows the retransmission time to dynamically adapt to varying network conditions.","pos":[0,1265],"nodes":[{"content":"This value should be an integer greater than zero.","pos":[0,50]},{"content":"If an acknowledgment is not received after the last retransmission, the channel faults.","pos":[51,138]},{"content":"A message is considered to be transferred if its delivery at the recipient is acknowledged by the recipient.","pos":[145,253]},{"content":"If an acknowledgment is not received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message.","pos":[260,427]},{"content":"The infrastructure tries to resend the message for, at most, the number of times specified by this property.","pos":[428,536]},{"content":"If an acknowledgment is not received after the last retransmission, the channel faults.","pos":[537,624]},{"content":"The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time.","pos":[631,766]},{"content":"The time initially starts at 1 second before retransmission and doubling the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt.","pos":[767,996]},{"content":"The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly.","pos":[997,1177]},{"content":"This allows the retransmission time to dynamically adapt to varying network conditions.","pos":[1178,1265]}]}]},{"pos":[18222,18455],"content":"The maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel. The minimum value is 1; the maximum 20; and the default value is 8.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel. The minimum value is 1; the maximum 20; and the default value is 8.","pos":[0,233],"nodes":[{"content":"The maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel.","pos":[0,165]},{"content":"The minimum value is 1; the maximum 20; and the default value is 8.","pos":[166,233]}]}]},{"pos":[19076,19120],"content":"Gets or sets the maximum size of the buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum size of the buffer.","pos":[0,44]}]},{"pos":[19133,19661],"content":"On the client, this property defines the maximum size of the buffer used by a reliable channel to hold messages not yet acknowledged by the receiver. The unit of the quota is a message. If the buffer is full, further Send operations are blocked.       On the receiver, this property defines the maximum size of the buffer used by the channel to store incoming messages not yet dispatched to the application. If the buffer is full, further messages are silently dropped by the receiver and require retransmission by the client.","needQuote":false,"needEscape":true,"nodes":[{"content":"On the client, this property defines the maximum size of the buffer used by a reliable channel to hold messages not yet acknowledged by the receiver. The unit of the quota is a message. If the buffer is full, further Send operations are blocked.       On the receiver, this property defines the maximum size of the buffer used by the channel to store incoming messages not yet dispatched to the application. If the buffer is full, further messages are silently dropped by the receiver and require retransmission by the client.","pos":[0,526],"nodes":[{"content":"On the client, this property defines the maximum size of the buffer used by a reliable channel to hold messages not yet acknowledged by the receiver.","pos":[0,149]},{"content":"The unit of the quota is a message.","pos":[150,185]},{"content":"If the buffer is full, further Send operations are blocked.","pos":[186,245]},{"content":"On the receiver, this property defines the maximum size of the buffer used by the channel to store incoming messages not yet dispatched to the application.","pos":[252,407]},{"content":"If the buffer is full, further messages are silently dropped by the receiver and require retransmission by the client.","pos":[408,526]}]}]},{"pos":[19789,19863],"content":"The maximum size of the buffer. Valid values are from 1 to 4096 inclusive.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size of the buffer. Valid values are from 1 to 4096 inclusive.","pos":[0,74],"nodes":[{"content":"The maximum size of the buffer.","pos":[0,31]},{"content":"Valid values are from 1 to 4096 inclusive.","pos":[32,74]}]}]},{"pos":[20422,20528],"content":"Gets or sets a value that specifies whether messages are guaranteed to arrive in the order they were sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether messages are guaranteed to arrive in the order they were sent.","pos":[0,106]}]},{"pos":[20644,20947],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are guaranteed to arrive in the order they were sent; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if messages can arrive out of order. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if messages are guaranteed to arrive in the order they were sent; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if messages can arrive out of order.","pos":[0,226],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are guaranteed to arrive in the order they were sent; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if messages can arrive out of order."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[227,303],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[21707,21719],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22352,22440],"content":"Gets or sets the version of WS-ReliableMessaging specified by the configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the version of WS-ReliableMessaging specified by the configuration element.","pos":[0,88]}]},{"pos":[22453,22714],"content":"There are currently two versions of the WS-ReliableMessaging protocol supported by [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005. The default version is WS-ReliableMessagingFebruary2005.","needQuote":false,"needEscape":true,"nodes":[{"content":"There are currently two versions of the WS-ReliableMessaging protocol supported by <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>: WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005.","pos":[0,204],"source":"There are currently two versions of the WS-ReliableMessaging protocol supported by [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005."},{"content":"The default version is WS-ReliableMessagingFebruary2005.","pos":[205,261]}]},{"pos":[22918,23108],"content":"An instance derived from <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ReliableMessagingVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the version of the WS-ReliableMessaging protocol used by the configuration element.","needQuote":true,"needEscape":true,"source":"An instance derived from <xref href=\"System.ServiceModel.ReliableMessagingVersion\"></xref> that represents the version of the WS-ReliableMessaging protocol used by the configuration element."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.ReliableSessionElement\n  id: ReliableSessionElement\n  children:\n  - System.ServiceModel.Configuration.ReliableSessionElement.#ctor\n  - System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval\n  - System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)\n  - System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType\n  - System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  - System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement\n  - System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled\n  - System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout\n  - System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)\n  - System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels\n  - System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount\n  - System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize\n  - System.ServiceModel.Configuration.ReliableSessionElement.Ordered\n  - System.ServiceModel.Configuration.ReliableSessionElement.Properties\n  - System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion\n  langs:\n  - csharp\n  name: ReliableSessionElement\n  nameWithType: ReliableSessionElement\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement\n  type: Class\n  summary: Represents configuration setting for WS-Reliable Messaging.\n  remarks: When this element is added to a custom binding, the resulting channel can support exactly-once delivery assurances.\n  syntax:\n    content: 'public sealed class ReliableSessionElement : System.ServiceModel.Configuration.BindingElementExtensionElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement\n  - System.ServiceModel.Configuration.BindingElementExtensionElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: ReliableSessionElement()\n  nameWithType: ReliableSessionElement.ReliableSessionElement()\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableSessionElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ReliableSessionElement\"></xref> class.\n  syntax:\n    content: public ReliableSessionElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval\n  id: AcknowledgementInterval\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: AcknowledgementInterval\n  nameWithType: ReliableSessionElement.AcknowledgementInterval\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory.\n  syntax:\n    content: public TimeSpan AcknowledgementInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the interval of time that a service waits until sending an acknowledgment to the message source. The default value is 2 seconds.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)\n  id: ApplyConfiguration(System.ServiceModel.Channels.BindingElement)\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: ApplyConfiguration(BindingElement)\n  nameWithType: ReliableSessionElement.ApplyConfiguration(BindingElement)\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(BindingElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Applies the content of a specified binding element to this binding configuration section.\n  syntax:\n    content: public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);\n    parameters:\n    - id: bindingElement\n      type: System.ServiceModel.Channels.BindingElement\n      description: A binding element.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType\n  id: BindingElementType\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: BindingElementType\n  nameWithType: ReliableSessionElement.BindingElementType\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the type of this binding element.\n  syntax:\n    content: public override Type BindingElementType { get; }\n    return:\n      type: System.Type\n      description: The type of this binding element.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: CopyFrom(ServiceModelExtensionElement)\n  nameWithType: ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Copies the content of the specified configuration section to this configuration section.\n  syntax:\n    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);\n    parameters:\n    - id: from\n      type: System.ServiceModel.Configuration.ServiceModelExtensionElement\n      description: The configuration section to be copied.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement\n  id: CreateBindingElement\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: CreateBindingElement()\n  nameWithType: ReliableSessionElement.CreateBindingElement()\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.ServiceModel.Channels.BindingElement CreateBindingElement ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElement\n      description: To be added.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled\n  id: FlowControlEnabled\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: FlowControlEnabled\n  nameWithType: ReliableSessionElement.FlowControlEnabled\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated.\n  syntax:\n    content: public bool FlowControlEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout\n  id: InactivityTimeout\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: InactivityTimeout\n  nameWithType: ReliableSessionElement.InactivityTimeout\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref:System.TimeSpan> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel.\n  remarks: Activity on a channel is defined as receiving an application or infrastructure message. This property controls the maximum amount of time to keep an inactive session alive. If there is a longer time with no activity, the session is aborted by the infrastructure and the channel faults.\n  syntax:\n    content: public TimeSpan InactivityTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel. The default is 00:10:00.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)\n  id: InitializeFrom(System.ServiceModel.Channels.BindingElement)\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: InitializeFrom(BindingElement)\n  nameWithType: ReliableSessionElement.InitializeFrom(BindingElement)\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(BindingElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);\n    parameters:\n    - id: bindingElement\n      type: System.ServiceModel.Channels.BindingElement\n      description: To be added.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels\n  id: MaxPendingChannels\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: MaxPendingChannels\n  nameWithType: ReliableSessionElement.MaxPendingChannels\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum number of channels that can wait to be accepted on the listener.\n  remarks: \"This value should be an integer between 1 and 16384 inclusively.  \\n  \\n Channels are pending when they are waiting to be accepted. Once that limit is reached, no channels are created. Rather, they are put in pending mode until this number goes down (by accepting pending channels). This limit is for each factory.  \\n  \\n When the threshold is reached and a remote application tries to establish a new reliable session, the request is denied and the open operation that prompted this faults. This limit does not apply to the number of pending outgoing channels.\"\n  syntax:\n    content: public int MaxPendingChannels { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of channels that can wait to be accepted on the listener. The default is 128.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount\n  id: MaxRetryCount\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: MaxRetryCount\n  nameWithType: ReliableSessionElement.MaxRetryCount\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel.\n  remarks: \"This value should be an integer greater than zero. If an acknowledgment is not received after the last retransmission, the channel faults.  \\n  \\n A message is considered to be transferred if its delivery at the recipient is acknowledged by the recipient.  \\n  \\n If an acknowledgment is not received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message. The infrastructure tries to resend the message for, at most, the number of times specified by this property. If an acknowledgment is not received after the last retransmission, the channel faults.  \\n  \\n The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time. The time initially starts at 1 second before retransmission and doubling the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt. The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly. This allows the retransmission time to dynamically adapt to varying network conditions.\"\n  syntax:\n    content: public int MaxRetryCount { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel. The minimum value is 1; the maximum 20; and the default value is 8.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize\n  id: MaxTransferWindowSize\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: MaxTransferWindowSize\n  nameWithType: ReliableSessionElement.MaxTransferWindowSize\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum size of the buffer.\n  remarks: \"On the client, this property defines the maximum size of the buffer used by a reliable channel to hold messages not yet acknowledged by the receiver. The unit of the quota is a message. If the buffer is full, further Send operations are blocked.  \\n  \\n On the receiver, this property defines the maximum size of the buffer used by the channel to store incoming messages not yet dispatched to the application. If the buffer is full, further messages are silently dropped by the receiver and require retransmission by the client.\"\n  syntax:\n    content: public int MaxTransferWindowSize { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size of the buffer. Valid values are from 1 to 4096 inclusive.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered\n  id: Ordered\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: Ordered\n  nameWithType: ReliableSessionElement.Ordered\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Ordered\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether messages are guaranteed to arrive in the order they were sent.\n  syntax:\n    content: public bool Ordered { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are guaranteed to arrive in the order they were sent; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if messages can arrive out of order. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.Ordered*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ReliableSessionElement.Properties\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion\n  id: ReliableMessagingVersion\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  langs:\n  - csharp\n  name: ReliableMessagingVersion\n  nameWithType: ReliableSessionElement.ReliableMessagingVersion\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the version of WS-ReliableMessaging specified by the configuration element.\n  remarks: 'There are currently two versions of the WS-ReliableMessaging protocol supported by [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005. The default version is WS-ReliableMessagingFebruary2005.'\n  syntax:\n    content: public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }\n    return:\n      type: System.ServiceModel.ReliableMessagingVersion\n      description: An instance derived from <xref href=\"System.ServiceModel.ReliableMessagingVersion\"></xref> that represents the version of the WS-ReliableMessaging protocol used by the configuration element.\n  overload: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Configuration.BindingElementExtensionElement\n  isExternal: false\n  name: System.ServiceModel.Configuration.BindingElementExtensionElement\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: ReliableSessionElement()\n  nameWithType: ReliableSessionElement.ReliableSessionElement()\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableSessionElement()\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: AcknowledgementInterval\n  nameWithType: ReliableSessionElement.AcknowledgementInterval\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: ApplyConfiguration(BindingElement)\n  nameWithType: ReliableSessionElement.ApplyConfiguration(BindingElement)\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(BindingElement)\n- uid: System.ServiceModel.Channels.BindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: BindingElement\n  nameWithType: BindingElement\n  fullName: System.ServiceModel.Channels.BindingElement\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: BindingElementType\n  nameWithType: ReliableSessionElement.BindingElementType\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: CopyFrom(ServiceModelExtensionElement)\n  nameWithType: ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ServiceModelExtensionElement\n  nameWithType: ServiceModelExtensionElement\n  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: CreateBindingElement()\n  nameWithType: ReliableSessionElement.CreateBindingElement()\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement()\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: FlowControlEnabled\n  nameWithType: ReliableSessionElement.FlowControlEnabled\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: InactivityTimeout\n  nameWithType: ReliableSessionElement.InactivityTimeout\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: InitializeFrom(BindingElement)\n  nameWithType: ReliableSessionElement.InitializeFrom(BindingElement)\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(BindingElement)\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: MaxPendingChannels\n  nameWithType: ReliableSessionElement.MaxPendingChannels\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: MaxRetryCount\n  nameWithType: ReliableSessionElement.MaxRetryCount\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: MaxTransferWindowSize\n  nameWithType: ReliableSessionElement.MaxTransferWindowSize\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: Ordered\n  nameWithType: ReliableSessionElement.Ordered\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Ordered\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: Properties\n  nameWithType: ReliableSessionElement.Properties\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: ReliableMessagingVersion\n  nameWithType: ReliableSessionElement.ReliableMessagingVersion\n  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion\n- uid: System.ServiceModel.ReliableMessagingVersion\n  parent: System.ServiceModel\n  isExternal: false\n  name: ReliableMessagingVersion\n  nameWithType: ReliableMessagingVersion\n  fullName: System.ServiceModel.ReliableMessagingVersion\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: ReliableSessionElement\n  nameWithType: ReliableSessionElement.ReliableSessionElement\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: AcknowledgementInterval\n  nameWithType: ReliableSessionElement.AcknowledgementInterval\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: ApplyConfiguration\n  nameWithType: ReliableSessionElement.ApplyConfiguration\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: BindingElementType\n  nameWithType: ReliableSessionElement.BindingElementType\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: CopyFrom\n  nameWithType: ReliableSessionElement.CopyFrom\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: CreateBindingElement\n  nameWithType: ReliableSessionElement.CreateBindingElement\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: FlowControlEnabled\n  nameWithType: ReliableSessionElement.FlowControlEnabled\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: InactivityTimeout\n  nameWithType: ReliableSessionElement.InactivityTimeout\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: InitializeFrom\n  nameWithType: ReliableSessionElement.InitializeFrom\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: MaxPendingChannels\n  nameWithType: ReliableSessionElement.MaxPendingChannels\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: MaxRetryCount\n  nameWithType: ReliableSessionElement.MaxRetryCount\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: MaxTransferWindowSize\n  nameWithType: ReliableSessionElement.MaxTransferWindowSize\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: Ordered\n  nameWithType: ReliableSessionElement.Ordered\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: Properties\n  nameWithType: ReliableSessionElement.Properties\n- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion*\n  parent: System.ServiceModel.Configuration.ReliableSessionElement\n  isExternal: false\n  name: ReliableMessagingVersion\n  nameWithType: ReliableSessionElement.ReliableMessagingVersion\n"}