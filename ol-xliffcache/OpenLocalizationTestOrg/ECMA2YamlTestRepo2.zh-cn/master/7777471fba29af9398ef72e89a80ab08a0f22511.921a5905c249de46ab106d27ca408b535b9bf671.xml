{"nodes":[{"pos":[407,524],"content":"Represents the base class from which all implementations of the Rijndael symmetric encryption algorithm must inherit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the base class from which all implementations of the Rijndael symmetric encryption algorithm must inherit.","pos":[0,117]}]},{"pos":[537,1108],"content":"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits. This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).       The Rijndael class is the predecessor of the <xref:System.Security.Cryptography.Aes> algorithm. You should use the <xref:System.Security.Cryptography.Aes> algorithm instead of Rijndael. For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.","needQuote":false,"needEscape":true,"nodes":[{"content":"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits.","pos":[0,85]},{"content":"This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (&lt;xref:System.Security.Cryptography.Aes&gt;-compatible).","pos":[86,224],"source":" This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible)."},{"content":"The Rijndael class is the predecessor of the &lt;xref:System.Security.Cryptography.Aes&gt; algorithm.","pos":[231,326],"source":"       The Rijndael class is the predecessor of the <xref:System.Security.Cryptography.Aes> algorithm."},{"content":"You should use the &lt;xref:System.Security.Cryptography.Aes&gt; algorithm instead of Rijndael.","pos":[327,416],"source":" You should use the <xref:System.Security.Cryptography.Aes> algorithm instead of Rijndael."},{"content":"For more information, see the entry <bpt id=\"p1\">[</bpt>The Differences Between Rijndael and AES<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=200932)</ept> in the .NET Security blog.","pos":[417,569],"source":" For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog."}]},{"pos":[3978,4067],"content":"Initializes a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of <xref href=\"System.Security.Cryptography.Rijndael\"></xref>."},{"pos":[4080,4663],"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.       This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table.      |Field|Default Value|   |-----------|-------------------|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|256|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|128|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|128|","needQuote":false,"needEscape":true,"nodes":[{"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.       This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table.      |Field|Default Value|   |-----------|-------------------|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|256|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|128|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|128|","pos":[0,575],"nodes":[{"content":"You cannot create an instance of an abstract class.","pos":[0,51]},{"content":"Application code will create a new instance of a derived class.","pos":[52,115]},{"content":"This method initializes the protected fields of &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; to the default values listed in the following table.","pos":[122,277],"source":"       This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table."},{"content":"|Field|Default Value|   |-----------|-------------------|   |&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue&gt;|256|   |&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue&gt;|128|   |&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue&gt;|128|","pos":[283,575],"source":"      |Field|Default Value|   |-----------|-------------------|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|256|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|128|   |<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|128|"}]}]},{"pos":[5532,5647],"content":"Creates a cryptographic object to perform the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","needQuote":true,"needEscape":true,"source":"Creates a cryptographic object to perform the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm."},{"pos":[5659,5789],"content":"The default implementation of <xref:System.Security.Cryptography.Rijndael> is <xref:System.Security.Cryptography.RijndaelManaged>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default implementation of &lt;xref:System.Security.Cryptography.Rijndael&gt; is &lt;xref:System.Security.Cryptography.RijndaelManaged&gt;.","pos":[0,130],"source":"The default implementation of <xref:System.Security.Cryptography.Rijndael> is <xref:System.Security.Cryptography.RijndaelManaged>."}]},{"pos":[6345,6368],"content":"A cryptographic object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A cryptographic object.","pos":[0,23]}]},{"pos":[6573,6690],"content":"The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","needQuote":true,"needEscape":true,"nodes":[{"content":"The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","pos":[0,117]}]},{"pos":[7100,7247],"content":"Creates a cryptographic object to perform the specified implementation of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","needQuote":true,"needEscape":true,"source":"Creates a cryptographic object to perform the specified implementation of the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm."},{"pos":[7259,7371],"content":"Acceptable values for the <ph id=\"ph1\">`algName`</ph> parameter are <ph id=\"ph2\">`Rijndael`</ph> and <ph id=\"ph3\">`System.Security.Cryptography.RijndaelManaged`</ph>.","needQuote":true,"needEscape":true,"source":"Acceptable values for the `algName` parameter are `Rijndael` and `System.Security.Cryptography.RijndaelManaged`."},{"pos":[7551,7663],"content":"The name of the specific implementation of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create.","needQuote":true,"needEscape":true,"source":"The name of the specific implementation of <xref href=\"System.Security.Cryptography.Rijndael\"></xref> to create."},{"pos":[7745,7768],"content":"A cryptographic object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A cryptographic object.","pos":[0,23]}]},{"pos":[7973,8138],"content":"The algorithm described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","needQuote":true,"needEscape":true,"source":"The algorithm described by the <code>algName</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Rijndael\n  id: Rijndael\n  children:\n  - System.Security.Cryptography.Rijndael.#ctor\n  - System.Security.Cryptography.Rijndael.Create\n  - System.Security.Cryptography.Rijndael.Create(System.String)\n  langs:\n  - csharp\n  name: Rijndael\n  nameWithType: Rijndael\n  fullName: System.Security.Cryptography.Rijndael\n  type: Class\n  summary: Represents the base class from which all implementations of the Rijndael symmetric encryption algorithm must inherit.\n  remarks: \"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits. This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).  \\n  \\n The Rijndael class is the predecessor of the <xref:System.Security.Cryptography.Aes> algorithm. You should use the <xref:System.Security.Cryptography.Aes> algorithm instead of Rijndael. For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.\"\n  example:\n  - \"The following code example uses the Rijndael class to encrypt and then decrypt data.  \\n  \\n [!code-cs[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/csharp/t-system.security.crypto_35_1.cs)]\\n [!code-vb[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/visualbasic/t-system.security.crypto_35_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Rijndael : System.Security.Cryptography.SymmetricAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Key\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Rijndael.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Rijndael\n  langs:\n  - csharp\n  name: Rijndael()\n  nameWithType: Rijndael.Rijndael()\n  fullName: System.Security.Cryptography.Rijndael.Rijndael()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of <xref href=\"System.Security.Cryptography.Rijndael\"></xref>.\n  remarks: \"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.  \\n  \\n This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table.  \\n  \\n|Field|Default Value|  \\n|-----------|-------------------|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|256|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|128|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|128|\"\n  example:\n  - \"The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.  \\n  \\n [!code-cs[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/csharp/m-system.security.crypto_25_1.cs)]\\n [!code-vb[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_25_1.vb)]\"\n  syntax:\n    content: protected Rijndael ();\n    parameters: []\n  overload: System.Security.Cryptography.Rijndael.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Rijndael.Create\n  id: Create\n  parent: System.Security.Cryptography.Rijndael\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: Rijndael.Create()\n  fullName: System.Security.Cryptography.Rijndael.Create()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a cryptographic object to perform the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm.\n  remarks: The default implementation of <xref:System.Security.Cryptography.Rijndael> is <xref:System.Security.Cryptography.RijndaelManaged>.\n  example:\n  - \"The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.  \\n  \\n [!code-cs[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/csharp/m-system.security.crypto_121_1.cs)]\\n [!code-vb[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_121_1.vb)]\"\n  syntax:\n    content: public static System.Security.Cryptography.Rijndael Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Rijndael\n      description: A cryptographic object.\n  overload: System.Security.Cryptography.Rijndael.Create*\n  exceptions:\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Rijndael.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.Rijndael\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: Rijndael.Create(String)\n  fullName: System.Security.Cryptography.Rijndael.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a cryptographic object to perform the specified implementation of the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm.\n  remarks: Acceptable values for the `algName` parameter are `Rijndael` and `System.Security.Cryptography.RijndaelManaged`.\n  syntax:\n    content: public static System.Security.Cryptography.Rijndael Create (string algName);\n    parameters:\n    - id: algName\n      type: System.String\n      description: The name of the specific implementation of <xref href=\"System.Security.Cryptography.Rijndael\"></xref> to create.\n    return:\n      type: System.Security.Cryptography.Rijndael\n      description: A cryptographic object.\n  overload: System.Security.Cryptography.Rijndael.Create*\n  exceptions:\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The algorithm described by the <code>algName</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: System.Security.Cryptography.SymmetricAlgorithm\n- uid: System.Reflection.TargetInvocationException\n  isExternal: true\n  name: System.Reflection.TargetInvocationException\n- uid: System.Security.Cryptography.Rijndael.#ctor\n  parent: System.Security.Cryptography.Rijndael\n  isExternal: false\n  name: Rijndael()\n  nameWithType: Rijndael.Rijndael()\n  fullName: System.Security.Cryptography.Rijndael.Rijndael()\n- uid: System.Security.Cryptography.Rijndael.Create\n  parent: System.Security.Cryptography.Rijndael\n  isExternal: false\n  name: Create()\n  nameWithType: Rijndael.Create()\n  fullName: System.Security.Cryptography.Rijndael.Create()\n- uid: System.Security.Cryptography.Rijndael\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Rijndael\n  nameWithType: Rijndael\n  fullName: System.Security.Cryptography.Rijndael\n- uid: System.Security.Cryptography.Rijndael.Create(System.String)\n  parent: System.Security.Cryptography.Rijndael\n  isExternal: false\n  name: Create(String)\n  nameWithType: Rijndael.Create(String)\n  fullName: System.Security.Cryptography.Rijndael.Create(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.Rijndael.#ctor*\n  parent: System.Security.Cryptography.Rijndael\n  isExternal: false\n  name: Rijndael\n  nameWithType: Rijndael.Rijndael\n- uid: System.Security.Cryptography.Rijndael.Create*\n  parent: System.Security.Cryptography.Rijndael\n  isExternal: false\n  name: Create\n  nameWithType: Rijndael.Create\n"}