{"nodes":[{"pos":[3126,3138],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3919,3931],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4992,5004],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5102,5114],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5769,5781],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5835,5847],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6436,6448],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6500,6512],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7053,7065],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7624,7636],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8615,8627],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8735,8747],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9317,9329],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10383,10395],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11358,11370],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11478,11490],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12750,12762],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12874,12886],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12994,13006],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14564,14576],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14693,14705],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14821,14833],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14941,14953],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15503,15515],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16081,16093],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17140,17152],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17232,17244],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18605,18617],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18716,18728],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18826,18838],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19830,19842],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19904,19916],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19970,19982],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21291,21303],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21415,21427],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21481,21493],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21601,21613],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22228,22240],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22291,22303],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23427,23439],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24410,24422],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24530,24542],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25498,25510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25618,25630],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26255,26267],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26887,26899],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27558,27570],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27624,27636],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28183,28195],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28923,28935],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IVector`1\n  id: IVector`1\n  children:\n  - Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)\n  - Microsoft.VisualC.StlClr.IVector`1.back\n  - Microsoft.VisualC.StlClr.IVector`1.back_item\n  - Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.IVector`1.capacity\n  - Microsoft.VisualC.StlClr.IVector`1.clear\n  - Microsoft.VisualC.StlClr.IVector`1.empty\n  - Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.IVector`1.front\n  - Microsoft.VisualC.StlClr.IVector`1.front_item\n  - Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  - Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)\n  - Microsoft.VisualC.StlClr.IVector`1.pop_back\n  - Microsoft.VisualC.StlClr.IVector`1.push_back(`0)\n  - Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)\n  - Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)\n  - Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IVector`1.size\n  - Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector`1)\n  langs:\n  - csharp\n  name: IVector<TValue>\n  nameWithType: IVector<TValue>\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>\n  type: Interface\n  syntax:\n    content: 'public interface IVector<TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>, System.Collections.ICollection'\n    typeParameters:\n    - id: TValue\n      description: To be added.\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>\n  - System.Collections.ICollection\n  - System.ICloneable\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)\n  id: assign(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: assign(IEnumerable)\n  nameWithType: IVector<TValue>.assign(IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.assign(IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void assign (System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.assign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: assign(IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IVector<TValue>.assign(IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.assign(IInputIterator<TValue>,IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.assign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)\n  id: assign(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: assign(Int32,TValue)\n  nameWithType: IVector<TValue>.assign(Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.assign(Int32,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void assign (int _Count, TValue _Val);\n    parameters:\n    - id: _Count\n      type: System.Int32\n      description: To be added.\n    - id: _Val\n      type: TValue\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.assign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)\n  id: at(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: at(Int32)\n  nameWithType: IVector<TValue>.at(Int32)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.at(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue at (int _Pos);\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.at*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.back\n  id: back\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: back()\n  nameWithType: IVector<TValue>.back()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue back ();\n    parameters: []\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.back*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.back_item\n  id: back_item\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: back_item\n  nameWithType: IVector<TValue>.back_item\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.back_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue back_item { get; set; }\n    return:\n      type: TValue\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.back_item*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: begin(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.begin*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.capacity\n  id: capacity\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: capacity()\n  nameWithType: IVector<TValue>.capacity()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.capacity()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int capacity ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.capacity*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.clear\n  id: clear\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: clear()\n  nameWithType: IVector<TValue>.clear()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.clear()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void clear ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IVector`1.clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IVector<TValue>.empty()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.empty*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  id: end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: end(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.end*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.erase*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n  nameWithType: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Last_iter);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    - id: _First_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    - id: _Last_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.erase*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.front\n  id: front\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: front()\n  nameWithType: IVector<TValue>.front()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.front()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue front ();\n    parameters: []\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.front*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.front_item\n  id: front_item\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: front_item\n  nameWithType: IVector<TValue>.front_item\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.front_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue front_item { get; set; }\n    return:\n      type: TValue\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.front_item*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator,IEnumerable)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator,IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.insert(ContainerRandomAccessIterator,IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where_iter, System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Where_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator,Int32,TValue)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator,Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.insert(ContainerRandomAccessIterator,Int32,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, int _Count, TValue _Val);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    - id: _Count\n      type: System.Int32\n      description: To be added.\n    - id: _Val\n      type: TValue\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, TValue _Val);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: To be added.\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: To be added.\n    - id: _Val\n      type: TValue\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: IVector<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.Item(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue this[int _Pos] { get; set; }\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: To be added.\n    return:\n      type: TValue\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.pop_back\n  id: pop_back\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: pop_back()\n  nameWithType: IVector<TValue>.pop_back()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.pop_back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void pop_back ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IVector`1.pop_back*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.push_back(`0)\n  id: push_back(`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: push_back(TValue)\n  nameWithType: IVector<TValue>.push_back(TValue)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.push_back(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void push_back (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.push_back*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: rbegin(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.rbegin*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: rend(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.rend*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)\n  id: reserve(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: reserve(Int32)\n  nameWithType: IVector<TValue>.reserve(Int32)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.reserve(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void reserve (int _Capacity);\n    parameters:\n    - id: _Capacity\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.reserve*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)\n  id: resize(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: resize(Int32)\n  nameWithType: IVector<TValue>.resize(Int32)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.resize(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void resize (int _Newsize);\n    parameters:\n    - id: _Newsize\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.resize*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)\n  id: resize(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: resize(Int32,TValue)\n  nameWithType: IVector<TValue>.resize(Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.resize(Int32,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void resize (int _Newsize, TValue _Val);\n    parameters:\n    - id: _Newsize\n      type: System.Int32\n      description: To be added.\n    - id: _Val\n      type: TValue\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.resize*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IVector<TValue>.size()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.size*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector`1)\n  id: swap(Microsoft.VisualC.StlClr.IVector`1)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  langs:\n  - csharp\n  name: swap(IVector<TValue>)\n  nameWithType: IVector<TValue>.swap(IVector<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.swap(IVector<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void swap (Microsoft.VisualC.StlClr.IVector<TValue> A_0);\n    parameters:\n    - id: A_0\n      type: Microsoft.VisualC.StlClr.IVector`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.IVector`1.swap*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: assign(IEnumerable)\n  nameWithType: IVector<TValue>.assign(IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.assign(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: assign(IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IVector<TValue>.assign(IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.assign(IInputIterator<TValue>,IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: assign(Int32,TValue)\n  nameWithType: IVector<TValue>.assign(Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.assign(Int32,TValue)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: at(Int32)\n  nameWithType: IVector<TValue>.at(Int32)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.at(Int32)\n- uid: Microsoft.VisualC.StlClr.IVector`1.back\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: back()\n  nameWithType: IVector<TValue>.back()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.back()\n- uid: Microsoft.VisualC.StlClr.IVector`1.back_item\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: back_item\n  nameWithType: IVector<TValue>.back_item\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.back_item\n- uid: Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: begin(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IVector`1.capacity\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: capacity()\n  nameWithType: IVector<TValue>.capacity()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.capacity()\n- uid: Microsoft.VisualC.StlClr.IVector`1.clear\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: clear()\n  nameWithType: IVector<TValue>.clear()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.clear()\n- uid: Microsoft.VisualC.StlClr.IVector`1.empty\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: empty()\n  nameWithType: IVector<TValue>.empty()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: end(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.end(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n  nameWithType: IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.IVector`1.front\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: front()\n  nameWithType: IVector<TValue>.front()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.front()\n- uid: Microsoft.VisualC.StlClr.IVector`1.front_item\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: front_item\n  nameWithType: IVector<TValue>.front_item\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.front_item\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator,IEnumerable)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator,IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.insert(ContainerRandomAccessIterator,IEnumerable)\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator,Int32,TValue)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator,Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.insert(ContainerRandomAccessIterator,Int32,TValue)\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n  nameWithType: IVector<TValue>.insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n- uid: Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: IVector<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.Item(Int32)\n- uid: Microsoft.VisualC.StlClr.IVector`1.pop_back\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: pop_back()\n  nameWithType: IVector<TValue>.pop_back()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.pop_back()\n- uid: Microsoft.VisualC.StlClr.IVector`1.push_back(`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: push_back(TValue)\n  nameWithType: IVector<TValue>.push_back(TValue)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.push_back(TValue)\n- uid: Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: rbegin(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseRandomAccessIterator<TValue>\n  nameWithType: ReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: rend(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IVector<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: reserve(Int32)\n  nameWithType: IVector<TValue>.reserve(Int32)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.reserve(Int32)\n- uid: Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: resize(Int32)\n  nameWithType: IVector<TValue>.resize(Int32)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.resize(Int32)\n- uid: Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: resize(Int32,TValue)\n  nameWithType: IVector<TValue>.resize(Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.resize(Int32,TValue)\n- uid: Microsoft.VisualC.StlClr.IVector`1.size\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: size()\n  nameWithType: IVector<TValue>.size()\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.size()\n- uid: Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector`1)\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: swap(IVector<TValue>)\n  nameWithType: IVector<TValue>.swap(IVector<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>.swap(IVector<TValue>)\n- uid: Microsoft.VisualC.StlClr.IVector`1\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IVector<TValue>\n  nameWithType: IVector<TValue>\n  fullName: Microsoft.VisualC.StlClr.IVector<TValue>\n- uid: Microsoft.VisualC.StlClr.IVector`1.assign*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: assign\n  nameWithType: IVector<TValue>.assign\n- uid: Microsoft.VisualC.StlClr.IVector`1.at*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: at\n  nameWithType: IVector<TValue>.at\n- uid: Microsoft.VisualC.StlClr.IVector`1.back*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: back\n  nameWithType: IVector<TValue>.back\n- uid: Microsoft.VisualC.StlClr.IVector`1.back_item*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: back_item\n  nameWithType: IVector<TValue>.back_item\n- uid: Microsoft.VisualC.StlClr.IVector`1.begin*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: begin\n  nameWithType: IVector<TValue>.begin\n- uid: Microsoft.VisualC.StlClr.IVector`1.capacity*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: capacity\n  nameWithType: IVector<TValue>.capacity\n- uid: Microsoft.VisualC.StlClr.IVector`1.clear*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: clear\n  nameWithType: IVector<TValue>.clear\n- uid: Microsoft.VisualC.StlClr.IVector`1.empty*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: empty\n  nameWithType: IVector<TValue>.empty\n- uid: Microsoft.VisualC.StlClr.IVector`1.end*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: end\n  nameWithType: IVector<TValue>.end\n- uid: Microsoft.VisualC.StlClr.IVector`1.erase*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: erase\n  nameWithType: IVector<TValue>.erase\n- uid: Microsoft.VisualC.StlClr.IVector`1.front*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: front\n  nameWithType: IVector<TValue>.front\n- uid: Microsoft.VisualC.StlClr.IVector`1.front_item*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: front_item\n  nameWithType: IVector<TValue>.front_item\n- uid: Microsoft.VisualC.StlClr.IVector`1.insert*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: insert\n  nameWithType: IVector<TValue>.insert\n- uid: Microsoft.VisualC.StlClr.IVector`1.Item*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: Item\n  nameWithType: IVector<TValue>.Item\n- uid: Microsoft.VisualC.StlClr.IVector`1.pop_back*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: pop_back\n  nameWithType: IVector<TValue>.pop_back\n- uid: Microsoft.VisualC.StlClr.IVector`1.push_back*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: push_back\n  nameWithType: IVector<TValue>.push_back\n- uid: Microsoft.VisualC.StlClr.IVector`1.rbegin*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: rbegin\n  nameWithType: IVector<TValue>.rbegin\n- uid: Microsoft.VisualC.StlClr.IVector`1.rend*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: rend\n  nameWithType: IVector<TValue>.rend\n- uid: Microsoft.VisualC.StlClr.IVector`1.reserve*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: reserve\n  nameWithType: IVector<TValue>.reserve\n- uid: Microsoft.VisualC.StlClr.IVector`1.resize*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: resize\n  nameWithType: IVector<TValue>.resize\n- uid: Microsoft.VisualC.StlClr.IVector`1.size*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: size\n  nameWithType: IVector<TValue>.size\n- uid: Microsoft.VisualC.StlClr.IVector`1.swap*\n  parent: Microsoft.VisualC.StlClr.IVector`1\n  isExternal: false\n  name: swap\n  nameWithType: IVector<TValue>.swap\n"}