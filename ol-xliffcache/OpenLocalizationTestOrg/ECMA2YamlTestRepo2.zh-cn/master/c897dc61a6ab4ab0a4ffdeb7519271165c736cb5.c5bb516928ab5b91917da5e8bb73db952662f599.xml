{"nodes":[{"pos":[464,626],"content":"Serves as the primary control in the Web Parts control set for hosting <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls on a Web page.","needQuote":true,"needEscape":true,"source":"Serves as the primary control in the Web Parts control set for hosting <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls on a Web page."},{"pos":[639,5502],"content":"Within the Web Parts control set, a zone is a region on a Web page that contains Web Parts controls. A Web Parts zone is created by a zone control, which is a type of <xref:System.Web.UI.WebControls.CompositeControl> designed to contain other controls. The primary functions of a zone are to lay out the controls it contains, and to provide a common user interface (UI) for those controls. For general information about zones and how they are used in Web Parts applications, see the base <xref:System.Web.UI.WebControls.WebParts.WebZone> class, and [Web Parts Control Set Overview](~/add/includes/ajax-current-ext-md.md).       A key feature of Web Parts controls is that they allow end users to modify (or personalize) Web pages according to their preferences, and save their personalized settings for future browser sessions. One aspect of modifying Web Parts pages includes the ability to add <xref:System.Web.UI.WebControls.WebParts.WebPart> controls or other server controls to a Web Parts page. The CatalogZone control provides a list or catalog of controls that users can add to a page.       The CatalogZone control is one of the fundamental controls in the Web Parts control set. It derives from the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class, and most of its behavior is inherited from that class. The CatalogZone class essentially adds to the base class a zone template, which is an implementation of the <xref:System.Web.UI.ITemplate> interface. The zone template enables developers to declaratively add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to a zone in the page persistence format.      > [!IMPORTANT] >  A CatalogZone zone can contain only <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, and conversely, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls can reside only in zones that derive from the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class, such as CatalogZone.       A CatalogZone control becomes visible only when a user switches a Web page to catalog display mode (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>). A catalog can contain several types of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Each <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is a type of container that contains the server controls users can add to the page. The <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls differ according to where the server controls they contain are coming from. The following table summarizes the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls provided with the Web Parts control set and, for each control, what kind of server controls it contains.      |Control|Description|   |-------------|-----------------|   |<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Maintains references to controls that have been closed on a page. These controls can be reopened (added back to the page) by users.|   |<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Contains references to controls that are declared in a Web Parts catalog in the markup of a Web page. These controls can be added to a Web page by users.|   |<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Provides the UI for a user to upload a definition file (an XML file with a .WebPart extension and a specified format that contains state information) for a control to a catalog, so that the control can be added to a Web page.|       Because the CatalogZone class adds only a zone template to the behavior of its base class, it has few members. The <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> constructor is a default constructor; with it, you can initialize a new instance of the CatalogZone class. The <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> property gets or sets a reference to the <xref:System.Web.UI.ITemplate> object that contains the controls for the zone. The <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> method is critical. It overrides the base method to create the collection of all <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls contained within the zone template.      > [!NOTE] >  The buttons in the CatalogZone UI require client-side scripting in order to work correctly. If scripting is disabled in the browser, the user will not be able to perform actions through the CatalogZone UI.      ## Accessibility    The markup rendered by default for this control might not conform to accessibility standards such as the Web Content Accessibility Guidelines 1.0 (WCAG) priority 1 guidelines. For details about accessibility support for this control, see [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Within the Web Parts control set, a zone is a region on a Web page that contains Web Parts controls.","pos":[0,100]},{"content":"A Web Parts zone is created by a zone control, which is a type of &lt;xref:System.Web.UI.WebControls.CompositeControl&gt; designed to contain other controls.","pos":[101,252],"source":" A Web Parts zone is created by a zone control, which is a type of <xref:System.Web.UI.WebControls.CompositeControl> designed to contain other controls."},{"content":"The primary functions of a zone are to lay out the controls it contains, and to provide a common user interface (UI) for those controls.","pos":[253,389]},{"content":"For general information about zones and how they are used in Web Parts applications, see the base &lt;xref:System.Web.UI.WebControls.WebParts.WebZone&gt; class, and <bpt id=\"p1\">[</bpt>Web Parts Control Set Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[390,621],"source":" For general information about zones and how they are used in Web Parts applications, see the base <xref:System.Web.UI.WebControls.WebParts.WebZone> class, and [Web Parts Control Set Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"A key feature of Web Parts controls is that they allow end users to modify (or personalize) Web pages according to their preferences, and save their personalized settings for future browser sessions.","pos":[628,827]},{"content":"One aspect of modifying Web Parts pages includes the ability to add &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; controls or other server controls to a Web Parts page.","pos":[828,1000],"source":" One aspect of modifying Web Parts pages includes the ability to add <xref:System.Web.UI.WebControls.WebParts.WebPart> controls or other server controls to a Web Parts page."},{"content":"The CatalogZone control provides a list or catalog of controls that users can add to a page.","pos":[1001,1093]},{"content":"The CatalogZone control is one of the fundamental controls in the Web Parts control set.","pos":[1100,1188]},{"content":"It derives from the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase&gt; class, and most of its behavior is inherited from that class.","pos":[1189,1328],"source":" It derives from the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class, and most of its behavior is inherited from that class."},{"content":"The CatalogZone class essentially adds to the base class a zone template, which is an implementation of the &lt;xref:System.Web.UI.ITemplate&gt; interface.","pos":[1329,1478],"source":" The CatalogZone class essentially adds to the base class a zone template, which is an implementation of the <xref:System.Web.UI.ITemplate> interface."},{"content":"The zone template enables developers to declaratively add &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls to a zone in the page persistence format.","pos":[1479,1641],"source":" The zone template enables developers to declaratively add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to a zone in the page persistence format."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  A CatalogZone zone can contain only &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls, and conversely, &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls can reside only in zones that derive from the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase&gt; class, such as CatalogZone.","pos":[1647,1975],"source":"      > [!IMPORTANT] >  A CatalogZone zone can contain only <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, and conversely, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls can reside only in zones that derive from the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class, such as CatalogZone."},{"content":"A CatalogZone control becomes visible only when a user switches a Web page to catalog display mode (&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode&gt;).","pos":[1982,2159],"source":"       A CatalogZone control becomes visible only when a user switches a Web page to catalog display mode (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>)."},{"content":"A catalog can contain several types of &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls.","pos":[2160,2262],"source":" A catalog can contain several types of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls."},{"content":"Each &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; control is a type of container that contains the server controls users can add to the page.","pos":[2263,2413],"source":" Each <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is a type of container that contains the server controls users can add to the page."},{"content":"The &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls differ according to where the server controls they contain are coming from.","pos":[2414,2556],"source":" The <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls differ according to where the server controls they contain are coming from."},{"content":"The following table summarizes the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls provided with the Web Parts control set and, for each control, what kind of server controls it contains.","pos":[2557,2759],"source":" The following table summarizes the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls provided with the Web Parts control set and, for each control, what kind of server controls it contains."},{"content":"|Control|Description|   |-------------|-----------------|   |&lt;xref:System.Web.UI.WebControls.WebParts.PageCatalogPart&gt;|Maintains references to controls that have been closed on a page.","pos":[2765,2949],"source":"      |Control|Description|   |-------------|-----------------|   |<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Maintains references to controls that have been closed on a page."},{"content":"These controls can be reopened (added back to the page) by users.|   |&lt;xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart&gt;|Contains references to controls that are declared in a Web Parts catalog in the markup of a Web page.","pos":[2950,3186],"source":" These controls can be reopened (added back to the page) by users.|   |<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Contains references to controls that are declared in a Web Parts catalog in the markup of a Web page."},{"content":"These controls can be added to a Web page by users.|   |&lt;xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart&gt;|Provides the UI for a user to upload a definition file (an XML file with a .WebPart extension and a specified format that contains state information) for a control to a catalog, so that the control can be added to a Web page.|       Because the CatalogZone class adds only a zone template to the behavior of its base class, it has few members.","pos":[3187,3646],"source":" These controls can be added to a Web page by users.|   |<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Provides the UI for a user to upload a definition file (an XML file with a .WebPart extension and a specified format that contains state information) for a control to a catalog, so that the control can be added to a Web page.|       Because the CatalogZone class adds only a zone template to the behavior of its base class, it has few members."},{"content":"The &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A&gt; constructor is a default constructor; with it, you can initialize a new instance of the CatalogZone class.","pos":[3647,3822],"source":" The <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> constructor is a default constructor; with it, you can initialize a new instance of the CatalogZone class."},{"content":"The &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A&gt; property gets or sets a reference to the &lt;xref:System.Web.UI.ITemplate&gt; object that contains the controls for the zone.","pos":[3823,4016],"source":" The <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> property gets or sets a reference to the <xref:System.Web.UI.ITemplate> object that contains the controls for the zone."},{"content":"The &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt; method is critical.","pos":[4017,4116],"source":" The <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> method is critical."},{"content":"It overrides the base method to create the collection of all &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls contained within the zone template.","pos":[4117,4276],"source":" It overrides the base method to create the collection of all <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls contained within the zone template."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The buttons in the CatalogZone UI require client-side scripting in order to work correctly.","pos":[4282,4386],"source":"      > [!NOTE] >  The buttons in the CatalogZone UI require client-side scripting in order to work correctly."},{"content":"If scripting is disabled in the browser, the user will not be able to perform actions through the CatalogZone UI.","pos":[4387,4500]},{"content":"Accessibility    The markup rendered by default for this control might not conform to accessibility standards such as the Web Content Accessibility Guidelines 1.0 (WCAG) priority 1 guidelines.","pos":[4509,4701]},{"content":"For details about accessibility support for this control, see <bpt id=\"p1\">[</bpt>ASP.NET Controls and Accessibility<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[4702,4840],"source":" For details about accessibility support for this control, see [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[26231,26339],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogZone\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogZone\"></xref> class."},{"pos":[26351,26811],"content":"Because the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control implements a zone template, it is usually used declaratively and you will seldom need to create a new instance of the class using the CatalogZone constructor. However, if you inherit from the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class to create a custom zone, you might wish to use the constructor to initialize some of its property values and customize its appearance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control implements a zone template, it is usually used declaratively and you will seldom need to create a new instance of the class using the CatalogZone constructor. However, if you inherit from the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class to create a custom zone, you might wish to use the constructor to initialize some of its property values and customize its appearance.","pos":[0,460],"nodes":[{"content":"Because the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt; control implements a zone template, it is usually used declaratively and you will seldom need to create a new instance of the class using the CatalogZone constructor.","pos":[0,232],"source":"Because the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control implements a zone template, it is usually used declaratively and you will seldom need to create a new instance of the class using the CatalogZone constructor."},{"content":"However, if you inherit from the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt; class to create a custom zone, you might wish to use the constructor to initialize some of its property values and customize its appearance.","pos":[233,460],"source":" However, if you inherit from the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class to create a custom zone, you might wish to use the constructor to initialize some of its property values and customize its appearance."}]}]},{"pos":[28226,28356],"content":"Creates an instance of each <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> type that is declared in the zone.","needQuote":true,"needEscape":true,"source":"Creates an instance of each <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> type that is declared in the zone."},{"pos":[28369,29838],"content":"The CreateCatalogParts method is a critical method because when a user switches a page to catalog display mode, this method creates all the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that make up the Web Parts catalog.       The CreateCatalogParts method in the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class provided with the Web Parts control set can create any server control that inherits from the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> class. So, if you create a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control and declare it on a page within a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control, this method will create your control when a user switches the page to catalog mode.       However, for various reasons you might want control over the CreateCatalogParts method. You might want it to create only certain <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. For example, suppose you create a set of custom <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that have a consistent appearance and belong to a single product or organization. If you want page developers to be limited to using those custom controls in a catalog, then you should inherit from the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class, override the CreateCatalogParts method, and allow the method to create only controls of the same type as your custom controls.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CreateCatalogParts method is a critical method because when a user switches a page to catalog display mode, this method creates all the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that make up the Web Parts catalog.       The CreateCatalogParts method in the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class provided with the Web Parts control set can create any server control that inherits from the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> class. So, if you create a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control and declare it on a page within a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control, this method will create your control when a user switches the page to catalog mode.       However, for various reasons you might want control over the CreateCatalogParts method. You might want it to create only certain <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. For example, suppose you create a set of custom <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that have a consistent appearance and belong to a single product or organization. If you want page developers to be limited to using those custom controls in a catalog, then you should inherit from the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class, override the CreateCatalogParts method, and allow the method to create only controls of the same type as your custom controls.","pos":[0,1465],"nodes":[{"content":"The CreateCatalogParts method is a critical method because when a user switches a page to catalog display mode, this method creates all the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls that make up the Web Parts catalog.","pos":[0,238],"source":"The CreateCatalogParts method is a critical method because when a user switches a page to catalog display mode, this method creates all the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that make up the Web Parts catalog."},{"content":"The CreateCatalogParts method in the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt; class provided with the Web Parts control set can create any server control that inherits from the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; class.","pos":[245,495],"source":"       The CreateCatalogParts method in the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class provided with the Web Parts control set can create any server control that inherits from the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> class."},{"content":"So, if you create a custom &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; control and declare it on a page within a &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt; control, this method will create your control when a user switches the page to catalog mode.","pos":[496,765],"source":" So, if you create a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control and declare it on a page within a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control, this method will create your control when a user switches the page to catalog mode."},{"content":"However, for various reasons you might want control over the CreateCatalogParts method.","pos":[772,859]},{"content":"You might want it to create only certain &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls.","pos":[860,964],"source":" You might want it to create only certain <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls."},{"content":"For example, suppose you create a set of custom &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls that have a consistent appearance and belong to a single product or organization.","pos":[965,1157],"source":" For example, suppose you create a set of custom <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that have a consistent appearance and belong to a single product or organization."},{"content":"If you want page developers to be limited to using those custom controls in a catalog, then you should inherit from the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt; class, override the CreateCatalogParts method, and allow the method to create only controls of the same type as your custom controls.","pos":[1158,1465],"source":" If you want page developers to be limited to using those custom controls in a catalog, then you should inherit from the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class, override the CreateCatalogParts method, and allow the method to create only controls of the same type as your custom controls."}]}]},{"pos":[30081,30277],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with references to all the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> controls in the zone.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"></xref> with references to all the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls in the zone."},{"pos":[30481,30589],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control does not have an ID.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> control does not have an ID."},{"pos":[31015,31177],"content":"Gets or sets a template to contain child controls within a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.CatalogZone\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control in page persistence format.","needQuote":true,"needEscape":true,"source":"Gets or sets a template to contain child controls within a <xref href=\"System.Web.UI.WebControls.WebParts.CatalogZone\"></xref> control in page persistence format."},{"pos":[31190,32095],"content":"The ZoneTemplate property references a template of type <xref:System.Web.UI.ITemplate> that is used to contain the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the zone. The zone template enables page developers to declare the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls they want to use in persistence format, rather than having to create all the controls programmatically.       The set accessor for the ZoneTemplate property calls the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> method, which forces the collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that are declared in the zone template on the page to be refreshed. This ensures that the collection of controls referenced by the zone remains current whenever a user changes the controls actually declared within the template on the page.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ZoneTemplate property references a template of type <xref:System.Web.UI.ITemplate> that is used to contain the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the zone. The zone template enables page developers to declare the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls they want to use in persistence format, rather than having to create all the controls programmatically.       The set accessor for the ZoneTemplate property calls the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> method, which forces the collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that are declared in the zone template on the page to be refreshed. This ensures that the collection of controls referenced by the zone remains current whenever a user changes the controls actually declared within the template on the page.","pos":[0,903],"nodes":[{"content":"The ZoneTemplate property references a template of type &lt;xref:System.Web.UI.ITemplate&gt; that is used to contain the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls in the zone.","pos":[0,190],"source":"The ZoneTemplate property references a template of type <xref:System.Web.UI.ITemplate> that is used to contain the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the zone."},{"content":"The zone template enables page developers to declare the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls they want to use in persistence format, rather than having to create all the controls programmatically.","pos":[191,414],"source":" The zone template enables page developers to declare the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls they want to use in persistence format, rather than having to create all the controls programmatically."},{"content":"The set accessor for the ZoneTemplate property calls the &lt;xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A&gt; method, which forces the collection of &lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt; controls that are declared in the zone template on the page to be refreshed.","pos":[421,731],"source":"       The set accessor for the ZoneTemplate property calls the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> method, which forces the collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that are declared in the zone template on the page to be refreshed."},{"content":"This ensures that the collection of controls referenced by the zone remains current whenever a user changes the controls actually declared within the template on the page.","pos":[732,903]}]}]},{"pos":[32253,32357],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ITemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that acts as a container for child controls in the zone.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.ITemplate\"></xref> that acts as a container for child controls in the zone."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.WebParts.CatalogZone\n  id: CatalogZone\n  children:\n  - System.Web.UI.WebControls.WebParts.CatalogZone.#ctor\n  - System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts\n  - System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate\n  langs:\n  - csharp\n  name: CatalogZone\n  nameWithType: CatalogZone\n  fullName: System.Web.UI.WebControls.WebParts.CatalogZone\n  type: Class\n  summary: Serves as the primary control in the Web Parts control set for hosting <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls on a Web page.\n  remarks: \"Within the Web Parts control set, a zone is a region on a Web page that contains Web Parts controls. A Web Parts zone is created by a zone control, which is a type of <xref:System.Web.UI.WebControls.CompositeControl> designed to contain other controls. The primary functions of a zone are to lay out the controls it contains, and to provide a common user interface (UI) for those controls. For general information about zones and how they are used in Web Parts applications, see the base <xref:System.Web.UI.WebControls.WebParts.WebZone> class, and [Web Parts Control Set Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n A key feature of Web Parts controls is that they allow end users to modify (or personalize) Web pages according to their preferences, and save their personalized settings for future browser sessions. One aspect of modifying Web Parts pages includes the ability to add <xref:System.Web.UI.WebControls.WebParts.WebPart> controls or other server controls to a Web Parts page. The CatalogZone control provides a list or catalog of controls that users can add to a page.  \\n  \\n The CatalogZone control is one of the fundamental controls in the Web Parts control set. It derives from the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class, and most of its behavior is inherited from that class. The CatalogZone class essentially adds to the base class a zone template, which is an implementation of the <xref:System.Web.UI.ITemplate> interface. The zone template enables developers to declaratively add <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls to a zone in the page persistence format.  \\n  \\n> [!IMPORTANT]\\n>  A CatalogZone zone can contain only <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, and conversely, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls can reside only in zones that derive from the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class, such as CatalogZone.  \\n  \\n A CatalogZone control becomes visible only when a user switches a Web page to catalog display mode (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>). A catalog can contain several types of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Each <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is a type of container that contains the server controls users can add to the page. The <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls differ according to where the server controls they contain are coming from. The following table summarizes the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls provided with the Web Parts control set and, for each control, what kind of server controls it contains.  \\n  \\n|Control|Description|  \\n|-------------|-----------------|  \\n|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Maintains references to controls that have been closed on a page. These controls can be reopened (added back to the page) by users.|  \\n|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Contains references to controls that are declared in a Web Parts catalog in the markup of a Web page. These controls can be added to a Web page by users.|  \\n|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Provides the UI for a user to upload a definition file (an XML file with a .WebPart extension and a specified format that contains state information) for a control to a catalog, so that the control can be added to a Web page.|  \\n  \\n Because the CatalogZone class adds only a zone template to the behavior of its base class, it has few members. The <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> constructor is a default constructor; with it, you can initialize a new instance of the CatalogZone class. The <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> property gets or sets a reference to the <xref:System.Web.UI.ITemplate> object that contains the controls for the zone. The <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> method is critical. It overrides the base method to create the collection of all <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls contained within the zone template.  \\n  \\n> [!NOTE]\\n>  The buttons in the CatalogZone UI require client-side scripting in order to work correctly. If scripting is disabled in the browser, the user will not be able to perform actions through the CatalogZone UI.  \\n  \\n## Accessibility  \\n The markup rendered by default for this control might not conform to accessibility standards such as the Web Content Accessibility Guidelines 1.0 (WCAG) priority 1 guidelines. For details about accessibility support for this control, see [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates declarative and programmatic use of the CatalogZone control. The code example has four parts:  \\n  \\n-   A user control that enables you to change display modes on the Web page.  \\n  \\n-   A file with the source code for a custom CatalogZone control, and a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control that is imported by the catalog and added to the Web page.  \\n  \\n-   A Web page that declares the user control, and the custom CatalogZone control.  \\n  \\n-   An explanation of how to run the example.  \\n  \\n The first part of this code example is the user control that enables users to change display modes on a Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[WebParts_CatalogZone_Overview#7](~/add/codesnippet/csharp/t-system.web.ui.webcontr_342_1.ascx)]\\n [!code-vb[WebParts_CatalogZone_Overview#7](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_342_1.ascx)]  \\n  \\n The second part of the code example contains the code for the custom CatalogZone and <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The code for the CatalogZone control demonstrates how to inherit from the CatalogZone class and customize its properties by setting some default property values in the constructor. The source code also demonstrates how to create a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `TextDisplayWebPart`. This is the control associated with the .WebPart description file that you will import as part of this code example. After you import the description file by using the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control on the Web page, you'll be able to add the `TextDisplayWebPart` control to the page, fully pre-configured as specified in the description file.  \\n  \\n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation, so if you want to run the example this way, name the source code file and add it to an App_Code subfolder of your Web application's root directory. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[WebParts_CatalogZone_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_342_2.cs)]\\n [!code-vb[WebParts_CatalogZone_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_342_2.vb)]  \\n  \\n The third part of the code example is the Web page that contains the controls. It contains a `Register` directive for the user control, and another for the source file with the custom controls. Note that in the second directive, it does not name the assembly, because the example does not use an assembly, it uses dynamic compilation with the source code placed in the App_Code subfolder. The Web page declares a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and within its child `<zonetemplate>` element, it declares a <xref:System.Web.UI.WebControls.BulletedList> control. While this is a standard ASP.NET control, it will have full Web Parts functionality at run time, because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control wraps any server control placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, so that other server controls can participate in Web Parts applications. Also declared in this zone is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`. Notice that this control has an attribute of `ExportMode=\\\"All\\\"` declared on it. This enables you to export a .WebPart description file that contains the property values of the control, which can be imported by other users to add the pre-configured control to other Web pages.  \\n  \\n> [!NOTE]\\n>  To enable users of a Web Parts application to export a description file for <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, you must also enable the export feature in the Web application by adding an `enableExport=\\\"true\\\"` attribute to the `<webParts>` element (which is a child of the `<system.web>` element) in the Web.config file. Export is disabled by default, so if you not yet enabled export for your application, edit the Web.config file and do it now.  \\n  \\n The Web page also declares the custom CatalogZone control and, within it, a `<zonetemplate>` element that contains an <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. The user will use this control at run time to import the .WebPart description file for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \\n  \\n [!code-cs[WebParts_CatalogZone_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_342_3.aspx)]\\n [!code-vb[WebParts_CatalogZone_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_342_3.aspx)]  \\n  \\n Now run the code example. Load the Web page in a browser. The first step is to export a .WebPart description file for the `TextDisplayWebPart` control. Click the verbs menu on the custom control (represented by the downward arrow in the title bar), and click **Export**. Follow the instructions to save a description file for the control. Open the .WebPart description file in an editor, and edit the value of the title property text. Find the `<property>` element that has the attribute `name=\\\"Title\\\"`, and edit the title text that is contained between the opening and closing `<property>` tags. Now close the Web page, and edit the page source in an editor. Delete the `<aspSample:TextDisplayWebPart>` control declaration element, then save and close the file.  \\n  \\n Load the Web page again in a browser. The `TextDisplayWebPart` control should not appear, because you removed it. Use the **Display Mode** drop-down list control and select **Catalog** to switch the page to catalog mode. Notice that the custom CatalogZone control appears, along with the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Click the **Browse** button to locate the .WebPart description file that you exported for the `TextDisplayWebPart` control. You can click **Upload**, select the check box next to the imported control, and click **Add** to add it to the page. Click **Close Catalog** to return the page to normal browse mode. The imported control should now appear in the page, and the title that appears in the title bar of the control should be the title text you added to the .WebPart description file.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(\"System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.Web.UI.SupportsEventValidation]\n\n      public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  - System.Web.UI.WebControls.WebControl\n  - System.Web.UI.WebControls.CompositeControl\n  - System.Web.UI.WebControls.WebParts.WebZone\n  - System.Web.UI.WebControls.WebParts.ToolZone\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.CreateControlCollection\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String)\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OnUnload(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.WebControls.CompositeControl.Controls\n  - System.Web.UI.WebControls.CompositeControl.DataBind\n  - System.Web.UI.WebControls.CompositeControl.RecreateChildControls\n  - System.Web.UI.WebControls.CompositeControl.SupportsDisabledAttribute\n  - System.Web.UI.WebControls.CompositeControl.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls\n  - System.Web.UI.WebControls.WebControl.AccessKey\n  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.Attributes\n  - System.Web.UI.WebControls.WebControl.BackColor\n  - System.Web.UI.WebControls.WebControl.BorderColor\n  - System.Web.UI.WebControls.WebControl.BorderStyle\n  - System.Web.UI.WebControls.WebControl.BorderWidth\n  - System.Web.UI.WebControls.WebControl.ControlStyle\n  - System.Web.UI.WebControls.WebControl.ControlStyleCreated\n  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)\n  - System.Web.UI.WebControls.WebControl.CreateControlStyle\n  - System.Web.UI.WebControls.WebControl.CssClass\n  - System.Web.UI.WebControls.WebControl.DisabledCssClass\n  - System.Web.UI.WebControls.WebControl.Enabled\n  - System.Web.UI.WebControls.WebControl.EnableTheming\n  - System.Web.UI.WebControls.WebControl.Font\n  - System.Web.UI.WebControls.WebControl.ForeColor\n  - System.Web.UI.WebControls.WebControl.HasAttributes\n  - System.Web.UI.WebControls.WebControl.Height\n  - System.Web.UI.WebControls.WebControl.IsEnabled\n  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.SkinID\n  - System.Web.UI.WebControls.WebControl.Style\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  - System.Web.UI.WebControls.WebControl.TabIndex\n  - System.Web.UI.WebControls.WebControl.TagName\n  - System.Web.UI.WebControls.WebControl.ToolTip\n  - System.Web.UI.WebControls.WebControl.Width\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent\n  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState\n  - System.Web.UI.WebControls.WebParts.ToolZone.AssociatedDisplayModes\n  - System.Web.UI.WebControls.WebParts.ToolZone.Display\n  - System.Web.UI.WebControls.WebParts.ToolZone.EditUIStyle\n  - System.Web.UI.WebControls.WebParts.ToolZone.HeaderCloseVerb\n  - System.Web.UI.WebControls.WebParts.ToolZone.HeaderVerbStyle\n  - System.Web.UI.WebControls.WebParts.ToolZone.InstructionTextStyle\n  - System.Web.UI.WebControls.WebParts.ToolZone.LabelStyle\n  - System.Web.UI.WebControls.WebParts.ToolZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)\n  - System.Web.UI.WebControls.WebParts.ToolZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)\n  - System.Web.UI.WebControls.WebParts.ToolZone.RenderHeader(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebParts.ToolZone.RenderVerb(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPartVerb)\n  - System.Web.UI.WebControls.WebParts.ToolZone.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)\n  - System.Web.UI.WebControls.WebParts.ToolZone.Visible\n  - System.Web.UI.WebControls.WebParts.WebZone.BackImageUrl\n  - System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneTextStyle\n  - System.Web.UI.WebControls.WebParts.WebZone.ErrorStyle\n  - System.Web.UI.WebControls.WebParts.WebZone.FooterStyle\n  - System.Web.UI.WebControls.WebParts.WebZone.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)\n  - System.Web.UI.WebControls.WebParts.WebZone.HasFooter\n  - System.Web.UI.WebControls.WebParts.WebZone.HasHeader\n  - System.Web.UI.WebControls.WebParts.WebZone.HeaderStyle\n  - System.Web.UI.WebControls.WebParts.WebZone.Padding\n  - System.Web.UI.WebControls.WebParts.WebZone.PartChromePadding\n  - System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle\n  - System.Web.UI.WebControls.WebParts.WebZone.PartChromeType\n  - System.Web.UI.WebControls.WebParts.WebZone.PartStyle\n  - System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle\n  - System.Web.UI.WebControls.WebParts.WebZone.RenderBeginTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebParts.WebZone.RenderClientScript\n  - System.Web.UI.WebControls.WebParts.WebZone.RenderContents(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebParts.WebZone.TagKey\n  - System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType\n  - System.Web.UI.WebControls.WebParts.WebZone.VerbStyle\n  - System.Web.UI.WebControls.WebParts.WebZone.WebPartManager\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogZone.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.WebParts.CatalogZone\n  langs:\n  - csharp\n  name: CatalogZone()\n  nameWithType: CatalogZone.CatalogZone()\n  fullName: System.Web.UI.WebControls.WebParts.CatalogZone.CatalogZone()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogZone\"></xref> class.\n  remarks: Because the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control implements a zone template, it is usually used declaratively and you will seldom need to create a new instance of the class using the CatalogZone constructor. However, if you inherit from the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class to create a custom zone, you might wish to use the constructor to initialize some of its property values and customize its appearance.\n  example:\n  - \"The following code example demonstrates the programmatic use of the CatalogZone constructor in a custom <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control. The constructor is used to initialize some default property values for the control. The following code shows the custom <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class with the constructor declared near the top. For the full code and instructions required to set up and run the example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class overview.  \\n  \\n [!code-cs[WebParts_CatalogZone_Overview#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_238_1.cs)]\\n [!code-vb[WebParts_CatalogZone_Overview#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_238_1.vb)]\"\n  syntax:\n    content: public CatalogZone ();\n    parameters: []\n  overload: System.Web.UI.WebControls.WebParts.CatalogZone.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts\n  id: CreateCatalogParts\n  parent: System.Web.UI.WebControls.WebParts.CatalogZone\n  langs:\n  - csharp\n  name: CreateCatalogParts()\n  nameWithType: CatalogZone.CreateCatalogParts()\n  fullName: System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Creates an instance of each <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> type that is declared in the zone.\n  remarks: \"The CreateCatalogParts method is a critical method because when a user switches a page to catalog display mode, this method creates all the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that make up the Web Parts catalog.  \\n  \\n The CreateCatalogParts method in the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class provided with the Web Parts control set can create any server control that inherits from the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> class. So, if you create a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control and declare it on a page within a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control, this method will create your control when a user switches the page to catalog mode.  \\n  \\n However, for various reasons you might want control over the CreateCatalogParts method. You might want it to create only certain <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. For example, suppose you create a set of custom <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that have a consistent appearance and belong to a single product or organization. If you want page developers to be limited to using those custom controls in a catalog, then you should inherit from the <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class, override the CreateCatalogParts method, and allow the method to create only controls of the same type as your custom controls.\"\n  syntax:\n    content: protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();\n    parameters: []\n    return:\n      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n      description: A <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPartCollection\"></xref> with references to all the <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> controls in the zone.\n  overload: System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The current <xref href=\"System.Web.UI.WebControls.WebParts.CatalogPart\"></xref> control does not have an ID.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate\n  id: ZoneTemplate\n  parent: System.Web.UI.WebControls.WebParts.CatalogZone\n  langs:\n  - csharp\n  name: ZoneTemplate\n  nameWithType: CatalogZone.ZoneTemplate\n  fullName: System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Gets or sets a template to contain child controls within a <xref href=\"System.Web.UI.WebControls.WebParts.CatalogZone\"></xref> control in page persistence format.\n  remarks: \"The ZoneTemplate property references a template of type <xref:System.Web.UI.ITemplate> that is used to contain the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the zone. The zone template enables page developers to declare the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls they want to use in persistence format, rather than having to create all the controls programmatically.  \\n  \\n The set accessor for the ZoneTemplate property calls the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> method, which forces the collection of <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls that are declared in the zone template on the page to be refreshed. This ensures that the collection of controls referenced by the zone remains current whenever a user changes the controls actually declared within the template on the page.\"\n  syntax:\n    content: public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }\n    return:\n      type: System.Web.UI.ITemplate\n      description: An <xref href=\"System.Web.UI.ITemplate\"></xref> that acts as a container for child controls in the zone.\n  overload: System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase\n  isExternal: false\n  name: System.Web.UI.WebControls.WebParts.CatalogZoneBase\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Web.UI.WebControls.WebParts.CatalogZone.#ctor\n  parent: System.Web.UI.WebControls.WebParts.CatalogZone\n  isExternal: false\n  name: CatalogZone()\n  nameWithType: CatalogZone.CatalogZone()\n  fullName: System.Web.UI.WebControls.WebParts.CatalogZone.CatalogZone()\n- uid: System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts\n  parent: System.Web.UI.WebControls.WebParts.CatalogZone\n  isExternal: false\n  name: CreateCatalogParts()\n  nameWithType: CatalogZone.CreateCatalogParts()\n  fullName: System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts()\n- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n  parent: System.Web.UI.WebControls.WebParts\n  isExternal: false\n  name: CatalogPartCollection\n  nameWithType: CatalogPartCollection\n  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection\n- uid: System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate\n  parent: System.Web.UI.WebControls.WebParts.CatalogZone\n  isExternal: false\n  name: ZoneTemplate\n  nameWithType: CatalogZone.ZoneTemplate\n  fullName: System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate\n- uid: System.Web.UI.ITemplate\n  parent: System.Web.UI\n  isExternal: false\n  name: ITemplate\n  nameWithType: ITemplate\n  fullName: System.Web.UI.ITemplate\n- uid: System.Web.UI.WebControls.WebParts.CatalogZone.#ctor*\n  parent: System.Web.UI.WebControls.WebParts.CatalogZone\n  isExternal: false\n  name: CatalogZone\n  nameWithType: CatalogZone.CatalogZone\n- uid: System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts*\n  parent: System.Web.UI.WebControls.WebParts.CatalogZone\n  isExternal: false\n  name: CreateCatalogParts\n  nameWithType: CatalogZone.CreateCatalogParts\n- uid: System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate*\n  parent: System.Web.UI.WebControls.WebParts.CatalogZone\n  isExternal: false\n  name: ZoneTemplate\n  nameWithType: CatalogZone.ZoneTemplate\n"}