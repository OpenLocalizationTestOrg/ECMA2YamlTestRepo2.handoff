{"nodes":[{"pos":[906,978],"content":"Specifies the base class used for displaying dialog boxes on the screen.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the base class used for displaying dialog boxes on the screen.","pos":[0,72]}]},{"pos":[990,1342],"content":"Inherited classes are required to implement <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> by invoking <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> to create a specific common dialog box. Inherited classes can optionally override <xref:System.Windows.Forms.CommonDialog.HookProc%2A> to implement specific dialog box hook functionality.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inherited classes are required to implement <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> by invoking <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> to create a specific common dialog box. Inherited classes can optionally override <xref:System.Windows.Forms.CommonDialog.HookProc%2A> to implement specific dialog box hook functionality.","pos":[0,352],"nodes":[{"content":"Inherited classes are required to implement &lt;xref:System.Windows.Forms.CommonDialog.RunDialog%2A&gt; by invoking &lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt; to create a specific common dialog box.","pos":[0,204],"source":"Inherited classes are required to implement <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> by invoking <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> to create a specific common dialog box."},{"content":"Inherited classes can optionally override &lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt; to implement specific dialog box hook functionality.","pos":[205,352],"source":" Inherited classes can optionally override <xref:System.Windows.Forms.CommonDialog.HookProc%2A> to implement specific dialog box hook functionality."}]}]},{"pos":[3413,3508],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CommonDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.CommonDialog\"></xref> class."},{"pos":[4020,4087],"content":"Occurs when the user clicks the Help button on a common dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user clicks the Help button on a common dialog box.","pos":[0,67]}]},{"pos":[4099,4211],"content":"For information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"pos":[5699,5711],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6286,6403],"content":"Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.","pos":[0,117]}]},{"pos":[6416,7707],"content":"A hook procedure is a mechanism by which a function can intercept events before they reach an application. When you override the HookProc method for a <xref:System.Windows.Forms.CommonDialog> class, the operating system invokes your override of the function to post operating system messages to the window.       By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.      > [!NOTE] >  This method uses <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> to prevent it from being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> permission. If your code can be called from partially trusted code, do not pass user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation. For important limitations on using the `LinkDemand` member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5).       This property also uses the <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> security attribute; to override this member, the derived class must have the `CustomPermission` permission.","needQuote":false,"needEscape":true,"nodes":[{"content":"A hook procedure is a mechanism by which a function can intercept events before they reach an application.","pos":[0,106]},{"content":"When you override the HookProc method for a &lt;xref:System.Windows.Forms.CommonDialog&gt; class, the operating system invokes your override of the function to post operating system messages to the window.","pos":[107,306],"source":" When you override the HookProc method for a <xref:System.Windows.Forms.CommonDialog> class, the operating system invokes your override of the function to post operating system messages to the window."},{"content":"By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.","pos":[313,420]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method uses &lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt; to prevent it from being called from untrusted code; only the immediate caller is required to have &lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName&gt; permission.","pos":[426,746],"source":"      > [!NOTE] >  This method uses <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> to prevent it from being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> permission."},{"content":"If your code can be called from partially trusted code, do not pass user input to &lt;xref:System.Runtime.InteropServices.Marshal&gt; class methods without validation.","pos":[747,908],"source":" If your code can be called from partially trusted code, do not pass user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation."},{"content":"For important limitations on using the <ph id=\"ph1\">`LinkDemand`</ph> member, see <bpt id=\"p1\">[</bpt>Demand vs. LinkDemand<ept id=\"p1\">](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>.","pos":[909,1067],"source":" For important limitations on using the `LinkDemand` member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5)."},{"content":"This property also uses the &lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt; security attribute; to override this member, the derived class must have the <ph id=\"ph1\">`CustomPermission`</ph> permission.","pos":[1074,1284],"source":"       This property also uses the <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> security attribute; to override this member, the derived class must have the `CustomPermission` permission."}]},{"pos":[8803,8839],"content":"The handle to the dialog box window.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handle to the dialog box window.","pos":[0,36]}]},{"pos":[8898,8925],"content":"The message being received.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message being received.","pos":[0,27]}]},{"pos":[8988,9029],"content":"Additional information about the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Additional information about the message.","pos":[0,41]}]},{"pos":[9092,9133],"content":"Additional information about the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Additional information about the message.","pos":[0,41]}]},{"pos":[9191,9335],"content":"A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.","pos":[0,144]}]},{"pos":[9864,9948],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CommonDialog.HelpRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.CommonDialog.HelpRequest\"></xref> event."},{"pos":[9960,10080],"content":"This method is invoked when the Help button is clicked. Inheriting classes can override this method to handle the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is invoked when the Help button is clicked. Inheriting classes can override this method to handle the event.","pos":[0,120],"nodes":[{"content":"This method is invoked when the Help button is clicked.","pos":[0,55]},{"content":"Inheriting classes can override this method to handle the event.","pos":[56,120]}]}]},{"pos":[10232,10320],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.HelpEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides the event data.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Forms.HelpEventArgs\"></xref> that provides the event data."},{"pos":[10976,11083],"content":"Defines the owner window procedure that is overridden to add specific functionality to a common dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the owner window procedure that is overridden to add specific functionality to a common dialog box.","pos":[0,107]}]},{"pos":[11095,11289],"content":"Control is transferred here when messages are sent to the owner window of the common dialog box. Inheriting classes can override this method to add specific functionality to a common dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Control is transferred here when messages are sent to the owner window of the common dialog box. Inheriting classes can override this method to add specific functionality to a common dialog box.","pos":[0,194],"nodes":[{"content":"Control is transferred here when messages are sent to the owner window of the common dialog box.","pos":[0,96]},{"content":"Inheriting classes can override this method to add specific functionality to a common dialog box.","pos":[97,194]}]}]},{"pos":[11481,11522],"content":"The window handle of the message to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The window handle of the message to send.","pos":[0,41]}]},{"pos":[11581,11607],"content":"The Win32 message to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Win32 message to send.","pos":[0,26]}]},{"pos":[11670,11708],"content":"The <ph id=\"ph1\">`wparam`</ph> to send with the message.","needQuote":true,"needEscape":true,"source":"The `wparam` to send with the message."},{"pos":[11771,11809],"content":"The <ph id=\"ph1\">`lparam`</ph> to send with the message.","needQuote":true,"needEscape":true,"source":"The `lparam` to send with the message."},{"pos":[11867,11944],"content":"The result of the message processing, which is dependent on the message sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of the message processing, which is dependent on the message sent.","pos":[0,77]}]},{"pos":[12374,12479],"content":"When overridden in a derived class, resets the properties of a common dialog box to their default values.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, resets the properties of a common dialog box to their default values.","pos":[0,105]}]},{"pos":[13043,13109],"content":"When overridden in a derived class, specifies a common dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, specifies a common dialog box.","pos":[0,66]}]},{"pos":[13121,13376],"content":"This method is invoked when the user of a common dialog box calls <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>, and it must be overridden by inherited classes of <xref:System.Windows.Forms.CommonDialog> to implement a specific common dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is invoked when the user of a common dialog box calls &lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;, and it must be overridden by inherited classes of &lt;xref:System.Windows.Forms.CommonDialog&gt; to implement a specific common dialog box.","pos":[0,255],"source":"This method is invoked when the user of a common dialog box calls <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>, and it must be overridden by inherited classes of <xref:System.Windows.Forms.CommonDialog> to implement a specific common dialog box."}]},{"pos":[13535,13623],"content":"A value that represents the window handle of the owner window for the common dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that represents the window handle of the owner window for the common dialog box.","pos":[0,88]}]},{"pos":[13682,13857],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dialog box was successfully run; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dialog box was successfully run; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14309,14355],"content":"Runs a common dialog box with a default owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"Runs a common dialog box with a default owner.","pos":[0,46]}]},{"pos":[14367,14444],"content":"This method implements <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method implements &lt;xref:System.Windows.Forms.CommonDialog.RunDialog%2A&gt;.","pos":[0,77],"source":"This method implements <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>."}]},{"pos":[15325,15487],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DialogResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user clicks OK in the dialog box; otherwise, <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.DialogResult\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Forms.DialogResult\"></xref> if the user clicks OK in the dialog box; otherwise, <xref href=\"System.Windows.Forms.DialogResult\"></xref>."},{"pos":[16046,16096],"content":"Runs a common dialog box with the specified owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"Runs a common dialog box with the specified owner.","pos":[0,50]}]},{"pos":[16108,16452],"content":"This version of the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method allows you to specify a specific form or control that will own the dialog box that is shown. If you use the version of this method that has no parameters, the dialog box being shown would be owned automatically by the currently active window of your application.","needQuote":true,"needEscape":true,"nodes":[{"content":"This version of the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method allows you to specify a specific form or control that will own the dialog box that is shown. If you use the version of this method that has no parameters, the dialog box being shown would be owned automatically by the currently active window of your application.","pos":[0,344],"nodes":[{"content":"This version of the &lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt; method allows you to specify a specific form or control that will own the dialog box that is shown.","pos":[0,174],"source":"This version of the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method allows you to specify a specific form or control that will own the dialog box that is shown."},{"content":"If you use the version of this method that has no parameters, the dialog box being shown would be owned automatically by the currently active window of your application.","pos":[175,344]}]}]},{"pos":[16668,16822],"content":"Any object that implements <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.IWin32Window\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the top-level window that will own the modal dialog box.","needQuote":true,"needEscape":true,"source":"Any object that implements <xref href=\"System.Windows.Forms.IWin32Window\"></xref> that represents the top-level window that will own the modal dialog box."},{"pos":[16900,17066],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DialogResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user clicks <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept> in the dialog box; otherwise, <bpt id=\"p3\">&lt;xref href=\"System.Windows.Forms.DialogResult\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Windows.Forms.DialogResult\"></xref> if the user clicks **OK** in the dialog box; otherwise, <xref href=\"System.Windows.Forms.DialogResult\"></xref>."},{"pos":[17480,17540],"content":"Gets or sets an object that contains data about the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an object that contains data about the control.","pos":[0,60]}]},{"pos":[17552,17619],"content":"Use this property to store arbitrary information about the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this property to store arbitrary information about the control.","pos":[0,67]}]},{"pos":[17732,17827],"content":"The object that contains data about the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CommonDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object that contains data about the <xref href=\"System.Windows.Forms.CommonDialog\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.CommonDialog\n  id: CommonDialog\n  children:\n  - System.Windows.Forms.CommonDialog.#ctor\n  - System.Windows.Forms.CommonDialog.HelpRequest\n  - System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)\n  - System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - System.Windows.Forms.CommonDialog.Reset\n  - System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)\n  - System.Windows.Forms.CommonDialog.ShowDialog\n  - System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)\n  - System.Windows.Forms.CommonDialog.Tag\n  langs:\n  - csharp\n  name: CommonDialog\n  nameWithType: CommonDialog\n  fullName: System.Windows.Forms.CommonDialog\n  type: Class\n  summary: Specifies the base class used for displaying dialog boxes on the screen.\n  remarks: Inherited classes are required to implement <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> by invoking <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> to create a specific common dialog box. Inherited classes can optionally override <xref:System.Windows.Forms.CommonDialog.HookProc%2A> to implement specific dialog box hook functionality.\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.ColorDialog> implementation of CommonDialog and illustrates creating and showing a dialog box. This example requires that the method is called from within an existing form, which has a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.Button> placed on it.  \\n  \\n [!code-cs[Classic ColorDialog Example#1](~/add/codesnippet/csharp/t-system.windows.forms.c_1_1.cs)]\\n [!code-cpp[Classic ColorDialog Example#1](~/add/codesnippet/cpp/t-system.windows.forms.c_1_1.cpp)]\\n [!code-vb[Classic ColorDialog Example#1](~/add/codesnippet/visualbasic/ClassicColorDialogExample/Form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.ToolboxItemFilter(\"System.Windows.Forms\")]\n\n      public abstract class CommonDialog : System.ComponentModel.Component\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Windows.Forms.CommonDialog.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.CommonDialog\n  langs:\n  - csharp\n  name: CommonDialog()\n  nameWithType: CommonDialog.CommonDialog()\n  fullName: System.Windows.Forms.CommonDialog.CommonDialog()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.CommonDialog\"></xref> class.\n  syntax:\n    content: public CommonDialog ();\n    parameters: []\n  overload: System.Windows.Forms.CommonDialog.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CommonDialog.HelpRequest\n  id: HelpRequest\n  parent: System.Windows.Forms.CommonDialog\n  langs:\n  - csharp\n  name: HelpRequest\n  nameWithType: CommonDialog.HelpRequest\n  fullName: System.Windows.Forms.CommonDialog.HelpRequest\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user clicks the Help button on a common dialog box.\n  remarks: For information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example demonstrates initializing a <xref:System.Windows.Forms.ColorDialog> object setting the <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>, <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> properties. The <xref:System.Windows.Forms.ColorDialog> object does not allow the user to set a custom color, but it allows the full set of basic colors to be displayed. By setting the <xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A> property to false, it allows the display of colors that are combinations of other colors on systems with 256 or less colors. The example also shows setting the <xref:System.Windows.Forms.ColorDialog.ShowHelp%2A> property and handling a HelpRequest event for a dialog box. To run the example, paste the following code in a form and call the `InitializeColorDialog` method in the form's constructor or `Load` method. This example requires that the `Click` event of the button is connected to the event handler defined in the example.  \\n  \\n [!code-vb[System.Windows.Forms.ColorDialogHelp#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_65_1.vb)]\\n [!code-cpp[System.Windows.Forms.ColorDialogHelp#1](~/add/codesnippet/cpp/e-system.windows.forms.c_65_1.cpp)]\\n [!code-cs[System.Windows.Forms.ColorDialogHelp#1](~/add/codesnippet/csharp/e-system.windows.forms.c_65_1.cs)]\"\n  syntax:\n    content: public event EventHandler HelpRequest;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: System.Windows.Forms.CommonDialog\n  langs:\n  - csharp\n  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  nameWithType: CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  fullName: System.Windows.Forms.CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.\n  remarks: \"A hook procedure is a mechanism by which a function can intercept events before they reach an application. When you override the HookProc method for a <xref:System.Windows.Forms.CommonDialog> class, the operating system invokes your override of the function to post operating system messages to the window.  \\n  \\n By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.  \\n  \\n> [!NOTE]\\n>  This method uses <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> to prevent it from being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> permission. If your code can be called from partially trusted code, do not pass user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation. For important limitations on using the `LinkDemand` member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5).  \\n  \\n This property also uses the <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> security attribute; to override this member, the derived class must have the `CustomPermission` permission.\"\n  example:\n  - \"The following code example demonstrates how to override the HookProc method. The example consists of a class that inherits the <xref:System.Windows.Forms.CommonDialog> class. In the class's HookProc override, the example evaluates the method's `msg` parameter against constant values for particular Windows messages. If the `msg` parameter equals the specified constant, the example writes trace output identifying the Windows message that was passed to the HookProc method. This example assumes that the class in which the HookProc method is declared inherits the <xref:System.Windows.Forms.CommonDialog> class.  \\n  \\n [!code-cs[HookProc Example#1](~/add/codesnippet/csharp/8ab558bc-22fd-4de8-9995-_1.cs)]\\n [!code-cpp[HookProc Example#1](~/add/codesnippet/cpp/8ab558bc-22fd-4de8-9995-_1.cpp)]\\n [!code-vb[HookProc Example#1](~/add/codesnippet/visualbasic/8ab558bc-22fd-4de8-9995-_1.vb)]\"\n  syntax:\n    content: protected virtual IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);\n    parameters:\n    - id: hWnd\n      type: System.IntPtr\n      description: The handle to the dialog box window.\n    - id: msg\n      type: System.Int32\n      description: The message being received.\n    - id: wparam\n      type: System.IntPtr\n      description: Additional information about the message.\n    - id: lparam\n      type: System.IntPtr\n      description: Additional information about the message.\n    return:\n      type: System.IntPtr\n      description: A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.\n  overload: System.Windows.Forms.CommonDialog.HookProc*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)\n  id: OnHelpRequest(System.EventArgs)\n  parent: System.Windows.Forms.CommonDialog\n  langs:\n  - csharp\n  name: OnHelpRequest(EventArgs)\n  nameWithType: CommonDialog.OnHelpRequest(EventArgs)\n  fullName: System.Windows.Forms.CommonDialog.OnHelpRequest(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.CommonDialog.HelpRequest\"></xref> event.\n  remarks: This method is invoked when the Help button is clicked. Inheriting classes can override this method to handle the event.\n  syntax:\n    content: protected virtual void OnHelpRequest (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.Windows.Forms.HelpEventArgs\"></xref> that provides the event data.\n  overload: System.Windows.Forms.CommonDialog.OnHelpRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  id: OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: System.Windows.Forms.CommonDialog\n  langs:\n  - csharp\n  name: OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)\n  nameWithType: CommonDialog.OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)\n  fullName: System.Windows.Forms.CommonDialog.OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Defines the owner window procedure that is overridden to add specific functionality to a common dialog box.\n  remarks: Control is transferred here when messages are sent to the owner window of the common dialog box. Inheriting classes can override this method to add specific functionality to a common dialog box.\n  syntax:\n    content: protected virtual IntPtr OwnerWndProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);\n    parameters:\n    - id: hWnd\n      type: System.IntPtr\n      description: The window handle of the message to send.\n    - id: msg\n      type: System.Int32\n      description: The Win32 message to send.\n    - id: wparam\n      type: System.IntPtr\n      description: The `wparam` to send with the message.\n    - id: lparam\n      type: System.IntPtr\n      description: The `lparam` to send with the message.\n    return:\n      type: System.IntPtr\n      description: The result of the message processing, which is dependent on the message sent.\n  overload: System.Windows.Forms.CommonDialog.OwnerWndProc*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CommonDialog.Reset\n  id: Reset\n  parent: System.Windows.Forms.CommonDialog\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: CommonDialog.Reset()\n  fullName: System.Windows.Forms.CommonDialog.Reset()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: When overridden in a derived class, resets the properties of a common dialog box to their default values.\n  syntax:\n    content: public abstract void Reset ();\n    parameters: []\n  overload: System.Windows.Forms.CommonDialog.Reset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)\n  id: RunDialog(System.IntPtr)\n  parent: System.Windows.Forms.CommonDialog\n  langs:\n  - csharp\n  name: RunDialog(IntPtr)\n  nameWithType: CommonDialog.RunDialog(IntPtr)\n  fullName: System.Windows.Forms.CommonDialog.RunDialog(IntPtr)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: When overridden in a derived class, specifies a common dialog box.\n  remarks: This method is invoked when the user of a common dialog box calls <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>, and it must be overridden by inherited classes of <xref:System.Windows.Forms.CommonDialog> to implement a specific common dialog box.\n  syntax:\n    content: protected abstract bool RunDialog (IntPtr hwndOwner);\n    parameters:\n    - id: hwndOwner\n      type: System.IntPtr\n      description: A value that represents the window handle of the owner window for the common dialog box.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dialog box was successfully run; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.CommonDialog.RunDialog*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CommonDialog.ShowDialog\n  id: ShowDialog\n  parent: System.Windows.Forms.CommonDialog\n  langs:\n  - csharp\n  name: ShowDialog()\n  nameWithType: CommonDialog.ShowDialog()\n  fullName: System.Windows.Forms.CommonDialog.ShowDialog()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Runs a common dialog box with a default owner.\n  remarks: This method implements <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>.\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.ColorDialog> implementation of <xref:System.Windows.Forms.CommonDialog> and illustrates creating and showing a dialog box. This example requires that the method is called from within an existing form, which has a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.Button> placed on it.  \\n  \\n [!code-cs[Classic ColorDialog Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_66_1.cs)]\\n [!code-cpp[Classic ColorDialog Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_66_1.cpp)]\\n [!code-vb[Classic ColorDialog Example#1](~/add/codesnippet/visualbasic/ClassicColorDialogExample/Form1.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.DialogResult ShowDialog ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.DialogResult\n      description: <xref href=\"System.Windows.Forms.DialogResult\"></xref> if the user clicks OK in the dialog box; otherwise, <xref href=\"System.Windows.Forms.DialogResult\"></xref>.\n  overload: System.Windows.Forms.CommonDialog.ShowDialog*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)\n  id: ShowDialog(System.Windows.Forms.IWin32Window)\n  parent: System.Windows.Forms.CommonDialog\n  langs:\n  - csharp\n  name: ShowDialog(IWin32Window)\n  nameWithType: CommonDialog.ShowDialog(IWin32Window)\n  fullName: System.Windows.Forms.CommonDialog.ShowDialog(IWin32Window)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Runs a common dialog box with the specified owner.\n  remarks: This version of the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method allows you to specify a specific form or control that will own the dialog box that is shown. If you use the version of this method that has no parameters, the dialog box being shown would be owned automatically by the currently active window of your application.\n  syntax:\n    content: public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);\n    parameters:\n    - id: owner\n      type: System.Windows.Forms.IWin32Window\n      description: Any object that implements <xref href=\"System.Windows.Forms.IWin32Window\"></xref> that represents the top-level window that will own the modal dialog box.\n    return:\n      type: System.Windows.Forms.DialogResult\n      description: <xref href=\"System.Windows.Forms.DialogResult\"></xref> if the user clicks **OK** in the dialog box; otherwise, <xref href=\"System.Windows.Forms.DialogResult\"></xref>.\n  overload: System.Windows.Forms.CommonDialog.ShowDialog*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.CommonDialog.Tag\n  id: Tag\n  parent: System.Windows.Forms.CommonDialog\n  langs:\n  - csharp\n  name: Tag\n  nameWithType: CommonDialog.Tag\n  fullName: System.Windows.Forms.CommonDialog.Tag\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets an object that contains data about the control.\n  remarks: Use this property to store arbitrary information about the control.\n  syntax:\n    content: public object Tag { get; set; }\n    return:\n      type: System.Object\n      description: The object that contains data about the <xref href=\"System.Windows.Forms.CommonDialog\"></xref>.\n  overload: System.Windows.Forms.CommonDialog.Tag*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Component\n  isExternal: false\n  name: System.ComponentModel.Component\n- uid: System.Windows.Forms.CommonDialog.#ctor\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: CommonDialog()\n  nameWithType: CommonDialog.CommonDialog()\n  fullName: System.Windows.Forms.CommonDialog.CommonDialog()\n- uid: System.Windows.Forms.CommonDialog.HelpRequest\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: HelpRequest\n  nameWithType: CommonDialog.HelpRequest\n  fullName: System.Windows.Forms.CommonDialog.HelpRequest\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  nameWithType: CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  fullName: System.Windows.Forms.CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: OnHelpRequest(EventArgs)\n  nameWithType: CommonDialog.OnHelpRequest(EventArgs)\n  fullName: System.Windows.Forms.CommonDialog.OnHelpRequest(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)\n  nameWithType: CommonDialog.OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)\n  fullName: System.Windows.Forms.CommonDialog.OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)\n- uid: System.Windows.Forms.CommonDialog.Reset\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: Reset()\n  nameWithType: CommonDialog.Reset()\n  fullName: System.Windows.Forms.CommonDialog.Reset()\n- uid: System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: RunDialog(IntPtr)\n  nameWithType: CommonDialog.RunDialog(IntPtr)\n  fullName: System.Windows.Forms.CommonDialog.RunDialog(IntPtr)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.CommonDialog.ShowDialog\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: ShowDialog()\n  nameWithType: CommonDialog.ShowDialog()\n  fullName: System.Windows.Forms.CommonDialog.ShowDialog()\n- uid: System.Windows.Forms.DialogResult\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DialogResult\n  nameWithType: DialogResult\n  fullName: System.Windows.Forms.DialogResult\n- uid: System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: ShowDialog(IWin32Window)\n  nameWithType: CommonDialog.ShowDialog(IWin32Window)\n  fullName: System.Windows.Forms.CommonDialog.ShowDialog(IWin32Window)\n- uid: System.Windows.Forms.IWin32Window\n  parent: System.Windows.Forms\n  isExternal: false\n  name: IWin32Window\n  nameWithType: IWin32Window\n  fullName: System.Windows.Forms.IWin32Window\n- uid: System.Windows.Forms.CommonDialog.Tag\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: Tag\n  nameWithType: CommonDialog.Tag\n  fullName: System.Windows.Forms.CommonDialog.Tag\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.CommonDialog.#ctor*\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: CommonDialog\n  nameWithType: CommonDialog.CommonDialog\n- uid: System.Windows.Forms.CommonDialog.HookProc*\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: HookProc\n  nameWithType: CommonDialog.HookProc\n- uid: System.Windows.Forms.CommonDialog.OnHelpRequest*\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: OnHelpRequest\n  nameWithType: CommonDialog.OnHelpRequest\n- uid: System.Windows.Forms.CommonDialog.OwnerWndProc*\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: OwnerWndProc\n  nameWithType: CommonDialog.OwnerWndProc\n- uid: System.Windows.Forms.CommonDialog.Reset*\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: Reset\n  nameWithType: CommonDialog.Reset\n- uid: System.Windows.Forms.CommonDialog.RunDialog*\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: RunDialog\n  nameWithType: CommonDialog.RunDialog\n- uid: System.Windows.Forms.CommonDialog.ShowDialog*\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: ShowDialog\n  nameWithType: CommonDialog.ShowDialog\n- uid: System.Windows.Forms.CommonDialog.Tag*\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: Tag\n  nameWithType: CommonDialog.Tag\n"}