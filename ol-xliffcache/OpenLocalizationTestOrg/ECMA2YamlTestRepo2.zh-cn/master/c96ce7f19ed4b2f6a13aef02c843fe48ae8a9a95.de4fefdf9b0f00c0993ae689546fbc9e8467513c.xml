{"nodes":[{"pos":[2195,2293],"content":"Represents a security identifier (SID) and provides marshaling and comparison operations for SIDs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a security identifier (SID) and provides marshaling and comparison operations for SIDs.","pos":[0,98]}]},{"pos":[3490,3679],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using an integer that represents the binary form of a security identifier (SID).","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class by using an integer that represents the binary form of a security identifier (SID)."},{"pos":[3832,3884],"content":"An integer that represents the binary form of a SID.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that represents the binary form of a SID.","pos":[0,52]}]},{"pos":[4444,4656],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified security identifier (SID) in Security Descriptor Definition Language (SDDL) format.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class by using the specified security identifier (SID) in Security Descriptor Definition Language (SDDL) format."},{"pos":[4805,4921],"content":"SDDL string for the SID used to create the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"SDDL string for the SID used to create the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[5525,5705],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using a specified binary representation of a security identifier (SID).","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class by using a specified binary representation of a security identifier (SID)."},{"pos":[5870,5909],"content":"The byte array that represents the SID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte array that represents the SID.","pos":[0,39]}]},{"pos":[5971,6032],"content":"The byte offset to use as the starting index in <ph id=\"ph1\">`binaryForm`</ph>.","needQuote":true,"needEscape":true,"source":"The byte offset to use as the starting index in `binaryForm`."},{"pos":[6827,7013],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified well known security identifier (SID) type and domain SID.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class by using the specified well known security identifier (SID) type and domain SID."},{"pos":[7281,7399],"content":"One of the enumeration values. This value must not be <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values.","pos":[0,30]},{"content":"This value must not be <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.WellKnownSidType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[31,118],"source":" This value must not be <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>."}]},{"pos":[9273,9595],"content":"Returns the account domain security identifier (SID) portion from the SID represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object if the SID represents a Windows account SID. If the SID does not represent a Windows account SID, this property returns <xref:System.ArgumentNullException>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the account domain security identifier (SID) portion from the SID represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object if the SID represents a Windows account SID.","pos":[0,210],"source":"Returns the account domain security identifier (SID) portion from the SID represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object if the SID represents a Windows account SID."},{"content":"If the SID does not represent a Windows account SID, this property returns &lt;xref:System.ArgumentNullException&gt;.","pos":[211,322],"source":" If the SID does not represent a Windows account SID, this property returns <xref:System.ArgumentNullException>."}]},{"pos":[9785,10024],"content":"The account domain SID portion from the SID represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object if the SID represents a Windows account SID; otherwise, it returns &lt;xref:System.ArgumentNullException&gt;.","needQuote":true,"needEscape":true,"source":"The account domain SID portion from the SID represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object if the SID represents a Windows account SID; otherwise, it returns <xref:System.ArgumentNullException>."},{"pos":[10532,10687],"content":"Returns the length, in bytes, of the security identifier (SID) represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the length, in bytes, of the security identifier (SID) represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[10800,10925],"content":"The length, in bytes, of the SID represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The length, in bytes, of the SID represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[11564,11750],"content":"Compares the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Compares the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[11953,11999],"content":"The object to compare with the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with the current object.","pos":[0,46]}]},{"pos":[12057,12576],"content":"A signed number indicating the relative values of this instance and <code>sid</code>.       <table><thead><tr><th> Return Value       </th><th> Description       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> This instance is less than <code>sid</code>.       </td></tr><tr><td> Zero       </td><td> This instance is equal to <code>sid</code>.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than <code>sid</code>.       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number indicating the relative values of this instance and <code>sid</code>.       ","pos":[0,92],"nodes":[{"content":"A signed number indicating the relative values of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sid</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,85],"source":"A signed number indicating the relative values of this instance and <code>sid</code>."}]},{"content":"Return Value","pos":[115,127]},{"content":"Description","pos":[144,155]},{"content":"Less than zero","pos":[196,210]},{"content":" This instance is less than <code>sid</code>.       ","pos":[226,278],"nodes":[{"content":"This instance is less than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sid</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,45],"source":" This instance is less than <code>sid</code>."}]},{"content":"Zero","pos":[297,301]},{"content":" This instance is equal to <code>sid</code>.       ","pos":[317,368],"nodes":[{"content":"This instance is equal to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sid</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,44],"source":" This instance is equal to <code>sid</code>."}]},{"content":"Greater than zero","pos":[387,404]},{"content":" This instance is greater than <code>sid</code>.       ","pos":[420,475],"nodes":[{"content":"This instance is greater than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sid</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,48],"source":" This instance is greater than <code>sid</code>."}]}]},{"pos":[13100,13248],"content":"Returns a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is equal to a specified object.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is equal to a specified object."},{"pos":[13385,13554],"content":"An object to compare with this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An object to compare with this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13613,13901],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">o</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an object with the same underlying type and value as this <bpt id=\"p3\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>o</code> is an object with the same underlying type and value as this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14519,14721],"content":"Indicates whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is equal to the current <bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Indicates whether the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is equal to the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[14922,14968],"content":"The object to compare with the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with the current object.","pos":[0,46]}]},{"pos":[15027,15231],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">sid</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to the value of the current <bpt id=\"p3\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of <code>sid</code> is equal to the value of the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[15830,16013],"content":"Copies the binary representation of the specified security identifier (SID) represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class to a byte array.","needQuote":true,"needEscape":true,"source":"Copies the binary representation of the specified security identifier (SID) represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class to a byte array."},{"pos":[16178,16219],"content":"The byte array to receive the copied SID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte array to receive the copied SID.","pos":[0,41]}]},{"pos":[16281,16342],"content":"The byte offset to use as the starting index in <ph id=\"ph1\">`binaryForm`</ph>.","needQuote":true,"needEscape":true,"source":"The byte offset to use as the starting index in `binaryForm`."},{"pos":[16846,17058],"content":"Serves as a hash function for the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object. The GetHashCode method is suitable for hashing algorithms and data structures like a hash table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as a hash function for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,115],"source":"Serves as a hash function for the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"content":"The GetHashCode method is suitable for hashing algorithms and data structures like a hash table.","pos":[116,212]}]},{"pos":[17193,17295],"content":"A hash value for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A hash value for the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[17802,17995],"content":"Returns a value that indicates whether the security identifier (SID) represented by this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is a valid Windows account SID.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the security identifier (SID) represented by this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is a valid Windows account SID."},{"pos":[18125,18396],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SID represented by this <bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is a valid Windows account SID; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SID represented by this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is a valid Windows account SID; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19070,19277],"content":"Returns a value that indicates whether the security identifier (SID) represented by this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is from the same domain as the specified SID.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the security identifier (SID) represented by this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is from the same domain as the specified SID."},{"pos":[19488,19590],"content":"The SID to compare with this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The SID to compare with this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[19649,19939],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SID represented by this <bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is in the same domain as the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">sid</ph><ept id=\"p3\">&lt;/code&gt;</ept> SID; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SID represented by this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is in the same domain as the <code>sid</code> SID; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20514,20680],"content":"Returns a value that indicates whether the specified type is a valid translation type for the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified type is a valid translation type for the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class."},{"pos":[21226,21497],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">targetType</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a valid translation type for the <bpt id=\"p3\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> class; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>targetType</code> is a valid translation type for the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22141,22321],"content":"Returns a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object matches the specified well known security identifier (SID) type.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object matches the specified well known security identifier (SID) type."},{"pos":[22525,22626],"content":"A value to compare with the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A value to compare with the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[22685,22939],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p2\">&lt;/code&gt;</ept> is the SID type for the <bpt id=\"p3\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>type</code> is the SID type for the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23454,23546],"content":"Returns the maximum size, in bytes, of the binary representation of the security identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the maximum size, in bytes, of the binary representation of the security identifier.","pos":[0,92]}]},{"pos":[23670,23682],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24127,24219],"content":"Returns the minimum size, in bytes, of the binary representation of the security identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the minimum size, in bytes, of the binary representation of the security identifier.","pos":[0,92]}]},{"pos":[24343,24355],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25082,25455],"content":"Compares two <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical representation as the one returned by the <xref:System.Security.Principal.SecurityIdentifier.Value*> property or if they are both <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to determine whether they are equal.","pos":[0,123],"source":"Compares two <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> objects to determine whether they are equal."},{"content":"They are considered equal if they have the same canonical representation as the one returned by the &lt;xref:System.Security.Principal.SecurityIdentifier.Value*&gt; property or if they are both <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[124,373],"source":" They are considered equal if they have the same canonical representation as the one returned by the <xref:System.Security.Principal.SecurityIdentifier.Value*> property or if they are both <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[25722,25858],"content":"The left operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The left operand to use for the equality comparison.","pos":[0,52]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[53,136],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[25951,26088],"content":"The right operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The right operand to use for the equality comparison.","pos":[0,53]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[54,137],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[26147,26337],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27144,27563],"content":"Compares two <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.SecurityIdentifier.Value*> property or if one of the objects is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and the other is not.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to determine whether they are not equal.","pos":[0,127],"source":"Compares two <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> objects to determine whether they are not equal."},{"content":"They are considered not equal if they have different canonical name representations than the one returned by the &lt;xref:System.Security.Principal.SecurityIdentifier.Value*&gt; property or if one of the objects is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the other is not.","pos":[128,419],"source":" They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.SecurityIdentifier.Value*> property or if one of the objects is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and the other is not."}]},{"pos":[27832,27970],"content":"The left operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The left operand to use for the inequality comparison.","pos":[0,54]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[55,138],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[28063,28202],"content":"The right operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The right operand to use for the inequality comparison.","pos":[0,55]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[56,139],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[28261,28455],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p3\">&lt;/code&gt;</ept> are not equal; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28944,29191],"content":"Returns the security identifier (SID), in Security Descriptor Definition Language (SDDL) format, for the account represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object. An example of the SDDL format is S-1-5-9.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the security identifier (SID), in Security Descriptor Definition Language (SDDL) format, for the account represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,205],"source":"Returns the security identifier (SID), in Security Descriptor Definition Language (SDDL) format, for the account represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"content":"An example of the SDDL format is S-1-5-9.","pos":[206,247]}]},{"pos":[29327,29460],"content":"The SID, in SDDL format, for the account represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The SID, in SDDL format, for the account represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[29987,30198],"content":"Translates the account name represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object into another <bpt id=\"p2\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>-derived type.","needQuote":true,"needEscape":true,"source":"Translates the account name represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object into another <xref href=\"System.Security.Principal.IdentityReference\"></xref>-derived type."},{"pos":[30391,30639],"content":"The target type for the conversion from <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>. The target type must be a type that is considered valid by the <xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target type for the conversion from <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,106],"source":"The target type for the conversion from <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."},{"content":"The target type must be a type that is considered valid by the &lt;xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*&gt; method.","pos":[107,248],"source":" The target type must be a type that is considered valid by the <xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*> method."}]},{"pos":[30727,30750],"content":"The converted identity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted identity.","pos":[0,23]}]},{"pos":[30935,31023],"content":"<ph id=\"ph1\">&lt;code&gt;targetType &lt;/code&gt;</ph>is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetType </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[31118,31222],"content":"<ph id=\"ph1\">&lt;code&gt;targetType &lt;/code&gt;</ph>is not an <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> type.","needQuote":true,"needEscape":true,"source":"<code>targetType </code>is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type."},{"pos":[31373,31429],"content":"Some or all identity references could not be translated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Some or all identity references could not be translated.","pos":[0,56]}]},{"pos":[31520,31552],"content":"A Win32 error code was returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Win32 error code was returned.","pos":[0,32]}]},{"pos":[31933,32135],"content":"Returns an uppercase Security Descriptor Definition Language (SDDL) string for the security identifier (SID) represented by this <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns an uppercase Security Descriptor Definition Language (SDDL) string for the security identifier (SID) represented by this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[32254,32383],"content":"An uppercase SDDL string for the SID represented by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An uppercase SDDL string for the SID represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Principal.SecurityIdentifier\n  id: SecurityIdentifier\n  children:\n  - System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)\n  - System.Security.Principal.SecurityIdentifier.#ctor(System.String)\n  - System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)\n  - System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)\n  - System.Security.Principal.SecurityIdentifier.AccountDomainSid\n  - System.Security.Principal.SecurityIdentifier.BinaryLength\n  - System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)\n  - System.Security.Principal.SecurityIdentifier.Equals(System.Object)\n  - System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)\n  - System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.Principal.SecurityIdentifier.GetHashCode\n  - System.Security.Principal.SecurityIdentifier.IsAccountSid\n  - System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)\n  - System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)\n  - System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)\n  - System.Security.Principal.SecurityIdentifier.MaxBinaryLength\n  - System.Security.Principal.SecurityIdentifier.MinBinaryLength\n  - System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)\n  - System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)\n  - System.Security.Principal.SecurityIdentifier.ToString\n  - System.Security.Principal.SecurityIdentifier.Translate(System.Type)\n  - System.Security.Principal.SecurityIdentifier.Value\n  langs:\n  - csharp\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n  type: Class\n  summary: Represents a security identifier (SID) and provides marshaling and comparison operations for SIDs.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public sealed class SecurityIdentifier : System.Security.Principal.IdentityReference, IComparable<System.Security.Principal.SecurityIdentifier>\n  inheritance:\n  - System.Object\n  - System.Security.Principal.IdentityReference\n  implements:\n  - System.IComparable<System.Security.Principal.SecurityIdentifier>\n  inheritedMembers:\n  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)\n  id: '#ctor(System.IntPtr)'\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: SecurityIdentifier(IntPtr)\n  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)\n  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(IntPtr)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class by using an integer that represents the binary form of a security identifier (SID).\n  syntax:\n    content: public SecurityIdentifier (IntPtr binaryForm);\n    parameters:\n    - id: binaryForm\n      type: System.IntPtr\n      description: An integer that represents the binary form of a SID.\n  overload: System.Security.Principal.SecurityIdentifier.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: SecurityIdentifier(String)\n  nameWithType: SecurityIdentifier.SecurityIdentifier(String)\n  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class by using the specified security identifier (SID) in Security Descriptor Definition Language (SDDL) format.\n  syntax:\n    content: public SecurityIdentifier (string sddlForm);\n    parameters:\n    - id: sddlForm\n      type: System.String\n      description: SDDL string for the SID used to create the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.Principal.SecurityIdentifier.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)\n  id: '#ctor(System.Byte[],System.Int32)'\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: SecurityIdentifier(Byte[],Int32)\n  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[],Int32)\n  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(Byte[],Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class by using a specified binary representation of a security identifier (SID).\n  syntax:\n    content: public SecurityIdentifier (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The byte array that represents the SID.\n    - id: offset\n      type: System.Int32\n      description: The byte offset to use as the starting index in `binaryForm`.\n  overload: System.Security.Principal.SecurityIdentifier.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)\n  id: '#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)'\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: SecurityIdentifier(WellKnownSidType,SecurityIdentifier)\n  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class by using the specified well known security identifier (SID) type and domain SID.\n  syntax:\n    content: public SecurityIdentifier (System.Security.Principal.WellKnownSidType sidType, System.Security.Principal.SecurityIdentifier domainSid);\n    parameters:\n    - id: sidType\n      type: System.Security.Principal.WellKnownSidType\n      description: One of the enumeration values. This value must not be <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>.\n    - id: domainSid\n      type: System.Security.Principal.SecurityIdentifier\n      description: \"The domain SID. This value is required for the following <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref> values. This parameter is ignored for any other <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref> values.  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.WellKnownSidType\\\"></xref>\"\n  overload: System.Security.Principal.SecurityIdentifier.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid\n  id: AccountDomainSid\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: AccountDomainSid\n  nameWithType: SecurityIdentifier.AccountDomainSid\n  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns the account domain security identifier (SID) portion from the SID represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object if the SID represents a Windows account SID. If the SID does not represent a Windows account SID, this property returns <xref:System.ArgumentNullException>.\n  syntax:\n    content: public System.Security.Principal.SecurityIdentifier AccountDomainSid { get; }\n    return:\n      type: System.Security.Principal.SecurityIdentifier\n      description: The account domain SID portion from the SID represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object if the SID represents a Windows account SID; otherwise, it returns <xref:System.ArgumentNullException>.\n  overload: System.Security.Principal.SecurityIdentifier.AccountDomainSid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.BinaryLength\n  id: BinaryLength\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: SecurityIdentifier.BinaryLength\n  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns the length, in bytes, of the security identifier (SID) represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: The length, in bytes, of the SID represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.Principal.SecurityIdentifier.BinaryLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)\n  id: CompareTo(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: CompareTo(SecurityIdentifier)\n  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(SecurityIdentifier)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Compares the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public int CompareTo (System.Security.Principal.SecurityIdentifier sid);\n    parameters:\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The object to compare with the current object.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the relative values of this instance and <code>sid</code>.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than <code>sid</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is equal to <code>sid</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than <code>sid</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Security.Principal.SecurityIdentifier.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SecurityIdentifier.Equals(Object)\n  fullName: System.Security.Principal.SecurityIdentifier.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is equal to a specified object.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: An object to compare with this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>o</code> is an object with the same underlying type and value as this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.SecurityIdentifier.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)\n  id: Equals(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: Equals(SecurityIdentifier)\n  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.Equals(SecurityIdentifier)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Indicates whether the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is equal to the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public bool Equals (System.Security.Principal.SecurityIdentifier sid);\n    parameters:\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The object to compare with the current object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of <code>sid</code> is equal to the value of the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.Principal.SecurityIdentifier.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Copies the binary representation of the specified security identifier (SID) represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class to a byte array.\n  syntax:\n    content: public void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The byte array to receive the copied SID.\n    - id: offset\n      type: System.Int32\n      description: The byte offset to use as the starting index in `binaryForm`.\n  overload: System.Security.Principal.SecurityIdentifier.GetBinaryForm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SecurityIdentifier.GetHashCode()\n  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Serves as a hash function for the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object. The GetHashCode method is suitable for hashing algorithms and data structures like a hash table.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash value for the current <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.Principal.SecurityIdentifier.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid\n  id: IsAccountSid\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: IsAccountSid()\n  nameWithType: SecurityIdentifier.IsAccountSid()\n  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether the security identifier (SID) represented by this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is a valid Windows account SID.\n  syntax:\n    content: public bool IsAccountSid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SID represented by this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is a valid Windows account SID; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.SecurityIdentifier.IsAccountSid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)\n  id: IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: IsEqualDomainSid(SecurityIdentifier)\n  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether the security identifier (SID) represented by this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is from the same domain as the specified SID.\n  syntax:\n    content: public bool IsEqualDomainSid (System.Security.Principal.SecurityIdentifier sid);\n    parameters:\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The SID to compare with this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SID represented by this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object is in the same domain as the <code>sid</code> SID; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)\n  id: IsValidTargetType(System.Type)\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: IsValidTargetType(Type)\n  nameWithType: SecurityIdentifier.IsValidTargetType(Type)\n  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether the specified type is a valid translation type for the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class.\n  syntax:\n    content: public override bool IsValidTargetType (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: \"The type being queried for validity to serve as a conversion from <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\"></xref>. The following target types are valid:  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.NTAccount\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\"></xref>\"\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>targetType</code> is a valid translation type for the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> class; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.SecurityIdentifier.IsValidTargetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)\n  id: IsWellKnown(System.Security.Principal.WellKnownSidType)\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: IsWellKnown(WellKnownSidType)\n  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)\n  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(WellKnownSidType)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object matches the specified well known security identifier (SID) type.\n  syntax:\n    content: public bool IsWellKnown (System.Security.Principal.WellKnownSidType type);\n    parameters:\n    - id: type\n      type: System.Security.Principal.WellKnownSidType\n      description: A value to compare with the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>type</code> is the SID type for the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.SecurityIdentifier.IsWellKnown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength\n  id: MaxBinaryLength\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: MaxBinaryLength\n  nameWithType: SecurityIdentifier.MaxBinaryLength\n  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns the maximum size, in bytes, of the binary representation of the security identifier.\n  syntax:\n    content: public static readonly int MaxBinaryLength;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength\n  id: MinBinaryLength\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: MinBinaryLength\n  nameWithType: SecurityIdentifier.MinBinaryLength\n  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns the minimum size, in bytes, of the binary representation of the security identifier.\n  syntax:\n    content: public static readonly int MinBinaryLength;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)\n  id: op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: op_Equality(SecurityIdentifier,SecurityIdentifier)\n  nameWithType: SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Compares two <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical representation as the one returned by the <xref:System.Security.Principal.SecurityIdentifier.Value*> property or if they are both <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  syntax:\n    content: public static bool op_Equality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);\n    parameters:\n    - id: left\n      type: System.Security.Principal.SecurityIdentifier\n      description: The left operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: right\n      type: System.Security.Principal.SecurityIdentifier\n      description: The right operand to use for the equality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.SecurityIdentifier.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)\n  id: op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: op_Inequality(SecurityIdentifier,SecurityIdentifier)\n  nameWithType: SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Compares two <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.SecurityIdentifier.Value*> property or if one of the objects is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and the other is not.\n  syntax:\n    content: public static bool op_Inequality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);\n    parameters:\n    - id: left\n      type: System.Security.Principal.SecurityIdentifier\n      description: The left operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: right\n      type: System.Security.Principal.SecurityIdentifier\n      description: The right operand to use for the inequality comparison. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Principal.SecurityIdentifier.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.ToString\n  id: ToString\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SecurityIdentifier.ToString()\n  fullName: System.Security.Principal.SecurityIdentifier.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns the security identifier (SID), in Security Descriptor Definition Language (SDDL) format, for the account represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object. An example of the SDDL format is S-1-5-9.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The SID, in SDDL format, for the account represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.Principal.SecurityIdentifier.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)\n  id: Translate(System.Type)\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: Translate(Type)\n  nameWithType: SecurityIdentifier.Translate(Type)\n  fullName: System.Security.Principal.SecurityIdentifier.Translate(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Translates the account name represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object into another <xref href=\"System.Security.Principal.IdentityReference\"></xref>-derived type.\n  syntax:\n    content: public override System.Security.Principal.IdentityReference Translate (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The target type for the conversion from <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>. The target type must be a type that is considered valid by the <xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*> method.\n    return:\n      type: System.Security.Principal.IdentityReference\n      description: The converted identity.\n  overload: System.Security.Principal.SecurityIdentifier.Translate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetType </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetType </code>is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type.\n  - type: System.Security.Principal.IdentityNotMappedException\n    commentId: T:System.Security.Principal.IdentityNotMappedException\n    description: Some or all identity references could not be translated.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: A Win32 error code was returned.\n  platform:\n  - net462\n- uid: System.Security.Principal.SecurityIdentifier.Value\n  id: Value\n  parent: System.Security.Principal.SecurityIdentifier\n  langs:\n  - csharp\n  name: Value\n  nameWithType: SecurityIdentifier.Value\n  fullName: System.Security.Principal.SecurityIdentifier.Value\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns an uppercase Security Descriptor Definition Language (SDDL) string for the security identifier (SID) represented by this <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public override string Value { get; }\n    return:\n      type: System.String\n      description: An uppercase SDDL string for the SID represented by the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.Principal.SecurityIdentifier.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: System.Security.Principal.IdentityReference\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Principal.IdentityNotMappedException\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityNotMappedException\n  nameWithType: IdentityNotMappedException\n  fullName: System.Security.Principal.IdentityNotMappedException\n- uid: System.SystemException\n  parent: System\n  isExternal: false\n  name: SystemException\n  nameWithType: SystemException\n  fullName: System.SystemException\n- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: SecurityIdentifier(IntPtr)\n  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)\n  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: SecurityIdentifier(String)\n  nameWithType: SecurityIdentifier.SecurityIdentifier(String)\n  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: SecurityIdentifier(Byte[],Int32)\n  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[],Int32)\n  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(Byte[],Int32)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: SecurityIdentifier(WellKnownSidType,SecurityIdentifier)\n  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)\n- uid: System.Security.Principal.WellKnownSidType\n  parent: System.Security.Principal\n  isExternal: false\n  name: WellKnownSidType\n  nameWithType: WellKnownSidType\n  fullName: System.Security.Principal.WellKnownSidType\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: AccountDomainSid\n  nameWithType: SecurityIdentifier.AccountDomainSid\n  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid\n- uid: System.Security.Principal.SecurityIdentifier.BinaryLength\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: BinaryLength\n  nameWithType: SecurityIdentifier.BinaryLength\n  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength\n- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: CompareTo(SecurityIdentifier)\n  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(SecurityIdentifier)\n- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SecurityIdentifier.Equals(Object)\n  fullName: System.Security.Principal.SecurityIdentifier.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: Equals(SecurityIdentifier)\n  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.Equals(SecurityIdentifier)\n- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(Byte[],Int32)\n- uid: System.Security.Principal.SecurityIdentifier.GetHashCode\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SecurityIdentifier.GetHashCode()\n  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()\n- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: IsAccountSid()\n  nameWithType: SecurityIdentifier.IsAccountSid()\n  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()\n- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: IsEqualDomainSid(SecurityIdentifier)\n  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)\n- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: IsValidTargetType(Type)\n  nameWithType: SecurityIdentifier.IsValidTargetType(Type)\n  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: IsWellKnown(WellKnownSidType)\n  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)\n  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(WellKnownSidType)\n- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: MaxBinaryLength\n  nameWithType: SecurityIdentifier.MaxBinaryLength\n  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength\n- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: MinBinaryLength\n  nameWithType: SecurityIdentifier.MinBinaryLength\n  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength\n- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: op_Equality(SecurityIdentifier,SecurityIdentifier)\n  nameWithType: SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)\n- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: op_Inequality(SecurityIdentifier,SecurityIdentifier)\n  nameWithType: SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)\n  fullName: System.Security.Principal.SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)\n- uid: System.Security.Principal.SecurityIdentifier.ToString\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: ToString()\n  nameWithType: SecurityIdentifier.ToString()\n  fullName: System.Security.Principal.SecurityIdentifier.ToString()\n- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: Translate(Type)\n  nameWithType: SecurityIdentifier.Translate(Type)\n  fullName: System.Security.Principal.SecurityIdentifier.Translate(Type)\n- uid: System.Security.Principal.SecurityIdentifier.Value\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: Value\n  nameWithType: SecurityIdentifier.Value\n  fullName: System.Security.Principal.SecurityIdentifier.Value\n- uid: System.Security.Principal.SecurityIdentifier.#ctor*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier.SecurityIdentifier\n- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: AccountDomainSid\n  nameWithType: SecurityIdentifier.AccountDomainSid\n- uid: System.Security.Principal.SecurityIdentifier.BinaryLength*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: BinaryLength\n  nameWithType: SecurityIdentifier.BinaryLength\n- uid: System.Security.Principal.SecurityIdentifier.CompareTo*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: CompareTo\n  nameWithType: SecurityIdentifier.CompareTo\n- uid: System.Security.Principal.SecurityIdentifier.Equals*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: Equals\n  nameWithType: SecurityIdentifier.Equals\n- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: GetBinaryForm\n  nameWithType: SecurityIdentifier.GetBinaryForm\n- uid: System.Security.Principal.SecurityIdentifier.GetHashCode*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SecurityIdentifier.GetHashCode\n- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: IsAccountSid\n  nameWithType: SecurityIdentifier.IsAccountSid\n- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: IsEqualDomainSid\n  nameWithType: SecurityIdentifier.IsEqualDomainSid\n- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: IsValidTargetType\n  nameWithType: SecurityIdentifier.IsValidTargetType\n- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: IsWellKnown\n  nameWithType: SecurityIdentifier.IsWellKnown\n- uid: System.Security.Principal.SecurityIdentifier.op_Equality*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: op_Equality\n  nameWithType: SecurityIdentifier.op_Equality\n- uid: System.Security.Principal.SecurityIdentifier.op_Inequality*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SecurityIdentifier.op_Inequality\n- uid: System.Security.Principal.SecurityIdentifier.ToString*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: ToString\n  nameWithType: SecurityIdentifier.ToString\n- uid: System.Security.Principal.SecurityIdentifier.Translate*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: Translate\n  nameWithType: SecurityIdentifier.Translate\n- uid: System.Security.Principal.SecurityIdentifier.Value*\n  parent: System.Security.Principal.SecurityIdentifier\n  isExternal: false\n  name: Value\n  nameWithType: SecurityIdentifier.Value\n"}