{"nodes":[{"pos":[1468,1565],"content":"Represents a security token that is based upon a Kerberos ticket that is sent in an SOAP request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a security token that is based upon a Kerberos ticket that is sent in an SOAP request.","pos":[0,97]}]},{"pos":[1578,2472],"content":"Typically, application developers do not need to use the KerberosRequestorSecurityToken class, unless a Web service must get the service principal name associated with the Kerberos ticket. To get the value of the service principal name, get the value of the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A> property.       There are two classes that represent security tokens that are based upon a Kerberos ticket: KerberosRequestorSecurityToken and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>. The KerberosRequestorSecurityToken security token is used by clients that use the KerberosRequestorSecurityToken security token in an outgoing SOAP messages, whereas the <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken> security token is used by a Web service that receives SOAP messages that contain the security token.","needQuote":false,"needEscape":true,"nodes":[{"content":"Typically, application developers do not need to use the KerberosRequestorSecurityToken class, unless a Web service must get the service principal name associated with the Kerberos ticket. To get the value of the service principal name, get the value of the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A> property.       There are two classes that represent security tokens that are based upon a Kerberos ticket: KerberosRequestorSecurityToken and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>. The KerberosRequestorSecurityToken security token is used by clients that use the KerberosRequestorSecurityToken security token in an outgoing SOAP messages, whereas the <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken> security token is used by a Web service that receives SOAP messages that contain the security token.","pos":[0,892],"nodes":[{"content":"Typically, application developers do not need to use the KerberosRequestorSecurityToken class, unless a Web service must get the service principal name associated with the Kerberos ticket.","pos":[0,188]},{"content":"To get the value of the service principal name, get the value of the &lt;xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A&gt; property.","pos":[189,357],"source":" To get the value of the service principal name, get the value of the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A> property."},{"content":"There are two classes that represent security tokens that are based upon a Kerberos ticket: KerberosRequestorSecurityToken and &lt;xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken&gt;.","pos":[364,556],"source":"       There are two classes that represent security tokens that are based upon a Kerberos ticket: KerberosRequestorSecurityToken and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>."},{"content":"The KerberosRequestorSecurityToken security token is used by clients that use the KerberosRequestorSecurityToken security token in an outgoing SOAP messages, whereas the &lt;xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken&gt; security token is used by a Web service that receives SOAP messages that contain the security token.","pos":[557,892],"source":" The KerberosRequestorSecurityToken security token is used by clients that use the KerberosRequestorSecurityToken security token in an outgoing SOAP messages, whereas the <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken> security token is used by a Web service that receives SOAP messages that contain the security token."}]}]},{"pos":[3415,3612],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a service that is associated with the specified service principal name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> class using a service that is associated with the specified service principal name."},{"pos":[3625,4071],"content":"The service principal name must be in one of the following formats: `host/<hostname>@<domain>` or `<hostname>`, where `hostname` is the name of the computer hosting the target Web service and `domain` is the fully-qualified domain name of the Kerberos realm in which the host computer resides. The service principal name is associated with an account that is running the service and this mapping is stored in the Kerberos Domain Controller (KDC).","needQuote":false,"needEscape":true,"nodes":[{"content":"The service principal name must be in one of the following formats: <ph id=\"ph1\">`host/&lt;hostname&gt;@&lt;domain&gt;`</ph> or <ph id=\"ph2\">`&lt;hostname&gt;`</ph>, where <ph id=\"ph3\">`hostname`</ph> is the name of the computer hosting the target Web service and <ph id=\"ph4\">`domain`</ph> is the fully-qualified domain name of the Kerberos realm in which the host computer resides.","pos":[0,293],"source":"The service principal name must be in one of the following formats: `host/<hostname>@<domain>` or `<hostname>`, where `hostname` is the name of the computer hosting the target Web service and `domain` is the fully-qualified domain name of the Kerberos realm in which the host computer resides."},{"content":"The service principal name is associated with an account that is running the service and this mapping is stored in the Kerberos Domain Controller (KDC).","pos":[294,446]}]},{"pos":[4257,4494],"content":"The service principal name for the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token. Sets the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service principal name for the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token.","pos":[0,130],"source":"The service principal name for the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token."},{"content":"Sets the &lt;xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*&gt; property.","pos":[131,237],"source":" Sets the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*> property."}]},{"pos":[4689,4787],"content":"<ph id=\"ph1\">&lt;code&gt;servicePrincipalName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>servicePrincipalName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4934,4992],"content":"A Kerberos ticket cannot be obtained for the current user.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Kerberos ticket cannot be obtained for the current user.","pos":[0,58]}]},{"pos":[5908,6028],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> class."},{"pos":[6041,6674],"content":"The service principal name must be in one of the following formats: `host/<hostname>@<domain>` or `<hostname>`, where `hostname` is the name of the computer hosting the target Web service and `domain` is the fully-qualified domain name of the Kerberos realm in which the host computer resides. The service principal name is associated with an account that is running the service and this mapping is stored in the Kerberos Domain Controller (KDC).       When `null` is passed into the `networkCredential` parameter, a <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> security token is obtained for the current user.","needQuote":false,"needEscape":true,"nodes":[{"content":"The service principal name must be in one of the following formats: <ph id=\"ph1\">`host/&lt;hostname&gt;@&lt;domain&gt;`</ph> or <ph id=\"ph2\">`&lt;hostname&gt;`</ph>, where <ph id=\"ph3\">`hostname`</ph> is the name of the computer hosting the target Web service and <ph id=\"ph4\">`domain`</ph> is the fully-qualified domain name of the Kerberos realm in which the host computer resides.","pos":[0,293],"source":"The service principal name must be in one of the following formats: `host/<hostname>@<domain>` or `<hostname>`, where `hostname` is the name of the computer hosting the target Web service and `domain` is the fully-qualified domain name of the Kerberos realm in which the host computer resides."},{"content":"The service principal name is associated with an account that is running the service and this mapping is stored in the Kerberos Domain Controller (KDC).","pos":[294,446]},{"content":"When <ph id=\"ph1\">`null`</ph> is passed into the <ph id=\"ph2\">`networkCredential`</ph> parameter, a &lt;xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken&gt; security token is obtained for the current user.","pos":[453,631],"source":"       When `null` is passed into the `networkCredential` parameter, a <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> security token is obtained for the current user."}]},{"pos":[6994,7231],"content":"The service principal name for the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token. Sets the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service principal name for the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token.","pos":[0,130],"source":"The service principal name for the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token."},{"content":"Sets the &lt;xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*&gt; property.","pos":[131,237],"source":" Sets the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*> property."}]},{"pos":[7347,7577],"content":"One of the &lt;xref:System.Security.Principal.TokenImpersonationLevel&gt; values that specifies how the client allows the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token to be impersonated.","needQuote":true,"needEscape":true,"source":"One of the <xref:System.Security.Principal.TokenImpersonationLevel> values that specifies how the client allows the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token to be impersonated."},{"pos":[7666,7836],"content":"A &lt;xref:System.Net.NetworkCredential&gt; that specifies the user to get a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token for.","needQuote":true,"needEscape":true,"source":"A <xref:System.Net.NetworkCredential> that specifies the user to get a <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token for."},{"pos":[7895,8039],"content":"A unique identifier of the security token. Sets the value of the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier of the security token. Sets the value of the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*> property.","pos":[0,144],"nodes":[{"content":"A unique identifier of the security token.","pos":[0,42]},{"content":"Sets the value of the &lt;xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*&gt; property.","pos":[43,144],"source":" Sets the value of the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*> property."}]}]},{"pos":[8235,8447],"content":"<code>servicePrincipalName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>id</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;servicePrincipalName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,98],"source":"<code>servicePrincipalName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;id&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[105,196],"source":"       -or-       <code>id</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8543,8853],"content":"<ph id=\"ph1\">&lt;code&gt;networkCredential&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, not equal to <ph id=\"ph2\">&lt;xref:System.Net.CredentialCache.DefaultNetworkCredentials*&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.Net.NetworkCredential.UserName*&gt;</ph> property is empty or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>networkCredential</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, not equal to <xref:System.Net.CredentialCache.DefaultNetworkCredentials*> and the <xref:System.Net.NetworkCredential.UserName*> property is empty or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9000,9060],"content":"A Kerberos ticket cannot be obtained for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Kerberos ticket cannot be obtained for the specified user.","pos":[0,60]}]},{"pos":[9175,9370],"content":"<ph id=\"ph1\">&lt;code&gt;tokenImpersonationLevel&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Impersonation\" name=\"Impersonation\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Identity\" name=\"Identity\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>tokenImpersonationLevel</code> is not <xref uid=\"langword_csharp_Impersonation\" name=\"Impersonation\" href=\"\"></xref> or <xref uid=\"langword_csharp_Identity\" name=\"Identity\" href=\"\"></xref>."},{"pos":[10158,10170],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11045,11057],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11653,11686],"content":"Gets the Kerberos ticket request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the Kerberos ticket request.","pos":[0,33]}]},{"pos":[11698,11776],"content":"The Kerberos ticket request is made using the <ph id=\"ph1\">`InitializeSecurityContext`</ph> API.","needQuote":true,"needEscape":true,"source":"The Kerberos ticket request is made using the `InitializeSecurityContext` API."},{"pos":[11905,11985],"content":"An array of <xref:System.Byte> that contains the result Kerberos ticket request.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the result Kerberos ticket request.","pos":[0,80],"source":"An array of <xref:System.Byte> that contains the result Kerberos ticket request."}]},{"pos":[12519,12566],"content":"Gets a unique identifier of the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a unique identifier of the security token.","pos":[0,47]}]},{"pos":[12682,12724],"content":"A unique identifier of the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier of the security token.","pos":[0,42]}]},{"pos":[13569,13682],"content":"Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.","pos":[0,113]}]},{"pos":[13966,14073],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to this instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to compare to this instance."},{"pos":[14132,14455],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">keyIdentifierClause</ph><ept id=\"p2\">&lt;/code&gt;</ept> is of type <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and the results of the Kerberos ticket request match; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>keyIdentifierClause</code> is of type <xref href=\"System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause\"></xref> and the results of the Kerberos ticket request match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15050,15149],"content":"Gets the symmetric session key for the Kerberos ticket that is associated with this security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the symmetric session key for the Kerberos ticket that is associated with this security token.","pos":[0,99]}]},{"pos":[15161,15327],"content":"The SecurityKey property is set when one of the constructors is called with the symmetric session key for the Kerberos ticket that is obtained for the specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SecurityKey property is set when one of the constructors is called with the symmetric session key for the Kerberos ticket that is obtained for the specified user.","pos":[0,166]}]},{"pos":[15520,15700],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the symmetric session key for the Kerberos ticket that is associated with this security token.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref> that contains the symmetric session key for the Kerberos ticket that is associated with this security token."},{"pos":[16285,16348],"content":"Gets the cryptographic keys associated with the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the cryptographic keys associated with the security token.","pos":[0,63]}]},{"pos":[16360,16517],"content":"The SecurityKeys property contains the symmetric session key in the <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SecurityKeys property contains the symmetric session key in the &lt;xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey%2A&gt; property.","pos":[0,157],"source":"The SecurityKeys property contains the symmetric session key in the <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey%2A> property."}]},{"pos":[16804,17007],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the set of keys associated with the security token.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the set of keys associated with the security token."},{"pos":[17633,17768],"content":"Gets the service principal name for the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token.","needQuote":true,"needEscape":true,"source":"Gets the service principal name for the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token."},{"pos":[17781,18073],"content":"The service principal name may be in one of the following formats: <ph id=\"ph1\">`host/&lt;hostname&gt;@&lt;domain&gt;`</ph> or <ph id=\"ph2\">`&lt;hostname&gt;`</ph>, where <ph id=\"ph3\">`hostname`</ph> is the name of the computer hosting the target Web service and <ph id=\"ph4\">`domain`</ph> is the fully-qualified domain name of the Kerberos realm in which the host computer resides.","needQuote":false,"needEscape":true,"source":"The service principal name may be in one of the following formats: `host/<hostname>@<domain>` or `<hostname>`, where `hostname` is the name of the computer hosting the target Web service and `domain` is the fully-qualified domain name of the Kerberos realm in which the host computer resides."},{"pos":[18199,18329],"content":"The service principal name for the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token.","needQuote":true,"needEscape":true,"source":"The service principal name for the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token."},{"pos":[18908,18977],"content":"Gets the first instant in time at which this security token is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the first instant in time at which this security token is valid.","pos":[0,69]}]},{"pos":[18989,19115],"content":"The ValidFrom property is set to the instant in time when the Kerberos ticket is obtained in Coordinated Universal Time (UTC).","needQuote":true,"needEscape":true,"nodes":[{"content":"The ValidFrom property is set to the instant in time when the Kerberos ticket is obtained in Coordinated Universal Time (UTC).","pos":[0,126]}]},{"pos":[19242,19347],"content":"A <xref:System.DateTime> that represents the instant in time at which this security token is first valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.DateTime&gt; that represents the instant in time at which this security token is first valid.","pos":[0,105],"source":"A <xref:System.DateTime> that represents the instant in time at which this security token is first valid."}]},{"pos":[19905,19973],"content":"Gets the last instant in time at which this security token is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the last instant in time at which this security token is valid.","pos":[0,68]}]},{"pos":[19985,20176],"content":"The <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom%2A> property is set to the instant in time when the Kerberos ticket expires in Coordinated Universal Time (UTC).","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom%2A&gt; property is set to the instant in time when the Kerberos ticket expires in Coordinated Universal Time (UTC).","pos":[0,191],"source":"The <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom%2A> property is set to the instant in time when the Kerberos ticket expires in Coordinated Universal Time (UTC)."}]},{"pos":[20301,20405],"content":"A <xref:System.DateTime> that represents the last instant in time at which this security token is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.DateTime&gt; that represents the last instant in time at which this security token is valid.","pos":[0,104],"source":"A <xref:System.DateTime> that represents the last instant in time at which this security token is valid."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  id: KerberosRequestorSecurityToken\n  children:\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo\n  langs:\n  - csharp\n  name: KerberosRequestorSecurityToken\n  nameWithType: KerberosRequestorSecurityToken\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  type: Class\n  summary: Represents a security token that is based upon a Kerberos ticket that is sent in an SOAP request.\n  remarks: \"Typically, application developers do not need to use the KerberosRequestorSecurityToken class, unless a Web service must get the service principal name associated with the Kerberos ticket. To get the value of the service principal name, get the value of the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A> property.  \\n  \\n There are two classes that represent security tokens that are based upon a Kerberos ticket: KerberosRequestorSecurityToken and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>. The KerberosRequestorSecurityToken security token is used by clients that use the KerberosRequestorSecurityToken security token in an outgoing SOAP messages, whereas the <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken> security token is used by a Web service that receives SOAP messages that contain the security token.\"\n  syntax:\n    content: 'public class KerberosRequestorSecurityToken : System.IdentityModel.Tokens.SecurityToken'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityToken\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: KerberosRequestorSecurityToken(String)\n  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> class using a service that is associated with the specified service principal name.\n  remarks: 'The service principal name must be in one of the following formats: `host/<hostname>@<domain>` or `<hostname>`, where `hostname` is the name of the computer hosting the target Web service and `domain` is the fully-qualified domain name of the Kerberos realm in which the host computer resides. The service principal name is associated with an account that is running the service and this mapping is stored in the Kerberos Domain Controller (KDC).'\n  syntax:\n    content: public KerberosRequestorSecurityToken (string servicePrincipalName);\n    parameters:\n    - id: servicePrincipalName\n      type: System.String\n      description: The service principal name for the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token. Sets the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*> property.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>servicePrincipalName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: A Kerberos ticket cannot be obtained for the current user.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)\n  id: '#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)'\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)\n  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> class.\n  remarks: \"The service principal name must be in one of the following formats: `host/<hostname>@<domain>` or `<hostname>`, where `hostname` is the name of the computer hosting the target Web service and `domain` is the fully-qualified domain name of the Kerberos realm in which the host computer resides. The service principal name is associated with an account that is running the service and this mapping is stored in the Kerberos Domain Controller (KDC).  \\n  \\n When `null` is passed into the `networkCredential` parameter, a <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> security token is obtained for the current user.\"\n  syntax:\n    content: public KerberosRequestorSecurityToken (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential networkCredential, string id);\n    parameters:\n    - id: servicePrincipalName\n      type: System.String\n      description: The service principal name for the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token. Sets the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*> property.\n    - id: tokenImpersonationLevel\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: One of the <xref:System.Security.Principal.TokenImpersonationLevel> values that specifies how the client allows the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token to be impersonated.\n    - id: networkCredential\n      type: System.Net.NetworkCredential\n      description: A <xref:System.Net.NetworkCredential> that specifies the user to get a <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token for.\n    - id: id\n      type: System.String\n      description: A unique identifier of the security token. Sets the value of the <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*> property.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>servicePrincipalName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>id</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>networkCredential</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, not equal to <xref:System.Net.CredentialCache.DefaultNetworkCredentials*> and the <xref:System.Net.NetworkCredential.UserName*> property is empty or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: A Kerberos ticket cannot be obtained for the specified user.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>tokenImpersonationLevel</code> is not <xref uid=\"langword_csharp_Impersonation\" name=\"Impersonation\" href=\"\"></xref> or <xref uid=\"langword_csharp_Identity\" name=\"Identity\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1\n  id: CanCreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: CanCreateKeyIdentifierClause()\n  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  syntax:\n    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1\n  id: CreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: CreateKeyIdentifierClause()\n  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause()\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  syntax:\n    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'\n    parameters: []\n    return:\n      type: T\n      description: To be added.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest\n  id: GetRequest\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: GetRequest()\n  nameWithType: KerberosRequestorSecurityToken.GetRequest()\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the Kerberos ticket request.\n  remarks: The Kerberos ticket request is made using the `InitializeSecurityContext` API.\n  syntax:\n    content: public byte[] GetRequest ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the result Kerberos ticket request.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id\n  id: Id\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: Id\n  nameWithType: KerberosRequestorSecurityToken.Id\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a unique identifier of the security token.\n  syntax:\n    content: public override string Id { get; }\n    return:\n      type: System.String\n      description: A unique identifier of the security token.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.\n  syntax:\n    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to compare to this instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>keyIdentifierClause</code> is of type <xref href=\"System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause\"></xref> and the results of the Kerberos ticket request match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey\n  id: SecurityKey\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: SecurityKey\n  nameWithType: KerberosRequestorSecurityToken.SecurityKey\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the symmetric session key for the Kerberos ticket that is associated with this security token.\n  remarks: The SecurityKey property is set when one of the constructors is called with the symmetric session key for the Kerberos ticket that is obtained for the specified user.\n  syntax:\n    content: public System.IdentityModel.Tokens.SymmetricSecurityKey SecurityKey { get; }\n    return:\n      type: System.IdentityModel.Tokens.SymmetricSecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SymmetricSecurityKey\"></xref> that contains the symmetric session key for the Kerberos ticket that is associated with this security token.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys\n  id: SecurityKeys\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: SecurityKeys\n  nameWithType: KerberosRequestorSecurityToken.SecurityKeys\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the cryptographic keys associated with the security token.\n  remarks: The SecurityKeys property contains the symmetric session key in the <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey%2A> property.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the set of keys associated with the security token.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName\n  id: ServicePrincipalName\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: ServicePrincipalName\n  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the service principal name for the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token.\n  remarks: 'The service principal name may be in one of the following formats: `host/<hostname>@<domain>` or `<hostname>`, where `hostname` is the name of the computer hosting the target Web service and `domain` is the fully-qualified domain name of the Kerberos realm in which the host computer resides.'\n  syntax:\n    content: public string ServicePrincipalName { get; }\n    return:\n      type: System.String\n      description: The service principal name for the <xref href=\"System.IdentityModel.Tokens.KerberosRequestorSecurityToken\"></xref> security token.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom\n  id: ValidFrom\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: ValidFrom\n  nameWithType: KerberosRequestorSecurityToken.ValidFrom\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the first instant in time at which this security token is valid.\n  remarks: The ValidFrom property is set to the instant in time when the Kerberos ticket is obtained in Coordinated Universal Time (UTC).\n  syntax:\n    content: public override DateTime ValidFrom { get; }\n    return:\n      type: System.DateTime\n      description: A <xref:System.DateTime> that represents the instant in time at which this security token is first valid.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo\n  id: ValidTo\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  langs:\n  - csharp\n  name: ValidTo\n  nameWithType: KerberosRequestorSecurityToken.ValidTo\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the last instant in time at which this security token is valid.\n  remarks: The <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom%2A> property is set to the instant in time when the Kerberos ticket expires in Coordinated Universal Time (UTC).\n  syntax:\n    content: public override DateTime ValidTo { get; }\n    return:\n      type: System.DateTime\n      description: A <xref:System.DateTime> that represents the last instant in time at which this security token is valid.\n  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: System.IdentityModel.Tokens.SecurityToken\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.SecurityTokenException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenException\n  nameWithType: SecurityTokenException\n  fullName: System.IdentityModel.Tokens.SecurityTokenException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: KerberosRequestorSecurityToken(String)\n  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)\n  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)\n- uid: System.Security.Principal.TokenImpersonationLevel\n  parent: System.Security.Principal\n  isExternal: true\n  name: TokenImpersonationLevel\n  nameWithType: TokenImpersonationLevel\n  fullName: System.Security.Principal.TokenImpersonationLevel\n- uid: System.Net.NetworkCredential\n  parent: System.Net\n  isExternal: true\n  name: NetworkCredential\n  nameWithType: NetworkCredential\n  fullName: System.Net.NetworkCredential\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: CanCreateKeyIdentifierClause()\n  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: CreateKeyIdentifierClause()\n  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause()\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: GetRequest()\n  nameWithType: KerberosRequestorSecurityToken.GetRequest()\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest()\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: Id\n  nameWithType: KerberosRequestorSecurityToken.Id\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: SecurityKey\n  nameWithType: KerberosRequestorSecurityToken.SecurityKey\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey\n- uid: System.IdentityModel.Tokens.SymmetricSecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SymmetricSecurityKey\n  nameWithType: SymmetricSecurityKey\n  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: SecurityKeys\n  nameWithType: KerberosRequestorSecurityToken.SecurityKeys\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<SecurityKey>\n  nameWithType: ReadOnlyCollection<SecurityKey>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SecurityKey\n    name: SecurityKey\n    nameWithType: SecurityKey\n    fullName: SecurityKey\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: ServicePrincipalName\n  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: ValidFrom\n  nameWithType: KerberosRequestorSecurityToken.ValidFrom\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: ValidTo\n  nameWithType: KerberosRequestorSecurityToken.ValidTo\n  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: KerberosRequestorSecurityToken\n  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: CanCreateKeyIdentifierClause<T>\n  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: CreateKeyIdentifierClause<T>\n  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: GetRequest\n  nameWithType: KerberosRequestorSecurityToken.GetRequest\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: Id\n  nameWithType: KerberosRequestorSecurityToken.Id\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: MatchesKeyIdentifierClause\n  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: SecurityKey\n  nameWithType: KerberosRequestorSecurityToken.SecurityKey\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: SecurityKeys\n  nameWithType: KerberosRequestorSecurityToken.SecurityKeys\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: ServicePrincipalName\n  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: ValidFrom\n  nameWithType: KerberosRequestorSecurityToken.ValidFrom\n- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo*\n  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  isExternal: false\n  name: ValidTo\n  nameWithType: KerberosRequestorSecurityToken.ValidTo\n"}