{"nodes":[{"pos":[1709,1741],"content":"The Base class for RST and RSTR.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Base class for RST and RSTR.","pos":[0,32]}]},{"pos":[1753,1909],"content":"For more information about the message and elements that this class represents, see the version of the WS-Trust specification that applies to your scenario.","needQuote":true,"needEscape":true,"nodes":[{"content":"For more information about the message and elements that this class represents, see the version of the WS-Trust specification that applies to your scenario.","pos":[0,156]}]},{"pos":[2625,2740],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.WSTrustMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.WSTrustMessage\"></xref> class."},{"pos":[2752,2794],"content":"The default constructor for extensibility.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default constructor for extensibility.","pos":[0,42]}]},{"pos":[3434,3495],"content":"Gets or sets the contents of the wst:AllowPostdating element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:AllowPostdating element.","pos":[0,61]}]},{"pos":[3508,3674],"content":"This optional element indicates that returned tokens should allow requests for postdated tokens.       This property is usually used with the token renewal binding.","needQuote":false,"needEscape":true,"nodes":[{"content":"This optional element indicates that returned tokens should allow requests for postdated tokens.       This property is usually used with the token renewal binding.","pos":[0,164],"nodes":[{"content":"This optional element indicates that returned tokens should allow requests for postdated tokens.","pos":[0,96]},{"content":"This property is usually used with the token renewal binding.","pos":[103,164]}]}]},{"pos":[3799,3997],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if returned tokens should allow requests for postdated tokens; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if returned tokens should allow requests for postdated tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4546,4601],"content":"Gets or sets the contents of the wsp:AppliesTo element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wsp:AppliesTo element.","pos":[0,55]}]},{"pos":[4614,4920],"content":"This optional element specifies the endpoint address for which this security token is desired; for example, the service to which the token applies.       Either wst:TokenType or wst:AppliesTo should be defined in the token request message. If both are specified, the wst:AppliesTo field takes precedence.","needQuote":false,"needEscape":true,"nodes":[{"content":"This optional element specifies the endpoint address for which this security token is desired; for example, the service to which the token applies.       Either wst:TokenType or wst:AppliesTo should be defined in the token request message. If both are specified, the wst:AppliesTo field takes precedence.","pos":[0,304],"nodes":[{"content":"This optional element specifies the endpoint address for which this security token is desired; for example, the service to which the token applies.","pos":[0,147]},{"content":"Either wst:TokenType or wst:AppliesTo should be defined in the token request message.","pos":[154,239]},{"content":"If both are specified, the wst:AppliesTo field takes precedence.","pos":[240,304]}]}]},{"pos":[5133,5256],"content":"An <xref:System.ServiceModel.EndpointAddress> that represents the endpoint address for which the security token is desired.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.ServiceModel.EndpointAddress&gt; that represents the endpoint address for which the security token is desired.","pos":[0,123],"source":"An <xref:System.ServiceModel.EndpointAddress> that represents the endpoint address for which the security token is desired."}]},{"pos":[5844,5908],"content":"Gets or sets the contents of the wst:AuthenticationType element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:AuthenticationType element.","pos":[0,64]}]},{"pos":[5920,6007],"content":"This optional element indicates the type of authentication desired, specified as a URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"This optional element indicates the type of authentication desired, specified as a URI.","pos":[0,87]}]},{"pos":[6135,6214],"content":"A string that contains a URI that indicates the type of authentication desired.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a URI that indicates the type of authentication desired.","pos":[0,79]}]},{"pos":[6791,6851],"content":"Gets or sets the contents of the wst:BinaryExchange element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:BinaryExchange element.","pos":[0,60]}]},{"pos":[7062,7279],"content":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.BinaryExchange\"></xref> that contains the binary data exchanged. This includes the contents of the ValueType and EncodingType attributes as well as the actual data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.BinaryExchange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the binary data exchanged.","pos":[0,117],"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.BinaryExchange\"></xref> that contains the binary data exchanged."},{"content":"This includes the contents of the ValueType and EncodingType attributes as well as the actual data.","pos":[118,217]}]},{"pos":[7907,7978],"content":"Gets or sets the contents of the wst:CanonicalizationAlgorithm element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:CanonicalizationAlgorithm element.","pos":[0,71]}]},{"pos":[8113,8188],"content":"A string that contains a URI that indicates the canonicalization algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a URI that indicates the canonicalization algorithm.","pos":[0,75]}]},{"pos":[8737,8807],"content":"Gets or sets the contents of the Context attribute on the RST or RSTR.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the Context attribute on the RST or RSTR.","pos":[0,70]}]},{"pos":[8819,8997],"content":"The optional Context attribute on an RST element specifies an identifier (context) for a request. All subsequent RSTR elements relating to this request must carry this attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The optional Context attribute on an RST element specifies an identifier (context) for a request. All subsequent RSTR elements relating to this request must carry this attribute.","pos":[0,178],"nodes":[{"content":"The optional Context attribute on an RST element specifies an identifier (context) for a request.","pos":[0,97]},{"content":"All subsequent RSTR elements relating to this request must carry this attribute.","pos":[98,178]}]}]},{"pos":[9114,9204],"content":"A string that contains a URI that identifies the context of a request or response message.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a URI that identifies the context of a request or response message.","pos":[0,90]}]},{"pos":[9795,9860],"content":"Gets or sets the contents of the wst:EncryptionAlgorithm element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:EncryptionAlgorithm element.","pos":[0,65]}]},{"pos":[9872,9972],"content":"This optional URI element indicates the desired encryption algorithm used within the returned token.","needQuote":true,"needEscape":true,"nodes":[{"content":"This optional URI element indicates the desired encryption algorithm used within the returned token.","pos":[0,100]}]},{"pos":[10101,10170],"content":"A string that contains a URI that indicates the encryption algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a URI that indicates the encryption algorithm.","pos":[0,69]}]},{"pos":[10733,10790],"content":"Gets or sets the contents of the wst:EncryptWith element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:EncryptWith element.","pos":[0,57]}]},{"pos":[10802,10913],"content":"This optional URI element indicates the desired encryption algorithm to be used with the issued security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"This optional URI element indicates the desired encryption algorithm to be used with the issued security token.","pos":[0,111]}]},{"pos":[11034,11152],"content":"A string that contains a URI that indicates the desired encryption algoritm to be used with the issued security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a URI that indicates the desired encryption algoritm to be used with the issued security token.","pos":[0,118]}]},{"pos":[11348,11469],"content":"An attempt to set the property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string occurs.","needQuote":true,"needEscape":true,"source":"An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string occurs."},{"pos":[11908,11961],"content":"Gets or sets the contents of the wst:Entropy element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:Entropy element.","pos":[0,53]}]},{"pos":[11973,12256],"content":"This optional element allows a requestor to specify entropy that is to be used in creating the key. This is commonly used in a token issuance request message. The value of this element should be either an EncryptedKey or BinarySecret depending on whether or not the key is encrypted.","needQuote":true,"needEscape":true,"nodes":[{"content":"This optional element allows a requestor to specify entropy that is to be used in creating the key. This is commonly used in a token issuance request message. The value of this element should be either an EncryptedKey or BinarySecret depending on whether or not the key is encrypted.","pos":[0,283],"nodes":[{"content":"This optional element allows a requestor to specify entropy that is to be used in creating the key.","pos":[0,99]},{"content":"This is commonly used in a token issuance request message.","pos":[100,158]},{"content":"The value of this element should be either an EncryptedKey or BinarySecret depending on whether or not the key is encrypted.","pos":[159,283]}]}]},{"pos":[12446,12568],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.Entropy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the contents of the entropy element.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.Entropy\"></xref> that represents the contents of the entropy element."},{"pos":[13129,13226],"content":"Gets or sets the contents of the wst:KeySize element inside a RequestSecurityToken (RST) message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:KeySize element inside a RequestSecurityToken (RST) message.","pos":[0,97]}]},{"pos":[13372,13393],"content":"The key size in bits.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key size in bits.","pos":[0,21]}]},{"pos":[13603,13663],"content":"An attempt to set a value less than or equal to zero occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt to set a value less than or equal to zero occurs.","pos":[0,60]}]},{"pos":[14102,14199],"content":"Gets or sets the contents of the wst:KeyType element inside a RequestSecurityToken (RST) message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:KeyType element inside a RequestSecurityToken (RST) message.","pos":[0,97]}]},{"pos":[14211,14293],"content":"This optional URI element indicates the type of key desired in the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"This optional URI element indicates the type of key desired in the security token.","pos":[0,82]}]},{"pos":[14410,14481],"content":"A string that contains the URI that identifies the type of key desired.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the URI that identifies the type of key desired.","pos":[0,71]}]},{"pos":[15057,15119],"content":"Gets or sets the contents of the wst:KeyWrapAlgorithm element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:KeyWrapAlgorithm element.","pos":[0,62]}]},{"pos":[15131,15286],"content":"This optional URI indicates the desired algorithm to use for key wrapping when STS encrypts the issued token for the relying party using an asymmetric key.","needQuote":true,"needEscape":true,"nodes":[{"content":"This optional URI indicates the desired algorithm to use for key wrapping when STS encrypts the issued token for the relying party using an asymmetric key.","pos":[0,155]}]},{"pos":[15412,15482],"content":"A string that contains the URI that identifies the key wrap algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the URI that identifies the key wrap algorithm.","pos":[0,70]}]},{"pos":[16027,16125],"content":"Gets or sets the contents of the wst:Lifetime element inside a RequestSecurityToken (RST) message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:Lifetime element inside a RequestSecurityToken (RST) message.","pos":[0,98]}]},{"pos":[16137,16242],"content":"This optional element specifies the desired time range during which the returned security token is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"This optional element specifies the desired time range during which the returned security token is valid.","pos":[0,105]}]},{"pos":[16435,16585],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.Lifetime\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the desired time during which the returned token will be valid.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.Lifetime\"></xref> that represents the desired time during which the returned token will be valid."},{"pos":[17117,17187],"content":"Gets or sets the address to be used for replying to the Relying Party.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the address to be used for replying to the Relying Party.","pos":[0,70]}]},{"pos":[17199,17303],"content":"This is a local extension that is used exclusively in passive scenarios with the WS-Federation protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"This is a local extension that is used exclusively in passive scenarios with the WS-Federation protocol.","pos":[0,104]}]},{"pos":[17420,17455],"content":"A string that contains the address.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the address.","pos":[0,35]}]},{"pos":[18006,18047],"content":"Gets or sets the wst:RequestType element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the wst:RequestType element.","pos":[0,41]}]},{"pos":[18059,18108],"content":"This required element indicates the request type.","needQuote":true,"needEscape":true,"nodes":[{"content":"This required element indicates the request type.","pos":[0,49]}]},{"pos":[18229,18419],"content":"A string that contains a URI that indicates the request type; for example, one of the constants defined in the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"A string that contains a URI that indicates the request type; for example, one of the constants defined in the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestTypes\"></xref> class."},{"pos":[19009,19073],"content":"Gets or sets the contents of the wst:SignatureAlgorithm element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:SignatureAlgorithm element.","pos":[0,64]}]},{"pos":[19085,19184],"content":"This optional URI element indicates the desired signature algorithm used within the returned token.","needQuote":true,"needEscape":true,"nodes":[{"content":"This optional URI element indicates the desired signature algorithm used within the returned token.","pos":[0,99]}]},{"pos":[19312,19380],"content":"A string that contains a URI that indicates the signature algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a URI that indicates the signature algorithm.","pos":[0,68]}]},{"pos":[19927,19981],"content":"Gets or sets the contents of the wst:SignWith element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:SignWith element.","pos":[0,54]}]},{"pos":[19993,20161],"content":"This optional URI element indicates the desired signature algorithm to be used with the issued security token. This is an extension to the RequestSecurityToken element.","needQuote":true,"needEscape":true,"nodes":[{"content":"This optional URI element indicates the desired signature algorithm to be used with the issued security token. This is an extension to the RequestSecurityToken element.","pos":[0,168],"nodes":[{"content":"This optional URI element indicates the desired signature algorithm to be used with the issued security token.","pos":[0,110]},{"content":"This is an extension to the RequestSecurityToken element.","pos":[111,168]}]}]},{"pos":[20279,20356],"content":"A string that contains a URI that identifies the desired signature algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a URI that identifies the desired signature algorithm.","pos":[0,77]}]},{"pos":[20549,20667],"content":"An attempt to set the value to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string occurs.","needQuote":true,"needEscape":true,"source":"An attempt to set the value to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string occurs."},{"pos":[21116,21171],"content":"Gets or sets the contents of the wst:TokenType element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:TokenType element.","pos":[0,55]}]},{"pos":[21183,21238],"content":"This optional element indicates the desired token type.","needQuote":true,"needEscape":true,"nodes":[{"content":"This optional element indicates the desired token type.","pos":[0,55]}]},{"pos":[21357,21416],"content":"A string that contains a URI that indicates the token type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a URI that indicates the token type.","pos":[0,59]}]},{"pos":[21944,21996],"content":"Gets or sets the contents of the wst:UseKey element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contents of the wst:UseKey element.","pos":[0,52]}]},{"pos":[22008,22232],"content":"If the requestor wishes to use an existing key rather than create a new one, then this property can be used to reference a security token containing the desired key. This is commonly used in the asymetric key issurance case.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the requestor wishes to use an existing key rather than create a new one, then this property can be used to reference a security token containing the desired key. This is commonly used in the asymetric key issurance case.","pos":[0,224],"nodes":[{"content":"If the requestor wishes to use an existing key rather than create a new one, then this property can be used to reference a security token containing the desired key.","pos":[0,165]},{"content":"This is commonly used in the asymetric key issurance case.","pos":[166,224]}]}]},{"pos":[22419,22510],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.UseKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the key.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.UseKey\"></xref> that contains the key."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  id: WSTrustMessage\n  children:\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey\n  langs:\n  - csharp\n  name: WSTrustMessage\n  nameWithType: WSTrustMessage\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  type: Class\n  summary: The Base class for RST and RSTR.\n  remarks: For more information about the message and elements that this class represents, see the version of the WS-Trust specification that applies to your scenario.\n  syntax:\n    content: 'public abstract class WSTrustMessage : System.IdentityModel.OpenObject'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.OpenObject\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.OpenObject.Properties\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: WSTrustMessage()\n  nameWithType: WSTrustMessage.WSTrustMessage()\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.WSTrustMessage()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.WSTrustMessage\"></xref> class.\n  remarks: The default constructor for extensibility.\n  syntax:\n    content: protected WSTrustMessage ();\n    parameters: []\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating\n  id: AllowPostdating\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: AllowPostdating\n  nameWithType: WSTrustMessage.AllowPostdating\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:AllowPostdating element.\n  remarks: \"This optional element indicates that returned tokens should allow requests for postdated tokens.  \\n  \\n This property is usually used with the token renewal binding.\"\n  syntax:\n    content: public bool AllowPostdating { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if returned tokens should allow requests for postdated tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo\n  id: AppliesTo\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: AppliesTo\n  nameWithType: WSTrustMessage.AppliesTo\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wsp:AppliesTo element.\n  remarks: \"This optional element specifies the endpoint address for which this security token is desired; for example, the service to which the token applies.  \\n  \\n Either wst:TokenType or wst:AppliesTo should be defined in the token request message. If both are specified, the wst:AppliesTo field takes precedence.\"\n  syntax:\n    content: public System.IdentityModel.Protocols.WSTrust.EndpointReference AppliesTo { get; set; }\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.EndpointReference\n      description: An <xref:System.ServiceModel.EndpointAddress> that represents the endpoint address for which the security token is desired.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType\n  id: AuthenticationType\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: AuthenticationType\n  nameWithType: WSTrustMessage.AuthenticationType\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:AuthenticationType element.\n  remarks: This optional element indicates the type of authentication desired, specified as a URI.\n  syntax:\n    content: public string AuthenticationType { get; set; }\n    return:\n      type: System.String\n      description: A string that contains a URI that indicates the type of authentication desired.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange\n  id: BinaryExchange\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: BinaryExchange\n  nameWithType: WSTrustMessage.BinaryExchange\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:BinaryExchange element.\n  syntax:\n    content: public System.IdentityModel.Protocols.WSTrust.BinaryExchange BinaryExchange { get; set; }\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.BinaryExchange\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.BinaryExchange\"></xref> that contains the binary data exchanged. This includes the contents of the ValueType and EncodingType attributes as well as the actual data.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm\n  id: CanonicalizationAlgorithm\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: CanonicalizationAlgorithm\n  nameWithType: WSTrustMessage.CanonicalizationAlgorithm\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:CanonicalizationAlgorithm element.\n  syntax:\n    content: public string CanonicalizationAlgorithm { get; set; }\n    return:\n      type: System.String\n      description: A string that contains a URI that indicates the canonicalization algorithm.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context\n  id: Context\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: Context\n  nameWithType: WSTrustMessage.Context\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the Context attribute on the RST or RSTR.\n  remarks: The optional Context attribute on an RST element specifies an identifier (context) for a request. All subsequent RSTR elements relating to this request must carry this attribute.\n  syntax:\n    content: public string Context { get; set; }\n    return:\n      type: System.String\n      description: A string that contains a URI that identifies the context of a request or response message.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm\n  id: EncryptionAlgorithm\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: EncryptionAlgorithm\n  nameWithType: WSTrustMessage.EncryptionAlgorithm\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:EncryptionAlgorithm element.\n  remarks: This optional URI element indicates the desired encryption algorithm used within the returned token.\n  syntax:\n    content: public string EncryptionAlgorithm { get; set; }\n    return:\n      type: System.String\n      description: A string that contains a URI that indicates the encryption algorithm.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith\n  id: EncryptWith\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: EncryptWith\n  nameWithType: WSTrustMessage.EncryptWith\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:EncryptWith element.\n  remarks: This optional URI element indicates the desired encryption algorithm to be used with the issued security token.\n  syntax:\n    content: public string EncryptWith { get; set; }\n    return:\n      type: System.String\n      description: A string that contains a URI that indicates the desired encryption algoritm to be used with the issued security token.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt to set the property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy\n  id: Entropy\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: Entropy\n  nameWithType: WSTrustMessage.Entropy\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:Entropy element.\n  remarks: This optional element allows a requestor to specify entropy that is to be used in creating the key. This is commonly used in a token issuance request message. The value of this element should be either an EncryptedKey or BinarySecret depending on whether or not the key is encrypted.\n  syntax:\n    content: public System.IdentityModel.Protocols.WSTrust.Entropy Entropy { get; set; }\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.Entropy\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.Entropy\"></xref> that represents the contents of the entropy element.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits\n  id: KeySizeInBits\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: KeySizeInBits\n  nameWithType: WSTrustMessage.KeySizeInBits\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:KeySize element inside a RequestSecurityToken (RST) message.\n  syntax:\n    content: public Nullable<int> KeySizeInBits { get; set; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: The key size in bits.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: An attempt to set a value less than or equal to zero occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType\n  id: KeyType\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: KeyType\n  nameWithType: WSTrustMessage.KeyType\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:KeyType element inside a RequestSecurityToken (RST) message.\n  remarks: This optional URI element indicates the type of key desired in the security token.\n  syntax:\n    content: public string KeyType { get; set; }\n    return:\n      type: System.String\n      description: A string that contains the URI that identifies the type of key desired.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm\n  id: KeyWrapAlgorithm\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: KeyWrapAlgorithm\n  nameWithType: WSTrustMessage.KeyWrapAlgorithm\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:KeyWrapAlgorithm element.\n  remarks: This optional URI indicates the desired algorithm to use for key wrapping when STS encrypts the issued token for the relying party using an asymmetric key.\n  syntax:\n    content: public string KeyWrapAlgorithm { get; set; }\n    return:\n      type: System.String\n      description: A string that contains the URI that identifies the key wrap algorithm.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime\n  id: Lifetime\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: Lifetime\n  nameWithType: WSTrustMessage.Lifetime\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:Lifetime element inside a RequestSecurityToken (RST) message.\n  remarks: This optional element specifies the desired time range during which the returned security token is valid.\n  syntax:\n    content: public System.IdentityModel.Protocols.WSTrust.Lifetime Lifetime { get; set; }\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.Lifetime\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.Lifetime\"></xref> that represents the desired time during which the returned token will be valid.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo\n  id: ReplyTo\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: ReplyTo\n  nameWithType: WSTrustMessage.ReplyTo\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the address to be used for replying to the Relying Party.\n  remarks: This is a local extension that is used exclusively in passive scenarios with the WS-Federation protocol.\n  syntax:\n    content: public string ReplyTo { get; set; }\n    return:\n      type: System.String\n      description: A string that contains the address.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType\n  id: RequestType\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: RequestType\n  nameWithType: WSTrustMessage.RequestType\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the wst:RequestType element.\n  remarks: This required element indicates the request type.\n  syntax:\n    content: public string RequestType { get; set; }\n    return:\n      type: System.String\n      description: A string that contains a URI that indicates the request type; for example, one of the constants defined in the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestTypes\"></xref> class.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm\n  id: SignatureAlgorithm\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: SignatureAlgorithm\n  nameWithType: WSTrustMessage.SignatureAlgorithm\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:SignatureAlgorithm element.\n  remarks: This optional URI element indicates the desired signature algorithm used within the returned token.\n  syntax:\n    content: public string SignatureAlgorithm { get; set; }\n    return:\n      type: System.String\n      description: A string that contains a URI that indicates the signature algorithm.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith\n  id: SignWith\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: SignWith\n  nameWithType: WSTrustMessage.SignWith\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:SignWith element.\n  remarks: This optional URI element indicates the desired signature algorithm to be used with the issued security token. This is an extension to the RequestSecurityToken element.\n  syntax:\n    content: public string SignWith { get; set; }\n    return:\n      type: System.String\n      description: A string that contains a URI that identifies the desired signature algorithm.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt to set the value to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string occurs.\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType\n  id: TokenType\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: TokenType\n  nameWithType: WSTrustMessage.TokenType\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:TokenType element.\n  remarks: This optional element indicates the desired token type.\n  syntax:\n    content: public string TokenType { get; set; }\n    return:\n      type: System.String\n      description: A string that contains a URI that indicates the token type.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey\n  id: UseKey\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  langs:\n  - csharp\n  name: UseKey\n  nameWithType: WSTrustMessage.UseKey\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the contents of the wst:UseKey element.\n  remarks: If the requestor wishes to use an existing key rather than create a new one, then this property can be used to reference a security token containing the desired key. This is commonly used in the asymetric key issurance case.\n  syntax:\n    content: public System.IdentityModel.Protocols.WSTrust.UseKey UseKey { get; set; }\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.UseKey\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.UseKey\"></xref> that contains the key.\n  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.OpenObject\n  isExternal: false\n  name: System.IdentityModel.OpenObject\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: WSTrustMessage()\n  nameWithType: WSTrustMessage.WSTrustMessage()\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.WSTrustMessage()\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: AllowPostdating\n  nameWithType: WSTrustMessage.AllowPostdating\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: AppliesTo\n  nameWithType: WSTrustMessage.AppliesTo\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo\n- uid: System.IdentityModel.Protocols.WSTrust.EndpointReference\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: EndpointReference\n  nameWithType: EndpointReference\n  fullName: System.IdentityModel.Protocols.WSTrust.EndpointReference\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: WSTrustMessage.AuthenticationType\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: BinaryExchange\n  nameWithType: WSTrustMessage.BinaryExchange\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange\n- uid: System.IdentityModel.Protocols.WSTrust.BinaryExchange\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: BinaryExchange\n  nameWithType: BinaryExchange\n  fullName: System.IdentityModel.Protocols.WSTrust.BinaryExchange\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: CanonicalizationAlgorithm\n  nameWithType: WSTrustMessage.CanonicalizationAlgorithm\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: Context\n  nameWithType: WSTrustMessage.Context\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: EncryptionAlgorithm\n  nameWithType: WSTrustMessage.EncryptionAlgorithm\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: EncryptWith\n  nameWithType: WSTrustMessage.EncryptWith\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: Entropy\n  nameWithType: WSTrustMessage.Entropy\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy\n- uid: System.IdentityModel.Protocols.WSTrust.Entropy\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: Entropy\n  nameWithType: Entropy\n  fullName: System.IdentityModel.Protocols.WSTrust.Entropy\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: KeySizeInBits\n  nameWithType: WSTrustMessage.KeySizeInBits\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: true\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int32>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: KeyType\n  nameWithType: WSTrustMessage.KeyType\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: KeyWrapAlgorithm\n  nameWithType: WSTrustMessage.KeyWrapAlgorithm\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: Lifetime\n  nameWithType: WSTrustMessage.Lifetime\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime\n- uid: System.IdentityModel.Protocols.WSTrust.Lifetime\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: Lifetime\n  nameWithType: Lifetime\n  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: ReplyTo\n  nameWithType: WSTrustMessage.ReplyTo\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: RequestType\n  nameWithType: WSTrustMessage.RequestType\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: WSTrustMessage.SignatureAlgorithm\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: SignWith\n  nameWithType: WSTrustMessage.SignWith\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: TokenType\n  nameWithType: WSTrustMessage.TokenType\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: UseKey\n  nameWithType: WSTrustMessage.UseKey\n  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey\n- uid: System.IdentityModel.Protocols.WSTrust.UseKey\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: UseKey\n  nameWithType: UseKey\n  fullName: System.IdentityModel.Protocols.WSTrust.UseKey\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: WSTrustMessage\n  nameWithType: WSTrustMessage.WSTrustMessage\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: AllowPostdating\n  nameWithType: WSTrustMessage.AllowPostdating\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: AppliesTo\n  nameWithType: WSTrustMessage.AppliesTo\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: WSTrustMessage.AuthenticationType\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: BinaryExchange\n  nameWithType: WSTrustMessage.BinaryExchange\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: CanonicalizationAlgorithm\n  nameWithType: WSTrustMessage.CanonicalizationAlgorithm\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: Context\n  nameWithType: WSTrustMessage.Context\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: EncryptionAlgorithm\n  nameWithType: WSTrustMessage.EncryptionAlgorithm\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: EncryptWith\n  nameWithType: WSTrustMessage.EncryptWith\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: Entropy\n  nameWithType: WSTrustMessage.Entropy\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: KeySizeInBits\n  nameWithType: WSTrustMessage.KeySizeInBits\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: KeyType\n  nameWithType: WSTrustMessage.KeyType\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: KeyWrapAlgorithm\n  nameWithType: WSTrustMessage.KeyWrapAlgorithm\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: Lifetime\n  nameWithType: WSTrustMessage.Lifetime\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: ReplyTo\n  nameWithType: WSTrustMessage.ReplyTo\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: RequestType\n  nameWithType: WSTrustMessage.RequestType\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: WSTrustMessage.SignatureAlgorithm\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: SignWith\n  nameWithType: WSTrustMessage.SignWith\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: TokenType\n  nameWithType: WSTrustMessage.TokenType\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey*\n  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: UseKey\n  nameWithType: WSTrustMessage.UseKey\n"}