{"nodes":[{"pos":[670,849],"content":"Provides an abstract class for specifying character data and formatting properties to be used by the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Provides an abstract class for specifying character data and formatting properties to be used by the <xref href=\"System.Windows.Media.TextFormatting.TextFormatter\"></xref> object."},{"pos":[862,2655],"content":"All access to the text in the TextSource object is through the <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, which is designed to allow the text layout client to virtualize text in any way it chooses.       <xref:System.Windows.Media.TextFormatting.TextFormatter> is the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] text engine that provides services for formatting text and breaking text lines. <xref:System.Windows.Media.TextFormatting.TextFormatter> can handle different text character formats and paragraph styles, and includes support for international text layout. Unlike a traditional text [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)], the <xref:System.Windows.Media.TextFormatting.TextFormatter> interacts with a text layout client through a set of callback methods. It requires the client to provide these methods in an implementation of the TextSource class. The following list describes the three members you must override:      -   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Retrieves a <xref:System.Windows.Media.TextFormatting.TextRun> starting at a specified TextSource position.      -   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Retrieves the text span immediately before the specified TextSource position.      -   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Retrieves a value that maps a TextSource character index to a <xref:System.Windows.Media.TextEffect> character index.      > [!NOTE] >  For a complete code sample that shows how to implement a derived TextSource class, see [Advanced Text Formatting Sample](http://go.microsoft.com/fwlink/?LinkID=159965) .","needQuote":false,"needEscape":true,"nodes":[{"content":"All access to the text in the TextSource object is through the &lt;xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A&gt;, which is designed to allow the text layout client to virtualize text in any way it chooses.","pos":[0,223],"source":"All access to the text in the TextSource object is through the <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, which is designed to allow the text layout client to virtualize text in any way it chooses."},{"content":"&lt;xref:System.Windows.Media.TextFormatting.TextFormatter&gt; is the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> text engine that provides services for formatting text and breaking text lines.","pos":[230,449],"source":"       <xref:System.Windows.Media.TextFormatting.TextFormatter> is the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] text engine that provides services for formatting text and breaking text lines."},{"content":"&lt;xref:System.Windows.Media.TextFormatting.TextFormatter&gt; can handle different text character formats and paragraph styles, and includes support for international text layout.","pos":[450,624],"source":" <xref:System.Windows.Media.TextFormatting.TextFormatter> can handle different text character formats and paragraph styles, and includes support for international text layout."},{"content":"Unlike a traditional text <ph id=\"ph1\">[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]</ph>, the &lt;xref:System.Windows.Media.TextFormatting.TextFormatter&gt; interacts with a text layout client through a set of callback methods.","pos":[625,845],"source":" Unlike a traditional text [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)], the <xref:System.Windows.Media.TextFormatting.TextFormatter> interacts with a text layout client through a set of callback methods."},{"content":"It requires the client to provide these methods in an implementation of the TextSource class.","pos":[846,939]},{"content":"The following list describes the three members you must override:      -   &lt;xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A&gt;: Retrieves a &lt;xref:System.Windows.Media.TextFormatting.TextRun&gt; starting at a specified TextSource position.","pos":[940,1191],"source":" The following list describes the three members you must override:      -   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Retrieves a <xref:System.Windows.Media.TextFormatting.TextRun> starting at a specified TextSource position."},{"content":"-   &lt;xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A&gt;: Retrieves the text span immediately before the specified TextSource position.","pos":[1197,1353],"source":"      -   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Retrieves the text span immediately before the specified TextSource position."},{"content":"-   &lt;xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A&gt;: Retrieves a value that maps a TextSource character index to a &lt;xref:System.Windows.Media.TextEffect&gt; character index.","pos":[1359,1594],"source":"      -   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Retrieves a value that maps a TextSource character index to a <xref:System.Windows.Media.TextEffect> character index."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For a complete code sample that shows how to implement a derived TextSource class, see <bpt id=\"p1\">[</bpt>Advanced Text Formatting Sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=159965)</ept> .","pos":[1600,1782],"source":"      > [!NOTE] >  For a complete code sample that shows how to implement a derived TextSource class, see [Advanced Text Formatting Sample](http://go.microsoft.com/fwlink/?LinkID=159965) ."}]},{"pos":[3208,3316],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> class."},{"pos":[3965,4099],"content":"Retrieves the text span immediately before the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> position.","needQuote":true,"needEscape":true,"source":"Retrieves the text span immediately before the specified <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> position."},{"pos":[4112,4487],"content":"The GetPrecedingText method returns an empty <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> if the text span immediately before `textSourceCharacterIndexLimit` does not contain any text, such as inline object or a hidden run.       This method returns a zero-length text span if there are no values preceding `textSourceCharacterIndexLimit`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The GetPrecedingText method returns an empty &lt;xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; if the text span immediately before <ph id=\"ph1\">`textSourceCharacterIndexLimit`</ph> does not contain any text, such as inline object or a hidden run.","pos":[0,257],"source":"The GetPrecedingText method returns an empty <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> if the text span immediately before `textSourceCharacterIndexLimit` does not contain any text, such as inline object or a hidden run."},{"content":"This method returns a zero-length text span if there are no values preceding <ph id=\"ph1\">`textSourceCharacterIndexLimit`</ph>.","pos":[264,373],"source":"       This method returns a zero-length text span if there are no values preceding `textSourceCharacterIndexLimit`."}]},{"pos":[4800,4900],"content":"An <xref:System.Int32> value that specifies the character index position where text retrieval stops.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; value that specifies the character index position where text retrieval stops.","pos":[0,100],"source":"An <xref:System.Int32> value that specifies the character index position where text retrieval stops."}]},{"pos":[5062,5255],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the text span immediately before <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">textSourceCharacterIndexLimit</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange\"></xref> value that represents the text span immediately before <code>textSourceCharacterIndexLimit</code>."},{"pos":[6043,6231],"content":"Retrieves a value that maps a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> character index to a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextEffect\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> character index.","needQuote":true,"needEscape":true,"source":"Retrieves a value that maps a <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> character index to a <xref href=\"System.Windows.Media.TextEffect\"></xref> character index."},{"pos":[6458,6597],"content":"An &lt;xref:System.Int32&gt; value that specifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> character index to map.","needQuote":true,"needEscape":true,"source":"An <xref:System.Int32> value that specifies the <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> character index to map."},{"pos":[6654,6772],"content":"An &lt;xref:System.Int32&gt; value that represents the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextEffect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> character index.","needQuote":true,"needEscape":true,"source":"An <xref:System.Int32> value that represents the <xref href=\"System.Windows.Media.TextEffect\"></xref> character index."},{"pos":[7374,7552],"content":"Retrieves a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextRun\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> starting at a specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> position.","needQuote":true,"needEscape":true,"source":"Retrieves a <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref> starting at a specified <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> position."},{"pos":[7565,9337],"content":"A text run is a sequence of characters sharing a single property set. Any change to the format, such as font family, font style, foreground color, text decoration, or any other formatting effect, breaks the text run. The <xref:System.Windows.Media.TextFormatting.TextRun> class is the root of a type hierarchy representing several types of text content processed by <xref:System.Windows.Media.TextFormatting.TextFormatter>. Each class that is derived from <xref:System.Windows.Media.TextFormatting.TextRun> represents a distinct type of text content.      |Class|Description|   |-----------|-----------------|   |<xref:System.Windows.Media.TextFormatting.TextRun>|Root of the hierarchy. Defines a group of characters that share the same set of character properties.|   |<xref:System.Windows.Media.TextFormatting.TextCharacters>|Defines a collection of character glyphs from a distinct physical typeface.|   |<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Defines a type of text content in which measuring, hit testing, and drawing of the entire content is done as a distinct entity. An example of this type of content is a button in the middle of the line of text.|   |<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Defines a line-break character code.|   |<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Defines a paragraph-break character code. Derives from <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.|   |<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Defines a segment break marker.|   |<xref:System.Windows.Media.TextFormatting.TextHidden>|Defines a range of non-visible characters.|   |<xref:System.Windows.Media.TextFormatting.TextModifier>|Defines the beginning of a modification scope.|","needQuote":false,"needEscape":true,"nodes":[{"content":"A text run is a sequence of characters sharing a single property set. Any change to the format, such as font family, font style, foreground color, text decoration, or any other formatting effect, breaks the text run. The <xref:System.Windows.Media.TextFormatting.TextRun> class is the root of a type hierarchy representing several types of text content processed by <xref:System.Windows.Media.TextFormatting.TextFormatter>. Each class that is derived from <xref:System.Windows.Media.TextFormatting.TextRun> represents a distinct type of text content.      |Class|Description|   |-----------|-----------------|   |<xref:System.Windows.Media.TextFormatting.TextRun>|Root of the hierarchy. Defines a group of characters that share the same set of character properties.|   |<xref:System.Windows.Media.TextFormatting.TextCharacters>|Defines a collection of character glyphs from a distinct physical typeface.|   |<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Defines a type of text content in which measuring, hit testing, and drawing of the entire content is done as a distinct entity. An example of this type of content is a button in the middle of the line of text.|   |<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Defines a line-break character code.|   |<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Defines a paragraph-break character code. Derives from <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.|   |<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Defines a segment break marker.|   |<xref:System.Windows.Media.TextFormatting.TextHidden>|Defines a range of non-visible characters.|   |<xref:System.Windows.Media.TextFormatting.TextModifier>|Defines the beginning of a modification scope.|","pos":[0,1761],"nodes":[{"content":"A text run is a sequence of characters sharing a single property set.","pos":[0,69]},{"content":"Any change to the format, such as font family, font style, foreground color, text decoration, or any other formatting effect, breaks the text run.","pos":[70,216]},{"content":"The &lt;xref:System.Windows.Media.TextFormatting.TextRun&gt; class is the root of a type hierarchy representing several types of text content processed by &lt;xref:System.Windows.Media.TextFormatting.TextFormatter&gt;.","pos":[217,423],"source":" The <xref:System.Windows.Media.TextFormatting.TextRun> class is the root of a type hierarchy representing several types of text content processed by <xref:System.Windows.Media.TextFormatting.TextFormatter>."},{"content":"Each class that is derived from &lt;xref:System.Windows.Media.TextFormatting.TextRun&gt; represents a distinct type of text content.","pos":[424,550],"source":" Each class that is derived from <xref:System.Windows.Media.TextFormatting.TextRun> represents a distinct type of text content."},{"content":"|Class|Description|   |-----------|-----------------|   |&lt;xref:System.Windows.Media.TextFormatting.TextRun&gt;|Root of the hierarchy.","pos":[556,686],"source":"      |Class|Description|   |-----------|-----------------|   |<xref:System.Windows.Media.TextFormatting.TextRun>|Root of the hierarchy."},{"content":"Defines a group of characters that share the same set of character properties.|   |&lt;xref:System.Windows.Media.TextFormatting.TextCharacters&gt;|Defines a collection of character glyphs from a distinct physical typeface.|   |&lt;xref:System.Windows.Media.TextFormatting.TextEmbeddedObject&gt;|Defines a type of text content in which measuring, hit testing, and drawing of the entire content is done as a distinct entity.","pos":[687,1097],"source":" Defines a group of characters that share the same set of character properties.|   |<xref:System.Windows.Media.TextFormatting.TextCharacters>|Defines a collection of character glyphs from a distinct physical typeface.|   |<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Defines a type of text content in which measuring, hit testing, and drawing of the entire content is done as a distinct entity."},{"content":"An example of this type of content is a button in the middle of the line of text.|   |&lt;xref:System.Windows.Media.TextFormatting.TextEndOfLine&gt;|Defines a line-break character code.|   |&lt;xref:System.Windows.Media.TextFormatting.TextEndOfParagraph&gt;|Defines a paragraph-break character code.","pos":[1098,1385],"source":" An example of this type of content is a button in the middle of the line of text.|   |<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Defines a line-break character code.|   |<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Defines a paragraph-break character code."},{"content":"Derives from &lt;xref:System.Windows.Media.TextFormatting.TextEndOfLine&gt;.|   |&lt;xref:System.Windows.Media.TextFormatting.TextEndOfSegment&gt;|Defines a segment break marker.|   |&lt;xref:System.Windows.Media.TextFormatting.TextHidden&gt;|Defines a range of non-visible characters.|   |&lt;xref:System.Windows.Media.TextFormatting.TextModifier&gt;|Defines the beginning of a modification scope.|","pos":[1386,1761],"source":" Derives from <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.|   |<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Defines a segment break marker.|   |<xref:System.Windows.Media.TextFormatting.TextHidden>|Defines a range of non-visible characters.|   |<xref:System.Windows.Media.TextFormatting.TextModifier>|Defines the beginning of a modification scope.|"}]}]},{"pos":[9974,10176],"content":"Specifies the character index position in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> where the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextRun\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is retrieved.","needQuote":true,"needEscape":true,"source":"Specifies the character index position in the <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> where the <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref> is retrieved."},{"pos":[10264,10447],"content":"A value that represents a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextRun\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or an object derived from <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextRun\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A value that represents a <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref>, or an object derived from <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref>."},{"pos":[10967,11033],"content":"Get or sets the PixelsPerDip at which the text should be rendered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get or sets the PixelsPerDip at which the text should be rendered.","pos":[0,66]}]},{"pos":[11045,11222],"content":"Any class that extends <xref:System.Windows.Media.TextFormatting.TextSource> should update         PixelsPerDip whenever the DPI changes for a Per Monitor DPI Aware application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Any class that extends &lt;xref:System.Windows.Media.TextFormatting.TextSource&gt; should update         PixelsPerDip whenever the DPI changes for a Per Monitor DPI Aware application.","pos":[0,177],"source":"Any class that extends <xref:System.Windows.Media.TextFormatting.TextSource> should update         PixelsPerDip whenever the DPI changes for a Per Monitor DPI Aware application."}]},{"pos":[11344,11375],"content":"The current PixelsPerDip value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current PixelsPerDip value.","pos":[0,31]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.TextFormatting.TextSource\n  id: TextSource\n  children:\n  - System.Windows.Media.TextFormatting.TextSource.#ctor\n  - System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)\n  - System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)\n  - System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)\n  - System.Windows.Media.TextFormatting.TextSource.PixelsPerDip\n  langs:\n  - csharp\n  name: TextSource\n  nameWithType: TextSource\n  fullName: System.Windows.Media.TextFormatting.TextSource\n  type: Class\n  summary: Provides an abstract class for specifying character data and formatting properties to be used by the <xref href=\"System.Windows.Media.TextFormatting.TextFormatter\"></xref> object.\n  remarks: \"All access to the text in the TextSource object is through the <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, which is designed to allow the text layout client to virtualize text in any way it chooses.  \\n  \\n <xref:System.Windows.Media.TextFormatting.TextFormatter> is the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] text engine that provides services for formatting text and breaking text lines. <xref:System.Windows.Media.TextFormatting.TextFormatter> can handle different text character formats and paragraph styles, and includes support for international text layout. Unlike a traditional text [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)], the <xref:System.Windows.Media.TextFormatting.TextFormatter> interacts with a text layout client through a set of callback methods. It requires the client to provide these methods in an implementation of the TextSource class. The following list describes the three members you must override:  \\n  \\n-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Retrieves a <xref:System.Windows.Media.TextFormatting.TextRun> starting at a specified TextSource position.  \\n  \\n-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Retrieves the text span immediately before the specified TextSource position.  \\n  \\n-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Retrieves a value that maps a TextSource character index to a <xref:System.Windows.Media.TextEffect> character index.  \\n  \\n> [!NOTE]\\n>  For a complete code sample that shows how to implement a derived TextSource class, see [Advanced Text Formatting Sample](http://go.microsoft.com/fwlink/?LinkID=159965) .\"\n  syntax:\n    content: public abstract class TextSource\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextSource.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.TextFormatting.TextSource\n  langs:\n  - csharp\n  name: TextSource()\n  nameWithType: TextSource.TextSource()\n  fullName: System.Windows.Media.TextFormatting.TextSource.TextSource()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> class.\n  syntax:\n    content: protected TextSource ();\n    parameters: []\n  overload: System.Windows.Media.TextFormatting.TextSource.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)\n  id: GetPrecedingText(System.Int32)\n  parent: System.Windows.Media.TextFormatting.TextSource\n  langs:\n  - csharp\n  name: GetPrecedingText(Int32)\n  nameWithType: TextSource.GetPrecedingText(Int32)\n  fullName: System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Retrieves the text span immediately before the specified <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> position.\n  remarks: \"The GetPrecedingText method returns an empty <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> if the text span immediately before `textSourceCharacterIndexLimit` does not contain any text, such as inline object or a hidden run.  \\n  \\n This method returns a zero-length text span if there are no values preceding `textSourceCharacterIndexLimit`.\"\n  syntax:\n    content: public abstract System.Windows.Media.TextFormatting.TextSpan<System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> GetPrecedingText (int textSourceCharacterIndexLimit);\n    parameters:\n    - id: textSourceCharacterIndexLimit\n      type: System.Int32\n      description: An <xref:System.Int32> value that specifies the character index position where text retrieval stops.\n    return:\n      type: System.Windows.Media.TextFormatting.TextSpan{System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange}\n      description: A <xref href=\"System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange\"></xref> value that represents the text span immediately before <code>textSourceCharacterIndexLimit</code>.\n  overload: System.Windows.Media.TextFormatting.TextSource.GetPrecedingText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)\n  id: GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)\n  parent: System.Windows.Media.TextFormatting.TextSource\n  langs:\n  - csharp\n  name: GetTextEffectCharacterIndexFromTextSourceCharacterIndex(Int32)\n  nameWithType: TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(Int32)\n  fullName: System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Retrieves a value that maps a <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> character index to a <xref href=\"System.Windows.Media.TextEffect\"></xref> character index.\n  syntax:\n    content: public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);\n    parameters:\n    - id: textSourceCharacterIndex\n      type: System.Int32\n      description: An <xref:System.Int32> value that specifies the <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> character index to map.\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> value that represents the <xref href=\"System.Windows.Media.TextEffect\"></xref> character index.\n  overload: System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)\n  id: GetTextRun(System.Int32)\n  parent: System.Windows.Media.TextFormatting.TextSource\n  langs:\n  - csharp\n  name: GetTextRun(Int32)\n  nameWithType: TextSource.GetTextRun(Int32)\n  fullName: System.Windows.Media.TextFormatting.TextSource.GetTextRun(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Retrieves a <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref> starting at a specified <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> position.\n  remarks: \"A text run is a sequence of characters sharing a single property set. Any change to the format, such as font family, font style, foreground color, text decoration, or any other formatting effect, breaks the text run. The <xref:System.Windows.Media.TextFormatting.TextRun> class is the root of a type hierarchy representing several types of text content processed by <xref:System.Windows.Media.TextFormatting.TextFormatter>. Each class that is derived from <xref:System.Windows.Media.TextFormatting.TextRun> represents a distinct type of text content.  \\n  \\n|Class|Description|  \\n|-----------|-----------------|  \\n|<xref:System.Windows.Media.TextFormatting.TextRun>|Root of the hierarchy. Defines a group of characters that share the same set of character properties.|  \\n|<xref:System.Windows.Media.TextFormatting.TextCharacters>|Defines a collection of character glyphs from a distinct physical typeface.|  \\n|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Defines a type of text content in which measuring, hit testing, and drawing of the entire content is done as a distinct entity. An example of this type of content is a button in the middle of the line of text.|  \\n|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Defines a line-break character code.|  \\n|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Defines a paragraph-break character code. Derives from <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.|  \\n|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Defines a segment break marker.|  \\n|<xref:System.Windows.Media.TextFormatting.TextHidden>|Defines a range of non-visible characters.|  \\n|<xref:System.Windows.Media.TextFormatting.TextModifier>|Defines the beginning of a modification scope.|\"\n  example:\n  - \"In the following example, an override for the GetTextRun method is implemented.  \\n  \\n [!code-cs[TextFormattingSnippets#TextFormattingSnippet4](~/add/codesnippet/csharp/TextFormattingSnippets/CustomTextClasses.cs#textformattingsnippet4)]\\n [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/add/codesnippet/visualbasic/textformattingsnippets/customtextclasses.vb#textformattingsnippet4)]\"\n  syntax:\n    content: public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);\n    parameters:\n    - id: textSourceCharacterIndex\n      type: System.Int32\n      description: Specifies the character index position in the <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> where the <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref> is retrieved.\n    return:\n      type: System.Windows.Media.TextFormatting.TextRun\n      description: A value that represents a <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref>, or an object derived from <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref>.\n  overload: System.Windows.Media.TextFormatting.TextSource.GetTextRun*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextSource.PixelsPerDip\n  id: PixelsPerDip\n  parent: System.Windows.Media.TextFormatting.TextSource\n  langs:\n  - csharp\n  name: PixelsPerDip\n  nameWithType: TextSource.PixelsPerDip\n  fullName: System.Windows.Media.TextFormatting.TextSource.PixelsPerDip\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Get or sets the PixelsPerDip at which the text should be rendered.\n  remarks: Any class that extends <xref:System.Windows.Media.TextFormatting.TextSource> should update         PixelsPerDip whenever the DPI changes for a Per Monitor DPI Aware application.\n  syntax:\n    content: public double PixelsPerDip { get; set; }\n    return:\n      type: System.Double\n      description: The current PixelsPerDip value.\n  overload: System.Windows.Media.TextFormatting.TextSource.PixelsPerDip*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Media.TextFormatting.TextSource.#ctor\n  parent: System.Windows.Media.TextFormatting.TextSource\n  isExternal: false\n  name: TextSource()\n  nameWithType: TextSource.TextSource()\n  fullName: System.Windows.Media.TextFormatting.TextSource.TextSource()\n- uid: System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)\n  parent: System.Windows.Media.TextFormatting.TextSource\n  isExternal: false\n  name: GetPrecedingText(Int32)\n  nameWithType: TextSource.GetPrecedingText(Int32)\n  fullName: System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(Int32)\n- uid: System.Windows.Media.TextFormatting.TextSpan{System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange}\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: TextSpan<CultureSpecificCharacterBufferRange>\n  nameWithType: TextSpan<CultureSpecificCharacterBufferRange>\n  fullName: System.Windows.Media.TextFormatting.TextSpan<System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange>\n  spec.csharp:\n  - uid: System.Windows.Media.TextFormatting.TextSpan`1\n    name: TextSpan\n    nameWithType: TextSpan\n    fullName: TextSpan<System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange\n    name: CultureSpecificCharacterBufferRange\n    nameWithType: CultureSpecificCharacterBufferRange\n    fullName: CultureSpecificCharacterBufferRange\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)\n  parent: System.Windows.Media.TextFormatting.TextSource\n  isExternal: false\n  name: GetTextEffectCharacterIndexFromTextSourceCharacterIndex(Int32)\n  nameWithType: TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(Int32)\n  fullName: System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(Int32)\n- uid: System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)\n  parent: System.Windows.Media.TextFormatting.TextSource\n  isExternal: false\n  name: GetTextRun(Int32)\n  nameWithType: TextSource.GetTextRun(Int32)\n  fullName: System.Windows.Media.TextFormatting.TextSource.GetTextRun(Int32)\n- uid: System.Windows.Media.TextFormatting.TextRun\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: TextRun\n  nameWithType: TextRun\n  fullName: System.Windows.Media.TextFormatting.TextRun\n- uid: System.Windows.Media.TextFormatting.TextSource.PixelsPerDip\n  parent: System.Windows.Media.TextFormatting.TextSource\n  isExternal: false\n  name: PixelsPerDip\n  nameWithType: TextSource.PixelsPerDip\n  fullName: System.Windows.Media.TextFormatting.TextSource.PixelsPerDip\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.TextFormatting.TextSource.#ctor*\n  parent: System.Windows.Media.TextFormatting.TextSource\n  isExternal: false\n  name: TextSource\n  nameWithType: TextSource.TextSource\n- uid: System.Windows.Media.TextFormatting.TextSource.GetPrecedingText*\n  parent: System.Windows.Media.TextFormatting.TextSource\n  isExternal: false\n  name: GetPrecedingText\n  nameWithType: TextSource.GetPrecedingText\n- uid: System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex*\n  parent: System.Windows.Media.TextFormatting.TextSource\n  isExternal: false\n  name: GetTextEffectCharacterIndexFromTextSourceCharacterIndex\n  nameWithType: TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex\n- uid: System.Windows.Media.TextFormatting.TextSource.GetTextRun*\n  parent: System.Windows.Media.TextFormatting.TextSource\n  isExternal: false\n  name: GetTextRun\n  nameWithType: TextSource.GetTextRun\n- uid: System.Windows.Media.TextFormatting.TextSource.PixelsPerDip*\n  parent: System.Windows.Media.TextFormatting.TextSource\n  isExternal: false\n  name: PixelsPerDip\n  nameWithType: TextSource.PixelsPerDip\n"}