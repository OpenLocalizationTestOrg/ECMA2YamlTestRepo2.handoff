{"nodes":[{"pos":[832,926],"content":"An abstract base class used to create composite activities from pre-existing Activity objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"An abstract base class used to create composite activities from pre-existing Activity objects.","pos":[0,94]}]},{"pos":[938,1267],"content":"Activity is the base class in the activity type hierarchy. All other activity types such as <xref:System.Activities.CodeActivity>, <xref:System.Activities.NativeActivity>, <xref:System.Activities.AsyncCodeActivity>, <xref:System.Activities.DynamicActivity>, and <xref:System.Activities.ActivityWithResult> derive from this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity is the base class in the activity type hierarchy. All other activity types such as <xref:System.Activities.CodeActivity>, <xref:System.Activities.NativeActivity>, <xref:System.Activities.AsyncCodeActivity>, <xref:System.Activities.DynamicActivity>, and <xref:System.Activities.ActivityWithResult> derive from this class.","pos":[0,329],"nodes":[{"content":"Activity is the base class in the activity type hierarchy.","pos":[0,58]},{"content":"All other activity types such as &lt;xref:System.Activities.CodeActivity&gt;, &lt;xref:System.Activities.NativeActivity&gt;, &lt;xref:System.Activities.AsyncCodeActivity&gt;, &lt;xref:System.Activities.DynamicActivity&gt;, and &lt;xref:System.Activities.ActivityWithResult&gt; derive from this class.","pos":[59,329],"source":" All other activity types such as <xref:System.Activities.CodeActivity>, <xref:System.Activities.NativeActivity>, <xref:System.Activities.AsyncCodeActivity>, <xref:System.Activities.DynamicActivity>, and <xref:System.Activities.ActivityWithResult> derive from this class."}]}]},{"pos":[2030,2118],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Activity\"></xref> class."},{"pos":[2574,2666],"content":"Gets the identifier of the cache that is unique within the scope of the workflow definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the identifier of the cache that is unique within the scope of the workflow definition.","pos":[0,92]}]},{"pos":[2777,2864],"content":"The identifier of the cache that is unique within the scope of the workflow definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the cache that is unique within the scope of the workflow definition.","pos":[0,87]}]},{"pos":[3411,3528],"content":"Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.","pos":[0,117]}]},{"pos":[3540,4421],"content":"The workflow runtime uses the default implementation of CacheMetadata to ensure correct construction of a workflow as well as to manage runtime relationships and lifetime rules. The default implementation of CacheMetadata examines the public properties of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>. These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>](~/add/includes/ajax-current-ext-md.md), <xref:System.Activities.Activity>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>](~/add/includes/ajax-current-ext-md.md), or <xref:System.Activities.ActivityDelegate>. You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic.","needQuote":true,"needEscape":true,"nodes":[{"content":"The workflow runtime uses the default implementation of CacheMetadata to ensure correct construction of a workflow as well as to manage runtime relationships and lifetime rules.","pos":[0,177]},{"content":"The default implementation of CacheMetadata examines the public properties of the activity type using the type’s &lt;xref:System.ComponentModel.TypeDescriptor&gt;.","pos":[178,335],"source":" The default implementation of CacheMetadata examines the public properties of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>."},{"content":"These public members are of type &lt;xref:System.Activities.Argument&gt;, &lt;xref:System.Activities.Variable&gt;, <bpt id=\"p1\">[</bpt>T:System.Collections.Generic.IEnumerable<ph id=\"ph1\">\\&lt;</ph>T:System.Activities.Variable&gt;<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>, &lt;xref:System.Activities.Activity&gt;, <bpt id=\"p2\">[</bpt>T:System.Collections.Generic.IEnumerable<ph id=\"ph2\">\\&lt;</ph>T:System.Activities.Activity&gt;<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>, or &lt;xref:System.Activities.ActivityDelegate&gt;.","pos":[336,747],"source":" These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>](~/add/includes/ajax-current-ext-md.md), <xref:System.Activities.Activity>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>](~/add/includes/ajax-current-ext-md.md), or <xref:System.Activities.ActivityDelegate>."},{"content":"You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic.","pos":[748,881]}]},{"pos":[4630,4750],"content":"The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.","pos":[0,120]}]},{"pos":[5169,5363],"content":"Gets a collection of <bpt id=\"p1\">&lt;xref href=\"System.Activities.Validation.Constraint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activities that can be configured to provide validation for the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a collection of <xref href=\"System.Activities.Validation.Constraint\"></xref> activities that can be configured to provide validation for the <xref href=\"System.Activities.Activity\"></xref>."},{"pos":[5627,5657],"content":"The collection of constraints.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of constraints.","pos":[0,30]}]},{"pos":[6074,6186],"content":"Gets or sets an optional friendly name that is used for debugging, validation, exception handling, and tracking.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an optional friendly name that is used for debugging, validation, exception handling, and tracking.","pos":[0,112]}]},{"pos":[6198,6236],"content":"This property is read-only at runtime.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]}]},{"pos":[6357,6446],"content":"A friendly name that is used for debugging, validation, exception handling, and tracking.","needQuote":true,"needEscape":true,"nodes":[{"content":"A friendly name that is used for debugging, validation, exception handling, and tracking.","pos":[0,89]}]},{"pos":[6818,6892],"content":"Gets an identifier that is unique in the scope of the workflow definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an identifier that is unique in the scope of the workflow definition.","pos":[0,74]}]},{"pos":[6904,6942],"content":"Id is used in tracking and validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Id is used in tracking and validation.","pos":[0,38]}]},{"pos":[7049,7118],"content":"An identifier that is unique in the scope of the workflow definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"An identifier that is unique in the scope of the workflow definition.","pos":[0,69]}]},{"pos":[7541,7665],"content":"Gets or sets the delegate that returns an <bpt id=\"p1\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the execution logic.","needQuote":true,"needEscape":true,"source":"Gets or sets the delegate that returns an <xref href=\"System.Activities.Activity\"></xref> that contains the execution logic."},{"pos":[7677,7814],"content":"The execution logic can be implemented as several Activity objects by containing them in a Sequence activity or other composite activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The execution logic can be implemented as several Activity objects by containing them in a Sequence activity or other composite activity.","pos":[0,137]}]},{"pos":[8001,8048],"content":"The delegate that contains the execution logic.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate that contains the execution logic.","pos":[0,47]}]},{"pos":[8518,8570],"content":"Gets or sets the version of the implementation used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the version of the implementation used.","pos":[0,52]}]},{"pos":[8714,8747],"content":"The version of the implementation","needQuote":true,"needEscape":true,"nodes":[{"content":"The version of the implementation","pos":[0,33]}]},{"pos":[9477,9526],"content":"Raises an event when creating dynamic update map.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises an event when creating dynamic update map.","pos":[0,49]}]},{"pos":[9821,9839],"content":"The metadata used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata used.","pos":[0,18]}]},{"pos":[9925,9947],"content":"The original activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The original activity.","pos":[0,22]}]},{"pos":[10456,10555],"content":"Indicates whether the <xref:System.Activities.Activity.DisplayName*> property should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the &lt;xref:System.Activities.Activity.DisplayName*&gt; property should be serialized.","pos":[0,99],"source":"Indicates whether the <xref:System.Activities.Activity.DisplayName*> property should be serialized."}]},{"pos":[10699,10924],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Activities.Activity.DisplayName*&gt; property value should be serialized; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Activities.Activity.DisplayName*> property value should be serialized; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11345,11538],"content":"Returns a &lt;xref:System.String&gt; that contains the &lt;xref:System.Activities.Activity.Id<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Activities.Activity.DisplayName<ept id=\"p1\">*</ept>&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref:System.String> that contains the <xref:System.Activities.Activity.Id*> and <xref:System.Activities.Activity.DisplayName*> of the <xref href=\"System.Activities.Activity\"></xref>."},{"pos":[11674,11718],"content":"The ID and the display name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ID and the display name of the activity.","pos":[0,44]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Activity\n  id: Activity\n  children:\n  - System.Activities.Activity.#ctor\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.Implementation\n  - System.Activities.Activity.ImplementationVersion\n  - System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  langs:\n  - csharp\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n  type: Class\n  summary: An abstract base class used to create composite activities from pre-existing Activity objects.\n  remarks: Activity is the base class in the activity type hierarchy. All other activity types such as <xref:System.Activities.CodeActivity>, <xref:System.Activities.NativeActivity>, <xref:System.Activities.AsyncCodeActivity>, <xref:System.Activities.DynamicActivity>, and <xref:System.Activities.ActivityWithResult> derive from this class.\n  example:\n  - \"The following example shows a simple implementation of an Activity derived class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Implementation\")]\n\n      public abstract class Activity\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.#ctor\n  id: '#ctor'\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: Activity()\n  nameWithType: Activity.Activity()\n  fullName: System.Activities.Activity.Activity()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Activity\"></xref> class.\n  syntax:\n    content: protected Activity ();\n    parameters: []\n  overload: System.Activities.Activity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.CacheId\n  id: CacheId\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: System.Activities.Activity.CacheId\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the identifier of the cache that is unique within the scope of the workflow definition.\n  syntax:\n    content: protected int CacheId { get; }\n    return:\n      type: System.Int32\n      description: The identifier of the cache that is unique within the scope of the workflow definition.\n  overload: System.Activities.Activity.CacheId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)\n  id: CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: Activity.CacheMetadata(ActivityMetadata)\n  fullName: System.Activities.Activity.CacheMetadata(ActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.\n  remarks: The workflow runtime uses the default implementation of CacheMetadata to ensure correct construction of a workflow as well as to manage runtime relationships and lifetime rules. The default implementation of CacheMetadata examines the public properties of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>. These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>](~/add/includes/ajax-current-ext-md.md), <xref:System.Activities.Activity>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>](~/add/includes/ajax-current-ext-md.md), or <xref:System.Activities.ActivityDelegate>. You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic.\n  syntax:\n    content: protected virtual void CacheMetadata (System.Activities.ActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.ActivityMetadata\n      description: The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.\n  overload: System.Activities.Activity.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.Constraints\n  id: Constraints\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: System.Activities.Activity.Constraints\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets a collection of <xref href=\"System.Activities.Validation.Constraint\"></xref> activities that can be configured to provide validation for the <xref href=\"System.Activities.Activity\"></xref>.\n  syntax:\n    content: protected System.Collections.ObjectModel.Collection<System.Activities.Validation.Constraint> Constraints { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint}\n      description: The collection of constraints.\n  overload: System.Activities.Activity.Constraints*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.DisplayName\n  id: DisplayName\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: System.Activities.Activity.DisplayName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets an optional friendly name that is used for debugging, validation, exception handling, and tracking.\n  remarks: This property is read-only at runtime.\n  syntax:\n    content: public string DisplayName { get; set; }\n    return:\n      type: System.String\n      description: A friendly name that is used for debugging, validation, exception handling, and tracking.\n  overload: System.Activities.Activity.DisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.Id\n  id: Id\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: Id\n  nameWithType: Activity.Id\n  fullName: System.Activities.Activity.Id\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets an identifier that is unique in the scope of the workflow definition.\n  remarks: Id is used in tracking and validation.\n  syntax:\n    content: public string Id { get; }\n    return:\n      type: System.String\n      description: An identifier that is unique in the scope of the workflow definition.\n  overload: System.Activities.Activity.Id*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.Implementation\n  id: Implementation\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: Implementation\n  nameWithType: Activity.Implementation\n  fullName: System.Activities.Activity.Implementation\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets the delegate that returns an <xref href=\"System.Activities.Activity\"></xref> that contains the execution logic.\n  remarks: The execution logic can be implemented as several Activity objects by containing them in a Sequence activity or other composite activity.\n  syntax:\n    content: protected virtual Func<System.Activities.Activity> Implementation { get; set; }\n    return:\n      type: System.Func{System.Activities.Activity}\n      description: The delegate that contains the execution logic.\n  overload: System.Activities.Activity.Implementation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.ImplementationVersion\n  id: ImplementationVersion\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: ImplementationVersion\n  nameWithType: Activity.ImplementationVersion\n  fullName: System.Activities.Activity.ImplementationVersion\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets the version of the implementation used.\n  syntax:\n    content: protected virtual Version ImplementationVersion { get; set; }\n    return:\n      type: System.Version\n      description: The version of the implementation\n  overload: System.Activities.Activity.ImplementationVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  nameWithType: Activity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  fullName: System.Activities.Activity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Raises an event when creating dynamic update map.\n  syntax:\n    content: protected virtual void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.UpdateMapMetadata\n      description: The metadata used.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: The original activity.\n  overload: System.Activities.Activity.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  id: ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: System.Activities.Activity.ShouldSerializeDisplayName()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Indicates whether the <xref:System.Activities.Activity.DisplayName*> property should be serialized.\n  syntax:\n    content: public bool ShouldSerializeDisplayName ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Activities.Activity.DisplayName*> property value should be serialized; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Activity.ShouldSerializeDisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Activity.ToString\n  id: ToString\n  parent: System.Activities.Activity\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: System.Activities.Activity.ToString()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a <xref:System.String> that contains the <xref:System.Activities.Activity.Id*> and <xref:System.Activities.Activity.DisplayName*> of the <xref href=\"System.Activities.Activity\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The ID and the display name of the activity.\n  overload: System.Activities.Activity.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Activity.#ctor\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Activity()\n  nameWithType: Activity.Activity()\n  fullName: System.Activities.Activity.Activity()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: System.Activities.Activity.CacheId\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: Activity.CacheMetadata(ActivityMetadata)\n  fullName: System.Activities.Activity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.ActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: ActivityMetadata\n  nameWithType: ActivityMetadata\n  fullName: System.Activities.ActivityMetadata\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: System.Activities.Activity.Constraints\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Constraint>\n  nameWithType: Collection<Constraint>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Validation.Constraint>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Validation.Constraint>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Validation.Constraint\n    name: Constraint\n    nameWithType: Constraint\n    fullName: Constraint\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: System.Activities.Activity.DisplayName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: System.Activities.Activity.Id\n- uid: System.Activities.Activity.Implementation\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Implementation\n  nameWithType: Activity.Implementation\n  fullName: System.Activities.Activity.Implementation\n- uid: System.Func{System.Activities.Activity}\n  parent: System\n  isExternal: true\n  name: Func<Activity>\n  nameWithType: Func<Activity>\n  fullName: System.Func<System.Activities.Activity>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Activities.Activity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Activity.ImplementationVersion\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: Activity.ImplementationVersion\n  fullName: System.Activities.Activity.ImplementationVersion\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Activity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  nameWithType: Activity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  fullName: System.Activities.Activity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: UpdateMapMetadata\n  nameWithType: UpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: System.Activities.Activity.ShouldSerializeDisplayName()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: System.Activities.Activity.ToString()\n- uid: System.Activities.Activity.#ctor*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Activity\n  nameWithType: Activity.Activity\n- uid: System.Activities.Activity.CacheId*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n- uid: System.Activities.Activity.CacheMetadata*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Activity.CacheMetadata\n- uid: System.Activities.Activity.Constraints*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n- uid: System.Activities.Activity.Id*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n- uid: System.Activities.Activity.Implementation*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Implementation\n  nameWithType: Activity.Implementation\n- uid: System.Activities.Activity.ImplementationVersion*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: Activity.ImplementationVersion\n- uid: System.Activities.Activity.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: Activity.OnCreateDynamicUpdateMap\n- uid: System.Activities.Activity.ShouldSerializeDisplayName*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName\n  nameWithType: Activity.ShouldSerializeDisplayName\n- uid: System.Activities.Activity.ToString*\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString\n  nameWithType: Activity.ToString\n"}