{"nodes":[{"pos":[645,782],"content":"Accesses the managed version of the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Accesses the managed version of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> algorithm.","pos":[0,105],"source":"Accesses the managed version of the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm."},{"content":"This class cannot be inherited.","pos":[106,137]}]},{"pos":[795,1395],"content":"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits. This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).       The <xref:System.Security.Cryptography.Rijndael> algorithm is the predecessor of <xref:System.Security.Cryptography.Aes>. You should use the <xref:System.Security.Cryptography.Aes> class instead of RijndaelManaged. For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.","needQuote":false,"needEscape":true,"nodes":[{"content":"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits.","pos":[0,85]},{"content":"This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (&lt;xref:System.Security.Cryptography.Aes&gt;-compatible).","pos":[86,224],"source":" This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible)."},{"content":"The &lt;xref:System.Security.Cryptography.Rijndael&gt; algorithm is the predecessor of &lt;xref:System.Security.Cryptography.Aes&gt;.","pos":[231,352],"source":"       The <xref:System.Security.Cryptography.Rijndael> algorithm is the predecessor of <xref:System.Security.Cryptography.Aes>."},{"content":"You should use the &lt;xref:System.Security.Cryptography.Aes&gt; class instead of RijndaelManaged.","pos":[353,445],"source":" You should use the <xref:System.Security.Cryptography.Aes> class instead of RijndaelManaged."},{"content":"For more information, see the entry <bpt id=\"p1\">[</bpt>The Differences Between Rijndael and AES<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=200932)</ept> in the .NET Security blog.","pos":[446,598],"source":" For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog."}]},{"pos":[4245,4351],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.RijndaelManaged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RijndaelManaged\"></xref> class."},{"pos":[5024,5076],"content":"This class is not compliant with the FIPS algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class is not compliant with the FIPS algorithm.","pos":[0,52]}]},{"pos":[5608,5870],"content":"Creates a symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> decryptor object with the specified &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id=\"p2\">*</bpt>&gt; and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id=\"p2\">*</ept>&gt;).","needQuote":true,"needEscape":true,"source":"Creates a symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> decryptor object with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*> and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)."},{"pos":[5883,6104],"content":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> overload with the same signature.       The `rgbkey` size must be 128, 192, or 256 bits.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method decrypts an encrypted message created using the &lt;xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A&gt; overload with the same signature.","pos":[0,164],"source":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> overload with the same signature."},{"content":"The <ph id=\"ph1\">`rgbkey`</ph> size must be 128, 192, or 256 bits.","pos":[171,219],"source":"       The `rgbkey` size must be 128, 192, or 256 bits."}]},{"pos":[6772,6870],"content":"The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.","pos":[0,98],"nodes":[{"content":"The secret key to be used for the symmetric algorithm.","pos":[0,54]},{"content":"The key size must be 128, 192, or 256 bits.","pos":[55,98]}]}]},{"pos":[6932,6978],"content":"The IV to be used for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IV to be used for the symmetric algorithm.","pos":[0,46]}]},{"pos":[7068,7156],"content":"A symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> decryptor object.","needQuote":true,"needEscape":true,"source":"A symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> decryptor object."},{"pos":[7348,7577],"content":"The <code>rgbKey</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <code>rgbIV</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,98],"source":"The <code>rgbKey</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbIV</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[105,213],"source":"       -or-       The <code>rgbIV</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[7727,8009],"content":"The value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*&gt; property is not <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is not <xref href=\"System.Security.Cryptography.CipherMode\"></xref>, <xref href=\"System.Security.Cryptography.CipherMode\"></xref>, or <xref href=\"System.Security.Cryptography.CipherMode\"></xref>."},{"pos":[8541,8803],"content":"Creates a symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> encryptor object with the specified &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id=\"p2\">*</bpt>&gt; and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id=\"p2\">*</ept>&gt;).","needQuote":true,"needEscape":true,"source":"Creates a symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> encryptor object with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*> and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)."},{"pos":[8816,9022],"content":"Use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.       The `rgbkey` size must be 128, 192, or 256 bits.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A&gt; overload with the same signature to decrypt the result of this method.","pos":[0,149],"source":"Use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method."},{"content":"The <ph id=\"ph1\">`rgbkey`</ph> size must be 128, 192, or 256 bits.","pos":[156,204],"source":"       The `rgbkey` size must be 128, 192, or 256 bits."}]},{"pos":[9651,9749],"content":"The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.","pos":[0,98],"nodes":[{"content":"The secret key to be used for the symmetric algorithm.","pos":[0,54]},{"content":"The key size must be 128, 192, or 256 bits.","pos":[55,98]}]}]},{"pos":[9811,9857],"content":"The IV to be used for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IV to be used for the symmetric algorithm.","pos":[0,46]}]},{"pos":[9947,10035],"content":"A symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> encryptor object.","needQuote":true,"needEscape":true,"source":"A symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> encryptor object."},{"pos":[10227,10456],"content":"The <code>rgbKey</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <code>rgbIV</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,98],"source":"The <code>rgbKey</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbIV</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[105,213],"source":"       -or-       The <code>rgbIV</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[10606,10888],"content":"The value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*&gt; property is not <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is not <xref href=\"System.Security.Cryptography.CipherMode\"></xref>, <xref href=\"System.Security.Cryptography.CipherMode\"></xref>, or <xref href=\"System.Security.Cryptography.CipherMode\"></xref>."},{"pos":[11298,11429],"content":"Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to be used for the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV*&gt;) to be used for the algorithm.","pos":[0,131],"source":"Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to be used for the algorithm."}]},{"pos":[11441,11504],"content":"Use this method to generate a random IV when none is specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this method to generate a random IV when none is specified.","pos":[0,63]}]},{"pos":[12410,12518],"content":"Generates a random <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*> to be used for the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key*&gt; to be used for the algorithm.","pos":[0,108],"source":"Generates a random <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*> to be used for the algorithm."}]},{"pos":[12530,12594],"content":"Use this method to generate a random key when none is specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this method to generate a random key when none is specified.","pos":[0,64]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RijndaelManaged\n  id: RijndaelManaged\n  children:\n  - System.Security.Cryptography.RijndaelManaged.#ctor\n  - System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.RijndaelManaged.GenerateIV\n  - System.Security.Cryptography.RijndaelManaged.GenerateKey\n  langs:\n  - csharp\n  name: RijndaelManaged\n  nameWithType: RijndaelManaged\n  fullName: System.Security.Cryptography.RijndaelManaged\n  type: Class\n  summary: Accesses the managed version of the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm. This class cannot be inherited.\n  remarks: \"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits. This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).  \\n  \\n The <xref:System.Security.Cryptography.Rijndael> algorithm is the predecessor of <xref:System.Security.Cryptography.Aes>. You should use the <xref:System.Security.Cryptography.Aes> class instead of RijndaelManaged. For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.\"\n  example:\n  - \"The following example demonstrates how to encrypt and decrypt sample data using the `RijndaelManaged` class.  \\n  \\n [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/t-system.security.crypto_90_1.cs)]\\n [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/t-system.security.crypto_90_1.cpp)]\\n [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_90_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class RijndaelManaged : System.Security.Cryptography.Rijndael\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.Rijndael\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.Rijndael.Create\n  - System.Security.Cryptography.Rijndael.Create(System.String)\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Key\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RijndaelManaged.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: RijndaelManaged()\n  nameWithType: RijndaelManaged.RijndaelManaged()\n  fullName: System.Security.Cryptography.RijndaelManaged.RijndaelManaged()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RijndaelManaged\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example creates a new instance of the `RijndaelManaged` class.  \\n  \\n [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/m-system.security.crypto_42_1.cs)]\\n [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/m-system.security.crypto_42_1.cpp)]\\n [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_42_1.vb)]\"\n  syntax:\n    content: public RijndaelManaged ();\n    parameters: []\n  overload: System.Security.Cryptography.RijndaelManaged.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This class is not compliant with the FIPS algorithm.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: RijndaelManaged.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> decryptor object with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*> and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>).\n  remarks: \"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> overload with the same signature.  \\n  \\n The `rgbkey` size must be 128, 192, or 256 bits.\"\n  example:\n  - \"The following code example demonstrates how to use the CreateDecryptor method to decrypt messages encoded with the same signature parameter.  \\n  \\n [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/3451bf93-e30a-44f1-a5c3-_1.cs)]\\n [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/3451bf93-e30a-44f1-a5c3-_1.cpp)]\\n [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/3451bf93-e30a-44f1-a5c3-_1.vb)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The IV to be used for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> decryptor object.\n  overload: System.Security.Cryptography.RijndaelManaged.CreateDecryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>rgbKey</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>rgbIV</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is not <xref href=\"System.Security.Cryptography.CipherMode\"></xref>, <xref href=\"System.Security.Cryptography.CipherMode\"></xref>, or <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: RijndaelManaged.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> encryptor object with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*> and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>).\n  remarks: \"Use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.  \\n  \\n The `rgbkey` size must be 128, 192, or 256 bits.\"\n  example:\n  - \"The following code examples demonstrates how to encrypt a message using the `CreateEncryptor` method.  \\n  \\n [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/f8d6d4d8-0f2d-4b73-9a84-_1.cs)]\\n [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/f8d6d4d8-0f2d-4b73-9a84-_1.cpp)]\\n [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/f8d6d4d8-0f2d-4b73-9a84-_1.vb)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The IV to be used for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> encryptor object.\n  overload: System.Security.Cryptography.RijndaelManaged.CreateEncryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>rgbKey</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>rgbIV</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is not <xref href=\"System.Security.Cryptography.CipherMode\"></xref>, <xref href=\"System.Security.Cryptography.CipherMode\"></xref>, or <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: RijndaelManaged.GenerateIV()\n  fullName: System.Security.Cryptography.RijndaelManaged.GenerateIV()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to be used for the algorithm.\n  remarks: Use this method to generate a random IV when none is specified.\n  example:\n  - >-\n    [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/m-system.security.crypto_19_1.cs)]\n     [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/m-system.security.crypto_19_1.cpp)]\n     [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_19_1.vb)]\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.RijndaelManaged.GenerateIV*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: RijndaelManaged.GenerateKey()\n  fullName: System.Security.Cryptography.RijndaelManaged.GenerateKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Generates a random <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*> to be used for the algorithm.\n  remarks: Use this method to generate a random key when none is specified.\n  example:\n  - >-\n    [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/m-system.security.crypto_60_1.cs)]\n     [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/m-system.security.crypto_60_1.cpp)]\n     [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_60_1.vb)]\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.RijndaelManaged.GenerateKey*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.Rijndael\n  isExternal: false\n  name: System.Security.Cryptography.Rijndael\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.RijndaelManaged.#ctor\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: RijndaelManaged()\n  nameWithType: RijndaelManaged.RijndaelManaged()\n  fullName: System.Security.Cryptography.RijndaelManaged.RijndaelManaged()\n- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: RijndaelManaged.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: RijndaelManaged.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: RijndaelManaged.GenerateIV()\n  fullName: System.Security.Cryptography.RijndaelManaged.GenerateIV()\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: RijndaelManaged.GenerateKey()\n  fullName: System.Security.Cryptography.RijndaelManaged.GenerateKey()\n- uid: System.Security.Cryptography.RijndaelManaged.#ctor*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: RijndaelManaged\n  nameWithType: RijndaelManaged.RijndaelManaged\n- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: RijndaelManaged.CreateDecryptor\n- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: RijndaelManaged.CreateEncryptor\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: GenerateIV\n  nameWithType: RijndaelManaged.GenerateIV\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: GenerateKey\n  nameWithType: RijndaelManaged.GenerateKey\n"}