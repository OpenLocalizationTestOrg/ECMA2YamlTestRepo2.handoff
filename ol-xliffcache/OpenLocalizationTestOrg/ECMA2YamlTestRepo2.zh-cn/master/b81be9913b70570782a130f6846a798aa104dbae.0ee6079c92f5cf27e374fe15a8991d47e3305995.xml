{"nodes":[{"pos":[504,568],"content":"Validates that an object is a derived class of a specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates that an object is a derived class of a specified type.","pos":[0,64]}]},{"pos":[581,1226],"content":"The SubclassTypeValidator class is used to ensure that an object meets specific criteria. The criteria for validation is established when an instance of the SubclassTypeValidator class is created.       The <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> method determines whether the type of the object being validated is in fact a <xref:System.Type>. The object being validated is passed as a parameter of the <xref:System.Configuration.SubclassTypeValidator.Validate%2A> method. This method first verifies that the object to validate is not `null`, and then verifies that the object is a derived class of the expected type.","needQuote":false,"needEscape":true,"nodes":[{"content":"The SubclassTypeValidator class is used to ensure that an object meets specific criteria.","pos":[0,89]},{"content":"The criteria for validation is established when an instance of the SubclassTypeValidator class is created.","pos":[90,196]},{"content":"The &lt;xref:System.Configuration.SubclassTypeValidator.CanValidate%2A&gt; method determines whether the type of the object being validated is in fact a &lt;xref:System.Type&gt;.","pos":[203,369],"source":"       The <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> method determines whether the type of the object being validated is in fact a <xref:System.Type>."},{"content":"The object being validated is passed as a parameter of the &lt;xref:System.Configuration.SubclassTypeValidator.Validate%2A&gt; method.","pos":[370,498],"source":" The object being validated is passed as a parameter of the <xref:System.Configuration.SubclassTypeValidator.Validate%2A> method."},{"content":"This method first verifies that the object to validate is not <ph id=\"ph1\">`null`</ph>, and then verifies that the object is a derived class of the expected type.","pos":[499,643],"source":" This method first verifies that the object to validate is not `null`, and then verifies that the object is a derived class of the expected type."}]},{"pos":[1951,2055],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.SubclassTypeValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.SubclassTypeValidator\"></xref> class."},{"pos":[2067,2133],"content":"The criteria for validation is based on the <ph id=\"ph1\">`baseClass`</ph> parameter.","needQuote":true,"needEscape":true,"source":"The criteria for validation is based on the `baseClass` parameter."},{"pos":[2283,2318],"content":"The base class to validate against.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base class to validate against.","pos":[0,35]}]},{"pos":[2497,2584],"content":"<ph id=\"ph1\">&lt;code&gt;baseClass&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>baseClass</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3041,3101],"content":"Determines whether an object can be validated based on type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether an object can be validated based on type.","pos":[0,60]}]},{"pos":[3113,3226],"content":"The CanValidate method determines whether the type of the object being validated is in fact a <xref:System.Type>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CanValidate method determines whether the type of the object being validated is in fact a &lt;xref:System.Type&gt;.","pos":[0,113],"source":"The CanValidate method determines whether the type of the object being validated is in fact a <xref:System.Type>."}]},{"pos":[3370,3386],"content":"The object type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object type.","pos":[0,16]}]},{"pos":[3445,3653],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter matches a type that can be validated; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>type</code> parameter matches a type that can be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4190,4241],"content":"Determines whether the value of an object is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the value of an object is valid.","pos":[0,51]}]},{"pos":[4253,4567],"content":"When an instance of the <xref:System.Configuration.SubclassTypeValidator> class is created, the base class is provided and used as evaluation criteria. The object to validate is passed as a parameter of the Validate method. This method performs the validation check between the base class and the parameter object.","needQuote":true,"needEscape":true,"nodes":[{"content":"When an instance of the <xref:System.Configuration.SubclassTypeValidator> class is created, the base class is provided and used as evaluation criteria. The object to validate is passed as a parameter of the Validate method. This method performs the validation check between the base class and the parameter object.","pos":[0,314],"nodes":[{"content":"When an instance of the &lt;xref:System.Configuration.SubclassTypeValidator&gt; class is created, the base class is provided and used as evaluation criteria.","pos":[0,151],"source":"When an instance of the <xref:System.Configuration.SubclassTypeValidator> class is created, the base class is provided and used as evaluation criteria."},{"content":"The object to validate is passed as a parameter of the Validate method.","pos":[152,223]},{"content":"This method performs the validation check between the base class and the parameter object.","pos":[224,314]}]}]},{"pos":[4714,4731],"content":"The object value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object value.","pos":[0,17]}]},{"pos":[4905,5033],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not of a <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> that can be derived from <ph id=\"ph3\">&lt;code&gt;baseClass&lt;/code&gt;</ph> as defined in the constructor.","needQuote":true,"needEscape":true,"source":"<code>value</code> is not of a <xref:System.Type> that can be derived from <code>baseClass</code> as defined in the constructor."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.SubclassTypeValidator\n  id: SubclassTypeValidator\n  children:\n  - System.Configuration.SubclassTypeValidator.#ctor(System.Type)\n  - System.Configuration.SubclassTypeValidator.CanValidate(System.Type)\n  - System.Configuration.SubclassTypeValidator.Validate(System.Object)\n  langs:\n  - csharp\n  name: SubclassTypeValidator\n  nameWithType: SubclassTypeValidator\n  fullName: System.Configuration.SubclassTypeValidator\n  type: Class\n  summary: Validates that an object is a derived class of a specified type.\n  remarks: \"The SubclassTypeValidator class is used to ensure that an object meets specific criteria. The criteria for validation is established when an instance of the SubclassTypeValidator class is created.  \\n  \\n The <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> method determines whether the type of the object being validated is in fact a <xref:System.Type>. The object being validated is passed as a parameter of the <xref:System.Configuration.SubclassTypeValidator.Validate%2A> method. This method first verifies that the object to validate is not `null`, and then verifies that the object is a derived class of the expected type.\"\n  syntax:\n    content: 'public sealed class SubclassTypeValidator : System.Configuration.ConfigurationValidatorBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationValidatorBase\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.SubclassTypeValidator.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Configuration.SubclassTypeValidator\n  langs:\n  - csharp\n  name: SubclassTypeValidator(Type)\n  nameWithType: SubclassTypeValidator.SubclassTypeValidator(Type)\n  fullName: System.Configuration.SubclassTypeValidator.SubclassTypeValidator(Type)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.SubclassTypeValidator\"></xref> class.\n  remarks: The criteria for validation is based on the `baseClass` parameter.\n  syntax:\n    content: public SubclassTypeValidator (Type baseClass);\n    parameters:\n    - id: baseClass\n      type: System.Type\n      description: The base class to validate against.\n  overload: System.Configuration.SubclassTypeValidator.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>baseClass</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Configuration.SubclassTypeValidator.CanValidate(System.Type)\n  id: CanValidate(System.Type)\n  parent: System.Configuration.SubclassTypeValidator\n  langs:\n  - csharp\n  name: CanValidate(Type)\n  nameWithType: SubclassTypeValidator.CanValidate(Type)\n  fullName: System.Configuration.SubclassTypeValidator.CanValidate(Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether an object can be validated based on type.\n  remarks: The CanValidate method determines whether the type of the object being validated is in fact a <xref:System.Type>.\n  syntax:\n    content: public override bool CanValidate (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The object type.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>type</code> parameter matches a type that can be validated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.SubclassTypeValidator.CanValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SubclassTypeValidator.Validate(System.Object)\n  id: Validate(System.Object)\n  parent: System.Configuration.SubclassTypeValidator\n  langs:\n  - csharp\n  name: Validate(Object)\n  nameWithType: SubclassTypeValidator.Validate(Object)\n  fullName: System.Configuration.SubclassTypeValidator.Validate(Object)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether the value of an object is valid.\n  remarks: When an instance of the <xref:System.Configuration.SubclassTypeValidator> class is created, the base class is provided and used as evaluation criteria. The object to validate is passed as a parameter of the Validate method. This method performs the validation check between the base class and the parameter object.\n  syntax:\n    content: public override void Validate (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object value.\n  overload: System.Configuration.SubclassTypeValidator.Validate*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not of a <xref:System.Type> that can be derived from <code>baseClass</code> as defined in the constructor.\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationValidatorBase\n  isExternal: false\n  name: System.Configuration.ConfigurationValidatorBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Configuration.SubclassTypeValidator.#ctor(System.Type)\n  parent: System.Configuration.SubclassTypeValidator\n  isExternal: false\n  name: SubclassTypeValidator(Type)\n  nameWithType: SubclassTypeValidator.SubclassTypeValidator(Type)\n  fullName: System.Configuration.SubclassTypeValidator.SubclassTypeValidator(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.SubclassTypeValidator.CanValidate(System.Type)\n  parent: System.Configuration.SubclassTypeValidator\n  isExternal: false\n  name: CanValidate(Type)\n  nameWithType: SubclassTypeValidator.CanValidate(Type)\n  fullName: System.Configuration.SubclassTypeValidator.CanValidate(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.SubclassTypeValidator.Validate(System.Object)\n  parent: System.Configuration.SubclassTypeValidator\n  isExternal: false\n  name: Validate(Object)\n  nameWithType: SubclassTypeValidator.Validate(Object)\n  fullName: System.Configuration.SubclassTypeValidator.Validate(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.SubclassTypeValidator.#ctor*\n  parent: System.Configuration.SubclassTypeValidator\n  isExternal: false\n  name: SubclassTypeValidator\n  nameWithType: SubclassTypeValidator.SubclassTypeValidator\n- uid: System.Configuration.SubclassTypeValidator.CanValidate*\n  parent: System.Configuration.SubclassTypeValidator\n  isExternal: false\n  name: CanValidate\n  nameWithType: SubclassTypeValidator.CanValidate\n- uid: System.Configuration.SubclassTypeValidator.Validate*\n  parent: System.Configuration.SubclassTypeValidator\n  isExternal: false\n  name: Validate\n  nameWithType: SubclassTypeValidator.Validate\n"}