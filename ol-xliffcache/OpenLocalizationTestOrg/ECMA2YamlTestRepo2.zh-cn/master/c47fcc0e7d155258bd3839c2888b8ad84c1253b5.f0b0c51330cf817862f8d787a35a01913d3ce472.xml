{"nodes":[{"pos":[475,586],"content":"Represents an event setter in a style. Event setters invoke the specified event handlers in response to events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an event setter in a style. Event setters invoke the specified event handlers in response to events.","pos":[0,111],"nodes":[{"content":"Represents an event setter in a style.","pos":[0,38]},{"content":"Event setters invoke the specified event handlers in response to events.","pos":[39,111]}]}]},{"pos":[599,2626],"content":"Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the <xref:System.Windows.Style> rather than requiring you to attach instance handlers to each individual element. Only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> support EventSetter objects.       You can only declare event setters for events that are routed events. You can declare event setters for routed events with a direct routing strategy, bubbling events, or tunneling events.       Instances of the EventSetter class are usually created through [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], as an object element within a style defined through [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]. An EventSetter might also be instantiated from code.       Event setters cannot be used in a style that is contained in a theme resource dictionary. This is because a theme resource dictionary at run time is often loose [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] files, and does not have any scope defined where accompanying code-behind that defines the handlers can exist.       Handlers attached through event setters are invoked after any class handlers for an event, and also after any instance handlers. As a result, if a class handler or instance handler marks an event handled in its arguments, then the handler declared by an event setter is not invoked, unless the event setter specifically sets <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`.       Event setters may also come from <xref:System.Windows.Style.BasedOn%2A> styles. The event setter handlers from the style specified as <xref:System.Windows.Style.BasedOn%2A> will be invoked after the handlers on the immediate style.       Note that only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports EventSetter objects. Triggers (<xref:System.Windows.TriggerBase> and derived classes) do not support EventSetter.","needQuote":false,"needEscape":true,"nodes":[{"content":"Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the &lt;xref:System.Windows.Style&gt; rather than requiring you to attach instance handlers to each individual element.","pos":[0,236],"source":"Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the <xref:System.Windows.Style> rather than requiring you to attach instance handlers to each individual element."},{"content":"Only &lt;xref:System.Windows.Style.Setters%2A?displayProperty=fullName&gt; support EventSetter objects.","pos":[237,334],"source":" Only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> support EventSetter objects."},{"content":"You can only declare event setters for events that are routed events.","pos":[341,410]},{"content":"You can declare event setters for routed events with a direct routing strategy, bubbling events, or tunneling events.","pos":[411,528]},{"content":"Instances of the EventSetter class are usually created through <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, as an object element within a style defined through <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[535,781],"source":"       Instances of the EventSetter class are usually created through [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], as an object element within a style defined through [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."},{"content":"An EventSetter might also be instantiated from code.","pos":[782,834]},{"content":"Event setters cannot be used in a style that is contained in a theme resource dictionary.","pos":[841,930]},{"content":"This is because a theme resource dictionary at run time is often loose <ph id=\"ph1\">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> files, and does not have any scope defined where accompanying code-behind that defines the handlers can exist.","pos":[931,1176],"source":" This is because a theme resource dictionary at run time is often loose [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] files, and does not have any scope defined where accompanying code-behind that defines the handlers can exist."},{"content":"Handlers attached through event setters are invoked after any class handlers for an event, and also after any instance handlers.","pos":[1183,1311]},{"content":"As a result, if a class handler or instance handler marks an event handled in its arguments, then the handler declared by an event setter is not invoked, unless the event setter specifically sets &lt;xref:System.Windows.EventSetter.HandledEventsToo%2A&gt; <ph id=\"ph1\">`true`</ph>.","pos":[1312,1569],"source":" As a result, if a class handler or instance handler marks an event handled in its arguments, then the handler declared by an event setter is not invoked, unless the event setter specifically sets <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`."},{"content":"Event setters may also come from &lt;xref:System.Windows.Style.BasedOn%2A&gt; styles.","pos":[1576,1655],"source":"       Event setters may also come from <xref:System.Windows.Style.BasedOn%2A> styles."},{"content":"The event setter handlers from the style specified as &lt;xref:System.Windows.Style.BasedOn%2A&gt; will be invoked after the handlers on the immediate style.","pos":[1656,1807],"source":" The event setter handlers from the style specified as <xref:System.Windows.Style.BasedOn%2A> will be invoked after the handlers on the immediate style."},{"content":"Note that only &lt;xref:System.Windows.Style.Setters%2A?displayProperty=fullName&gt; supports EventSetter objects.","pos":[1814,1922],"source":"       Note that only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports EventSetter objects."},{"content":"Triggers (&lt;xref:System.Windows.TriggerBase&gt; and derived classes) do not support EventSetter.","pos":[1923,2015],"source":" Triggers (<xref:System.Windows.TriggerBase> and derived classes) do not support EventSetter."}]},{"pos":[3735,3823],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.EventSetter\"></xref> class."},{"pos":[4450,4587],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the provided event and handler parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.EventSetter\"></xref> class, using the provided event and handler parameters."},{"pos":[4599,4804],"content":"This signature is typically used if you creating an <xref:System.Windows.EventSetter> in code, or in code-behind to create an <xref:System.Windows.EventSetter> that augments an existing style prior to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"This signature is typically used if you creating an &lt;xref:System.Windows.EventSetter&gt; in code, or in code-behind to create an &lt;xref:System.Windows.EventSetter&gt; that augments an existing style prior to use.","pos":[0,205],"source":"This signature is typically used if you creating an <xref:System.Windows.EventSetter> in code, or in code-behind to create an <xref:System.Windows.EventSetter> that augments an existing style prior to use."}]},{"pos":[5003,5100],"content":"The particular routed event that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> responds to.","needQuote":true,"needEscape":true,"source":"The particular routed event that the <xref href=\"System.Windows.EventSetter\"></xref> responds to."},{"pos":[5166,5203],"content":"The handler to assign in this setter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The handler to assign in this setter.","pos":[0,37]}]},{"pos":[5588,5699],"content":"Gets or sets the particular routed event that this <bpt id=\"p1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> responds to.","needQuote":true,"needEscape":true,"source":"Gets or sets the particular routed event that this <xref href=\"System.Windows.EventSetter\"></xref> responds to."},{"pos":[5711,6081],"content":"You cannot set this property once the style containing the <xref:System.Windows.EventSetter> is in use and thus is sealed. If you set this property in code and there is the possibility that the style is in use, check the value of the <xref:System.Windows.SetterBase.IsSealed%2A> property on the <xref:System.Windows.EventSetter> instance before you attempt to set Event.","needQuote":true,"needEscape":true,"nodes":[{"content":"You cannot set this property once the style containing the <xref:System.Windows.EventSetter> is in use and thus is sealed. If you set this property in code and there is the possibility that the style is in use, check the value of the <xref:System.Windows.SetterBase.IsSealed%2A> property on the <xref:System.Windows.EventSetter> instance before you attempt to set Event.","pos":[0,370],"nodes":[{"content":"You cannot set this property once the style containing the &lt;xref:System.Windows.EventSetter&gt; is in use and thus is sealed.","pos":[0,122],"source":"You cannot set this property once the style containing the <xref:System.Windows.EventSetter> is in use and thus is sealed."},{"content":"If you set this property in code and there is the possibility that the style is in use, check the value of the &lt;xref:System.Windows.SetterBase.IsSealed%2A&gt; property on the &lt;xref:System.Windows.EventSetter&gt; instance before you attempt to set Event.","pos":[123,370],"source":" If you set this property in code and there is the possibility that the style is in use, check the value of the <xref:System.Windows.SetterBase.IsSealed%2A> property on the <xref:System.Windows.EventSetter> instance before you attempt to set Event."}]}]},{"pos":[6459,6500],"content":"The identifier field of the routed event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier field of the routed event.","pos":[0,41]}]},{"pos":[6671,6763],"content":"Attempted to set this property on a sealed <bpt id=\"p1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> .","needQuote":true,"needEscape":true,"source":"Attempted to set this property on a sealed <xref href=\"System.Windows.EventSetter\"></xref> ."},{"pos":[7140,7299],"content":"Gets or sets a value that determines whether the handler assigned to the setter should still be invoked, even if the event is marked handled in its event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that determines whether the handler assigned to the setter should still be invoked, even if the event is marked handled in its event data.","pos":[0,159]}]},{"pos":[7312,8287],"content":"> [!IMPORTANT] >  Setting the <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> when assigning defined event handlers for instances directly to named events in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] attribute syntax. Although setting this value in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] does not generate any compile-time errors, the resulting [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] will produce a run-time exception when the style is used.      <a name=\"xamlTextUsage_HandledEventsToo\"></a>    ## XAML Text Usage    This property should not be used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]. See Remarks.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  Setting the &lt;xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A&gt; characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify &lt;xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A&gt; when assigning defined event handlers for instances directly to named events in <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> attribute syntax.","pos":[0,498],"source":"> [!IMPORTANT] >  Setting the <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> when assigning defined event handlers for instances directly to named events in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] attribute syntax."},{"content":"Although setting this value in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> does not generate any compile-time errors, the resulting <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> will produce a run-time exception when the style is used.","pos":[499,776],"source":" Although setting this value in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] does not generate any compile-time errors, the resulting [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] will produce a run-time exception when the style is used."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_HandledEventsToo\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This property should not be used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[782,955],"source":"<a name=\"xamlTextUsage_HandledEventsToo\"></a>    ## XAML Text Usage    This property should not be used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."},{"content":"See Remarks.","pos":[956,968]}]},{"pos":[8413,8588],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler should still be invoked; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler should still be invoked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8994,9067],"content":"Gets or sets the reference to a handler for a routed event in the setter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the reference to a handler for a routed event in the setter.","pos":[0,73]}]},{"pos":[9433,9531],"content":"Reference to the handler that is attached by this <bpt id=\"p1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Reference to the handler that is attached by this <xref href=\"System.Windows.EventSetter\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.EventSetter\n  id: EventSetter\n  children:\n  - System.Windows.EventSetter.#ctor\n  - System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.EventSetter.Event\n  - System.Windows.EventSetter.HandledEventsToo\n  - System.Windows.EventSetter.Handler\n  langs:\n  - csharp\n  name: EventSetter\n  nameWithType: EventSetter\n  fullName: System.Windows.EventSetter\n  type: Class\n  summary: Represents an event setter in a style. Event setters invoke the specified event handlers in response to events.\n  remarks: \"Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the <xref:System.Windows.Style> rather than requiring you to attach instance handlers to each individual element. Only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> support EventSetter objects.  \\n  \\n You can only declare event setters for events that are routed events. You can declare event setters for routed events with a direct routing strategy, bubbling events, or tunneling events.  \\n  \\n Instances of the EventSetter class are usually created through [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], as an object element within a style defined through [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]. An EventSetter might also be instantiated from code.  \\n  \\n Event setters cannot be used in a style that is contained in a theme resource dictionary. This is because a theme resource dictionary at run time is often loose [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] files, and does not have any scope defined where accompanying code-behind that defines the handlers can exist.  \\n  \\n Handlers attached through event setters are invoked after any class handlers for an event, and also after any instance handlers. As a result, if a class handler or instance handler marks an event handled in its arguments, then the handler declared by an event setter is not invoked, unless the event setter specifically sets <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`.  \\n  \\n Event setters may also come from <xref:System.Windows.Style.BasedOn%2A> styles. The event setter handlers from the style specified as <xref:System.Windows.Style.BasedOn%2A> will be invoked after the handlers on the immediate style.  \\n  \\n Note that only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports EventSetter objects. Triggers (<xref:System.Windows.TriggerBase> and derived classes) do not support EventSetter.\"\n  example:\n  - \"The following example establishes a single EventSetter within a page-level style.  \\n  \\n [!code-xml[EventOvwSupport#XAML2](~/add/codesnippet/xaml/EventOvwSupport/page2.xaml#xaml2)]  \\n  \\n The following shows the example event handlers:  \\n  \\n [!code-cs[EventOvwSupport#EventSetterRef](~/add/codesnippet/csharp/EventOvwSupport/page2.xaml.cs#eventsetterref)]\\n [!code-vb[EventOvwSupport#EventSetterRef](~/add/codesnippet/visualbasic/eventovwsupport/page2.xaml.vb#eventsetterref)]\"\n  syntax:\n    content: 'public class EventSetter : System.Windows.SetterBase'\n  inheritance:\n  - System.Object\n  - System.Windows.SetterBase\n  implements: []\n  inheritedMembers:\n  - System.Windows.SetterBase.CheckSealed\n  - System.Windows.SetterBase.IsSealed\n  platform:\n  - net462\n- uid: System.Windows.EventSetter.#ctor\n  id: '#ctor'\n  parent: System.Windows.EventSetter\n  langs:\n  - csharp\n  name: EventSetter()\n  nameWithType: EventSetter.EventSetter()\n  fullName: System.Windows.EventSetter.EventSetter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.EventSetter\"></xref> class.\n  syntax:\n    content: public EventSetter ();\n    parameters: []\n  overload: System.Windows.EventSetter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)\n  id: '#ctor(System.Windows.RoutedEvent,System.Delegate)'\n  parent: System.Windows.EventSetter\n  langs:\n  - csharp\n  name: EventSetter(RoutedEvent,Delegate)\n  nameWithType: EventSetter.EventSetter(RoutedEvent,Delegate)\n  fullName: System.Windows.EventSetter.EventSetter(RoutedEvent,Delegate)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.EventSetter\"></xref> class, using the provided event and handler parameters.\n  remarks: This signature is typically used if you creating an <xref:System.Windows.EventSetter> in code, or in code-behind to create an <xref:System.Windows.EventSetter> that augments an existing style prior to use.\n  syntax:\n    content: public EventSetter (System.Windows.RoutedEvent routedEvent, Delegate handler);\n    parameters:\n    - id: routedEvent\n      type: System.Windows.RoutedEvent\n      description: The particular routed event that the <xref href=\"System.Windows.EventSetter\"></xref> responds to.\n    - id: handler\n      type: System.Delegate\n      description: The handler to assign in this setter.\n  overload: System.Windows.EventSetter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.EventSetter.Event\n  id: Event\n  parent: System.Windows.EventSetter\n  langs:\n  - csharp\n  name: Event\n  nameWithType: EventSetter.Event\n  fullName: System.Windows.EventSetter.Event\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the particular routed event that this <xref href=\"System.Windows.EventSetter\"></xref> responds to.\n  remarks: You cannot set this property once the style containing the <xref:System.Windows.EventSetter> is in use and thus is sealed. If you set this property in code and there is the possibility that the style is in use, check the value of the <xref:System.Windows.SetterBase.IsSealed%2A> property on the <xref:System.Windows.EventSetter> instance before you attempt to set Event.\n  example:\n  - \"The following example sets the Event property as part of an <xref:System.Windows.EventSetter> in a markup style.  \\n  \\n [!code-xml[EventOvwSupport#XAML2](~/add/codesnippet/xaml/EventOvwSupport/page2.xaml#xaml2)]\"\n  syntax:\n    content: public System.Windows.RoutedEvent Event { get; set; }\n    return:\n      type: System.Windows.RoutedEvent\n      description: The identifier field of the routed event.\n  overload: System.Windows.EventSetter.Event*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Attempted to set this property on a sealed <xref href=\"System.Windows.EventSetter\"></xref> .\n  platform:\n  - net462\n- uid: System.Windows.EventSetter.HandledEventsToo\n  id: HandledEventsToo\n  parent: System.Windows.EventSetter\n  langs:\n  - csharp\n  name: HandledEventsToo\n  nameWithType: EventSetter.HandledEventsToo\n  fullName: System.Windows.EventSetter.HandledEventsToo\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets a value that determines whether the handler assigned to the setter should still be invoked, even if the event is marked handled in its event data.\n  remarks: \"> [!IMPORTANT]\\n>  Setting the <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> when assigning defined event handlers for instances directly to named events in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] attribute syntax. Although setting this value in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] does not generate any compile-time errors, the resulting [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] will produce a run-time exception when the style is used.  \\n  \\n<a name=\\\"xamlTextUsage_HandledEventsToo\\\"></a>   \\n## XAML Text Usage  \\n This property should not be used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]. See Remarks.\"\n  syntax:\n    content: public bool HandledEventsToo { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler should still be invoked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.EventSetter.HandledEventsToo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.EventSetter.Handler\n  id: Handler\n  parent: System.Windows.EventSetter\n  langs:\n  - csharp\n  name: Handler\n  nameWithType: EventSetter.Handler\n  fullName: System.Windows.EventSetter.Handler\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the reference to a handler for a routed event in the setter.\n  remarks: ''\n  example:\n  - \"The following example sets the Handler property as part of a <xref:System.Windows.EventSetter> in a markup style.  \\n  \\n [!code-xml[EventOvwSupport#XAML2](~/add/codesnippet/xaml/EventOvwSupport/page2.xaml#xaml2)]\"\n  syntax:\n    content: public Delegate Handler { get; set; }\n    return:\n      type: System.Delegate\n      description: Reference to the handler that is attached by this <xref href=\"System.Windows.EventSetter\"></xref>.\n  overload: System.Windows.EventSetter.Handler*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.SetterBase\n  isExternal: false\n  name: System.Windows.SetterBase\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Windows.EventSetter.#ctor\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: EventSetter()\n  nameWithType: EventSetter.EventSetter()\n  fullName: System.Windows.EventSetter.EventSetter()\n- uid: System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: EventSetter(RoutedEvent,Delegate)\n  nameWithType: EventSetter.EventSetter(RoutedEvent,Delegate)\n  fullName: System.Windows.EventSetter.EventSetter(RoutedEvent,Delegate)\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Windows.EventSetter.Event\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: Event\n  nameWithType: EventSetter.Event\n  fullName: System.Windows.EventSetter.Event\n- uid: System.Windows.EventSetter.HandledEventsToo\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: HandledEventsToo\n  nameWithType: EventSetter.HandledEventsToo\n  fullName: System.Windows.EventSetter.HandledEventsToo\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.EventSetter.Handler\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: Handler\n  nameWithType: EventSetter.Handler\n  fullName: System.Windows.EventSetter.Handler\n- uid: System.Windows.EventSetter.#ctor*\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: EventSetter\n  nameWithType: EventSetter.EventSetter\n- uid: System.Windows.EventSetter.Event*\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: Event\n  nameWithType: EventSetter.Event\n- uid: System.Windows.EventSetter.HandledEventsToo*\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: HandledEventsToo\n  nameWithType: EventSetter.HandledEventsToo\n- uid: System.Windows.EventSetter.Handler*\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: Handler\n  nameWithType: EventSetter.Handler\n"}