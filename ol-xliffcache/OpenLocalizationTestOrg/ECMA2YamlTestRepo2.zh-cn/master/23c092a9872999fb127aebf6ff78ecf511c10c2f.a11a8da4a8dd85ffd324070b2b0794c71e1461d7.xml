{"nodes":[{"pos":[2006,2097],"content":"Arranges child elements into a single line that can be oriented horizontally or vertically.","needQuote":true,"needEscape":true,"nodes":[{"content":"Arranges child elements into a single line that can be oriented horizontally or vertically.","pos":[0,91]}]},{"pos":[2110,3222],"content":"A StackPanel contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property.       The default value is stretch for both <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> of content that is contained in a StackPanel.       Panel elements do not receive focus by default. To compel a panel element to receive focus, set the <xref:System.Windows.UIElement.Focusable%2A> property to `true`.       StackPanel implements the <xref:System.Windows.Controls.Primitives.IScrollInfo> interface to support logical scrolling. Logical scrolling is used to scroll to the next element in the logical tree. This is in contrast to physical scrolling, which scrolls content by a defined physical increment in a given direction. If you require physical scrolling instead of logical scrolling, wrap the host StackPanel element in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.","needQuote":false,"needEscape":true,"nodes":[{"content":"A StackPanel contains a collection of &lt;xref:System.Windows.UIElement&gt; objects, which are in the &lt;xref:System.Windows.Controls.Panel.Children%2A&gt; property.","pos":[0,154],"source":"A StackPanel contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property."},{"content":"The default value is stretch for both &lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt; and &lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt; of content that is contained in a StackPanel.","pos":[161,370],"source":"       The default value is stretch for both <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> of content that is contained in a StackPanel."},{"content":"Panel elements do not receive focus by default.","pos":[377,424]},{"content":"To compel a panel element to receive focus, set the &lt;xref:System.Windows.UIElement.Focusable%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[425,541],"source":" To compel a panel element to receive focus, set the <xref:System.Windows.UIElement.Focusable%2A> property to `true`."},{"content":"StackPanel implements the &lt;xref:System.Windows.Controls.Primitives.IScrollInfo&gt; interface to support logical scrolling.","pos":[548,667],"source":"       StackPanel implements the <xref:System.Windows.Controls.Primitives.IScrollInfo> interface to support logical scrolling."},{"content":"Logical scrolling is used to scroll to the next element in the logical tree.","pos":[668,744]},{"content":"This is in contrast to physical scrolling, which scrolls content by a defined physical increment in a given direction.","pos":[745,863]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the host StackPanel element in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[864,1106],"source":" If you require physical scrolling instead of logical scrolling, wrap the host StackPanel element in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."}]},{"pos":[39858,39954],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.StackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.StackPanel\"></xref> class."},{"pos":[40551,40641],"content":"Arranges the content of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.StackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Arranges the content of a <xref href=\"System.Windows.Controls.StackPanel\"></xref> element."},{"pos":[40844,40948],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that this element should use to arrange its child elements.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Size\"></xref> that this element should use to arrange its child elements."},{"pos":[41012,41186],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the arranged size of this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.StackPanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element and its child elements.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Size\"></xref> that represents the arranged size of this <xref href=\"System.Windows.Controls.StackPanel\"></xref> element and its child elements."},{"pos":[41701,41842],"content":"Gets or sets a value that indicates whether a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.StackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can scroll in the horizontal dimension.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether a <xref href=\"System.Windows.Controls.StackPanel\"></xref> can scroll in the horizontal dimension."},{"pos":[41855,42328],"content":"This property is not intended to be used in your code. It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>). Setting this property has no effect.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is not intended to be used in your code.","pos":[0,54]},{"content":"It is exposed publicly to fulfill an interface contract (&lt;xref:System.Windows.Controls.Primitives.IScrollInfo&gt;).","pos":[55,167],"source":" It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>)."},{"content":"Setting this property has no effect.","pos":[168,204]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[211,471],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."}]},{"pos":[42459,42645],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if content can scroll in the horizontal dimension; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the horizontal dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43156,43245],"content":"Gets or sets a value that indicates whether content can scroll in the vertical dimension.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether content can scroll in the vertical dimension.","pos":[0,89]}]},{"pos":[43258,43728],"content":"This property is not intended for use in your code. It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>). Setting this property has no effect.       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is not intended for use in your code.","pos":[0,51]},{"content":"It is exposed publicly to fulfill an interface contract (&lt;xref:System.Windows.Controls.Primitives.IScrollInfo&gt;).","pos":[52,164],"source":" It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>)."},{"content":"Setting this property has no effect.","pos":[165,201]},{"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[208,468],"source":"       If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."}]},{"pos":[43857,44126],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the vertical dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if content can scroll in the vertical dimension; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,184],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the vertical dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[185,269],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[44600,44659],"content":"Gets a value that contains the vertical size of the extent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the vertical size of the extent.","pos":[0,59]}]},{"pos":[44671,44732],"content":"The returned value is described in Device Independent Pixels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The returned value is described in Device Independent Pixels.","pos":[0,61]}]},{"pos":[44849,44948],"content":"The <xref:System.Double> that represents the vertical size of the extent. The default value is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Double> that represents the vertical size of the extent. The default value is 0.0.","pos":[0,99],"nodes":[{"content":"The &lt;xref:System.Double&gt; that represents the vertical size of the extent.","pos":[0,73],"source":"The <xref:System.Double> that represents the vertical size of the extent."},{"content":"The default value is 0.0.","pos":[74,99]}]}]},{"pos":[45410,45471],"content":"Gets a value that contains the horizontal size of the extent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the horizontal size of the extent.","pos":[0,61]}]},{"pos":[45483,45544],"content":"The returned value is described in Device Independent Pixels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The returned value is described in Device Independent Pixels.","pos":[0,61]}]},{"pos":[45660,45757],"content":"<xref:System.Double> that represents the horizontal size of the extent. The default value is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Double> that represents the horizontal size of the extent. The default value is 0.0.","pos":[0,97],"nodes":[{"content":"&lt;xref:System.Double&gt; that represents the horizontal size of the extent.","pos":[0,71],"source":"<xref:System.Double> that represents the horizontal size of the extent."},{"content":"The default value is 0.0.","pos":[72,97]}]}]},{"pos":[46268,46399],"content":"Gets a value that indicates if this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.StackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has vertical or horizontal orientation.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates if this <xref href=\"System.Windows.Controls.StackPanel\"></xref> has vertical or horizontal orientation."},{"pos":[46411,46551],"content":"This property always returns <ph id=\"ph1\">`true`</ph> because a &lt;xref:System.Windows.Controls.StackPanel&gt; must have either vertical or horizontal orientation.","needQuote":true,"needEscape":true,"source":"This property always returns `true` because a <xref:System.Windows.Controls.StackPanel> must have either vertical or horizontal orientation."},{"pos":[46688,46778],"content":"This property always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[47274,47347],"content":"Gets a value that contains the horizontal offset of the scrolled content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the horizontal offset of the scrolled content.","pos":[0,73]}]},{"pos":[47359,47420],"content":"The returned value is described in Device Independent Pixels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The returned value is described in Device Independent Pixels.","pos":[0,61]}]},{"pos":[47541,47654],"content":"The <xref:System.Double> that represents the horizontal offset of the scrolled content. The default value is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Double> that represents the horizontal offset of the scrolled content. The default value is 0.0.","pos":[0,113],"nodes":[{"content":"The &lt;xref:System.Double&gt; that represents the horizontal offset of the scrolled content.","pos":[0,87],"source":"The <xref:System.Double> that represents the horizontal offset of the scrolled content."},{"content":"The default value is 0.0.","pos":[88,113]}]}]},{"pos":[48109,48154],"content":"Scrolls content downward by one logical unit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content downward by one logical unit.","pos":[0,45]}]},{"pos":[48166,48426],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[48940,48988],"content":"Scrolls content by one logical unit to the left.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content by one logical unit to the left.","pos":[0,48]}]},{"pos":[49000,49260],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[49779,49828],"content":"Scrolls content by one logical unit to the right.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content by one logical unit to the right.","pos":[0,49]}]},{"pos":[49840,50100],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[50606,50649],"content":"Scrolls content by one logical unit upward.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content by one logical unit upward.","pos":[0,43]}]},{"pos":[50661,50921],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[51477,51630],"content":"Gets a value that represents the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.StackPanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that represents the <xref href=\"System.Windows.Controls.Orientation\"></xref> of the <xref href=\"System.Windows.Controls.StackPanel\"></xref>."},{"pos":[51816,51882],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Controls.Orientation\"></xref> value."},{"pos":[52485,52604],"content":"Scrolls to the specified coordinates and makes that part of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> visible.","needQuote":true,"needEscape":true,"source":"Scrolls to the specified coordinates and makes that part of a <xref href=\"System.Windows.Media.Visual\"></xref> visible."},{"pos":[52828,52902],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that becomes visible.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> that becomes visible."},{"pos":[52974,53068],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents coordinate space within a visual.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Rect\"></xref> that represents coordinate space within a visual."},{"pos":[53132,53220],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Rect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the coordinate space that is made visible.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Rect\"></xref> in the coordinate space that is made visible."},{"pos":[53759,53957],"content":"Measures the child elements of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.StackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in anticipation of arranging them during the &lt;xref:System.Windows.Controls.StackPanel.ArrangeOverride*&gt; pass.","needQuote":true,"needEscape":true,"source":"Measures the child elements of a <xref href=\"System.Windows.Controls.StackPanel\"></xref> in anticipation of arranging them during the <xref:System.Windows.Controls.StackPanel.ArrangeOverride*> pass."},{"pos":[54158,54242],"content":"An upper limit <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that should not be exceeded.","needQuote":true,"needEscape":true,"source":"An upper limit <xref href=\"System.Windows.Size\"></xref> that should not be exceeded."},{"pos":[54306,54399],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the desired size of the element.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Size\"></xref> that represents the desired size of the element."},{"pos":[54883,54967],"content":"Scrolls content logically downward in response to a click of the mouse wheel button.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically downward in response to a click of the mouse wheel button.","pos":[0,84]}]},{"pos":[54979,55239],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[55795,55882],"content":"Scrolls content logically to the left in response to a click of the mouse wheel button.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically to the left in response to a click of the mouse wheel button.","pos":[0,87]}]},{"pos":[55894,56154],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[56715,56803],"content":"Scrolls content logically to the right in response to a click of the mouse wheel button.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically to the right in response to a click of the mouse wheel button.","pos":[0,88]}]},{"pos":[56815,57075],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[57623,57705],"content":"Scrolls content logically upward in response to a click of the mouse wheel button.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically upward in response to a click of the mouse wheel button.","pos":[0,82]}]},{"pos":[57717,57977],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[58510,58596],"content":"Gets or sets a value that indicates the dimension by which child elements are stacked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates the dimension by which child elements are stacked.","pos":[0,86]}]},{"pos":[58609,58908],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.StackPanel.OrientationProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","needQuote":false,"needEscape":true,"source":"<a name=\"dependencyPropertyInfo_Orientation\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.StackPanel.OrientationProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"},{"pos":[59773,59851],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of child content.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Controls.Orientation\"></xref> of child content."},{"pos":[60349,60439],"content":"Identifies the <xref:System.Windows.Controls.StackPanel.Orientation*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.StackPanel.Orientation*&gt; dependency property.","pos":[0,90],"source":"Identifies the <xref:System.Windows.Controls.StackPanel.Orientation*> dependency property."}]},{"pos":[60618,60630],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[61020,61067],"content":"Scrolls content logically downward by one page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically downward by one page.","pos":[0,47]}]},{"pos":[61079,61339],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[61853,61903],"content":"Scrolls content logically to the left by one page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically to the left by one page.","pos":[0,50]}]},{"pos":[61915,62175],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[62694,62745],"content":"Scrolls content logically to the right by one page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically to the right by one page.","pos":[0,51]}]},{"pos":[62757,63017],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[63523,63568],"content":"Scrolls content logically upward by one page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls content logically upward by one page.","pos":[0,45]}]},{"pos":[63580,63840],"content":"If you require physical scrolling instead of logical scrolling, wrap the &lt;xref:System.Windows.Controls.StackPanel&gt; in a &lt;xref:System.Windows.Controls.ScrollViewer&gt; and set its &lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`."},{"pos":[64361,64509],"content":"Gets or sets a value that identifies the container that controls scrolling behavior in this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.StackPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that identifies the container that controls scrolling behavior in this <xref href=\"System.Windows.Controls.StackPanel\"></xref>."},{"pos":[64521,64734],"content":"If a <xref:System.Windows.Controls.ScrollViewer> control is the ScrollOwner, physical scrolling is enabled. If a <xref:System.Windows.Controls.StackPanel> is the ScrollOwner, scrolling is logical by child element.","needQuote":true,"needEscape":true,"nodes":[{"content":"If a <xref:System.Windows.Controls.ScrollViewer> control is the ScrollOwner, physical scrolling is enabled. If a <xref:System.Windows.Controls.StackPanel> is the ScrollOwner, scrolling is logical by child element.","pos":[0,213],"nodes":[{"content":"If a &lt;xref:System.Windows.Controls.ScrollViewer&gt; control is the ScrollOwner, physical scrolling is enabled.","pos":[0,107],"source":"If a <xref:System.Windows.Controls.ScrollViewer> control is the ScrollOwner, physical scrolling is enabled."},{"content":"If a &lt;xref:System.Windows.Controls.StackPanel&gt; is the ScrollOwner, scrolling is logical by child element.","pos":[108,213],"source":" If a <xref:System.Windows.Controls.StackPanel> is the ScrollOwner, scrolling is logical by child element."}]}]},{"pos":[64908,65091],"content":"The <xref href=\"System.Windows.Controls.ScrollViewer\"></xref> that owns scrolling for this <xref href=\"System.Windows.Controls.StackPanel\"></xref>. This property has no default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ScrollViewer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that owns scrolling for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.StackPanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,147],"source":"The <xref href=\"System.Windows.Controls.ScrollViewer\"></xref> that owns scrolling for this <xref href=\"System.Windows.Controls.StackPanel\"></xref>."},{"content":"This property has no default value.","pos":[148,183]}]},{"pos":[65644,65735],"content":"Sets the value of the <xref:System.Windows.Controls.StackPanel.HorizontalOffset*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.StackPanel.HorizontalOffset*&gt; property.","pos":[0,91],"source":"Sets the value of the <xref:System.Windows.Controls.StackPanel.HorizontalOffset*> property."}]},{"pos":[65886,65972],"content":"The value of the <xref:System.Windows.Controls.StackPanel.HorizontalOffset*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the &lt;xref:System.Windows.Controls.StackPanel.HorizontalOffset*&gt; property.","pos":[0,86],"source":"The value of the <xref:System.Windows.Controls.StackPanel.HorizontalOffset*> property."}]},{"pos":[66523,66612],"content":"Sets the value of the <xref:System.Windows.Controls.StackPanel.VerticalOffset*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.StackPanel.VerticalOffset*&gt; property.","pos":[0,89],"source":"Sets the value of the <xref:System.Windows.Controls.StackPanel.VerticalOffset*> property."}]},{"pos":[66761,66845],"content":"The value of the <xref:System.Windows.Controls.StackPanel.VerticalOffset*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the &lt;xref:System.Windows.Controls.StackPanel.VerticalOffset*&gt; property.","pos":[0,84],"source":"The value of the <xref:System.Windows.Controls.StackPanel.VerticalOffset*> property."}]},{"pos":[67327,67398],"content":"Gets a value that contains the vertical offset of the scrolled content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the vertical offset of the scrolled content.","pos":[0,71]}]},{"pos":[67410,67471],"content":"The returned value is described in Device Independent Pixels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The returned value is described in Device Independent Pixels.","pos":[0,61]}]},{"pos":[67590,67701],"content":"The <xref:System.Double> that represents the vertical offset of the scrolled content. The default value is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Double> that represents the vertical offset of the scrolled content. The default value is 0.0.","pos":[0,111],"nodes":[{"content":"The &lt;xref:System.Double&gt; that represents the vertical offset of the scrolled content.","pos":[0,85],"source":"The <xref:System.Double> that represents the vertical offset of the scrolled content."},{"content":"The default value is 0.0.","pos":[86,111]}]}]},{"pos":[68180,68251],"content":"Gets a value that contains the vertical size of the content's viewport.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the vertical size of the content's viewport.","pos":[0,71]}]},{"pos":[68263,68324],"content":"The returned value is described in Device Independent Pixels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The returned value is described in Device Independent Pixels.","pos":[0,61]}]},{"pos":[68443,68554],"content":"The <xref:System.Double> that represents the vertical size of the content's viewport. The default value is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Double> that represents the vertical size of the content's viewport. The default value is 0.0.","pos":[0,111],"nodes":[{"content":"The &lt;xref:System.Double&gt; that represents the vertical size of the content's viewport.","pos":[0,85],"source":"The <xref:System.Double> that represents the vertical size of the content's viewport."},{"content":"The default value is 0.0.","pos":[86,111]}]}]},{"pos":[69028,69101],"content":"Gets a value that contains the horizontal size of the content's viewport.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that contains the horizontal size of the content's viewport.","pos":[0,73]}]},{"pos":[69113,69174],"content":"The returned value is described in Device Independent Pixels.","needQuote":true,"needEscape":true,"nodes":[{"content":"The returned value is described in Device Independent Pixels.","pos":[0,61]}]},{"pos":[69292,69403],"content":"The <xref:System.Double> that represents the vertical size of the content's viewport. The default value is 0.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Double> that represents the vertical size of the content's viewport. The default value is 0.0.","pos":[0,111],"nodes":[{"content":"The &lt;xref:System.Double&gt; that represents the vertical size of the content's viewport.","pos":[0,85],"source":"The <xref:System.Double> that represents the vertical size of the content's viewport."},{"content":"The default value is 0.0.","pos":[86,111]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.StackPanel\n  id: StackPanel\n  children:\n  - System.Windows.Controls.StackPanel.#ctor\n  - System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.StackPanel.CanHorizontallyScroll\n  - System.Windows.Controls.StackPanel.CanVerticallyScroll\n  - System.Windows.Controls.StackPanel.ExtentHeight\n  - System.Windows.Controls.StackPanel.ExtentWidth\n  - System.Windows.Controls.StackPanel.HasLogicalOrientation\n  - System.Windows.Controls.StackPanel.HorizontalOffset\n  - System.Windows.Controls.StackPanel.LineDown\n  - System.Windows.Controls.StackPanel.LineLeft\n  - System.Windows.Controls.StackPanel.LineRight\n  - System.Windows.Controls.StackPanel.LineUp\n  - System.Windows.Controls.StackPanel.LogicalOrientation\n  - System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)\n  - System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.StackPanel.MouseWheelDown\n  - System.Windows.Controls.StackPanel.MouseWheelLeft\n  - System.Windows.Controls.StackPanel.MouseWheelRight\n  - System.Windows.Controls.StackPanel.MouseWheelUp\n  - System.Windows.Controls.StackPanel.Orientation\n  - System.Windows.Controls.StackPanel.OrientationProperty\n  - System.Windows.Controls.StackPanel.PageDown\n  - System.Windows.Controls.StackPanel.PageLeft\n  - System.Windows.Controls.StackPanel.PageRight\n  - System.Windows.Controls.StackPanel.PageUp\n  - System.Windows.Controls.StackPanel.ScrollOwner\n  - System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)\n  - System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)\n  - System.Windows.Controls.StackPanel.VerticalOffset\n  - System.Windows.Controls.StackPanel.ViewportHeight\n  - System.Windows.Controls.StackPanel.ViewportWidth\n  langs:\n  - csharp\n  name: StackPanel\n  nameWithType: StackPanel\n  fullName: System.Windows.Controls.StackPanel\n  type: Class\n  summary: Arranges child elements into a single line that can be oriented horizontally or vertically.\n  remarks: \"A StackPanel contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property.  \\n  \\n The default value is stretch for both <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> of content that is contained in a StackPanel.  \\n  \\n Panel elements do not receive focus by default. To compel a panel element to receive focus, set the <xref:System.Windows.UIElement.Focusable%2A> property to `true`.  \\n  \\n StackPanel implements the <xref:System.Windows.Controls.Primitives.IScrollInfo> interface to support logical scrolling. Logical scrolling is used to scroll to the next element in the logical tree. This is in contrast to physical scrolling, which scrolls content by a defined physical increment in a given direction. If you require physical scrolling instead of logical scrolling, wrap the host StackPanel element in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\"\n  syntax:\n    content: 'public class StackPanel : System.Windows.Controls.Panel, System.Windows.Controls.Primitives.IScrollInfo'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  - System.Windows.Controls.Panel\n  implements:\n  - System.Windows.Controls.Primitives.IScrollInfo\n  inheritedMembers:\n  - System.Windows.Controls.Panel.Background\n  - System.Windows.Controls.Panel.BackgroundProperty\n  - System.Windows.Controls.Panel.Children\n  - System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)\n  - System.Windows.Controls.Panel.GetVisualChild(System.Int32)\n  - System.Windows.Controls.Panel.GetZIndex(System.Windows.UIElement)\n  - System.Windows.Controls.Panel.HasLogicalOrientationPublic\n  - System.Windows.Controls.Panel.InternalChildren\n  - System.Windows.Controls.Panel.IsItemsHost\n  - System.Windows.Controls.Panel.IsItemsHostProperty\n  - System.Windows.Controls.Panel.LogicalChildren\n  - System.Windows.Controls.Panel.LogicalOrientationPublic\n  - System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)\n  - System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Controls.Panel.SetZIndex(System.Windows.UIElement,System.Int32)\n  - System.Windows.Controls.Panel.ShouldSerializeChildren\n  - System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Controls.Panel.VisualChildrenCount\n  - System.Windows.Controls.Panel.ZIndexProperty\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnApplyTemplate\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnCreateAutomationPeer\n  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: StackPanel()\n  nameWithType: StackPanel.StackPanel()\n  fullName: System.Windows.Controls.StackPanel.StackPanel()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.StackPanel\"></xref> class.\n  syntax:\n    content: public StackPanel ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)\n  id: ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: ArrangeOverride(Size)\n  nameWithType: StackPanel.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.StackPanel.ArrangeOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Arranges the content of a <xref href=\"System.Windows.Controls.StackPanel\"></xref> element.\n  syntax:\n    content: protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);\n    parameters:\n    - id: arrangeSize\n      type: System.Windows.Size\n      description: The <xref href=\"System.Windows.Size\"></xref> that this element should use to arrange its child elements.\n    return:\n      type: System.Windows.Size\n      description: The <xref href=\"System.Windows.Size\"></xref> that represents the arranged size of this <xref href=\"System.Windows.Controls.StackPanel\"></xref> element and its child elements.\n  overload: System.Windows.Controls.StackPanel.ArrangeOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.CanHorizontallyScroll\n  id: CanHorizontallyScroll\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: CanHorizontallyScroll\n  nameWithType: StackPanel.CanHorizontallyScroll\n  fullName: System.Windows.Controls.StackPanel.CanHorizontallyScroll\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether a <xref href=\"System.Windows.Controls.StackPanel\"></xref> can scroll in the horizontal dimension.\n  remarks: \"This property is not intended to be used in your code. It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>). Setting this property has no effect.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\"\n  syntax:\n    content: public bool CanHorizontallyScroll { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the horizontal dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.StackPanel.CanHorizontallyScroll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.CanVerticallyScroll\n  id: CanVerticallyScroll\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: CanVerticallyScroll\n  nameWithType: StackPanel.CanVerticallyScroll\n  fullName: System.Windows.Controls.StackPanel.CanVerticallyScroll\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether content can scroll in the vertical dimension.\n  remarks: \"This property is not intended for use in your code. It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>). Setting this property has no effect.  \\n  \\n If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\"\n  syntax:\n    content: public bool CanVerticallyScroll { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if content can scroll in the vertical dimension; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.StackPanel.CanVerticallyScroll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.ExtentHeight\n  id: ExtentHeight\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: ExtentHeight\n  nameWithType: StackPanel.ExtentHeight\n  fullName: System.Windows.Controls.StackPanel.ExtentHeight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the vertical size of the extent.\n  remarks: The returned value is described in Device Independent Pixels.\n  syntax:\n    content: public double ExtentHeight { get; }\n    return:\n      type: System.Double\n      description: The <xref:System.Double> that represents the vertical size of the extent. The default value is 0.0.\n  overload: System.Windows.Controls.StackPanel.ExtentHeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.ExtentWidth\n  id: ExtentWidth\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: ExtentWidth\n  nameWithType: StackPanel.ExtentWidth\n  fullName: System.Windows.Controls.StackPanel.ExtentWidth\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the horizontal size of the extent.\n  remarks: The returned value is described in Device Independent Pixels.\n  syntax:\n    content: public double ExtentWidth { get; }\n    return:\n      type: System.Double\n      description: <xref:System.Double> that represents the horizontal size of the extent. The default value is 0.0.\n  overload: System.Windows.Controls.StackPanel.ExtentWidth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.HasLogicalOrientation\n  id: HasLogicalOrientation\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: HasLogicalOrientation\n  nameWithType: StackPanel.HasLogicalOrientation\n  fullName: System.Windows.Controls.StackPanel.HasLogicalOrientation\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that indicates if this <xref href=\"System.Windows.Controls.StackPanel\"></xref> has vertical or horizontal orientation.\n  remarks: This property always returns `true` because a <xref:System.Windows.Controls.StackPanel> must have either vertical or horizontal orientation.\n  syntax:\n    content: protected override bool HasLogicalOrientation { get; }\n    return:\n      type: System.Boolean\n      description: This property always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Controls.StackPanel.HasLogicalOrientation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.HorizontalOffset\n  id: HorizontalOffset\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: HorizontalOffset\n  nameWithType: StackPanel.HorizontalOffset\n  fullName: System.Windows.Controls.StackPanel.HorizontalOffset\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the horizontal offset of the scrolled content.\n  remarks: The returned value is described in Device Independent Pixels.\n  syntax:\n    content: public double HorizontalOffset { get; }\n    return:\n      type: System.Double\n      description: The <xref:System.Double> that represents the horizontal offset of the scrolled content. The default value is 0.0.\n  overload: System.Windows.Controls.StackPanel.HorizontalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.LineDown\n  id: LineDown\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: LineDown()\n  nameWithType: StackPanel.LineDown()\n  fullName: System.Windows.Controls.StackPanel.LineDown()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content downward by one logical unit.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void LineDown ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.LineDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.LineLeft\n  id: LineLeft\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: LineLeft()\n  nameWithType: StackPanel.LineLeft()\n  fullName: System.Windows.Controls.StackPanel.LineLeft()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content by one logical unit to the left.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void LineLeft ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.LineLeft*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.LineRight\n  id: LineRight\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: LineRight()\n  nameWithType: StackPanel.LineRight()\n  fullName: System.Windows.Controls.StackPanel.LineRight()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content by one logical unit to the right.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void LineRight ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.LineRight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.LineUp\n  id: LineUp\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: LineUp()\n  nameWithType: StackPanel.LineUp()\n  fullName: System.Windows.Controls.StackPanel.LineUp()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content by one logical unit upward.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void LineUp ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.LineUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.LogicalOrientation\n  id: LogicalOrientation\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: LogicalOrientation\n  nameWithType: StackPanel.LogicalOrientation\n  fullName: System.Windows.Controls.StackPanel.LogicalOrientation\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that represents the <xref href=\"System.Windows.Controls.Orientation\"></xref> of the <xref href=\"System.Windows.Controls.StackPanel\"></xref>.\n  syntax:\n    content: protected override System.Windows.Controls.Orientation LogicalOrientation { get; }\n    return:\n      type: System.Windows.Controls.Orientation\n      description: An <xref href=\"System.Windows.Controls.Orientation\"></xref> value.\n  overload: System.Windows.Controls.StackPanel.LogicalOrientation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)\n  id: MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: MakeVisible(Visual,Rect)\n  nameWithType: StackPanel.MakeVisible(Visual,Rect)\n  fullName: System.Windows.Controls.StackPanel.MakeVisible(Visual,Rect)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls to the specified coordinates and makes that part of a <xref href=\"System.Windows.Media.Visual\"></xref> visible.\n  syntax:\n    content: public System.Windows.Rect MakeVisible (System.Windows.Media.Visual visual, System.Windows.Rect rectangle);\n    parameters:\n    - id: visual\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> that becomes visible.\n    - id: rectangle\n      type: System.Windows.Rect\n      description: The <xref href=\"System.Windows.Rect\"></xref> that represents coordinate space within a visual.\n    return:\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> in the coordinate space that is made visible.\n  overload: System.Windows.Controls.StackPanel.MakeVisible*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)\n  id: MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: MeasureOverride(Size)\n  nameWithType: StackPanel.MeasureOverride(Size)\n  fullName: System.Windows.Controls.StackPanel.MeasureOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Measures the child elements of a <xref href=\"System.Windows.Controls.StackPanel\"></xref> in anticipation of arranging them during the <xref:System.Windows.Controls.StackPanel.ArrangeOverride*> pass.\n  syntax:\n    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);\n    parameters:\n    - id: constraint\n      type: System.Windows.Size\n      description: An upper limit <xref href=\"System.Windows.Size\"></xref> that should not be exceeded.\n    return:\n      type: System.Windows.Size\n      description: The <xref href=\"System.Windows.Size\"></xref> that represents the desired size of the element.\n  overload: System.Windows.Controls.StackPanel.MeasureOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.MouseWheelDown\n  id: MouseWheelDown\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: MouseWheelDown()\n  nameWithType: StackPanel.MouseWheelDown()\n  fullName: System.Windows.Controls.StackPanel.MouseWheelDown()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically downward in response to a click of the mouse wheel button.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void MouseWheelDown ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.MouseWheelDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.MouseWheelLeft\n  id: MouseWheelLeft\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: MouseWheelLeft()\n  nameWithType: StackPanel.MouseWheelLeft()\n  fullName: System.Windows.Controls.StackPanel.MouseWheelLeft()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically to the left in response to a click of the mouse wheel button.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void MouseWheelLeft ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.MouseWheelLeft*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.MouseWheelRight\n  id: MouseWheelRight\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: MouseWheelRight()\n  nameWithType: StackPanel.MouseWheelRight()\n  fullName: System.Windows.Controls.StackPanel.MouseWheelRight()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically to the right in response to a click of the mouse wheel button.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void MouseWheelRight ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.MouseWheelRight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.MouseWheelUp\n  id: MouseWheelUp\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: MouseWheelUp()\n  nameWithType: StackPanel.MouseWheelUp()\n  fullName: System.Windows.Controls.StackPanel.MouseWheelUp()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically upward in response to a click of the mouse wheel button.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void MouseWheelUp ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.MouseWheelUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.Orientation\n  id: Orientation\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: Orientation\n  nameWithType: StackPanel.Orientation\n  fullName: System.Windows.Controls.StackPanel.Orientation\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates the dimension by which child elements are stacked.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_Orientation\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.StackPanel.OrientationProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example shows how to use the Orientation property to specify how elements within a <xref:System.Windows.Controls.StackPanel> are stacked (one on top of the other or side by side).  \\n  \\n [!code-xml[StackPanel_snip#StackPanelOrientationExampleWholePage](~/add/codesnippet/xaml/StackPanel_snip/OrientationExample.xaml#stackpanelorientationexamplewholepage)]\\n [!code-xml[StackPanel_snip#StackPanelOrientationExampleWholePage](~/add/codesnippet/xaml/p-system.windows.control_211_1.xaml)]  \\n  \\n The screenshot below shows how this example renders.  \\n  \\n ![StackPanel orientation](~/add/media/layout-stackpanelorientationexample.gif \\\"StackPanel orientation\\\")\"\n  syntax:\n    content: public System.Windows.Controls.Orientation Orientation { get; set; }\n    return:\n      type: System.Windows.Controls.Orientation\n      description: The <xref href=\"System.Windows.Controls.Orientation\"></xref> of child content.\n  overload: System.Windows.Controls.StackPanel.Orientation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.OrientationProperty\n  id: OrientationProperty\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: OrientationProperty\n  nameWithType: StackPanel.OrientationProperty\n  fullName: System.Windows.Controls.StackPanel.OrientationProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.StackPanel.Orientation*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty OrientationProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.PageDown\n  id: PageDown\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: PageDown()\n  nameWithType: StackPanel.PageDown()\n  fullName: System.Windows.Controls.StackPanel.PageDown()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically downward by one page.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void PageDown ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.PageDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.PageLeft\n  id: PageLeft\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: PageLeft()\n  nameWithType: StackPanel.PageLeft()\n  fullName: System.Windows.Controls.StackPanel.PageLeft()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically to the left by one page.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void PageLeft ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.PageLeft*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.PageRight\n  id: PageRight\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: PageRight()\n  nameWithType: StackPanel.PageRight()\n  fullName: System.Windows.Controls.StackPanel.PageRight()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically to the right by one page.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void PageRight ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.PageRight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.PageUp\n  id: PageUp\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: PageUp()\n  nameWithType: StackPanel.PageUp()\n  fullName: System.Windows.Controls.StackPanel.PageUp()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls content logically upward by one page.\n  remarks: If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.\n  syntax:\n    content: public void PageUp ();\n    parameters: []\n  overload: System.Windows.Controls.StackPanel.PageUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.ScrollOwner\n  id: ScrollOwner\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: ScrollOwner\n  nameWithType: StackPanel.ScrollOwner\n  fullName: System.Windows.Controls.StackPanel.ScrollOwner\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that identifies the container that controls scrolling behavior in this <xref href=\"System.Windows.Controls.StackPanel\"></xref>.\n  remarks: If a <xref:System.Windows.Controls.ScrollViewer> control is the ScrollOwner, physical scrolling is enabled. If a <xref:System.Windows.Controls.StackPanel> is the ScrollOwner, scrolling is logical by child element.\n  syntax:\n    content: public System.Windows.Controls.ScrollViewer ScrollOwner { get; set; }\n    return:\n      type: System.Windows.Controls.ScrollViewer\n      description: The <xref href=\"System.Windows.Controls.ScrollViewer\"></xref> that owns scrolling for this <xref href=\"System.Windows.Controls.StackPanel\"></xref>. This property has no default value.\n  overload: System.Windows.Controls.StackPanel.ScrollOwner*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)\n  id: SetHorizontalOffset(System.Double)\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: SetHorizontalOffset(Double)\n  nameWithType: StackPanel.SetHorizontalOffset(Double)\n  fullName: System.Windows.Controls.StackPanel.SetHorizontalOffset(Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.StackPanel.HorizontalOffset*> property.\n  syntax:\n    content: public void SetHorizontalOffset (double offset);\n    parameters:\n    - id: offset\n      type: System.Double\n      description: The value of the <xref:System.Windows.Controls.StackPanel.HorizontalOffset*> property.\n  overload: System.Windows.Controls.StackPanel.SetHorizontalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)\n  id: SetVerticalOffset(System.Double)\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: SetVerticalOffset(Double)\n  nameWithType: StackPanel.SetVerticalOffset(Double)\n  fullName: System.Windows.Controls.StackPanel.SetVerticalOffset(Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.StackPanel.VerticalOffset*> property.\n  syntax:\n    content: public void SetVerticalOffset (double offset);\n    parameters:\n    - id: offset\n      type: System.Double\n      description: The value of the <xref:System.Windows.Controls.StackPanel.VerticalOffset*> property.\n  overload: System.Windows.Controls.StackPanel.SetVerticalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.VerticalOffset\n  id: VerticalOffset\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: VerticalOffset\n  nameWithType: StackPanel.VerticalOffset\n  fullName: System.Windows.Controls.StackPanel.VerticalOffset\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the vertical offset of the scrolled content.\n  remarks: The returned value is described in Device Independent Pixels.\n  syntax:\n    content: public double VerticalOffset { get; }\n    return:\n      type: System.Double\n      description: The <xref:System.Double> that represents the vertical offset of the scrolled content. The default value is 0.0.\n  overload: System.Windows.Controls.StackPanel.VerticalOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.ViewportHeight\n  id: ViewportHeight\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: ViewportHeight\n  nameWithType: StackPanel.ViewportHeight\n  fullName: System.Windows.Controls.StackPanel.ViewportHeight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the vertical size of the content's viewport.\n  remarks: The returned value is described in Device Independent Pixels.\n  syntax:\n    content: public double ViewportHeight { get; }\n    return:\n      type: System.Double\n      description: The <xref:System.Double> that represents the vertical size of the content's viewport. The default value is 0.0.\n  overload: System.Windows.Controls.StackPanel.ViewportHeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.StackPanel.ViewportWidth\n  id: ViewportWidth\n  parent: System.Windows.Controls.StackPanel\n  langs:\n  - csharp\n  name: ViewportWidth\n  nameWithType: StackPanel.ViewportWidth\n  fullName: System.Windows.Controls.StackPanel.ViewportWidth\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that contains the horizontal size of the content's viewport.\n  remarks: The returned value is described in Device Independent Pixels.\n  syntax:\n    content: public double ViewportWidth { get; }\n    return:\n      type: System.Double\n      description: The <xref:System.Double> that represents the vertical size of the content's viewport. The default value is 0.0.\n  overload: System.Windows.Controls.StackPanel.ViewportWidth*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Controls.Panel\n  isExternal: false\n  name: System.Windows.Controls.Panel\n- uid: System.Windows.Controls.StackPanel.#ctor\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: StackPanel()\n  nameWithType: StackPanel.StackPanel()\n  fullName: System.Windows.Controls.StackPanel.StackPanel()\n- uid: System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ArrangeOverride(Size)\n  nameWithType: StackPanel.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.StackPanel.ArrangeOverride(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Controls.StackPanel.CanHorizontallyScroll\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: CanHorizontallyScroll\n  nameWithType: StackPanel.CanHorizontallyScroll\n  fullName: System.Windows.Controls.StackPanel.CanHorizontallyScroll\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.StackPanel.CanVerticallyScroll\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: CanVerticallyScroll\n  nameWithType: StackPanel.CanVerticallyScroll\n  fullName: System.Windows.Controls.StackPanel.CanVerticallyScroll\n- uid: System.Windows.Controls.StackPanel.ExtentHeight\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ExtentHeight\n  nameWithType: StackPanel.ExtentHeight\n  fullName: System.Windows.Controls.StackPanel.ExtentHeight\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Controls.StackPanel.ExtentWidth\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ExtentWidth\n  nameWithType: StackPanel.ExtentWidth\n  fullName: System.Windows.Controls.StackPanel.ExtentWidth\n- uid: System.Windows.Controls.StackPanel.HasLogicalOrientation\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: HasLogicalOrientation\n  nameWithType: StackPanel.HasLogicalOrientation\n  fullName: System.Windows.Controls.StackPanel.HasLogicalOrientation\n- uid: System.Windows.Controls.StackPanel.HorizontalOffset\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: HorizontalOffset\n  nameWithType: StackPanel.HorizontalOffset\n  fullName: System.Windows.Controls.StackPanel.HorizontalOffset\n- uid: System.Windows.Controls.StackPanel.LineDown\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: LineDown()\n  nameWithType: StackPanel.LineDown()\n  fullName: System.Windows.Controls.StackPanel.LineDown()\n- uid: System.Windows.Controls.StackPanel.LineLeft\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: LineLeft()\n  nameWithType: StackPanel.LineLeft()\n  fullName: System.Windows.Controls.StackPanel.LineLeft()\n- uid: System.Windows.Controls.StackPanel.LineRight\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: LineRight()\n  nameWithType: StackPanel.LineRight()\n  fullName: System.Windows.Controls.StackPanel.LineRight()\n- uid: System.Windows.Controls.StackPanel.LineUp\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: LineUp()\n  nameWithType: StackPanel.LineUp()\n  fullName: System.Windows.Controls.StackPanel.LineUp()\n- uid: System.Windows.Controls.StackPanel.LogicalOrientation\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: LogicalOrientation\n  nameWithType: StackPanel.LogicalOrientation\n  fullName: System.Windows.Controls.StackPanel.LogicalOrientation\n- uid: System.Windows.Controls.Orientation\n  parent: System.Windows.Controls\n  isExternal: false\n  name: Orientation\n  nameWithType: Orientation\n  fullName: System.Windows.Controls.Orientation\n- uid: System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MakeVisible(Visual,Rect)\n  nameWithType: StackPanel.MakeVisible(Visual,Rect)\n  fullName: System.Windows.Controls.StackPanel.MakeVisible(Visual,Rect)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.Visual\n  parent: System.Windows.Media\n  isExternal: false\n  name: Visual\n  nameWithType: Visual\n  fullName: System.Windows.Media.Visual\n- uid: System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MeasureOverride(Size)\n  nameWithType: StackPanel.MeasureOverride(Size)\n  fullName: System.Windows.Controls.StackPanel.MeasureOverride(Size)\n- uid: System.Windows.Controls.StackPanel.MouseWheelDown\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MouseWheelDown()\n  nameWithType: StackPanel.MouseWheelDown()\n  fullName: System.Windows.Controls.StackPanel.MouseWheelDown()\n- uid: System.Windows.Controls.StackPanel.MouseWheelLeft\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MouseWheelLeft()\n  nameWithType: StackPanel.MouseWheelLeft()\n  fullName: System.Windows.Controls.StackPanel.MouseWheelLeft()\n- uid: System.Windows.Controls.StackPanel.MouseWheelRight\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MouseWheelRight()\n  nameWithType: StackPanel.MouseWheelRight()\n  fullName: System.Windows.Controls.StackPanel.MouseWheelRight()\n- uid: System.Windows.Controls.StackPanel.MouseWheelUp\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MouseWheelUp()\n  nameWithType: StackPanel.MouseWheelUp()\n  fullName: System.Windows.Controls.StackPanel.MouseWheelUp()\n- uid: System.Windows.Controls.StackPanel.Orientation\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: Orientation\n  nameWithType: StackPanel.Orientation\n  fullName: System.Windows.Controls.StackPanel.Orientation\n- uid: System.Windows.Controls.StackPanel.OrientationProperty\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: OrientationProperty\n  nameWithType: StackPanel.OrientationProperty\n  fullName: System.Windows.Controls.StackPanel.OrientationProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.StackPanel.PageDown\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: PageDown()\n  nameWithType: StackPanel.PageDown()\n  fullName: System.Windows.Controls.StackPanel.PageDown()\n- uid: System.Windows.Controls.StackPanel.PageLeft\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: PageLeft()\n  nameWithType: StackPanel.PageLeft()\n  fullName: System.Windows.Controls.StackPanel.PageLeft()\n- uid: System.Windows.Controls.StackPanel.PageRight\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: PageRight()\n  nameWithType: StackPanel.PageRight()\n  fullName: System.Windows.Controls.StackPanel.PageRight()\n- uid: System.Windows.Controls.StackPanel.PageUp\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: PageUp()\n  nameWithType: StackPanel.PageUp()\n  fullName: System.Windows.Controls.StackPanel.PageUp()\n- uid: System.Windows.Controls.StackPanel.ScrollOwner\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ScrollOwner\n  nameWithType: StackPanel.ScrollOwner\n  fullName: System.Windows.Controls.StackPanel.ScrollOwner\n- uid: System.Windows.Controls.ScrollViewer\n  parent: System.Windows.Controls\n  isExternal: false\n  name: ScrollViewer\n  nameWithType: ScrollViewer\n  fullName: System.Windows.Controls.ScrollViewer\n- uid: System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: SetHorizontalOffset(Double)\n  nameWithType: StackPanel.SetHorizontalOffset(Double)\n  fullName: System.Windows.Controls.StackPanel.SetHorizontalOffset(Double)\n- uid: System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: SetVerticalOffset(Double)\n  nameWithType: StackPanel.SetVerticalOffset(Double)\n  fullName: System.Windows.Controls.StackPanel.SetVerticalOffset(Double)\n- uid: System.Windows.Controls.StackPanel.VerticalOffset\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: VerticalOffset\n  nameWithType: StackPanel.VerticalOffset\n  fullName: System.Windows.Controls.StackPanel.VerticalOffset\n- uid: System.Windows.Controls.StackPanel.ViewportHeight\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ViewportHeight\n  nameWithType: StackPanel.ViewportHeight\n  fullName: System.Windows.Controls.StackPanel.ViewportHeight\n- uid: System.Windows.Controls.StackPanel.ViewportWidth\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ViewportWidth\n  nameWithType: StackPanel.ViewportWidth\n  fullName: System.Windows.Controls.StackPanel.ViewportWidth\n- uid: System.Windows.Controls.StackPanel.#ctor*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: StackPanel\n  nameWithType: StackPanel.StackPanel\n- uid: System.Windows.Controls.StackPanel.ArrangeOverride*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ArrangeOverride\n  nameWithType: StackPanel.ArrangeOverride\n- uid: System.Windows.Controls.StackPanel.CanHorizontallyScroll*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: CanHorizontallyScroll\n  nameWithType: StackPanel.CanHorizontallyScroll\n- uid: System.Windows.Controls.StackPanel.CanVerticallyScroll*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: CanVerticallyScroll\n  nameWithType: StackPanel.CanVerticallyScroll\n- uid: System.Windows.Controls.StackPanel.ExtentHeight*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ExtentHeight\n  nameWithType: StackPanel.ExtentHeight\n- uid: System.Windows.Controls.StackPanel.ExtentWidth*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ExtentWidth\n  nameWithType: StackPanel.ExtentWidth\n- uid: System.Windows.Controls.StackPanel.HasLogicalOrientation*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: HasLogicalOrientation\n  nameWithType: StackPanel.HasLogicalOrientation\n- uid: System.Windows.Controls.StackPanel.HorizontalOffset*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: HorizontalOffset\n  nameWithType: StackPanel.HorizontalOffset\n- uid: System.Windows.Controls.StackPanel.LineDown*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: LineDown\n  nameWithType: StackPanel.LineDown\n- uid: System.Windows.Controls.StackPanel.LineLeft*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: LineLeft\n  nameWithType: StackPanel.LineLeft\n- uid: System.Windows.Controls.StackPanel.LineRight*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: LineRight\n  nameWithType: StackPanel.LineRight\n- uid: System.Windows.Controls.StackPanel.LineUp*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: LineUp\n  nameWithType: StackPanel.LineUp\n- uid: System.Windows.Controls.StackPanel.LogicalOrientation*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: LogicalOrientation\n  nameWithType: StackPanel.LogicalOrientation\n- uid: System.Windows.Controls.StackPanel.MakeVisible*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MakeVisible\n  nameWithType: StackPanel.MakeVisible\n- uid: System.Windows.Controls.StackPanel.MeasureOverride*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MeasureOverride\n  nameWithType: StackPanel.MeasureOverride\n- uid: System.Windows.Controls.StackPanel.MouseWheelDown*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MouseWheelDown\n  nameWithType: StackPanel.MouseWheelDown\n- uid: System.Windows.Controls.StackPanel.MouseWheelLeft*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MouseWheelLeft\n  nameWithType: StackPanel.MouseWheelLeft\n- uid: System.Windows.Controls.StackPanel.MouseWheelRight*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MouseWheelRight\n  nameWithType: StackPanel.MouseWheelRight\n- uid: System.Windows.Controls.StackPanel.MouseWheelUp*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: MouseWheelUp\n  nameWithType: StackPanel.MouseWheelUp\n- uid: System.Windows.Controls.StackPanel.Orientation*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: Orientation\n  nameWithType: StackPanel.Orientation\n- uid: System.Windows.Controls.StackPanel.PageDown*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: PageDown\n  nameWithType: StackPanel.PageDown\n- uid: System.Windows.Controls.StackPanel.PageLeft*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: PageLeft\n  nameWithType: StackPanel.PageLeft\n- uid: System.Windows.Controls.StackPanel.PageRight*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: PageRight\n  nameWithType: StackPanel.PageRight\n- uid: System.Windows.Controls.StackPanel.PageUp*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: PageUp\n  nameWithType: StackPanel.PageUp\n- uid: System.Windows.Controls.StackPanel.ScrollOwner*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ScrollOwner\n  nameWithType: StackPanel.ScrollOwner\n- uid: System.Windows.Controls.StackPanel.SetHorizontalOffset*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: SetHorizontalOffset\n  nameWithType: StackPanel.SetHorizontalOffset\n- uid: System.Windows.Controls.StackPanel.SetVerticalOffset*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: SetVerticalOffset\n  nameWithType: StackPanel.SetVerticalOffset\n- uid: System.Windows.Controls.StackPanel.VerticalOffset*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: VerticalOffset\n  nameWithType: StackPanel.VerticalOffset\n- uid: System.Windows.Controls.StackPanel.ViewportHeight*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ViewportHeight\n  nameWithType: StackPanel.ViewportHeight\n- uid: System.Windows.Controls.StackPanel.ViewportWidth*\n  parent: System.Windows.Controls.StackPanel\n  isExternal: false\n  name: ViewportWidth\n  nameWithType: StackPanel.ViewportWidth\n"}