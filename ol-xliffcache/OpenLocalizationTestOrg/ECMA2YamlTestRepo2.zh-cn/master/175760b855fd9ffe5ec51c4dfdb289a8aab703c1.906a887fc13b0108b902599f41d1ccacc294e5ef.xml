{"nodes":[{"pos":[389,714],"content":"Represents the method that will handle the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event or <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event of a <bpt id=\"p3\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Represents the method that will handle the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting\"></xref> event or <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting\"></xref> event of a <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control."},{"pos":[727,2720],"content":"The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> method, and it signals that the connection process has begun (for example, a user has selected a control and clicked a connect verb), but is not yet completed. The event provides an opportunity to cancel a connection before it is complete. If the connection is successfully completed, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> event.       The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> method, and it signals the fact that a user has clicked a disconnect verb, or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method has otherwise been called. The event provides an opportunity to cancel the process of ending a connection before it is complete. If the connection is ended successfully, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> event.       The method specified in the WebPartConnectionsCancelEventHandler delegate is called when a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> or <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event is raised.       Page developers can add custom handlers for the events by adding the `OnWebPartsDisconnecting` and `OnWebPartsConnecting` attributes to the `<asp:webpartmanager>` element, and assigning custom method names to the attributes. A custom handler can also be assigned programmatically. For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting&gt; event is raised by the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A&gt; method, and it signals that the connection process has begun (for example, a user has selected a control and clicked a connect verb), but is not yet completed.","pos":[0,343],"source":"The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> method, and it signals that the connection process has begun (for example, a user has selected a control and clicked a connect verb), but is not yet completed."},{"content":"The event provides an opportunity to cancel a connection before it is complete.","pos":[344,423]},{"content":"If the connection is successfully completed, this event is followed by the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected&gt; event.","pos":[424,580],"source":" If the connection is successfully completed, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> event."},{"content":"The &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting&gt; event is raised by the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A&gt; method, and it signals the fact that a user has clicked a disconnect verb, or the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A&gt; method has otherwise been called.","pos":[587,971],"source":"       The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> method, and it signals the fact that a user has clicked a disconnect verb, or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method has otherwise been called."},{"content":"The event provides an opportunity to cancel the process of ending a connection before it is complete.","pos":[972,1073]},{"content":"If the connection is ended successfully, this event is followed by the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected&gt; event.","pos":[1074,1229],"source":" If the connection is ended successfully, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> event."},{"content":"The method specified in the WebPartConnectionsCancelEventHandler delegate is called when a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting&gt; or &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting&gt; event is raised.","pos":[1236,1501],"source":"       The method specified in the WebPartConnectionsCancelEventHandler delegate is called when a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> or <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event is raised."},{"content":"Page developers can add custom handlers for the events by adding the <ph id=\"ph1\">`OnWebPartsDisconnecting`</ph> and <ph id=\"ph2\">`OnWebPartsConnecting`</ph> attributes to the <ph id=\"ph3\">`&lt;asp:webpartmanager&gt;`</ph> element, and assigning custom method names to the attributes.","pos":[1508,1732],"source":"       Page developers can add custom handlers for the events by adding the `OnWebPartsDisconnecting` and `OnWebPartsConnecting` attributes to the `<asp:webpartmanager>` element, and assigning custom method names to the attributes."},{"content":"A custom handler can also be assigned programmatically.","pos":[1733,1788]},{"content":"For more information on programmatically assigning an event handler, see <bpt id=\"p1\">[</bpt>NIB: How to: Connect Event Handler Methods to Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc)</ept>.","pos":[1789,1987],"source":" For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc)."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler\n  id: WebPartConnectionsCancelEventHandler\n  langs:\n  - csharp\n  name: WebPartConnectionsCancelEventHandler\n  nameWithType: WebPartConnectionsCancelEventHandler\n  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler\n  type: Delegate\n  summary: Represents the method that will handle the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting\"></xref> event or <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting\"></xref> event of a <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.\n  remarks: \"The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> method, and it signals that the connection process has begun (for example, a user has selected a control and clicked a connect verb), but is not yet completed. The event provides an opportunity to cancel a connection before it is complete. If the connection is successfully completed, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> event.  \\n  \\n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> method, and it signals the fact that a user has clicked a disconnect verb, or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method has otherwise been called. The event provides an opportunity to cancel the process of ending a connection before it is complete. If the connection is ended successfully, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> event.  \\n  \\n The method specified in the WebPartConnectionsCancelEventHandler delegate is called when a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> or <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event is raised.  \\n  \\n Page developers can add custom handlers for the events by adding the `OnWebPartsDisconnecting` and `OnWebPartsConnecting` attributes to the `<asp:webpartmanager>` element, and assigning custom method names to the attributes. A custom handler can also be assigned programmatically. For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc).\"\n  syntax:\n    content: public delegate void WebPartConnectionsCancelEventHandler(object sender, WebPartConnectionsCancelEventArgs e);\n  inheritance:\n  - System.Delegate\n  platform:\n  - net462\nreferences:\n- uid: System.Delegate\n  isExternal: false\n  name: System.Delegate\n"}