{"nodes":[{"pos":[878,1044],"content":"Represents the <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element in XML encryption. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedKey&amp;gt;\" name=\"&amp;lt;EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element in XML encryption.","pos":[0,134],"source":"Represents the <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element in XML encryption."},{"content":"This class cannot be inherited.","pos":[135,166]}]},{"pos":[1057,1757],"content":"This class represents the `<EncryptedKey>` element in XML encryption. The `<EncryptedKey>` element is used to send encryption keys. It can be created in a stand-alone XML document, be placed within an application document, or be inside an `<EncryptedData>` element as a child of a `<KeyInfo>` element. The key value is always encrypted to the recipient. When `<EncryptedKey>` is decrypted, the resulting key is made available to the `<EncryptionMethod>` algorithm without any additional processing.       The `<EncryptedKey>` element is similar to the `<EncryptedData>` element of the <xref:System.Security.Cryptography.Xml.EncryptedData> class except that the data encrypted is always a key value.","needQuote":false,"needEscape":true,"nodes":[{"content":"This class represents the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element in XML encryption.","pos":[0,69],"source":"This class represents the `<EncryptedKey>` element in XML encryption."},{"content":"The <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element is used to send encryption keys.","pos":[70,131],"source":" The `<EncryptedKey>` element is used to send encryption keys."},{"content":"It can be created in a stand-alone XML document, be placed within an application document, or be inside an <ph id=\"ph1\">`&lt;EncryptedData&gt;`</ph> element as a child of a <ph id=\"ph2\">`&lt;KeyInfo&gt;`</ph> element.","pos":[132,301],"source":" It can be created in a stand-alone XML document, be placed within an application document, or be inside an `<EncryptedData>` element as a child of a `<KeyInfo>` element."},{"content":"The key value is always encrypted to the recipient.","pos":[302,353]},{"content":"When <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> is decrypted, the resulting key is made available to the <ph id=\"ph2\">`&lt;EncryptionMethod&gt;`</ph> algorithm without any additional processing.","pos":[354,498],"source":" When `<EncryptedKey>` is decrypted, the resulting key is made available to the `<EncryptionMethod>` algorithm without any additional processing."},{"content":"The <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element is similar to the <ph id=\"ph2\">`&lt;EncryptedData&gt;`</ph> element of the &lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt; class except that the data encrypted is always a key value.","pos":[505,698],"source":"       The `<EncryptedKey>` element is similar to the `<EncryptedData>` element of the <xref:System.Security.Cryptography.Xml.EncryptedData> class except that the data encrypted is always a key value."}]},{"pos":[3466,3573],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"></xref> class."},{"pos":[3585,3833],"content":"This constructor creates a new instance of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. For more information on XML encryption standards, see the XML Encryption Syntax and Processing document at http://www.w3.org/TR/xmlenc-core/.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor creates a new instance of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. For more information on XML encryption standards, see the XML Encryption Syntax and Processing document at http://www.w3.org/TR/xmlenc-core/.","pos":[0,248],"nodes":[{"content":"This constructor creates a new instance of the &lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt; class.","pos":[0,106],"source":"This constructor creates a new instance of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class."},{"content":"For more information on XML encryption standards, see the XML Encryption Syntax and Processing document at http://www.w3.org/TR/xmlenc-core/.","pos":[107,248]}]}]},{"pos":[5076,5297],"content":"Adds a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;DataReference&amp;gt; \" name=\"&amp;lt;DataReference&amp;gt; \" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>element to the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;ReferenceList&amp;gt;\" name=\"&amp;lt;ReferenceList&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Adds a <xref uid=\"langword_csharp_&lt;DataReference&gt; \" name=\"&lt;DataReference&gt; \" href=\"\"></xref>element to the <xref uid=\"langword_csharp_&lt;ReferenceList&gt;\" name=\"&lt;ReferenceList&gt;\" href=\"\"></xref> element."},{"pos":[5309,5673],"content":"This method adds a <xref:System.Security.Cryptography.Xml.DataReference> object to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> property of the <xref:System.Security.Cryptography.Xml.EncryptedKey> object. The `<DataReference>` element points to encrypted data that was encrypted using the key specified in the `<EncryptedKey>` element.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method adds a &lt;xref:System.Security.Cryptography.Xml.DataReference&gt; object to the &lt;xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A&gt; property of the &lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt; object.","pos":[0,233],"source":"This method adds a <xref:System.Security.Cryptography.Xml.DataReference> object to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> property of the <xref:System.Security.Cryptography.Xml.EncryptedKey> object."},{"content":"The <ph id=\"ph1\">`&lt;DataReference&gt;`</ph> element points to encrypted data that was encrypted using the key specified in the <ph id=\"ph2\">`&lt;EncryptedKey&gt;`</ph> element.","pos":[234,364],"source":" The `<DataReference>` element points to encrypted data that was encrypted using the key specified in the `<EncryptedKey>` element."}]},{"pos":[5904,6072],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.DataReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to add to the &lt;xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*&gt; property.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Cryptography.Xml.DataReference\"></xref> object to add to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*> property."},{"pos":[6722,6941],"content":"Adds a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;KeyReference&amp;gt; \" name=\"&amp;lt;KeyReference&amp;gt; \" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>element to the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;ReferenceList&amp;gt;\" name=\"&amp;lt;ReferenceList&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Adds a <xref uid=\"langword_csharp_&lt;KeyReference&gt; \" name=\"&lt;KeyReference&gt; \" href=\"\"></xref>element to the <xref uid=\"langword_csharp_&lt;ReferenceList&gt;\" name=\"&lt;ReferenceList&gt;\" href=\"\"></xref> element."},{"pos":[6953,7317],"content":"This method adds A <xref:System.Security.Cryptography.Xml.KeyReference> object to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> property of the <xref:System.Security.Cryptography.Xml.EncryptedKey> object. The `<KeyReference>` element points to an encrypted key that was encrypted using the key specified in the `<EncryptedKey>` element.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method adds A &lt;xref:System.Security.Cryptography.Xml.KeyReference&gt; object to the &lt;xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A&gt; property of the &lt;xref:System.Security.Cryptography.Xml.EncryptedKey&gt; object.","pos":[0,232],"source":"This method adds A <xref:System.Security.Cryptography.Xml.KeyReference> object to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> property of the <xref:System.Security.Cryptography.Xml.EncryptedKey> object."},{"content":"The <ph id=\"ph1\">`&lt;KeyReference&gt;`</ph> element points to an encrypted key that was encrypted using the key specified in the <ph id=\"ph2\">`&lt;EncryptedKey&gt;`</ph> element.","pos":[233,364],"source":" The `<KeyReference>` element points to an encrypted key that was encrypted using the key specified in the `<EncryptedKey>` element."}]},{"pos":[7544,7711],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to add to the &lt;xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*&gt; property.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Cryptography.Xml.KeyReference\"></xref> object to add to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*> property."},{"pos":[8237,8386],"content":"Gets or sets the optional <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;CarriedKeyName&amp;gt;\" name=\"&amp;lt;CarriedKeyName&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element in XML encryption.","needQuote":true,"needEscape":true,"source":"Gets or sets the optional <xref uid=\"langword_csharp_&lt;CarriedKeyName&gt;\" name=\"&lt;CarriedKeyName&gt;\" href=\"\"></xref> element in XML encryption."},{"pos":[8398,9040],"content":"The `<CarriedKeyName>` element is an optional element that associates a user-readable name with a key value. This name can then be used to reference the key using the `<KeyName>` element within the `<KeyInfo>` element. The same `<CarriedKeyName>` element value, unlike an ID value, can occur multiple times within a single document. The value of the key must be the same in all `<EncryptedKey>` elements identified with the same `<CarriedKeyName>` name within an XML document. Note that because white space is significant in the value of the `<KeyName>` element, white space is also significant in the value of the `<CarriedKeyName>` element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`&lt;CarriedKeyName&gt;`</ph> element is an optional element that associates a user-readable name with a key value.","pos":[0,108],"source":"The `<CarriedKeyName>` element is an optional element that associates a user-readable name with a key value."},{"content":"This name can then be used to reference the key using the <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element within the <ph id=\"ph2\">`&lt;KeyInfo&gt;`</ph> element.","pos":[109,218],"source":" This name can then be used to reference the key using the `<KeyName>` element within the `<KeyInfo>` element."},{"content":"The same <ph id=\"ph1\">`&lt;CarriedKeyName&gt;`</ph> element value, unlike an ID value, can occur multiple times within a single document.","pos":[219,332],"source":" The same `<CarriedKeyName>` element value, unlike an ID value, can occur multiple times within a single document."},{"content":"The value of the key must be the same in all <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> elements identified with the same <ph id=\"ph2\">`&lt;CarriedKeyName&gt;`</ph> name within an XML document.","pos":[333,476],"source":" The value of the key must be the same in all `<EncryptedKey>` elements identified with the same `<CarriedKeyName>` name within an XML document."},{"content":"Note that because white space is significant in the value of the <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element, white space is also significant in the value of the <ph id=\"ph2\">`&lt;CarriedKeyName&gt;`</ph> element.","pos":[477,642],"source":" Note that because white space is significant in the value of the `<KeyName>` element, white space is also significant in the value of the `<CarriedKeyName>` element."}]},{"pos":[9695,9745],"content":"A string that represents a name for the key value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents a name for the key value.","pos":[0,50]}]},{"pos":[10237,10349],"content":"Returns the XML representation of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns the XML representation of the <xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"></xref> object."},{"pos":[10361,10423],"content":"Use this method to output the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element in XML.","needQuote":true,"needEscape":true,"source":"Use this method to output the `<EncryptedKey>` element in XML."},{"pos":[10580,10765],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedKey&amp;gt;\" name=\"&amp;lt;EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element in XML encryption.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlElement\"></xref> that represents the <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element in XML encryption."},{"pos":[10994,11135],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"></xref> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11617,11781],"content":"Loads the specified XML information into the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedKey&amp;gt;\" name=\"&amp;lt;EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element in XML encryption.","needQuote":true,"needEscape":true,"source":"Loads the specified XML information into the <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element in XML encryption."},{"pos":[11793,11955],"content":"Use this method to load an existing XML element into the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph> element represented by the &lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt; object.","needQuote":true,"needEscape":true,"source":"Use this method to load an existing XML element into the `<EncryptedKey>` element represented by the <xref:System.Security.Cryptography.Xml.EncryptedData> object."},{"pos":[12653,12843],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing an XML element to use for the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;EncryptedKey&amp;gt;\" name=\"&amp;lt;EncryptedKey&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.XmlElement\"></xref> representing an XML element to use for the <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element."},{"pos":[13027,13124],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>value</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13273,13398],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not contain a <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.CipherData\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"The <code>value</code> parameter does not contain a <xref href=\"System.Security.Cryptography.Xml.CipherData\"></xref> element."},{"pos":[13810,13935],"content":"Gets or sets the optional <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Recipient\" name=\"Recipient\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attribute in XML encryption.","needQuote":true,"needEscape":true,"source":"Gets or sets the optional <xref uid=\"langword_csharp_Recipient\" name=\"Recipient\" href=\"\"></xref> attribute in XML encryption."},{"pos":[13947,14129],"content":"The `<Recipient>` attribute is an optional attribute that contains information about which recipient this encrypted key value is intended for. Its contents are application dependent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`&lt;Recipient&gt;`</ph> attribute is an optional attribute that contains information about which recipient this encrypted key value is intended for.","pos":[0,142],"source":"The `<Recipient>` attribute is an optional attribute that contains information about which recipient this encrypted key value is intended for."},{"content":"Its contents are application dependent.","pos":[143,182]}]},{"pos":[14777,14897],"content":"A string representing the value of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Recipient\" name=\"Recipient\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attribute.","needQuote":true,"needEscape":true,"source":"A string representing the value of the <xref uid=\"langword_csharp_Recipient\" name=\"Recipient\" href=\"\"></xref> attribute."},{"pos":[15415,15553],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;ReferenceList&amp;gt;\" name=\"&amp;lt;ReferenceList&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element in XML encryption.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref uid=\"langword_csharp_&lt;ReferenceList&gt;\" name=\"&lt;ReferenceList&gt;\" href=\"\"></xref> element in XML encryption."},{"pos":[15565,15860],"content":"The `<ReferenceList>` element is an optional element that contains pointers to data and keys encrypted using this key. The reference list can contain multiple references to the `<EncryptedKey>`and `<EncryptedData>` elements using the `<KeyReference>` and `<DataReference>` elements respectively.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`&lt;ReferenceList&gt;`</ph> element is an optional element that contains pointers to data and keys encrypted using this key.","pos":[0,118],"source":"The `<ReferenceList>` element is an optional element that contains pointers to data and keys encrypted using this key."},{"content":"The reference list can contain multiple references to the <ph id=\"ph1\">`&lt;EncryptedKey&gt;`</ph>and <ph id=\"ph2\">`&lt;EncryptedData&gt;`</ph> elements using the <ph id=\"ph3\">`&lt;KeyReference&gt;`</ph> and <ph id=\"ph4\">`&lt;DataReference&gt;`</ph> elements respectively.","pos":[119,295],"source":" The reference list can contain multiple references to the `<EncryptedKey>`and `<EncryptedData>` elements using the `<KeyReference>` and `<DataReference>` elements respectively."}]},{"pos":[16580,16657],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.ReferenceList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Cryptography.Xml.ReferenceList\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Xml.EncryptedKey\n  id: EncryptedKey\n  children:\n  - System.Security.Cryptography.Xml.EncryptedKey.#ctor\n  - System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)\n  - System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)\n  - System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName\n  - System.Security.Cryptography.Xml.EncryptedKey.GetXml\n  - System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)\n  - System.Security.Cryptography.Xml.EncryptedKey.Recipient\n  - System.Security.Cryptography.Xml.EncryptedKey.ReferenceList\n  langs:\n  - csharp\n  name: EncryptedKey\n  nameWithType: EncryptedKey\n  fullName: System.Security.Cryptography.Xml.EncryptedKey\n  type: Class\n  summary: Represents the <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element in XML encryption. This class cannot be inherited.\n  remarks: \"This class represents the `<EncryptedKey>` element in XML encryption. The `<EncryptedKey>` element is used to send encryption keys. It can be created in a stand-alone XML document, be placed within an application document, or be inside an `<EncryptedData>` element as a child of a `<KeyInfo>` element. The key value is always encrypted to the recipient. When `<EncryptedKey>` is decrypted, the resulting key is made available to the `<EncryptionMethod>` algorithm without any additional processing.  \\n  \\n The `<EncryptedKey>` element is similar to the `<EncryptedData>` element of the <xref:System.Security.Cryptography.Xml.EncryptedData> class except that the data encrypted is always a key value.\"\n  example:\n  - \"The following example illustrates how to encrypt and decrypt an XML element by using the EncryptedKey class. This example then displays the values of various properties of the EncryptedKey class to the console.  \\n  \\n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/t-system.security.crypto_46_1.cs)]\\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_46_1.vb)]\"\n  syntax:\n    content: 'public sealed class EncryptedKey : System.Security.Cryptography.Xml.EncryptedType'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.Xml.EncryptedType\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)\n  - System.Security.Cryptography.Xml.EncryptedType.CipherData\n  - System.Security.Cryptography.Xml.EncryptedType.Encoding\n  - System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod\n  - System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties\n  - System.Security.Cryptography.Xml.EncryptedType.Id\n  - System.Security.Cryptography.Xml.EncryptedType.KeyInfo\n  - System.Security.Cryptography.Xml.EncryptedType.MimeType\n  - System.Security.Cryptography.Xml.EncryptedType.Type\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  langs:\n  - csharp\n  name: EncryptedKey()\n  nameWithType: EncryptedKey.EncryptedKey()\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.EncryptedKey()\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"></xref> class.\n  remarks: This constructor creates a new instance of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. For more information on XML encryption standards, see the XML Encryption Syntax and Processing document at http://www.w3.org/TR/xmlenc-core/.\n  example:\n  - \"The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \\n  \\n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_82_1.cs)]\\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_82_1.vb)]\"\n  syntax:\n    content: public EncryptedKey ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.EncryptedKey.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)\n  id: AddReference(System.Security.Cryptography.Xml.DataReference)\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  langs:\n  - csharp\n  name: AddReference(DataReference)\n  nameWithType: EncryptedKey.AddReference(DataReference)\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(DataReference)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Adds a <xref uid=\"langword_csharp_&lt;DataReference&gt; \" name=\"&lt;DataReference&gt; \" href=\"\"></xref>element to the <xref uid=\"langword_csharp_&lt;ReferenceList&gt;\" name=\"&lt;ReferenceList&gt;\" href=\"\"></xref> element.\n  remarks: This method adds a <xref:System.Security.Cryptography.Xml.DataReference> object to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> property of the <xref:System.Security.Cryptography.Xml.EncryptedKey> object. The `<DataReference>` element points to encrypted data that was encrypted using the key specified in the `<EncryptedKey>` element.\n  syntax:\n    content: public void AddReference (System.Security.Cryptography.Xml.DataReference dataReference);\n    parameters:\n    - id: dataReference\n      type: System.Security.Cryptography.Xml.DataReference\n      description: A <xref href=\"System.Security.Cryptography.Xml.DataReference\"></xref> object to add to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*> property.\n  overload: System.Security.Cryptography.Xml.EncryptedKey.AddReference*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)\n  id: AddReference(System.Security.Cryptography.Xml.KeyReference)\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  langs:\n  - csharp\n  name: AddReference(KeyReference)\n  nameWithType: EncryptedKey.AddReference(KeyReference)\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(KeyReference)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Adds a <xref uid=\"langword_csharp_&lt;KeyReference&gt; \" name=\"&lt;KeyReference&gt; \" href=\"\"></xref>element to the <xref uid=\"langword_csharp_&lt;ReferenceList&gt;\" name=\"&lt;ReferenceList&gt;\" href=\"\"></xref> element.\n  remarks: This method adds A <xref:System.Security.Cryptography.Xml.KeyReference> object to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> property of the <xref:System.Security.Cryptography.Xml.EncryptedKey> object. The `<KeyReference>` element points to an encrypted key that was encrypted using the key specified in the `<EncryptedKey>` element.\n  syntax:\n    content: public void AddReference (System.Security.Cryptography.Xml.KeyReference keyReference);\n    parameters:\n    - id: keyReference\n      type: System.Security.Cryptography.Xml.KeyReference\n      description: A <xref href=\"System.Security.Cryptography.Xml.KeyReference\"></xref> object to add to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*> property.\n  overload: System.Security.Cryptography.Xml.EncryptedKey.AddReference*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName\n  id: CarriedKeyName\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  langs:\n  - csharp\n  name: CarriedKeyName\n  nameWithType: EncryptedKey.CarriedKeyName\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the optional <xref uid=\"langword_csharp_&lt;CarriedKeyName&gt;\" name=\"&lt;CarriedKeyName&gt;\" href=\"\"></xref> element in XML encryption.\n  remarks: The `<CarriedKeyName>` element is an optional element that associates a user-readable name with a key value. This name can then be used to reference the key using the `<KeyName>` element within the `<KeyInfo>` element. The same `<CarriedKeyName>` element value, unlike an ID value, can occur multiple times within a single document. The value of the key must be the same in all `<EncryptedKey>` elements identified with the same `<CarriedKeyName>` name within an XML document. Note that because white space is significant in the value of the `<KeyName>` element, white space is also significant in the value of the `<CarriedKeyName>` element.\n  example:\n  - \"The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \\n  \\n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_109_1.cs)]\\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_109_1.vb)]\"\n  syntax:\n    content: public string CarriedKeyName { get; set; }\n    return:\n      type: System.String\n      description: A string that represents a name for the key value.\n  overload: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml\n  id: GetXml\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  langs:\n  - csharp\n  name: GetXml()\n  nameWithType: EncryptedKey.GetXml()\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.GetXml()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns the XML representation of the <xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"></xref> object.\n  remarks: Use this method to output the `<EncryptedKey>` element in XML.\n  syntax:\n    content: public override System.Xml.XmlElement GetXml ();\n    parameters: []\n    return:\n      type: System.Xml.XmlElement\n      description: An <xref href=\"System.Xml.XmlElement\"></xref> that represents the <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element in XML encryption.\n  overload: System.Security.Cryptography.Xml.EncryptedKey.GetXml*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The <xref href=\"System.Security.Cryptography.Xml.EncryptedKey\"></xref> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)\n  id: LoadXml(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  langs:\n  - csharp\n  name: LoadXml(XmlElement)\n  nameWithType: EncryptedKey.LoadXml(XmlElement)\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(XmlElement)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Loads the specified XML information into the <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element in XML encryption.\n  remarks: Use this method to load an existing XML element into the `<EncryptedKey>` element represented by the <xref:System.Security.Cryptography.Xml.EncryptedData> object.\n  example:\n  - \"The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \\n  \\n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_79_1.cs)]\\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_79_1.vb)]\"\n  syntax:\n    content: public override void LoadXml (System.Xml.XmlElement value);\n    parameters:\n    - id: value\n      type: System.Xml.XmlElement\n      description: An <xref href=\"System.Xml.XmlElement\"></xref> representing an XML element to use for the <xref uid=\"langword_csharp_&lt;EncryptedKey&gt;\" name=\"&lt;EncryptedKey&gt;\" href=\"\"></xref> element.\n  overload: System.Security.Cryptography.Xml.EncryptedKey.LoadXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>value</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The <code>value</code> parameter does not contain a <xref href=\"System.Security.Cryptography.Xml.CipherData\"></xref> element.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient\n  id: Recipient\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  langs:\n  - csharp\n  name: Recipient\n  nameWithType: EncryptedKey.Recipient\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.Recipient\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the optional <xref uid=\"langword_csharp_Recipient\" name=\"Recipient\" href=\"\"></xref> attribute in XML encryption.\n  remarks: The `<Recipient>` attribute is an optional attribute that contains information about which recipient this encrypted key value is intended for. Its contents are application dependent.\n  example:\n  - \"The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \\n  \\n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_92_1.cs)]\\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_92_1.vb)]\"\n  syntax:\n    content: public string Recipient { get; set; }\n    return:\n      type: System.String\n      description: A string representing the value of the <xref uid=\"langword_csharp_Recipient\" name=\"Recipient\" href=\"\"></xref> attribute.\n  overload: System.Security.Cryptography.Xml.EncryptedKey.Recipient*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList\n  id: ReferenceList\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  langs:\n  - csharp\n  name: ReferenceList\n  nameWithType: EncryptedKey.ReferenceList\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the <xref uid=\"langword_csharp_&lt;ReferenceList&gt;\" name=\"&lt;ReferenceList&gt;\" href=\"\"></xref> element in XML encryption.\n  remarks: The `<ReferenceList>` element is an optional element that contains pointers to data and keys encrypted using this key. The reference list can contain multiple references to the `<EncryptedKey>`and `<EncryptedData>` elements using the `<KeyReference>` and `<DataReference>` elements respectively.\n  example:\n  - \"The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \\n  \\n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_50_1.cs)]\\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_50_1.vb)]\"\n  syntax:\n    content: public System.Security.Cryptography.Xml.ReferenceList ReferenceList { get; }\n    return:\n      type: System.Security.Cryptography.Xml.ReferenceList\n      description: A <xref href=\"System.Security.Cryptography.Xml.ReferenceList\"></xref> object.\n  overload: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.Xml.EncryptedType\n  isExternal: false\n  name: System.Security.Cryptography.Xml.EncryptedType\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: EncryptedKey()\n  nameWithType: EncryptedKey.EncryptedKey()\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.EncryptedKey()\n- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: AddReference(DataReference)\n  nameWithType: EncryptedKey.AddReference(DataReference)\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(DataReference)\n- uid: System.Security.Cryptography.Xml.DataReference\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: DataReference\n  nameWithType: DataReference\n  fullName: System.Security.Cryptography.Xml.DataReference\n- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: AddReference(KeyReference)\n  nameWithType: EncryptedKey.AddReference(KeyReference)\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(KeyReference)\n- uid: System.Security.Cryptography.Xml.KeyReference\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: KeyReference\n  nameWithType: KeyReference\n  fullName: System.Security.Cryptography.Xml.KeyReference\n- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: CarriedKeyName\n  nameWithType: EncryptedKey.CarriedKeyName\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: GetXml()\n  nameWithType: EncryptedKey.GetXml()\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.GetXml()\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: LoadXml(XmlElement)\n  nameWithType: EncryptedKey.LoadXml(XmlElement)\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(XmlElement)\n- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: Recipient\n  nameWithType: EncryptedKey.Recipient\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.Recipient\n- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: ReferenceList\n  nameWithType: EncryptedKey.ReferenceList\n  fullName: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList\n- uid: System.Security.Cryptography.Xml.ReferenceList\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: ReferenceList\n  nameWithType: ReferenceList\n  fullName: System.Security.Cryptography.Xml.ReferenceList\n- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor*\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: EncryptedKey\n  nameWithType: EncryptedKey.EncryptedKey\n- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference*\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: AddReference\n  nameWithType: EncryptedKey.AddReference\n- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName*\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: CarriedKeyName\n  nameWithType: EncryptedKey.CarriedKeyName\n- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml*\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: GetXml\n  nameWithType: EncryptedKey.GetXml\n- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml*\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: LoadXml\n  nameWithType: EncryptedKey.LoadXml\n- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient*\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: Recipient\n  nameWithType: EncryptedKey.Recipient\n- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*\n  parent: System.Security.Cryptography.Xml.EncryptedKey\n  isExternal: false\n  name: ReferenceList\n  nameWithType: EncryptedKey.ReferenceList\n"}