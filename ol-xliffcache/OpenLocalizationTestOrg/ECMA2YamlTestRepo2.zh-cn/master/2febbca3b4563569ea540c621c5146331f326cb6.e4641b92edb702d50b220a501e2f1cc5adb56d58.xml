{"nodes":[{"pos":[1625,1822],"content":"The MediaPermission describes a set of security permissions that controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The MediaPermission describes a set of security permissions that controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application.","pos":[0,197]}]},{"pos":[1834,2060],"content":"This permission uses the values of the <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo> enumerations.","needQuote":true,"needEscape":true,"nodes":[{"content":"This permission uses the values of the &lt;xref:System.Security.Permissions.MediaPermissionAudio&gt;, &lt;xref:System.Security.Permissions.MediaPermissionImage&gt;, and &lt;xref:System.Security.Permissions.MediaPermissionVideo&gt; enumerations.","pos":[0,226],"source":"This permission uses the values of the <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo> enumerations."}]},{"pos":[3373,3478],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class."},{"pos":[4208,4354],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying the audio permission level.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the audio permission level."},{"pos":[4366,4537],"content":"The default values for image and video permissions are <xref:System.Security.Permissions.MediaPermissionImage> and <xref:System.Security.Permissions.MediaPermissionVideo>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default values for image and video permissions are &lt;xref:System.Security.Permissions.MediaPermissionImage&gt; and &lt;xref:System.Security.Permissions.MediaPermissionVideo&gt;.","pos":[0,171],"source":"The default values for image and video permissions are <xref:System.Security.Permissions.MediaPermissionImage> and <xref:System.Security.Permissions.MediaPermissionVideo>."}]},{"pos":[5264,5357],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionAudio\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionAudio\"></xref>."},{"pos":[6018,6164],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying the image permission level.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the image permission level."},{"pos":[6176,6347],"content":"The default values for audio and video permissions are <xref:System.Security.Permissions.MediaPermissionAudio> and <xref:System.Security.Permissions.MediaPermissionVideo>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default values for audio and video permissions are &lt;xref:System.Security.Permissions.MediaPermissionAudio&gt; and &lt;xref:System.Security.Permissions.MediaPermissionVideo&gt;.","pos":[0,171],"source":"The default values for audio and video permissions are <xref:System.Security.Permissions.MediaPermissionAudio> and <xref:System.Security.Permissions.MediaPermissionVideo>."}]},{"pos":[7074,7167],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionImage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionImage\"></xref>."},{"pos":[7828,7974],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying the video permission level.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the video permission level."},{"pos":[7986,8157],"content":"The default values for audio and image permissions are <xref:System.Security.Permissions.MediaPermissionAudio> and <xref:System.Security.Permissions.MediaPermissionImage>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default values for audio and image permissions are &lt;xref:System.Security.Permissions.MediaPermissionAudio&gt; and &lt;xref:System.Security.Permissions.MediaPermissionImage&gt;.","pos":[0,171],"source":"The default values for audio and image permissions are <xref:System.Security.Permissions.MediaPermissionAudio> and <xref:System.Security.Permissions.MediaPermissionImage>."}]},{"pos":[8884,8977],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionVideo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionVideo\"></xref>."},{"pos":[9613,9751],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying a permission state.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying a permission state."},{"pos":[9763,10052],"content":"If `state` is set to <xref:System.Security.Permissions.PermissionState>, all media types are granted full permission to play or display with no restrictions. If `state` is set to <xref:System.Security.Permissions.PermissionState>, all media types are restricted from playing or displaying.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <ph id=\"ph1\">`state`</ph> is set to &lt;xref:System.Security.Permissions.PermissionState&gt;, all media types are granted full permission to play or display with no restrictions.","pos":[0,157],"source":"If `state` is set to <xref:System.Security.Permissions.PermissionState>, all media types are granted full permission to play or display with no restrictions."},{"content":"If <ph id=\"ph1\">`state`</ph> is set to &lt;xref:System.Security.Permissions.PermissionState&gt;, all media types are restricted from playing or displaying.","pos":[158,289],"source":" If `state` is set to <xref:System.Security.Permissions.PermissionState>, all media types are restricted from playing or displaying."}]},{"pos":[10744,10832],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."},{"pos":[11815,11980],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying the audio, video, and image permission levels.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the audio, video, and image permission levels."},{"pos":[12969,13062],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionAudio\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionAudio\"></xref>."},{"pos":[13169,13262],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionVideo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionVideo\"></xref>."},{"pos":[13369,13462],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionImage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionImage\"></xref>."},{"pos":[13922,13975],"content":"Gets the current value of the audio permission level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current value of the audio permission level.","pos":[0,53]}]},{"pos":[14671,14698],"content":"The audio permission level.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audio permission level.","pos":[0,27]}]},{"pos":[15157,15221],"content":"Creates and returns an identical copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]},{"pos":[15233,15323],"content":"A copy of a permission represents the same access to resources as the original permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.","pos":[0,90]}]},{"pos":[15490,15523],"content":"A copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]},{"pos":[16107,16177],"content":"Reconstructs a permission with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]},{"pos":[16386,16440],"content":"The XML encoding to use to reconstruct the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the permission.","pos":[0,54]}]},{"pos":[16902,16955],"content":"Gets the current value of the image permission level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current value of the image permission level.","pos":[0,53]}]},{"pos":[17651,17678],"content":"The image permission level.","needQuote":true,"needEscape":true,"nodes":[{"content":"The image permission level.","pos":[0,27]}]},{"pos":[18253,18366],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]},{"pos":[18574,18683],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]},{"pos":[18755,18964],"content":"The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.","pos":[0,209],"nodes":[{"content":"The intersection of two permissions is a permission that describes the state that they both describe in common.","pos":[0,111]},{"content":"Only a demand that passes both original permissions will be valid for the intersected permission.","pos":[112,209]}]}]},{"pos":[19548,19630],"content":"Determines whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]},{"pos":[20282,20412],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]},{"pos":[20471,20673],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21187,21261],"content":"Returns a value indicating whether the current permission is unrestricted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]},{"pos":[21273,21511],"content":"The return value is <ph id=\"ph1\">`true`</ph> when the media permission values are &lt;xref:System.Security.Permissions.MediaPermissionAudio&gt;, &lt;xref:System.Security.Permissions.MediaPermissionImage&gt;, and &lt;xref:System.Security.Permissions.MediaPermissionVideo&gt;.","needQuote":true,"needEscape":true,"source":"The return value is `true` when the media permission values are <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo>."},{"pos":[22097,22297],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the audio, image, and video permissions are all unrestricted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audio, image, and video permissions are all unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22770,22834],"content":"Creates an XML encoding of the permission and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]},{"pos":[23010,23077],"content":"An XML encoding of the permission, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]},{"pos":[23632,23726],"content":"Creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]},{"pos":[23930,24037],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[24109,24207],"content":"A new permission that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]},{"pos":[24667,24720],"content":"Gets the current value of the video permission level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current value of the video permission level.","pos":[0,53]}]},{"pos":[25416,25443],"content":"The media permission level.","needQuote":true,"needEscape":true,"nodes":[{"content":"The media permission level.","pos":[0,27]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.MediaPermission\n  id: MediaPermission\n  children:\n  - System.Security.Permissions.MediaPermission.#ctor\n  - System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)\n  - System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)\n  - System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)\n  - System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)\n  - System.Security.Permissions.MediaPermission.Audio\n  - System.Security.Permissions.MediaPermission.Copy\n  - System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.MediaPermission.Image\n  - System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.MediaPermission.IsUnrestricted\n  - System.Security.Permissions.MediaPermission.ToXml\n  - System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)\n  - System.Security.Permissions.MediaPermission.Video\n  langs:\n  - csharp\n  name: MediaPermission\n  nameWithType: MediaPermission\n  fullName: System.Security.Permissions.MediaPermission\n  type: Class\n  summary: The MediaPermission describes a set of security permissions that controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application.\n  remarks: This permission uses the values of the <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo> enumerations.\n  syntax:\n    content: 'public sealed class MediaPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.#ctor\n  id: '#ctor'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission()\n  nameWithType: MediaPermission.MediaPermission()\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class.\n  syntax:\n    content: public MediaPermission ();\n    parameters: []\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)\n  id: '#ctor(System.Security.Permissions.MediaPermissionAudio)'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission(MediaPermissionAudio)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionAudio)\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission(MediaPermissionAudio)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the audio permission level.\n  remarks: The default values for image and video permissions are <xref:System.Security.Permissions.MediaPermissionImage> and <xref:System.Security.Permissions.MediaPermissionVideo>.\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.MediaPermissionAudio> value.  \\n  \\n [!code-vb[SecurityPermissionsSnippets#MediaPermission1](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission1)]\\n [!code-cs[SecurityPermissionsSnippets#MediaPermission1](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission1)]\"\n  syntax:\n    content: public MediaPermission (System.Security.Permissions.MediaPermissionAudio permissionAudio);\n    parameters:\n    - id: permissionAudio\n      type: System.Security.Permissions.MediaPermissionAudio\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionAudio\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)\n  id: '#ctor(System.Security.Permissions.MediaPermissionImage)'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission(MediaPermissionImage)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionImage)\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission(MediaPermissionImage)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the image permission level.\n  remarks: The default values for audio and video permissions are <xref:System.Security.Permissions.MediaPermissionAudio> and <xref:System.Security.Permissions.MediaPermissionVideo>.\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.MediaPermissionImage> value.  \\n  \\n [!code-vb[SecurityPermissionsSnippets#MediaPermission2](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission2)]\\n [!code-cs[SecurityPermissionsSnippets#MediaPermission2](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission2)]\"\n  syntax:\n    content: public MediaPermission (System.Security.Permissions.MediaPermissionImage permissionImage);\n    parameters:\n    - id: permissionImage\n      type: System.Security.Permissions.MediaPermissionImage\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionImage\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)\n  id: '#ctor(System.Security.Permissions.MediaPermissionVideo)'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission(MediaPermissionVideo)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionVideo)\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission(MediaPermissionVideo)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the video permission level.\n  remarks: The default values for audio and image permissions are <xref:System.Security.Permissions.MediaPermissionAudio> and <xref:System.Security.Permissions.MediaPermissionImage>.\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.MediaPermissionVideo> value.  \\n  \\n [!code-vb[SecurityPermissionsSnippets#MediaPermission3](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission3)]\\n [!code-cs[SecurityPermissionsSnippets#MediaPermission3](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission3)]\"\n  syntax:\n    content: public MediaPermission (System.Security.Permissions.MediaPermissionVideo permissionVideo);\n    parameters:\n    - id: permissionVideo\n      type: System.Security.Permissions.MediaPermissionVideo\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionVideo\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission(PermissionState)\n  nameWithType: MediaPermission.MediaPermission(PermissionState)\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying a permission state.\n  remarks: If `state` is set to <xref:System.Security.Permissions.PermissionState>, all media types are granted full permission to play or display with no restrictions. If `state` is set to <xref:System.Security.Permissions.PermissionState>, all media types are restricted from playing or displaying.\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.PermissionState> value.  \\n  \\n [!code-vb[SecurityPermissionsSnippets#MediaPermission4](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission4)]\\n [!code-cs[SecurityPermissionsSnippets#MediaPermission4](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission4)]\"\n  syntax:\n    content: public MediaPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: An enumerated value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)\n  id: '#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission(MediaPermissionAudio,MediaPermissionVideo,MediaPermissionImage)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionAudio,MediaPermissionVideo,MediaPermissionImage)\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission(MediaPermissionAudio,MediaPermissionVideo,MediaPermissionImage)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the audio, video, and image permission levels.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionVideo>, and <xref:System.Security.Permissions.MediaPermissionImage> values  \\n  \\n [!code-vb[SecurityPermissionsSnippets#MediaPermission5](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission5)]\\n [!code-cs[SecurityPermissionsSnippets#MediaPermission5](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission5)]\"\n  syntax:\n    content: public MediaPermission (System.Security.Permissions.MediaPermissionAudio permissionAudio, System.Security.Permissions.MediaPermissionVideo permissionVideo, System.Security.Permissions.MediaPermissionImage permissionImage);\n    parameters:\n    - id: permissionAudio\n      type: System.Security.Permissions.MediaPermissionAudio\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionAudio\"></xref>.\n    - id: permissionVideo\n      type: System.Security.Permissions.MediaPermissionVideo\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionVideo\"></xref>.\n    - id: permissionImage\n      type: System.Security.Permissions.MediaPermissionImage\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionImage\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.Audio\n  id: Audio\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Audio\n  nameWithType: MediaPermission.Audio\n  fullName: System.Security.Permissions.MediaPermission.Audio\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Gets the current value of the audio permission level.\n  remarks: ''\n  example:\n  - \"The following code example shows how to retrieve the <xref:System.Security.Permissions.MediaPermissionAudio> value for the <xref:System.Security.Permissions.MediaPermission>.  \\n  \\n [!code-vb[SecurityPermissionsSnippets#MediaPermission6](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission6)]\\n [!code-cs[SecurityPermissionsSnippets#MediaPermission6](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission6)]\"\n  syntax:\n    content: public System.Security.Permissions.MediaPermissionAudio Audio { get; }\n    return:\n      type: System.Security.Permissions.MediaPermissionAudio\n      description: The audio permission level.\n  overload: System.Security.Permissions.MediaPermission.Audio*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: MediaPermission.Copy()\n  fullName: System.Security.Permissions.MediaPermission.Copy()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of a permission represents the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.MediaPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: MediaPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.MediaPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the permission.\n  overload: System.Security.Permissions.MediaPermission.FromXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.Image\n  id: Image\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Image\n  nameWithType: MediaPermission.Image\n  fullName: System.Security.Permissions.MediaPermission.Image\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Gets the current value of the image permission level.\n  remarks: ''\n  example:\n  - \"The following code example shows how to retrieve the <xref:System.Security.Permissions.MediaPermissionImage> value for the <xref:System.Security.Permissions.MediaPermission>.  \\n  \\n [!code-vb[SecurityPermissionsSnippets#MediaPermission7](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission7)]\\n [!code-cs[SecurityPermissionsSnippets#MediaPermission7](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission7)]\"\n  syntax:\n    content: public System.Security.Permissions.MediaPermissionImage Image { get; }\n    return:\n      type: System.Security.Permissions.MediaPermissionImage\n      description: The image permission level.\n  overload: System.Security.Permissions.MediaPermission.Image*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: MediaPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.MediaPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.\n  overload: System.Security.Permissions.MediaPermission.Intersect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: MediaPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.MediaPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: \"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\\\example.txt is a subset of a permission that represents access to C:\\\\\\\\.  \\n  \\n If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.IsSubsetOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: MediaPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.MediaPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: The return value is `true` when the media permission values are <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo>.\n  example:\n  - \"The following code example shows how to determine whether the <xref:System.Security.Permissions.MediaPermission> is unrestricted.  \\n  \\n [!code-vb[SecurityPermissionsSnippets#MediaPermission16](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission16)]\\n [!code-cs[SecurityPermissionsSnippets#MediaPermission16](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission16)]\"\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audio, image, and video permissions are all unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: MediaPermission.ToXml()\n  fullName: System.Security.Permissions.MediaPermission.ToXml()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.MediaPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: MediaPermission.Union(IPermission)\n  fullName: System.Security.Permissions.MediaPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.MediaPermission.Union*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.MediaPermission.Video\n  id: Video\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Video\n  nameWithType: MediaPermission.Video\n  fullName: System.Security.Permissions.MediaPermission.Video\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Gets the current value of the video permission level.\n  remarks: ''\n  example:\n  - \"The following code example shows how to retrieve the <xref:System.Security.Permissions.MediaPermissionVideo> value for the <xref:System.Security.Permissions.MediaPermission>.  \\n  \\n [!code-vb[SecurityPermissionsSnippets#MediaPermission8](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermission8)]\\n [!code-cs[SecurityPermissionsSnippets#MediaPermission8](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermission8)]\"\n  syntax:\n    content: public System.Security.Permissions.MediaPermissionVideo Video { get; }\n    return:\n      type: System.Security.Permissions.MediaPermissionVideo\n      description: The media permission level.\n  overload: System.Security.Permissions.MediaPermission.Video*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.Security.Permissions.MediaPermission.#ctor\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission()\n  nameWithType: MediaPermission.MediaPermission()\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission()\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission(MediaPermissionAudio)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionAudio)\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission(MediaPermissionAudio)\n- uid: System.Security.Permissions.MediaPermissionAudio\n  parent: System.Security.Permissions\n  isExternal: false\n  name: MediaPermissionAudio\n  nameWithType: MediaPermissionAudio\n  fullName: System.Security.Permissions.MediaPermissionAudio\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission(MediaPermissionImage)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionImage)\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission(MediaPermissionImage)\n- uid: System.Security.Permissions.MediaPermissionImage\n  parent: System.Security.Permissions\n  isExternal: false\n  name: MediaPermissionImage\n  nameWithType: MediaPermissionImage\n  fullName: System.Security.Permissions.MediaPermissionImage\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission(MediaPermissionVideo)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionVideo)\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission(MediaPermissionVideo)\n- uid: System.Security.Permissions.MediaPermissionVideo\n  parent: System.Security.Permissions\n  isExternal: false\n  name: MediaPermissionVideo\n  nameWithType: MediaPermissionVideo\n  fullName: System.Security.Permissions.MediaPermissionVideo\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission(PermissionState)\n  nameWithType: MediaPermission.MediaPermission(PermissionState)\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission(MediaPermissionAudio,MediaPermissionVideo,MediaPermissionImage)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionAudio,MediaPermissionVideo,MediaPermissionImage)\n  fullName: System.Security.Permissions.MediaPermission.MediaPermission(MediaPermissionAudio,MediaPermissionVideo,MediaPermissionImage)\n- uid: System.Security.Permissions.MediaPermission.Audio\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Audio\n  nameWithType: MediaPermission.Audio\n  fullName: System.Security.Permissions.MediaPermission.Audio\n- uid: System.Security.Permissions.MediaPermission.Copy\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: MediaPermission.Copy()\n  fullName: System.Security.Permissions.MediaPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: MediaPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.MediaPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.MediaPermission.Image\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Image\n  nameWithType: MediaPermission.Image\n  fullName: System.Security.Permissions.MediaPermission.Image\n- uid: System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: MediaPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.MediaPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: MediaPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.MediaPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.MediaPermission.IsUnrestricted\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: MediaPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.MediaPermission.IsUnrestricted()\n- uid: System.Security.Permissions.MediaPermission.ToXml\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: MediaPermission.ToXml()\n  fullName: System.Security.Permissions.MediaPermission.ToXml()\n- uid: System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: MediaPermission.Union(IPermission)\n  fullName: System.Security.Permissions.MediaPermission.Union(IPermission)\n- uid: System.Security.Permissions.MediaPermission.Video\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Video\n  nameWithType: MediaPermission.Video\n  fullName: System.Security.Permissions.MediaPermission.Video\n- uid: System.Security.Permissions.MediaPermission.#ctor*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission\n  nameWithType: MediaPermission.MediaPermission\n- uid: System.Security.Permissions.MediaPermission.Audio*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Audio\n  nameWithType: MediaPermission.Audio\n- uid: System.Security.Permissions.MediaPermission.Copy*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Copy\n  nameWithType: MediaPermission.Copy\n- uid: System.Security.Permissions.MediaPermission.FromXml*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: MediaPermission.FromXml\n- uid: System.Security.Permissions.MediaPermission.Image*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Image\n  nameWithType: MediaPermission.Image\n- uid: System.Security.Permissions.MediaPermission.Intersect*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: MediaPermission.Intersect\n- uid: System.Security.Permissions.MediaPermission.IsSubsetOf*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: MediaPermission.IsSubsetOf\n- uid: System.Security.Permissions.MediaPermission.IsUnrestricted*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: MediaPermission.IsUnrestricted\n- uid: System.Security.Permissions.MediaPermission.ToXml*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: MediaPermission.ToXml\n- uid: System.Security.Permissions.MediaPermission.Union*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Union\n  nameWithType: MediaPermission.Union\n- uid: System.Security.Permissions.MediaPermission.Video*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Video\n  nameWithType: MediaPermission.Video\n"}