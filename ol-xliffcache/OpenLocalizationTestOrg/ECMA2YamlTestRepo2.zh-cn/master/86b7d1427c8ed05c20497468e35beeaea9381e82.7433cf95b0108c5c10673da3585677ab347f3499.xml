{"nodes":[{"pos":[1273,1348],"content":"Represents a sequence number assigned to a log record in a record sequence.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a sequence number assigned to a log record in a record sequence.","pos":[0,75]}]},{"pos":[1360,1554],"content":"Each log record in a sequence is assigned a sequence number greater than the sequence numbers of the records appended before it. A sequence number can be compared, but not otherwise manipulated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Each log record in a sequence is assigned a sequence number greater than the sequence numbers of the records appended before it. A sequence number can be compared, but not otherwise manipulated.","pos":[0,194],"nodes":[{"content":"Each log record in a sequence is assigned a sequence number greater than the sequence numbers of the records appended before it.","pos":[0,128]},{"content":"A sequence number can be compared, but not otherwise manipulated.","pos":[129,194]}]}]},{"pos":[2163,2253],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.Log.SequenceNumber\"></xref> class."},{"pos":[2410,2449],"content":"Bytes that make up the sequence number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Bytes that make up the sequence number.","pos":[0,39]}]},{"pos":[2606,2704],"content":"<ph id=\"ph1\">&lt;code&gt;sequenceNumber&lt;/code&gt;</ph> is of the wrong length, or does not represent a valid sequence number.","needQuote":true,"needEscape":true,"source":"<code>sequenceNumber</code> is of the wrong length, or does not represent a valid sequence number."},{"pos":[3152,3206],"content":"Compares this sequence number with a specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares this sequence number with a specified object.","pos":[0,54]}]},{"pos":[3381,3437],"content":"An object that evaluates to the current sequence number.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that evaluates to the current sequence number.","pos":[0,56]}]},{"pos":[3495,3998],"content":"A 32-bit signed integer indicating the lexical relationship between the two comparands.       <table><tbody><tr><td> Value       </td><td> Condition       </td></tr><tr><td> Less than zero       </td><td> This instance is less than <code>other</code>.       </td></tr><tr><td> Zero       </td><td> This instance is equal to <code>other</code>.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than <code>other</code>.       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer indicating the lexical relationship between the two comparands.       ","pos":[0,94],"nodes":[{"content":"A 32-bit signed integer indicating the lexical relationship between the two comparands.","pos":[0,87]}]},{"content":"Value","pos":[117,122]},{"content":"Condition","pos":[139,148]},{"content":"Less than zero","pos":[174,188]},{"content":" This instance is less than <code>other</code>.       ","pos":[204,258],"nodes":[{"content":"This instance is less than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,47],"source":" This instance is less than <code>other</code>."}]},{"content":"Zero","pos":[277,281]},{"content":" This instance is equal to <code>other</code>.       ","pos":[297,350],"nodes":[{"content":"This instance is equal to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,46],"source":" This instance is equal to <code>other</code>."}]},{"content":"Greater than zero","pos":[369,386]},{"content":" This instance is greater than <code>other</code>.       ","pos":[402,459],"nodes":[{"content":"This instance is greater than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,50],"source":" This instance is greater than <code>other</code>."}]}]},{"pos":[4501,4575],"content":"Indicates whether this instance and a specified sequence number are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether this instance and a specified sequence number are equal.","pos":[0,74]}]},{"pos":[4748,4820],"content":"Another <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to.","needQuote":true,"needEscape":true,"source":"Another <xref href=\"System.IO.Log.SequenceNumber\"></xref> to compare to."},{"pos":[4879,5080],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> and this instance represent the same value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> and this instance represent the same value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5525,5590],"content":"Indicates whether this instance and a specified object are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether this instance and a specified object are equal.","pos":[0,65]}]},{"pos":[5735,5764],"content":"Another object to compare to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Another object to compare to.","pos":[0,29]}]},{"pos":[5823,6046],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> and this instance are the same type and represent the same value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> and this instance are the same type and represent the same value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6453,6522],"content":"Encodes all or part of the current sequence number into a byte array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encodes all or part of the current sequence number into a byte array.","pos":[0,69]}]},{"pos":[6649,6716],"content":"A byte array containing all or part of the current sequence number.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array containing all or part of the current sequence number.","pos":[0,67]}]},{"pos":[7140,7180],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[7315,7349],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[7752,7850],"content":"Gets a sequence number that serves as a default value for representing an invalid sequence number.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a sequence number that serves as a default value for representing an invalid sequence number.","pos":[0,98]}]},{"pos":[8006,8185],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> initialized to UInt64.&lt;xref:System.UInt64.MaxValue&gt; that serves as a default value for representing an invalid sequence number.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IO.Log.SequenceNumber\"></xref> initialized to UInt64.<xref:System.UInt64.MaxValue> that serves as a default value for representing an invalid sequence number."},{"pos":[8815,8924],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances to determine whether they are equal."},{"pos":[9136,9223],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the left side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator."},{"pos":[9297,9385],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the right side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator."},{"pos":[9444,9658],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if both <bpt id=\"p2\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10307,10462],"content":"Performs a logical comparison of two <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of two <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances to determine whether the first is greater than the second."},{"pos":[10677,10764],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the left side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator."},{"pos":[10838,10926],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the right side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator."},{"pos":[10985,11179],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than the second instance, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11866,12033],"content":"Performs a logical comparison of two <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of two <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances to determine whether the first is greater than or equal to the second."},{"pos":[12255,12342],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the left side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator."},{"pos":[12416,12504],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the right side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator."},{"pos":[12563,12769],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than or equal to the second instance, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13423,13536],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances to determine whether they are not equal.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances to determine whether they are not equal."},{"pos":[13750,13837],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the left side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator."},{"pos":[13911,13999],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the right side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator."},{"pos":[14058,14276],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if both <bpt id=\"p2\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances are not equal, otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances are not equal, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14912,15069],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.IO.Log.SequenceNumber\"></xref> parameters to determine whether the first is less than the second."},{"pos":[15281,15368],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the left side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator."},{"pos":[15442,15530],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the right side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator."},{"pos":[15589,15780],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the first instance is less than the second instance, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than the second instance, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16449,16618],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.IO.Log.SequenceNumber\"></xref> parameters to determine whether the first is less than or equal to the second."},{"pos":[16837,16924],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the left side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator."},{"pos":[16998,17086],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.SequenceNumber\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the right side of the operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator."},{"pos":[17145,17348],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than or equal to the second instance, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Log.SequenceNumber\n  id: SequenceNumber\n  children:\n  - System.IO.Log.SequenceNumber.#ctor(System.Byte[])\n  - System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)\n  - System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)\n  - System.IO.Log.SequenceNumber.Equals(System.Object)\n  - System.IO.Log.SequenceNumber.GetBytes\n  - System.IO.Log.SequenceNumber.GetHashCode\n  - System.IO.Log.SequenceNumber.Invalid\n  - System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  - System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  - System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  - System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  - System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  - System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  langs:\n  - csharp\n  name: SequenceNumber\n  nameWithType: SequenceNumber\n  fullName: System.IO.Log.SequenceNumber\n  type: Struct\n  summary: Represents a sequence number assigned to a log record in a record sequence.\n  remarks: Each log record in a sequence is assigned a sequence number greater than the sequence numbers of the records appended before it. A sequence number can be compared, but not otherwise manipulated.\n  syntax:\n    content: 'public struct SequenceNumber : IComparable<System.IO.Log.SequenceNumber>'\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IComparable<System.IO.Log.SequenceNumber>\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: SequenceNumber(Byte[])\n  nameWithType: SequenceNumber.SequenceNumber(Byte[])\n  fullName: System.IO.Log.SequenceNumber.SequenceNumber(Byte[])\n  type: Constructor\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Initializes a new instance of the <xref href=\"System.IO.Log.SequenceNumber\"></xref> class.\n  syntax:\n    content: public SequenceNumber (byte[] sequenceNumber);\n    parameters:\n    - id: sequenceNumber\n      type: System.Byte[]\n      description: Bytes that make up the sequence number.\n  overload: System.IO.Log.SequenceNumber.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>sequenceNumber</code> is of the wrong length, or does not represent a valid sequence number.\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)\n  id: CompareTo(System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: CompareTo(SequenceNumber)\n  nameWithType: SequenceNumber.CompareTo(SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.CompareTo(SequenceNumber)\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Compares this sequence number with a specified object.\n  syntax:\n    content: public int CompareTo (System.IO.Log.SequenceNumber other);\n    parameters:\n    - id: other\n      type: System.IO.Log.SequenceNumber\n      description: An object that evaluates to the current sequence number.\n    return:\n      type: System.Int32\n      description: \"A 32-bit signed integer indicating the lexical relationship between the two comparands.  \\n  \\n <table><tbody><tr><td> Value  \\n  \\n </td><td> Condition  \\n  \\n </td></tr><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than <code>other</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is equal to <code>other</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than <code>other</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.IO.Log.SequenceNumber.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)\n  id: Equals(System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: Equals(SequenceNumber)\n  nameWithType: SequenceNumber.Equals(SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.Equals(SequenceNumber)\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Indicates whether this instance and a specified sequence number are equal.\n  syntax:\n    content: public bool Equals (System.IO.Log.SequenceNumber other);\n    parameters:\n    - id: other\n      type: System.IO.Log.SequenceNumber\n      description: Another <xref href=\"System.IO.Log.SequenceNumber\"></xref> to compare to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> and this instance represent the same value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.SequenceNumber.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SequenceNumber.Equals(Object)\n  fullName: System.IO.Log.SequenceNumber.Equals(Object)\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Indicates whether this instance and a specified object are equal.\n  syntax:\n    content: public override bool Equals (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Another object to compare to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> and this instance are the same type and represent the same value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.SequenceNumber.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.GetBytes\n  id: GetBytes\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: GetBytes()\n  nameWithType: SequenceNumber.GetBytes()\n  fullName: System.IO.Log.SequenceNumber.GetBytes()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Encodes all or part of the current sequence number into a byte array.\n  syntax:\n    content: public byte[] GetBytes ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: A byte array containing all or part of the current sequence number.\n  overload: System.IO.Log.SequenceNumber.GetBytes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.GetHashCode\n  id: GetHashCode\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SequenceNumber.GetHashCode()\n  fullName: System.IO.Log.SequenceNumber.GetHashCode()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.IO.Log.SequenceNumber.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.Invalid\n  id: Invalid\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: Invalid\n  nameWithType: SequenceNumber.Invalid\n  fullName: System.IO.Log.SequenceNumber.Invalid\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets a sequence number that serves as a default value for representing an invalid sequence number.\n  syntax:\n    content: public static System.IO.Log.SequenceNumber Invalid { get; }\n    return:\n      type: System.IO.Log.SequenceNumber\n      description: A <xref href=\"System.IO.Log.SequenceNumber\"></xref> initialized to UInt64.<xref:System.UInt64.MaxValue> that serves as a default value for representing an invalid sequence number.\n  overload: System.IO.Log.SequenceNumber.Invalid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  id: op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: op_Equality(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)\n  type: Operator\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Compares two <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances to determine whether they are equal.\n  syntax:\n    content: public static bool op_Equality (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);\n    parameters:\n    - id: c1\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator.\n    - id: c2\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.SequenceNumber.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  id: op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: op_GreaterThan(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)\n  type: Operator\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Performs a logical comparison of two <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances to determine whether the first is greater than the second.\n  syntax:\n    content: public static bool op_GreaterThan (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);\n    parameters:\n    - id: c1\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator.\n    - id: c2\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than the second instance, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.SequenceNumber.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  id: op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)\n  type: Operator\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Performs a logical comparison of two <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static bool op_GreaterThanOrEqual (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);\n    parameters:\n    - id: c1\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator.\n    - id: c2\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than or equal to the second instance, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  id: op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: op_Inequality(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)\n  type: Operator\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Compares two <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances to determine whether they are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);\n    parameters:\n    - id: c1\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator.\n    - id: c2\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <xref href=\"System.IO.Log.SequenceNumber\"></xref> instances are not equal, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.SequenceNumber.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  id: op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: op_LessThan(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)\n  type: Operator\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Performs a logical comparison of the two <xref href=\"System.IO.Log.SequenceNumber\"></xref> parameters to determine whether the first is less than the second.\n  syntax:\n    content: public static bool op_LessThan (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);\n    parameters:\n    - id: c1\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator.\n    - id: c2\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than the second instance, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.SequenceNumber.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  id: op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)\n  type: Operator\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Performs a logical comparison of the two <xref href=\"System.IO.Log.SequenceNumber\"></xref> parameters to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static bool op_LessThanOrEqual (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);\n    parameters:\n    - id: c1\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the left side of the operator.\n    - id: c2\n      type: System.IO.Log.SequenceNumber\n      description: The <xref href=\"System.IO.Log.SequenceNumber\"></xref> on the right side of the operator.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than or equal to the second instance, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.SequenceNumber.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IO.Log.SequenceNumber.#ctor(System.Byte[])\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: SequenceNumber(Byte[])\n  nameWithType: SequenceNumber.SequenceNumber(Byte[])\n  fullName: System.IO.Log.SequenceNumber.SequenceNumber(Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: CompareTo(SequenceNumber)\n  nameWithType: SequenceNumber.CompareTo(SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.CompareTo(SequenceNumber)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Log.SequenceNumber\n  parent: System.IO.Log\n  isExternal: false\n  name: SequenceNumber\n  nameWithType: SequenceNumber\n  fullName: System.IO.Log.SequenceNumber\n- uid: System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: Equals(SequenceNumber)\n  nameWithType: SequenceNumber.Equals(SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.Equals(SequenceNumber)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Log.SequenceNumber.Equals(System.Object)\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SequenceNumber.Equals(Object)\n  fullName: System.IO.Log.SequenceNumber.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IO.Log.SequenceNumber.GetBytes\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: GetBytes()\n  nameWithType: SequenceNumber.GetBytes()\n  fullName: System.IO.Log.SequenceNumber.GetBytes()\n- uid: System.IO.Log.SequenceNumber.GetHashCode\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SequenceNumber.GetHashCode()\n  fullName: System.IO.Log.SequenceNumber.GetHashCode()\n- uid: System.IO.Log.SequenceNumber.Invalid\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: Invalid\n  nameWithType: SequenceNumber.Invalid\n  fullName: System.IO.Log.SequenceNumber.Invalid\n- uid: System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_Equality(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)\n- uid: System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_GreaterThan(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)\n- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)\n- uid: System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_Inequality(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)\n- uid: System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_LessThan(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)\n- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_LessThanOrEqual(SequenceNumber,SequenceNumber)\n  nameWithType: SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)\n  fullName: System.IO.Log.SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)\n- uid: System.IO.Log.SequenceNumber.#ctor*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: SequenceNumber\n  nameWithType: SequenceNumber.SequenceNumber\n- uid: System.IO.Log.SequenceNumber.CompareTo*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: CompareTo\n  nameWithType: SequenceNumber.CompareTo\n- uid: System.IO.Log.SequenceNumber.Equals*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: Equals\n  nameWithType: SequenceNumber.Equals\n- uid: System.IO.Log.SequenceNumber.GetBytes*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: GetBytes\n  nameWithType: SequenceNumber.GetBytes\n- uid: System.IO.Log.SequenceNumber.GetHashCode*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SequenceNumber.GetHashCode\n- uid: System.IO.Log.SequenceNumber.Invalid*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: Invalid\n  nameWithType: SequenceNumber.Invalid\n- uid: System.IO.Log.SequenceNumber.op_Equality*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_Equality\n  nameWithType: SequenceNumber.op_Equality\n- uid: System.IO.Log.SequenceNumber.op_GreaterThan*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: SequenceNumber.op_GreaterThan\n- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: SequenceNumber.op_GreaterThanOrEqual\n- uid: System.IO.Log.SequenceNumber.op_Inequality*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SequenceNumber.op_Inequality\n- uid: System.IO.Log.SequenceNumber.op_LessThan*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_LessThan\n  nameWithType: SequenceNumber.op_LessThan\n- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual*\n  parent: System.IO.Log.SequenceNumber\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: SequenceNumber.op_LessThanOrEqual\n"}