{"nodes":[{"pos":[376,582],"content":"Represents the method that will handle the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ObjectDataSourceView.Filtering\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event of the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.ObjectDataSource\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Represents the method that will handle the <xref href=\"System.Web.UI.WebControls.ObjectDataSourceView.Filtering\"></xref> event of the <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> control."},{"pos":[595,1045],"content":"When you create an ObjectDataSourceFilteringEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"When you create an ObjectDataSourceFilteringEventHandler delegate, you identify the method that will handle the event.","pos":[0,118]},{"content":"To associate the event with your event handler, add an instance of the delegate to the event.","pos":[119,212]},{"content":"The event handler is called whenever the event occurs, unless you remove the delegate.","pos":[213,299]},{"content":"For more information about event handler delegates, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[300,450],"source":" For more information about event handler delegates, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler\n  id: ObjectDataSourceFilteringEventHandler\n  langs:\n  - csharp\n  name: ObjectDataSourceFilteringEventHandler\n  nameWithType: ObjectDataSourceFilteringEventHandler\n  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler\n  type: Delegate\n  summary: Represents the method that will handle the <xref href=\"System.Web.UI.WebControls.ObjectDataSourceView.Filtering\"></xref> event of the <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> control.\n  remarks: 'When you create an ObjectDataSourceFilteringEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"This section contains two code examples. The first code example demonstrates how to display filtered data by using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object, and then using a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of a middle-tier business object that is used by the first code example.  \\n  \\n The following code example demonstrates how to display filtered data by using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object, and then using a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object.  \\n  \\n The code example consists of a <xref:System.Web.UI.WebControls.TextBox> control, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> control is populated with the name of one of the employees at Northwind Traders. The <xref:System.Web.UI.WebControls.GridView> control displays information about the employee who is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data for another employee, in the <xref:System.Web.UI.WebControls.TextBox> control, type the full name of the employee, and then click the **Submit** button.  \\n  \\n The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection. In this example, the parameter placeholder is enclosed by single quotation marks (') because the type of the parameter is a string type that might contain spaces. If the type of the parameter is numeric or date, quotation marks are not required. The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> object that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.  \\n  \\n If no name is specified in the <xref:System.Web.UI.WebControls.TextBox> control, a new parameter is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs.ParameterValues%2A> collection so that the search is successful.  \\n  \\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_14_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_14_1.aspx)]  \\n  \\n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes: `EmployeeLogic` and `NorthwindEmployee`. The `EmployeeLogic` class encapsulates business logic and the `NorthwindEmployee` class is a model class that contains only the basic functionality that is required to load and persist data from the data tier. For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. For a complete working example, you must compile and use these classes with the Web Forms code examples that are provided.  \\n  \\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_14_2.cs)]\\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_14_2.vb)]\"\n  syntax:\n    content: public delegate void ObjectDataSourceFilteringEventHandler(object sender, ObjectDataSourceFilteringEventArgs e);\n  inheritance:\n  - System.Delegate\n  platform:\n  - net462\nreferences:\n- uid: System.Delegate\n  isExternal: false\n  name: System.Delegate\n"}