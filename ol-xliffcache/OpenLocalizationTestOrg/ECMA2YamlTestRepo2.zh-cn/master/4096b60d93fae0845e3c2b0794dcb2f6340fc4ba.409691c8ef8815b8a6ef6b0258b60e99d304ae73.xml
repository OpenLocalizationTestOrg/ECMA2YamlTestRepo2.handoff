{"nodes":[{"pos":[5579,5674],"content":"Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.","pos":[0,95]}]},{"pos":[5687,6081],"content":"Any non-zero value is interpreted as 1.       The key difference between a SqlBoolean structure and a standard Boolean value is that, where a standard Boolean has two possible values, `true` and `false`, a SqlBoolean structure has three possible values, <xref:System.Data.SqlTypes.SqlBoolean.True>, <xref:System.Data.SqlTypes.SqlBoolean.False>, or <xref:System.Data.SqlTypes.SqlBoolean.Null>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Any non-zero value is interpreted as 1.","pos":[0,39]},{"content":"The key difference between a SqlBoolean structure and a standard Boolean value is that, where a standard Boolean has two possible values, <ph id=\"ph1\">`true`</ph> and <ph id=\"ph2\">`false`</ph>, a SqlBoolean structure has three possible values, &lt;xref:System.Data.SqlTypes.SqlBoolean.True&gt;, &lt;xref:System.Data.SqlTypes.SqlBoolean.False&gt;, or &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.","pos":[46,392],"source":"       The key difference between a SqlBoolean structure and a standard Boolean value is that, where a standard Boolean has two possible values, `true` and `false`, a SqlBoolean structure has three possible values, <xref:System.Data.SqlTypes.SqlBoolean.True>, <xref:System.Data.SqlTypes.SqlBoolean.False>, or <xref:System.Data.SqlTypes.SqlBoolean.Null>."}]},{"pos":[6859,6989],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure using the supplied Boolean value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure using the supplied Boolean value."},{"pos":[7123,7343],"content":"The value for the new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure; either <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value for the new <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure; either <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7812,7943],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure using the specified integer value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure using the specified integer value."},{"pos":[8074,8187],"content":"The integer whose value is to be used for the new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The integer whose value is to be used for the new <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[8774,8890],"content":"Computes the bitwise AND operation of two specified <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures.","needQuote":true,"needEscape":true,"source":"Computes the bitwise AND operation of two specified <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures."},{"pos":[9127,9192],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[9268,9333],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[9409,9449],"content":"The result of the logical AND operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of the logical AND operation.","pos":[0,40]}]},{"pos":[9867,9962],"content":"Gets the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure as a byte.","needQuote":true,"needEscape":true,"source":"Gets the value of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure as a byte."},{"pos":[9974,10011],"content":"The byte value will be either 0 or 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte value will be either 0 or 1.","pos":[0,37]}]},{"pos":[10121,10221],"content":"A byte representing the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A byte representing the value of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[10745,10946],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the supplied <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> object to the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> object and returns an indication of their relative values."},{"pos":[10958,11111],"content":"Any instance of &lt;xref:System.Data.SqlTypes.SqlBoolean&gt;, regardless of its value, is considered greater than a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","needQuote":true,"needEscape":true,"source":"Any instance of <xref:System.Data.SqlTypes.SqlBoolean>, regardless of its value, is considered greater than a null reference (`Nothing` in Visual Basic)."},{"pos":[11292,11523],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object to compare, or a null reference (<bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref><xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> object to compare, or a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[11581,12248],"content":"A signed number that indicates the relative values of the instance and value.       <table><thead><tr><th> Value       </th><th> Description       </th></tr></thead><tbody><tr><td> A negative integer       </td><td> This instance is less than <code>value</code>.       </td></tr><tr><td> Zero       </td><td> This instance is equal to <code>value</code>.       </td></tr><tr><td> A positive integer       </td><td> This instance is greater than <code>value</code>.       -or-       <code>value</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of the instance and value.       ","pos":[0,84],"nodes":[{"content":"A signed number that indicates the relative values of the instance and value.","pos":[0,77]}]},{"content":"Value","pos":[107,112]},{"content":"Description","pos":[129,140]},{"content":"A negative integer","pos":[181,199]},{"content":" This instance is less than <code>value</code>.       ","pos":[215,269],"nodes":[{"content":"This instance is less than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,47],"source":" This instance is less than <code>value</code>."}]},{"content":"Zero","pos":[288,292]},{"content":" This instance is equal to <code>value</code>.       ","pos":[308,361],"nodes":[{"content":"This instance is equal to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,46],"source":" This instance is equal to <code>value</code>."}]},{"content":"A positive integer","pos":[380,398]},{"content":" This instance is greater than <code>value</code>.       -or-       <code>value</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).       ","pos":[414,613],"nodes":[{"content":"This instance is greater than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,50],"source":" This instance is greater than <code>value</code>."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a null reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","pos":[57,192],"source":"       -or-       <code>value</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."}]}]},{"pos":[12725,12875],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to a specified object and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to a specified object and returns an indication of their relative values."},{"pos":[12887,13040],"content":"Any instance of &lt;xref:System.Data.SqlTypes.SqlBoolean&gt;, regardless of its value, is considered greater than a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","needQuote":true,"needEscape":true,"source":"Any instance of <xref:System.Data.SqlTypes.SqlBoolean>, regardless of its value, is considered greater than a null reference (`Nothing` in Visual Basic)."},{"pos":[13178,13305],"content":"An object to compare, or a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"An object to compare, or a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[13363,14030],"content":"A signed number that indicates the relative values of the instance and value.       <table><thead><tr><th> Value       </th><th> Description       </th></tr></thead><tbody><tr><td> A negative integer       </td><td> This instance is less than <code>value</code>.       </td></tr><tr><td> Zero       </td><td> This instance is equal to <code>value</code>.       </td></tr><tr><td> A positive integer       </td><td> This instance is greater than <code>value</code>.       -or-       <code>value</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of the instance and value.       ","pos":[0,84],"nodes":[{"content":"A signed number that indicates the relative values of the instance and value.","pos":[0,77]}]},{"content":"Value","pos":[107,112]},{"content":"Description","pos":[129,140]},{"content":"A negative integer","pos":[181,199]},{"content":" This instance is less than <code>value</code>.       ","pos":[215,269],"nodes":[{"content":"This instance is less than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,47],"source":" This instance is less than <code>value</code>."}]},{"content":"Zero","pos":[288,292]},{"content":" This instance is equal to <code>value</code>.       ","pos":[308,361],"nodes":[{"content":"This instance is equal to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,46],"source":" This instance is equal to <code>value</code>."}]},{"content":"A positive integer","pos":[380,398]},{"content":" This instance is greater than <code>value</code>.       -or-       <code>value</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).       ","pos":[414,613],"nodes":[{"content":"This instance is greater than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[1,50],"source":" This instance is greater than <code>value</code>."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a null reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","pos":[57,192],"source":"       -or-       <code>value</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."}]}]},{"pos":[14492,14591],"content":"Compares the supplied object parameter to the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Compares the supplied object parameter to the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[14736,14762],"content":"The object to be compared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to be compared.","pos":[0,26]}]},{"pos":[14821,15060],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if object is an instance of <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the two are equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if object is an instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> and the two are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15663,15776],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures to determine whether they are equal."},{"pos":[16016,16081],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[16157,16222],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[16298,16797],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are not equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,499],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[17199,17392],"content":"Represents a false value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; property of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a false value that can be assigned to the <xref:System.Data.SqlTypes.SqlBoolean.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[17404,17491],"content":"The False field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.","needQuote":true,"needEscape":true,"nodes":[{"content":"The False field is a constant for the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure.","pos":[0,87],"source":"The False field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure."}]},{"pos":[17652,17664],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18047,18087],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[18222,18256],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[18791,18909],"content":"Returns the XML Schema definition language (XSD) of the specified <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[19128,19182],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[19254,19419],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that indicates the XSD of the specified <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> value that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[20051,20188],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is greater than the second."},{"pos":[20200,20311],"content":"If either instance of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is null, the value of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; will be null.","needQuote":true,"needEscape":true,"source":"If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null."},{"pos":[20556,20621],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[20697,20762],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[20838,21094],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than the second instance; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21767,21916],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is greater than or equal to the second."},{"pos":[21928,22039],"content":"If either instance of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is null, the value of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; will be null.","needQuote":true,"needEscape":true,"source":"If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null."},{"pos":[22292,22357],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[22433,22498],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[22574,22842],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than or equal to the second instance; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23266,23404],"content":"Indicates whether the current &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; is <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.False\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Indicates whether the current <xref:System.Data.SqlTypes.SqlBoolean.Value*> is <xref href=\"System.Data.SqlTypes.SqlBoolean.False\"></xref>."},{"pos":[23416,23555],"content":"If the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; is &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;, this property still will be <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If the <xref:System.Data.SqlTypes.SqlBoolean.Value%2A> is <xref:System.Data.SqlTypes.SqlBoolean.Null>, this property still will be `false`."},{"pos":[23666,23934],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24341,24435],"content":"Indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure is null.","needQuote":true,"needEscape":true,"source":"Indicates whether this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure is null."},{"pos":[24447,24535],"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."},{"pos":[24645,24858],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure is null; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure is null; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25264,25401],"content":"Indicates whether the current &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; is <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.True\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Indicates whether the current <xref:System.Data.SqlTypes.SqlBoolean.Value*> is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref>."},{"pos":[25413,25552],"content":"If the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; is &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;, this property still will be <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"If the <xref:System.Data.SqlTypes.SqlBoolean.Value%2A> is <xref:System.Data.SqlTypes.SqlBoolean.Null>, this property still will be `false`."},{"pos":[25662,25928],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26541,26675],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is less than the second."},{"pos":[26687,26798],"content":"If either instance of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is null, the value of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; will be null.","needQuote":true,"needEscape":true,"source":"If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null."},{"pos":[27040,27105],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[27181,27246],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[27322,27576],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28231,28377],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is less than or equal to the second."},{"pos":[28389,28500],"content":"If either instance of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is null, the value of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; will be null.","needQuote":true,"needEscape":true,"source":"If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null."},{"pos":[28750,28815],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[28891,28956],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[29032,29298],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than or equal to the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29926,30018],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for equality.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> for equality."},{"pos":[30261,30326],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[30402,30467],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[30543,31042],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,499],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[31442,31596],"content":"Represents <bpt id=\"p1\">&lt;xref href=\"System.DBNull\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be assigned to this instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[31608,31783],"content":"The Null field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"The Null field is a constant for the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure.","pos":[0,86],"source":"The Null field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[87,175],"source":" For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[31943,31955],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32291,32486],"content":"Represents a one value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlBoolean.ByteValue*&gt; property of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a one value that can be assigned to the <xref:System.Data.SqlTypes.SqlBoolean.ByteValue*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[32498,32583],"content":"The One field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.","needQuote":true,"needEscape":true,"nodes":[{"content":"The One field is a constant for the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure.","pos":[0,85],"source":"The One field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure."}]},{"pos":[32742,32754],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33248,33366],"content":"Performs a one's complement operation on the supplied <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures.","needQuote":true,"needEscape":true,"source":"Performs a one's complement operation on the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures."},{"pos":[33579,33644],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[33720,33810],"content":"The one's complement of the supplied <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The one's complement of the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[34458,34574],"content":"Computes the bitwise AND operation of two specified <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures.","needQuote":true,"needEscape":true,"source":"Computes the bitwise AND operation of two specified <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures."},{"pos":[34821,34886],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[34962,35027],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[35103,35143],"content":"The result of the logical AND operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of the logical AND operation.","pos":[0,40]}]},{"pos":[35785,35825],"content":"Computes the bitwise OR of its operands.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the bitwise OR of its operands.","pos":[0,40]}]},{"pos":[36071,36136],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[36212,36277],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[36353,36393],"content":"The results of the logical OR operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the logical OR operation.","pos":[0,40]}]},{"pos":[37029,37121],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for equality.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> for equality."},{"pos":[37366,37421],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[37497,37552],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[37628,38127],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are not equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,499],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[38777,38852],"content":"Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.","pos":[0,75]}]},{"pos":[39100,39165],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[39241,39306],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[39382,39422],"content":"The result of the logical XOR operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of the logical XOR operation.","pos":[0,40]}]},{"pos":[40170,40182],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40241,40253],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41038,41050],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41126,41138],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41944,41956],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42032,42044],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42843,42855],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42931,42943],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43735,43747],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43823,43835],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44627,44639],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44715,44727],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45519,45531],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45607,45619],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46411,46423],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46499,46511],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47310,47322],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47398,47410],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48209,48221],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48297,48309],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48832,49014],"content":"The false operator can be used to test the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether it is false.","needQuote":true,"needEscape":true,"source":"The false operator can be used to test the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether it is false."},{"pos":[49194,49274],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to be tested.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to be tested."},{"pos":[49333,49567],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the supplied parameter is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is false, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the supplied parameter is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is false, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[50214,50349],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures to determine whether the first is greater than the second."},{"pos":[50361,50472],"content":"If either instance of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is null, the value of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; will be null.","needQuote":true,"needEscape":true,"source":"If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null."},{"pos":[50720,50782],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> object."},{"pos":[50858,50920],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> object."},{"pos":[50996,51253],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[51941,52088],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures to determine whether the first is greater than or equal to the second."},{"pos":[52100,52211],"content":"If either instance of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is null, the value of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; will be null.","needQuote":true,"needEscape":true,"source":"If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null."},{"pos":[52466,52531],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[52607,52672],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[52748,53017],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than or equal to the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[53676,53688],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53764,53776],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54421,54540],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether they are not equal.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether they are not equal."},{"pos":[54787,54842],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[54918,54973],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[55049,55548],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,499],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[56185,56319],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is less than the second."},{"pos":[56331,56442],"content":"If either instance of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is null, the value of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; will be null.","needQuote":true,"needEscape":true,"source":"If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null."},{"pos":[56687,56752],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[56828,56893],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[56969,57223],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[57893,58039],"content":"Compares two instances of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is less than or equal to the second."},{"pos":[58051,58162],"content":"If either instance of <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is null, the value of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; will be null.","needQuote":true,"needEscape":true,"source":"If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null."},{"pos":[58414,58479],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[58555,58620],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[58696,58962],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than or equal to the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[59517,59600],"content":"Performs a NOT operation on a <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Performs a NOT operation on a <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[59812,59914],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on which the NOT operation will be performed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> on which the NOT operation will be performed."},{"pos":[59990,60332],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt;<bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.True\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if argument was true, <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if argument was null, and <bpt id=\"p4\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.False\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> with the <xref:System.Data.SqlTypes.SqlBoolean.Value*><xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref> if argument was true, <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref> if argument was null, and <xref href=\"System.Data.SqlTypes.SqlBoolean.False\"></xref> otherwise."},{"pos":[60902,61020],"content":"Performs a one's complement operation on the supplied <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures.","needQuote":true,"needEscape":true,"source":"Performs a one's complement operation on the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures."},{"pos":[61236,61301],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[61377,61467],"content":"The one's complement of the supplied <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The one's complement of the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[61991,62171],"content":"The true operator can be used to test the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine whether it is true.","needQuote":true,"needEscape":true,"source":"The true operator can be used to test the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether it is true."},{"pos":[62350,62430],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to be tested.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to be tested."},{"pos":[62489,62722],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the supplied parameter is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is true, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the supplied parameter is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is true, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[63306,63423],"content":"Performs a bitwise OR operation on the two specified <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures.","needQuote":true,"needEscape":true,"source":"Performs a bitwise OR operation on the two specified <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures."},{"pos":[63659,63724],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[63800,63865],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[63941,64064],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose Value is the result of the bitwise OR operation.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure whose Value is the result of the bitwise OR operation."},{"pos":[64513,64662],"content":"Converts the specified &lt;xref:System.String&gt; representation of a logical value to its <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equivalent.","needQuote":true,"needEscape":true,"source":"Converts the specified <xref:System.String> representation of a logical value to its <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> equivalent."},{"pos":[64823,64864],"content":"The <xref:System.String> to be converted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.String&gt; to be converted.","pos":[0,41],"source":"The <xref:System.String> to be converted."}]},{"pos":[64940,65036],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the parsed value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure that contains the parsed value."},{"pos":[65684,65794],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[65967,66041],"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref>."},{"pos":[66796,66906],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[67906,68016],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[68728,68858],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[69023,69433],"content":"A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure's value is 1. Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure's value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose value is 1 or 0.","pos":[0,88],"source":"A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose value is 1 or 0."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value equals <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, the new <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value is 1.","pos":[89,317],"source":" If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure's value is 1."},{"content":"Otherwise, the new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value is 0.","pos":[318,410],"source":" Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure's value is 0."}]},{"pos":[69876,70009],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>."},{"pos":[70183,70606],"content":"A new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then the new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> structure's value is 1. Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> structure's value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose value is 1 or 0.","pos":[0,91],"source":"A new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> structure whose value is 1 or 0."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value equals <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> then the new <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value is 1.","pos":[92,327],"source":" If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then the new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> structure's value is 1."},{"content":"Otherwise, the new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value is 0.","pos":[328,423],"source":" Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> structure's value is 0."}]},{"pos":[71047,71179],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."},{"pos":[71350,71770],"content":"A new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then the new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value is 1. Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose value is 1 or 0.","pos":[0,90],"source":"A new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure whose value is 1 or 0."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value equals <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> then the new <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value is 1.","pos":[91,325],"source":" If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then the new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value is 1."},{"content":"Otherwise, the new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value is 0.","pos":[326,420],"source":" Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value is 0."}]},{"pos":[72205,72336],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>."},{"pos":[72504,72957],"content":"A new <xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then the new <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref> structure's value is 1. Otherwise, the new <xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"></xref> structure's value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose value is 1 or 0.","pos":[0,107],"source":"A new <xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"></xref> structure whose value is 1 or 0."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value equals <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> then the new <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value is 1.","pos":[108,341],"source":" If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then the new <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref> structure's value is 1."},{"content":"Otherwise, the new <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value is 0.","pos":[342,453],"source":" Otherwise, the new <xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"></xref> structure's value is 0."}]},{"pos":[73391,73522],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt32\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>."},{"pos":[73690,74139],"content":"A new <xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref> structure's value is 1. Otherwise, the new <xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"></xref> structure's value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose value is 1 or 0.","pos":[0,107],"source":"A new <xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"></xref> structure whose value is 1 or 0."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value equals <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, the new <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlInt32\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value is 1.","pos":[108,337],"source":" If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref> structure's value is 1."},{"content":"Otherwise, the new <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value is 0.","pos":[338,449],"source":" Otherwise, the new <xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"></xref> structure's value is 0."}]},{"pos":[74573,74704],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[74872,75321],"content":"A new <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure's value is 1. Otherwise, the new <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> structure's value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose value is 1 or 0.","pos":[0,107],"source":"A new <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> structure whose value is 1 or 0."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value equals <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, the new <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value is 1.","pos":[108,337],"source":" If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure's value is 1."},{"content":"Otherwise, the new <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value is 0.","pos":[338,449],"source":" Otherwise, the new <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> structure's value is 0."}]},{"pos":[75755,75886],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[76054,76800],"content":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> value is 1. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> value is 0. If <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value is neither 1 nor 0, the new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> value is <xref href=\"System.Data.SqlTypes.SqlMoney.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose value is 1 or 0.","pos":[0,89],"source":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose value is 1 or 0."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value equals <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, the new <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> value is 1.","pos":[90,307],"source":" If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> value is 1."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value equals <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, the new <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> value is 0.","pos":[308,527],"source":" If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> value is 0."},{"content":"If <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value is neither 1 nor 0, the new <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value is <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[528,746],"source":" If <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value is neither 1 nor 0, the new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> value is <xref href=\"System.Data.SqlTypes.SqlMoney.Null\"></xref>."}]},{"pos":[77239,77371],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>."},{"pos":[77543,77918],"content":"A new <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref> structure whose value is 1 or 0.       If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals true, the new <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref> structure's value is 1; otherwise the new <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref> structure's value is 0.","needQuote":false,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose value is 1 or 0.","pos":[0,90],"source":"A new <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref> structure whose value is 1 or 0."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value equals true, the new <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure's value is 1; otherwise the new <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value is 0.","pos":[97,365],"source":"       If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals true, the new <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref> structure's value is 1; otherwise the new <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref> structure's value is 0."}]},{"pos":[78359,78491],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\"></xref>."},{"pos":[78662,79074],"content":"A new <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure's value is 1. Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure's value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose value is 1 or 0.","pos":[0,90],"source":"A new <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure whose value is 1 or 0."},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value equals <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> then <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure's value is 1.","pos":[91,317],"source":" If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure's value is 1."},{"content":"Otherwise, the new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value is 0.","pos":[318,412],"source":" Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure's value is 0."}]},{"pos":[79499,79588],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to a string.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to a string."},{"pos":[79724,79871],"content":"A string that contains the value of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If the value is null, the string will contain \"null\".","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,93],"source":"A string that contains the value of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If the value is null, the string will contain \"null\".","pos":[94,147]}]},{"pos":[80270,80462],"content":"Represents a true value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; property of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a true value that can be assigned to the <xref:System.Data.SqlTypes.SqlBoolean.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[80474,80560],"content":"The True field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.","needQuote":true,"needEscape":true,"nodes":[{"content":"The True field is a constant for the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure.","pos":[0,86],"source":"The True field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure."}]},{"pos":[80720,80732],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[81081,81189],"content":"Gets the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value. This property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure's value.","pos":[0,80],"source":"Gets the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value."},{"content":"This property is read-only.","pos":[81,108]}]},{"pos":[81298,81554],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.True\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[81750,81778],"content":"The property is set to null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to null.","pos":[0,28]}]},{"pos":[82297,82366],"content":"Performs a bitwise exclusive-OR operation on the supplied parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a bitwise exclusive-OR operation on the supplied parameters.","pos":[0,69]}]},{"pos":[82603,82668],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[82744,82809],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[82885,82925],"content":"The result of the logical XOR operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of the logical XOR operation.","pos":[0,40]}]},{"pos":[83315,83511],"content":"Represents a zero value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlBoolean.ByteValue*&gt; property of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Represents a zero value that can be assigned to the <xref:System.Data.SqlTypes.SqlBoolean.ByteValue*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"pos":[83523,83609],"content":"The Zero field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Zero field is a constant for the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure.","pos":[0,86],"source":"The Zero field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure."}]},{"pos":[83769,83781],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlTypes.SqlBoolean\n  id: SqlBoolean\n  children:\n  - System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)\n  - System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)\n  - System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.ByteValue\n  - System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)\n  - System.Data.SqlTypes.SqlBoolean.Equals(System.Object)\n  - System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.False\n  - System.Data.SqlTypes.SqlBoolean.GetHashCode\n  - System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  - System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.IsFalse\n  - System.Data.SqlTypes.SqlBoolean.IsNull\n  - System.Data.SqlTypes.SqlBoolean.IsTrue\n  - System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.Null\n  - System.Data.SqlTypes.SqlBoolean.One\n  - System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)\n  - System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.Parse(System.String)\n  - System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema\n  - System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  - System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  - System.Data.SqlTypes.SqlBoolean.ToSqlByte\n  - System.Data.SqlTypes.SqlBoolean.ToSqlDecimal\n  - System.Data.SqlTypes.SqlBoolean.ToSqlDouble\n  - System.Data.SqlTypes.SqlBoolean.ToSqlInt16\n  - System.Data.SqlTypes.SqlBoolean.ToSqlInt32\n  - System.Data.SqlTypes.SqlBoolean.ToSqlInt64\n  - System.Data.SqlTypes.SqlBoolean.ToSqlMoney\n  - System.Data.SqlTypes.SqlBoolean.ToSqlSingle\n  - System.Data.SqlTypes.SqlBoolean.ToSqlString\n  - System.Data.SqlTypes.SqlBoolean.ToString\n  - System.Data.SqlTypes.SqlBoolean.True\n  - System.Data.SqlTypes.SqlBoolean.Value\n  - System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  - System.Data.SqlTypes.SqlBoolean.Zero\n  langs:\n  - csharp\n  name: SqlBoolean\n  nameWithType: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n  type: Struct\n  summary: Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.\n  remarks: \"Any non-zero value is interpreted as 1.  \\n  \\n The key difference between a SqlBoolean structure and a standard Boolean value is that, where a standard Boolean has two possible values, `true` and `false`, a SqlBoolean structure has three possible values, <xref:System.Data.SqlTypes.SqlBoolean.True>, <xref:System.Data.SqlTypes.SqlBoolean.False>, or <xref:System.Data.SqlTypes.SqlBoolean.Null>.\"\n  syntax:\n    content: >-\n      [System.Xml.Serialization.XmlSchemaProvider(\"GetXsdType\")]\n\n      public struct SqlBoolean : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.IComparable\n  - System.Xml.Serialization.IXmlSerializable\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: SqlBoolean(Boolean)\n  nameWithType: SqlBoolean.SqlBoolean(Boolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Boolean)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure using the supplied Boolean value.\n  syntax:\n    content: public SqlBoolean (bool value);\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: The value for the new <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure; either <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: SqlBoolean(Int32)\n  nameWithType: SqlBoolean.SqlBoolean(Int32)\n  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Int32)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure using the specified integer value.\n  syntax:\n    content: public SqlBoolean (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: The integer whose value is to be used for the new <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlBoolean.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: And(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.And(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.And(SqlBoolean,SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise AND operation of two specified <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean And (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The result of the logical AND operation.\n  overload: System.Data.SqlTypes.SqlBoolean.And*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ByteValue\n  id: ByteValue\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ByteValue\n  nameWithType: SqlBoolean.ByteValue\n  fullName: System.Data.SqlTypes.SqlBoolean.ByteValue\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets the value of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure as a byte.\n  remarks: The byte value will be either 0 or 1.\n  syntax:\n    content: public byte ByteValue { get; }\n    return:\n      type: System.Byte\n      description: A byte representing the value of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlBoolean.ByteValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)\n  id: CompareTo(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: CompareTo(SqlBoolean)\n  nameWithType: SqlBoolean.CompareTo(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> object to the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> object and returns an indication of their relative values.\n  remarks: Any instance of <xref:System.Data.SqlTypes.SqlBoolean>, regardless of its value, is considered greater than a null reference (`Nothing` in Visual Basic).\n  syntax:\n    content: public int CompareTo (System.Data.SqlTypes.SqlBoolean value);\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref><xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> object to compare, or a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of the instance and value.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance is less than <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is equal to <code>value</code>.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance is greater than <code>value</code>.  \\n  \\n -or-  \\n  \\n <code>value</code> is a null reference (<xref uid=\\\"langword_csharp_Nothing\\\" name=\\\"Nothing\\\" href=\\\"\\\"></xref> in Visual Basic).  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlBoolean.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: SqlBoolean.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to a specified object and returns an indication of their relative values.\n  remarks: Any instance of <xref:System.Data.SqlTypes.SqlBoolean>, regardless of its value, is considered greater than a null reference (`Nothing` in Visual Basic).\n  syntax:\n    content: public int CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object to compare, or a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of the instance and value.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance is less than <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is equal to <code>value</code>.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance is greater than <code>value</code>.  \\n  \\n -or-  \\n  \\n <code>value</code> is a null reference (<xref uid=\\\"langword_csharp_Nothing\\\" name=\\\"Nothing\\\" href=\\\"\\\"></xref> in Visual Basic).  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlBoolean.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SqlBoolean.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlBoolean.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares the supplied object parameter to the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to be compared.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if object is an instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> and the two are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: Equals(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.Equals(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.Equals(SqlBoolean,SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.False\n  id: \"False\"\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: \"False\"\n  nameWithType: SqlBoolean.False\n  fullName: System.Data.SqlTypes.SqlBoolean.False\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a false value that can be assigned to the <xref:System.Data.SqlTypes.SqlBoolean.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n  remarks: The False field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlBoolean False;\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.GetHashCode\n  id: GetHashCode\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SqlBoolean.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlBoolean.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Data.SqlTypes.SqlBoolean.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlBoolean.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlBoolean.GetXsdType(XmlSchemaSet)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  syntax:\n    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);\n    parameters:\n    - id: schemaSet\n      type: System.Xml.Schema.XmlSchemaSet\n      description: A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> value that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.GetXsdType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: GreaterThan(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is greater than the second.\n  remarks: If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than the second instance; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: GreaterThanOrEquals(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is greater than or equal to the second.\n  remarks: If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than or equal to the second instance; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.IsFalse\n  id: IsFalse\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: IsFalse\n  nameWithType: SqlBoolean.IsFalse\n  fullName: System.Data.SqlTypes.SqlBoolean.IsFalse\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Indicates whether the current <xref:System.Data.SqlTypes.SqlBoolean.Value*> is <xref href=\"System.Data.SqlTypes.SqlBoolean.False\"></xref>.\n  remarks: If the <xref:System.Data.SqlTypes.SqlBoolean.Value%2A> is <xref:System.Data.SqlTypes.SqlBoolean.Null>, this property still will be `false`.\n  syntax:\n    content: public bool IsFalse { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.IsFalse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: IsNull\n  nameWithType: SqlBoolean.IsNull\n  fullName: System.Data.SqlTypes.SqlBoolean.IsNull\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Indicates whether this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure is null.\n  remarks: For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public bool IsNull { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure is null; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.IsNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.IsTrue\n  id: IsTrue\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: IsTrue\n  nameWithType: SqlBoolean.IsTrue\n  fullName: System.Data.SqlTypes.SqlBoolean.IsTrue\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Indicates whether the current <xref:System.Data.SqlTypes.SqlBoolean.Value*> is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref>.\n  remarks: If the <xref:System.Data.SqlTypes.SqlBoolean.Value%2A> is <xref:System.Data.SqlTypes.SqlBoolean.Null>, this property still will be `false`.\n  syntax:\n    content: public bool IsTrue { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.IsTrue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: LessThan(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.LessThan(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.LessThan(SqlBoolean,SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is less than the second.\n  remarks: If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: LessThanOrEquals(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is less than or equal to the second.\n  remarks: If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than or equal to the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: NotEquals(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> for equality.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.NotEquals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.Null\n  id: \"Null\"\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: SqlBoolean.Null\n  fullName: System.Data.SqlTypes.SqlBoolean.Null\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n  remarks: The Null field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlBoolean Null;\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.One\n  id: One\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: One\n  nameWithType: SqlBoolean.One\n  fullName: System.Data.SqlTypes.SqlBoolean.One\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a one value that can be assigned to the <xref:System.Data.SqlTypes.SqlBoolean.ByteValue*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n  remarks: The One field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlBoolean One;\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)\n  id: OnesComplement(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: OnesComplement(SqlBoolean)\n  nameWithType: SqlBoolean.OnesComplement(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.OnesComplement(SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a one's complement operation on the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean OnesComplement (System.Data.SqlTypes.SqlBoolean x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The one's complement of the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.OnesComplement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_BitwiseAnd(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise AND operation of two specified <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_BitwiseAnd (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The result of the logical AND operation.\n  overload: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_BitwiseOr(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Computes the bitwise OR of its operands.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_BitwiseOr (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The results of the logical OR operation.\n  overload: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Equality(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> for equality.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_ExclusiveOr(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_ExclusiveOr (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The result of the logical XOR operation.\n  overload: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)\n  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Explicit(SqlBoolean)\n  nameWithType: SqlBoolean.op_Explicit(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static bool op_Explicit (System.Data.SqlTypes.SqlBoolean x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)\n  id: op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Explicit(SqlByte)\n  nameWithType: SqlBoolean.op_Explicit(SqlByte)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlByte x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)\n  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Explicit(SqlDecimal)\n  nameWithType: SqlBoolean.op_Explicit(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDecimal)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlDecimal x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)\n  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Explicit(SqlDouble)\n  nameWithType: SqlBoolean.op_Explicit(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlDouble x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)\n  id: op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Explicit(SqlInt16)\n  nameWithType: SqlBoolean.op_Explicit(SqlInt16)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt16)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt16 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt16\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)\n  id: op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Explicit(SqlInt32)\n  nameWithType: SqlBoolean.op_Explicit(SqlInt32)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt32)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt32 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt32\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)\n  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Explicit(SqlInt64)\n  nameWithType: SqlBoolean.op_Explicit(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt64 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)\n  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Explicit(SqlMoney)\n  nameWithType: SqlBoolean.op_Explicit(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlMoney x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)\n  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Explicit(SqlSingle)\n  nameWithType: SqlBoolean.op_Explicit(SqlSingle)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlSingle)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlSingle x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlSingle\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)\n  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Explicit(SqlString)\n  nameWithType: SqlBoolean.op_Explicit(SqlString)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlString)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlString x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlString\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)\n  id: op_False(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_False(SqlBoolean)\n  nameWithType: SqlBoolean.op_False(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_False(SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The false operator can be used to test the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether it is false.\n  syntax:\n    content: public static bool op_False (System.Data.SqlTypes.SqlBoolean x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to be tested.\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the supplied parameter is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is false, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Data.SqlTypes.SqlBoolean.op_False*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_GreaterThan(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures to determine whether the first is greater than the second.\n  remarks: If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> object.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> object.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures to determine whether the first is greater than or equal to the second.\n  remarks: If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is greater than or equal to the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)\n  id: op_Implicit(System.Boolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Implicit(Boolean)\n  nameWithType: SqlBoolean.op_Implicit(Boolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Implicit(Boolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Implicit (bool x);\n    parameters:\n    - id: x\n      type: System.Boolean\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_Inequality(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether they are not equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_LessThan(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is less than the second.\n  remarks: If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares two instances of <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether the first is less than or equal to the second.\n  remarks: If either instance of `x` or `y` is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first instance is less than or equal to the second instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)\n  id: op_LogicalNot(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_LogicalNot(SqlBoolean)\n  nameWithType: SqlBoolean.op_LogicalNot(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a NOT operation on a <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LogicalNot (System.Data.SqlTypes.SqlBoolean x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> on which the NOT operation will be performed.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> with the <xref:System.Data.SqlTypes.SqlBoolean.Value*><xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref> if argument was true, <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref> if argument was null, and <xref href=\"System.Data.SqlTypes.SqlBoolean.False\"></xref> otherwise.\n  overload: System.Data.SqlTypes.SqlBoolean.op_LogicalNot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)\n  id: op_OnesComplement(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_OnesComplement(SqlBoolean)\n  nameWithType: SqlBoolean.op_OnesComplement(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a one's complement operation on the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_OnesComplement (System.Data.SqlTypes.SqlBoolean x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The one's complement of the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.op_OnesComplement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)\n  id: op_True(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: op_True(SqlBoolean)\n  nameWithType: SqlBoolean.op_True(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_True(SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The true operator can be used to test the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> to determine whether it is true.\n  syntax:\n    content: public static bool op_True (System.Data.SqlTypes.SqlBoolean x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to be tested.\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the supplied parameter is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is true, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Data.SqlTypes.SqlBoolean.op_True*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: Or(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.Or(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.Or(SqlBoolean,SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a bitwise OR operation on the two specified <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structures.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean Or (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A new <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure whose Value is the result of the bitwise OR operation.\n  overload: System.Data.SqlTypes.SqlBoolean.Or*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: SqlBoolean.Parse(String)\n  fullName: System.Data.SqlTypes.SqlBoolean.Parse(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts the specified <xref:System.String> representation of a logical value to its <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> equivalent.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean Parse (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: The <xref:System.String> to be converted.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure that contains the parsed value.\n  overload: System.Data.SqlTypes.SqlBoolean.Parse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema\n  id: System#Xml#Serialization#IXmlSerializable#GetSchema\n  isEii: true\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();\n    parameters: []\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: An <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: <xref uid=\"langword_csharp_XmlReader \" name=\"XmlReader \" href=\"\"></xref>\n  overload: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: <xref uid=\"langword_csharp_XmlWriter \" name=\"XmlWriter \" href=\"\"></xref>\n  overload: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlByte\n  id: ToSqlByte\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ToSqlByte()\n  nameWithType: SqlBoolean.ToSqlByte()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlByte()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure's value is 1. Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> structure's value is 0.\n  overload: System.Data.SqlTypes.SqlBoolean.ToSqlByte*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal\n  id: ToSqlDecimal\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ToSqlDecimal()\n  nameWithType: SqlBoolean.ToSqlDecimal()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: A new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then the new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> structure's value is 1. Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> structure's value is 0.\n  overload: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDouble\n  id: ToSqlDouble\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ToSqlDouble()\n  nameWithType: SqlBoolean.ToSqlDouble()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDouble()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: A new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then the new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value is 1. Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> structure's value is 0.\n  overload: System.Data.SqlTypes.SqlBoolean.ToSqlDouble*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt16\n  id: ToSqlInt16\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ToSqlInt16()\n  nameWithType: SqlBoolean.ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt16()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt16\n      description: A new <xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then the new <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref> structure's value is 1. Otherwise, the new <xref uid=\"langword_csharp_SqlInt16\" name=\"SqlInt16\" href=\"\"></xref> structure's value is 0.\n  overload: System.Data.SqlTypes.SqlBoolean.ToSqlInt16*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt32\n  id: ToSqlInt32\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ToSqlInt32()\n  nameWithType: SqlBoolean.ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt32()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt32\n      description: A new <xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref> structure's value is 1. Otherwise, the new <xref uid=\"langword_csharp_SqlInt32\" name=\"SqlInt32\" href=\"\"></xref> structure's value is 0.\n  overload: System.Data.SqlTypes.SqlBoolean.ToSqlInt32*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt64\n  id: ToSqlInt64\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ToSqlInt64()\n  nameWithType: SqlBoolean.ToSqlInt64()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt64()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> structure's value is 1. Otherwise, the new <xref uid=\"langword_csharp_SqlInt64\" name=\"SqlInt64\" href=\"\"></xref> structure's value is 0.\n  overload: System.Data.SqlTypes.SqlBoolean.ToSqlInt64*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlMoney\n  id: ToSqlMoney\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ToSqlMoney()\n  nameWithType: SqlBoolean.ToSqlMoney()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlMoney()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> value is 1. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> value is 0. If <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value is neither 1 nor 0, the new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> value is <xref href=\"System.Data.SqlTypes.SqlMoney.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.ToSqlMoney*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlSingle\n  id: ToSqlSingle\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ToSqlSingle()\n  nameWithType: SqlBoolean.ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlSingle()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlSingle\n      description: \"A new <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\"></xref> structure whose value is 1 or 0.  \\n  \\n If the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\"></xref> structure's value equals true, the new <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\"></xref> structure's value is 1; otherwise the new <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\"></xref> structure's value is 0.\"\n  overload: System.Data.SqlTypes.SqlBoolean.ToSqlSingle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlString\n  id: ToSqlString\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ToSqlString()\n  nameWithType: SqlBoolean.ToSqlString()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlString ToSqlString ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: A new <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure whose value is 1 or 0. If the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value equals <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> then <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure's value is 1. Otherwise, the new <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure's value is 0.\n  overload: System.Data.SqlTypes.SqlBoolean.ToSqlString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.ToString\n  id: ToString\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SqlBoolean.ToString()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure to a string.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the value of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If the value is null, the string will contain \"null\".\n  overload: System.Data.SqlTypes.SqlBoolean.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.True\n  id: \"True\"\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: \"True\"\n  nameWithType: SqlBoolean.True\n  fullName: System.Data.SqlTypes.SqlBoolean.True\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a true value that can be assigned to the <xref:System.Data.SqlTypes.SqlBoolean.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n  remarks: The True field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlBoolean True;\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: Value\n  nameWithType: SqlBoolean.Value\n  fullName: System.Data.SqlTypes.SqlBoolean.Value\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value. This property is read-only.\n  syntax:\n    content: public bool Value { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlBoolean.Value*\n  exceptions:\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: The property is set to null.\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  id: Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: Xor(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.Xor(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.Xor(SqlBoolean,SqlBoolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a bitwise exclusive-OR operation on the supplied parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean Xor (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The result of the logical XOR operation.\n  overload: System.Data.SqlTypes.SqlBoolean.Xor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlBoolean.Zero\n  id: Zero\n  parent: System.Data.SqlTypes.SqlBoolean\n  langs:\n  - csharp\n  name: Zero\n  nameWithType: SqlBoolean.Zero\n  fullName: System.Data.SqlTypes.SqlBoolean.Zero\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a zero value that can be assigned to the <xref:System.Data.SqlTypes.SqlBoolean.ByteValue*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure.\n  remarks: The Zero field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlBoolean Zero;\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Data.SqlTypes.SqlNullValueException\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlNullValueException\n  nameWithType: SqlNullValueException\n  fullName: System.Data.SqlTypes.SqlNullValueException\n- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: SqlBoolean(Boolean)\n  nameWithType: SqlBoolean.SqlBoolean(Boolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: SqlBoolean(Int32)\n  nameWithType: SqlBoolean.SqlBoolean(Int32)\n  fullName: System.Data.SqlTypes.SqlBoolean.SqlBoolean(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: And(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.And(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.And(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  nameWithType: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n- uid: System.Data.SqlTypes.SqlBoolean.ByteValue\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ByteValue\n  nameWithType: SqlBoolean.ByteValue\n  fullName: System.Data.SqlTypes.SqlBoolean.ByteValue\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: CompareTo(SqlBoolean)\n  nameWithType: SqlBoolean.CompareTo(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: SqlBoolean.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlBoolean.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SqlBoolean.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlBoolean.Equals(Object)\n- uid: System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Equals(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.Equals(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.Equals(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.False\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: \"False\"\n  nameWithType: SqlBoolean.False\n  fullName: System.Data.SqlTypes.SqlBoolean.False\n- uid: System.Data.SqlTypes.SqlBoolean.GetHashCode\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SqlBoolean.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlBoolean.GetHashCode()\n- uid: System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlBoolean.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlBoolean.GetXsdType(XmlSchemaSet)\n- uid: System.Xml.XmlQualifiedName\n  parent: System.Xml\n  isExternal: true\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: GreaterThan(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThan(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: GreaterThanOrEquals(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.IsFalse\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: IsFalse\n  nameWithType: SqlBoolean.IsFalse\n  fullName: System.Data.SqlTypes.SqlBoolean.IsFalse\n- uid: System.Data.SqlTypes.SqlBoolean.IsNull\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlBoolean.IsNull\n  fullName: System.Data.SqlTypes.SqlBoolean.IsNull\n- uid: System.Data.SqlTypes.SqlBoolean.IsTrue\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: IsTrue\n  nameWithType: SqlBoolean.IsTrue\n  fullName: System.Data.SqlTypes.SqlBoolean.IsTrue\n- uid: System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: LessThan(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.LessThan(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.LessThan(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: LessThanOrEquals(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: NotEquals(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.NotEquals(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.Null\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: \"Null\"\n  nameWithType: SqlBoolean.Null\n  fullName: System.Data.SqlTypes.SqlBoolean.Null\n- uid: System.Data.SqlTypes.SqlBoolean.One\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: One\n  nameWithType: SqlBoolean.One\n  fullName: System.Data.SqlTypes.SqlBoolean.One\n- uid: System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: OnesComplement(SqlBoolean)\n  nameWithType: SqlBoolean.OnesComplement(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.OnesComplement(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_BitwiseAnd(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_BitwiseOr(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Equality(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Equality(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_ExclusiveOr(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Boolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit(SqlBoolean)\n  nameWithType: SqlBoolean.op_Explicit(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit(SqlByte)\n  nameWithType: SqlBoolean.op_Explicit(SqlByte)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlByte)\n- uid: System.Data.SqlTypes.SqlByte\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlByte\n  nameWithType: SqlByte\n  fullName: System.Data.SqlTypes.SqlByte\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit(SqlDecimal)\n  nameWithType: SqlBoolean.op_Explicit(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDecimal\n  nameWithType: SqlDecimal\n  fullName: System.Data.SqlTypes.SqlDecimal\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit(SqlDouble)\n  nameWithType: SqlBoolean.op_Explicit(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDouble\n  nameWithType: SqlDouble\n  fullName: System.Data.SqlTypes.SqlDouble\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit(SqlInt16)\n  nameWithType: SqlBoolean.op_Explicit(SqlInt16)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt16)\n- uid: System.Data.SqlTypes.SqlInt16\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt16\n  nameWithType: SqlInt16\n  fullName: System.Data.SqlTypes.SqlInt16\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit(SqlInt32)\n  nameWithType: SqlBoolean.op_Explicit(SqlInt32)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt32)\n- uid: System.Data.SqlTypes.SqlInt32\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt32\n  nameWithType: SqlInt32\n  fullName: System.Data.SqlTypes.SqlInt32\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit(SqlInt64)\n  nameWithType: SqlBoolean.op_Explicit(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt64\n  nameWithType: SqlInt64\n  fullName: System.Data.SqlTypes.SqlInt64\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit(SqlMoney)\n  nameWithType: SqlBoolean.op_Explicit(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlMoney\n  nameWithType: SqlMoney\n  fullName: System.Data.SqlTypes.SqlMoney\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit(SqlSingle)\n  nameWithType: SqlBoolean.op_Explicit(SqlSingle)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlSingle)\n- uid: System.Data.SqlTypes.SqlSingle\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlSingle\n  nameWithType: SqlSingle\n  fullName: System.Data.SqlTypes.SqlSingle\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit(SqlString)\n  nameWithType: SqlBoolean.op_Explicit(SqlString)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Explicit(SqlString)\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  nameWithType: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n- uid: System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_False(SqlBoolean)\n  nameWithType: SqlBoolean.op_False(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_False(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_GreaterThan(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThan(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Implicit(Boolean)\n  nameWithType: SqlBoolean.op_Implicit(Boolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Implicit(Boolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Inequality(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_Inequality(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_LessThan(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThan(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_LessThanOrEqual(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_LogicalNot(SqlBoolean)\n  nameWithType: SqlBoolean.op_LogicalNot(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_LogicalNot(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_OnesComplement(SqlBoolean)\n  nameWithType: SqlBoolean.op_OnesComplement(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_OnesComplement(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_True(SqlBoolean)\n  nameWithType: SqlBoolean.op_True(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.op_True(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Or(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.Or(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.Or(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.Parse(System.String)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Parse(String)\n  nameWithType: SqlBoolean.Parse(String)\n  fullName: System.Data.SqlTypes.SqlBoolean.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema()\n- uid: System.Xml.Schema.XmlSchema\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema\n- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlByte\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlByte()\n  nameWithType: SqlBoolean.ToSqlByte()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlByte()\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlDecimal()\n  nameWithType: SqlBoolean.ToSqlDecimal()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal()\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDouble\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlDouble()\n  nameWithType: SqlBoolean.ToSqlDouble()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlDouble()\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt16\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlInt16()\n  nameWithType: SqlBoolean.ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt16()\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt32\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlInt32()\n  nameWithType: SqlBoolean.ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt32()\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt64\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlInt64()\n  nameWithType: SqlBoolean.ToSqlInt64()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlInt64()\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlMoney\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlMoney()\n  nameWithType: SqlBoolean.ToSqlMoney()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlMoney()\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlSingle\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlSingle()\n  nameWithType: SqlBoolean.ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlSingle()\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlString\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlString()\n  nameWithType: SqlBoolean.ToSqlString()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToSqlString()\n- uid: System.Data.SqlTypes.SqlBoolean.ToString\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToString()\n  nameWithType: SqlBoolean.ToString()\n  fullName: System.Data.SqlTypes.SqlBoolean.ToString()\n- uid: System.Data.SqlTypes.SqlBoolean.True\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: \"True\"\n  nameWithType: SqlBoolean.True\n  fullName: System.Data.SqlTypes.SqlBoolean.True\n- uid: System.Data.SqlTypes.SqlBoolean.Value\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Value\n  nameWithType: SqlBoolean.Value\n  fullName: System.Data.SqlTypes.SqlBoolean.Value\n- uid: System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Xor(SqlBoolean,SqlBoolean)\n  nameWithType: SqlBoolean.Xor(SqlBoolean,SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlBoolean.Xor(SqlBoolean,SqlBoolean)\n- uid: System.Data.SqlTypes.SqlBoolean.Zero\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Zero\n  nameWithType: SqlBoolean.Zero\n  fullName: System.Data.SqlTypes.SqlBoolean.Zero\n- uid: System.Data.SqlTypes.SqlBoolean.#ctor*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: SqlBoolean\n  nameWithType: SqlBoolean.SqlBoolean\n- uid: System.Data.SqlTypes.SqlBoolean.And*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: And\n  nameWithType: SqlBoolean.And\n- uid: System.Data.SqlTypes.SqlBoolean.ByteValue*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ByteValue\n  nameWithType: SqlBoolean.ByteValue\n- uid: System.Data.SqlTypes.SqlBoolean.CompareTo*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: CompareTo\n  nameWithType: SqlBoolean.CompareTo\n- uid: System.Data.SqlTypes.SqlBoolean.Equals*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Equals\n  nameWithType: SqlBoolean.Equals\n- uid: System.Data.SqlTypes.SqlBoolean.GetHashCode*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SqlBoolean.GetHashCode\n- uid: System.Data.SqlTypes.SqlBoolean.GetXsdType*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: GetXsdType\n  nameWithType: SqlBoolean.GetXsdType\n- uid: System.Data.SqlTypes.SqlBoolean.GreaterThan*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: GreaterThan\n  nameWithType: SqlBoolean.GreaterThan\n- uid: System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: GreaterThanOrEquals\n  nameWithType: SqlBoolean.GreaterThanOrEquals\n- uid: System.Data.SqlTypes.SqlBoolean.IsFalse*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: IsFalse\n  nameWithType: SqlBoolean.IsFalse\n- uid: System.Data.SqlTypes.SqlBoolean.IsNull*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlBoolean.IsNull\n- uid: System.Data.SqlTypes.SqlBoolean.IsTrue*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: IsTrue\n  nameWithType: SqlBoolean.IsTrue\n- uid: System.Data.SqlTypes.SqlBoolean.LessThan*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: LessThan\n  nameWithType: SqlBoolean.LessThan\n- uid: System.Data.SqlTypes.SqlBoolean.LessThanOrEquals*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: LessThanOrEquals\n  nameWithType: SqlBoolean.LessThanOrEquals\n- uid: System.Data.SqlTypes.SqlBoolean.NotEquals*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: NotEquals\n  nameWithType: SqlBoolean.NotEquals\n- uid: System.Data.SqlTypes.SqlBoolean.OnesComplement*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: OnesComplement\n  nameWithType: SqlBoolean.OnesComplement\n- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_BitwiseAnd\n  nameWithType: SqlBoolean.op_BitwiseAnd\n- uid: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_BitwiseOr\n  nameWithType: SqlBoolean.op_BitwiseOr\n- uid: System.Data.SqlTypes.SqlBoolean.op_Equality*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Equality\n  nameWithType: SqlBoolean.op_Equality\n- uid: System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_ExclusiveOr\n  nameWithType: SqlBoolean.op_ExclusiveOr\n- uid: System.Data.SqlTypes.SqlBoolean.op_Explicit*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Explicit\n  nameWithType: SqlBoolean.op_Explicit\n- uid: System.Data.SqlTypes.SqlBoolean.op_False*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_False\n  nameWithType: SqlBoolean.op_False\n- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThan*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: SqlBoolean.op_GreaterThan\n- uid: System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: SqlBoolean.op_GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlBoolean.op_Implicit*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Implicit\n  nameWithType: SqlBoolean.op_Implicit\n- uid: System.Data.SqlTypes.SqlBoolean.op_Inequality*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SqlBoolean.op_Inequality\n- uid: System.Data.SqlTypes.SqlBoolean.op_LessThan*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_LessThan\n  nameWithType: SqlBoolean.op_LessThan\n- uid: System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: SqlBoolean.op_LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlBoolean.op_LogicalNot*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_LogicalNot\n  nameWithType: SqlBoolean.op_LogicalNot\n- uid: System.Data.SqlTypes.SqlBoolean.op_OnesComplement*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_OnesComplement\n  nameWithType: SqlBoolean.op_OnesComplement\n- uid: System.Data.SqlTypes.SqlBoolean.op_True*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: op_True\n  nameWithType: SqlBoolean.op_True\n- uid: System.Data.SqlTypes.SqlBoolean.Or*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Or\n  nameWithType: SqlBoolean.Or\n- uid: System.Data.SqlTypes.SqlBoolean.Parse*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Parse\n  nameWithType: SqlBoolean.Parse\n- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema\n  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema\n- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml\n  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml\n- uid: System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml\n  nameWithType: SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlByte*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlByte\n  nameWithType: SqlBoolean.ToSqlByte\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDecimal*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlDecimal\n  nameWithType: SqlBoolean.ToSqlDecimal\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlDouble*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlDouble\n  nameWithType: SqlBoolean.ToSqlDouble\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt16*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlInt16\n  nameWithType: SqlBoolean.ToSqlInt16\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt32*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlInt32\n  nameWithType: SqlBoolean.ToSqlInt32\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlInt64*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlInt64\n  nameWithType: SqlBoolean.ToSqlInt64\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlMoney*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlMoney\n  nameWithType: SqlBoolean.ToSqlMoney\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlSingle*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlSingle\n  nameWithType: SqlBoolean.ToSqlSingle\n- uid: System.Data.SqlTypes.SqlBoolean.ToSqlString*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToSqlString\n  nameWithType: SqlBoolean.ToSqlString\n- uid: System.Data.SqlTypes.SqlBoolean.ToString*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: ToString\n  nameWithType: SqlBoolean.ToString\n- uid: System.Data.SqlTypes.SqlBoolean.Value*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Value\n  nameWithType: SqlBoolean.Value\n- uid: System.Data.SqlTypes.SqlBoolean.Xor*\n  parent: System.Data.SqlTypes.SqlBoolean\n  isExternal: false\n  name: Xor\n  nameWithType: SqlBoolean.Xor\n"}