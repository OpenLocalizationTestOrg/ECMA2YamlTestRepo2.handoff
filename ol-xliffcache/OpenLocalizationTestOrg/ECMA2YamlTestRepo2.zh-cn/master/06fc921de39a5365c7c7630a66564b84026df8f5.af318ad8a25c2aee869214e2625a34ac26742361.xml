{"nodes":[{"pos":[527,553],"content":"Creates a filter template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a filter template.","pos":[0,26]}]},{"pos":[566,1180],"content":"The FilterFactory class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type.       You can override the methods that are defined in this class to customize how filter templates are loaded. For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.       Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control. You can also create custom filter templates.","needQuote":false,"needEscape":true,"nodes":[{"content":"The FilterFactory class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type.       You can override the methods that are defined in this class to customize how filter templates are loaded. For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.       Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control. You can also create custom filter templates.","pos":[0,610],"nodes":[{"content":"The FilterFactory class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type.","pos":[0,127]},{"content":"You can override the methods that are defined in this class to customize how filter templates are loaded.","pos":[134,239]},{"content":"For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.","pos":[240,381]},{"content":"Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a &lt;xref:System.Web.UI.WebControls.DropDownList&gt; control.","pos":[388,565],"source":"       Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control."},{"content":"You can also create custom filter templates.","pos":[566,610]}]}]},{"pos":[1859,1957],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.FilterFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> class."},{"pos":[2683,2726],"content":"Creates an instance of the filter template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an instance of the filter template.","pos":[0,43]}]},{"pos":[2738,3058],"content":"This method is called by Dynamic Data to get an instance of a filter template. Derived classes can override this method to customize how instances of filter templates are created. For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called by Dynamic Data to get an instance of a filter template. Derived classes can override this method to customize how instances of filter templates are created. For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.","pos":[0,320],"nodes":[{"content":"This method is called by Dynamic Data to get an instance of a filter template.","pos":[0,78]},{"content":"Derived classes can override this method to customize how instances of filter templates are created.","pos":[79,179]},{"content":"For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.","pos":[180,320]}]}]},{"pos":[3330,3383],"content":"The data column to which the filter template applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data column to which the filter template applies.","pos":[0,53]}]},{"pos":[3452,3491],"content":"The name of the filter template to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the filter template to use.","pos":[0,39]}]},{"pos":[3585,3681],"content":"An instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.QueryableFilterUserControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"An instance of the <xref href=\"System.Web.DynamicData.QueryableFilterUserControl\"></xref> class."},{"pos":[3868,3900],"content":"<ph id=\"ph1\">&lt;code&gt;column&lt;/code&gt;</ph> is <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept>.","needQuote":true,"needEscape":true,"source":"<code>column</code> is **null**."},{"pos":[4491,4536],"content":"Gets the virtual path of the filter template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the virtual path of the filter template.","pos":[0,45]}]},{"pos":[4549,4821],"content":"By default, filter templates are located in the ~/DynamicData/Filers folder.       This method determines the virtual path of the folder that contains the field template. Derived classes can override this method to provide filter templates from a different virtual path.","needQuote":false,"needEscape":true,"nodes":[{"content":"By default, filter templates are located in the ~/DynamicData/Filers folder.       This method determines the virtual path of the folder that contains the field template. Derived classes can override this method to provide filter templates from a different virtual path.","pos":[0,270],"nodes":[{"content":"By default, filter templates are located in the ~/DynamicData/Filers folder.","pos":[0,76]},{"content":"This method determines the virtual path of the folder that contains the field template.","pos":[83,170]},{"content":"Derived classes can override this method to provide filter templates from a different virtual path.","pos":[171,270]}]}]},{"pos":[5052,5105],"content":"The data column to which the filter template applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data column to which the filter template applies.","pos":[0,53]}]},{"pos":[5174,5201],"content":"The filter template to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The filter template to use.","pos":[0,27]}]},{"pos":[5259,5299],"content":"The virtual path of the filter template.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path of the filter template.","pos":[0,40]}]},{"pos":[5487,5519],"content":"<ph id=\"ph1\">&lt;code&gt;column&lt;/code&gt;</ph> is <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept>.","needQuote":true,"needEscape":true,"source":"<code>column</code> is **null**."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.FilterFactory\n  id: FilterFactory\n  children:\n  - System.Web.DynamicData.FilterFactory.#ctor\n  - System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)\n  - System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)\n  langs:\n  - csharp\n  name: FilterFactory\n  nameWithType: FilterFactory\n  fullName: System.Web.DynamicData.FilterFactory\n  type: Class\n  summary: Creates a filter template.\n  remarks: \"The FilterFactory class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type.  \\n  \\n You can override the methods that are defined in this class to customize how filter templates are loaded. For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.  \\n  \\n Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control. You can also create custom filter templates.\"\n  example:\n  - For an example of table row filtering uses the default filter templates, see the <xref:System.Web.DynamicData.QueryableFilterRepeater> class.\n  syntax:\n    content: public class FilterFactory\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FilterFactory.#ctor\n  id: '#ctor'\n  parent: System.Web.DynamicData.FilterFactory\n  langs:\n  - csharp\n  name: FilterFactory()\n  nameWithType: FilterFactory.FilterFactory()\n  fullName: System.Web.DynamicData.FilterFactory.FilterFactory()\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> class.\n  syntax:\n    content: public FilterFactory ();\n    parameters: []\n  overload: System.Web.DynamicData.FilterFactory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)\n  id: CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)\n  parent: System.Web.DynamicData.FilterFactory\n  langs:\n  - csharp\n  name: CreateFilterControl(MetaColumn,String)\n  nameWithType: FilterFactory.CreateFilterControl(MetaColumn,String)\n  fullName: System.Web.DynamicData.FilterFactory.CreateFilterControl(MetaColumn,String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates an instance of the filter template.\n  remarks: This method is called by Dynamic Data to get an instance of a filter template. Derived classes can override this method to customize how instances of filter templates are created. For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.\n  syntax:\n    content: public virtual System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl (System.Web.DynamicData.MetaColumn column, string filterUIHint);\n    parameters:\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: The data column to which the filter template applies.\n    - id: filterUIHint\n      type: System.String\n      description: The name of the filter template to use.\n    return:\n      type: System.Web.DynamicData.QueryableFilterUserControl\n      description: An instance of the <xref href=\"System.Web.DynamicData.QueryableFilterUserControl\"></xref> class.\n  overload: System.Web.DynamicData.FilterFactory.CreateFilterControl*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>column</code> is **null**.\n  platform:\n  - net462\n- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)\n  id: GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)\n  parent: System.Web.DynamicData.FilterFactory\n  langs:\n  - csharp\n  name: GetFilterVirtualPath(MetaColumn,String)\n  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn,String)\n  fullName: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(MetaColumn,String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the virtual path of the filter template.\n  remarks: \"By default, filter templates are located in the ~/DynamicData/Filers folder.  \\n  \\n This method determines the virtual path of the folder that contains the field template. Derived classes can override this method to provide filter templates from a different virtual path.\"\n  syntax:\n    content: public virtual string GetFilterVirtualPath (System.Web.DynamicData.MetaColumn column, string filterUIHint);\n    parameters:\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: The data column to which the filter template applies.\n    - id: filterUIHint\n      type: System.String\n      description: The filter template to use.\n    return:\n      type: System.String\n      description: The virtual path of the filter template.\n  overload: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>column</code> is **null**.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.DynamicData.FilterFactory.#ctor\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: FilterFactory()\n  nameWithType: FilterFactory.FilterFactory()\n  fullName: System.Web.DynamicData.FilterFactory.FilterFactory()\n- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: CreateFilterControl(MetaColumn,String)\n  nameWithType: FilterFactory.CreateFilterControl(MetaColumn,String)\n  fullName: System.Web.DynamicData.FilterFactory.CreateFilterControl(MetaColumn,String)\n- uid: System.Web.DynamicData.QueryableFilterUserControl\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: QueryableFilterUserControl\n  nameWithType: QueryableFilterUserControl\n  fullName: System.Web.DynamicData.QueryableFilterUserControl\n- uid: System.Web.DynamicData.MetaColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaColumn\n  nameWithType: MetaColumn\n  fullName: System.Web.DynamicData.MetaColumn\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: GetFilterVirtualPath(MetaColumn,String)\n  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn,String)\n  fullName: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(MetaColumn,String)\n- uid: System.Web.DynamicData.FilterFactory.#ctor*\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: FilterFactory\n  nameWithType: FilterFactory.FilterFactory\n- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl*\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: CreateFilterControl\n  nameWithType: FilterFactory.CreateFilterControl\n- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: GetFilterVirtualPath\n  nameWithType: FilterFactory.GetFilterVirtualPath\n"}