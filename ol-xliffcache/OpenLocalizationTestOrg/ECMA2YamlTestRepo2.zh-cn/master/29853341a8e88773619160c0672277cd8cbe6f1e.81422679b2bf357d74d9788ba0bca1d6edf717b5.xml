{"nodes":[{"pos":[835,903],"content":"Provides text manipulation methods that are used by several classes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides text manipulation methods that are used by several classes.","pos":[0,68]}]},{"pos":[3681,3770],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlCharacterData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.XmlCharacterData\"></xref> class."},{"pos":[3940,4000],"content":"String that contains character data to be added to document.","needQuote":true,"needEscape":true,"nodes":[{"content":"String that contains character data to be added to document.","pos":[0,60]}]},{"pos":[4069,4139],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to contain character data.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Xml.XmlDocument\"></xref> to contain character data."},{"pos":[4595,4669],"content":"Appends the specified string to the end of the character data of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Appends the specified string to the end of the character data of the node.","pos":[0,74]}]},{"pos":[4681,4738],"content":"This method raises the XmlNodeChangedAction.Change event.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method raises the XmlNodeChangedAction.Change event.","pos":[0,57]}]},{"pos":[4890,4936],"content":"The string to insert into the existing string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to insert into the existing string.","pos":[0,46]}]},{"pos":[5315,5345],"content":"Contains the data of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains the data of the node.","pos":[0,30]}]},{"pos":[5357,5449],"content":"The data returned is equivalent to the <xref:System.Xml.XmlCharacterData.Value%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data returned is equivalent to the &lt;xref:System.Xml.XmlCharacterData.Value%2A&gt; property.","pos":[0,92],"source":"The data returned is equivalent to the <xref:System.Xml.XmlCharacterData.Value%2A> property."}]},{"pos":[5571,5592],"content":"The data of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data of the node.","pos":[0,21]}]},{"pos":[6086,6130],"content":"Removes a range of characters from the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a range of characters from the node.","pos":[0,44]}]},{"pos":[6142,6199],"content":"This method raises the XmlNodeChangedAction.Change event.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method raises the XmlNodeChangedAction.Change event.","pos":[0,57]}]},{"pos":[6356,6405],"content":"The position within the string to start deleting.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position within the string to start deleting.","pos":[0,49]}]},{"pos":[6466,6501],"content":"The number of characters to delete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters to delete.","pos":[0,35]}]},{"pos":[6905,6987],"content":"Gets or sets the concatenated values of the node and all the children of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the concatenated values of the node and all the children of the node.","pos":[0,82]}]},{"pos":[6999,7073],"content":"This property is a Microsoft extension to the Document Object Model (DOM).","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is a Microsoft extension to the Document Object Model (DOM).","pos":[0,74]}]},{"pos":[7201,7270],"content":"The concatenated values of the node and all the children of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The concatenated values of the node and all the children of the node.","pos":[0,69]}]},{"pos":[7774,7837],"content":"Inserts the specified string at the specified character offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts the specified string at the specified character offset.","pos":[0,63]}]},{"pos":[7849,7906],"content":"This method raises the XmlNodeChangedAction.Change event.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method raises the XmlNodeChangedAction.Change event.","pos":[0,57]}]},{"pos":[8068,8134],"content":"The position within the string to insert the supplied string data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position within the string to insert the supplied string data.","pos":[0,66]}]},{"pos":[8198,8262],"content":"The string data that is to be inserted into the existing string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string data that is to be inserted into the existing string.","pos":[0,64]}]},{"pos":[8651,8694],"content":"Gets the length of the data, in characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the length of the data, in characters.","pos":[0,43]}]},{"pos":[8809,8974],"content":"The length, in characters, of the string in the <xref:System.Xml.XmlCharacterData.Data*> property. The length may be zero; that is, CharacterData nodes can be empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length, in characters, of the string in the <xref:System.Xml.XmlCharacterData.Data*> property. The length may be zero; that is, CharacterData nodes can be empty.","pos":[0,165],"nodes":[{"content":"The length, in characters, of the string in the &lt;xref:System.Xml.XmlCharacterData.Data*&gt; property.","pos":[0,98],"source":"The length, in characters, of the string in the <xref:System.Xml.XmlCharacterData.Data*> property."},{"content":"The length may be zero; that is, CharacterData nodes can be empty.","pos":[99,165]}]}]},{"pos":[9524,9627],"content":"Replaces the specified number of characters starting at the specified offset with the specified string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces the specified number of characters starting at the specified offset with the specified string.","pos":[0,103]}]},{"pos":[9639,9696],"content":"This method raises the XmlNodeChangedAction.Change event.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method raises the XmlNodeChangedAction.Change event.","pos":[0,57]}]},{"pos":[9870,9920],"content":"The position within the string to start replacing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position within the string to start replacing.","pos":[0,50]}]},{"pos":[9981,10017],"content":"The number of characters to replace.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters to replace.","pos":[0,36]}]},{"pos":[10081,10128],"content":"The new data that replaces the old string data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new data that replaces the old string data.","pos":[0,47]}]},{"pos":[10624,10690],"content":"Retrieves a substring of the full string from the specified range.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a substring of the full string from the specified range.","pos":[0,66]}]},{"pos":[10848,10975],"content":"The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data.","pos":[0,127],"nodes":[{"content":"The position within the string to start retrieving.","pos":[0,51]},{"content":"An offset of zero indicates the starting point is at the start of the data.","pos":[52,127]}]}]},{"pos":[11036,11073],"content":"The number of characters to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters to retrieve.","pos":[0,37]}]},{"pos":[11131,11182],"content":"The substring corresponding to the specified range.","needQuote":true,"needEscape":true,"nodes":[{"content":"The substring corresponding to the specified range.","pos":[0,51]}]},{"pos":[11565,11600],"content":"Gets or sets the value of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value of the node.","pos":[0,35]}]},{"pos":[11724,11746],"content":"The value of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the node.","pos":[0,22]}]},{"pos":[11902,11920],"content":"Node is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Node is read-only.","pos":[0,18]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlCharacterData\n  id: XmlCharacterData\n  children:\n  - System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)\n  - System.Xml.XmlCharacterData.AppendData(System.String)\n  - System.Xml.XmlCharacterData.Data\n  - System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  - System.Xml.XmlCharacterData.InnerText\n  - System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  - System.Xml.XmlCharacterData.Length\n  - System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  - System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  - System.Xml.XmlCharacterData.Value\n  langs:\n  - csharp\n  name: XmlCharacterData\n  nameWithType: XmlCharacterData\n  fullName: System.Xml.XmlCharacterData\n  type: Class\n  summary: Provides text manipulation methods that are used by several classes.\n  syntax:\n    content: 'public abstract class XmlCharacterData : System.Xml.XmlLinkedNode'\n  inheritance:\n  - System.Object\n  - System.Xml.XmlNode\n  - System.Xml.XmlLinkedNode\n  implements: []\n  inheritedMembers:\n  - System.Xml.XmlLinkedNode.NextSibling\n  - System.Xml.XmlLinkedNode.PreviousSibling\n  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.Attributes\n  - System.Xml.XmlNode.BaseURI\n  - System.Xml.XmlNode.ChildNodes\n  - System.Xml.XmlNode.Clone\n  - System.Xml.XmlNode.CloneNode(System.Boolean)\n  - System.Xml.XmlNode.CreateNavigator\n  - System.Xml.XmlNode.FirstChild\n  - System.Xml.XmlNode.GetEnumerator\n  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  - System.Xml.XmlNode.HasChildNodes\n  - System.Xml.XmlNode.InnerXml\n  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.IsReadOnly\n  - System.Xml.XmlNode.Item(System.String)\n  - System.Xml.XmlNode.Item(System.String,System.String)\n  - System.Xml.XmlNode.LastChild\n  - System.Xml.XmlNode.LocalName\n  - System.Xml.XmlNode.Name\n  - System.Xml.XmlNode.NamespaceURI\n  - System.Xml.XmlNode.NodeType\n  - System.Xml.XmlNode.Normalize\n  - System.Xml.XmlNode.OuterXml\n  - System.Xml.XmlNode.OwnerDocument\n  - System.Xml.XmlNode.ParentNode\n  - System.Xml.XmlNode.Prefix\n  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.PreviousText\n  - System.Xml.XmlNode.RemoveAll\n  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.SchemaInfo\n  - System.Xml.XmlNode.SelectNodes(System.String)\n  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)\n  - System.Xml.XmlNode.SelectSingleNode(System.String)\n  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)\n  - System.Xml.XmlNode.Supports(System.String,System.String)\n  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  - System.Xml.XmlNode.System#ICloneable#Clone\n  - System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  - System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  platform:\n  - net462\n- uid: System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)\n  id: '#ctor(System.String,System.Xml.XmlDocument)'\n  parent: System.Xml.XmlCharacterData\n  langs:\n  - csharp\n  name: XmlCharacterData(String,XmlDocument)\n  nameWithType: XmlCharacterData.XmlCharacterData(String,XmlDocument)\n  fullName: System.Xml.XmlCharacterData.XmlCharacterData(String,XmlDocument)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlCharacterData\"></xref> class.\n  syntax:\n    content: protected XmlCharacterData (string data, System.Xml.XmlDocument doc);\n    parameters:\n    - id: data\n      type: System.String\n      description: String that contains character data to be added to document.\n    - id: doc\n      type: System.Xml.XmlDocument\n      description: <xref href=\"System.Xml.XmlDocument\"></xref> to contain character data.\n  overload: System.Xml.XmlCharacterData.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlCharacterData.AppendData(System.String)\n  id: AppendData(System.String)\n  parent: System.Xml.XmlCharacterData\n  langs:\n  - csharp\n  name: AppendData(String)\n  nameWithType: XmlCharacterData.AppendData(String)\n  fullName: System.Xml.XmlCharacterData.AppendData(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Appends the specified string to the end of the character data of the node.\n  remarks: This method raises the XmlNodeChangedAction.Change event.\n  syntax:\n    content: public virtual void AppendData (string strData);\n    parameters:\n    - id: strData\n      type: System.String\n      description: The string to insert into the existing string.\n  overload: System.Xml.XmlCharacterData.AppendData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlCharacterData.Data\n  id: Data\n  parent: System.Xml.XmlCharacterData\n  langs:\n  - csharp\n  name: Data\n  nameWithType: XmlCharacterData.Data\n  fullName: System.Xml.XmlCharacterData.Data\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Contains the data of the node.\n  remarks: The data returned is equivalent to the <xref:System.Xml.XmlCharacterData.Value%2A> property.\n  syntax:\n    content: public virtual string Data { get; set; }\n    return:\n      type: System.String\n      description: The data of the node.\n  overload: System.Xml.XmlCharacterData.Data*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  id: DeleteData(System.Int32,System.Int32)\n  parent: System.Xml.XmlCharacterData\n  langs:\n  - csharp\n  name: DeleteData(Int32,Int32)\n  nameWithType: XmlCharacterData.DeleteData(Int32,Int32)\n  fullName: System.Xml.XmlCharacterData.DeleteData(Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Removes a range of characters from the node.\n  remarks: This method raises the XmlNodeChangedAction.Change event.\n  syntax:\n    content: public virtual void DeleteData (int offset, int count);\n    parameters:\n    - id: offset\n      type: System.Int32\n      description: The position within the string to start deleting.\n    - id: count\n      type: System.Int32\n      description: The number of characters to delete.\n  overload: System.Xml.XmlCharacterData.DeleteData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlCharacterData.InnerText\n  id: InnerText\n  parent: System.Xml.XmlCharacterData\n  langs:\n  - csharp\n  name: InnerText\n  nameWithType: XmlCharacterData.InnerText\n  fullName: System.Xml.XmlCharacterData.InnerText\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets or sets the concatenated values of the node and all the children of the node.\n  remarks: This property is a Microsoft extension to the Document Object Model (DOM).\n  syntax:\n    content: public override string InnerText { get; set; }\n    return:\n      type: System.String\n      description: The concatenated values of the node and all the children of the node.\n  overload: System.Xml.XmlCharacterData.InnerText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  id: InsertData(System.Int32,System.String)\n  parent: System.Xml.XmlCharacterData\n  langs:\n  - csharp\n  name: InsertData(Int32,String)\n  nameWithType: XmlCharacterData.InsertData(Int32,String)\n  fullName: System.Xml.XmlCharacterData.InsertData(Int32,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Inserts the specified string at the specified character offset.\n  remarks: This method raises the XmlNodeChangedAction.Change event.\n  syntax:\n    content: public virtual void InsertData (int offset, string strData);\n    parameters:\n    - id: offset\n      type: System.Int32\n      description: The position within the string to insert the supplied string data.\n    - id: strData\n      type: System.String\n      description: The string data that is to be inserted into the existing string.\n  overload: System.Xml.XmlCharacterData.InsertData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlCharacterData.Length\n  id: Length\n  parent: System.Xml.XmlCharacterData\n  langs:\n  - csharp\n  name: Length\n  nameWithType: XmlCharacterData.Length\n  fullName: System.Xml.XmlCharacterData.Length\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the length of the data, in characters.\n  syntax:\n    content: public virtual int Length { get; }\n    return:\n      type: System.Int32\n      description: The length, in characters, of the string in the <xref:System.Xml.XmlCharacterData.Data*> property. The length may be zero; that is, CharacterData nodes can be empty.\n  overload: System.Xml.XmlCharacterData.Length*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  id: ReplaceData(System.Int32,System.Int32,System.String)\n  parent: System.Xml.XmlCharacterData\n  langs:\n  - csharp\n  name: ReplaceData(Int32,Int32,String)\n  nameWithType: XmlCharacterData.ReplaceData(Int32,Int32,String)\n  fullName: System.Xml.XmlCharacterData.ReplaceData(Int32,Int32,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Replaces the specified number of characters starting at the specified offset with the specified string.\n  remarks: This method raises the XmlNodeChangedAction.Change event.\n  syntax:\n    content: public virtual void ReplaceData (int offset, int count, string strData);\n    parameters:\n    - id: offset\n      type: System.Int32\n      description: The position within the string to start replacing.\n    - id: count\n      type: System.Int32\n      description: The number of characters to replace.\n    - id: strData\n      type: System.String\n      description: The new data that replaces the old string data.\n  overload: System.Xml.XmlCharacterData.ReplaceData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  id: Substring(System.Int32,System.Int32)\n  parent: System.Xml.XmlCharacterData\n  langs:\n  - csharp\n  name: Substring(Int32,Int32)\n  nameWithType: XmlCharacterData.Substring(Int32,Int32)\n  fullName: System.Xml.XmlCharacterData.Substring(Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Retrieves a substring of the full string from the specified range.\n  syntax:\n    content: public virtual string Substring (int offset, int count);\n    parameters:\n    - id: offset\n      type: System.Int32\n      description: The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data.\n    - id: count\n      type: System.Int32\n      description: The number of characters to retrieve.\n    return:\n      type: System.String\n      description: The substring corresponding to the specified range.\n  overload: System.Xml.XmlCharacterData.Substring*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlCharacterData.Value\n  id: Value\n  parent: System.Xml.XmlCharacterData\n  langs:\n  - csharp\n  name: Value\n  nameWithType: XmlCharacterData.Value\n  fullName: System.Xml.XmlCharacterData.Value\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets or sets the value of the node.\n  syntax:\n    content: public override string Value { get; set; }\n    return:\n      type: System.String\n      description: The value of the node.\n  overload: System.Xml.XmlCharacterData.Value*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Node is read-only.\n  platform:\n  - net462\nreferences:\n- uid: System.Xml.XmlLinkedNode\n  isExternal: false\n  name: System.Xml.XmlLinkedNode\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: XmlCharacterData(String,XmlDocument)\n  nameWithType: XmlCharacterData.XmlCharacterData(String,XmlDocument)\n  fullName: System.Xml.XmlCharacterData.XmlCharacterData(String,XmlDocument)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  nameWithType: XmlDocument\n  fullName: System.Xml.XmlDocument\n- uid: System.Xml.XmlCharacterData.AppendData(System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: AppendData(String)\n  nameWithType: XmlCharacterData.AppendData(String)\n  fullName: System.Xml.XmlCharacterData.AppendData(String)\n- uid: System.Xml.XmlCharacterData.Data\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Data\n  nameWithType: XmlCharacterData.Data\n  fullName: System.Xml.XmlCharacterData.Data\n- uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: DeleteData(Int32,Int32)\n  nameWithType: XmlCharacterData.DeleteData(Int32,Int32)\n  fullName: System.Xml.XmlCharacterData.DeleteData(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.XmlCharacterData.InnerText\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: InnerText\n  nameWithType: XmlCharacterData.InnerText\n  fullName: System.Xml.XmlCharacterData.InnerText\n- uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: InsertData(Int32,String)\n  nameWithType: XmlCharacterData.InsertData(Int32,String)\n  fullName: System.Xml.XmlCharacterData.InsertData(Int32,String)\n- uid: System.Xml.XmlCharacterData.Length\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Length\n  nameWithType: XmlCharacterData.Length\n  fullName: System.Xml.XmlCharacterData.Length\n- uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: ReplaceData(Int32,Int32,String)\n  nameWithType: XmlCharacterData.ReplaceData(Int32,Int32,String)\n  fullName: System.Xml.XmlCharacterData.ReplaceData(Int32,Int32,String)\n- uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Substring(Int32,Int32)\n  nameWithType: XmlCharacterData.Substring(Int32,Int32)\n  fullName: System.Xml.XmlCharacterData.Substring(Int32,Int32)\n- uid: System.Xml.XmlCharacterData.Value\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Value\n  nameWithType: XmlCharacterData.Value\n  fullName: System.Xml.XmlCharacterData.Value\n- uid: System.Xml.XmlCharacterData.#ctor*\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: XmlCharacterData\n  nameWithType: XmlCharacterData.XmlCharacterData\n- uid: System.Xml.XmlCharacterData.AppendData*\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: AppendData\n  nameWithType: XmlCharacterData.AppendData\n- uid: System.Xml.XmlCharacterData.Data*\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Data\n  nameWithType: XmlCharacterData.Data\n- uid: System.Xml.XmlCharacterData.DeleteData*\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: DeleteData\n  nameWithType: XmlCharacterData.DeleteData\n- uid: System.Xml.XmlCharacterData.InnerText*\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: InnerText\n  nameWithType: XmlCharacterData.InnerText\n- uid: System.Xml.XmlCharacterData.InsertData*\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: InsertData\n  nameWithType: XmlCharacterData.InsertData\n- uid: System.Xml.XmlCharacterData.Length*\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Length\n  nameWithType: XmlCharacterData.Length\n- uid: System.Xml.XmlCharacterData.ReplaceData*\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: ReplaceData\n  nameWithType: XmlCharacterData.ReplaceData\n- uid: System.Xml.XmlCharacterData.Substring*\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Substring\n  nameWithType: XmlCharacterData.Substring\n- uid: System.Xml.XmlCharacterData.Value*\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Value\n  nameWithType: XmlCharacterData.Value\n"}