{"nodes":[{"pos":[4378,4449],"content":"The Forest class represents an Active Directory Domain Services forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Forest class represents an Active Directory Domain Services forest.","pos":[0,71]}]},{"pos":[5090,5152],"content":"Gets a collection of all application partitions in the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of all application partitions in the forest.","pos":[0,62]}]},{"pos":[5401,5568],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains all of the application partitions in this forest.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection\"></xref> object that contains all of the application partitions in this forest."},{"pos":[5860,5924],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[6121,6169],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[6276,6305],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[7117,7190],"content":"Creates the local side of a trust relationship with the specified forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the local side of a trust relationship with the specified forest.","pos":[0,73]}]},{"pos":[7203,7766],"content":"This method creates one side of a trust relationship. The trust is not established until both sides of the trust have been created.       The `trustPassword` parameter associates a password with the created trust. When the other side of the trust is created, the same password is provided and the two local trusts are then bound to each other.       To programmatically create both sides of a trust relationship in a single method call, use the <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=fullName> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method creates one side of a trust relationship.","pos":[0,53]},{"content":"The trust is not established until both sides of the trust have been created.","pos":[54,131]},{"content":"The <ph id=\"ph1\">`trustPassword`</ph> parameter associates a password with the created trust.","pos":[138,213],"source":"       The `trustPassword` parameter associates a password with the created trust."},{"content":"When the other side of the trust is created, the same password is provided and the two local trusts are then bound to each other.","pos":[214,343]},{"content":"To programmatically create both sides of a trust relationship in a single method call, use the &lt;xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=fullName&gt; method.","pos":[350,559],"source":"       To programmatically create both sides of a trust relationship in a single method call, use the <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=fullName> method."}]},{"pos":[8042,8100],"content":"The DNS name of the forest that the trust is created with.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DNS name of the forest that the trust is created with.","pos":[0,58]}]},{"pos":[8208,8372],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> members that determines the direction of the trust, relative to this forest.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> members that determines the direction of the trust, relative to this forest."},{"pos":[8442,8515],"content":"The password for the trust. See the Remarks section for more information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password for the trust. See the Remarks section for more information.","pos":[0,73],"nodes":[{"content":"The password for the trust.","pos":[0,27]},{"content":"See the Remarks section for more information.","pos":[28,73]}]}]},{"pos":[8826,8864],"content":"The trust relationship already exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"The trust relationship already exists.","pos":[0,38]}]},{"pos":[9059,9123],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[9320,9368],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[9463,9540],"content":"<ph id=\"ph1\">&lt;code&gt;targetForest&lt;/code&gt;</ph> name or <ph id=\"ph2\">&lt;code&gt;trustPassword&lt;/code&gt;</ph> string is empty.","needQuote":true,"needEscape":true,"source":"<code>targetForest</code> name or <code>trustPassword</code> string is empty."},{"pos":[9643,9763],"content":"<ph id=\"ph1\">&lt;code&gt;targetForest&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;trustPassword&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForest</code> or <code>trustPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9910,10031],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"<code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value."},{"pos":[10138,10167],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[10282,10355],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[11131,11200],"content":"Creates both sides of a trust relationship with the specified forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates both sides of a trust relationship with the specified forest.","pos":[0,69]}]},{"pos":[11212,11466],"content":"This method creates both sides of a trust relationship with a single method call. The <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName> method is used to create only one side of a trust.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method creates both sides of a trust relationship with a single method call. The <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName> method is used to create only one side of a trust.","pos":[0,254],"nodes":[{"content":"This method creates both sides of a trust relationship with a single method call.","pos":[0,81]},{"content":"The &lt;xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName&gt; method is used to create only one side of a trust.","pos":[82,254],"source":" The <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName> method is used to create only one side of a trust."}]}]},{"pos":[11775,11917],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the forest that the trust is being created with.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest that the trust is being created with."},{"pos":[12025,12189],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> members that determines the direction of the trust, relative to this forest.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> members that determines the direction of the trust, relative to this forest."},{"pos":[12489,12527],"content":"The trust relationship already exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"The trust relationship already exists.","pos":[0,38]}]},{"pos":[12722,12786],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[12983,13031],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[13134,13224],"content":"<ph id=\"ph1\">&lt;code&gt;targetForest&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForest</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13371,13492],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"<code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value."},{"pos":[13599,13628],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[13743,13816],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[14422,14469],"content":"Deletes the local side of a trust relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes the local side of a trust relationship.","pos":[0,47]}]},{"pos":[14482,14765],"content":"When one side of a trust relationship is deleted, the trust is no longer established.       To delete both sides of a trust relationship with one method call, use the <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=fullName> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"When one side of a trust relationship is deleted, the trust is no longer established.       To delete both sides of a trust relationship with one method call, use the <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=fullName> method.","pos":[0,281],"nodes":[{"content":"When one side of a trust relationship is deleted, the trust is no longer established.","pos":[0,85]},{"content":"To delete both sides of a trust relationship with one method call, use the &lt;xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=fullName&gt; method.","pos":[92,281],"source":"       To delete both sides of a trust relationship with one method call, use the <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=fullName> method."}]}]},{"pos":[14952,15006],"content":"The DNS name of the forest that the trust exists with.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DNS name of the forest that the trust exists with.","pos":[0,54]}]},{"pos":[15321,15495],"content":"There is no trust relationship with the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForestName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter."},{"pos":[15690,15754],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[15951,15999],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[16094,16143],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is an empty string."},{"pos":[16246,16340],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16447,16476],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[16591,16664],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[17283,17326],"content":"Deletes both sides of a trust relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes both sides of a trust relationship.","pos":[0,43]}]},{"pos":[17338,17520],"content":"To delete only one side of a trust relationship, use the <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"To delete only one side of a trust relationship, use the &lt;xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName&gt; method.","pos":[0,182],"source":"To delete only one side of a trust relationship, use the <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName> method."}]},{"pos":[17762,17894],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the forest that the trust exists with.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest that the trust exists with."},{"pos":[18198,18317],"content":"There is no trust relationship with the specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the specified <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[18512,18576],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[18773,18821],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[18924,19014],"content":"<ph id=\"ph1\">&lt;code&gt;targetForest&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForest</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19121,19150],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[19265,19338],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[19761,19834],"content":"Releases all managed and unmanaged resources that are held by the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases all managed and unmanaged resources that are held by the object.","pos":[0,73]}]},{"pos":[20462,20567],"content":"Releases the managed resources that are used by the object and, optionally, releases unmanaged resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases the managed resources that are used by the object and, optionally, releases unmanaged resources.","pos":[0,105]}]},{"pos":[20714,21025],"content":"A <xref:System.Boolean> value that determines if the managed resources should be released. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources should be released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only the unmanaged resources should be released.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that determines if the managed resources should be released.","pos":[0,90],"source":"A <xref:System.Boolean> value that determines if the managed resources should be released."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the managed resources should be released; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if only the unmanaged resources should be released.","pos":[91,311],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources should be released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only the unmanaged resources should be released."}]},{"pos":[21530,21577],"content":"Gets a collection of all domains in the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of all domains in the forest.","pos":[0,47]}]},{"pos":[21784,22055],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection that contains the <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> domains in the current <bpt id=\"p3\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainCollection\"></xref> collection that contains the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> domains in the current <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[22333,22397],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[22594,22642],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[22749,22778],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[23331,23392],"content":"Finds all of the discoverable global catalogs in this forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finds all of the discoverable global catalogs in this forest.","pos":[0,61]}]},{"pos":[23404,23586],"content":"You can find discoverable domain controllers by querying DNS SRV records.  Only global catalogs that register a generic, non-site-specific, GC SRV record are returned by this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can find discoverable domain controllers by querying DNS SRV records.  Only global catalogs that register a generic, non-site-specific, GC SRV record are returned by this method.","pos":[0,182],"nodes":[{"content":"You can find discoverable domain controllers by querying DNS SRV records.","pos":[0,73]},{"content":"Only global catalogs that register a generic, non-site-specific, GC SRV record are returned by this method.","pos":[75,182]}]}]},{"pos":[23847,23999],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the collection of global catalogs that were found.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"></xref> that contains the collection of global catalogs that were found."},{"pos":[24305,24353],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[24460,24489],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[25090,25171],"content":"Finds all of the discoverable global catalogs in this forest in a specified site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finds all of the discoverable global catalogs in this forest in a specified site.","pos":[0,81]}]},{"pos":[25184,25618],"content":"You can find discoverable global catalogs by querying DNS SRV records.  If a global catalog does not register a GC SRV record for the specified site, it will not be returned by this method, even if the global catalog is physically located within that site.       All global catalogs which register a GC SRV record for the specified site will be returned by this method, even if they might not be physically located within that site.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can find discoverable global catalogs by querying DNS SRV records.  If a global catalog does not register a GC SRV record for the specified site, it will not be returned by this method, even if the global catalog is physically located within that site.       All global catalogs which register a GC SRV record for the specified site will be returned by this method, even if they might not be physically located within that site.","pos":[0,432],"nodes":[{"content":"You can find discoverable global catalogs by querying DNS SRV records.","pos":[0,70]},{"content":"If a global catalog does not register a GC SRV record for the specified site, it will not be returned by this method, even if the global catalog is physically located within that site.","pos":[72,256]},{"content":"All global catalogs which register a GC SRV record for the specified site will be returned by this method, even if they might not be physically located within that site.","pos":[263,432]}]}]},{"pos":[25848,25879],"content":"The name of the site to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the site to search.","pos":[0,31]}]},{"pos":[25988,26140],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the collection of global catalogs that were found.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"></xref> that contains the collection of global catalogs that were found."},{"pos":[26446,26494],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[26589,26630],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>siteName</code> is an empty string."},{"pos":[26733,26819],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>siteName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[26926,26955],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[27448,27493],"content":"Finds all the global catalogs in this forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finds all the global catalogs in this forest.","pos":[0,45]}]},{"pos":[27742,27894],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the collection of global catalogs that were found.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"></xref> that contains the collection of global catalogs that were found."},{"pos":[28188,28236],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[28343,28372],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[28913,28975],"content":"Finds all the global catalogs in this forest for a given site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finds all the global catalogs in this forest for a given site.","pos":[0,62]}]},{"pos":[29192,29223],"content":"The name of the site to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the site to search.","pos":[0,31]}]},{"pos":[29332,29491],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the collection of global catalogs that were found.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"></xref> object that contains the collection of global catalogs that were found."},{"pos":[29785,29833],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[29928,29969],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>siteName</code> is an empty string."},{"pos":[30072,30158],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>siteName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[30265,30294],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[30767,30807],"content":"Finds any global catalog in this forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finds any global catalog in this forest.","pos":[0,40]}]},{"pos":[31032,31187],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of this <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"></xref> of this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[31485,31520],"content":"A global catalog cannot be located.","needQuote":true,"needEscape":true,"nodes":[{"content":"A global catalog cannot be located.","pos":[0,35]}]},{"pos":[31715,31779],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[31886,31915],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[32544,32616],"content":"Finds a global catalog in this forest for a specified location criteria.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finds a global catalog in this forest for a specified location criteria.","pos":[0,72]}]},{"pos":[32902,33020],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value specifying the location criteria.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"></xref> value specifying the location criteria."},{"pos":[33119,33240],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the specified location criteria.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"></xref> object for the specified location criteria."},{"pos":[33538,33573],"content":"A global catalog cannot be located.","needQuote":true,"needEscape":true,"nodes":[{"content":"A global catalog cannot be located.","pos":[0,35]}]},{"pos":[33768,33832],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[33939,33968],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[34489,34548],"content":"Finds a global catalog in this forest for a specified site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finds a global catalog in this forest for a specified site.","pos":[0,59]}]},{"pos":[34751,34782],"content":"The name of the site to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the site to search.","pos":[0,31]}]},{"pos":[34881,34989],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the specified site.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"></xref> object for the specified site."},{"pos":[35287,35322],"content":"A global catalog cannot be located.","needQuote":true,"needEscape":true,"nodes":[{"content":"A global catalog cannot be located.","pos":[0,35]}]},{"pos":[35517,35581],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[35676,35717],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>siteName</code> is an empty string."},{"pos":[35820,35906],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>siteName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[36013,36042],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[36720,36801],"content":"Finds a global catalog in this forest for a specified site and location criteria.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finds a global catalog in this forest for a specified site and location criteria.","pos":[0,81]}]},{"pos":[37066,37097],"content":"The name of the site to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the site to search.","pos":[0,31]}]},{"pos":[37200,37322],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that specifies the location criteria.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"></xref> value that specifies the location criteria."},{"pos":[37421,37551],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the specified site and location criteria.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"></xref> object for the specified site and location criteria."},{"pos":[37849,37884],"content":"A global catalog cannot be located.","needQuote":true,"needEscape":true,"nodes":[{"content":"A global catalog cannot be located.","pos":[0,35]}]},{"pos":[38079,38143],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[38238,38279],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>siteName</code> is an empty string."},{"pos":[38382,38468],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>siteName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[38575,38604],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[39038,39076],"content":"Gets the operating mode of the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the operating mode of the forest.","pos":[0,38]}]},{"pos":[39274,39472],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ForestMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the current forest mode of this <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ForestMode\"></xref> value that represents the current forest mode of this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[39753,39817],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[40014,40062],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[40169,40198],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[40657,40701],"content":"Gets the operating mode level of the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the operating mode level of the forest.","pos":[0,44]}]},{"pos":[40817,40856],"content":"The operating mode level of the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"The operating mode level of the forest.","pos":[0,39]}]},{"pos":[41458,41525],"content":"Gets a collection of the trust relationships of the current forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the trust relationships of the current forest.","pos":[0,67]}]},{"pos":[41807,42154],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection that contains <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects that represents trust relationships of the current <bpt id=\"p3\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\"></xref> collection that contains <xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\"></xref> objects that represents trust relationships of the current <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[42449,42513],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[42710,42758],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[42865,42894],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[43009,43082],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[43550,43662],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the current user context.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for the current user context."},{"pos":[43879,43992],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the current forest.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the current forest."},{"pos":[44279,44343],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[44942,45051],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the specified context.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for the specified context."},{"pos":[45339,45498],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the target and credentials to use to retrieve the object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use to retrieve the object."},{"pos":[45590,45729],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the forest that was retrieved by this method.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest that was retrieved by this method."},{"pos":[46019,46106],"content":"A connection to the target that is specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> could not be made.","needQuote":true,"needEscape":true,"source":"A connection to the target that is specified in <code>context</code> could not be made."},{"pos":[46301,46365],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[46460,46494],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is not valid.","needQuote":true,"needEscape":true,"source":"<code>context</code> is not valid."},{"pos":[46597,46682],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[47278,47642],"content":"Gets a Boolean value that indicates whether selective authentication is enabled on the inbound trust relationship with the specified forest.  <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if selective authentication is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. For more information, see the Remarks section.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a Boolean value that indicates whether selective authentication is enabled on the inbound trust relationship with the specified forest.","pos":[0,140]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if selective authentication is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[142,317],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if selective authentication is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"For more information, see the Remarks section.","pos":[318,364]}]},{"pos":[47655,48420],"content":"For a forest trust, if you opt for selective authentication, permissions must be manually enabled on each domain and resource in the local forest to which you want users in the other forest to have access.       When a user authenticates across a trust for which selective authentication is enabled, an Other Organization security ID (SID) is added to the user's authorization data. The presence of this SID prompts a check on the resource domain to ensure that the user is allowed to authenticate to the particular service. After the user is authenticated, the server that authenticates the user adds the This Organization SID if the Other Organization SID is not already present. Only one of these special SIDs can be present in an authenticated user's context.","needQuote":false,"needEscape":true,"nodes":[{"content":"For a forest trust, if you opt for selective authentication, permissions must be manually enabled on each domain and resource in the local forest to which you want users in the other forest to have access.       When a user authenticates across a trust for which selective authentication is enabled, an Other Organization security ID (SID) is added to the user's authorization data. The presence of this SID prompts a check on the resource domain to ensure that the user is allowed to authenticate to the particular service. After the user is authenticated, the server that authenticates the user adds the This Organization SID if the Other Organization SID is not already present. Only one of these special SIDs can be present in an authenticated user's context.","pos":[0,763],"nodes":[{"content":"For a forest trust, if you opt for selective authentication, permissions must be manually enabled on each domain and resource in the local forest to which you want users in the other forest to have access.","pos":[0,205]},{"content":"When a user authenticates across a trust for which selective authentication is enabled, an Other Organization security ID (SID) is added to the user's authorization data.","pos":[212,382]},{"content":"The presence of this SID prompts a check on the resource domain to ensure that the user is allowed to authenticate to the particular service.","pos":[383,524]},{"content":"After the user is authenticated, the server that authenticates the user adds the This Organization SID if the Other Organization SID is not already present.","pos":[525,681]},{"content":"Only one of these special SIDs can be present in an authenticated user's context.","pos":[682,763]}]}]},{"pos":[48605,48743],"content":"The DNS name of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with which the inbound trust relationship exists.","needQuote":true,"needEscape":true,"source":"The DNS name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> with which the inbound trust relationship exists."},{"pos":[48802,48977],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if selective authentication is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if selective authentication is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[49290,49450],"content":"There is no trust relationship with the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForestName</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by <code>targetForestName</code>."},{"pos":[49645,49980],"content":"The call to LsaQueryTrustedDomainInfoByName failed. For more information, see the topic [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).","needQuote":true,"needEscape":true,"nodes":[{"content":"The call to LsaQueryTrustedDomainInfoByName failed.","pos":[0,51]},{"content":"For more information, see the topic <bpt id=\"p1\">[</bpt>LsaQueryTrustedDomainInfoByName<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp)</ept> in the MSDN Library at <bpt id=\"p2\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p2\">](http://msdn.microsoft.com/library)</ept>.","pos":[52,335],"source":" For more information, see the topic [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."}]},{"pos":[50177,50225],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[50320,50369],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is an empty string."},{"pos":[50472,50566],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[50673,50710],"content":"The current object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]},{"pos":[50825,50898],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[51439,51480],"content":"Gets the SID filtering status of a trust.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the SID filtering status of a trust.","pos":[0,41]}]},{"pos":[51653,51790],"content":"The DNS name of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with which the trust relationship exists.","needQuote":true,"needEscape":true,"source":"The DNS name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object with which the trust relationship exists."},{"pos":[51849,52013],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if SID filtering is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if SID filtering is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[52315,52482],"content":"There is no trust relationship with the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForestName</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that is specified by <code>targetForestName</code>."},{"pos":[52677,52741],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[52938,52986],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[53081,53130],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is an empty string."},{"pos":[53233,53327],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[53434,53471],"content":"The current object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]},{"pos":[53586,53659],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[54195,54268],"content":"Gets the trust relationship between this forest and the specified forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the trust relationship between this forest and the specified forest.","pos":[0,73]}]},{"pos":[54511,54666],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for which the trust relationship information is to be obtained.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for which the trust relationship information is to be obtained."},{"pos":[54786,54976],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the trust relationship between this forest and the specified forest.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation\"></xref> object that represents the trust relationship between this forest and the specified forest."},{"pos":[55277,55437],"content":"There is no trust relationship with the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForestName</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by <code>targetForestName</code>."},{"pos":[55632,55696],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[55893,55941],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[56036,56085],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is an empty string."},{"pos":[56188,56282],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[56389,56426],"content":"The current object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]},{"pos":[56541,56614],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[57068,57123],"content":"Gets a collection of all global catalogs in the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of all global catalogs in the forest.","pos":[0,55]}]},{"pos":[57351,57644],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection that contains the <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> global catalogs in the current <bpt id=\"p3\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"></xref> collection that contains the <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"></xref> global catalogs in the current <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[57931,57979],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[58086,58115],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[58519,58547],"content":"Gets the name of the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the forest.","pos":[0,28]}]},{"pos":[58656,58742],"content":"The name of this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name of this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[58929,58958],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[59417,59498],"content":"Gets the domain controller that holds the FSMO naming master role for the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the domain controller that holds the FSMO naming master role for the forest.","pos":[0,81]}]},{"pos":[59713,59947],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the domain controller that is the FSMO naming master of this <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that is the FSMO naming master of this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[60233,60297],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[60494,60542],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[60649,60678],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[61322,61366],"content":"Raises the mode of operation for the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the mode of operation for the forest.","pos":[0,44]}]},{"pos":[61379,62421],"content":"The <xref:System.DirectoryServices.ActiveDirectory.ForestMode> value can be raised but not lowered. This means that raising the functionality level of the forest is not reversible and the decision to do this should be made carefully.       For more information about forest operational modes, see [Domain and forest functionality](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).       The following table defines the valid values for `forestMode` based on the current operating mode of the forest.      |Current mode|Mode can be raised to|   |------------------|---------------------------|   |<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.ForestMode>|   |<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|   |<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.DirectoryServices.ActiveDirectory.ForestMode> value can be raised but not lowered. This means that raising the functionality level of the forest is not reversible and the decision to do this should be made carefully.       For more information about forest operational modes, see [Domain and forest functionality](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).       The following table defines the valid values for `forestMode` based on the current operating mode of the forest.      |Current mode|Mode can be raised to|   |------------------|---------------------------|   |<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode>","pos":[0,770],"nodes":[{"content":"The &lt;xref:System.DirectoryServices.ActiveDirectory.ForestMode&gt; value can be raised but not lowered.","pos":[0,99],"source":"The <xref:System.DirectoryServices.ActiveDirectory.ForestMode> value can be raised but not lowered."},{"content":"This means that raising the functionality level of the forest is not reversible and the decision to do this should be made carefully.","pos":[100,233]},{"content":"For more information about forest operational modes, see <bpt id=\"p1\">[</bpt>Domain and forest functionality<ept id=\"p1\">](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp)</ept>.","pos":[240,437],"source":"       For more information about forest operational modes, see [Domain and forest functionality](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp)."},{"content":"The following table defines the valid values for <ph id=\"ph1\">`forestMode`</ph> based on the current operating mode of the forest.","pos":[444,556],"source":"       The following table defines the valid values for `forestMode` based on the current operating mode of the forest."},{"content":"|Current mode|Mode can be raised to|   |------------------|---------------------------|   |&lt;xref:System.DirectoryServices.ActiveDirectory.ForestMode&gt;|&lt;xref:System.DirectoryServices.ActiveDirectory.ForestMode&gt;","pos":[562,770],"source":"      |Current mode|Mode can be raised to|   |------------------|---------------------------|   |<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode>"}]},{"content":"&lt;xref:System.DirectoryServices.ActiveDirectory.ForestMode&gt;|   |&lt;xref:System.DirectoryServices.ActiveDirectory.ForestMode&gt;|&lt;xref:System.DirectoryServices.ActiveDirectory.ForestMode&gt;|   |&lt;xref:System.DirectoryServices.ActiveDirectory.ForestMode&gt;|None|","pos":[783,1032],"source":" <xref:System.DirectoryServices.ActiveDirectory.ForestMode>|   |<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|   |<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|None|"}]},{"pos":[62669,62816],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ForestMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value that specifies the new operation level for the forest.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ForestMode\"></xref> enumeration value that specifies the new operation level for the forest."},{"pos":[63111,63175],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[63372,63420],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[63515,63627],"content":"Based on the current operating mode of the forest, the value specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">forestMode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not valid.","needQuote":true,"needEscape":true,"source":"Based on the current operating mode of the forest, the value specified for <code>forestMode</code> is not valid."},{"pos":[63774,63904],"content":"<ph id=\"ph1\">&lt;code&gt;forestMode&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ForestMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","needQuote":true,"needEscape":true,"source":"<code>forestMode</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.ForestMode\"></xref> enumeration value."},{"pos":[64011,64040],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[64155,64228],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[64804,64863],"content":"Raises the forest functionality level to the given setting.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the forest functionality level to the given setting.","pos":[0,59]}]},{"pos":[65028,65048],"content":"Raise to this level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raise to this level.","pos":[0,20]}]},{"pos":[65775,65804],"content":"Repairs a trust relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"Repairs a trust relationship.","pos":[0,29]}]},{"pos":[66046,66186],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the forest object with which the trust exists.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest object with which the trust exists."},{"pos":[66490,66653],"content":"There is no trust relationship with the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForest</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that is specified by <code>targetForest</code>."},{"pos":[66848,66912],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[67109,67157],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[67260,67350],"content":"<ph id=\"ph1\">&lt;code&gt;targetForest&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForest</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[67457,67486],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[67601,67674],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[68108,68159],"content":"Gets the first domain that was created in a forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the first domain that was created in a forest.","pos":[0,51]}]},{"pos":[68349,68554],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the first domain that was created in this <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the first domain that was created in this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[68747,68776],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[69190,69220],"content":"Gets the schema of the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the schema of the forest.","pos":[0,30]}]},{"pos":[69436,69641],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the schema of the current <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema\"></xref> object that represents the schema of the current <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[69918,69982],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[70179,70227],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[70334,70363],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[70822,70903],"content":"Gets the domain controller that holds the FSMO schema master role for the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the domain controller that holds the FSMO schema master role for the forest.","pos":[0,81]}]},{"pos":[71118,71352],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the domain controller that is the FSMO schema master of this <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that is the FSMO schema master of this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[71638,71702],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[71899,71947],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[72054,72083],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[72733,72799],"content":"Enables or disables selective authentication for an inbound trust.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables or disables selective authentication for an inbound trust.","pos":[0,66]}]},{"pos":[72996,73141],"content":"The DNS name of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with which the inbound trust relationship exists.","needQuote":true,"needEscape":true,"source":"The DNS name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object with which the inbound trust relationship exists."},{"pos":[73205,73386],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if selective authentication is to be enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if selective authentication is to be enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[73699,73797],"content":"There is no trust relationship with the forest that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForestName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the forest that is specified by <code>targetForestName</code>."},{"pos":[73992,74056],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[74253,74301],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[74396,74445],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is an empty string."},{"pos":[74548,74642],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[74749,74786],"content":"The current object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]},{"pos":[74901,74974],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[75569,75624],"content":"Sets the SID filtering state with the specified forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the SID filtering state with the specified forest.","pos":[0,55]}]},{"pos":[75636,76114],"content":"By default, new external and forest trusts in [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)] Active Directory Domain Services enforce SID filtering.  SID filtering is used to prevent attacks from malicious users who might try to grant elevated user rights to another user account.  Enforcing SID filtering on forest trusts does not prevent migrations to domains within the same forest from using SID history and will not affect your universal group access control strategy.","needQuote":true,"needEscape":true,"nodes":[{"content":"By default, new external and forest trusts in <ph id=\"ph1\">[!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]</ph> Active Directory Domain Services enforce SID filtering.","pos":[0,153],"source":"By default, new external and forest trusts in [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)] Active Directory Domain Services enforce SID filtering."},{"content":"SID filtering is used to prevent attacks from malicious users who might try to grant elevated user rights to another user account.","pos":[155,285]},{"content":"Enforcing SID filtering on forest trusts does not prevent migrations to domains within the same forest from using SID history and will not affect your universal group access control strategy.","pos":[287,478]}]},{"pos":[76300,76437],"content":"The DNS name of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with which the trust relationship exists.","needQuote":true,"needEscape":true,"source":"The DNS name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object with which the trust relationship exists."},{"pos":[76501,76671],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if SID filtering is to be enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if SID filtering is to be enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[76973,77071],"content":"There is no trust relationship with the forest that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForestName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the forest that is specified by <code>targetForestName</code>."},{"pos":[77266,77330],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[77527,77575],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[77670,77719],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is an empty string."},{"pos":[77822,77916],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[78023,78060],"content":"The current object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]},{"pos":[78469,78529],"content":"Gets a collection of sites that are contained in the forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of sites that are contained in the forest.","pos":[0,60]}]},{"pos":[78746,79023],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySite\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> sites in the current <bpt id=\"p3\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection\"></xref> that contains the <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySite\"></xref> sites in the current <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>."},{"pos":[79299,79363],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[79560,79608],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[79715,79744],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[80172,80226],"content":"Returns a string representation of the current forest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string representation of the current forest.","pos":[0,54]}]},{"pos":[80362,80497],"content":"A &lt;xref:System.String&gt; that represents the DNS name of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> that represents the DNS name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object."},{"pos":[81239,81303],"content":"Updates the password for the local side of a trust relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the password for the local side of a trust relationship.","pos":[0,64]}]},{"pos":[81514,81658],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for which the local trust password is to be changed.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for which the local trust password is to be changed."},{"pos":[81731,81775],"content":"The new password for the trust relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new password for the trust relationship.","pos":[0,44]}]},{"pos":[82090,82188],"content":"There is no trust relationship with the forest that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForestName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the forest that is specified by <code>targetForestName</code>."},{"pos":[82383,82447],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[82644,82692],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[82787,82869],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;newTrustPassword&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> or <code>newTrustPassword</code> is an empty string."},{"pos":[82972,83099],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;newTrustPassword&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> or <code>newTrustPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[83206,83235],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[83350,83423],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[84235,84319],"content":"Updates the password and trust direction for the local side of a trust relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the password and trust direction for the local side of a trust relationship.","pos":[0,84]}]},{"pos":[84605,84762],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for which the local trust direction and password must be changed.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for which the local trust direction and password must be changed."},{"pos":[84878,85018],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value for the new trust direction for the trust relationship.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value for the new trust direction for the trust relationship."},{"pos":[85091,85135],"content":"The new password for the trust relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new password for the trust relationship.","pos":[0,44]}]},{"pos":[85450,85617],"content":"There is no trust relationship with the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForestName</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that is specified by <code>targetForestName</code>."},{"pos":[85812,85876],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[86073,86121],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[86216,86298],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;newTrustPassword&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> or <code>newTrustPassword</code> is an empty string."},{"pos":[86401,86528],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;newTrustPassword&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> or <code>newTrustPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[86675,86818],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">newTrustDirection</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"The <code>newTrustDirection</code> parameter is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value."},{"pos":[86925,86954],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[87069,87142],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[87918,88032],"content":"Updates the trust direction for a trust relationship. The trust directions are updated on both sides of the trust.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the trust direction for a trust relationship. The trust directions are updated on both sides of the trust.","pos":[0,114],"nodes":[{"content":"Updates the trust direction for a trust relationship.","pos":[0,53]},{"content":"The trust directions are updated on both sides of the trust.","pos":[54,114]}]}]},{"pos":[88349,88474],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for which the trust directions must be changed.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for which the trust directions must be changed."},{"pos":[88590,88741],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that specifies the new trust direction for the trust relationship.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value that specifies the new trust direction for the trust relationship."},{"pos":[89045,89139],"content":"There is no trust relationship with the forest that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForest</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the forest that is specified by <code>targetForest</code>."},{"pos":[89334,89398],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[89595,89643],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[89746,89836],"content":"<ph id=\"ph1\">&lt;code&gt;targetForest&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForest</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[89983,90112],"content":"<ph id=\"ph1\">&lt;code&gt;newTrustDirection&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"<code>newTrustDirection</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value."},{"pos":[90219,90248],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[90363,90436],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[91027,91116],"content":"Verifies that a previously established outbound trust with the specified forest is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that a previously established outbound trust with the specified forest is valid.","pos":[0,89]}]},{"pos":[91299,91354],"content":"The DNS name of the domain with which the trust exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DNS name of the domain with which the trust exists.","pos":[0,55]}]},{"pos":[91666,91773],"content":"There is no outbound trust relationship with the forest that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForestName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no outbound trust relationship with the forest that is specified by <code>targetForestName</code>."},{"pos":[91968,92032],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[92229,92277],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[92372,92421],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is an empty string."},{"pos":[92524,92618],"content":"<ph id=\"ph1\">&lt;code&gt;targetForestName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[92725,92754],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[92869,92942],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[93718,93798],"content":"Verifies that a previously established trust with the specified forest is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that a previously established trust with the specified forest is valid.","pos":[0,80]}]},{"pos":[93810,93962],"content":"This method verifies that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method verifies that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.","pos":[0,152],"nodes":[{"content":"This method verifies that a trust relationship has been fully established.","pos":[0,74]},{"content":"The trust is not established until both sides of the trust have been created.","pos":[75,152]}]}]},{"pos":[94271,94392],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for which to verify the trust relationship.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for which to verify the trust relationship."},{"pos":[94500,94652],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that specifies the direction of the trust, relative to this forest.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value that specifies the direction of the trust, relative to this forest."},{"pos":[94956,95150],"content":"There is no trust relationship with the forest that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetForest</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or the target forest does not have the trust direction that is specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">direction</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"There is no trust relationship with the forest that is specified by <code>targetForest</code>, or the target forest does not have the trust direction that is specified by <code>direction</code>."},{"pos":[95345,95409],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[95606,95654],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[95757,95847],"content":"<ph id=\"ph1\">&lt;code&gt;targetForest&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>targetForest</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[95994,96129],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">direction</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"The <code>direction</code> parameter is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value."},{"pos":[96236,96265],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[96380,96453],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  id: Forest\n  children:\n  - System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions\n  - System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  - System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  - System.DirectoryServices.ActiveDirectory.Forest.Dispose\n  - System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.Forest.Domains\n  - System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs\n  - System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs\n  - System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog\n  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  - System.DirectoryServices.ActiveDirectory.Forest.ForestMode\n  - System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel\n  - System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships\n  - System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest\n  - System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  - System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs\n  - System.DirectoryServices.ActiveDirectory.Forest.Name\n  - System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner\n  - System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)\n  - System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)\n  - System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  - System.DirectoryServices.ActiveDirectory.Forest.RootDomain\n  - System.DirectoryServices.ActiveDirectory.Forest.Schema\n  - System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner\n  - System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.Forest.Sites\n  - System.DirectoryServices.ActiveDirectory.Forest.ToString\n  - System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  - System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  langs:\n  - csharp\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n  type: Class\n  summary: The Forest class represents an Active Directory Domain Services forest.\n  syntax:\n    content: 'public class Forest : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions\n  id: ApplicationPartitions\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: ApplicationPartitions\n  nameWithType: Forest.ApplicationPartitions\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets a collection of all application partitions in the forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection\"></xref> object that contains all of the application partitions in this forest.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  id: CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Creates the local side of a trust relationship with the specified forest.\n  remarks: \"This method creates one side of a trust relationship. The trust is not established until both sides of the trust have been created.  \\n  \\n The `trustPassword` parameter associates a password with the created trust. When the other side of the trust is created, the same password is provided and the two local trusts are then bound to each other.  \\n  \\n To programmatically create both sides of a trust relationship in a single method call, use the <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public void CreateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: The DNS name of the forest that the trust is created with.\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> members that determines the direction of the trust, relative to this forest.\n    - id: trustPassword\n      type: System.String\n      description: The password for the trust. See the Remarks section for more information.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n    description: The trust relationship already exists.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetForest</code> name or <code>trustPassword</code> string is empty.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForest</code> or <code>trustPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: CreateTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.CreateTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(Forest,TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Creates both sides of a trust relationship with the specified forest.\n  remarks: This method creates both sides of a trust relationship with a single method call. The <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName> method is used to create only one side of a trust.\n  syntax:\n    content: public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);\n    parameters:\n    - id: targetForest\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest that the trust is being created with.\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> members that determines the direction of the trust, relative to this forest.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n    description: The trust relationship already exists.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForest</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)\n  id: DeleteLocalSideOfTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: DeleteLocalSideOfTrustRelationship(String)\n  nameWithType: Forest.DeleteLocalSideOfTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Deletes the local side of a trust relationship.\n  remarks: \"When one side of a trust relationship is deleted, the trust is no longer established.  \\n  \\n To delete both sides of a trust relationship with one method call, use the <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public void DeleteLocalSideOfTrustRelationship (string targetForestName);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: The DNS name of the forest that the trust exists with.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetForestName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  id: DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: DeleteTrustRelationship(Forest)\n  nameWithType: Forest.DeleteTrustRelationship(Forest)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(Forest)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Deletes both sides of a trust relationship.\n  remarks: To delete only one side of a trust relationship, use the <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName> method.\n  syntax:\n    content: public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);\n    parameters:\n    - id: targetForest\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest that the trust exists with.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the specified <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForest</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose\n  id: Dispose\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: Forest.Dispose()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Releases all managed and unmanaged resources that are held by the object.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.Forest.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: Forest.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Releases the managed resources that are used by the object and, optionally, releases unmanaged resources.\n  syntax:\n    content: protected void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that determines if the managed resources should be released. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources should be released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only the unmanaged resources should be released.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains\n  id: Domains\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Domains\n  nameWithType: Forest.Domains\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Domains\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets a collection of all domains in the forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainCollection Domains { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainCollection\"></xref> collection that contains the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> domains in the current <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.Domains*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs\n  id: FindAllDiscoverableGlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindAllDiscoverableGlobalCatalogs()\n  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds all of the discoverable global catalogs in this forest.\n  remarks: You can find discoverable domain controllers by querying DNS SRV records.  Only global catalogs that register a generic, non-site-specific, GC SRV record are returned by this method.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"></xref> that contains the collection of global catalogs that were found.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)\n  id: FindAllDiscoverableGlobalCatalogs(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindAllDiscoverableGlobalCatalogs(String)\n  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds all of the discoverable global catalogs in this forest in a specified site.\n  remarks: \"You can find discoverable global catalogs by querying DNS SRV records.  If a global catalog does not register a GC SRV record for the specified site, it will not be returned by this method, even if the global catalog is physically located within that site.  \\n  \\n All global catalogs which register a GC SRV record for the specified site will be returned by this method, even if they might not be physically located within that site.\"\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: The name of the site to search.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"></xref> that contains the collection of global catalogs that were found.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>siteName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>siteName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs\n  id: FindAllGlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindAllGlobalCatalogs()\n  nameWithType: Forest.FindAllGlobalCatalogs()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds all the global catalogs in this forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"></xref> that contains the collection of global catalogs that were found.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)\n  id: FindAllGlobalCatalogs(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindAllGlobalCatalogs(String)\n  nameWithType: Forest.FindAllGlobalCatalogs(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds all the global catalogs in this forest for a given site.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: The name of the site to search.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"></xref> object that contains the collection of global catalogs that were found.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>siteName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>siteName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog\n  id: FindGlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindGlobalCatalog()\n  nameWithType: Forest.FindGlobalCatalog()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds any global catalog in this forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"></xref> of this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A global catalog cannot be located.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  id: FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindGlobalCatalog(LocatorOptions)\n  nameWithType: Forest.FindGlobalCatalog(LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(LocatorOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds a global catalog in this forest for a specified location criteria.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);\n    parameters:\n    - id: flag\n      type: System.DirectoryServices.ActiveDirectory.LocatorOptions\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"></xref> value specifying the location criteria.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"></xref> object for the specified location criteria.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A global catalog cannot be located.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)\n  id: FindGlobalCatalog(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindGlobalCatalog(String)\n  nameWithType: Forest.FindGlobalCatalog(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds a global catalog in this forest for a specified site.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: The name of the site to search.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"></xref> object for the specified site.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A global catalog cannot be located.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>siteName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>siteName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  id: FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindGlobalCatalog(String,LocatorOptions)\n  nameWithType: Forest.FindGlobalCatalog(String,LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String,LocatorOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds a global catalog in this forest for a specified site and location criteria.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: The name of the site to search.\n    - id: flag\n      type: System.DirectoryServices.ActiveDirectory.LocatorOptions\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"></xref> value that specifies the location criteria.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"></xref> object for the specified site and location criteria.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A global catalog cannot be located.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>siteName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>siteName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode\n  id: ForestMode\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: ForestMode\n  nameWithType: Forest.ForestMode\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestMode\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the operating mode of the forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ForestMode ForestMode { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ForestMode\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ForestMode\"></xref> value that represents the current forest mode of this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.ForestMode*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel\n  id: ForestModeLevel\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: ForestModeLevel\n  nameWithType: Forest.ForestModeLevel\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the operating mode level of the forest.\n  syntax:\n    content: public int ForestModeLevel { get; }\n    return:\n      type: System.Int32\n      description: The operating mode level of the forest.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships\n  id: GetAllTrustRelationships\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetAllTrustRelationships()\n  nameWithType: Forest.GetAllTrustRelationships()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets a collection of the trust relationships of the current forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\"></xref> collection that contains <xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\"></xref> objects that represents trust relationships of the current <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest\n  id: GetCurrentForest\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetCurrentForest()\n  nameWithType: Forest.GetCurrentForest()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets a <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for the current user context.\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the current forest.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  id: GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetForest(DirectoryContext)\n  nameWithType: Forest.GetForest(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetForest(DirectoryContext)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets a <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for the specified context.\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.Forest GetForest (System.DirectoryServices.ActiveDirectory.DirectoryContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use to retrieve the object.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest that was retrieved by this method.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.GetForest*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A connection to the target that is specified in <code>context</code> could not be made.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>context</code> is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)\n  id: GetSelectiveAuthenticationStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetSelectiveAuthenticationStatus(String)\n  nameWithType: Forest.GetSelectiveAuthenticationStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets a Boolean value that indicates whether selective authentication is enabled on the inbound trust relationship with the specified forest.  <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if selective authentication is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. For more information, see the Remarks section.\n  remarks: \"For a forest trust, if you opt for selective authentication, permissions must be manually enabled on each domain and resource in the local forest to which you want users in the other forest to have access.  \\n  \\n When a user authenticates across a trust for which selective authentication is enabled, an Other Organization security ID (SID) is added to the user's authorization data. The presence of this SID prompts a check on the resource domain to ensure that the user is allowed to authenticate to the particular service. After the user is authenticated, the server that authenticates the user adds the This Organization SID if the Other Organization SID is not already present. Only one of these special SIDs can be present in an authenticated user's context.\"\n  syntax:\n    content: public bool GetSelectiveAuthenticationStatus (string targetForestName);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: The DNS name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> with which the inbound trust relationship exists.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if selective authentication is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by <code>targetForestName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: The call to LsaQueryTrustedDomainInfoByName failed. For more information, see the topic [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetForestName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)\n  id: GetSidFilteringStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetSidFilteringStatus(String)\n  nameWithType: Forest.GetSidFilteringStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the SID filtering status of a trust.\n  syntax:\n    content: public bool GetSidFilteringStatus (string targetForestName);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: The DNS name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object with which the trust relationship exists.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if SID filtering is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that is specified by <code>targetForestName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetForestName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)\n  id: GetTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetTrustRelationship(String)\n  nameWithType: Forest.GetTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the trust relationship between this forest and the specified forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship (string targetForestName);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: The name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for which the trust relationship information is to be obtained.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation\"></xref> object that represents the trust relationship between this forest and the specified forest.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by <code>targetForestName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetForestName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs\n  id: GlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GlobalCatalogs\n  nameWithType: Forest.GlobalCatalogs\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets a collection of all global catalogs in the forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\"></xref> collection that contains the <xref href=\"System.DirectoryServices.ActiveDirectory.GlobalCatalog\"></xref> global catalogs in the current <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Name\n  id: Name\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Name\n  nameWithType: Forest.Name\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Name\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the name of the forest.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.Name*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner\n  id: NamingRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: NamingRoleOwner\n  nameWithType: Forest.NamingRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the domain controller that holds the FSMO naming master role for the forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that is the FSMO naming master of this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)\n  id: RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: RaiseForestFunctionality(ForestMode)\n  nameWithType: Forest.RaiseForestFunctionality(ForestMode)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(ForestMode)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Raises the mode of operation for the forest.\n  remarks: \"The <xref:System.DirectoryServices.ActiveDirectory.ForestMode> value can be raised but not lowered. This means that raising the functionality level of the forest is not reversible and the decision to do this should be made carefully.  \\n  \\n For more information about forest operational modes, see [Domain and forest functionality](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).  \\n  \\n The following table defines the valid values for `forestMode` based on the current operating mode of the forest.  \\n  \\n|Current mode|Mode can be raised to|  \\n|------------------|---------------------------|  \\n|<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.ForestMode>|  \\n|<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|  \\n|<xref:System.DirectoryServices.ActiveDirectory.ForestMode>|None|\"\n  syntax:\n    content: public void RaiseForestFunctionality (System.DirectoryServices.ActiveDirectory.ForestMode forestMode);\n    parameters:\n    - id: forestMode\n      type: System.DirectoryServices.ActiveDirectory.ForestMode\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ForestMode\"></xref> enumeration value that specifies the new operation level for the forest.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Based on the current operating mode of the forest, the value specified for <code>forestMode</code> is not valid.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>forestMode</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.ForestMode\"></xref> enumeration value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)\n  id: RaiseForestFunctionalityLevel(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: RaiseForestFunctionalityLevel(Int32)\n  nameWithType: Forest.RaiseForestFunctionalityLevel(Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Raises the forest functionality level to the given setting.\n  syntax:\n    content: public void RaiseForestFunctionalityLevel (int forestMode);\n    parameters:\n    - id: forestMode\n      type: System.Int32\n      description: Raise to this level.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  id: RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: RepairTrustRelationship(Forest)\n  nameWithType: Forest.RepairTrustRelationship(Forest)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(Forest)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Repairs a trust relationship.\n  syntax:\n    content: public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);\n    parameters:\n    - id: targetForest\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest object with which the trust exists.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that is specified by <code>targetForest</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForest</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain\n  id: RootDomain\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: RootDomain\n  nameWithType: Forest.RootDomain\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RootDomain\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the first domain that was created in a forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.Domain RootDomain { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the first domain that was created in this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.RootDomain*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema\n  id: Schema\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Schema\n  nameWithType: Forest.Schema\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Schema\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the schema of the forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema\"></xref> object that represents the schema of the current <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.Schema*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner\n  id: SchemaRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: SchemaRoleOwner\n  nameWithType: Forest.SchemaRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the domain controller that holds the FSMO schema master role for the forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that is the FSMO schema master of this <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  id: SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: SetSelectiveAuthenticationStatus(String,Boolean)\n  nameWithType: Forest.SetSelectiveAuthenticationStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(String,Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Enables or disables selective authentication for an inbound trust.\n  syntax:\n    content: public void SetSelectiveAuthenticationStatus (string targetForestName, bool enable);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: The DNS name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object with which the inbound trust relationship exists.\n    - id: enable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if selective authentication is to be enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the forest that is specified by <code>targetForestName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetForestName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)\n  id: SetSidFilteringStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: SetSidFilteringStatus(String,Boolean)\n  nameWithType: Forest.SetSidFilteringStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(String,Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Sets the SID filtering state with the specified forest.\n  remarks: By default, new external and forest trusts in [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)] Active Directory Domain Services enforce SID filtering.  SID filtering is used to prevent attacks from malicious users who might try to grant elevated user rights to another user account.  Enforcing SID filtering on forest trusts does not prevent migrations to domains within the same forest from using SID history and will not affect your universal group access control strategy.\n  syntax:\n    content: public void SetSidFilteringStatus (string targetForestName, bool enable);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: The DNS name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object with which the trust relationship exists.\n    - id: enable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if SID filtering is to be enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the forest that is specified by <code>targetForestName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetForestName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites\n  id: Sites\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Sites\n  nameWithType: Forest.Sites\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Sites\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets a collection of sites that are contained in the forest.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection\"></xref> that contains the <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySite\"></xref> sites in the current <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.Sites*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString\n  id: ToString\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Forest.ToString()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ToString()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Returns a string representation of the current forest.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref:System.String> that represents the DNS name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  id: UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: UpdateLocalSideOfTrustRelationship(String,String)\n  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Updates the password for the local side of a trust relationship.\n  syntax:\n    content: public void UpdateLocalSideOfTrustRelationship (string targetForestName, string newTrustPassword);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: The name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for which the local trust password is to be changed.\n    - id: newTrustPassword\n      type: System.String\n      description: The new password for the trust relationship.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the forest that is specified by <code>targetForestName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetForestName</code> or <code>newTrustPassword</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForestName</code> or <code>newTrustPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  id: UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Updates the password and trust direction for the local side of a trust relationship.\n  syntax:\n    content: public void UpdateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: The name of the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for which the local trust direction and password must be changed.\n    - id: newTrustDirection\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value for the new trust direction for the trust relationship.\n    - id: newTrustPassword\n      type: System.String\n      description: The new password for the trust relationship.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that is specified by <code>targetForestName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetForestName</code> or <code>newTrustPassword</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForestName</code> or <code>newTrustPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The <code>newTrustDirection</code> parameter is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: UpdateTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.UpdateTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(Forest,TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Updates the trust direction for a trust relationship. The trust directions are updated on both sides of the trust.\n  syntax:\n    content: public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);\n    parameters:\n    - id: targetForest\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for which the trust directions must be changed.\n    - id: newTrustDirection\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value that specifies the new trust direction for the trust relationship.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the forest that is specified by <code>targetForest</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForest</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>newTrustDirection</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)\n  id: VerifyOutboundTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: VerifyOutboundTrustRelationship(String)\n  nameWithType: Forest.VerifyOutboundTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Verifies that a previously established outbound trust with the specified forest is valid.\n  syntax:\n    content: public void VerifyOutboundTrustRelationship (string targetForestName);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: The DNS name of the domain with which the trust exists.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no outbound trust relationship with the forest that is specified by <code>targetForestName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetForestName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForestName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: VerifyTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.VerifyTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(Forest,TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Verifies that a previously established trust with the specified forest is valid.\n  remarks: This method verifies that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.\n  syntax:\n    content: public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);\n    parameters:\n    - id: targetForest\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object for which to verify the trust relationship.\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value that specifies the direction of the trust, relative to this forest.\n  overload: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the forest that is specified by <code>targetForest</code>, or the target forest does not have the trust direction that is specified by <code>direction</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetForest</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The <code>direction</code> parameter is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryOperationException\n  nameWithType: ActiveDirectoryOperationException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryServerDownException\n  nameWithType: ActiveDirectoryServerDownException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryObjectExistsException\n  nameWithType: ActiveDirectoryObjectExistsException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.UnauthorizedAccessException\n  isExternal: true\n  name: System.UnauthorizedAccessException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryObjectNotFoundException\n  nameWithType: ActiveDirectoryObjectNotFoundException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ApplicationPartitions\n  nameWithType: Forest.ApplicationPartitions\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions\n- uid: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ApplicationPartitionCollection\n  nameWithType: ApplicationPartitionCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: CreateTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.CreateTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(Forest,TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: DeleteLocalSideOfTrustRelationship(String)\n  nameWithType: Forest.DeleteLocalSideOfTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(String)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: DeleteTrustRelationship(Forest)\n  nameWithType: Forest.DeleteTrustRelationship(Forest)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(Forest)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Dispose()\n  nameWithType: Forest.Dispose()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose()\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Forest.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Domains\n  nameWithType: Forest.Domains\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Domains\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainCollection\n  nameWithType: DomainCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindAllDiscoverableGlobalCatalogs()\n  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs()\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalogCollection\n  nameWithType: GlobalCatalogCollection\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindAllDiscoverableGlobalCatalogs(String)\n  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(String)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindAllGlobalCatalogs()\n  nameWithType: Forest.FindAllGlobalCatalogs()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs()\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindAllGlobalCatalogs(String)\n  nameWithType: Forest.FindAllGlobalCatalogs(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(String)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindGlobalCatalog()\n  nameWithType: Forest.FindGlobalCatalog()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog()\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalog\n  nameWithType: GlobalCatalog\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindGlobalCatalog(LocatorOptions)\n  nameWithType: Forest.FindGlobalCatalog(LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(LocatorOptions)\n- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: LocatorOptions\n  nameWithType: LocatorOptions\n  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindGlobalCatalog(String)\n  nameWithType: Forest.FindGlobalCatalog(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindGlobalCatalog(String,LocatorOptions)\n  nameWithType: Forest.FindGlobalCatalog(String,LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String,LocatorOptions)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ForestMode\n  nameWithType: Forest.ForestMode\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestMode\n- uid: System.DirectoryServices.ActiveDirectory.ForestMode\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ForestMode\n  nameWithType: ForestMode\n  fullName: System.DirectoryServices.ActiveDirectory.ForestMode\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ForestModeLevel\n  nameWithType: Forest.ForestModeLevel\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetAllTrustRelationships()\n  nameWithType: Forest.GetAllTrustRelationships()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships()\n- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustRelationshipInformationCollection\n  nameWithType: TrustRelationshipInformationCollection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetCurrentForest()\n  nameWithType: Forest.GetCurrentForest()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest()\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetForest(DirectoryContext)\n  nameWithType: Forest.GetForest(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetForest(DirectoryContext)\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetSelectiveAuthenticationStatus(String)\n  nameWithType: Forest.GetSelectiveAuthenticationStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(String)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetSidFilteringStatus(String)\n  nameWithType: Forest.GetSidFilteringStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(String)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetTrustRelationship(String)\n  nameWithType: Forest.GetTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(String)\n- uid: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ForestTrustRelationshipInformation\n  nameWithType: ForestTrustRelationshipInformation\n  fullName: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GlobalCatalogs\n  nameWithType: Forest.GlobalCatalogs\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Name\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Name\n  nameWithType: Forest.Name\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Name\n- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: NamingRoleOwner\n  nameWithType: Forest.NamingRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RaiseForestFunctionality(ForestMode)\n  nameWithType: Forest.RaiseForestFunctionality(ForestMode)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(ForestMode)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RaiseForestFunctionalityLevel(Int32)\n  nameWithType: Forest.RaiseForestFunctionalityLevel(Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(Int32)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RepairTrustRelationship(Forest)\n  nameWithType: Forest.RepairTrustRelationship(Forest)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(Forest)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RootDomain\n  nameWithType: Forest.RootDomain\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RootDomain\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Schema\n  nameWithType: Forest.Schema\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Schema\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectorySchema\n  nameWithType: ActiveDirectorySchema\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: SchemaRoleOwner\n  nameWithType: Forest.SchemaRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: SetSelectiveAuthenticationStatus(String,Boolean)\n  nameWithType: Forest.SetSelectiveAuthenticationStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(String,Boolean)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: SetSidFilteringStatus(String,Boolean)\n  nameWithType: Forest.SetSidFilteringStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(String,Boolean)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Sites\n  nameWithType: Forest.Sites\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Sites\n- uid: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReadOnlySiteCollection\n  nameWithType: ReadOnlySiteCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ToString()\n  nameWithType: Forest.ToString()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ToString()\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: UpdateLocalSideOfTrustRelationship(String,String)\n  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,String)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: UpdateTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.UpdateTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(Forest,TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: VerifyOutboundTrustRelationship(String)\n  nameWithType: Forest.VerifyOutboundTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(String)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: VerifyTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.VerifyTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(Forest,TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ApplicationPartitions\n  nameWithType: Forest.ApplicationPartitions\n- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: CreateLocalSideOfTrustRelationship\n  nameWithType: Forest.CreateLocalSideOfTrustRelationship\n- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: CreateTrustRelationship\n  nameWithType: Forest.CreateTrustRelationship\n- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: DeleteLocalSideOfTrustRelationship\n  nameWithType: Forest.DeleteLocalSideOfTrustRelationship\n- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: DeleteTrustRelationship\n  nameWithType: Forest.DeleteTrustRelationship\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Dispose\n  nameWithType: Forest.Dispose\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Domains\n  nameWithType: Forest.Domains\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindAllDiscoverableGlobalCatalogs\n  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindAllGlobalCatalogs\n  nameWithType: Forest.FindAllGlobalCatalogs\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindGlobalCatalog\n  nameWithType: Forest.FindGlobalCatalog\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ForestMode\n  nameWithType: Forest.ForestMode\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ForestModeLevel\n  nameWithType: Forest.ForestModeLevel\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetAllTrustRelationships\n  nameWithType: Forest.GetAllTrustRelationships\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetCurrentForest\n  nameWithType: Forest.GetCurrentForest\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetForest\n  nameWithType: Forest.GetForest\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetSelectiveAuthenticationStatus\n  nameWithType: Forest.GetSelectiveAuthenticationStatus\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetSidFilteringStatus\n  nameWithType: Forest.GetSidFilteringStatus\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetTrustRelationship\n  nameWithType: Forest.GetTrustRelationship\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GlobalCatalogs\n  nameWithType: Forest.GlobalCatalogs\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Name*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Name\n  nameWithType: Forest.Name\n- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: NamingRoleOwner\n  nameWithType: Forest.NamingRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RaiseForestFunctionality\n  nameWithType: Forest.RaiseForestFunctionality\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RaiseForestFunctionalityLevel\n  nameWithType: Forest.RaiseForestFunctionalityLevel\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RepairTrustRelationship\n  nameWithType: Forest.RepairTrustRelationship\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RootDomain\n  nameWithType: Forest.RootDomain\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Schema\n  nameWithType: Forest.Schema\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: SchemaRoleOwner\n  nameWithType: Forest.SchemaRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: SetSelectiveAuthenticationStatus\n  nameWithType: Forest.SetSelectiveAuthenticationStatus\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: SetSidFilteringStatus\n  nameWithType: Forest.SetSidFilteringStatus\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Sites\n  nameWithType: Forest.Sites\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ToString\n  nameWithType: Forest.ToString\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: UpdateLocalSideOfTrustRelationship\n  nameWithType: Forest.UpdateLocalSideOfTrustRelationship\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: UpdateTrustRelationship\n  nameWithType: Forest.UpdateTrustRelationship\n- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: VerifyOutboundTrustRelationship\n  nameWithType: Forest.VerifyOutboundTrustRelationship\n- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: VerifyTrustRelationship\n  nameWithType: Forest.VerifyTrustRelationship\n"}