{"nodes":[{"pos":[1141,1416],"content":"Contains a collection of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls used for editing the properties, layout, appearance, and behavior of <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains a collection of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls used for editing the properties, layout, appearance, and behavior of <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> controls.","pos":[0,243],"source":"Contains a collection of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls used for editing the properties, layout, appearance, and behavior of <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls."},{"content":"This class cannot be inherited.","pos":[244,275]}]},{"pos":[1429,2716],"content":"The EditorPartCollection class is a read-only collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, typically used by an <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone to track the set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls contained by the zone.       When a Web Parts page enters edit mode, and a user selects a control to edit, the editing process begins. The zone creates a new EditorPartCollection object consisting of the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls contained by the zone. At various phases in the editing process, the zone accesses the EditorPartCollection object to save or retrieve property values between the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection and the <xref:System.Web.UI.WebControls.WebParts.WebPart> control currently being edited.       You can create an EditorPartCollection collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. Even though the EditorPartCollection object is read-only, you can make programmatic changes to the properties of the underlying controls referenced in the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The EditorPartCollection class is a read-only collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, typically used by an <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone to track the set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls contained by the zone.       When a Web Parts page enters edit mode, and a user selects a control to edit, the editing process begins. The zone creates a new EditorPartCollection object consisting of the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls contained by the zone. At various phases in the editing process, the zone accesses the EditorPartCollection object to save or retrieve property values between the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection and the <xref:System.Web.UI.WebControls.WebParts.WebPart> control currently being edited.       You can create an EditorPartCollection collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. Even though the EditorPartCollection object is read-only, you can make programmatic changes to the properties of the underlying controls referenced in the collection.","pos":[0,1283],"nodes":[{"content":"The EditorPartCollection class is a read-only collection of &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls, typically used by an &lt;xref:System.Web.UI.WebControls.WebParts.EditorZoneBase&gt; zone to track the set of &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls contained by the zone.","pos":[0,310],"source":"The EditorPartCollection class is a read-only collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, typically used by an <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone to track the set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls contained by the zone."},{"content":"When a Web Parts page enters edit mode, and a user selects a control to edit, the editing process begins.","pos":[317,422]},{"content":"The zone creates a new EditorPartCollection object consisting of the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls contained by the zone.","pos":[423,576],"source":" The zone creates a new EditorPartCollection object consisting of the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls contained by the zone."},{"content":"At various phases in the editing process, the zone accesses the EditorPartCollection object to save or retrieve property values between the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls in the collection and the &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; control currently being edited.","pos":[577,886],"source":" At various phases in the editing process, the zone accesses the EditorPartCollection object to save or retrieve property values between the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection and the <xref:System.Web.UI.WebControls.WebParts.WebPart> control currently being edited."},{"content":"You can create an EditorPartCollection collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls.","pos":[893,1116],"source":"       You can create an EditorPartCollection collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls."},{"content":"Even though the EditorPartCollection object is read-only, you can make programmatic changes to the properties of the underlying controls referenced in the collection.","pos":[1117,1283]}]}]},{"pos":[8175,8299],"content":"Initializes an empty new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes an empty new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"></xref> class."},{"pos":[8312,9235],"content":"The EditorPartCollection constructor initializes an empty instance of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class. This overload of the constructor is used internally by the <xref:System.Web.UI.WebControls.WebParts.EditorZone> class in its <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> method to create an empty collection object. The zone then creates instances of all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls declared in the child zone template, and uses an internal method to add them to the collection.       You cannot use this overload of the EditorPartCollection constructor to create a new instance of <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> and add <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to it. You must use one of the other overloads for the EditorPartCollection constructor instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"The EditorPartCollection constructor initializes an empty instance of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class. This overload of the constructor is used internally by the <xref:System.Web.UI.WebControls.WebParts.EditorZone> class in its <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> method to create an empty collection object. The zone then creates instances of all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls declared in the child zone template, and uses an internal method to add them to the collection.       You cannot use this overload of the EditorPartCollection constructor to create a new instance of <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> and add <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to it. You must use one of the other overloads for the EditorPartCollection constructor instead.","pos":[0,921],"nodes":[{"content":"The EditorPartCollection constructor initializes an empty instance of the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection&gt; class.","pos":[0,143],"source":"The EditorPartCollection constructor initializes an empty instance of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class."},{"content":"This overload of the constructor is used internally by the &lt;xref:System.Web.UI.WebControls.WebParts.EditorZone&gt; class in its &lt;xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A&gt; method to create an empty collection object.","pos":[144,387],"source":" This overload of the constructor is used internally by the <xref:System.Web.UI.WebControls.WebParts.EditorZone> class in its <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> method to create an empty collection object."},{"content":"The zone then creates instances of all the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls declared in the child zone template, and uses an internal method to add them to the collection.","pos":[388,588],"source":" The zone then creates instances of all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls declared in the child zone template, and uses an internal method to add them to the collection."},{"content":"You cannot use this overload of the EditorPartCollection constructor to create a new instance of &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection&gt; and add &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls to it.","pos":[595,831],"source":"       You cannot use this overload of the EditorPartCollection constructor to create a new instance of <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> and add <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to it."},{"content":"You must use one of the other overloads for the EditorPartCollection constructor instead.","pos":[832,921]}]}]},{"pos":[9982,10244],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by passing in an &lt;xref:System.Collections.ICollection&gt; collection of <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> controls.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"></xref> class by passing in an <xref:System.Collections.ICollection> collection of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls."},{"pos":[10257,12636],"content":"The EditorPartCollection constructor initializes an instance of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class and passes in a collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. This is one overload of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> constructor that you can use to create a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object and add <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to it.       Even though the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> instance created by the constructor is read-only, you can still access the individual <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection programmatically and call their properties and methods.       One common scenario for using the EditorPartCollection constructor would be if you want to perform some batch operation on an entire set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, such as changing the content, appearance, or position of a related group of them.       Another common scenario for using the EditorPartCollection constructor is developing custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that you want to associate with a server control, so that users can edit custom properties on your control. In this scenario, your server control must implement the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface, and as part of that task, it must implement the <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> method. In that method, to enable the custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to edit your server control, you must add the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to an <xref:System.Collections.ICollection> instance, such as an <xref:System.Collections.ArrayList> object. Then you can pass the collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> constructor to create a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object, which the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone uses to set up all the controls and begin the editing process.","needQuote":false,"needEscape":true,"nodes":[{"content":"The EditorPartCollection constructor initializes an instance of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class and passes in a collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. This is one overload of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> constructor that you can use to create a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object and add <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to it.       Even though the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> instance created by the constructor is read-only, you can still access the individual <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection programmatically and call their properties and methods.       One common scenario for using the EditorPartCollection constructor would be if you want to perform some batch operation on an entire set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, such as changing the content, appearance, or position of a related group of them.       Another common scenario for using the EditorPartCollection constructor is developing custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that you want to associate with a server control, so that users can edit custom properties on your control. In this scenario, your server control must implement the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface, and as part of that task, it must implement the <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> method. In that method, to enable the custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to edit your server control, you must add the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to an <xref:System.Collections.ICollection> instance, such as an <xref:System.Collections.ArrayList> object. Then you can pass the collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> constructor to create a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object, which the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone uses to set up all the controls and begin the editing process.","pos":[0,2373],"nodes":[{"content":"The EditorPartCollection constructor initializes an instance of the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection&gt; class and passes in a collection of &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls.","pos":[0,229],"source":"The EditorPartCollection constructor initializes an instance of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class and passes in a collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls."},{"content":"This is one overload of the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A&gt; constructor that you can use to create a new &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection&gt; object and add &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls to it.","pos":[230,523],"source":" This is one overload of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> constructor that you can use to create a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object and add <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to it."},{"content":"Even though the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection&gt; instance created by the constructor is read-only, you can still access the individual &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls in the collection programmatically and call their properties and methods.","pos":[530,830],"source":"       Even though the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> instance created by the constructor is read-only, you can still access the individual <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection programmatically and call their properties and methods."},{"content":"One common scenario for using the EditorPartCollection constructor would be if you want to perform some batch operation on an entire set of &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls, such as changing the content, appearance, or position of a related group of them.","pos":[837,1121],"source":"       One common scenario for using the EditorPartCollection constructor would be if you want to perform some batch operation on an entire set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, such as changing the content, appearance, or position of a related group of them."},{"content":"Another common scenario for using the EditorPartCollection constructor is developing custom &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls that you want to associate with a server control, so that users can edit custom properties on your control.","pos":[1128,1389],"source":"       Another common scenario for using the EditorPartCollection constructor is developing custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that you want to associate with a server control, so that users can edit custom properties on your control."},{"content":"In this scenario, your server control must implement the &lt;xref:System.Web.UI.WebControls.WebParts.IWebEditable&gt; interface, and as part of that task, it must implement the &lt;xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A&gt; method.","pos":[1390,1644],"source":" In this scenario, your server control must implement the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface, and as part of that task, it must implement the <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> method."},{"content":"In that method, to enable the custom &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls to edit your server control, you must add the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls to an &lt;xref:System.Collections.ICollection&gt; instance, such as an &lt;xref:System.Collections.ArrayList&gt; object.","pos":[1645,1960],"source":" In that method, to enable the custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to edit your server control, you must add the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to an <xref:System.Collections.ICollection> instance, such as an <xref:System.Collections.ArrayList> object."},{"content":"Then you can pass the collection of &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls to the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A&gt; constructor to create a new &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection&gt; object, which the &lt;xref:System.Web.UI.WebControls.WebParts.EditorZoneBase&gt; zone uses to set up all the controls and begin the editing process.","pos":[1961,2373],"source":" Then you can pass the collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> constructor to create a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object, which the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone uses to set up all the controls and begin the editing process."}]}]},{"pos":[14735,14855],"content":"An &lt;xref:System.Collections.ICollection&gt; of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls."},{"pos":[15702,16150],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by passing in an <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> collection of <bpt id=\"p3\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> controls, and an &lt;xref:System.Collections.ICollection&gt; collection of additional <bpt id=\"p4\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> controls.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"></xref> class by passing in an <xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"></xref> collection of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls, and an <xref:System.Collections.ICollection> collection of additional <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls."},{"pos":[16458,16597],"content":"An &lt;xref:System.Collections.ICollection&gt; of existing <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls in a zone.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> of existing <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls in a zone."},{"pos":[16682,16846],"content":"An &lt;xref:System.Collections.ICollection&gt; of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls not in a zone, but created programmatically.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.ICollection> of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls not in a zone, but created programmatically."},{"pos":[17508,17589],"content":"Returns a value that indicates whether a particular control is in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether a particular control is in the collection.","pos":[0,81]}]},{"pos":[17601,17800],"content":"The Contains method determines whether a specific <xref:System.Web.UI.WebControls.WebParts.EditorPart> control is already in the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Contains method determines whether a specific &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; control is already in the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection&gt; object.","pos":[0,199],"source":"The Contains method determines whether a specific <xref:System.Web.UI.WebControls.WebParts.EditorPart> control is already in the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object."}]},{"pos":[19666,19795],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> being tested for its status as a member of the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> being tested for its status as a member of the collection."},{"pos":[19854,19985],"content":"A Boolean value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is in the collection.","needQuote":true,"needEscape":true,"source":"A Boolean value that indicates whether the <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> is in the collection."},{"pos":[20694,20807],"content":"Copies the collection to an array of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls.","needQuote":true,"needEscape":true,"source":"Copies the collection to an array of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls."},{"pos":[20819,21107],"content":"The CopyTo method is useful when you want to create a custom array that can contain the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object, a subset of those controls, or a superset of those controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CopyTo method is useful when you want to create a custom array that can contain the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls in the &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection&gt; object, a subset of those controls, or a superset of those controls.","pos":[0,288],"source":"The CopyTo method is useful when you want to create a custom array that can contain the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object, a subset of those controls, or a superset of those controls."}]},{"pos":[22825,22940],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to contain the copied collection of controls.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> to contain the copied collection of controls."},{"pos":[23001,23075],"content":"The starting point in the array at which to place the collection contents.","needQuote":true,"needEscape":true,"nodes":[{"content":"The starting point in the array at which to place the collection contents.","pos":[0,74]}]},{"pos":[23592,23657],"content":"References a static, read-only, empty instance of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"References a static, read-only, empty instance of the collection.","pos":[0,65]}]},{"pos":[23669,23991],"content":"A static, read-only, empty instance of <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> reduces memory usage in cases where you want an empty collection instance to return the proper object type from a method or to compare the instance with another object, but you do not need to add members to the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A static, read-only, empty instance of &lt;xref:System.Web.UI.WebControls.WebParts.EditorPartCollection&gt; reduces memory usage in cases where you want an empty collection instance to return the proper object type from a method or to compare the instance with another object, but you do not need to add members to the instance.","pos":[0,322],"source":"A static, read-only, empty instance of <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> reduces memory usage in cases where you want an empty collection instance to return the proper object type from a method or to compare the instance with another object, but you do not need to add members to the instance."}]},{"pos":[24200,24212],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24794,24856],"content":"Returns the position of a particular member of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the position of a particular member of the collection.","pos":[0,62]}]},{"pos":[24868,25063],"content":"The IndexOf method is useful if you have multiple <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls on a Web Parts page, and you need to locate a particular control in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IndexOf method is useful if you have multiple &lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt; controls on a Web Parts page, and you need to locate a particular control in the collection.","pos":[0,195],"source":"The IndexOf method is useful if you have multiple <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls on a Web Parts page, and you need to locate a particular control in the collection."}]},{"pos":[26835,26940],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is a member of the collection.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> that is a member of the collection."},{"pos":[26997,27137],"content":"An integer that corresponds to the index of an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control in the collection.","needQuote":true,"needEscape":true,"source":"An integer that corresponds to the index of an <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> control in the collection."},{"pos":[27702,27779],"content":"Returns a specific member of the collection according to a unique identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a specific member of the collection according to a unique identifier.","pos":[0,77]}]},{"pos":[27957,28066],"content":"The index of a particular <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in a collection.","needQuote":true,"needEscape":true,"source":"The index of a particular <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> in a collection."},{"pos":[28156,28267],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index in the collection.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> at the specified index in the collection."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  id: EditorPartCollection\n  children:\n  - System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor\n  - System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)\n  - System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)\n  - System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)\n  - System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)\n  - System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty\n  - System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)\n  - System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)\n  langs:\n  - csharp\n  name: EditorPartCollection\n  nameWithType: EditorPartCollection\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  type: Class\n  summary: Contains a collection of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls used for editing the properties, layout, appearance, and behavior of <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls. This class cannot be inherited.\n  remarks: \"The EditorPartCollection class is a read-only collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, typically used by an <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone to track the set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls contained by the zone.  \\n  \\n When a Web Parts page enters edit mode, and a user selects a control to edit, the editing process begins. The zone creates a new EditorPartCollection object consisting of the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls contained by the zone. At various phases in the editing process, the zone accesses the EditorPartCollection object to save or retrieve property values between the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection and the <xref:System.Web.UI.WebControls.WebParts.WebPart> control currently being edited.  \\n  \\n You can create an EditorPartCollection collection of controls for your own programmatic use if, for example, you need to perform some mass operation on a set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. Even though the EditorPartCollection object is read-only, you can make programmatic changes to the properties of the underlying controls referenced in the collection.\"\n  example:\n  - \"The following code example demonstrates several uses of the EditorPartCollection class. There are four parts to this code example:  \\n  \\n-   A user control that enables you to change display modes on a Web Parts page.  \\n  \\n-   A class for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, which is referenced in the Web page and is edited by the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls.  \\n  \\n-   A Web page that references the `TextDisplayWebPart` control, contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control with several of the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls from the Web Parts control set declared in the zone, and contains some event-driven code to create and manipulate an EditorPartCollection object.  \\n  \\n-   An explanation of how the code example works when you load it in a browser.  \\n  \\n The first part of this code example is the user control that enables users to change display modes on a Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[WebParts_EditorPartCollection_Overview#4](~/add/codesnippet/csharp/t-system.web.ui.webcontr_211_1.ascx)]\\n [!code-vb[WebParts_EditorPartCollection_Overview#4](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_211_1.ascx)]  \\n  \\n The second part of the code example is the `TextDisplayWebPart` control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Note that the control has a property named `ContentText`; this property holds the value that the user enters in the text box. This custom property can be edited when the control is in edit mode, along with the standard <xref:System.Web.UI.WebControls.WebParts.WebPart> control properties.  \\n  \\n [!code-cs[WebParts_EditorPartCollection_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_211_2.cs)]\\n [!code-vb[WebParts_EditorPartCollection_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_211_2.vb)]  \\n  \\n The third part of the code example is the Web page. Notice that the `<asp:editorzone>` element for the page contains declarations for three <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. Two of these controls become part of a custom EditorPartCollection object that is created when the `Button1_Click` method executes.  \\n  \\n [!code-cs[WebParts_EditorPartCollection_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_211_3.aspx)]\\n [!code-vb[WebParts_EditorPartCollection_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_211_3.aspx)]  \\n  \\n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. You click the **Create EditorPartCollection** button to see the effects on the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that are created by the code that is manipulating the EditorPartCollection object. Also, notice that the <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> control allows you to edit the custom `TextDisplayWebPart.ContentText` property. This is possible because the property is marked with a `WebBrowsable` attribute in the source code for the control. If you update the property value in the editing UI, you must return the page to normal browse mode to see the effect of updating the `TextDisplayWebPart.ContentText` property.\"\n  syntax:\n    content: 'public sealed class EditorPartCollection : System.Collections.ReadOnlyCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.ReadOnlyCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.ReadOnlyCollectionBase.Count\n  - System.Collections.ReadOnlyCollectionBase.GetEnumerator\n  - System.Collections.ReadOnlyCollectionBase.InnerList\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  langs:\n  - csharp\n  name: EditorPartCollection()\n  nameWithType: EditorPartCollection.EditorPartCollection()\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Initializes an empty new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"></xref> class.\n  remarks: \"The EditorPartCollection constructor initializes an empty instance of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class. This overload of the constructor is used internally by the <xref:System.Web.UI.WebControls.WebParts.EditorZone> class in its <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> method to create an empty collection object. The zone then creates instances of all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls declared in the child zone template, and uses an internal method to add them to the collection.  \\n  \\n You cannot use this overload of the EditorPartCollection constructor to create a new instance of <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> and add <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to it. You must use one of the other overloads for the EditorPartCollection constructor instead.\"\n  syntax:\n    content: public EditorPartCollection ();\n    parameters: []\n  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)\n  id: '#ctor(System.Collections.ICollection)'\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  langs:\n  - csharp\n  name: EditorPartCollection(ICollection)\n  nameWithType: EditorPartCollection.EditorPartCollection(ICollection)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(ICollection)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"></xref> class by passing in an <xref:System.Collections.ICollection> collection of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls.\n  remarks: \"The EditorPartCollection constructor initializes an instance of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class and passes in a collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. This is one overload of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> constructor that you can use to create a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object and add <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to it.  \\n  \\n Even though the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> instance created by the constructor is read-only, you can still access the individual <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection programmatically and call their properties and methods.  \\n  \\n One common scenario for using the EditorPartCollection constructor would be if you want to perform some batch operation on an entire set of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, such as changing the content, appearance, or position of a related group of them.  \\n  \\n Another common scenario for using the EditorPartCollection constructor is developing custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that you want to associate with a server control, so that users can edit custom properties on your control. In this scenario, your server control must implement the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface, and as part of that task, it must implement the <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> method. In that method, to enable the custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to edit your server control, you must add the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to an <xref:System.Collections.ICollection> instance, such as an <xref:System.Collections.ArrayList> object. Then you can pass the collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> constructor to create a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object, which the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone uses to set up all the controls and begin the editing process.\"\n  example:\n  - \"The following code example demonstrates how to create a custom <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> and, even though the collection is read-only, still perform a batch operation to change the individual <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \\n  \\n The code in the `Button1_Click` event creates an <xref:System.Collections.ArrayList> object, adds two of the three <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the page to the object, and then creates a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object using the EditorPartCollection constructor. It also demonstrates how you can make changes to the underlying <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, even though the collection is read-only.  \\n  \\n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/e5070951-5a25-4f76-bb91-_1.aspx)]\\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/e5070951-5a25-4f76-bb91-_1.aspx)]  \\n  \\n You can load the page in a browser and switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. You click the **Create EditorPartCollection** button to see the effects on the two <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that are added to the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object.\"\n  syntax:\n    content: public EditorPartCollection (System.Collections.ICollection editorParts);\n    parameters:\n    - id: editorParts\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls.\n  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)\n  id: '#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)'\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  langs:\n  - csharp\n  name: EditorPartCollection(EditorPartCollection,ICollection)\n  nameWithType: EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"></xref> class by passing in an <xref href=\"System.Web.UI.WebControls.WebParts.EditorPartCollection\"></xref> collection of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls, and an <xref:System.Collections.ICollection> collection of additional <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls.\n  syntax:\n    content: public EditorPartCollection (System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, System.Collections.ICollection editorParts);\n    parameters:\n    - id: existingEditorParts\n      type: System.Web.UI.WebControls.WebParts.EditorPartCollection\n      description: An <xref:System.Collections.ICollection> of existing <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls in a zone.\n    - id: editorParts\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls not in a zone, but created programmatically.\n  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)\n  id: Contains(System.Web.UI.WebControls.WebParts.EditorPart)\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  langs:\n  - csharp\n  name: Contains(EditorPart)\n  nameWithType: EditorPartCollection.Contains(EditorPart)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(EditorPart)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Returns a value that indicates whether a particular control is in the collection.\n  remarks: The Contains method determines whether a specific <xref:System.Web.UI.WebControls.WebParts.EditorPart> control is already in the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object.\n  example:\n  - \"The following code example demonstrates how to determine whether a particular <xref:System.Web.UI.WebControls.WebParts.EditorPart> control is in an <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \\n  \\n The code in the `Button1_Click` event does not add the `LayoutEditorPart1` control to the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object when it adds the other controls. To confirm that the `LayoutEditorPart1` control is not in the collection, the code uses the Contains method.  \\n  \\n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/969094d1-8b47-4d8c-86ee-_1.aspx)]\\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/969094d1-8b47-4d8c-86ee-_1.aspx)]  \\n  \\n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see the all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. If you click the **Create EditorPartCollection** button, you will notice that the background color of the `LayoutEditorPart1` control is different from the other controls, because it is not part of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object.\"\n  syntax:\n    content: public bool Contains (System.Web.UI.WebControls.WebParts.EditorPart editorPart);\n    parameters:\n    - id: editorPart\n      type: System.Web.UI.WebControls.WebParts.EditorPart\n      description: The <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> being tested for its status as a member of the collection.\n    return:\n      type: System.Boolean\n      description: A Boolean value that indicates whether the <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> is in the collection.\n  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)\n  id: CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  langs:\n  - csharp\n  name: CopyTo(EditorPart[],Int32)\n  nameWithType: EditorPartCollection.CopyTo(EditorPart[],Int32)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(EditorPart[],Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Copies the collection to an array of <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> controls.\n  remarks: The CopyTo method is useful when you want to create a custom array that can contain the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object, a subset of those controls, or a superset of those controls.\n  example:\n  - \"The following code example demonstrates how to use the CopyTo method to create a custom array of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \\n  \\n The code in the `Button1_Click` event creates an array of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, adds the `LayoutEditorPart1` control to the array, and then uses the CopyTo method to copy the controls from the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object to the array.  \\n  \\n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/3d4bbcff-7b5d-49cc-93ed-_1.aspx)]\\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/3d4bbcff-7b5d-49cc-93ed-_1.aspx)]  \\n  \\n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. If you click the **Create EditorPartCollection** button, you will notice that the titles of all the controls in the custom array are listed near the bottom of the page.\"\n  syntax:\n    content: public void CopyTo (System.Web.UI.WebControls.WebParts.EditorPart[] array, int index);\n    parameters:\n    - id: array\n      type: System.Web.UI.WebControls.WebParts.EditorPart[]\n      description: An <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> to contain the copied collection of controls.\n    - id: index\n      type: System.Int32\n      description: The starting point in the array at which to place the collection contents.\n  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty\n  id: Empty\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: EditorPartCollection.Empty\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty\n  type: Field\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: References a static, read-only, empty instance of the collection.\n  remarks: A static, read-only, empty instance of <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> reduces memory usage in cases where you want an empty collection instance to return the proper object type from a method or to compare the instance with another object, but you do not need to add members to the instance.\n  syntax:\n    content: public static readonly System.Web.UI.WebControls.WebParts.EditorPartCollection Empty;\n    return:\n      type: System.Web.UI.WebControls.WebParts.EditorPartCollection\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)\n  id: IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  langs:\n  - csharp\n  name: IndexOf(EditorPart)\n  nameWithType: EditorPartCollection.IndexOf(EditorPart)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(EditorPart)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Returns the position of a particular member of the collection.\n  remarks: The IndexOf method is useful if you have multiple <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls on a Web Parts page, and you need to locate a particular control in the collection.\n  example:\n  - \"The following code example demonstrates how to use the IndexOf method to locate an <xref:System.Web.UI.WebControls.WebParts.EditorPart> control in an <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \\n  \\n The code in the `Button1_Click` event creates an <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object, and then uses the IndexOf method to locate the `PropertyGridEditorPart1` control in the collection, and set its <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> property.  \\n  \\n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/77edafbe-2b10-4862-af07-_1.aspx)]\\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/77edafbe-2b10-4862-af07-_1.aspx)]  \\n  \\n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. If you click the **Create EditorPartCollection** button, you will notice that the `PropertyGridEditorPart1` control, which is near the bottom of the page, has a title but no border.\"\n  syntax:\n    content: public int IndexOf (System.Web.UI.WebControls.WebParts.EditorPart editorPart);\n    parameters:\n    - id: editorPart\n      type: System.Web.UI.WebControls.WebParts.EditorPart\n      description: An <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> that is a member of the collection.\n    return:\n      type: System.Int32\n      description: An integer that corresponds to the index of an <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> control in the collection.\n  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: EditorPartCollection.Item(Int32)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Returns a specific member of the collection according to a unique identifier.\n  syntax:\n    content: public System.Web.UI.WebControls.WebParts.EditorPart this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of a particular <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> in a collection.\n    return:\n      type: System.Web.UI.WebControls.WebParts.EditorPart\n      description: An <xref href=\"System.Web.UI.WebControls.WebParts.EditorPart\"></xref> at the specified index in the collection.\n  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: System.Collections.ReadOnlyCollectionBase\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: EditorPartCollection()\n  nameWithType: EditorPartCollection.EditorPartCollection()\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection()\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: EditorPartCollection(ICollection)\n  nameWithType: EditorPartCollection.EditorPartCollection(ICollection)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(ICollection)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: EditorPartCollection(EditorPartCollection,ICollection)\n  nameWithType: EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  parent: System.Web.UI.WebControls.WebParts\n  isExternal: false\n  name: EditorPartCollection\n  nameWithType: EditorPartCollection\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: Contains(EditorPart)\n  nameWithType: EditorPartCollection.Contains(EditorPart)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(EditorPart)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.WebParts.EditorPart\n  parent: System.Web.UI.WebControls.WebParts\n  isExternal: false\n  name: EditorPart\n  nameWithType: EditorPart\n  fullName: System.Web.UI.WebControls.WebParts.EditorPart\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: CopyTo(EditorPart[],Int32)\n  nameWithType: EditorPartCollection.CopyTo(EditorPart[],Int32)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(EditorPart[],Int32)\n- uid: System.Web.UI.WebControls.WebParts.EditorPart[]\n  parent: System.Web.UI.WebControls.WebParts\n  isExternal: false\n  name: EditorPart\n  nameWithType: EditorPart\n  fullName: System.Web.UI.WebControls.WebParts.EditorPart[]\n  spec.csharp:\n  - uid: System.Web.UI.WebControls.WebParts.EditorPart\n    name: EditorPart\n    nameWithType: EditorPart\n    fullName: EditorPart[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: Empty\n  nameWithType: EditorPartCollection.Empty\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: IndexOf(EditorPart)\n  nameWithType: EditorPartCollection.IndexOf(EditorPart)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(EditorPart)\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: EditorPartCollection.Item(Int32)\n  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(Int32)\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: EditorPartCollection\n  nameWithType: EditorPartCollection.EditorPartCollection\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains*\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: Contains\n  nameWithType: EditorPartCollection.Contains\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo*\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: EditorPartCollection.CopyTo\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf*\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: EditorPartCollection.IndexOf\n- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item*\n  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection\n  isExternal: false\n  name: Item\n  nameWithType: EditorPartCollection.Item\n"}