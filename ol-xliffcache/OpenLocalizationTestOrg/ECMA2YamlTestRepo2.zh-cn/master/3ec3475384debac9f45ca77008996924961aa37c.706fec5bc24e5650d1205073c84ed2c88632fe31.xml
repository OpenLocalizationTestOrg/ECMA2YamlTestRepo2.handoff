{"nodes":[{"pos":[2984,3044],"content":"The AdamInstance class represents an AD LDS instance server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The AdamInstance class represents an AD LDS instance server.","pos":[0,60]}]},{"pos":[4476,4588],"content":"Invokes the Knowledge Consistency Checker (KCC) that verifies the replication topology for this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes the Knowledge Consistency Checker (KCC) that verifies the replication topology for this AD LDS instance.","pos":[0,112]}]},{"pos":[4600,4758],"content":"For more information, see the topic \"DsReplicaConsistencyCheck\" in the MSDN Library at <bpt id=\"p1\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p1\">](http://msdn.microsoft.com/library)</ept>.","needQuote":true,"needEscape":true,"source":"For more information, see the topic \"DsReplicaConsistencyCheck\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."},{"pos":[5157,5221],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[5418,5466],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[5573,5602],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[5717,5790],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[6278,6398],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ConfigurationSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for this AD LDS instance.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.ConfigurationSet\"></xref> object for this AD LDS instance."},{"pos":[6614,6795],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ConfigurationSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for this <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.DirectoryServices.ActiveDirectory.ConfigurationSet\"></xref> object for this <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"></xref> object."},{"pos":[7000,7029],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[7517,7585],"content":"Gets or sets the default partition that this AD LDS instance serves.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the default partition that this AD LDS instance serves.","pos":[0,68]}]},{"pos":[7711,7946],"content":"A <xref:System.String> that contains the distinguished name of the default partition that this AD LDS instance serves.  If the default partition is not set, this will return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the distinguished name of the default partition that this AD LDS instance serves.","pos":[0,118],"source":"A <xref:System.String> that contains the distinguished name of the default partition that this AD LDS instance serves."},{"content":"If the default partition is not set, this will return <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[120,235],"source":"  If the default partition is not set, this will return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8239,8303],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[8500,8548],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[8643,8781],"content":"The partition name is not in a valid distinguished name format, or the AD LDS instance does not serve this partition. Applies to set only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The partition name is not in a valid distinguished name format, or the AD LDS instance does not serve this partition. Applies to set only.","pos":[0,138],"nodes":[{"content":"The partition name is not in a valid distinguished name format, or the AD LDS instance does not serve this partition.","pos":[0,117]},{"content":"Applies to set only.","pos":[118,138]}]}]},{"pos":[8888,8917],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[9417,9597],"content":"Releases the unmanaged resources that are used by the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and, optionally, releases managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources that are used by the <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"></xref> object and, optionally, releases managed resources."},{"pos":[9753,10064],"content":"A <xref:System.Boolean> value that determines if the managed resources should be released. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources should be released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only the unmanaged resources should be released.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that determines if the managed resources should be released.","pos":[0,90],"source":"A <xref:System.Boolean> value that determines if the managed resources should be released."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the managed resources should be released; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if only the unmanaged resources should be released.","pos":[91,311],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources should be released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only the unmanaged resources should be released."}]},{"pos":[10608,10693],"content":"Overrides the &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object.Finalize%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,85],"source":"Overrides the &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; method."}]},{"pos":[11508,11594],"content":"Finds all AD LDS instances in the specified context that host the specified partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finds all AD LDS instances in the specified context that host the specified partition.","pos":[0,86]}]},{"pos":[11918,12133],"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use for the search. The target of this context must be an AD LDS configuration set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the target and credentials to use for the search.","pos":[0,151],"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use for the search."},{"content":"The target of this context must be an AD LDS configuration set.","pos":[152,215]}]},{"pos":[12203,12297],"content":"A <xref:System.String> that contains the name of the partition to search for AD LDS instances.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the name of the partition to search for AD LDS instances.","pos":[0,94],"source":"A <xref:System.String> that contains the name of the partition to search for AD LDS instances."}]},{"pos":[12405,12556],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstanceCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the AD LDS instances that are found by the search.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstanceCollection\"></xref> that contains the AD LDS instances that are found by the search."},{"pos":[12740,12818],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">partitionName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The <code>context</code> or <code>partitionName</code> parameter is not valid."},{"pos":[12921,13050],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">partitionName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>context</code> or <code>partitionName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13255,13284],"content":"No AD LDS instance was found.","needQuote":true,"needEscape":true,"nodes":[{"content":"No AD LDS instance was found.","pos":[0,29]}]},{"pos":[13946,14037],"content":"Finds a single AD LDS instance in the specified context that hosts the specified partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finds a single AD LDS instance in the specified context that hosts the specified partition.","pos":[0,91]}]},{"pos":[14351,14566],"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use for the search. The target of this context must be an AD LDS configuration set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the target and credentials to use for the search.","pos":[0,151],"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use for the search."},{"content":"The target of this context must be an AD LDS configuration set.","pos":[152,215]}]},{"pos":[14636,14732],"content":"A <xref:System.String> that contains the name of the partition to search for an AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the name of the partition to search for an AD LDS instance.","pos":[0,96],"source":"A <xref:System.String> that contains the name of the partition to search for an AD LDS instance."}]},{"pos":[14830,14978],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the AD LDS instance that is found by the search.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"></xref> object that represents the AD LDS instance that is found by the search."},{"pos":[15272,15301],"content":"No AD LDS instance was found.","needQuote":true,"needEscape":true,"nodes":[{"content":"No AD LDS instance was found.","pos":[0,29]}]},{"pos":[15396,15474],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">partitionName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The <code>context</code> or <code>partitionName</code> parameter is not valid."},{"pos":[15577,15706],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">partitionName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>context</code> or <code>partitionName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16359,16410],"content":"Returns an AD LDS instance for a specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an AD LDS instance for a specified context.","pos":[0,51]}]},{"pos":[16908,17121],"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use to retrieve the object. The target of the context must be an AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the target and credentials to use to retrieve the object.","pos":[0,159],"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use to retrieve the object."},{"content":"The target of the context must be an AD LDS instance.","pos":[160,213]}]},{"pos":[17219,17353],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that refers to the AD LDS instance that is found.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"></xref> object that refers to the AD LDS instance that is found."},{"pos":[17655,17757],"content":"A connection to the target that was specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter could not be made.","needQuote":true,"needEscape":true,"source":"A connection to the target that was specified in the <code>context</code> parameter could not be made."},{"pos":[17860,17959],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>context</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18054,18102],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The <code>context</code> parameter is not valid."},{"pos":[18644,18703],"content":"Returns the replication neighbors for this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the replication neighbors for this AD LDS instance.","pos":[0,59]}]},{"pos":[18978,19144],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the replication neighbors for this AD LDS instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"></xref> object that contains the replication neighbors for this AD LDS instance."},{"pos":[19447,19511],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[19708,19756],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[19863,19892],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[20007,20080],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[20652,20744],"content":"Returns a list of replication connection failures that are recorded by this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of replication connection failures that are recorded by this AD LDS instance.","pos":[0,92]}]},{"pos":[21023,21215],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the replication connection failures that are recorded by this AD LDS instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\"></xref> object that contains the replication connection failures that are recorded by this AD LDS instance."},{"pos":[21524,21588],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[21785,21833],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[21940,21969],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[22084,22157],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[22722,22791],"content":"Returns the replication cursor information for a specified partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the replication cursor information for a specified partition.","pos":[0,69]}]},{"pos":[23023,23157],"content":"A <xref:System.String> that contains the distinguished name of the partition for which to retrieve the replication cursor information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the distinguished name of the partition for which to retrieve the replication cursor information.","pos":[0,134],"source":"A <xref:System.String> that contains the distinguished name of the partition for which to retrieve the replication cursor information."}]},{"pos":[23270,23418],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the replication cursor information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\"></xref> object that contains the replication cursor information."},{"pos":[23716,23780],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[23977,24025],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[24128,24229],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>partition</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[24324,24374],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The <code>partition</code> parameter is not valid."},{"pos":[24481,24510],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[24625,24698],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[25268,25356],"content":"Returns the replication metadata for a specific Active Directory Domain Services object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the replication metadata for a specific Active Directory Domain Services object.","pos":[0,88]}]},{"pos":[25598,25738],"content":"A <xref:System.String> that contains the path to the Active Directory Domain Services object for which to retrieve the replication metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the path to the Active Directory Domain Services object for which to retrieve the replication metadata.","pos":[0,140],"source":"A <xref:System.String> that contains the path to the Active Directory Domain Services object for which to retrieve the replication metadata."}]},{"pos":[25858,26013],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the replication cursor information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\"></xref> object that contains the replication cursor information."},{"pos":[26312,26376],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[26573,26621],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[26724,26812],"content":"<ph id=\"ph1\">&lt;code&gt;objectPath&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>objectPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[26907,26944],"content":"<ph id=\"ph1\">&lt;code&gt;objectPath&lt;/code&gt;</ph> is not valid.","needQuote":true,"needEscape":true,"source":"<code>objectPath</code> is not valid."},{"pos":[27059,27132],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[27239,27268],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[27843,27903],"content":"Returns the replication neighbors for a specified partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the replication neighbors for a specified partition.","pos":[0,60]}]},{"pos":[28139,28264],"content":"A <xref:System.String> that contains the distinguished name of the partition for which to retrieve the replication neighbors.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the distinguished name of the partition for which to retrieve the replication neighbors.","pos":[0,125],"source":"A <xref:System.String> that contains the distinguished name of the partition for which to retrieve the replication neighbors."}]},{"pos":[28379,28545],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the replication neighbors for this AD LDS instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"></xref> object that contains the replication neighbors for this AD LDS instance."},{"pos":[28845,28909],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[29106,29154],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[29257,29358],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>partition</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[29453,29503],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The <code>partition</code> parameter is not valid."},{"pos":[29610,29639],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[29754,29827],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[30409,30489],"content":"Returns the current and pending replication operations for this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the current and pending replication operations for this AD LDS instance.","pos":[0,80]}]},{"pos":[30776,30941],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the current and pending replications operations.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\"></xref> object that contains the current and pending replications operations."},{"pos":[31252,31316],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[31513,31561],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[31668,31697],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[31812,31885],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[32333,32400],"content":"Gets the host name of the computer that hosts this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the host name of the computer that hosts this AD LDS instance.","pos":[0,67]}]},{"pos":[32513,32573],"content":"A <xref:System.String> that contains the computer host name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the computer host name.","pos":[0,60],"source":"A <xref:System.String> that contains the computer host name."}]},{"pos":[32770,32799],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[33297,33363],"content":"Gets the inbound replication connections for this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the inbound replication connections for this AD LDS instance.","pos":[0,66]}]},{"pos":[33620,33798],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the inbound replication connections for this AD LDS instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"></xref> object that contains the inbound replication connections for this AD LDS instance."},{"pos":[34005,34034],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[34487,34555],"content":"Gets the IP address of the computer that hosts this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the IP address of the computer that hosts this AD LDS instance.","pos":[0,68]}]},{"pos":[34678,34778],"content":"A <xref:System.String> that contains the IP address of the computer that hosts this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the IP address of the computer that hosts this AD LDS instance.","pos":[0,100],"source":"A <xref:System.String> that contains the IP address of the computer that hosts this AD LDS instance."}]},{"pos":[34976,35005],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[35453,35503],"content":"Gets the LDAP port number of this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the LDAP port number of this AD LDS instance.","pos":[0,50]}]},{"pos":[35612,35699],"content":"A <xref:System.Int32> value that contains the LDAP port number of this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Int32&gt; value that contains the LDAP port number of this AD LDS instance.","pos":[0,87],"source":"A <xref:System.Int32> value that contains the LDAP port number of this AD LDS instance."}]},{"pos":[35896,35925],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[36428,36495],"content":"Gets the outbound replication connections for this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the outbound replication connections for this AD LDS instance.","pos":[0,67]}]},{"pos":[36753,36932],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the outbound replication connections for this AD LDS instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"></xref> object that contains the outbound replication connections for this AD LDS instance."},{"pos":[37140,37169],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[37602,37649],"content":"Gets the roles that this AD LDS instance holds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the roles that this AD LDS instance holds.","pos":[0,47]}]},{"pos":[37858,38098],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.AdamRoleCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.AdamRole\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> members that indicate the roles that this AD LDS instance serves.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.AdamRoleCollection\"></xref> object that contains <xref href=\"System.DirectoryServices.ActiveDirectory.AdamRole\"></xref> members that indicate the roles that this AD LDS instance serves."},{"pos":[38292,38321],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[38753,38892],"content":"Commits changes to the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the underlying directory store.","needQuote":true,"needEscape":true,"source":"Commits changes to the <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"></xref> object to the underlying directory store."},{"pos":[39236,39300],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[39407,39436],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[40064,40103],"content":"Seizes ownership of the specified role.","needQuote":true,"needEscape":true,"nodes":[{"content":"Seizes ownership of the specified role.","pos":[0,39]}]},{"pos":[40328,40489],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.AdamRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> members that specifies which role the AD LDS instance should take ownership of.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.AdamRole\"></xref> members that specifies which role the AD LDS instance should take ownership of."},{"pos":[40736,40781],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">role</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The <code>role</code> parameter is not valid."},{"pos":[40888,40917],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[41365,41433],"content":"Gets the name of the site of which this AD LDS instance is a member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the site of which this AD LDS instance is a member.","pos":[0,68]}]},{"pos":[41555,41655],"content":"A <xref:System.String> that contains the name of the site of which this AD LDS instance is a member.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the name of the site of which this AD LDS instance is a member.","pos":[0,100],"source":"A <xref:System.String> that contains the name of the site of which this AD LDS instance is a member."}]},{"pos":[41852,41881],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[42324,42373],"content":"Gets the SSL port number of this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the SSL port number of this AD LDS instance.","pos":[0,49]}]},{"pos":[42481,42567],"content":"A <xref:System.Int32> value that contains the SSL port number of this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Int32&gt; value that contains the SSL port number of this AD LDS instance.","pos":[0,86],"source":"A <xref:System.Int32> value that contains the SSL port number of this AD LDS instance."}]},{"pos":[42763,42792],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[43330,43397],"content":"Gets or sets the synchronization delegate for this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the synchronization delegate for this AD LDS instance.","pos":[0,67]}]},{"pos":[43641,43802],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> delegate that this AD LDS instance will use for synchronization notifications.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\"></xref> delegate that this AD LDS instance will use for synchronization notifications."},{"pos":[44017,44046],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[44843,44914],"content":"Synchronizes the specified partition with all other domain controllers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Synchronizes the specified partition with all other domain controllers.","pos":[0,71]}]},{"pos":[45162,45279],"content":"A <xref:System.String> that contains the distinguished name of the partition of the domain controller to synchronize.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the distinguished name of the partition of the domain controller to synchronize.","pos":[0,117],"source":"A <xref:System.String> that contains the distinguished name of the partition of the domain controller to synchronize."}]},{"pos":[45396,45528],"content":"A combination of one of more of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> members.","needQuote":true,"needEscape":true,"source":"A combination of one of more of the <xref href=\"System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\"></xref> members."},{"pos":[45738,45839],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>partition</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[45934,45984],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The <code>partition</code> parameter is not valid."},{"pos":[46091,46120],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[46321,46372],"content":"An error occurred in the synchronization operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred in the synchronization operation.","pos":[0,51]}]},{"pos":[46986,47060],"content":"Synchronizes the specified partition with the specified domain controller.","needQuote":true,"needEscape":true,"nodes":[{"content":"Synchronizes the specified partition with the specified domain controller.","pos":[0,74]}]},{"pos":[47249,47341],"content":"A <xref:System.String> that contains the distinguished name of the partition to synchronize.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the distinguished name of the partition to synchronize.","pos":[0,92],"source":"A <xref:System.String> that contains the distinguished name of the partition to synchronize."}]},{"pos":[47410,47496],"content":"A <xref:System.String> that contains the name of the server with which to synchronize.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the name of the server with which to synchronize.","pos":[0,86],"source":"A <xref:System.String> that contains the name of the server with which to synchronize."}]},{"pos":[47794,47858],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[48055,48103],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[48206,48336],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partition</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">sourceServer</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>partition</code> or <code>sourceServer</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[48431,48510],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partition</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">sourceServer</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The <code>partition</code> or <code>sourceServer</code> parameter is not valid."},{"pos":[48617,48646],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[48761,48834],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]},{"pos":[49477,49530],"content":"Transfers the specified role to this AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transfers the specified role to this AD LDS instance.","pos":[0,53]}]},{"pos":[49758,49920],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.AdamRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> members that specifies which role should be transferred to this AD LDS instance.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.AdamRole\"></xref> members that specifies which role should be transferred to this AD LDS instance."},{"pos":[50170,50215],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">role</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","needQuote":true,"needEscape":true,"source":"The <code>role</code> parameter is not valid."},{"pos":[50322,50351],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[50966,51018],"content":"Begins a synchronization of the specified partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins a synchronization of the specified partition.","pos":[0,52]}]},{"pos":[51196,51288],"content":"A <xref:System.String> that contains the distinguished name of the partition to synchronize.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the distinguished name of the partition to synchronize.","pos":[0,92],"source":"A <xref:System.String> that contains the distinguished name of the partition to synchronize."}]},{"pos":[51596,51660],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[51857,51905],"content":"The target server is either busy or unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]},{"pos":[52008,52109],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>partition</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[52204,52254],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">partition</ph><ept id=\"p1\">&lt;/code&gt;</ept> is parameter not valid.","needQuote":true,"needEscape":true,"source":"The <code>partition</code> is parameter not valid."},{"pos":[52361,52390],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[52505,52578],"content":"The specified account does not have permission to perform this operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance\n  id: AdamInstance\n  children:\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.HostName\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.Roles\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.Save\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)\n  langs:\n  - csharp\n  name: AdamInstance\n  nameWithType: AdamInstance\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance\n  type: Class\n  summary: The AdamInstance class represents an AD LDS instance server.\n  remarks: >-\n    > [!NOTE]\n\n    >  The AdamInstance class refers to Active Directory Application Mode (ADAM) which has been renamed to Active Directory Lightweight Directory Services (AD LDS).\n  syntax:\n    content: 'public class AdamInstance : System.DirectoryServices.ActiveDirectory.DirectoryServer'\n  inheritance:\n  - System.Object\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer\n  implements: []\n  inheritedMembers:\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Name\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency\n  id: CheckReplicationConsistency\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: CheckReplicationConsistency()\n  nameWithType: AdamInstance.CheckReplicationConsistency()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Invokes the Knowledge Consistency Checker (KCC) that verifies the replication topology for this AD LDS instance.\n  remarks: For more information, see the topic \"DsReplicaConsistencyCheck\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).\n  syntax:\n    content: public override void CheckReplicationConsistency ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet\n  id: ConfigurationSet\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: ConfigurationSet\n  nameWithType: AdamInstance.ConfigurationSet\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.ConfigurationSet\"></xref> object for this AD LDS instance.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ConfigurationSet ConfigurationSet { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ConfigurationSet\n      description: The <xref href=\"System.DirectoryServices.ActiveDirectory.ConfigurationSet\"></xref> object for this <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"></xref> object.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition\n  id: DefaultPartition\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: DefaultPartition\n  nameWithType: AdamInstance.DefaultPartition\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets or sets the default partition that this AD LDS instance serves.\n  syntax:\n    content: public string DefaultPartition { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the distinguished name of the default partition that this AD LDS instance serves.  If the default partition is not set, this will return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The partition name is not in a valid distinguished name format, or the AD LDS instance does not serve this partition. Applies to set only.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AdamInstance.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Releases the unmanaged resources that are used by the <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"></xref> object and, optionally, releases managed resources.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that determines if the managed resources should be released. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources should be released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only the unmanaged resources should be released.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize\n  id: Finalize\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: AdamInstance.Finalize()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Overrides the &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; method.\n  syntax:\n    content: ~AdamInstance ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  id: FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: FindAll(DirectoryContext,String)\n  nameWithType: AdamInstance.FindAll(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(DirectoryContext,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds all AD LDS instances in the specified context that host the specified partition.\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string partitionName);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use for the search. The target of this context must be an AD LDS configuration set.\n    - id: partitionName\n      type: System.String\n      description: A <xref:System.String> that contains the name of the partition to search for AD LDS instances.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstanceCollection\"></xref> that contains the AD LDS instances that are found by the search.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>context</code> or <code>partitionName</code> parameter is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>context</code> or <code>partitionName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: No AD LDS instance was found.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: FindOne(DirectoryContext,String)\n  nameWithType: AdamInstance.FindOne(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(DirectoryContext,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds a single AD LDS instance in the specified context that hosts the specified partition.\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.AdamInstance FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string partitionName);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use for the search. The target of this context must be an AD LDS configuration set.\n    - id: partitionName\n      type: System.String\n      description: A <xref:System.String> that contains the name of the partition to search for an AD LDS instance.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.AdamInstance\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"></xref> object that represents the AD LDS instance that is found by the search.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: No AD LDS instance was found.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>context</code> or <code>partitionName</code> parameter is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>context</code> or <code>partitionName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  id: GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetAdamInstance(DirectoryContext)\n  nameWithType: AdamInstance.GetAdamInstance(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(DirectoryContext)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Returns an AD LDS instance for a specified context.\n  remarks: >-\n    > [!NOTE]\n\n    >  The GetAdamInstance method refers to Active Directory Application Mode (ADAM) which has been renamed to Active Directory Lightweight Directory Services (AD LDS).\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.AdamInstance GetAdamInstance (System.DirectoryServices.ActiveDirectory.DirectoryContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use to retrieve the object. The target of the context must be an AD LDS instance.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.AdamInstance\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"></xref> object that refers to the AD LDS instance that is found.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A connection to the target that was specified in the <code>context</code> parameter could not be made.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>context</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>context</code> parameter is not valid.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors\n  id: GetAllReplicationNeighbors\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetAllReplicationNeighbors()\n  nameWithType: AdamInstance.GetAllReplicationNeighbors()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Returns the replication neighbors for this AD LDS instance.\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"></xref> object that contains the replication neighbors for this AD LDS instance.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures\n  id: GetReplicationConnectionFailures\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetReplicationConnectionFailures()\n  nameWithType: AdamInstance.GetReplicationConnectionFailures()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Returns a list of replication connection failures that are recorded by this AD LDS instance.\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\"></xref> object that contains the replication connection failures that are recorded by this AD LDS instance.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)\n  id: GetReplicationCursors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetReplicationCursors(String)\n  nameWithType: AdamInstance.GetReplicationCursors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Returns the replication cursor information for a specified partition.\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: A <xref:System.String> that contains the distinguished name of the partition for which to retrieve the replication cursor information.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\"></xref> object that contains the replication cursor information.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>partition</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>partition</code> parameter is not valid.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)\n  id: GetReplicationMetadata(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetReplicationMetadata(String)\n  nameWithType: AdamInstance.GetReplicationMetadata(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Returns the replication metadata for a specific Active Directory Domain Services object.\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata (string objectPath);\n    parameters:\n    - id: objectPath\n      type: System.String\n      description: A <xref:System.String> that contains the path to the Active Directory Domain Services object for which to retrieve the replication metadata.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\"></xref> object that contains the replication cursor information.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>objectPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>objectPath</code> is not valid.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)\n  id: GetReplicationNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetReplicationNeighbors(String)\n  nameWithType: AdamInstance.GetReplicationNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Returns the replication neighbors for a specified partition.\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: A <xref:System.String> that contains the distinguished name of the partition for which to retrieve the replication neighbors.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"></xref> object that contains the replication neighbors for this AD LDS instance.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>partition</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>partition</code> parameter is not valid.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation\n  id: GetReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetReplicationOperationInformation()\n  nameWithType: AdamInstance.GetReplicationOperationInformation()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Returns the current and pending replication operations for this AD LDS instance.\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\"></xref> object that contains the current and pending replications operations.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.HostName\n  id: HostName\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: HostName\n  nameWithType: AdamInstance.HostName\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.HostName\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the host name of the computer that hosts this AD LDS instance.\n  syntax:\n    content: public string HostName { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the computer host name.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.HostName*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections\n  id: InboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: InboundConnections\n  nameWithType: AdamInstance.InboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the inbound replication connections for this AD LDS instance.\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"></xref> object that contains the inbound replication connections for this AD LDS instance.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress\n  id: IPAddress\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: IPAddress\n  nameWithType: AdamInstance.IPAddress\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the IP address of the computer that hosts this AD LDS instance.\n  syntax:\n    content: public override string IPAddress { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the IP address of the computer that hosts this AD LDS instance.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort\n  id: LdapPort\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: LdapPort\n  nameWithType: AdamInstance.LdapPort\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the LDAP port number of this AD LDS instance.\n  syntax:\n    content: public int LdapPort { get; }\n    return:\n      type: System.Int32\n      description: A <xref:System.Int32> value that contains the LDAP port number of this AD LDS instance.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections\n  id: OutboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: OutboundConnections\n  nameWithType: AdamInstance.OutboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the outbound replication connections for this AD LDS instance.\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"></xref> object that contains the outbound replication connections for this AD LDS instance.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Roles\n  id: Roles\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: Roles\n  nameWithType: AdamInstance.Roles\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Roles\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the roles that this AD LDS instance holds.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.AdamRoleCollection Roles { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.AdamRoleCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.AdamRoleCollection\"></xref> object that contains <xref href=\"System.DirectoryServices.ActiveDirectory.AdamRole\"></xref> members that indicate the roles that this AD LDS instance serves.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.Roles*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Save\n  id: Save\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: Save()\n  nameWithType: AdamInstance.Save()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Save()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Commits changes to the <xref href=\"System.DirectoryServices.ActiveDirectory.AdamInstance\"></xref> object to the underlying directory store.\n  syntax:\n    content: public void Save ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.Save*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  id: SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SeizeRoleOwnership(AdamRole)\n  nameWithType: AdamInstance.SeizeRoleOwnership(AdamRole)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(AdamRole)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Seizes ownership of the specified role.\n  syntax:\n    content: public void SeizeRoleOwnership (System.DirectoryServices.ActiveDirectory.AdamRole role);\n    parameters:\n    - id: role\n      type: System.DirectoryServices.ActiveDirectory.AdamRole\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.AdamRole\"></xref> members that specifies which role the AD LDS instance should take ownership of.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The <code>role</code> parameter is not valid.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName\n  id: SiteName\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SiteName\n  nameWithType: AdamInstance.SiteName\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the name of the site of which this AD LDS instance is a member.\n  syntax:\n    content: public override string SiteName { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the name of the site of which this AD LDS instance is a member.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort\n  id: SslPort\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SslPort\n  nameWithType: AdamInstance.SslPort\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the SSL port number of this AD LDS instance.\n  syntax:\n    content: public int SslPort { get; }\n    return:\n      type: System.Int32\n      description: A <xref:System.Int32> value that contains the SSL port number of this AD LDS instance.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback\n  id: SyncFromAllServersCallback\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SyncFromAllServersCallback\n  nameWithType: AdamInstance.SyncFromAllServersCallback\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets or sets the synchronization delegate for this AD LDS instance.\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback { get; set; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\"></xref> delegate that this AD LDS instance will use for synchronization notifications.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  id: SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  nameWithType: AdamInstance.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Synchronizes the specified partition with all other domain controllers.\n  syntax:\n    content: public override void SyncReplicaFromAllServers (string partition, System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options);\n    parameters:\n    - id: partition\n      type: System.String\n      description: A <xref:System.String> that contains the distinguished name of the partition of the domain controller to synchronize.\n    - id: options\n      type: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n      description: A combination of one of more of the <xref href=\"System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\"></xref> members.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>partition</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>partition</code> parameter is not valid.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException\n    description: An error occurred in the synchronization operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)\n  id: SyncReplicaFromServer(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SyncReplicaFromServer(String,String)\n  nameWithType: AdamInstance.SyncReplicaFromServer(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(String,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Synchronizes the specified partition with the specified domain controller.\n  syntax:\n    content: public override void SyncReplicaFromServer (string partition, string sourceServer);\n    parameters:\n    - id: partition\n      type: System.String\n      description: A <xref:System.String> that contains the distinguished name of the partition to synchronize.\n    - id: sourceServer\n      type: System.String\n      description: A <xref:System.String> that contains the name of the server with which to synchronize.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>partition</code> or <code>sourceServer</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>partition</code> or <code>sourceServer</code> parameter is not valid.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  id: TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: TransferRoleOwnership(AdamRole)\n  nameWithType: AdamInstance.TransferRoleOwnership(AdamRole)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(AdamRole)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Transfers the specified role to this AD LDS instance.\n  syntax:\n    content: public void TransferRoleOwnership (System.DirectoryServices.ActiveDirectory.AdamRole role);\n    parameters:\n    - id: role\n      type: System.DirectoryServices.ActiveDirectory.AdamRole\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.AdamRole\"></xref> members that specifies which role should be transferred to this AD LDS instance.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The <code>role</code> parameter is not valid.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)\n  id: TriggerSyncReplicaFromNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: TriggerSyncReplicaFromNeighbors(String)\n  nameWithType: AdamInstance.TriggerSyncReplicaFromNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Begins a synchronization of the specified partition.\n  syntax:\n    content: public override void TriggerSyncReplicaFromNeighbors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: A <xref:System.String> that contains the distinguished name of the partition to synchronize.\n  overload: System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>partition</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>partition</code> is parameter not valid.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  platform:\n  - net462\nreferences:\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: System.DirectoryServices.ActiveDirectory.DirectoryServer\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryOperationException\n  nameWithType: ActiveDirectoryOperationException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryServerDownException\n  nameWithType: ActiveDirectoryServerDownException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.UnauthorizedAccessException\n  isExternal: true\n  name: System.UnauthorizedAccessException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryObjectNotFoundException\n  nameWithType: ActiveDirectoryObjectNotFoundException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: SyncFromAllServersOperationException\n  nameWithType: SyncFromAllServersOperationException\n  fullName: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: CheckReplicationConsistency()\n  nameWithType: AdamInstance.CheckReplicationConsistency()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency()\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: ConfigurationSet\n  nameWithType: AdamInstance.ConfigurationSet\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet\n- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ConfigurationSet\n  nameWithType: ConfigurationSet\n  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: DefaultPartition\n  nameWithType: AdamInstance.DefaultPartition\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AdamInstance.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Finalize()\n  nameWithType: AdamInstance.Finalize()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize()\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: FindAll(DirectoryContext,String)\n  nameWithType: AdamInstance.FindAll(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(DirectoryContext,String)\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: AdamInstanceCollection\n  nameWithType: AdamInstanceCollection\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: FindOne(DirectoryContext,String)\n  nameWithType: AdamInstance.FindOne(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(DirectoryContext,String)\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: AdamInstance\n  nameWithType: AdamInstance\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetAdamInstance(DirectoryContext)\n  nameWithType: AdamInstance.GetAdamInstance(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(DirectoryContext)\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetAllReplicationNeighbors()\n  nameWithType: AdamInstance.GetAllReplicationNeighbors()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationNeighborCollection\n  nameWithType: ReplicationNeighborCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationConnectionFailures()\n  nameWithType: AdamInstance.GetReplicationConnectionFailures()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationFailureCollection\n  nameWithType: ReplicationFailureCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationCursors(String)\n  nameWithType: AdamInstance.GetReplicationCursors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(String)\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationCursorCollection\n  nameWithType: ReplicationCursorCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationMetadata(String)\n  nameWithType: AdamInstance.GetReplicationMetadata(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(String)\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryReplicationMetadata\n  nameWithType: ActiveDirectoryReplicationMetadata\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationNeighbors(String)\n  nameWithType: AdamInstance.GetReplicationNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(String)\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationOperationInformation()\n  nameWithType: AdamInstance.GetReplicationOperationInformation()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationOperationInformation\n  nameWithType: ReplicationOperationInformation\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.HostName\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: HostName\n  nameWithType: AdamInstance.HostName\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.HostName\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: InboundConnections\n  nameWithType: AdamInstance.InboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationConnectionCollection\n  nameWithType: ReplicationConnectionCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: IPAddress\n  nameWithType: AdamInstance.IPAddress\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: LdapPort\n  nameWithType: AdamInstance.LdapPort\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: OutboundConnections\n  nameWithType: AdamInstance.OutboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Roles\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Roles\n  nameWithType: AdamInstance.Roles\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Roles\n- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: AdamRoleCollection\n  nameWithType: AdamRoleCollection\n  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Save\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Save()\n  nameWithType: AdamInstance.Save()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Save()\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SeizeRoleOwnership(AdamRole)\n  nameWithType: AdamInstance.SeizeRoleOwnership(AdamRole)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(AdamRole)\n- uid: System.DirectoryServices.ActiveDirectory.AdamRole\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: AdamRole\n  nameWithType: AdamRole\n  fullName: System.DirectoryServices.ActiveDirectory.AdamRole\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SiteName\n  nameWithType: AdamInstance.SiteName\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SslPort\n  nameWithType: AdamInstance.SslPort\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SyncFromAllServersCallback\n  nameWithType: AdamInstance.SyncFromAllServersCallback\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback\n- uid: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: SyncUpdateCallback\n  nameWithType: SyncUpdateCallback\n  fullName: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  nameWithType: AdamInstance.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n- uid: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: SyncFromAllServersOptions\n  nameWithType: SyncFromAllServersOptions\n  fullName: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SyncReplicaFromServer(String,String)\n  nameWithType: AdamInstance.SyncReplicaFromServer(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(String,String)\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: TransferRoleOwnership(AdamRole)\n  nameWithType: AdamInstance.TransferRoleOwnership(AdamRole)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(AdamRole)\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: TriggerSyncReplicaFromNeighbors(String)\n  nameWithType: AdamInstance.TriggerSyncReplicaFromNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(String)\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: CheckReplicationConsistency\n  nameWithType: AdamInstance.CheckReplicationConsistency\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: ConfigurationSet\n  nameWithType: AdamInstance.ConfigurationSet\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: DefaultPartition\n  nameWithType: AdamInstance.DefaultPartition\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Dispose\n  nameWithType: AdamInstance.Dispose\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Finalize\n  nameWithType: AdamInstance.Finalize\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: FindAll\n  nameWithType: AdamInstance.FindAll\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: FindOne\n  nameWithType: AdamInstance.FindOne\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetAdamInstance\n  nameWithType: AdamInstance.GetAdamInstance\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetAllReplicationNeighbors\n  nameWithType: AdamInstance.GetAllReplicationNeighbors\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationConnectionFailures\n  nameWithType: AdamInstance.GetReplicationConnectionFailures\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationCursors\n  nameWithType: AdamInstance.GetReplicationCursors\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationMetadata\n  nameWithType: AdamInstance.GetReplicationMetadata\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationNeighbors\n  nameWithType: AdamInstance.GetReplicationNeighbors\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationOperationInformation\n  nameWithType: AdamInstance.GetReplicationOperationInformation\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.HostName*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: HostName\n  nameWithType: AdamInstance.HostName\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: InboundConnections\n  nameWithType: AdamInstance.InboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: IPAddress\n  nameWithType: AdamInstance.IPAddress\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: LdapPort\n  nameWithType: AdamInstance.LdapPort\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: OutboundConnections\n  nameWithType: AdamInstance.OutboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Roles*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Roles\n  nameWithType: AdamInstance.Roles\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Save*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Save\n  nameWithType: AdamInstance.Save\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SeizeRoleOwnership\n  nameWithType: AdamInstance.SeizeRoleOwnership\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SiteName\n  nameWithType: AdamInstance.SiteName\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SslPort\n  nameWithType: AdamInstance.SslPort\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SyncFromAllServersCallback\n  nameWithType: AdamInstance.SyncFromAllServersCallback\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SyncReplicaFromAllServers\n  nameWithType: AdamInstance.SyncReplicaFromAllServers\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SyncReplicaFromServer\n  nameWithType: AdamInstance.SyncReplicaFromServer\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: TransferRoleOwnership\n  nameWithType: AdamInstance.TransferRoleOwnership\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors*\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: TriggerSyncReplicaFromNeighbors\n  nameWithType: AdamInstance.TriggerSyncReplicaFromNeighbors\n"}