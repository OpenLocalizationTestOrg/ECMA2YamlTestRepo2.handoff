{"nodes":[{"pos":[2420,2545],"content":"The DirectoryServer class is an abstract class that represents an Active Directory Domain Services server or AD LDS instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DirectoryServer class is an abstract class that represents an Active Directory Domain Services server or AD LDS instance.","pos":[0,125]}]},{"pos":[3201,3319],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryServer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryServer\"></xref> class."},{"pos":[4043,4155],"content":"Uses the Knowledge Consistency Checker (KCC) to verify and recalculate the replication topology for this server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Uses the Knowledge Consistency Checker (KCC) to verify and recalculate the replication topology for this server.","pos":[0,112]}]},{"pos":[4824,4897],"content":"Releases all managed and unmanaged resources that are used by the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases all managed and unmanaged resources that are used by the object.","pos":[0,73]}]},{"pos":[5570,5670],"content":"Releases all unmanaged resources and, optionally, all managed resources that are used by the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases all unmanaged resources and, optionally, all managed resources that are used by the object.","pos":[0,100]}]},{"pos":[5682,5818],"content":"The `disposing` parameter affects only the release of the managed resources. The unmanaged resources are always released by this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`disposing`</ph> parameter affects only the release of the managed resources.","pos":[0,76],"source":"The `disposing` parameter affects only the release of the managed resources."},{"content":"The unmanaged resources are always released by this method.","pos":[77,136]}]},{"pos":[5973,6234],"content":"Determines if the managed resources should be released. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources are released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the managed resources are not released.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines if the managed resources should be released.","pos":[0,55]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the managed resources are released; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the managed resources are not released.","pos":[56,261],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources are released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the managed resources are not released."}]},{"pos":[6793,6878],"content":"Overrides the &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object.Finalize%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,85],"source":"Overrides the &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; method."}]},{"pos":[7591,7650],"content":"Retrieves all of the replication neighbors for this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves all of the replication neighbors for this object.","pos":[0,59]}]},{"pos":[7925,8083],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the replication neighbors for this object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"></xref> object that contains the replication neighbors for this object."},{"pos":[8706,8823],"content":"Retrieves a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the directory server.","needQuote":true,"needEscape":true,"source":"Retrieves a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the directory server."},{"pos":[9018,9125],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the directory server.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the directory server."},{"pos":[9334,9363],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[9947,10035],"content":"Retrieves a collection of the replication connection failures for this directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a collection of the replication connection failures for this directory server.","pos":[0,88]}]},{"pos":[10314,10490],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the replication connection failures for this directory server.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\"></xref> object that contains the replication connection failures for this directory server."},{"pos":[11187,11260],"content":"Retrieves the replication cursor information for the specified partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the replication cursor information for the specified partition.","pos":[0,73]}]},{"pos":[11492,11589],"content":"The distinguished name of the partition for which to retrieve the replication cursor information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distinguished name of the partition for which to retrieve the replication cursor information.","pos":[0,97]}]},{"pos":[11702,11843],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the replication cursor information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\"></xref> that contains the replication cursor information."},{"pos":[12534,12624],"content":"Retrieves the replication metadata for a specific Active Directory Domain Services object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the replication metadata for a specific Active Directory Domain Services object.","pos":[0,90]}]},{"pos":[12866,12936],"content":"The path to the object for which to retrieve the replication metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the object for which to retrieve the replication metadata.","pos":[0,70]}]},{"pos":[13056,13227],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the replication metadata for the specified object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\"></xref> object that contains the replication metadata for the specified object."},{"pos":[13924,14013],"content":"Retrieves the replication neighbors of this directory server for the specified partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the replication neighbors of this directory server for the specified partition.","pos":[0,89]}]},{"pos":[14249,14327],"content":"The distinguished name of the partition for which to retrieve the replication.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distinguished name of the partition for which to retrieve the replication.","pos":[0,78]}]},{"pos":[14442,14599],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the replication neighbors for this object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"></xref> object that contains the replication neighbors for this object."},{"pos":[15304,15387],"content":"Retrieves the current and pending replication operations for this directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the current and pending replication operations for this directory server.","pos":[0,83]}]},{"pos":[15674,15838],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the current and pending replication operations.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\"></xref> object that contains the current and pending replication operations."},{"pos":[16470,16542],"content":"Retrieves the inbound replication connections for this directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the inbound replication connections for this directory server.","pos":[0,72]}]},{"pos":[16799,16978],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the inbound replication connections for this directory server.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"></xref> object that contains the inbound replication connections for this directory server."},{"pos":[17549,17599],"content":"Retrieves the IP address of this directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the IP address of this directory server.","pos":[0,50]}]},{"pos":[17722,17797],"content":"The Internet protocol (IP) address of this directory server in string form.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Internet protocol (IP) address of this directory server in string form.","pos":[0,75]}]},{"pos":[18451,18533],"content":"Moves the directory server to another site within the forest or configuration set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Moves the directory server to another site within the forest or configuration set.","pos":[0,82]}]},{"pos":[18545,18806],"content":"If the directory server is a domain controller, this method will move the domain controller to a different site in the forest. If the directory server is an AD LDS instance, this method will move the AD LDS instance to a different site in the configuration set.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the directory server is a domain controller, this method will move the domain controller to a different site in the forest. If the directory server is an AD LDS instance, this method will move the AD LDS instance to a different site in the configuration set.","pos":[0,261],"nodes":[{"content":"If the directory server is a domain controller, this method will move the domain controller to a different site in the forest.","pos":[0,126]},{"content":"If the directory server is an AD LDS instance, this method will move the AD LDS instance to a different site in the configuration set.","pos":[127,261]}]}]},{"pos":[18959,19036],"content":"The name of the site within the domain to which to move the directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the site within the domain to which to move the directory server.","pos":[0,77]}]},{"pos":[19333,19397],"content":"A call to the underlying directory service resulted in an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]},{"pos":[19500,19586],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>siteName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19681,19722],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>siteName</code> is an empty string."},{"pos":[19829,19858],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[20298,20336],"content":"Gets the name of the directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the directory server.","pos":[0,38]}]},{"pos":[20445,20478],"content":"The name of the directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the directory server.","pos":[0,33]}]},{"pos":[20674,20703],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[21218,21286],"content":"Gets the outbound replication connections for this directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the outbound replication connections for this directory server.","pos":[0,68]}]},{"pos":[21544,21724],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the outbound replication connections for this directory server.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"></xref> object that contains the outbound replication connections for this directory server."},{"pos":[22301,22346],"content":"Gets the partitions on this directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the partitions on this directory server.","pos":[0,45]}]},{"pos":[22572,22749],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the distinguished names of the partitions on this directory server.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection\"></xref> object that contains the distinguished names of the partitions on this directory server."},{"pos":[22951,22980],"content":"The object has been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object has been disposed.","pos":[0,29]}]},{"pos":[23440,23504],"content":"Gets the name of the site that this directory server belongs to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the site that this directory server belongs to.","pos":[0,64]}]},{"pos":[23626,23685],"content":"The name of the site that this directory server belongs to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the site that this directory server belongs to.","pos":[0,59]}]},{"pos":[24331,24399],"content":"Gets or sets the synchronization delegate for this directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the synchronization delegate for this directory server.","pos":[0,68]}]},{"pos":[24643,24726],"content":"The delegate that this directory server will use for synchronization notifications.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate that this directory server will use for synchronization notifications.","pos":[0,83]}]},{"pos":[25649,25792],"content":"Causes this directory server to synchronize the specified partition with all other directory servers in the same site that hosts the partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes this directory server to synchronize the specified partition with all other directory servers in the same site that hosts the partition.","pos":[0,143]}]},{"pos":[26040,26095],"content":"The distinguished name of the partition to synchronize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distinguished name of the partition to synchronize.","pos":[0,55]}]},{"pos":[26212,26344],"content":"A combination of one or more of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> members.","needQuote":true,"needEscape":true,"source":"A combination of one or more of the <xref href=\"System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\"></xref> members."},{"pos":[27083,27187],"content":"Causes this directory server to synchronize the specified partition with the specified directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes this directory server to synchronize the specified partition with the specified directory server.","pos":[0,104]}]},{"pos":[27376,27431],"content":"The distinguished name of the partition to synchronize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distinguished name of the partition to synchronize.","pos":[0,55]}]},{"pos":[27500,27557],"content":"The name of the server to synchronize the partition with.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the server to synchronize the partition with.","pos":[0,57]}]},{"pos":[28130,28173],"content":"Retrieves the name of the directory server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the name of the directory server.","pos":[0,43]}]},{"pos":[28309,28332],"content":"The name of the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the server.","pos":[0,23]}]},{"pos":[29055,29107],"content":"Begins a synchronization of the specified partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins a synchronization of the specified partition.","pos":[0,52]}]},{"pos":[29285,29340],"content":"The distinguished name of the partition to synchronize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distinguished name of the partition to synchronize.","pos":[0,55]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  id: DirectoryServer\n  children:\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Name\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)\n  langs:\n  - csharp\n  name: DirectoryServer\n  nameWithType: DirectoryServer\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  type: Class\n  summary: The DirectoryServer class is an abstract class that represents an Active Directory Domain Services server or AD LDS instance.\n  syntax:\n    content: 'public abstract class DirectoryServer : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: DirectoryServer()\n  nameWithType: DirectoryServer.DirectoryServer()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.DirectoryServer()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryServer\"></xref> class.\n  syntax:\n    content: protected DirectoryServer ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency\n  id: CheckReplicationConsistency\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: CheckReplicationConsistency()\n  nameWithType: DirectoryServer.CheckReplicationConsistency()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Uses the Knowledge Consistency Checker (KCC) to verify and recalculate the replication topology for this server.\n  syntax:\n    content: public abstract void CheckReplicationConsistency ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose\n  id: Dispose\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DirectoryServer.Dispose()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Releases all managed and unmanaged resources that are used by the object.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DirectoryServer.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Releases all unmanaged resources and, optionally, all managed resources that are used by the object.\n  remarks: The `disposing` parameter affects only the release of the managed resources. The unmanaged resources are always released by this method.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Determines if the managed resources should be released. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources are released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the managed resources are not released.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize\n  id: Finalize\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: DirectoryServer.Finalize()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Overrides the &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; method.\n  syntax:\n    content: ~DirectoryServer ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors\n  id: GetAllReplicationNeighbors\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: GetAllReplicationNeighbors()\n  nameWithType: DirectoryServer.GetAllReplicationNeighbors()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves all of the replication neighbors for this object.\n  syntax:\n    content: public abstract System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"></xref> object that contains the replication neighbors for this object.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry\n  id: GetDirectoryEntry\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: GetDirectoryEntry()\n  nameWithType: DirectoryServer.GetDirectoryEntry()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the directory server.\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the directory server.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures\n  id: GetReplicationConnectionFailures\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: GetReplicationConnectionFailures()\n  nameWithType: DirectoryServer.GetReplicationConnectionFailures()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves a collection of the replication connection failures for this directory server.\n  syntax:\n    content: public abstract System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\"></xref> object that contains the replication connection failures for this directory server.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)\n  id: GetReplicationCursors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: GetReplicationCursors(String)\n  nameWithType: DirectoryServer.GetReplicationCursors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves the replication cursor information for the specified partition.\n  syntax:\n    content: public abstract System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: The distinguished name of the partition for which to retrieve the replication cursor information.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\"></xref> that contains the replication cursor information.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)\n  id: GetReplicationMetadata(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: GetReplicationMetadata(String)\n  nameWithType: DirectoryServer.GetReplicationMetadata(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves the replication metadata for a specific Active Directory Domain Services object.\n  syntax:\n    content: public abstract System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata (string objectPath);\n    parameters:\n    - id: objectPath\n      type: System.String\n      description: The path to the object for which to retrieve the replication metadata.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\"></xref> object that contains the replication metadata for the specified object.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)\n  id: GetReplicationNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: GetReplicationNeighbors(String)\n  nameWithType: DirectoryServer.GetReplicationNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves the replication neighbors of this directory server for the specified partition.\n  syntax:\n    content: public abstract System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: The distinguished name of the partition for which to retrieve the replication.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\"></xref> object that contains the replication neighbors for this object.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation\n  id: GetReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: GetReplicationOperationInformation()\n  nameWithType: DirectoryServer.GetReplicationOperationInformation()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves the current and pending replication operations for this directory server.\n  syntax:\n    content: public abstract System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\"></xref> object that contains the current and pending replication operations.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections\n  id: InboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: InboundConnections\n  nameWithType: DirectoryServer.InboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves the inbound replication connections for this directory server.\n  syntax:\n    content: public abstract System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"></xref> object that contains the inbound replication connections for this directory server.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress\n  id: IPAddress\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: IPAddress\n  nameWithType: DirectoryServer.IPAddress\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves the IP address of this directory server.\n  syntax:\n    content: public abstract string IPAddress { get; }\n    return:\n      type: System.String\n      description: The Internet protocol (IP) address of this directory server in string form.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)\n  id: MoveToAnotherSite(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: MoveToAnotherSite(String)\n  nameWithType: DirectoryServer.MoveToAnotherSite(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Moves the directory server to another site within the forest or configuration set.\n  remarks: If the directory server is a domain controller, this method will move the domain controller to a different site in the forest. If the directory server is an AD LDS instance, this method will move the AD LDS instance to a different site in the configuration set.\n  syntax:\n    content: public void MoveToAnotherSite (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: The name of the site within the domain to which to move the directory server.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>siteName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>siteName</code> is an empty string.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Name\n  id: Name\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: Name\n  nameWithType: DirectoryServer.Name\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.Name\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the name of the directory server.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the directory server.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.Name*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections\n  id: OutboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: OutboundConnections\n  nameWithType: DirectoryServer.OutboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the outbound replication connections for this directory server.\n  syntax:\n    content: public abstract System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\"></xref> object that contains the outbound replication connections for this directory server.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions\n  id: Partitions\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: Partitions\n  nameWithType: DirectoryServer.Partitions\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the partitions on this directory server.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection Partitions { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection\"></xref> object that contains the distinguished names of the partitions on this directory server.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName\n  id: SiteName\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: SiteName\n  nameWithType: DirectoryServer.SiteName\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the name of the site that this directory server belongs to.\n  syntax:\n    content: public abstract string SiteName { get; }\n    return:\n      type: System.String\n      description: The name of the site that this directory server belongs to.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback\n  id: SyncFromAllServersCallback\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: SyncFromAllServersCallback\n  nameWithType: DirectoryServer.SyncFromAllServersCallback\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets or sets the synchronization delegate for this directory server.\n  syntax:\n    content: public abstract System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback { get; set; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n      description: The delegate that this directory server will use for synchronization notifications.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  id: SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  nameWithType: DirectoryServer.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Causes this directory server to synchronize the specified partition with all other directory servers in the same site that hosts the partition.\n  syntax:\n    content: public abstract void SyncReplicaFromAllServers (string partition, System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options);\n    parameters:\n    - id: partition\n      type: System.String\n      description: The distinguished name of the partition to synchronize.\n    - id: options\n      type: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n      description: A combination of one or more of the <xref href=\"System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\"></xref> members.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)\n  id: SyncReplicaFromServer(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: SyncReplicaFromServer(String,String)\n  nameWithType: DirectoryServer.SyncReplicaFromServer(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(String,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Causes this directory server to synchronize the specified partition with the specified directory server.\n  syntax:\n    content: public abstract void SyncReplicaFromServer (string partition, string sourceServer);\n    parameters:\n    - id: partition\n      type: System.String\n      description: The distinguished name of the partition to synchronize.\n    - id: sourceServer\n      type: System.String\n      description: The name of the server to synchronize the partition with.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString\n  id: ToString\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DirectoryServer.ToString()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves the name of the directory server.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The name of the server.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)\n  id: TriggerSyncReplicaFromNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  langs:\n  - csharp\n  name: TriggerSyncReplicaFromNeighbors(String)\n  nameWithType: DirectoryServer.TriggerSyncReplicaFromNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Begins a synchronization of the specified partition.\n  syntax:\n    content: public abstract void TriggerSyncReplicaFromNeighbors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: The distinguished name of the partition to synchronize.\n  overload: System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryOperationException\n  nameWithType: ActiveDirectoryOperationException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: DirectoryServer()\n  nameWithType: DirectoryServer.DirectoryServer()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.DirectoryServer()\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: CheckReplicationConsistency()\n  nameWithType: DirectoryServer.CheckReplicationConsistency()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency()\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: Dispose()\n  nameWithType: DirectoryServer.Dispose()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose()\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DirectoryServer.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: Finalize()\n  nameWithType: DirectoryServer.Finalize()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize()\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetAllReplicationNeighbors()\n  nameWithType: DirectoryServer.GetAllReplicationNeighbors()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationNeighborCollection\n  nameWithType: ReplicationNeighborCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetDirectoryEntry()\n  nameWithType: DirectoryServer.GetDirectoryEntry()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry()\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetReplicationConnectionFailures()\n  nameWithType: DirectoryServer.GetReplicationConnectionFailures()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationFailureCollection\n  nameWithType: ReplicationFailureCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetReplicationCursors(String)\n  nameWithType: DirectoryServer.GetReplicationCursors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(String)\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationCursorCollection\n  nameWithType: ReplicationCursorCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetReplicationMetadata(String)\n  nameWithType: DirectoryServer.GetReplicationMetadata(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(String)\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryReplicationMetadata\n  nameWithType: ActiveDirectoryReplicationMetadata\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetReplicationNeighbors(String)\n  nameWithType: DirectoryServer.GetReplicationNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(String)\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetReplicationOperationInformation()\n  nameWithType: DirectoryServer.GetReplicationOperationInformation()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationOperationInformation\n  nameWithType: ReplicationOperationInformation\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: InboundConnections\n  nameWithType: DirectoryServer.InboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationConnectionCollection\n  nameWithType: ReplicationConnectionCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: IPAddress\n  nameWithType: DirectoryServer.IPAddress\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: MoveToAnotherSite(String)\n  nameWithType: DirectoryServer.MoveToAnotherSite(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(String)\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Name\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: Name\n  nameWithType: DirectoryServer.Name\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.Name\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: OutboundConnections\n  nameWithType: DirectoryServer.OutboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: Partitions\n  nameWithType: DirectoryServer.Partitions\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions\n- uid: System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReadOnlyStringCollection\n  nameWithType: ReadOnlyStringCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: SiteName\n  nameWithType: DirectoryServer.SiteName\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: SyncFromAllServersCallback\n  nameWithType: DirectoryServer.SyncFromAllServersCallback\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback\n- uid: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: SyncUpdateCallback\n  nameWithType: SyncUpdateCallback\n  fullName: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  nameWithType: DirectoryServer.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n- uid: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: SyncFromAllServersOptions\n  nameWithType: SyncFromAllServersOptions\n  fullName: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: SyncReplicaFromServer(String,String)\n  nameWithType: DirectoryServer.SyncReplicaFromServer(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(String,String)\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: ToString()\n  nameWithType: DirectoryServer.ToString()\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString()\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: TriggerSyncReplicaFromNeighbors(String)\n  nameWithType: DirectoryServer.TriggerSyncReplicaFromNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(String)\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: DirectoryServer\n  nameWithType: DirectoryServer.DirectoryServer\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: CheckReplicationConsistency\n  nameWithType: DirectoryServer.CheckReplicationConsistency\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: Dispose\n  nameWithType: DirectoryServer.Dispose\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: Finalize\n  nameWithType: DirectoryServer.Finalize\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetAllReplicationNeighbors\n  nameWithType: DirectoryServer.GetAllReplicationNeighbors\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetDirectoryEntry\n  nameWithType: DirectoryServer.GetDirectoryEntry\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetReplicationConnectionFailures\n  nameWithType: DirectoryServer.GetReplicationConnectionFailures\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetReplicationCursors\n  nameWithType: DirectoryServer.GetReplicationCursors\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetReplicationMetadata\n  nameWithType: DirectoryServer.GetReplicationMetadata\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetReplicationNeighbors\n  nameWithType: DirectoryServer.GetReplicationNeighbors\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: GetReplicationOperationInformation\n  nameWithType: DirectoryServer.GetReplicationOperationInformation\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: InboundConnections\n  nameWithType: DirectoryServer.InboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: IPAddress\n  nameWithType: DirectoryServer.IPAddress\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: MoveToAnotherSite\n  nameWithType: DirectoryServer.MoveToAnotherSite\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Name*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: Name\n  nameWithType: DirectoryServer.Name\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: OutboundConnections\n  nameWithType: DirectoryServer.OutboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: Partitions\n  nameWithType: DirectoryServer.Partitions\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: SiteName\n  nameWithType: DirectoryServer.SiteName\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: SyncFromAllServersCallback\n  nameWithType: DirectoryServer.SyncFromAllServersCallback\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: SyncReplicaFromAllServers\n  nameWithType: DirectoryServer.SyncReplicaFromAllServers\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: SyncReplicaFromServer\n  nameWithType: DirectoryServer.SyncReplicaFromServer\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: ToString\n  nameWithType: DirectoryServer.ToString\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors*\n  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: TriggerSyncReplicaFromNeighbors\n  nameWithType: DirectoryServer.TriggerSyncReplicaFromNeighbors\n"}