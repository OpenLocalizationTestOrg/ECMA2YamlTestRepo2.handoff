{"nodes":[{"pos":[1135,1245],"content":"Controls the ability to access files or folders through a **File** dialog box. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls the ability to access files or folders through a <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> dialog box.","pos":[0,78],"source":"Controls the ability to access files or folders through a **File** dialog box."},{"content":"This class cannot be inherited.","pos":[79,110]}]},{"pos":[1257,1413],"content":"This permission is typically used to provide limited access to user-specified files when <xref:System.Security.Permissions.FileIOPermission> is not granted.","needQuote":true,"needEscape":true,"nodes":[{"content":"This permission is typically used to provide limited access to user-specified files when &lt;xref:System.Security.Permissions.FileIOPermission&gt; is not granted.","pos":[0,156],"source":"This permission is typically used to provide limited access to user-specified files when <xref:System.Security.Permissions.FileIOPermission> is not granted."}]},{"pos":[3017,3153],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.FileDialogPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified access.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.FileDialogPermission\"></xref> class with the specified access."},{"pos":[3389,3501],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values."},{"pos":[3678,3829],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">access</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid combination of the <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The <code>access</code> parameter is not a valid combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values."},{"pos":[4417,4591],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.FileDialogPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with either restricted or unrestricted permission, as specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.FileDialogPermission\"></xref> class with either restricted or unrestricted permission, as specified."},{"pos":[4603,4694],"content":"Creates either fully restricted (<ph id=\"ph1\">`None`</ph>) or <ph id=\"ph2\">`Unrestricted`</ph> access to <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> dialog boxes.","needQuote":true,"needEscape":true,"source":"Creates either fully restricted (`None`) or `Unrestricted` access to **File** dialog boxes."},{"pos":[4906,5132],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Unrestricted\" name=\"Unrestricted\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values (<xref uid=\"langword_csharp_Unrestricted\" name=\"Unrestricted\" href=\"\"></xref> or <xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"></xref>)."},{"pos":[5309,5431],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."},{"pos":[5833,5876],"content":"Gets or sets the permitted access to files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the permitted access to files.","pos":[0,43]}]},{"pos":[6081,6111],"content":"The permitted access to files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permitted access to files.","pos":[0,30]}]},{"pos":[6289,6482],"content":"An attempt is made to set the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">access</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter to a value that is not a valid combination of the <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"An attempt is made to set the <code>access</code> parameter to a value that is not a valid combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values."},{"pos":[6878,6942],"content":"Creates and returns an identical copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]},{"pos":[6954,7046],"content":"A copy of the permission represents the same access to resources as the original permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the permission represents the same access to resources as the original permission.","pos":[0,92]}]},{"pos":[7213,7246],"content":"A copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]},{"pos":[7852,7922],"content":"Reconstructs a permission with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]},{"pos":[8107,8159],"content":"The XML encoding used to reconstruct the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding used to reconstruct the permission.","pos":[0,52]}]},{"pos":[8346,8441],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>esd</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8537,8694],"content":"The <code>esd</code> parameter is not a valid permission element.       -or-       The version number of the <code>esd</code> parameter is not supported.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid permission element.","pos":[0,65],"source":"The <code>esd</code> parameter is not a valid permission element."},{"content":"-or-       The version number of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not supported.","pos":[72,153],"source":"       -or-       The version number of the <code>esd</code> parameter is not supported."}]},{"pos":[9207,9320],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]},{"pos":[9332,9530],"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.","pos":[0,198],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common.","pos":[0,118]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[119,198]}]}]},{"pos":[9738,9844],"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","pos":[0,106],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be the same type as the current permission.","pos":[55,106]}]}]},{"pos":[9916,10135],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[106,219],"source":" This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[10316,10472],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"pos":[10989,11071],"content":"Determines whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]},{"pos":[11083,11456],"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess> access is a subset of a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess> access.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess> access is a subset of a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess> access.","pos":[0,373],"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.","pos":[0,172]},{"content":"For example, a permission for &lt;xref:System.Security.Permissions.FileDialogPermissionAccess&gt; access is a subset of a permission for &lt;xref:System.Security.Permissions.FileDialogPermissionAccess&gt; access.","pos":[173,373],"source":" For example, a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess> access is a subset of a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess> access."}]}]},{"pos":[11642,11769],"content":"A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.","pos":[0,127],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be the same type as the current permission.","pos":[63,127]}]}]},{"pos":[11828,12030],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12212,12368],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"pos":[12814,12888],"content":"Returns a value indicating whether the current permission is unrestricted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]},{"pos":[12900,12990],"content":"An unrestricted permission represents access to all resources protected by the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"An unrestricted permission represents access to all resources protected by the permission.","pos":[0,90]}]},{"pos":[13122,13300],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is unrestricted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13795,13859],"content":"Creates an XML encoding of the permission and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]},{"pos":[14035,14098],"content":"An XML encoding of the permission, including state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the permission, including state information.","pos":[0,63]}]},{"pos":[14675,14769],"content":"Creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]},{"pos":[14781,14991],"content":"The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","pos":[0,210],"nodes":[{"content":"The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission.","pos":[0,149]},{"content":"Any demand that passes either permission passes their union.","pos":[150,210]}]}]},{"pos":[15195,15302],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[15374,15472],"content":"A new permission that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]},{"pos":[15649,15805],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.FileDialogPermission\n  id: FileDialogPermission\n  children:\n  - System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)\n  - System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.FileDialogPermission.Access\n  - System.Security.Permissions.FileDialogPermission.Copy\n  - System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.FileDialogPermission.IsUnrestricted\n  - System.Security.Permissions.FileDialogPermission.ToXml\n  - System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: FileDialogPermission\n  nameWithType: FileDialogPermission\n  fullName: System.Security.Permissions.FileDialogPermission\n  type: Class\n  summary: Controls the ability to access files or folders through a **File** dialog box. This class cannot be inherited.\n  remarks: This permission is typically used to provide limited access to user-specified files when <xref:System.Security.Permissions.FileIOPermission> is not granted.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class FileDialogPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)\n  id: '#ctor(System.Security.Permissions.FileDialogPermissionAccess)'\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: FileDialogPermission(FileDialogPermissionAccess)\n  nameWithType: FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)\n  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.FileDialogPermission\"></xref> class with the specified access.\n  syntax:\n    content: public FileDialogPermission (System.Security.Permissions.FileDialogPermissionAccess access);\n    parameters:\n    - id: access\n      type: System.Security.Permissions.FileDialogPermissionAccess\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values.\n  overload: System.Security.Permissions.FileDialogPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>access</code> parameter is not a valid combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values.\n  platform:\n  - net462\n- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: FileDialogPermission(PermissionState)\n  nameWithType: FileDialogPermission.FileDialogPermission(PermissionState)\n  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.FileDialogPermission\"></xref> class with either restricted or unrestricted permission, as specified.\n  remarks: Creates either fully restricted (`None`) or `Unrestricted` access to **File** dialog boxes.\n  syntax:\n    content: public FileDialogPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values (<xref uid=\"langword_csharp_Unrestricted\" name=\"Unrestricted\" href=\"\"></xref> or <xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"></xref>).\n  overload: System.Security.Permissions.FileDialogPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Permissions.FileDialogPermission.Access\n  id: Access\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: Access\n  nameWithType: FileDialogPermission.Access\n  fullName: System.Security.Permissions.FileDialogPermission.Access\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the permitted access to files.\n  syntax:\n    content: public System.Security.Permissions.FileDialogPermissionAccess Access { get; set; }\n    return:\n      type: System.Security.Permissions.FileDialogPermissionAccess\n      description: The permitted access to files.\n  overload: System.Security.Permissions.FileDialogPermission.Access*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt is made to set the <code>access</code> parameter to a value that is not a valid combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values.\n  platform:\n  - net462\n- uid: System.Security.Permissions.FileDialogPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: FileDialogPermission.Copy()\n  fullName: System.Security.Permissions.FileDialogPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of the permission represents the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.FileDialogPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: FileDialogPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.FileDialogPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: The XML encoding used to reconstruct the permission.\n  overload: System.Security.Permissions.FileDialogPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>esd</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>esd</code> parameter is not a valid permission element.  \\n  \\n -or-  \\n  \\n The version number of the <code>esd</code> parameter is not supported.\"\n  platform:\n  - net462\n- uid: System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: FileDialogPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.FileDialogPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Security.Permissions.FileDialogPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: FileDialogPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.FileDialogPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess> access is a subset of a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess> access.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.FileDialogPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: FileDialogPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.FileDialogPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: An unrestricted permission represents access to all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.FileDialogPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.FileDialogPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: FileDialogPermission.ToXml()\n  fullName: System.Security.Permissions.FileDialogPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including state information.\n  overload: System.Security.Permissions.FileDialogPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: FileDialogPermission.Union(IPermission)\n  fullName: System.Security.Permissions.FileDialogPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.FileDialogPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: FileDialogPermission(FileDialogPermissionAccess)\n  nameWithType: FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)\n  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)\n- uid: System.Security.Permissions.FileDialogPermissionAccess\n  parent: System.Security.Permissions\n  isExternal: false\n  name: FileDialogPermissionAccess\n  nameWithType: FileDialogPermissionAccess\n  fullName: System.Security.Permissions.FileDialogPermissionAccess\n- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: FileDialogPermission(PermissionState)\n  nameWithType: FileDialogPermission.FileDialogPermission(PermissionState)\n  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.FileDialogPermission.Access\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Access\n  nameWithType: FileDialogPermission.Access\n  fullName: System.Security.Permissions.FileDialogPermission.Access\n- uid: System.Security.Permissions.FileDialogPermission.Copy\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: FileDialogPermission.Copy()\n  fullName: System.Security.Permissions.FileDialogPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: FileDialogPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.FileDialogPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: FileDialogPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.FileDialogPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: FileDialogPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.FileDialogPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: FileDialogPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.FileDialogPermission.IsUnrestricted()\n- uid: System.Security.Permissions.FileDialogPermission.ToXml\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: FileDialogPermission.ToXml()\n  fullName: System.Security.Permissions.FileDialogPermission.ToXml()\n- uid: System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: FileDialogPermission.Union(IPermission)\n  fullName: System.Security.Permissions.FileDialogPermission.Union(IPermission)\n- uid: System.Security.Permissions.FileDialogPermission.#ctor*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: FileDialogPermission\n  nameWithType: FileDialogPermission.FileDialogPermission\n- uid: System.Security.Permissions.FileDialogPermission.Access*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Access\n  nameWithType: FileDialogPermission.Access\n- uid: System.Security.Permissions.FileDialogPermission.Copy*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Copy\n  nameWithType: FileDialogPermission.Copy\n- uid: System.Security.Permissions.FileDialogPermission.FromXml*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: FileDialogPermission.FromXml\n- uid: System.Security.Permissions.FileDialogPermission.Intersect*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: FileDialogPermission.Intersect\n- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: FileDialogPermission.IsSubsetOf\n- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: FileDialogPermission.IsUnrestricted\n- uid: System.Security.Permissions.FileDialogPermission.ToXml*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: FileDialogPermission.ToXml\n- uid: System.Security.Permissions.FileDialogPermission.Union*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Union\n  nameWithType: FileDialogPermission.Union\n"}