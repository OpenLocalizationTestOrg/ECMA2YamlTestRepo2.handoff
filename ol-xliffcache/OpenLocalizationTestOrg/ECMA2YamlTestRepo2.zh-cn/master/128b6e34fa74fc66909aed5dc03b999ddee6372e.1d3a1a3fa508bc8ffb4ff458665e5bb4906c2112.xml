{"nodes":[{"pos":[1197,1286],"content":"Controls the ability to access encrypted data and memory. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls the ability to access encrypted data and memory. This class cannot be inherited.","pos":[0,89],"nodes":[{"content":"Controls the ability to access encrypted data and memory.","pos":[0,57]},{"content":"This class cannot be inherited.","pos":[58,89]}]}]},{"pos":[1298,1496],"content":"This permission is used to control the ability to encrypt data and memory using the <xref:System.Security.Cryptography.ProtectedData> and <xref:System.Security.Cryptography.ProtectedMemory> classes.","needQuote":true,"needEscape":true,"nodes":[{"content":"This permission is used to control the ability to encrypt data and memory using the &lt;xref:System.Security.Cryptography.ProtectedData&gt; and &lt;xref:System.Security.Cryptography.ProtectedMemory&gt; classes.","pos":[0,198],"source":"This permission is used to control the ability to encrypt data and memory using the <xref:System.Security.Cryptography.ProtectedData> and <xref:System.Security.Cryptography.ProtectedMemory> classes."}]},{"pos":[3090,3240],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified permission flags.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> class with the specified permission flags."},{"pos":[4117,4232],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values."},{"pos":[4413,4552],"content":"<ph id=\"ph1\">&lt;code&gt;flags&lt;/code&gt;</ph> is not a valid combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"<code>flags</code> is not a valid combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values."},{"pos":[5175,5325],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified permission state.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> class with the specified permission state."},{"pos":[5337,5422],"content":"Creates either <ph id=\"ph1\">`None`</ph> (fully restricted) or <ph id=\"ph2\">`Unrestricted`</ph> access to data and memory.","needQuote":true,"needEscape":true,"source":"Creates either `None` (fully restricted) or `Unrestricted` access to data and memory."},{"pos":[6259,6342],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[6523,6628],"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value."},{"pos":[7047,7111],"content":"Creates and returns an identical copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]},{"pos":[7123,7215],"content":"A copy of the permission represents the same access to resources as the original permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the permission represents the same access to resources as the original permission.","pos":[0,92]}]},{"pos":[8230,8263],"content":"A copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]},{"pos":[8771,8821],"content":"Gets or sets the data and memory protection flags.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the data and memory protection flags.","pos":[0,50]}]},{"pos":[8833,9036],"content":"This property specifies whether the <ph id=\"ph1\">`Protect`</ph> and <ph id=\"ph2\">`Unprotect`</ph> methods of the &lt;xref:System.Security.Cryptography.ProtectedData&gt; and &lt;xref:System.Security.Cryptography.ProtectedMemory&gt; classes can be used.","needQuote":true,"needEscape":true,"source":"This property specifies whether the `Protect` and `Unprotect` methods of the <xref:System.Security.Cryptography.ProtectedData> and <xref:System.Security.Cryptography.ProtectedMemory> classes can be used."},{"pos":[9857,9972],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values."},{"pos":[10153,10293],"content":"The specified value is not a valid combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The specified value is not a valid combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values."},{"pos":[10838,10907],"content":"Reconstructs a permission with a specific state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a permission with a specific state from an XML encoding.","pos":[0,69]}]},{"pos":[10919,11293],"content":"The FromXml method reconstructs a <xref:System.Security.Permissions.DataProtectionPermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.DataProtectionPermission>, including state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The FromXml method reconstructs a <xref:System.Security.Permissions.DataProtectionPermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.DataProtectionPermission>, including state information.","pos":[0,374],"nodes":[{"content":"The FromXml method reconstructs a &lt;xref:System.Security.Permissions.DataProtectionPermission&gt; object from an XML encoding defined by the &lt;xref:System.Security.SecurityElement&gt; class.","pos":[0,182],"source":"The FromXml method reconstructs a <xref:System.Security.Permissions.DataProtectionPermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class."},{"content":"Use the &lt;xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A&gt; method to XML-encode the &lt;xref:System.Security.Permissions.DataProtectionPermission&gt;, including state information.","pos":[183,374],"source":" Use the <xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.DataProtectionPermission>, including state information."}]}]},{"pos":[12347,12468],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the XML encoding used to reconstruct the permission.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding used to reconstruct the permission."},{"pos":[12659,12752],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12848,13001],"content":"<code>securityElement</code> is not a valid permission element.       -or-       The version number of <code>securityElement</code> is not supported.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is not a valid permission element.","pos":[0,63],"source":"<code>securityElement</code> is not a valid permission element."},{"content":"-or-       The version number of <ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is not supported.","pos":[70,149],"source":"       -or-       The version number of <code>securityElement</code> is not supported."}]},{"pos":[13537,13650],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]},{"pos":[13662,13862],"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both individual permissions will pass the intersection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both individual permissions will pass the intersection.","pos":[0,200],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common.","pos":[0,118]},{"content":"Only a demand that passes both individual permissions will pass the intersection.","pos":[119,200]}]}]},{"pos":[14674,14780],"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","pos":[0,106],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be the same type as the current permission.","pos":[55,106]}]}]},{"pos":[14852,15071],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[106,219],"source":" This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[15256,15421],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and does not specify a permission of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and does not specify a permission of the same type as the current permission."},{"pos":[15961,16043],"content":"Determines whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]},{"pos":[16055,16435],"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained in the specified permission.  For example, a permission for <xref:System.Security.Permissions.DataProtectionPermissionFlags> access is a subset of a permission for <xref:System.Security.Permissions.DataProtectionPermissionFlags> access.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained in the specified permission.  For example, a permission for <xref:System.Security.Permissions.DataProtectionPermissionFlags> access is a subset of a permission for <xref:System.Security.Permissions.DataProtectionPermissionFlags> access.","pos":[0,380],"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained in the specified permission.","pos":[0,172]},{"content":"For example, a permission for &lt;xref:System.Security.Permissions.DataProtectionPermissionFlags&gt; access is a subset of a permission for &lt;xref:System.Security.Permissions.DataProtectionPermissionFlags&gt; access.","pos":[174,380],"source":"  For example, a permission for <xref:System.Security.Permissions.DataProtectionPermissionFlags> access is a subset of a permission for <xref:System.Security.Permissions.DataProtectionPermissionFlags> access."}]}]},{"pos":[17469,17583],"content":"A permission to test for the subset relationship. This permission must be the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to test for the subset relationship. This permission must be the same type as the current permission.","pos":[0,114],"nodes":[{"content":"A permission to test for the subset relationship.","pos":[0,49]},{"content":"This permission must be the same type as the current permission.","pos":[50,114]}]}]},{"pos":[17642,17844],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18030,18195],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and does not specify a permission of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and does not specify a permission of the same type as the current permission."},{"pos":[18664,18738],"content":"Returns a value indicating whether the current permission is unrestricted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]},{"pos":[18750,18840],"content":"An unrestricted permission represents access to all resources protected by the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"An unrestricted permission represents access to all resources protected by the permission.","pos":[0,90]}]},{"pos":[19587,19765],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is unrestricted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20287,20351],"content":"Creates an XML encoding of the permission and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]},{"pos":[20363,20528],"content":"Use the <xref:System.Security.Permissions.DataProtectionPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.Security.Permissions.DataProtectionPermission.FromXml%2A&gt; method to restore the state information from a &lt;xref:System.Security.SecurityElement&gt;.","pos":[0,165],"source":"Use the <xref:System.Security.Permissions.DataProtectionPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>."}]},{"pos":[21553,21616],"content":"An XML encoding of the permission, including state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the permission, including state information.","pos":[0,63]}]},{"pos":[22220,22314],"content":"Creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]},{"pos":[22326,22536],"content":"The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","pos":[0,210],"nodes":[{"content":"The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission.","pos":[0,149]},{"content":"Any demand that passes either permission passes their union.","pos":[150,210]}]}]},{"pos":[23583,23690],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[23762,23860],"content":"A new permission that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]},{"pos":[24041,24206],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and does not specify a permission of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and does not specify a permission of the same type as the current permission."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.DataProtectionPermission\n  id: DataProtectionPermission\n  children:\n  - System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)\n  - System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.DataProtectionPermission.Copy\n  - System.Security.Permissions.DataProtectionPermission.Flags\n  - System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.DataProtectionPermission.IsUnrestricted\n  - System.Security.Permissions.DataProtectionPermission.ToXml\n  - System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: DataProtectionPermission\n  nameWithType: DataProtectionPermission\n  fullName: System.Security.Permissions.DataProtectionPermission\n  type: Class\n  summary: Controls the ability to access encrypted data and memory. This class cannot be inherited.\n  remarks: This permission is used to control the ability to encrypt data and memory using the <xref:System.Security.Cryptography.ProtectedData> and <xref:System.Security.Cryptography.ProtectedMemory> classes.\n  syntax:\n    content: 'public sealed class DataProtectionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)\n  id: '#ctor(System.Security.Permissions.DataProtectionPermissionFlags)'\n  parent: System.Security.Permissions.DataProtectionPermission\n  langs:\n  - csharp\n  name: DataProtectionPermission(DataProtectionPermissionFlags)\n  nameWithType: DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)\n  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> class with the specified permission flags.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of the DataProtectionPermission constructor. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \\n  \\n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/cpp/a7af2eef-8910-4637-aff8-_1.cpp)]\\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/csharp/a7af2eef-8910-4637-aff8-_1.cs)]\\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/visualbasic/a7af2eef-8910-4637-aff8-_1.vb)]\"\n  syntax:\n    content: public DataProtectionPermission (System.Security.Permissions.DataProtectionPermissionFlags flag);\n    parameters:\n    - id: flag\n      type: System.Security.Permissions.DataProtectionPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.DataProtectionPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>flags</code> is not a valid combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values.\n  platform:\n  - net462\n- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.DataProtectionPermission\n  langs:\n  - csharp\n  name: DataProtectionPermission(PermissionState)\n  nameWithType: DataProtectionPermission.DataProtectionPermission(PermissionState)\n  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> class with the specified permission state.\n  remarks: Creates either `None` (fully restricted) or `Unrestricted` access to data and memory.\n  example:\n  - \"The following code example shows the use of the DataProtectionPermission constructor. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \\n  \\n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/cpp/0fcdac9b-6e0b-490f-9cfa-_1.cpp)]\\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/csharp/0fcdac9b-6e0b-490f-9cfa-_1.cs)]\\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/visualbasic/0fcdac9b-6e0b-490f-9cfa-_1.vb)]\"\n  syntax:\n    content: public DataProtectionPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.Permissions.DataProtectionPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.\n  platform:\n  - net462\n- uid: System.Security.Permissions.DataProtectionPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.DataProtectionPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: DataProtectionPermission.Copy()\n  fullName: System.Security.Permissions.DataProtectionPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of the permission represents the same access to resources as the original permission.\n  example:\n  - \"The following code example shows the use of the Copy method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/cpp/m-system.security.permis_7_1.cpp)]\\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/csharp/m-system.security.permis_7_1.cs)]\\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/visualbasic/m-system.security.permis_7_1.vb)]\"\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.DataProtectionPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.DataProtectionPermission.Flags\n  id: Flags\n  parent: System.Security.Permissions.DataProtectionPermission\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: DataProtectionPermission.Flags\n  fullName: System.Security.Permissions.DataProtectionPermission.Flags\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Gets or sets the data and memory protection flags.\n  remarks: This property specifies whether the `Protect` and `Unprotect` methods of the <xref:System.Security.Cryptography.ProtectedData> and <xref:System.Security.Cryptography.ProtectedMemory> classes can be used.\n  example:\n  - \"The following code example shows the use of the Flags property. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \\n  \\n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/cpp/p-system.security.permis_11_1.cpp)]\\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/csharp/p-system.security.permis_11_1.cs)]\\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/visualbasic/p-system.security.permis_11_1.vb)]\"\n  syntax:\n    content: public System.Security.Permissions.DataProtectionPermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.DataProtectionPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.DataProtectionPermission.Flags*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified value is not a valid combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values.\n  platform:\n  - net462\n- uid: System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.DataProtectionPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: DataProtectionPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.DataProtectionPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specific state from an XML encoding.\n  remarks: The FromXml method reconstructs a <xref:System.Security.Permissions.DataProtectionPermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.DataProtectionPermission>, including state information.\n  example:\n  - \"The following code example shows the use of the FromXml method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/cpp/600f1736-4257-4de6-bfa2-_1.cpp)]\\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/csharp/600f1736-4257-4de6-bfa2-_1.cs)]\\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/visualbasic/600f1736-4257-4de6-bfa2-_1.vb)]\"\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding used to reconstruct the permission.\n  overload: System.Security.Permissions.DataProtectionPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>securityElement</code> is not a valid permission element.  \\n  \\n -or-  \\n  \\n The version number of <code>securityElement</code> is not supported.\"\n  platform:\n  - net462\n- uid: System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.DataProtectionPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: DataProtectionPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.DataProtectionPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both individual permissions will pass the intersection.\n  example:\n  - \"The following code example shows the use of the Intersect method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \\n  \\n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/cpp/28e519e8-73a0-40f3-bd6c-_1.cpp)]\\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/csharp/28e519e8-73a0-40f3-bd6c-_1.cs)]\\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/visualbasic/28e519e8-73a0-40f3-bd6c-_1.vb)]\"\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Security.Permissions.DataProtectionPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and does not specify a permission of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.DataProtectionPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: DataProtectionPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained in the specified permission.  For example, a permission for <xref:System.Security.Permissions.DataProtectionPermissionFlags> access is a subset of a permission for <xref:System.Security.Permissions.DataProtectionPermissionFlags> access.\n  example:\n  - \"The following code example shows the use of the IsSubsetOf method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/cpp/f5f850fa-1969-4642-a180-_1.cpp)]\\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/csharp/f5f850fa-1969-4642-a180-_1.cs)]\\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/visualbasic/f5f850fa-1969-4642-a180-_1.vb)]\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to test for the subset relationship. This permission must be the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.DataProtectionPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and does not specify a permission of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.DataProtectionPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: DataProtectionPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.DataProtectionPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: An unrestricted permission represents access to all resources protected by the permission.\n  example:\n  - \"The following code example shows the use of the IsUnrestricted method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \\n  \\n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/cpp/m-system.security.permis_28_1.cpp)]\\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/csharp/m-system.security.permis_28_1.cs)]\\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/visualbasic/m-system.security.permis_28_1.vb)]\"\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.DataProtectionPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.DataProtectionPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.DataProtectionPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: DataProtectionPermission.ToXml()\n  fullName: System.Security.Permissions.DataProtectionPermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  remarks: Use the <xref:System.Security.Permissions.DataProtectionPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.\n  example:\n  - \"The following code example shows the use of the ToXml method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/cpp/m-system.security.permis_9_1.cpp)]\\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/csharp/m-system.security.permis_9_1.cs)]\\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/visualbasic/m-system.security.permis_9_1.vb)]\"\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including state information.\n  overload: System.Security.Permissions.DataProtectionPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.DataProtectionPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: DataProtectionPermission.Union(IPermission)\n  fullName: System.Security.Permissions.DataProtectionPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.\n  example:\n  - \"The following code example shows the use of the Union method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/cpp/67e342ee-9a58-40b8-a0ec-_1.cpp)]\\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/csharp/67e342ee-9a58-40b8-a0ec-_1.cs)]\\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/visualbasic/67e342ee-9a58-40b8-a0ec-_1.vb)]\"\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.DataProtectionPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and does not specify a permission of the same type as the current permission.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: DataProtectionPermission(DataProtectionPermissionFlags)\n  nameWithType: DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)\n  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)\n- uid: System.Security.Permissions.DataProtectionPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: DataProtectionPermissionFlags\n  nameWithType: DataProtectionPermissionFlags\n  fullName: System.Security.Permissions.DataProtectionPermissionFlags\n- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: DataProtectionPermission(PermissionState)\n  nameWithType: DataProtectionPermission.DataProtectionPermission(PermissionState)\n  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.DataProtectionPermission.Copy\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: DataProtectionPermission.Copy()\n  fullName: System.Security.Permissions.DataProtectionPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.DataProtectionPermission.Flags\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: Flags\n  nameWithType: DataProtectionPermission.Flags\n  fullName: System.Security.Permissions.DataProtectionPermission.Flags\n- uid: System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: DataProtectionPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.DataProtectionPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: DataProtectionPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.DataProtectionPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: DataProtectionPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: DataProtectionPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.DataProtectionPermission.IsUnrestricted()\n- uid: System.Security.Permissions.DataProtectionPermission.ToXml\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: DataProtectionPermission.ToXml()\n  fullName: System.Security.Permissions.DataProtectionPermission.ToXml()\n- uid: System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: DataProtectionPermission.Union(IPermission)\n  fullName: System.Security.Permissions.DataProtectionPermission.Union(IPermission)\n- uid: System.Security.Permissions.DataProtectionPermission.#ctor*\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: DataProtectionPermission\n  nameWithType: DataProtectionPermission.DataProtectionPermission\n- uid: System.Security.Permissions.DataProtectionPermission.Copy*\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: Copy\n  nameWithType: DataProtectionPermission.Copy\n- uid: System.Security.Permissions.DataProtectionPermission.Flags*\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: Flags\n  nameWithType: DataProtectionPermission.Flags\n- uid: System.Security.Permissions.DataProtectionPermission.FromXml*\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: DataProtectionPermission.FromXml\n- uid: System.Security.Permissions.DataProtectionPermission.Intersect*\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: DataProtectionPermission.Intersect\n- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf*\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: DataProtectionPermission.IsSubsetOf\n- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted*\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: DataProtectionPermission.IsUnrestricted\n- uid: System.Security.Permissions.DataProtectionPermission.ToXml*\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: DataProtectionPermission.ToXml\n- uid: System.Security.Permissions.DataProtectionPermission.Union*\n  parent: System.Security.Permissions.DataProtectionPermission\n  isExternal: false\n  name: Union\n  nameWithType: DataProtectionPermission.Union\n"}