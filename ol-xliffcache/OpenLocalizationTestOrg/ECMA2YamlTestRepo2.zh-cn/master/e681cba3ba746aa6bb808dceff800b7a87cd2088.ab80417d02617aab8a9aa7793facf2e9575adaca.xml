{"nodes":[{"pos":[834,953],"content":"Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.","pos":[0,119]}]},{"pos":[965,1207],"content":"The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time. Typically, this data differs from what was available on the development computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The properties exposed by the <ph id=\"ph1\">`My.Computer.Info`</ph> object return information about the computer from which the application is deployed, as determined at run time.","pos":[0,160],"source":"The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time."},{"content":"Typically, this data differs from what was available on the development computer.","pos":[161,242]}]},{"pos":[2160,2264],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.Devices.ComputerInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.ComputerInfo\"></xref> class."},{"pos":[2885,2948],"content":"Gets the total amount of free physical memory for the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the total amount of free physical memory for the computer.","pos":[0,63]}]},{"pos":[2960,3123],"content":"The <ph id=\"ph1\">`My.Computer.Info.AvailablePhysicalMemory`</ph> property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.","needQuote":true,"needEscape":true,"source":"The `My.Computer.Info.AvailablePhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista."},{"pos":[3534,3671],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the number of bytes of free physical memory for the computer.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"></xref> containing the number of bytes of free physical memory for the computer."},{"pos":[3884,3932],"content":"The application cannot obtain the memory status.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application cannot obtain the memory status.","pos":[0,48]}]},{"pos":[4403,4470],"content":"Gets the total amount of the computer's free virtual address space.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the total amount of the computer's free virtual address space.","pos":[0,67]}]},{"pos":[4482,4644],"content":"The <ph id=\"ph1\">`My.Computer.Info.AvailableVirtualMemory`</ph> property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.","needQuote":true,"needEscape":true,"source":"The `My.Computer.Info.AvailableVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista."},{"pos":[5052,5193],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the number of bytes of the computer's free virtual address space.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"></xref> containing the number of bytes of the computer's free virtual address space."},{"pos":[5405,5453],"content":"The application cannot obtain the memory status.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application cannot obtain the memory status.","pos":[0,48]}]},{"pos":[5904,5968],"content":"Gets the current UI culture installed with the operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current UI culture installed with the operating system.","pos":[0,64]}]},{"pos":[5981,6276],"content":"The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property.       In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Info.InstalledUICulture`</ph> property has the same behavior as the &lt;xref:System.Globalization.CultureInfo.InstalledUICulture%2A&gt; property.","pos":[0,151],"source":"The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property."},{"content":"In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.","pos":[158,293]}]},{"pos":[6690,6791],"content":"A <xref:System.Globalization.CultureInfo> object represents the UI culture installed on the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; object represents the UI culture installed on the computer.","pos":[0,101],"source":"A <xref:System.Globalization.CultureInfo> object represents the UI culture installed on the computer."}]},{"pos":[7294,7330],"content":"Gets the full operating system name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the full operating system name.","pos":[0,36]}]},{"pos":[7342,7649],"content":"This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer. Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer.","pos":[0,148]},{"content":"Otherwise, this property returns the same string as the <ph id=\"ph1\">`My.Computer.Info.OSPlatform`</ph> property, which provides less detailed information than WMI can provide.","pos":[149,307],"source":" Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide."}]},{"pos":[7999,8103],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the operating-system name.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> containing the operating-system name."},{"pos":[8297,8339],"content":"The calling code does not have full trust.","needQuote":true,"needEscape":true,"nodes":[{"content":"The calling code does not have full trust.","pos":[0,42]}]},{"pos":[8750,8820],"content":"Gets the platform identifier for the operating system of the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the platform identifier for the operating system of the computer.","pos":[0,70]}]},{"pos":[8832,9042],"content":"The <ph id=\"ph1\">`My.Computer.Info.OSPlatform`</ph> property provides functionality similar to the &lt;xref:System.OperatingSystem.Platform%2A&gt; property of the object returned by the &lt;xref:System.Environment.OSVersion%2A&gt; property.","needQuote":true,"needEscape":true,"source":"The `My.Computer.Info.OSPlatform` property provides functionality similar to the <xref:System.OperatingSystem.Platform%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property."},{"pos":[9396,9627],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the platform identifier for the operating system of the computer, chosen from the member names of the <bpt id=\"p2\">&lt;xref href=\"System.PlatformID\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> containing the platform identifier for the operating system of the computer, chosen from the member names of the <xref href=\"System.PlatformID\"></xref> enumeration."},{"pos":[9817,9889],"content":"The application cannot obtain the operating-system platform information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application cannot obtain the operating-system platform information.","pos":[0,72]}]},{"pos":[10295,10347],"content":"Gets the version of the computer's operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the version of the computer's operating system.","pos":[0,52]}]},{"pos":[10360,10673],"content":"The `My.Computer.Info.OSVersion` property formats the version as \"major.minor.build.revision\".       The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Info.OSVersion`</ph> property formats the version as \"major.minor.build.revision\".","pos":[0,94],"source":"The `My.Computer.Info.OSVersion` property formats the version as \"major.minor.build.revision\"."},{"content":"The <ph id=\"ph1\">`My.Computer.Info.OSVersion`</ph> property provides functionality similar to the &lt;xref:System.OperatingSystem.Version%2A&gt; property of the object returned by the &lt;xref:System.Environment.OSVersion%2A&gt; property.","pos":[101,309],"source":"       The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property."}]},{"pos":[11025,11154],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the current version number of the operating system.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> containing the current version number of the operating system."},{"pos":[11343,11414],"content":"The application cannot obtain the operating-system version information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application cannot obtain the operating-system version information.","pos":[0,71]}]},{"pos":[11870,11928],"content":"Gets the total amount of physical memory for the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the total amount of physical memory for the computer.","pos":[0,58]}]},{"pos":[11940,12100],"content":"The <ph id=\"ph1\">`My.Computer.Info.TotalPhysicalMemory`</ph> property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..","needQuote":true,"needEscape":true,"source":"The `My.Computer.Info.TotalPhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.."},{"pos":[12499,12631],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the number of bytes of physical memory for the computer.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"></xref> containing the number of bytes of physical memory for the computer."},{"pos":[12840,12888],"content":"The application cannot obtain the memory status.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application cannot obtain the memory status.","pos":[0,48]}]},{"pos":[13339,13413],"content":"Gets the total amount of virtual address space available for the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the total amount of virtual address space available for the computer.","pos":[0,74]}]},{"pos":[13425,13584],"content":"The <ph id=\"ph1\">`My.Computer.Info.TotalVirtualMemory`</ph> property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..","needQuote":true,"needEscape":true,"source":"The `My.Computer.Info.TotalVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.."},{"pos":[13980,14128],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the number of bytes of virtual address space available for the computer.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"></xref> containing the number of bytes of virtual address space available for the computer."},{"pos":[14336,14384],"content":"The application cannot obtain the memory status.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application cannot obtain the memory status.","pos":[0,48]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo\n  id: ComputerInfo\n  children:\n  - Microsoft.VisualBasic.Devices.ComputerInfo.#ctor\n  - Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory\n  - Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory\n  - Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture\n  - Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName\n  - Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform\n  - Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion\n  - Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory\n  - Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory\n  langs:\n  - csharp\n  name: ComputerInfo\n  nameWithType: ComputerInfo\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo\n  type: Class\n  summary: Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.\n  remarks: The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time. Typically, this data differs from what was available on the development computer.\n  example:\n  - \"This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.  \\n  \\n [!code-vb[VbVbalrMyComputer#2](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Devices.ComputerInfo/ComputerInfoDebugView))]\n\n      public class ComputerInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: ComputerInfo()\n  nameWithType: ComputerInfo.ComputerInfo()\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.ComputerInfo()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.ComputerInfo\"></xref> class.\n  syntax:\n    content: public ComputerInfo ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory\n  id: AvailablePhysicalMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: AvailablePhysicalMemory\n  nameWithType: ComputerInfo.AvailablePhysicalMemory\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the total amount of free physical memory for the computer.\n  remarks: The `My.Computer.Info.AvailablePhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.\n  example:\n  - \"This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.  \\n  \\n [!code-vb[VbVbalrMyComputer#2](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#2)]\"\n  syntax:\n    content: public ulong AvailablePhysicalMemory { get; }\n    return:\n      type: System.UInt64\n      description: A <xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"></xref> containing the number of bytes of free physical memory for the computer.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The application cannot obtain the memory status.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory\n  id: AvailableVirtualMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: AvailableVirtualMemory\n  nameWithType: ComputerInfo.AvailableVirtualMemory\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the total amount of the computer's free virtual address space.\n  remarks: The `My.Computer.Info.AvailableVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.\n  example:\n  - \"This example uses the `My.Computer.Info.AvailableVirtualMemory` property to display the amount of available virtual memory for the computer on which the code runs.  \\n  \\n [!code-vb[VbVbalrMyComputer#3](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#3)]\"\n  syntax:\n    content: public ulong AvailableVirtualMemory { get; }\n    return:\n      type: System.UInt64\n      description: A <xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"></xref> containing the number of bytes of the computer's free virtual address space.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The application cannot obtain the memory status.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture\n  id: InstalledUICulture\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: InstalledUICulture\n  nameWithType: ComputerInfo.InstalledUICulture\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the current UI culture installed with the operating system.\n  remarks: \"The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property.  \\n  \\n In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.\"\n  example:\n  - \"This example uses the `My.Computer.Info.InstalledUICulture` property to display the name of the operating system's UI culture.  \\n  \\n [!code-vb[VbVbalrMyComputer#4](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#4)]\"\n  syntax:\n    content: public System.Globalization.CultureInfo InstalledUICulture { get; }\n    return:\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo> object represents the UI culture installed on the computer.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName\n  id: OSFullName\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: OSFullName\n  nameWithType: ComputerInfo.OSFullName\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the full operating system name.\n  remarks: This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer. Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide.\n  example:\n  - \"This example uses the `My.Computer.Info.OSFullName` property to display the name of the computer's operating system.  \\n  \\n [!code-vb[VbVbalrMyComputer#5](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#5)]\"\n  syntax:\n    content: public string OSFullName { get; }\n    return:\n      type: System.String\n      description: A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> containing the operating-system name.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The calling code does not have full trust.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform\n  id: OSPlatform\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: OSPlatform\n  nameWithType: ComputerInfo.OSPlatform\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the platform identifier for the operating system of the computer.\n  remarks: The `My.Computer.Info.OSPlatform` property provides functionality similar to the <xref:System.OperatingSystem.Platform%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.\n  example:\n  - \"This example uses the `My.Computer.Info.OSPlatform` property to display the platform of the computer's operating system.  \\n  \\n [!code-vb[VbVbalrMyComputer#6](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#6)]\"\n  syntax:\n    content: public string OSPlatform { get; }\n    return:\n      type: System.String\n      description: A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> containing the platform identifier for the operating system of the computer, chosen from the member names of the <xref href=\"System.PlatformID\"></xref> enumeration.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform*\n  exceptions:\n  - type: System.ExecutionEngineException\n    commentId: T:System.ExecutionEngineException\n    description: The application cannot obtain the operating-system platform information.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion\n  id: OSVersion\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: OSVersion\n  nameWithType: ComputerInfo.OSVersion\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the version of the computer's operating system.\n  remarks: \"The `My.Computer.Info.OSVersion` property formats the version as \\\"major.minor.build.revision\\\".  \\n  \\n The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.\"\n  example:\n  - \"This example uses the `My.Computer.Info.OSVersion` property to display the version of the computer's operating system.  \\n  \\n [!code-vb[VbVbalrMyComputer#7](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#7)]\"\n  syntax:\n    content: public string OSVersion { get; }\n    return:\n      type: System.String\n      description: A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> containing the current version number of the operating system.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion*\n  exceptions:\n  - type: System.ExecutionEngineException\n    commentId: T:System.ExecutionEngineException\n    description: The application cannot obtain the operating-system version information.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory\n  id: TotalPhysicalMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: TotalPhysicalMemory\n  nameWithType: ComputerInfo.TotalPhysicalMemory\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the total amount of physical memory for the computer.\n  remarks: The `My.Computer.Info.TotalPhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..\n  example:\n  - \"This example uses the `My.Computer.Info.TotalPhysicalMemory` property to display the total amount of physical memory for the computer on which the code runs.  \\n  \\n [!code-vb[VbVbalrMyComputer#8](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#8)]\"\n  syntax:\n    content: public ulong TotalPhysicalMemory { get; }\n    return:\n      type: System.UInt64\n      description: A <xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"></xref> containing the number of bytes of physical memory for the computer.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The application cannot obtain the memory status.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory\n  id: TotalVirtualMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: TotalVirtualMemory\n  nameWithType: ComputerInfo.TotalVirtualMemory\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the total amount of virtual address space available for the computer.\n  remarks: The `My.Computer.Info.TotalVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..\n  example:\n  - \"This example uses the `My.Computer.Info.TotalVirtualMemory` property to display the total amount of virtual memory for the computer on which the code runs.  \\n  \\n [!code-vb[VbVbalrMyComputer#9](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#9)]\"\n  syntax:\n    content: public ulong TotalVirtualMemory { get; }\n    return:\n      type: System.UInt64\n      description: A <xref uid=\"langword_csharp_ULong\" name=\"ULong\" href=\"\"></xref> containing the number of bytes of virtual address space available for the computer.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The application cannot obtain the memory status.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ComponentModel.Win32Exception\n  parent: System.ComponentModel\n  isExternal: false\n  name: Win32Exception\n  nameWithType: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.ExecutionEngineException\n  parent: System\n  isExternal: false\n  name: ExecutionEngineException\n  nameWithType: ExecutionEngineException\n  fullName: System.ExecutionEngineException\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: ComputerInfo()\n  nameWithType: ComputerInfo.ComputerInfo()\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.ComputerInfo()\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: AvailablePhysicalMemory\n  nameWithType: ComputerInfo.AvailablePhysicalMemory\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory\n- uid: System.UInt64\n  parent: System\n  isExternal: true\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: AvailableVirtualMemory\n  nameWithType: ComputerInfo.AvailableVirtualMemory\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: InstalledUICulture\n  nameWithType: ComputerInfo.InstalledUICulture\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSFullName\n  nameWithType: ComputerInfo.OSFullName\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSPlatform\n  nameWithType: ComputerInfo.OSPlatform\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSVersion\n  nameWithType: ComputerInfo.OSVersion\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: TotalPhysicalMemory\n  nameWithType: ComputerInfo.TotalPhysicalMemory\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: TotalVirtualMemory\n  nameWithType: ComputerInfo.TotalVirtualMemory\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: ComputerInfo\n  nameWithType: ComputerInfo.ComputerInfo\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: AvailablePhysicalMemory\n  nameWithType: ComputerInfo.AvailablePhysicalMemory\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: AvailableVirtualMemory\n  nameWithType: ComputerInfo.AvailableVirtualMemory\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: InstalledUICulture\n  nameWithType: ComputerInfo.InstalledUICulture\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSFullName\n  nameWithType: ComputerInfo.OSFullName\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSPlatform\n  nameWithType: ComputerInfo.OSPlatform\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSVersion\n  nameWithType: ComputerInfo.OSVersion\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: TotalPhysicalMemory\n  nameWithType: ComputerInfo.TotalPhysicalMemory\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: TotalVirtualMemory\n  nameWithType: ComputerInfo.TotalVirtualMemory\n"}