{"nodes":[{"pos":[1192,1278],"content":"The WebBrowserPermission object controls the ability to create the WebBrowser control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The WebBrowserPermission object controls the ability to create the WebBrowser control.","pos":[0,86]}]},{"pos":[1291,1544],"content":"In the Windows Presentation Foundation (WPF), the Web browser control enables frames to navigate HTML. This permission uses the values of the WebBrowserPermission enumerations.      ## XAML Attribute Usage    This class is not typically used in XAML.","needQuote":false,"needEscape":true,"nodes":[{"content":"In the Windows Presentation Foundation (WPF), the Web browser control enables frames to navigate HTML. This permission uses the values of the WebBrowserPermission enumerations.      ## XAML Attribute Usage    This class is not typically used in XAML.","pos":[0,250],"nodes":[{"content":"In the Windows Presentation Foundation (WPF), the Web browser control enables frames to navigate HTML.","pos":[0,102]},{"content":"This permission uses the values of the WebBrowserPermission enumerations.","pos":[103,176]},{"content":"XAML Attribute Usage    This class is not typically used in XAML.","pos":[185,250]}]}]},{"pos":[2898,3008],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class."},{"pos":[3020,3194],"content":"By default, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel>.","needQuote":true,"needEscape":true,"nodes":[{"content":"By default, the value of the &lt;xref:System.Security.Permissions.WebBrowserPermission.Level%2A&gt; property is set to &lt;xref:System.Security.Permissions.WebBrowserPermissionLevel&gt;.","pos":[0,174],"source":"By default, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel>."}]},{"pos":[3944,4087],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying a permission state.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class by specifying a permission state."},{"pos":[4099,4570],"content":"If `state` is set to <xref:System.Security.Permissions.PermissionState>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel>. If `state` is set to <xref:System.Security.Permissions.PermissionState>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <ph id=\"ph1\">`state`</ph> is set to &lt;xref:System.Security.Permissions.PermissionState&gt;, the value of the &lt;xref:System.Security.Permissions.WebBrowserPermission.Level%2A&gt; property is set to &lt;xref:System.Security.Permissions.WebBrowserPermissionLevel&gt;.","pos":[0,235],"source":"If `state` is set to <xref:System.Security.Permissions.PermissionState>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel>."},{"content":"If <ph id=\"ph1\">`state`</ph> is set to &lt;xref:System.Security.Permissions.PermissionState&gt;, the value of the &lt;xref:System.Security.Permissions.WebBrowserPermission.Level%2A&gt; property is set to &lt;xref:System.Security.Permissions.WebBrowserPermissionLevel&gt;.","pos":[236,471],"source":" If `state` is set to <xref:System.Security.Permissions.PermissionState>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel>."}]},{"pos":[5300,5388],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."},{"pos":[6114,6271],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying the Web browser permission level.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class by specifying the Web browser permission level."},{"pos":[7085,7183],"content":"An enumerated value of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermissionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerated value of <xref href=\"System.Security.Permissions.WebBrowserPermissionLevel\"></xref>."},{"pos":[7667,7731],"content":"Creates and returns an identical copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]},{"pos":[7744,7957],"content":"A copy of a permission represents the same access to resources as the original permission.      ## XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","needQuote":false,"needEscape":true,"nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.      ## XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[0,210],"nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.","pos":[0,90]},{"content":"XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[99,210]}]}]},{"pos":[8125,8158],"content":"A copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]},{"pos":[8767,8837],"content":"Reconstructs a permission with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]},{"pos":[8850,8965],"content":"## XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","needQuote":false,"needEscape":true,"nodes":[{"content":"XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[3,114]}]},{"pos":[9175,9229],"content":"The XML encoding to use to reconstruct the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the permission.","pos":[0,54]}]},{"pos":[9831,9944],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]},{"pos":[9957,10072],"content":"## XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","needQuote":false,"needEscape":true,"nodes":[{"content":"XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[3,114]}]},{"pos":[10281,10390],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]},{"pos":[10462,10671],"content":"The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.","pos":[0,209],"nodes":[{"content":"The intersection of two permissions is a permission that describes the state that they both describe in common.","pos":[0,111]},{"content":"Only a demand that passes both original permissions will be valid for the intersected permission.","pos":[112,209]}]}]},{"pos":[11280,11362],"content":"Determines whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]},{"pos":[12137,12267],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]},{"pos":[12326,12528],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13067,13141],"content":"Returns a value indicating whether the current permission is unrestricted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]},{"pos":[13154,13375],"content":"An unrestricted permission represents access to any and all resources protected by the permission.      ## XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","needQuote":false,"needEscape":true,"nodes":[{"content":"An unrestricted permission represents access to any and all resources protected by the permission.      ## XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[0,218],"nodes":[{"content":"An unrestricted permission represents access to any and all resources protected by the permission.","pos":[0,98]},{"content":"XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[107,218]}]}]},{"pos":[13927,14227],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Security.Permissions.WebBrowserPermission.Level*&gt; property is set to <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermissionLevel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Security.Permissions.WebBrowserPermission.Level*> property is set to <xref href=\"System.Security.Permissions.WebBrowserPermissionLevel\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14721,14788],"content":"Gets or sets the current value of the Web browser permission level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the current value of the Web browser permission level.","pos":[0,67]}]},{"pos":[14801,15038],"content":"<ph id=\"ph1\">##</ph> XAML Attribute Usage    Members of this class are either not typically used in <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, or cannot be used in <ph id=\"ph3\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","needQuote":false,"needEscape":true,"source":"## XAML Attribute Usage    Members of this class are either not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], or cannot be used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."},{"pos":[15774,15828],"content":"The current value of the Web browser permission level.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the Web browser permission level.","pos":[0,54]}]},{"pos":[16317,16381],"content":"Creates an XML encoding of the permission and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]},{"pos":[16394,16509],"content":"## XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","needQuote":false,"needEscape":true,"nodes":[{"content":"XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[3,114]}]},{"pos":[16686,16753],"content":"An XML encoding of the permission, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]},{"pos":[17333,17427],"content":"Creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]},{"pos":[17440,17555],"content":"## XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","needQuote":false,"needEscape":true,"nodes":[{"content":"XAML Attribute Usage    Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[3,114]}]},{"pos":[17760,17867],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[17939,18037],"content":"A new permission that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.WebBrowserPermission\n  id: WebBrowserPermission\n  children:\n  - System.Security.Permissions.WebBrowserPermission.#ctor\n  - System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)\n  - System.Security.Permissions.WebBrowserPermission.Copy\n  - System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.WebBrowserPermission.IsUnrestricted\n  - System.Security.Permissions.WebBrowserPermission.Level\n  - System.Security.Permissions.WebBrowserPermission.ToXml\n  - System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: WebBrowserPermission\n  nameWithType: WebBrowserPermission\n  fullName: System.Security.Permissions.WebBrowserPermission\n  type: Class\n  summary: The WebBrowserPermission object controls the ability to create the WebBrowser control.\n  remarks: \"In the Windows Presentation Foundation (WPF), the Web browser control enables frames to navigate HTML. This permission uses the values of the WebBrowserPermission enumerations.  \\n  \\n## XAML Attribute Usage  \\n This class is not typically used in XAML.\"\n  syntax:\n    content: 'public sealed class WebBrowserPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor\n  id: '#ctor'\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: WebBrowserPermission()\n  nameWithType: WebBrowserPermission.WebBrowserPermission()\n  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class.\n  remarks: By default, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel>.\n  syntax:\n    content: public WebBrowserPermission ();\n    parameters: []\n  overload: System.Security.Permissions.WebBrowserPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: WebBrowserPermission(PermissionState)\n  nameWithType: WebBrowserPermission.WebBrowserPermission(PermissionState)\n  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class by specifying a permission state.\n  remarks: If `state` is set to <xref:System.Security.Permissions.PermissionState>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel>. If `state` is set to <xref:System.Security.Permissions.PermissionState>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel>.\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.WebBrowserPermission> with a <xref:System.Security.Permissions.PermissionState> value.  \\n  \\n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission1](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission1)]\\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission1](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission1)]\"\n  syntax:\n    content: public WebBrowserPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: An enumerated value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  overload: System.Security.Permissions.WebBrowserPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)\n  id: '#ctor(System.Security.Permissions.WebBrowserPermissionLevel)'\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: WebBrowserPermission(WebBrowserPermissionLevel)\n  nameWithType: WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)\n  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class by specifying the Web browser permission level.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.WebBrowserPermission> with a <xref:System.Security.Permissions.WebBrowserPermissionLevel> value.  \\n  \\n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission2](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission2)]\\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission2](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission2)]\"\n  syntax:\n    content: public WebBrowserPermission (System.Security.Permissions.WebBrowserPermissionLevel webBrowserPermissionLevel);\n    parameters:\n    - id: webBrowserPermissionLevel\n      type: System.Security.Permissions.WebBrowserPermissionLevel\n      description: An enumerated value of <xref href=\"System.Security.Permissions.WebBrowserPermissionLevel\"></xref>.\n  overload: System.Security.Permissions.WebBrowserPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: WebBrowserPermission.Copy()\n  fullName: System.Security.Permissions.WebBrowserPermission.Copy()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: \"A copy of a permission represents the same access to resources as the original permission.  \\n  \\n## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.WebBrowserPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: WebBrowserPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.WebBrowserPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  remarks: \"## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the permission.\n  overload: System.Security.Permissions.WebBrowserPermission.FromXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: WebBrowserPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.WebBrowserPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: \"## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.\n  overload: System.Security.Permissions.WebBrowserPermission.Intersect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: WebBrowserPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: \"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\\\example.txt is a subset of a permission that represents access to C:\\\\\\\\.  \\n  \\n If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.  \\n  \\n## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.WebBrowserPermission.IsSubsetOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: WebBrowserPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.WebBrowserPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: \"An unrestricted permission represents access to any and all resources protected by the permission.  \\n  \\n## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  example:\n  - \"The following code example shows how to use the IsUnrestricted method.  \\n  \\n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission5](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission5)]\\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission5](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission5)]\"\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Security.Permissions.WebBrowserPermission.Level*> property is set to <xref href=\"System.Security.Permissions.WebBrowserPermissionLevel\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.WebBrowserPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.Level\n  id: Level\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: Level\n  nameWithType: WebBrowserPermission.Level\n  fullName: System.Security.Permissions.WebBrowserPermission.Level\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Gets or sets the current value of the Web browser permission level.\n  remarks: \"## XAML Attribute Usage  \\n Members of this class are either not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], or cannot be used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].\"\n  example:\n  - \"The following code example shows how to retrieve the <xref:System.Security.Permissions.WebBrowserPermissionLevel> value for the <xref:System.Security.Permissions.WebBrowserPermission>.  \\n  \\n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission6](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission6)]\\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission6](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission6)]\"\n  syntax:\n    content: public System.Security.Permissions.WebBrowserPermissionLevel Level { get; set; }\n    return:\n      type: System.Security.Permissions.WebBrowserPermissionLevel\n      description: The current value of the Web browser permission level.\n  overload: System.Security.Permissions.WebBrowserPermission.Level*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: WebBrowserPermission.ToXml()\n  fullName: System.Security.Permissions.WebBrowserPermission.ToXml()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  remarks: \"## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.WebBrowserPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: WebBrowserPermission.Union(IPermission)\n  fullName: System.Security.Permissions.WebBrowserPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: \"## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.WebBrowserPermission.Union*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: WebBrowserPermission()\n  nameWithType: WebBrowserPermission.WebBrowserPermission()\n  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission()\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: WebBrowserPermission(PermissionState)\n  nameWithType: WebBrowserPermission.WebBrowserPermission(PermissionState)\n  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: WebBrowserPermission(WebBrowserPermissionLevel)\n  nameWithType: WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)\n  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)\n- uid: System.Security.Permissions.WebBrowserPermissionLevel\n  parent: System.Security.Permissions\n  isExternal: false\n  name: WebBrowserPermissionLevel\n  nameWithType: WebBrowserPermissionLevel\n  fullName: System.Security.Permissions.WebBrowserPermissionLevel\n- uid: System.Security.Permissions.WebBrowserPermission.Copy\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: WebBrowserPermission.Copy()\n  fullName: System.Security.Permissions.WebBrowserPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: WebBrowserPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.WebBrowserPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: WebBrowserPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.WebBrowserPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: WebBrowserPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: WebBrowserPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.WebBrowserPermission.IsUnrestricted()\n- uid: System.Security.Permissions.WebBrowserPermission.Level\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Level\n  nameWithType: WebBrowserPermission.Level\n  fullName: System.Security.Permissions.WebBrowserPermission.Level\n- uid: System.Security.Permissions.WebBrowserPermission.ToXml\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: WebBrowserPermission.ToXml()\n  fullName: System.Security.Permissions.WebBrowserPermission.ToXml()\n- uid: System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: WebBrowserPermission.Union(IPermission)\n  fullName: System.Security.Permissions.WebBrowserPermission.Union(IPermission)\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: WebBrowserPermission\n  nameWithType: WebBrowserPermission.WebBrowserPermission\n- uid: System.Security.Permissions.WebBrowserPermission.Copy*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Copy\n  nameWithType: WebBrowserPermission.Copy\n- uid: System.Security.Permissions.WebBrowserPermission.FromXml*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: WebBrowserPermission.FromXml\n- uid: System.Security.Permissions.WebBrowserPermission.Intersect*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: WebBrowserPermission.Intersect\n- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: WebBrowserPermission.IsSubsetOf\n- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: WebBrowserPermission.IsUnrestricted\n- uid: System.Security.Permissions.WebBrowserPermission.Level*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Level\n  nameWithType: WebBrowserPermission.Level\n- uid: System.Security.Permissions.WebBrowserPermission.ToXml*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: WebBrowserPermission.ToXml\n- uid: System.Security.Permissions.WebBrowserPermission.Union*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Union\n  nameWithType: WebBrowserPermission.Union\n"}