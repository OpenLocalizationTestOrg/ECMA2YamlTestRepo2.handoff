{"nodes":[{"pos":[2580,2662],"content":"Represents a performance object, which defines a category of performance counters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a performance object, which defines a category of performance counters.","pos":[0,82]}]},{"pos":[9607,9919],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, leaves the &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName<bpt id=\"p2\">*</bpt>&gt; property empty, and sets the &lt;xref:System.Diagnostics.PerformanceCounterCategory.MachineName<ept id=\"p2\">*</ept>&gt; property to the local computer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> class, leaves the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property empty, and sets the <xref:System.Diagnostics.PerformanceCounterCategory.MachineName*> property to the local computer."},{"pos":[9931,10186],"content":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property must be set before associating this <xref:System.Diagnostics.PerformanceCounterCategory> instance with a performance object on the server. Otherwise, an exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property must be set before associating this <xref:System.Diagnostics.PerformanceCounterCategory> instance with a performance object on the server. Otherwise, an exception is thrown.","pos":[0,255],"nodes":[{"content":"The &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A&gt; property must be set before associating this &lt;xref:System.Diagnostics.PerformanceCounterCategory&gt; instance with a performance object on the server.","pos":[0,220],"source":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property must be set before associating this <xref:System.Diagnostics.PerformanceCounterCategory> instance with a performance object on the server."},{"content":"Otherwise, an exception is thrown.","pos":[221,255]}]}]},{"pos":[11464,11791],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, sets the &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName<bpt id=\"p2\">*</bpt>&gt; property to the specified value, and sets the &lt;xref:System.Diagnostics.PerformanceCounterCategory.MachineName<ept id=\"p2\">*</ept>&gt; property to the local computer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> class, sets the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property to the specified value, and sets the <xref:System.Diagnostics.PerformanceCounterCategory.MachineName*> property to the local computer."},{"pos":[12590,12764],"content":"The name of the performance counter category, or performance object, with which to associate this <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The name of the performance counter category, or performance object, with which to associate this <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> instance."},{"pos":[12938,12992],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The <code>categoryName</code> is an empty string (\"\")."},{"pos":[13095,13189],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13743,14035],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and sets the &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Diagnostics.PerformanceCounterCategory.MachineName<ept id=\"p2\">*</ept>&gt; properties to the specified values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> class and sets the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> and <xref:System.Diagnostics.PerformanceCounterCategory.MachineName*> properties to the specified values."},{"pos":[14848,15022],"content":"The name of the performance counter category, or performance object, with which to associate this <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The name of the performance counter category, or performance object, with which to associate this <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> instance."},{"pos":[15090,15179],"content":"The computer on which the performance counter category and its associated counters exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"The computer on which the performance counter category and its associated counters exist.","pos":[0,89]}]},{"pos":[15354,15479],"content":"The <code>categoryName</code> is an empty string (\"\").       -or-       The <code>machineName</code> syntax is invalid.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an empty string (\"\").","pos":[0,54],"source":"The <code>categoryName</code> is an empty string (\"\")."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">machineName</ph><ept id=\"p1\">&lt;/code&gt;</ept> syntax is invalid.","pos":[61,119],"source":"       -or-       The <code>machineName</code> syntax is invalid."}]},{"pos":[15583,15677],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16095,16125],"content":"Gets the category's help text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the category's help text.","pos":[0,30]}]},{"pos":[17318,17386],"content":"A description of the performance object that this category measures.","needQuote":true,"needEscape":true,"nodes":[{"content":"A description of the performance object that this category measures.","pos":[0,68]}]},{"pos":[17583,17791],"content":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. The category name must be set before getting the category help.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,144],"source":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"The category name must be set before getting the category help.","pos":[145,208]}]},{"pos":[17910,17952],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[18370,18445],"content":"Gets or sets the name of the performance object that defines this category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the performance object that defines this category.","pos":[0,75]}]},{"pos":[19587,19761],"content":"The name of the performance counter category, or performance object, with which to associate this <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The name of the performance counter category, or performance object, with which to associate this <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> instance."},{"pos":[19942,19983],"content":"The CategoryName is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The CategoryName is an empty string (\"\").","pos":[0,41]}]},{"pos":[20086,20167],"content":"The CategoryName is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The CategoryName is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20585,20628],"content":"Gets the performance counter category type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the performance counter category type.","pos":[0,43]}]},{"pos":[20641,21646],"content":"The CategoryType property indicates whether the <xref:System.Diagnostics.PerformanceCounterCategory> object can have multiple instances. The possible values are <xref:System.Diagnostics.PerformanceCounterCategoryType>, <xref:System.Diagnostics.PerformanceCounterCategoryType>, or <xref:System.Diagnostics.PerformanceCounterCategoryType>.       There are two types of performance counter categories: single-instance and multi-instance. By default, a category is single-instance when it is created and becomes multi-instance when another instance is added. Categories are created when an application is set up, and instances are added at run time. In the .NET Framework versions 1.0 and 1.1, it is not necessary to know if a performance counter category is multi-instance or single-instance. In the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], the <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeration is used to indicate whether a performance counter can have multiple instances.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CategoryType property indicates whether the &lt;xref:System.Diagnostics.PerformanceCounterCategory&gt; object can have multiple instances.","pos":[0,136],"source":"The CategoryType property indicates whether the <xref:System.Diagnostics.PerformanceCounterCategory> object can have multiple instances."},{"content":"The possible values are &lt;xref:System.Diagnostics.PerformanceCounterCategoryType&gt;, &lt;xref:System.Diagnostics.PerformanceCounterCategoryType&gt;, or &lt;xref:System.Diagnostics.PerformanceCounterCategoryType&gt;.","pos":[137,337],"source":" The possible values are <xref:System.Diagnostics.PerformanceCounterCategoryType>, <xref:System.Diagnostics.PerformanceCounterCategoryType>, or <xref:System.Diagnostics.PerformanceCounterCategoryType>."},{"content":"There are two types of performance counter categories: single-instance and multi-instance.","pos":[344,434]},{"content":"By default, a category is single-instance when it is created and becomes multi-instance when another instance is added.","pos":[435,554]},{"content":"Categories are created when an application is set up, and instances are added at run time.","pos":[555,645]},{"content":"In the .NET Framework versions 1.0 and 1.1, it is not necessary to know if a performance counter category is multi-instance or single-instance.","pos":[646,789]},{"content":"In the <ph id=\"ph1\">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph>, the &lt;xref:System.Diagnostics.PerformanceCounterCategoryType&gt; enumeration is used to indicate whether a performance counter can have multiple instances.","pos":[790,1003],"source":" In the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], the <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeration is used to indicate whether a performance counter can have multiple instances."}]},{"pos":[21843,21932],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref> values."},{"pos":[22496,22743],"content":"Determines whether the specified counter is registered to this category, which is indicated by the &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Diagnostics.PerformanceCounterCategory.MachineName<ept id=\"p1\">*</ept>&gt; properties.","needQuote":true,"needEscape":true,"source":"Determines whether the specified counter is registered to this category, which is indicated by the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> and <xref:System.Diagnostics.PerformanceCounterCategory.MachineName*> properties."},{"pos":[22756,24068],"content":"You must set the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property before calling this method. Otherwise, an exception is thrown.       If you have not set the <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> property, this method uses the local computer (\".\").      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"You must set the &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A&gt; property before calling this method.","pos":[0,122],"source":"You must set the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property before calling this method."},{"content":"Otherwise, an exception is thrown.","pos":[123,157]},{"content":"If you have not set the &lt;xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A&gt; property, this method uses the local computer (\".\").","pos":[164,308],"source":"       If you have not set the <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> property, this method uses the local computer (\".\")."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[314,546],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[549,711],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[714,813],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[814,980]},{"content":"By default, you are in the standard user role.","pos":[981,1027]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[1028,1159]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[1160,1301]}]},{"pos":[25026,25074],"content":"The name of the performance counter to look for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the performance counter to look for.","pos":[0,48]}]},{"pos":[25133,25487],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the counter is registered to the category that is specified by the &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Diagnostics.PerformanceCounterCategory.MachineName<ept id=\"p2\">*</ept>&gt; properties; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the counter is registered to the category that is specified by the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> and <xref:System.Diagnostics.PerformanceCounterCategory.MachineName*> properties; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25677,25770],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">counterName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>counterName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[25881,25978],"content":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property has not been set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*&gt; property has not been set.","pos":[0,97],"source":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property has not been set."}]},{"pos":[26097,26139],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[26254,26351],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[26875,26978],"content":"Determines whether the specified counter is registered to the specified category on the local computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified counter is registered to the specified category on the local computer.","pos":[0,103]}]},{"pos":[26991,27983],"content":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[0,232],"source":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[235,397],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[400,499],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[500,666]},{"content":"By default, you are in the standard user role.","pos":[667,713]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[714,845]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[846,987]}]},{"pos":[28994,29042],"content":"The name of the performance counter to look for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the performance counter to look for.","pos":[0,48]}]},{"pos":[29111,29239],"content":"The name of the performance counter category, or performance object, with which the specified performance counter is associated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the performance counter category, or performance object, with which the specified performance counter is associated.","pos":[0,128]}]},{"pos":[29298,29512],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the counter is registered to the specified category on the local computer; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the counter is registered to the specified category on the local computer; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29703,29924],"content":"The <code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <code>counterName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,94],"source":"The <code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">counterName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[101,205],"source":"       -or-       The <code>counterName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[30020,30074],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The <code>categoryName</code> is an empty string (\"\")."},{"pos":[30185,30218],"content":"The category name does not exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"The category name does not exist.","pos":[0,33]}]},{"pos":[30337,30379],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[30494,30591],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[31164,31266],"content":"Determines whether the specified counter is registered to the specified category on a remote computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified counter is registered to the specified category on a remote computer.","pos":[0,102]}]},{"pos":[31279,32271],"content":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[0,232],"source":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[235,397],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[400,499],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[500,666]},{"content":"By default, you are in the standard user role.","pos":[667,713]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[714,845]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[846,987]}]},{"pos":[33302,33350],"content":"The name of the performance counter to look for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the performance counter to look for.","pos":[0,48]}]},{"pos":[33419,33547],"content":"The name of the performance counter category, or performance object, with which the specified performance counter is associated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the performance counter category, or performance object, with which the specified performance counter is associated.","pos":[0,128]}]},{"pos":[33615,33716],"content":"The name of the computer on which the performance counter category and its associated counters exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the computer on which the performance counter category and its associated counters exist.","pos":[0,101]}]},{"pos":[33775,33993],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the counter is registered to the specified category on the specified computer; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the counter is registered to the specified category on the specified computer; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34184,34405],"content":"The <code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <code>counterName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,94],"source":"The <code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">counterName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[101,205],"source":"       -or-       The <code>counterName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[34502,34620],"content":"The <code>categoryName</code> is an empty string (\"\").       -or-       The <code>machineName</code> is invalid.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an empty string (\"\").","pos":[0,54],"source":"The <code>categoryName</code> is an empty string (\"\")."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">machineName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is invalid.","pos":[61,112],"source":"       -or-       The <code>machineName</code> is invalid."}]},{"pos":[34732,34765],"content":"The category name does not exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"The category name does not exist.","pos":[0,33]}]},{"pos":[34884,34926],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[35041,35138],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[35815,35921],"content":"Registers the custom performance counter category containing the specified counters on the local computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers the custom performance counter category containing the specified counters on the local computer.","pos":[0,106]}]},{"pos":[35934,36926],"content":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[0,232],"source":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[235,397],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[400,499],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[500,666]},{"content":"By default, you are in the standard user role.","pos":[667,713]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[714,845]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[846,987]}]},{"pos":[37829,37920],"content":"The name of the custom performance counter category to create and register with the system.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the custom performance counter category to create and register with the system.","pos":[0,91]}]},{"pos":[37989,38026],"content":"A description of the custom category.","needQuote":true,"needEscape":true,"nodes":[{"content":"A description of the custom category.","pos":[0,37]}]},{"pos":[38129,38267],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.CounterCreationDataCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the counters to create as part of the new category.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.CounterCreationDataCollection\"></xref> that specifies the counters to create as part of the new category."},{"pos":[38357,38497],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with the new custom category, or performance object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> that is associated with the new custom category, or performance object."},{"pos":[39237,39341],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[39453,40868],"content":"The category already exists on the local computer.       -or-       The layout of the <code>counterData</code> collection is incorrect for base counters. A counter of type <xref uid=\"langword_csharp_AverageCount64\" name=\"AverageCount64\" href=\"\"></xref>, <xref uid=\"langword_csharp_AverageTimer32\" name=\"AverageTimer32\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer\" name=\"CounterMultiTimer\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimerInverse\" name=\"CounterMultiTimerInverse\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer100Ns\" name=\"CounterMultiTimer100Ns\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer100NsInverse\" name=\"CounterMultiTimer100NsInverse\" href=\"\"></xref>, <xref uid=\"langword_csharp_RawFraction\" name=\"RawFraction\" href=\"\"></xref>, <xref uid=\"langword_csharp_SampleFraction\" name=\"SampleFraction\" href=\"\"></xref> or <xref uid=\"langword_csharp_SampleCounter\" name=\"SampleCounter\" href=\"\"></xref> has to be immediately followed by one of the base counter types (<xref uid=\"langword_csharp_AverageBase\" name=\"AverageBase\" href=\"\"></xref>, <xref uid=\"langword_csharp_MultiBase\" name=\"MultiBase\" href=\"\"></xref>, <xref uid=\"langword_csharp_RawBase\" name=\"RawBase\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SampleBase\" name=\"SampleBase\" href=\"\"></xref>).","needQuote":false,"needEscape":true,"nodes":[{"content":"The category already exists on the local computer.","pos":[0,50]},{"content":"-or-       The layout of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">counterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> collection is incorrect for base counters.","pos":[57,153],"source":"       -or-       The layout of the <code>counterData</code> collection is incorrect for base counters."},{"content":"A counter of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_AverageCount64\" name=\"AverageCount64\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_AverageTimer32\" name=\"AverageTimer32\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_CounterMultiTimer\" name=\"CounterMultiTimer\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_CounterMultiTimerInverse\" name=\"CounterMultiTimerInverse\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_CounterMultiTimer100Ns\" name=\"CounterMultiTimer100Ns\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>, <bpt id=\"p6\">&lt;xref uid=\"langword_csharp_CounterMultiTimer100NsInverse\" name=\"CounterMultiTimer100NsInverse\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>, <bpt id=\"p7\">&lt;xref uid=\"langword_csharp_RawFraction\" name=\"RawFraction\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept>, <bpt id=\"p8\">&lt;xref uid=\"langword_csharp_SampleFraction\" name=\"SampleFraction\" href=\"\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept> or <bpt id=\"p9\">&lt;xref uid=\"langword_csharp_SampleCounter\" name=\"SampleCounter\" href=\"\"&gt;</bpt><ept id=\"p9\">&lt;/xref&gt;</ept> has to be immediately followed by one of the base counter types (<bpt id=\"p10\">&lt;xref uid=\"langword_csharp_AverageBase\" name=\"AverageBase\" href=\"\"&gt;</bpt><ept id=\"p10\">&lt;/xref&gt;</ept>, <bpt id=\"p11\">&lt;xref uid=\"langword_csharp_MultiBase\" name=\"MultiBase\" href=\"\"&gt;</bpt><ept id=\"p11\">&lt;/xref&gt;</ept>, <bpt id=\"p12\">&lt;xref uid=\"langword_csharp_RawBase\" name=\"RawBase\" href=\"\"&gt;</bpt><ept id=\"p12\">&lt;/xref&gt;</ept>, or <bpt id=\"p13\">&lt;xref uid=\"langword_csharp_SampleBase\" name=\"SampleBase\" href=\"\"&gt;</bpt><ept id=\"p13\">&lt;/xref&gt;</ept>).","pos":[154,1333],"source":" A counter of type <xref uid=\"langword_csharp_AverageCount64\" name=\"AverageCount64\" href=\"\"></xref>, <xref uid=\"langword_csharp_AverageTimer32\" name=\"AverageTimer32\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer\" name=\"CounterMultiTimer\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimerInverse\" name=\"CounterMultiTimerInverse\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer100Ns\" name=\"CounterMultiTimer100Ns\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer100NsInverse\" name=\"CounterMultiTimer100NsInverse\" href=\"\"></xref>, <xref uid=\"langword_csharp_RawFraction\" name=\"RawFraction\" href=\"\"></xref>, <xref uid=\"langword_csharp_SampleFraction\" name=\"SampleFraction\" href=\"\"></xref> or <xref uid=\"langword_csharp_SampleCounter\" name=\"SampleCounter\" href=\"\"></xref> has to be immediately followed by one of the base counter types (<xref uid=\"langword_csharp_AverageBase\" name=\"AverageBase\" href=\"\"></xref>, <xref uid=\"langword_csharp_MultiBase\" name=\"MultiBase\" href=\"\"></xref>, <xref uid=\"langword_csharp_RawBase\" name=\"RawBase\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SampleBase\" name=\"SampleBase\" href=\"\"></xref>)."}]},{"pos":[40988,41030],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[41145,41242],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[42112,42218],"content":"Registers the custom performance counter category containing the specified counters on the local computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Registers the custom performance counter category containing the specified counters on the local computer.","pos":[0,106]}]},{"pos":[45966,46057],"content":"The name of the custom performance counter category to create and register with the system.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the custom performance counter category to create and register with the system.","pos":[0,91]}]},{"pos":[46126,46163],"content":"A description of the custom category.","needQuote":true,"needEscape":true,"nodes":[{"content":"A description of the custom category.","pos":[0,37]}]},{"pos":[46268,46357],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref> values."},{"pos":[46460,46598],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.CounterCreationDataCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the counters to create as part of the new category.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.CounterCreationDataCollection\"></xref> that specifies the counters to create as part of the new category."},{"pos":[46688,46828],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with the new custom category, or performance object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> that is associated with the new custom category, or performance object."},{"pos":[47555,47768],"content":"<code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>counterData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;categoryName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,90],"source":"<code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;counterData&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,197],"source":"       -or-       <code>counterData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[47885,48198],"content":"<ph id=\"ph1\">&lt;code&gt;categoryType&lt;/code&gt;</ph> value is outside of the range of the following values: <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MultiInstance\" name=\"MultiInstance\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_SingleInstance\" name=\"SingleInstance\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Unknown\" name=\"Unknown\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":false,"needEscape":true,"source":"<code>categoryType</code> value is outside of the range of the following values: <xref uid=\"langword_csharp_MultiInstance\" name=\"MultiInstance\" href=\"\"></xref>, <xref uid=\"langword_csharp_SingleInstance\" name=\"SingleInstance\" href=\"\"></xref>, or <xref uid=\"langword_csharp_Unknown\" name=\"Unknown\" href=\"\"></xref>."},{"pos":[48311,49725],"content":"The category already exists on the local computer.       -or-       The layout of the <code>counterData</code> collection is incorrect for base counters. A counter of type <xref uid=\"langword_csharp_AverageCount64\" name=\"AverageCount64\" href=\"\"></xref>, <xref uid=\"langword_csharp_AverageTimer32\" name=\"AverageTimer32\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer\" name=\"CounterMultiTimer\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimerInverse\" name=\"CounterMultiTimerInverse\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer100Ns\" name=\"CounterMultiTimer100Ns\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer100NsInverse\" name=\"CounterMultiTimer100NsInverse\" href=\"\"></xref>, <xref uid=\"langword_csharp_RawFraction\" name=\"RawFraction\" href=\"\"></xref>, <xref uid=\"langword_csharp_SampleFraction\" name=\"SampleFraction\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SampleCounter\" name=\"SampleCounter\" href=\"\"></xref> must be immediately followed by one of the base counter types (<xref uid=\"langword_csharp_AverageBase\" name=\"AverageBase\" href=\"\"></xref>, <xref uid=\"langword_csharp_MultiBase\" name=\"MultiBase\" href=\"\"></xref>, <xref uid=\"langword_csharp_RawBase\" name=\"RawBase\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SampleBase\" name=\"SampleBase\" href=\"\"></xref>).","needQuote":false,"needEscape":true,"nodes":[{"content":"The category already exists on the local computer.","pos":[0,50]},{"content":"-or-       The layout of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">counterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> collection is incorrect for base counters.","pos":[57,153],"source":"       -or-       The layout of the <code>counterData</code> collection is incorrect for base counters."},{"content":"A counter of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_AverageCount64\" name=\"AverageCount64\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_AverageTimer32\" name=\"AverageTimer32\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_CounterMultiTimer\" name=\"CounterMultiTimer\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_CounterMultiTimerInverse\" name=\"CounterMultiTimerInverse\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_CounterMultiTimer100Ns\" name=\"CounterMultiTimer100Ns\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>, <bpt id=\"p6\">&lt;xref uid=\"langword_csharp_CounterMultiTimer100NsInverse\" name=\"CounterMultiTimer100NsInverse\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>, <bpt id=\"p7\">&lt;xref uid=\"langword_csharp_RawFraction\" name=\"RawFraction\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept>, <bpt id=\"p8\">&lt;xref uid=\"langword_csharp_SampleFraction\" name=\"SampleFraction\" href=\"\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>, or <bpt id=\"p9\">&lt;xref uid=\"langword_csharp_SampleCounter\" name=\"SampleCounter\" href=\"\"&gt;</bpt><ept id=\"p9\">&lt;/xref&gt;</ept> must be immediately followed by one of the base counter types (<bpt id=\"p10\">&lt;xref uid=\"langword_csharp_AverageBase\" name=\"AverageBase\" href=\"\"&gt;</bpt><ept id=\"p10\">&lt;/xref&gt;</ept>, <bpt id=\"p11\">&lt;xref uid=\"langword_csharp_MultiBase\" name=\"MultiBase\" href=\"\"&gt;</bpt><ept id=\"p11\">&lt;/xref&gt;</ept>, <bpt id=\"p12\">&lt;xref uid=\"langword_csharp_RawBase\" name=\"RawBase\" href=\"\"&gt;</bpt><ept id=\"p12\">&lt;/xref&gt;</ept>, or <bpt id=\"p13\">&lt;xref uid=\"langword_csharp_SampleBase\" name=\"SampleBase\" href=\"\"&gt;</bpt><ept id=\"p13\">&lt;/xref&gt;</ept>).","pos":[154,1332],"source":" A counter of type <xref uid=\"langword_csharp_AverageCount64\" name=\"AverageCount64\" href=\"\"></xref>, <xref uid=\"langword_csharp_AverageTimer32\" name=\"AverageTimer32\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer\" name=\"CounterMultiTimer\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimerInverse\" name=\"CounterMultiTimerInverse\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer100Ns\" name=\"CounterMultiTimer100Ns\" href=\"\"></xref>, <xref uid=\"langword_csharp_CounterMultiTimer100NsInverse\" name=\"CounterMultiTimer100NsInverse\" href=\"\"></xref>, <xref uid=\"langword_csharp_RawFraction\" name=\"RawFraction\" href=\"\"></xref>, <xref uid=\"langword_csharp_SampleFraction\" name=\"SampleFraction\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SampleCounter\" name=\"SampleCounter\" href=\"\"></xref> must be immediately followed by one of the base counter types (<xref uid=\"langword_csharp_AverageBase\" name=\"AverageBase\" href=\"\"></xref>, <xref uid=\"langword_csharp_MultiBase\" name=\"MultiBase\" href=\"\"></xref>, <xref uid=\"langword_csharp_RawBase\" name=\"RawBase\" href=\"\"></xref>, or <xref uid=\"langword_csharp_SampleBase\" name=\"SampleBase\" href=\"\"></xref>)."}]},{"pos":[49845,49887],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[50002,50099],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[50686,50875],"content":"Registers a custom performance counter category containing a single counter of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_NumberOfItems32\" name=\"NumberOfItems32\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the local computer.","needQuote":true,"needEscape":true,"source":"Registers a custom performance counter category containing a single counter of type <xref uid=\"langword_csharp_NumberOfItems32\" name=\"NumberOfItems32\" href=\"\"></xref> on the local computer."},{"pos":[50888,51880],"content":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[0,232],"source":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[235,397],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[400,499],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[500,666]},{"content":"By default, you are in the standard user role.","pos":[667,713]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[714,845]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[846,987]}]},{"pos":[52626,52717],"content":"The name of the custom performance counter category to create and register with the system.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the custom performance counter category to create and register with the system.","pos":[0,91]}]},{"pos":[52786,52823],"content":"A description of the custom category.","needQuote":true,"needEscape":true,"nodes":[{"content":"A description of the custom category.","pos":[0,37]}]},{"pos":[52891,53048],"content":"The name of a new counter, of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_NumberOfItems32\" name=\"NumberOfItems32\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, to create as part of the new category.","needQuote":true,"needEscape":true,"source":"The name of a new counter, of type <xref uid=\"langword_csharp_NumberOfItems32\" name=\"NumberOfItems32\" href=\"\"></xref>, to create as part of the new category."},{"pos":[53116,53193],"content":"A description of the counter that is associated with the new custom category.","needQuote":true,"needEscape":true,"nodes":[{"content":"A description of the counter that is associated with the new custom category.","pos":[0,77]}]},{"pos":[53283,53423],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with the new system category, or performance object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> that is associated with the new system category, or performance object."},{"pos":[54088,54138],"content":"The category already exists on the local computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The category already exists on the local computer.","pos":[0,50]}]},{"pos":[54242,54455],"content":"<code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>counterHelp</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;categoryName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,90],"source":"<code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;counterHelp&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,197],"source":"       -or-       <code>counterHelp</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[54575,54617],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[54732,54829],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[55609,55780],"content":"Registers the custom performance counter category containing a single counter of type <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the local computer.","needQuote":true,"needEscape":true,"source":"Registers the custom performance counter category containing a single counter of type <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> on the local computer."},{"pos":[59469,59560],"content":"The name of the custom performance counter category to create and register with the system.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the custom performance counter category to create and register with the system.","pos":[0,91]}]},{"pos":[59629,59666],"content":"A description of the custom category.","needQuote":true,"needEscape":true,"nodes":[{"content":"A description of the custom category.","pos":[0,37]}]},{"pos":[59771,60113],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values specifying whether the category is <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, or <bpt id=\"p4\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref> values specifying whether the category is <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref>, <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref>, or <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref>."},{"pos":[60181,60245],"content":"The name of a new counter to create as part of the new category.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of a new counter to create as part of the new category.","pos":[0,64]}]},{"pos":[60313,60390],"content":"A description of the counter that is associated with the new custom category.","needQuote":true,"needEscape":true,"nodes":[{"content":"A description of the counter that is associated with the new custom category.","pos":[0,77]}]},{"pos":[60480,60620],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with the new system category, or performance object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> that is associated with the new system category, or performance object."},{"pos":[61285,61335],"content":"The category already exists on the local computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The category already exists on the local computer.","pos":[0,50]}]},{"pos":[61439,61652],"content":"<code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>counterHelp</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;categoryName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,90],"source":"<code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;counterHelp&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,197],"source":"       -or-       <code>counterHelp</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[61772,61814],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[61929,62026],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[62466,62539],"content":"Removes the category and its associated counters from the local computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the category and its associated counters from the local computer.","pos":[0,73]}]},{"pos":[62552,63854],"content":"You can delete only custom performance counter categories from the system. You cannot delete a counter from a category. To do so, delete the category and recreate the category with the counters you want to retain. To avoid an exception, confirm that the category exists before you attempt to delete it.      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can delete only custom performance counter categories from the system.","pos":[0,74]},{"content":"You cannot delete a counter from a category.","pos":[75,119]},{"content":"To do so, delete the category and recreate the category with the counters you want to retain.","pos":[120,213]},{"content":"To avoid an exception, confirm that the category exists before you attempt to delete it.","pos":[214,302]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[308,540],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[543,705],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[708,807],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[808,974]},{"content":"By default, you are in the standard user role.","pos":[975,1021]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[1022,1153]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[1154,1295]}]},{"pos":[64502,64564],"content":"The name of the custom performance counter category to delete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the custom performance counter category to delete.","pos":[0,62]}]},{"pos":[64747,64851],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[64946,65093],"content":"The <code>categoryName</code> parameter has invalid syntax. It might contain backslash characters (\"\\\") or have length greater than 80 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter has invalid syntax.","pos":[0,59],"source":"The <code>categoryName</code> parameter has invalid syntax."},{"content":"It might contain backslash characters (\"<ph id=\"ph1\">\\\"</ph>) or have length greater than 80 characters.","pos":[60,146],"source":" It might contain backslash characters (\"\\\") or have length greater than 80 characters."}]},{"pos":[65212,65254],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[65365,65432],"content":"The category cannot be deleted because it is not a custom category.","needQuote":true,"needEscape":true,"nodes":[{"content":"The category cannot be deleted because it is not a custom category.","pos":[0,67]}]},{"pos":[65547,65644],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[66084,66152],"content":"Determines whether the category is registered on the local computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the category is registered on the local computer.","pos":[0,68]}]},{"pos":[66165,67646],"content":"Use of the Exists method can result in a noticeable performance penalty while all performance counters on the machine are checked for availability. If you are only writing to a performance counter, you can avoid the global search for performance counters by creating the performance counter when the application is installed and assuming the category exists when accessing the counter. There is no way to avoid the performance counter search when reading from performance counters.      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use of the Exists method can result in a noticeable performance penalty while all performance counters on the machine are checked for availability.","pos":[0,147]},{"content":"If you are only writing to a performance counter, you can avoid the global search for performance counters by creating the performance counter when the application is installed and assuming the category exists when accessing the counter.","pos":[148,385]},{"content":"There is no way to avoid the performance counter search when reading from performance counters.","pos":[386,481]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[487,719],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[722,884],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[887,986],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[987,1153]},{"content":"By default, you are in the standard user role.","pos":[1154,1200]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[1201,1332]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[1333,1474]}]},{"pos":[68431,68488],"content":"The name of the performance counter category to look for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the performance counter category to look for.","pos":[0,57]}]},{"pos":[68547,68713],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the category is registered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the category is registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[68896,69000],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[69095,69159],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The <code>categoryName</code> parameter is an empty string (\"\")."},{"pos":[69278,69320],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[69435,69532],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[70021,70093],"content":"Determines whether the category is registered on the specified computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the category is registered on the specified computer.","pos":[0,72]}]},{"pos":[70106,71587],"content":"Use of the Exists method can result in a noticeable performance penalty while all performance counters on the machine are checked for availability. If you are only writing to a performance counter, you can avoid the global search for performance counters by creating the performance counter when the application is installed and assuming the category exists when accessing the counter. There is no way to avoid the performance counter search when reading from performance counters.      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use of the Exists method can result in a noticeable performance penalty while all performance counters on the machine are checked for availability.","pos":[0,147]},{"content":"If you are only writing to a performance counter, you can avoid the global search for performance counters by creating the performance counter when the application is installed and assuming the category exists when accessing the counter.","pos":[148,385]},{"content":"There is no way to avoid the performance counter search when reading from performance counters.","pos":[386,481]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[487,719],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[722,884],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[887,986],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[987,1153]},{"content":"By default, you are in the standard user role.","pos":[1154,1200]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[1201,1332]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[1333,1474]}]},{"pos":[72402,72459],"content":"The name of the performance counter category to look for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the performance counter category to look for.","pos":[0,57]}]},{"pos":[72527,72580],"content":"The name of the computer to examine for the category.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the computer to examine for the category.","pos":[0,53]}]},{"pos":[72639,72805],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the category is registered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the category is registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[72988,73092],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[73188,73326],"content":"The <code>categoryName</code> parameter is an empty string (\"\").       -or-       The <code>machineName</code> parameter is invalid.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an empty string (\"\").","pos":[0,64],"source":"The <code>categoryName</code> parameter is an empty string (\"\")."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">machineName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is invalid.","pos":[71,132],"source":"       -or-       The <code>machineName</code> parameter is invalid."}]},{"pos":[73446,73488],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[73577,73610],"content":"The network path cannot be found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The network path cannot be found.","pos":[0,33]}]},{"pos":[73726,73894],"content":"The caller does not have the required permission.       -or-       Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":false,"needEscape":true,"nodes":[{"content":"The caller does not have the required permission.       -or-       Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,164],"nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]},{"content":"-or-       Code that is executing without administrative privileges attempted to read a performance counter.","pos":[56,164]}]}]},{"pos":[74322,74419],"content":"Retrieves a list of the performance counter categories that are registered on the local computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a list of the performance counter categories that are registered on the local computer.","pos":[0,97]}]},{"pos":[74432,75424],"content":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[0,232],"source":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[235,397],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[400,499],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[500,666]},{"content":"By default, you are in the standard user role.","pos":[667,713]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[714,845]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[846,987]}]},{"pos":[76597,76752],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects indicating the categories that are registered on the local computer.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> objects indicating the categories that are registered on the local computer."},{"pos":[76958,77000],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[77115,77212],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[77687,77788],"content":"Retrieves a list of the performance counter categories that are registered on the specified computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a list of the performance counter categories that are registered on the specified computer.","pos":[0,101]}]},{"pos":[77801,78917],"content":"To retrieve the categories on the local computer, use another overload or pass \".\" as the `machineName` parameter.      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"To retrieve the categories on the local computer, use another overload or pass \".\" as the <ph id=\"ph1\">`machineName`</ph> parameter.","pos":[0,114],"source":"To retrieve the categories on the local computer, use another overload or pass \".\" as the `machineName` parameter."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[120,352],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[355,517],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[520,619],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[620,786]},{"content":"By default, you are in the standard user role.","pos":[787,833]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[834,965]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[966,1107]}]},{"pos":[80081,80105],"content":"The computer to look on.","needQuote":true,"needEscape":true,"nodes":[{"content":"The computer to look on.","pos":[0,24]}]},{"pos":[80197,80356],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects indicating the categories that are registered on the specified computer.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> objects indicating the categories that are registered on the specified computer."},{"pos":[80538,80588],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">machineName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is invalid.","needQuote":true,"needEscape":true,"source":"The <code>machineName</code> parameter is invalid."},{"pos":[80707,80749],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[80864,80961],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[81378,81480],"content":"Retrieves a list of the counters in a performance counter category that contains exactly one instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a list of the counters in a performance counter category that contains exactly one instance.","pos":[0,102]}]},{"pos":[81493,82618],"content":"For more information about performance object instances, see the <xref:System.Diagnostics.PerformanceCounter> class overview.      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"For more information about performance object instances, see the &lt;xref:System.Diagnostics.PerformanceCounter&gt; class overview.","pos":[0,125],"source":"For more information about performance object instances, see the <xref:System.Diagnostics.PerformanceCounter> class overview."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[131,363],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[366,528],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[531,630],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[631,797]},{"content":"By default, you are in the standard user role.","pos":[798,844]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[845,976]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[977,1118]}]},{"pos":[83942,84120],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects indicating the counters that are associated with this single-instance performance counter category.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Diagnostics.PerformanceCounter\"></xref> objects indicating the counters that are associated with this single-instance performance counter category."},{"pos":[84300,84338],"content":"The category is not a single instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The category is not a single instance.","pos":[0,38]}]},{"pos":[84457,84499],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[84610,84660],"content":"The category does not have an associated instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The category does not have an associated instance.","pos":[0,50]}]},{"pos":[84775,84872],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[85337,85440],"content":"Retrieves a list of the counters in a performance counter category that contains one or more instances.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a list of the counters in a performance counter category that contains one or more instances.","pos":[0,103]}]},{"pos":[85453,86689],"content":"To represent a single-instance category, pass an empty string (\"\") for the `instanceName` parameter.       For more information about performance object instances, see the <xref:System.Diagnostics.PerformanceCounter> class overview.      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"To represent a single-instance category, pass an empty string (\"\") for the <ph id=\"ph1\">`instanceName`</ph> parameter.","pos":[0,100],"source":"To represent a single-instance category, pass an empty string (\"\") for the `instanceName` parameter."},{"content":"For more information about performance object instances, see the &lt;xref:System.Diagnostics.PerformanceCounter&gt; class overview.","pos":[107,232],"source":"       For more information about performance object instances, see the <xref:System.Diagnostics.PerformanceCounter> class overview."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[238,470],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[473,635],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[638,737],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[738,904]},{"content":"By default, you are in the standard user role.","pos":[905,951]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[952,1083]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[1084,1225]}]},{"pos":[88019,88105],"content":"The performance object instance for which to retrieve the list of associated counters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The performance object instance for which to retrieve the list of associated counters.","pos":[0,86]}]},{"pos":[88189,88384],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects indicating the counters that are associated with the specified object instance of this performance counter category.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Diagnostics.PerformanceCounter\"></xref> objects indicating the counters that are associated with the specified object instance of this performance counter category."},{"pos":[88572,88676],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">instanceName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>instanceName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[88788,89098],"content":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property for this <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> instance has not been set.       -or-       The category does not contain the instance that is specified by the <code>instanceName</code> parameter.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*&gt; property for this <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance has not been set.","pos":[0,182],"source":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property for this <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> instance has not been set."},{"content":"-or-       The category does not contain the instance that is specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">instanceName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[189,304],"source":"       -or-       The category does not contain the instance that is specified by the <code>instanceName</code> parameter."}]},{"pos":[89218,89260],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[89375,89472],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[89914,90004],"content":"Retrieves the list of performance object instances that are associated with this category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the list of performance object instances that are associated with this category.","pos":[0,90]}]},{"pos":[90017,91009],"content":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[0,232],"source":"> [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[235,397],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[400,499],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[500,666]},{"content":"By default, you are in the standard user role.","pos":[667,713]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[714,845]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[846,987]}]},{"pos":[92014,92247],"content":"An array of strings representing the performance object instance names that are associated with this category or, if the category contains only one performance object instance, a single-entry array that contains an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of strings representing the performance object instance names that are associated with this category or, if the category contains only one performance object instance, a single-entry array that contains an empty string (\"\").","pos":[0,233]}]},{"pos":[92449,92709],"content":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. The property might not have been set.       -or-       The category does not have an associated instance.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,144],"source":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"The property might not have been set.","pos":[145,182]},{"content":"-or-       The category does not have an associated instance.","pos":[189,250]}]},{"pos":[92829,92871],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[92986,93083],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[93563,93826],"content":"Determines whether the specified performance object instance exists in the category that is identified by this <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterCategory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object's &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*&gt; property.","needQuote":true,"needEscape":true,"source":"Determines whether the specified performance object instance exists in the category that is identified by this <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> object's <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property."},{"pos":[93839,95069],"content":"This overload of InstanceExists is not `static`. It requires you to create a <xref:System.Diagnostics.PerformanceCounterCategory> object and to set the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property.      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"This overload of InstanceExists is not <ph id=\"ph1\">`static`</ph>.","pos":[0,48],"source":"This overload of InstanceExists is not `static`."},{"content":"It requires you to create a &lt;xref:System.Diagnostics.PerformanceCounterCategory&gt; object and to set the &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A&gt; property.","pos":[49,230],"source":" It requires you to create a <xref:System.Diagnostics.PerformanceCounterCategory> object and to set the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[236,468],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[471,633],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[636,735],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[736,902]},{"content":"By default, you are in the standard user role.","pos":[903,949]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[950,1081]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[1082,1223]}]},{"pos":[96044,96127],"content":"The performance object instance in this performance counter category to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The performance object instance in this performance counter category to search for.","pos":[0,83]}]},{"pos":[96186,96389],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the category contains the specified performance object instance; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the category contains the specified performance object instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[96588,96770],"content":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. The property might not have been set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,144],"source":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"The property might not have been set.","pos":[145,182]}]},{"pos":[96873,96977],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">instanceName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>instanceName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[97096,97138],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[97253,97350],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[97879,97992],"content":"Determines whether a specified category on the local computer contains the specified performance object instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether a specified category on the local computer contains the specified performance object instance.","pos":[0,113]}]},{"pos":[98005,99146],"content":"It is not possible to determine whether a performance object instance exists on a computer without specifying a specific category to look in.      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"It is not possible to determine whether a performance object instance exists on a computer without specifying a specific category to look in.","pos":[0,141]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[147,379],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[382,544],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[547,646],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[647,813]},{"content":"By default, you are in the standard user role.","pos":[814,860]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[861,992]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[993,1134]}]},{"pos":[100062,100108],"content":"The performance object instance to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The performance object instance to search for.","pos":[0,46]}]},{"pos":[100177,100220],"content":"The performance counter category to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The performance counter category to search.","pos":[0,43]}]},{"pos":[100279,100482],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the category contains the specified performance object instance; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the category contains the specified performance object instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[100674,100916],"content":"The <code>instanceName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">instanceName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,104],"source":"The <code>instanceName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[111,226],"source":"       -or-       The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[101012,101076],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The <code>categoryName</code> parameter is an empty string (\"\")."},{"pos":[101195,101237],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[101352,101449],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[102027,102142],"content":"Determines whether a specified category on a specified computer contains the specified performance object instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether a specified category on a specified computer contains the specified performance object instance.","pos":[0,115]}]},{"pos":[102155,103353],"content":"It is not possible to determine whether a performance object instance exists on a computer without specifying a specific category to look in.       You can use \".\" to specify the local computer.      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"It is not possible to determine whether a performance object instance exists on a computer without specifying a specific category to look in.","pos":[0,141]},{"content":"You can use \".\" to specify the local computer.","pos":[148,194]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[200,432],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[435,597],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[600,699],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[700,866]},{"content":"By default, you are in the standard user role.","pos":[867,913]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[914,1045]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[1046,1187]}]},{"pos":[104289,104335],"content":"The performance object instance to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The performance object instance to search for.","pos":[0,46]}]},{"pos":[104404,104447],"content":"The performance counter category to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The performance counter category to search.","pos":[0,43]}]},{"pos":[104515,104588],"content":"The name of the computer on which to look for the category instance pair.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the computer on which to look for the category instance pair.","pos":[0,73]}]},{"pos":[104647,104850],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the category contains the specified performance object instance; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the category contains the specified performance object instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[105042,105284],"content":"The <code>instanceName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">instanceName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,104],"source":"The <code>instanceName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[111,226],"source":"       -or-       The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[105381,105519],"content":"The <code>categoryName</code> parameter is an empty string (\"\").       -or-       The <code>machineName</code> parameter is invalid.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">categoryName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an empty string (\"\").","pos":[0,64],"source":"The <code>categoryName</code> parameter is an empty string (\"\")."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">machineName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is invalid.","pos":[71,132],"source":"       -or-       The <code>machineName</code> parameter is invalid."}]},{"pos":[105639,105681],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[105796,105893],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]},{"pos":[106306,106374],"content":"Gets or sets the name of the computer on which this category exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the computer on which this category exists.","pos":[0,68]}]},{"pos":[107531,107632],"content":"The name of the computer on which the performance counter category and its associated counters exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the computer on which the performance counter category and its associated counters exist.","pos":[0,101]}]},{"pos":[107812,107846],"content":"The MachineName syntax is invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The MachineName syntax is invalid.","pos":[0,34]}]},{"pos":[108268,108385],"content":"Reads all the counter and performance object instance data that is associated with this performance counter category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads all the counter and performance object instance data that is associated with this performance counter category.","pos":[0,117]}]},{"pos":[108398,109668],"content":"You must set the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property before you call ReadCategory.       Reading the entire category at once can be as efficient as reading a single counter because of the way that the system provides the data.      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","needQuote":false,"needEscape":true,"nodes":[{"content":"You must set the &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A&gt; property before you call ReadCategory.","pos":[0,124],"source":"You must set the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property before you call ReadCategory."},{"content":"Reading the entire category at once can be as efficient as reading a single counter because of the way that the system provides the data.","pos":[131,268]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.","pos":[274,506],"source":"      > [!NOTE] >  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges."},{"content":"&gt;    &gt;  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.","pos":[509,671],"source":"   >    >  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group."},{"content":"&gt;    &gt;  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.","pos":[674,773],"source":"   >    >  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user."},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[774,940]},{"content":"By default, you are in the standard user role.","pos":[941,987]},{"content":"To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.","pos":[988,1119]},{"content":"You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[1120,1261]}]},{"pos":[110575,110731],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.InstanceDataCollectionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the counter and performance object instance data for the category.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Diagnostics.InstanceDataCollectionCollection\"></xref> that contains the counter and performance object instance data for the category."},{"pos":[110928,111110],"content":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. The property might not have been set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,144],"source":"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"The property might not have been set.","pos":[145,182]}]},{"pos":[111229,111271],"content":"A call to an underlying system API failed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A call to an underlying system API failed.","pos":[0,42]}]},{"pos":[111386,111483],"content":"Code that is executing without administrative privileges attempted to read a performance counter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Code that is executing without administrative privileges attempted to read a performance counter.","pos":[0,97]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.PerformanceCounterCategory\n  id: PerformanceCounterCategory\n  children:\n  - System.Diagnostics.PerformanceCounterCategory.#ctor\n  - System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)\n  - System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)\n  - System.Diagnostics.PerformanceCounterCategory.CategoryHelp\n  - System.Diagnostics.PerformanceCounterCategory.CategoryName\n  - System.Diagnostics.PerformanceCounterCategory.CategoryType\n  - System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)\n  - System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)\n  - System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)\n  - System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)\n  - System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)\n  - System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)\n  - System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)\n  - System.Diagnostics.PerformanceCounterCategory.Delete(System.String)\n  - System.Diagnostics.PerformanceCounterCategory.Exists(System.String)\n  - System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)\n  - System.Diagnostics.PerformanceCounterCategory.GetCategories\n  - System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)\n  - System.Diagnostics.PerformanceCounterCategory.GetCounters\n  - System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)\n  - System.Diagnostics.PerformanceCounterCategory.GetInstanceNames\n  - System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)\n  - System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)\n  - System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)\n  - System.Diagnostics.PerformanceCounterCategory.MachineName\n  - System.Diagnostics.PerformanceCounterCategory.ReadCategory\n  langs:\n  - csharp\n  name: PerformanceCounterCategory\n  nameWithType: PerformanceCounterCategory\n  fullName: System.Diagnostics.PerformanceCounterCategory\n  type: Class\n  summary: Represents a performance object, which defines a category of performance counters.\n  remarks: \"> [!IMPORTANT]\\n>  Creating or deleting a performance counter requires synchronization of the underlying code by using a named mutex. If a highly privileged application locks the named mutex, attempts to create or delete a performance counter causes the application to stop responding until the lock is released. To help avoid this problem, never grant <xref:System.Security.Permissions.SecurityPermissionFlag> permission to untrusted code. In addition, <xref:System.Security.Permissions.SecurityPermissionFlag> permission potentially allows other permissions to be bypassed and should only be granted to highly trusted code.  \\n  \\n The PerformanceCounterCategory instance's <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property is displayed in the Performance Object field of the Performance Viewer application's Add Counter dialog box.  \\n  \\n The PerformanceCounterCategory class provides several methods for interacting with counters and categories on the computer. The <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> methods enable you to define custom categories. The <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> method provides a way to remove categories from the computer. The <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> method enables you to view the list of categories, while <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> retrieves all the counter and instance data associated with a single category.  \\n  \\n A performance counter publishes performance data about an application. Categories include physical components (such as processors, disks, and memory) and system objects (such as processes and threads). System counters that are related to the same performance object are grouped into a category that indicates their common focus. When you create an instance of the <xref:System.Diagnostics.PerformanceCounter> class, you first indicate the category with which the component will interact, and then you choose a counter from that category.  \\n  \\n For example, one Windows counter category is the Memory category. System counters within this category track memory data such as the number of bytes available and the number of bytes cached. If you wanted to work with the bytes cached in your application, you would create an instance of the <xref:System.Diagnostics.PerformanceCounter> component, connect it to the Memory category, and then pick the appropriate counter (in this case, Cached Bytes) from that category.  \\n  \\n Although your system makes many more counter categories available, the categories that you will probably interact with most frequently are the Cache, Memory, Objects, PhysicalDisk, Process, Processor, Server, System, and Thread categories.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> method in the <xref:System.Diagnostics.PerformanceCounter> class will release the counter and, if the reuse option is selected for that category, the instance of the counter will be reused. This could cause a race condition if another process or even another part of the code is trying to write to the counter instance.  \\n  \\n> [!NOTE]\\n>  It is strongly recommended that new performance counter categories be created during the installation of the application, not during the execution of the application. This allows time for the operating system to refresh its list of registered performance counter categories. If the list has not been refreshed, the attempt to use the category will fail.  \\n  \\n> [!NOTE]\\n>  Performance counter categories installed with the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] use separate shared memory, with each performance counter category having its own memory. You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\\\\\*\\\\<category name>*\\\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the `fileMappingSize` attribute value for the `performanceCounters` element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry. For more information about the file mapping size, see [\\\\&lt;performanceCounters\\\\&gt;](../Topic/%3CperformanceCounters%3E%20Element.md).\"\n  example:\n  - \"The following code example determines whether a <xref:System.Diagnostics.PerformanceCounter> and its PerformanceCounterCategory exist on the local computer or on another computer. If these objects do not exist on the local computer, the example optionally creates them. It uses the <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> method to determine whether the PerformanceCounterCategory exists.  If the PerformanceCounterCategory does not exist and no counter name is specified, or if the computer is a remote machine, the example exits.  \\n  \\n If a <xref:System.Diagnostics.PerformanceCounter> name is provided, the example uses the <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> method and displays the result to the user. If the <xref:System.Diagnostics.PerformanceCounter> does not exist, the user can delete and re-create the PerformanceCounterCategory with the new <xref:System.Diagnostics.PerformanceCounter>. If the user does so, the category is deleted using the <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> method.  \\n  \\n If requested, the example now creates the new PerformanceCounterCategory and <xref:System.Diagnostics.PerformanceCounter> using the <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> method. If an instance name is specified, the example uses the <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> method and displays the result.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.Class#27](~/add/codesnippet/csharp/t-system.diagnostics.per_3_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class#27](~/add/codesnippet/visualbasic/t-system.diagnostics.per_3_1.vb)]\"\n  syntax:\n    content: public sealed class PerformanceCounterCategory\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: PerformanceCounterCategory()\n  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory()\n  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> class, leaves the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property empty, and sets the <xref:System.Diagnostics.PerformanceCounterCategory.MachineName*> property to the local computer.\n  remarks: The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property must be set before associating this <xref:System.Diagnostics.PerformanceCounterCategory> instance with a performance object on the server. Otherwise, an exception is thrown.\n  example:\n  - \"The following code example accepts a <xref:System.Diagnostics.PerformanceCounterCategory> name and a computer name from the command line.  It creates a <xref:System.Diagnostics.PerformanceCounterCategory> using the constructor overload appropriate for the number of parameters provided, then displays its properties.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/csharp/m-system.diagnostics.per_4_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/visualbasic/m-system.diagnostics.per_4_1.vb)]\"\n  syntax:\n    content: public PerformanceCounterCategory ();\n    parameters: []\n  overload: System.Diagnostics.PerformanceCounterCategory.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: PerformanceCounterCategory(String)\n  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> class, sets the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property to the specified value, and sets the <xref:System.Diagnostics.PerformanceCounterCategory.MachineName*> property to the local computer.\n  remarks: ''\n  example:\n  - \"The following code example accepts a <xref:System.Diagnostics.PerformanceCounterCategory> name and a computer name from the command line. It creates a <xref:System.Diagnostics.PerformanceCounterCategory> using the constructor overload that is appropriate for the number of parameters provided, then displays its properties.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/csharp/m-system.diagnostics.per_11_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/visualbasic/m-system.diagnostics.per_11_1.vb)]\"\n  syntax:\n    content: public PerformanceCounterCategory (string categoryName);\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: The name of the performance counter category, or performance object, with which to associate this <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> instance.\n  overload: System.Diagnostics.PerformanceCounterCategory.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>categoryName</code> is an empty string (\"\").\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: PerformanceCounterCategory(String,String)\n  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory(String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory(String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> class and sets the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> and <xref:System.Diagnostics.PerformanceCounterCategory.MachineName*> properties to the specified values.\n  remarks: ''\n  example:\n  - \"The following code example accepts a <xref:System.Diagnostics.PerformanceCounterCategory> name and a computer name from the command line. It creates a <xref:System.Diagnostics.PerformanceCounterCategory> using the constructor overload that is appropriate for the number of parameters provided, then displays its properties.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/csharp/75b9896e-a505-4b53-afe2-_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/visualbasic/75b9896e-a505-4b53-afe2-_1.vb)]\"\n  syntax:\n    content: public PerformanceCounterCategory (string categoryName, string machineName);\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: The name of the performance counter category, or performance object, with which to associate this <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> instance.\n    - id: machineName\n      type: System.String\n      description: The computer on which the performance counter category and its associated counters exist.\n  overload: System.Diagnostics.PerformanceCounterCategory.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>categoryName</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n The <code>machineName</code> syntax is invalid.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>categoryName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.CategoryHelp\n  id: CategoryHelp\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: CategoryHelp\n  nameWithType: PerformanceCounterCategory.CategoryHelp\n  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryHelp\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the category's help text.\n  remarks: ''\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.PerformanceCounterCategory> with the <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. It prompts the user for the <xref:System.Diagnostics.PerformanceCounterCategory> and computer names, then sets the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> and <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> properties from the entered values. It then displays the values of the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, and CategoryHelp properties, or it displays an error message if the <xref:System.Diagnostics.PerformanceCounterCategory> cannot be accessed.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/csharp/p-system.diagnostics.per_5_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/visualbasic/p-system.diagnostics.per_5_1.vb)]\"\n  syntax:\n    content: public string CategoryHelp { get; }\n    return:\n      type: System.String\n      description: A description of the performance object that this category measures.\n  overload: System.Diagnostics.PerformanceCounterCategory.CategoryHelp*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. The category name must be set before getting the category help.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.CategoryName\n  id: CategoryName\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: CategoryName\n  nameWithType: PerformanceCounterCategory.CategoryName\n  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets or sets the name of the performance object that defines this category.\n  remarks: ''\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.PerformanceCounterCategory> with the <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. It prompts the user for the <xref:System.Diagnostics.PerformanceCounterCategory> and computer names, then sets the CategoryName and <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> properties from the entered values. It then displays the values of the CategoryName, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, and <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> properties, or it displays an error message if the <xref:System.Diagnostics.PerformanceCounterCategory> cannot be accessed.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/csharp/p-system.diagnostics.per_3_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/visualbasic/p-system.diagnostics.per_3_1.vb)]\"\n  syntax:\n    content: public string CategoryName { get; set; }\n    return:\n      type: System.String\n      description: The name of the performance counter category, or performance object, with which to associate this <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> instance.\n  overload: System.Diagnostics.PerformanceCounterCategory.CategoryName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The CategoryName is an empty string (\"\").\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The CategoryName is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.CategoryType\n  id: CategoryType\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: CategoryType\n  nameWithType: PerformanceCounterCategory.CategoryType\n  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryType\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the performance counter category type.\n  remarks: \"The CategoryType property indicates whether the <xref:System.Diagnostics.PerformanceCounterCategory> object can have multiple instances. The possible values are <xref:System.Diagnostics.PerformanceCounterCategoryType>, <xref:System.Diagnostics.PerformanceCounterCategoryType>, or <xref:System.Diagnostics.PerformanceCounterCategoryType>.  \\n  \\n There are two types of performance counter categories: single-instance and multi-instance. By default, a category is single-instance when it is created and becomes multi-instance when another instance is added. Categories are created when an application is set up, and instances are added at run time. In the .NET Framework versions 1.0 and 1.1, it is not necessary to know if a performance counter category is multi-instance or single-instance. In the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], the <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeration is used to indicate whether a performance counter can have multiple instances.\"\n  syntax:\n    content: public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }\n    return:\n      type: System.Diagnostics.PerformanceCounterCategoryType\n      description: One of the <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref> values.\n  overload: System.Diagnostics.PerformanceCounterCategory.CategoryType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)\n  id: CounterExists(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: CounterExists(String)\n  nameWithType: PerformanceCounterCategory.CounterExists(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether the specified counter is registered to this category, which is indicated by the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> and <xref:System.Diagnostics.PerformanceCounterCategory.MachineName*> properties.\n  remarks: \"You must set the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property before calling this method. Otherwise, an exception is thrown.  \\n  \\n If you have not set the <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> property, this method uses the local computer (\\\".\\\").  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example determines whether a <xref:System.Diagnostics.PerformanceCounter> exists. It gets a category name, counter name, and computer name from the command line, if they are given. It creates a <xref:System.Diagnostics.PerformanceCounterCategory> object using the appropriate <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>. It then uses the CounterExists method to determine whether the specified <xref:System.Diagnostics.PerformanceCounter> exists, and informs the user.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/add/codesnippet/csharp/m-system.diagnostics.per_6_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/add/codesnippet/visualbasic/m-system.diagnostics.per_6_1.vb)]\"\n  syntax:\n    content: public bool CounterExists (string counterName);\n    parameters:\n    - id: counterName\n      type: System.String\n      description: The name of the performance counter to look for.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the counter is registered to the category that is specified by the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> and <xref:System.Diagnostics.PerformanceCounterCategory.MachineName*> properties; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.PerformanceCounterCategory.CounterExists*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>counterName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property has not been set.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)\n  id: CounterExists(System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: CounterExists(String,String)\n  nameWithType: PerformanceCounterCategory.CounterExists(String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether the specified counter is registered to the specified category on the local computer.\n  remarks: \"> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example determines whether a <xref:System.Diagnostics.PerformanceCounter> exists. It gets a category name, counter name, and computer name from the command line, if they are given. It uses the static overloads of the <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> method to determine whether the specified <xref:System.Diagnostics.PerformanceCounter> name exists in the <xref:System.Diagnostics.PerformanceCounterCategory>. The overload is selected based on whether a computer name is provided.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/add/codesnippet/csharp/ccefabf7-dd26-432c-91c0-_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/add/codesnippet/visualbasic/ccefabf7-dd26-432c-91c0-_1.vb)]\"\n  syntax:\n    content: public static bool CounterExists (string counterName, string categoryName);\n    parameters:\n    - id: counterName\n      type: System.String\n      description: The name of the performance counter to look for.\n    - id: categoryName\n      type: System.String\n      description: The name of the performance counter category, or performance object, with which the specified performance counter is associated.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the counter is registered to the specified category on the local computer; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.PerformanceCounterCategory.CounterExists*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>categoryName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>counterName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>categoryName</code> is an empty string (\"\").\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The category name does not exist.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)\n  id: CounterExists(System.String,System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: CounterExists(String,String,String)\n  nameWithType: PerformanceCounterCategory.CounterExists(String,String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String,String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether the specified counter is registered to the specified category on a remote computer.\n  remarks: \"> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example determines whether a <xref:System.Diagnostics.PerformanceCounter> exists. It gets a category name, counter name, and computer name from the command line, if they are given. It uses the static overloads of the <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> method to determine whether the specified <xref:System.Diagnostics.PerformanceCounter> name exists in the <xref:System.Diagnostics.PerformanceCounterCategory>. The overload is selected based on whether a computer name is provided.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/add/codesnippet/csharp/479fa6a9-538c-463f-94d2-_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/add/codesnippet/visualbasic/479fa6a9-538c-463f-94d2-_1.vb)]\"\n  syntax:\n    content: public static bool CounterExists (string counterName, string categoryName, string machineName);\n    parameters:\n    - id: counterName\n      type: System.String\n      description: The name of the performance counter to look for.\n    - id: categoryName\n      type: System.String\n      description: The name of the performance counter category, or performance object, with which the specified performance counter is associated.\n    - id: machineName\n      type: System.String\n      description: The name of the computer on which the performance counter category and its associated counters exist.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the counter is registered to the specified category on the specified computer; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.PerformanceCounterCategory.CounterExists*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>categoryName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>counterName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>categoryName</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n The <code>machineName</code> is invalid.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The category name does not exist.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)\n  id: Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: Create(String,String,CounterCreationDataCollection)\n  nameWithType: PerformanceCounterCategory.Create(String,String,CounterCreationDataCollection)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,CounterCreationDataCollection)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Registers the custom performance counter category containing the specified counters on the local computer.\n  remarks: \"> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example determines whether a <xref:System.Diagnostics.PerformanceCounterCategory> object named \\\"orders\\\" exists. If not, it creates the <xref:System.Diagnostics.PerformanceCounterCategory> object by using a <xref:System.Diagnostics.CounterCreationDataCollection> object that contains two performance counters.  \\n  \\n [!code-cpp[PerfCounter_ccd#1](~/add/codesnippet/cpp/9e4e5065-5efa-4558-a11f-_1.cpp)]\\n [!code-vb[PerfCounter_ccd#1](~/add/codesnippet/visualbasic/9e4e5065-5efa-4558-a11f-_1.vb)]\\n [!code-cs[PerfCounter_ccd#1](~/add/codesnippet/csharp/9e4e5065-5efa-4558-a11f-_1.cs)]\"\n  syntax:\n    content: public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: The name of the custom performance counter category to create and register with the system.\n    - id: categoryHelp\n      type: System.String\n      description: A description of the custom category.\n    - id: counterData\n      type: System.Diagnostics.CounterCreationDataCollection\n      description: A <xref href=\"System.Diagnostics.CounterCreationDataCollection\"></xref> that specifies the counters to create as part of the new category.\n    return:\n      type: System.Diagnostics.PerformanceCounterCategory\n      description: A <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> that is associated with the new custom category, or performance object.\n  overload: System.Diagnostics.PerformanceCounterCategory.Create*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"A counter name that is specified within the <code>counterData</code> collection is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n A counter that is specified within the <code>counterData</code> collection already exists.  \\n  \\n -or-  \\n  \\n The <code>counterName</code> parameter has invalid syntax. It might contain backslash characters (\\\"\\\\\\\\\\\") or have length greater than 80 characters.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The category already exists on the local computer.  \\n  \\n -or-  \\n  \\n The layout of the <code>counterData</code> collection is incorrect for base counters. A counter of type <xref uid=\\\"langword_csharp_AverageCount64\\\" name=\\\"AverageCount64\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_AverageTimer32\\\" name=\\\"AverageTimer32\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_CounterMultiTimer\\\" name=\\\"CounterMultiTimer\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_CounterMultiTimerInverse\\\" name=\\\"CounterMultiTimerInverse\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_CounterMultiTimer100Ns\\\" name=\\\"CounterMultiTimer100Ns\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_CounterMultiTimer100NsInverse\\\" name=\\\"CounterMultiTimer100NsInverse\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_RawFraction\\\" name=\\\"RawFraction\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_SampleFraction\\\" name=\\\"SampleFraction\\\" href=\\\"\\\"></xref> or <xref uid=\\\"langword_csharp_SampleCounter\\\" name=\\\"SampleCounter\\\" href=\\\"\\\"></xref> has to be immediately followed by one of the base counter types (<xref uid=\\\"langword_csharp_AverageBase\\\" name=\\\"AverageBase\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_MultiBase\\\" name=\\\"MultiBase\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_RawBase\\\" name=\\\"RawBase\\\" href=\\\"\\\"></xref>, or <xref uid=\\\"langword_csharp_SampleBase\\\" name=\\\"SampleBase\\\" href=\\\"\\\"></xref>).\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)\n  id: Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)\n  nameWithType: PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Registers the custom performance counter category containing the specified counters on the local computer.\n  remarks: \"The `categoryType` parameter specifies whether the performance counter category is single-instance or multi-instance. By default, a category is single-instance when it is created and becomes multi-instance when another instance is added. Categories are created when an application is set up, and instances are added at run time. In the  .NET Framework versions 1.0 and 1.1, it is not necessary to know if a performance counter category is multi-instance or single-instance. In the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], the <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeration is used to indicate whether a performance counter can have multiple instances.  \\n  \\n Performance counter categories installed with the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] use separate shared memory, with each performance counter category having its own memory.  You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\\\\\*\\\\<category name>*\\\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the `fileMappingSize` attribute value for the `performanceCounters` element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry.  \\n  \\n> [!NOTE]\\n>  It is strongly recommended that new performance counter categories be created during the installation of the application, not during the execution of the application. This allows time for the operating system to refresh its list of registered performance counter categories. If the list has not been refreshed, the attempt to use the category will fail.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example shows the use of the Create method. The example shows how to create a custom, multi-instance performance counter category for the number of orders per second.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategoryType#2](~/add/codesnippet/csharp/38799c48-5863-4c7c-ac81-_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#2](~/add/codesnippet/visualbasic/38799c48-5863-4c7c-ac81-_1.vb)]\"\n  syntax:\n    content: public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: The name of the custom performance counter category to create and register with the system.\n    - id: categoryHelp\n      type: System.String\n      description: A description of the custom category.\n    - id: categoryType\n      type: System.Diagnostics.PerformanceCounterCategoryType\n      description: One of the <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref> values.\n    - id: counterData\n      type: System.Diagnostics.CounterCreationDataCollection\n      description: A <xref href=\"System.Diagnostics.CounterCreationDataCollection\"></xref> that specifies the counters to create as part of the new category.\n    return:\n      type: System.Diagnostics.PerformanceCounterCategory\n      description: A <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> that is associated with the new custom category, or performance object.\n  overload: System.Diagnostics.PerformanceCounterCategory.Create*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"A counter name that is specified within the <code>counterData</code> collection is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n A counter that is specified within the <code>counterData</code> collection already exists.  \\n  \\n -or-  \\n  \\n <code>counterName</code> has invalid syntax. It might contain backslash characters (\\\"\\\\\\\\\\\") or have length greater than 80 characters.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>categoryName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>counterData</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: '<code>categoryType</code> value is outside of the range of the following values: <xref uid=\"langword_csharp_MultiInstance\" name=\"MultiInstance\" href=\"\"></xref>, <xref uid=\"langword_csharp_SingleInstance\" name=\"SingleInstance\" href=\"\"></xref>, or <xref uid=\"langword_csharp_Unknown\" name=\"Unknown\" href=\"\"></xref>.'\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The category already exists on the local computer.  \\n  \\n -or-  \\n  \\n The layout of the <code>counterData</code> collection is incorrect for base counters. A counter of type <xref uid=\\\"langword_csharp_AverageCount64\\\" name=\\\"AverageCount64\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_AverageTimer32\\\" name=\\\"AverageTimer32\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_CounterMultiTimer\\\" name=\\\"CounterMultiTimer\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_CounterMultiTimerInverse\\\" name=\\\"CounterMultiTimerInverse\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_CounterMultiTimer100Ns\\\" name=\\\"CounterMultiTimer100Ns\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_CounterMultiTimer100NsInverse\\\" name=\\\"CounterMultiTimer100NsInverse\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_RawFraction\\\" name=\\\"RawFraction\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_SampleFraction\\\" name=\\\"SampleFraction\\\" href=\\\"\\\"></xref>, or <xref uid=\\\"langword_csharp_SampleCounter\\\" name=\\\"SampleCounter\\\" href=\\\"\\\"></xref> must be immediately followed by one of the base counter types (<xref uid=\\\"langword_csharp_AverageBase\\\" name=\\\"AverageBase\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_MultiBase\\\" name=\\\"MultiBase\\\" href=\\\"\\\"></xref>, <xref uid=\\\"langword_csharp_RawBase\\\" name=\\\"RawBase\\\" href=\\\"\\\"></xref>, or <xref uid=\\\"langword_csharp_SampleBase\\\" name=\\\"SampleBase\\\" href=\\\"\\\"></xref>).\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)\n  id: Create(System.String,System.String,System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: Create(String,String,String,String)\n  nameWithType: PerformanceCounterCategory.Create(String,String,String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Registers a custom performance counter category containing a single counter of type <xref uid=\"langword_csharp_NumberOfItems32\" name=\"NumberOfItems32\" href=\"\"></xref> on the local computer.\n  remarks: \"> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.PerformanceCounterCategory> and single <xref:System.Diagnostics.PerformanceCounter> with help text for each, using the Create method.  \\n  \\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/add/codesnippet/visualbasic/012c8ef3-108d-4e71-bb01-_1.vb)]\\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/add/codesnippet/csharp/012c8ef3-108d-4e71-bb01-_1.cs)]\"\n  syntax:\n    content: public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: The name of the custom performance counter category to create and register with the system.\n    - id: categoryHelp\n      type: System.String\n      description: A description of the custom category.\n    - id: counterName\n      type: System.String\n      description: The name of a new counter, of type <xref uid=\"langword_csharp_NumberOfItems32\" name=\"NumberOfItems32\" href=\"\"></xref>, to create as part of the new category.\n    - id: counterHelp\n      type: System.String\n      description: A description of the counter that is associated with the new custom category.\n    return:\n      type: System.Diagnostics.PerformanceCounterCategory\n      description: A <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> that is associated with the new system category, or performance object.\n  overload: System.Diagnostics.PerformanceCounterCategory.Create*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>counterName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n The counter that is specified by <code>counterName</code> already exists.  \\n  \\n -or-  \\n  \\n <code>counterName</code> has invalid syntax. It might contain backslash characters (\\\"\\\\\\\\\\\") or have length greater than 80 characters.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The category already exists on the local computer.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>categoryName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>counterHelp</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)\n  id: Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: Create(String,String,PerformanceCounterCategoryType,String,String)\n  nameWithType: PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Registers the custom performance counter category containing a single counter of type <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> on the local computer.\n  remarks: \"The `categoryType` parameter specifies whether the performance counter category is single-instance or multi-instance. By default, a category is single-instance when it is created and becomes multi-instance when another instance is added. Categories are created when an application is set up, and instances are added at run time. In the .NET Framework versions 1.0 and 1.1, it is not necessary to know if a performance counter category is multi-instance or single-instance. In the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], the <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeration is used to indicate whether a performance counter can have multiple instances.  \\n  \\n Performance counter categories installed with the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] use separate shared memory, with each performance counter category having its own memory. You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\\\\\*\\\\<category name>*\\\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the `fileMappingSize` attribute value for the `performanceCounters` element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry.  \\n  \\n> [!NOTE]\\n>  It is strongly recommended that new performance counter categories be created during the installation of the application, not during the execution of the application. This allows time for the operating system to refresh its list of registered performance counter categories. If the list has not been refreshed, the attempt to use the category will fail.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example shows the use of the Create method. The example shows how to create a custom, single instance performance counter category.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategoryType#3](~/add/codesnippet/csharp/f3ced94f-b6d8-4841-851d-_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#3](~/add/codesnippet/visualbasic/f3ced94f-b6d8-4841-851d-_1.vb)]\"\n  syntax:\n    content: public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: The name of the custom performance counter category to create and register with the system.\n    - id: categoryHelp\n      type: System.String\n      description: A description of the custom category.\n    - id: categoryType\n      type: System.Diagnostics.PerformanceCounterCategoryType\n      description: One of the <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref> values specifying whether the category is <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref>, <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref>, or <xref href=\"System.Diagnostics.PerformanceCounterCategoryType\"></xref>.\n    - id: counterName\n      type: System.String\n      description: The name of a new counter to create as part of the new category.\n    - id: counterHelp\n      type: System.String\n      description: A description of the counter that is associated with the new custom category.\n    return:\n      type: System.Diagnostics.PerformanceCounterCategory\n      description: A <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> that is associated with the new system category, or performance object.\n  overload: System.Diagnostics.PerformanceCounterCategory.Create*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>counterName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n The counter that is specified by <code>counterName</code> already exists.  \\n  \\n -or-  \\n  \\n <code>counterName</code> has invalid syntax. It might contain backslash characters (\\\"\\\\\\\\\\\") or have length greater than 80 characters.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The category already exists on the local computer.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>categoryName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>counterHelp</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.Delete(System.String)\n  id: Delete(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: Delete(String)\n  nameWithType: PerformanceCounterCategory.Delete(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Delete(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Removes the category and its associated counters from the local computer.\n  remarks: \"You can delete only custom performance counter categories from the system. You cannot delete a counter from a category. To do so, delete the category and recreate the category with the counters you want to retain. To avoid an exception, confirm that the category exists before you attempt to delete it.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example uses the Delete method to delete a <xref:System.Diagnostics.PerformanceCounterCategory> and the <xref:System.Diagnostics.PerformanceCounter> objects that it contains.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/add/codesnippet/csharp/m-system.diagnostics.per_10_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/add/codesnippet/visualbasic/m-system.diagnostics.per_10_1.vb)]\"\n  syntax:\n    content: public static void Delete (string categoryName);\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: The name of the custom performance counter category to delete.\n  overload: System.Diagnostics.PerformanceCounterCategory.Delete*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>categoryName</code> parameter has invalid syntax. It might contain backslash characters (\"\\\\\") or have length greater than 80 characters.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The category cannot be deleted because it is not a custom category.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.Exists(System.String)\n  id: Exists(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: Exists(String)\n  nameWithType: PerformanceCounterCategory.Exists(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Exists(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether the category is registered on the local computer.\n  remarks: \"Use of the Exists method can result in a noticeable performance penalty while all performance counters on the machine are checked for availability. If you are only writing to a performance counter, you can avoid the global search for performance counters by creating the performance counter when the application is installed and assuming the category exists when accessing the counter. There is no way to avoid the performance counter search when reading from performance counters.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example determines whether a <xref:System.Diagnostics.PerformanceCounterCategory> object named \\\"orders\\\" exists. If not, it creates the <xref:System.Diagnostics.PerformanceCounterCategory> object by using a <xref:System.Diagnostics.CounterCreationDataCollection> object that contains two performance counters.  \\n  \\n [!code-cpp[PerfCounter_ccd#1](~/add/codesnippet/cpp/m-system.diagnostics.per_3_1.cpp)]\\n [!code-vb[PerfCounter_ccd#1](~/add/codesnippet/visualbasic/m-system.diagnostics.per_3_1.vb)]\\n [!code-cs[PerfCounter_ccd#1](~/add/codesnippet/csharp/m-system.diagnostics.per_3_1.cs)]\"\n  syntax:\n    content: public static bool Exists (string categoryName);\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: The name of the performance counter category to look for.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the category is registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.PerformanceCounterCategory.Exists*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>categoryName</code> parameter is an empty string (\"\").\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)\n  id: Exists(System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: Exists(String,String)\n  nameWithType: PerformanceCounterCategory.Exists(String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Exists(String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether the category is registered on the specified computer.\n  remarks: \"Use of the Exists method can result in a noticeable performance penalty while all performance counters on the machine are checked for availability. If you are only writing to a performance counter, you can avoid the global search for performance counters by creating the performance counter when the application is installed and assuming the category exists when accessing the counter. There is no way to avoid the performance counter search when reading from performance counters.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following example determines whether a <xref:System.Diagnostics.PerformanceCounterCategory> object named `Orders` exists. If it does not exist, the example creates the <xref:System.Diagnostics.PerformanceCounterCategory> object by using a <xref:System.Diagnostics.CounterCreationDataCollection> object that contains two performance counters.  \\n  \\n [!code-cpp[PerfCounter_ccd#1](~/add/codesnippet/cpp/a840bf9c-a22d-45eb-89a3-_1.cpp)]\\n [!code-vb[PerfCounter_ccd#1](~/add/codesnippet/visualbasic/a840bf9c-a22d-45eb-89a3-_1.vb)]\\n [!code-cs[PerfCounter_ccd#1](~/add/codesnippet/csharp/a840bf9c-a22d-45eb-89a3-_1.cs)]\"\n  syntax:\n    content: public static bool Exists (string categoryName, string machineName);\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: The name of the performance counter category to look for.\n    - id: machineName\n      type: System.String\n      description: The name of the computer to examine for the category.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the category is registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.PerformanceCounterCategory.Exists*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>categoryName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>categoryName</code> parameter is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n The <code>machineName</code> parameter is invalid.\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The network path cannot be found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n Code that is executing without administrative privileges attempted to read a performance counter.\"\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.GetCategories\n  id: GetCategories\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: GetCategories()\n  nameWithType: PerformanceCounterCategory.GetCategories()\n  fullName: System.Diagnostics.PerformanceCounterCategory.GetCategories()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Retrieves a list of the performance counter categories that are registered on the local computer.\n  remarks: \"> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example uses the <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> method to return an array of <xref:System.Diagnostics.PerformanceCounterCategory> objects from the local computer or a specified computer. It converts the <xref:System.Diagnostics.PerformanceCounterCategory> array into an array of category names, which it sorts and displays for the user. The <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> overload is selected based on whether a computer name was specified.  \\n  \\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/visualbasic/m-system.diagnostics.per_5_1.vb)]\\n [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/cpp/m-system.diagnostics.per_5_1.cpp)]\\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/csharp/m-system.diagnostics.per_5_1.cs)]\"\n  syntax:\n    content: public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();\n    parameters: []\n    return:\n      type: System.Diagnostics.PerformanceCounterCategory[]\n      description: An array of <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> objects indicating the categories that are registered on the local computer.\n  overload: System.Diagnostics.PerformanceCounterCategory.GetCategories*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)\n  id: GetCategories(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: GetCategories(String)\n  nameWithType: PerformanceCounterCategory.GetCategories(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.GetCategories(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Retrieves a list of the performance counter categories that are registered on the specified computer.\n  remarks: \"To retrieve the categories on the local computer, use another overload or pass \\\".\\\" as the `machineName` parameter.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example uses the <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> method to return an array of <xref:System.Diagnostics.PerformanceCounterCategory> objects from the local computer or a specified computer. It converts the <xref:System.Diagnostics.PerformanceCounterCategory> array into an array of category names, which it sorts and displays for the user. The <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> overload is selected based on whether a computer name was specified.  \\n  \\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/visualbasic/m-system.diagnostics.per_7_1.vb)]\\n [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/cpp/m-system.diagnostics.per_7_1.cpp)]\\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/csharp/m-system.diagnostics.per_7_1.cs)]\"\n  syntax:\n    content: public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);\n    parameters:\n    - id: machineName\n      type: System.String\n      description: The computer to look on.\n    return:\n      type: System.Diagnostics.PerformanceCounterCategory[]\n      description: An array of <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> objects indicating the categories that are registered on the specified computer.\n  overload: System.Diagnostics.PerformanceCounterCategory.GetCategories*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>machineName</code> parameter is invalid.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.GetCounters\n  id: GetCounters\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: GetCounters()\n  nameWithType: PerformanceCounterCategory.GetCounters()\n  fullName: System.Diagnostics.PerformanceCounterCategory.GetCounters()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Retrieves a list of the counters in a performance counter category that contains exactly one instance.\n  remarks: \"For more information about performance object instances, see the <xref:System.Diagnostics.PerformanceCounter> class overview.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example gets a list of the <xref:System.Diagnostics.PerformanceCounter> objects in a <xref:System.Diagnostics.PerformanceCounterCategory>. It first creates a <xref:System.Diagnostics.PerformanceCounterCategory> with the appropriate constructor, based on whether a computer name was specified. It then uses the <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> method to return an array of <xref:System.Diagnostics.PerformanceCounter> objects, selecting the <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> overload based on whether an instance name was specified.  \\n  \\n This GetCounters overload fails unless it is used with a single-instance category.  \\n  \\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/visualbasic/m-system.diagnostics.per_14_1.vb)]\\n [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/cpp/m-system.diagnostics.per_14_1.cpp)]\\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/csharp/m-system.diagnostics.per_14_1.cs)]\"\n  syntax:\n    content: public System.Diagnostics.PerformanceCounter[] GetCounters ();\n    parameters: []\n    return:\n      type: System.Diagnostics.PerformanceCounter[]\n      description: An array of <xref href=\"System.Diagnostics.PerformanceCounter\"></xref> objects indicating the counters that are associated with this single-instance performance counter category.\n  overload: System.Diagnostics.PerformanceCounterCategory.GetCounters*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The category is not a single instance.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The category does not have an associated instance.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)\n  id: GetCounters(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: GetCounters(String)\n  nameWithType: PerformanceCounterCategory.GetCounters(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.GetCounters(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Retrieves a list of the counters in a performance counter category that contains one or more instances.\n  remarks: \"To represent a single-instance category, pass an empty string (\\\"\\\") for the `instanceName` parameter.  \\n  \\n For more information about performance object instances, see the <xref:System.Diagnostics.PerformanceCounter> class overview.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example gets a list of the <xref:System.Diagnostics.PerformanceCounter> objects in a <xref:System.Diagnostics.PerformanceCounterCategory>. It first creates a <xref:System.Diagnostics.PerformanceCounterCategory> with the appropriate constructor, based on whether a computer name was specified. It then uses the <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> method to return an array of <xref:System.Diagnostics.PerformanceCounter> objects, selecting the <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> overload based on whether an instance name was specified.  \\n  \\n This GetCounters overload fails unless it is used with a category that contains instances.  \\n  \\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/visualbasic/m-system.diagnostics.per_8_1.vb)]\\n [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/cpp/m-system.diagnostics.per_8_1.cpp)]\\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/csharp/m-system.diagnostics.per_8_1.cs)]\"\n  syntax:\n    content: public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);\n    parameters:\n    - id: instanceName\n      type: System.String\n      description: The performance object instance for which to retrieve the list of associated counters.\n    return:\n      type: System.Diagnostics.PerformanceCounter[]\n      description: An array of <xref href=\"System.Diagnostics.PerformanceCounter\"></xref> objects indicating the counters that are associated with the specified object instance of this performance counter category.\n  overload: System.Diagnostics.PerformanceCounterCategory.GetCounters*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>instanceName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property for this <xref href=\\\"System.Diagnostics.PerformanceCounterCategory\\\"></xref> instance has not been set.  \\n  \\n -or-  \\n  \\n The category does not contain the instance that is specified by the <code>instanceName</code> parameter.\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames\n  id: GetInstanceNames\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: GetInstanceNames()\n  nameWithType: PerformanceCounterCategory.GetInstanceNames()\n  fullName: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Retrieves the list of performance object instances that are associated with this category.\n  remarks: \"> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example gets a list of the <xref:System.Diagnostics.PerformanceCounter> objects in a <xref:System.Diagnostics.PerformanceCounterCategory>. It first creates a <xref:System.Diagnostics.PerformanceCounterCategory> object, using the appropriate constructor based on whether a computer name was specified. It then uses GetInstanceNames to return the instance names as an array of <xref:System.String>, which it sorts and displays.  \\n  \\n [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/add/codesnippet/cpp/m-system.diagnostics.per_0_1.cpp)]\\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/add/codesnippet/csharp/m-system.diagnostics.per_0_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/add/codesnippet/visualbasic/m-system.diagnostics.per_0_1.vb)]\"\n  syntax:\n    content: public string[] GetInstanceNames ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: An array of strings representing the performance object instance names that are associated with this category or, if the category contains only one performance object instance, a single-entry array that contains an empty string (\"\").\n  overload: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>. The property might not have been set.  \\n  \\n -or-  \\n  \\n The category does not have an associated instance.\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)\n  id: InstanceExists(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: InstanceExists(String)\n  nameWithType: PerformanceCounterCategory.InstanceExists(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether the specified performance object instance exists in the category that is identified by this <xref href=\"System.Diagnostics.PerformanceCounterCategory\"></xref> object's <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property.\n  remarks: \"This overload of InstanceExists is not `static`. It requires you to create a <xref:System.Diagnostics.PerformanceCounterCategory> object and to set the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example determines whether a <xref:System.Diagnostics.PerformanceCounter> instance exists within a <xref:System.Diagnostics.PerformanceCounterCategory>. It first creates a <xref:System.Diagnostics.PerformanceCounterCategory> object, using the appropriate constructor based on whether a computer name was specified. It then uses InstanceExists to determine whether the specified instance exists, then informs the user. If no instance name is specified, the example uses the default single-instance name.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/add/codesnippet/csharp/m-system.diagnostics.per_1_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/add/codesnippet/visualbasic/m-system.diagnostics.per_1_1.vb)]\"\n  syntax:\n    content: public bool InstanceExists (string instanceName);\n    parameters:\n    - id: instanceName\n      type: System.String\n      description: The performance object instance in this performance counter category to search for.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the category contains the specified performance object instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.PerformanceCounterCategory.InstanceExists*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. The property might not have been set.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>instanceName</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)\n  id: InstanceExists(System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: InstanceExists(String,String)\n  nameWithType: PerformanceCounterCategory.InstanceExists(String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether a specified category on the local computer contains the specified performance object instance.\n  remarks: \"It is not possible to determine whether a performance object instance exists on a computer without specifying a specific category to look in.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example uses the static overloads of <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> to determine whether the given <xref:System.Diagnostics.PerformanceCounter> instance exists in the <xref:System.Diagnostics.PerformanceCounterCategory>. The overload is selected based on whether a computer name is specified. If no instance name is specified, the example uses the default single-instance name.  \\n  \\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/add/codesnippet/visualbasic/adb05d13-bcb8-4c81-ad06-_1.vb)]\\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/add/codesnippet/csharp/adb05d13-bcb8-4c81-ad06-_1.cs)]\"\n  syntax:\n    content: public static bool InstanceExists (string instanceName, string categoryName);\n    parameters:\n    - id: instanceName\n      type: System.String\n      description: The performance object instance to search for.\n    - id: categoryName\n      type: System.String\n      description: The performance counter category to search.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the category contains the specified performance object instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.PerformanceCounterCategory.InstanceExists*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>instanceName</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>categoryName</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>categoryName</code> parameter is an empty string (\"\").\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)\n  id: InstanceExists(System.String,System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: InstanceExists(String,String,String)\n  nameWithType: PerformanceCounterCategory.InstanceExists(String,String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String,String,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether a specified category on a specified computer contains the specified performance object instance.\n  remarks: \"It is not possible to determine whether a performance object instance exists on a computer without specifying a specific category to look in.  \\n  \\n You can use \\\".\\\" to specify the local computer.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example uses the static overloads of <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> to determine whether the given <xref:System.Diagnostics.PerformanceCounter> instance exists in the <xref:System.Diagnostics.PerformanceCounterCategory>. The overload is selected based on whether a computer name is specified. If no instance name is specified, the example uses the default single-instance name.  \\n  \\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/add/codesnippet/visualbasic/c05b631a-0e63-4d23-8d88-_1.vb)]\\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/add/codesnippet/csharp/c05b631a-0e63-4d23-8d88-_1.cs)]\"\n  syntax:\n    content: public static bool InstanceExists (string instanceName, string categoryName, string machineName);\n    parameters:\n    - id: instanceName\n      type: System.String\n      description: The performance object instance to search for.\n    - id: categoryName\n      type: System.String\n      description: The performance counter category to search.\n    - id: machineName\n      type: System.String\n      description: The name of the computer on which to look for the category instance pair.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the category contains the specified performance object instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.PerformanceCounterCategory.InstanceExists*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>instanceName</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>categoryName</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>categoryName</code> parameter is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n The <code>machineName</code> parameter is invalid.\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.MachineName\n  id: MachineName\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: MachineName\n  nameWithType: PerformanceCounterCategory.MachineName\n  fullName: System.Diagnostics.PerformanceCounterCategory.MachineName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets or sets the name of the computer on which this category exists.\n  remarks: ''\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.PerformanceCounterCategory> with the <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor> constructor. It prompts the user for the <xref:System.Diagnostics.PerformanceCounterCategory> and the computer names, then sets the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> and MachineName properties from the entered values. It then displays the values of the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, MachineName, and <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> properties, or it displays an error message if the <xref:System.Diagnostics.PerformanceCounterCategory> cannot be accessed.  \\n  \\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/csharp/p-system.diagnostics.per_1_1.cs)]\\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/visualbasic/p-system.diagnostics.per_1_1.vb)]\"\n  syntax:\n    content: public string MachineName { get; set; }\n    return:\n      type: System.String\n      description: The name of the computer on which the performance counter category and its associated counters exist.\n  overload: System.Diagnostics.PerformanceCounterCategory.MachineName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The MachineName syntax is invalid.\n  platform:\n  - net462\n- uid: System.Diagnostics.PerformanceCounterCategory.ReadCategory\n  id: ReadCategory\n  parent: System.Diagnostics.PerformanceCounterCategory\n  langs:\n  - csharp\n  name: ReadCategory()\n  nameWithType: PerformanceCounterCategory.ReadCategory()\n  fullName: System.Diagnostics.PerformanceCounterCategory.ReadCategory()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Reads all the counter and performance object instance data that is associated with this performance counter category.\n  remarks: \"You must set the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property before you call ReadCategory.  \\n  \\n Reading the entire category at once can be as efficient as reading a single counter because of the way that the system provides the data.  \\n  \\n> [!NOTE]\\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \\n>   \\n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \\n>   \\n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.PerformanceCounterCategory> for a specified <xref:System.Diagnostics.PerformanceCounterCategory> name. It then uses ReadCategory to return an <xref:System.Diagnostics.InstanceDataCollectionCollection> that contains instance data for all the instances of the <xref:System.Diagnostics.PerformanceCounter> objects within the <xref:System.Diagnostics.PerformanceCounterCategory>.  \\n  \\n [!code-cs[System.Diagnostics.InstanceData.CopyTo#6](~/add/codesnippet/csharp/m-system.diagnostics.per_9_1.cs)]\\n [!code-vb[System.Diagnostics.InstanceData.CopyTo#6](~/add/codesnippet/visualbasic/m-system.diagnostics.per_9_1.vb)]\"\n  syntax:\n    content: public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();\n    parameters: []\n    return:\n      type: System.Diagnostics.InstanceDataCollectionCollection\n      description: An <xref href=\"System.Diagnostics.InstanceDataCollectionCollection\"></xref> that contains the counter and performance object instance data for the category.\n  overload: System.Diagnostics.PerformanceCounterCategory.ReadCategory*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. The property might not have been set.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: A call to an underlying system API failed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Code that is executing without administrative privileges attempted to read a performance counter.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ComponentModel.Win32Exception\n  parent: System.ComponentModel\n  isExternal: false\n  name: Win32Exception\n  nameWithType: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n- uid: System.UnauthorizedAccessException\n  isExternal: true\n  name: System.UnauthorizedAccessException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.IO.IOException\n  isExternal: true\n  name: System.IO.IOException\n- uid: System.Diagnostics.PerformanceCounterCategory.#ctor\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: PerformanceCounterCategory()\n  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory()\n  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory()\n- uid: System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: PerformanceCounterCategory(String)\n  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: PerformanceCounterCategory(String,String)\n  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory(String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory(String,String)\n- uid: System.Diagnostics.PerformanceCounterCategory.CategoryHelp\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: CategoryHelp\n  nameWithType: PerformanceCounterCategory.CategoryHelp\n  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryHelp\n- uid: System.Diagnostics.PerformanceCounterCategory.CategoryName\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: CategoryName\n  nameWithType: PerformanceCounterCategory.CategoryName\n  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryName\n- uid: System.Diagnostics.PerformanceCounterCategory.CategoryType\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: CategoryType\n  nameWithType: PerformanceCounterCategory.CategoryType\n  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryType\n- uid: System.Diagnostics.PerformanceCounterCategoryType\n  parent: System.Diagnostics\n  isExternal: false\n  name: PerformanceCounterCategoryType\n  nameWithType: PerformanceCounterCategoryType\n  fullName: System.Diagnostics.PerformanceCounterCategoryType\n- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: CounterExists(String)\n  nameWithType: PerformanceCounterCategory.CounterExists(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: CounterExists(String,String)\n  nameWithType: PerformanceCounterCategory.CounterExists(String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String,String)\n- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: CounterExists(String,String,String)\n  nameWithType: PerformanceCounterCategory.CounterExists(String,String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String,String,String)\n- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: Create(String,String,CounterCreationDataCollection)\n  nameWithType: PerformanceCounterCategory.Create(String,String,CounterCreationDataCollection)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,CounterCreationDataCollection)\n- uid: System.Diagnostics.PerformanceCounterCategory\n  parent: System.Diagnostics\n  isExternal: false\n  name: PerformanceCounterCategory\n  nameWithType: PerformanceCounterCategory\n  fullName: System.Diagnostics.PerformanceCounterCategory\n- uid: System.Diagnostics.CounterCreationDataCollection\n  parent: System.Diagnostics\n  isExternal: false\n  name: CounterCreationDataCollection\n  nameWithType: CounterCreationDataCollection\n  fullName: System.Diagnostics.CounterCreationDataCollection\n- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)\n  nameWithType: PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)\n- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: Create(String,String,String,String)\n  nameWithType: PerformanceCounterCategory.Create(String,String,String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,String,String)\n- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: Create(String,String,PerformanceCounterCategoryType,String,String)\n  nameWithType: PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,String,String)\n- uid: System.Diagnostics.PerformanceCounterCategory.Delete(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: Delete(String)\n  nameWithType: PerformanceCounterCategory.Delete(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Delete(String)\n- uid: System.Diagnostics.PerformanceCounterCategory.Exists(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: Exists(String)\n  nameWithType: PerformanceCounterCategory.Exists(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Exists(String)\n- uid: System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: Exists(String,String)\n  nameWithType: PerformanceCounterCategory.Exists(String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.Exists(String,String)\n- uid: System.Diagnostics.PerformanceCounterCategory.GetCategories\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: GetCategories()\n  nameWithType: PerformanceCounterCategory.GetCategories()\n  fullName: System.Diagnostics.PerformanceCounterCategory.GetCategories()\n- uid: System.Diagnostics.PerformanceCounterCategory[]\n  parent: System.Diagnostics\n  isExternal: false\n  name: PerformanceCounterCategory\n  nameWithType: PerformanceCounterCategory\n  fullName: System.Diagnostics.PerformanceCounterCategory[]\n  spec.csharp:\n  - uid: System.Diagnostics.PerformanceCounterCategory\n    name: PerformanceCounterCategory\n    nameWithType: PerformanceCounterCategory\n    fullName: PerformanceCounterCategory[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: GetCategories(String)\n  nameWithType: PerformanceCounterCategory.GetCategories(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.GetCategories(String)\n- uid: System.Diagnostics.PerformanceCounterCategory.GetCounters\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: GetCounters()\n  nameWithType: PerformanceCounterCategory.GetCounters()\n  fullName: System.Diagnostics.PerformanceCounterCategory.GetCounters()\n- uid: System.Diagnostics.PerformanceCounter[]\n  parent: System.Diagnostics\n  isExternal: false\n  name: PerformanceCounter\n  nameWithType: PerformanceCounter\n  fullName: System.Diagnostics.PerformanceCounter[]\n  spec.csharp:\n  - uid: System.Diagnostics.PerformanceCounter\n    name: PerformanceCounter\n    nameWithType: PerformanceCounter\n    fullName: PerformanceCounter[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: GetCounters(String)\n  nameWithType: PerformanceCounterCategory.GetCounters(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.GetCounters(String)\n- uid: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: GetInstanceNames()\n  nameWithType: PerformanceCounterCategory.GetInstanceNames()\n  fullName: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames()\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: InstanceExists(String)\n  nameWithType: PerformanceCounterCategory.InstanceExists(String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String)\n- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: InstanceExists(String,String)\n  nameWithType: PerformanceCounterCategory.InstanceExists(String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String,String)\n- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: InstanceExists(String,String,String)\n  nameWithType: PerformanceCounterCategory.InstanceExists(String,String,String)\n  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String,String,String)\n- uid: System.Diagnostics.PerformanceCounterCategory.MachineName\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: MachineName\n  nameWithType: PerformanceCounterCategory.MachineName\n  fullName: System.Diagnostics.PerformanceCounterCategory.MachineName\n- uid: System.Diagnostics.PerformanceCounterCategory.ReadCategory\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: ReadCategory()\n  nameWithType: PerformanceCounterCategory.ReadCategory()\n  fullName: System.Diagnostics.PerformanceCounterCategory.ReadCategory()\n- uid: System.Diagnostics.InstanceDataCollectionCollection\n  parent: System.Diagnostics\n  isExternal: false\n  name: InstanceDataCollectionCollection\n  nameWithType: InstanceDataCollectionCollection\n  fullName: System.Diagnostics.InstanceDataCollectionCollection\n- uid: System.Diagnostics.PerformanceCounterCategory.#ctor*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: PerformanceCounterCategory\n  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory\n- uid: System.Diagnostics.PerformanceCounterCategory.CategoryHelp*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: CategoryHelp\n  nameWithType: PerformanceCounterCategory.CategoryHelp\n- uid: System.Diagnostics.PerformanceCounterCategory.CategoryName*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: CategoryName\n  nameWithType: PerformanceCounterCategory.CategoryName\n- uid: System.Diagnostics.PerformanceCounterCategory.CategoryType*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: CategoryType\n  nameWithType: PerformanceCounterCategory.CategoryType\n- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: CounterExists\n  nameWithType: PerformanceCounterCategory.CounterExists\n- uid: System.Diagnostics.PerformanceCounterCategory.Create*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: Create\n  nameWithType: PerformanceCounterCategory.Create\n- uid: System.Diagnostics.PerformanceCounterCategory.Delete*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: Delete\n  nameWithType: PerformanceCounterCategory.Delete\n- uid: System.Diagnostics.PerformanceCounterCategory.Exists*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: Exists\n  nameWithType: PerformanceCounterCategory.Exists\n- uid: System.Diagnostics.PerformanceCounterCategory.GetCategories*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: GetCategories\n  nameWithType: PerformanceCounterCategory.GetCategories\n- uid: System.Diagnostics.PerformanceCounterCategory.GetCounters*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: GetCounters\n  nameWithType: PerformanceCounterCategory.GetCounters\n- uid: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: GetInstanceNames\n  nameWithType: PerformanceCounterCategory.GetInstanceNames\n- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: InstanceExists\n  nameWithType: PerformanceCounterCategory.InstanceExists\n- uid: System.Diagnostics.PerformanceCounterCategory.MachineName*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: MachineName\n  nameWithType: PerformanceCounterCategory.MachineName\n- uid: System.Diagnostics.PerformanceCounterCategory.ReadCategory*\n  parent: System.Diagnostics.PerformanceCounterCategory\n  isExternal: false\n  name: ReadCategory\n  nameWithType: PerformanceCounterCategory.ReadCategory\n"}