{"nodes":[{"pos":[628,700],"content":"Enumerates the types of data pointers passed to speech synthesis events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enumerates the types of data pointers passed to speech synthesis events.","pos":[0,72]}]},{"pos":[713,1408],"content":"EventParameterType is used when constructing a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> object. An instance of EventParameterType passed as the `parameterType` argument to the constructor for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> specifies how the `param2` argument of the constructor (which must be a `System.IntPtr`) is interpreted.       The choice of EventParameterType is dictated by the type of event being requested, as specified by a member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.       For detailed information on how use EventParameterType, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>","needQuote":false,"needEscape":true,"nodes":[{"content":"EventParameterType is used when constructing a &lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt; object.","pos":[0,111],"source":"EventParameterType is used when constructing a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> object."},{"content":"An instance of EventParameterType passed as the <ph id=\"ph1\">`parameterType`</ph> argument to the constructor for &lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt; specifies how the <ph id=\"ph2\">`param2`</ph> argument of the constructor (which must be a <ph id=\"ph3\">`System.IntPtr`</ph>) is interpreted.","pos":[112,369],"source":" An instance of EventParameterType passed as the `parameterType` argument to the constructor for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> specifies how the `param2` argument of the constructor (which must be a `System.IntPtr`) is interpreted."},{"content":"The choice of EventParameterType is dictated by the type of event being requested, as specified by a member of &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEventId&gt;.","pos":[376,539],"source":"       The choice of EventParameterType is dictated by the type of event being requested, as specified by a member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>."},{"content":"For detailed information on how use EventParameterType, see documentation for &lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A&gt;","pos":[546,691],"source":"       For detailed information on how use EventParameterType, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>"}]},{"pos":[6034,6058],"content":"Currently not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Currently not supported.","pos":[0,24]}]},{"pos":[6185,6197],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6639,6663],"content":"Currently not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Currently not supported.","pos":[0,24]}]},{"pos":[6791,6803],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7240,7778],"content":"Indicates that the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">param2</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument to the <bpt id=\"p2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is a <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_System.IntPtr\" name=\"System.IntPtr\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> created using <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni\" name=\"System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> referencing a <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_System.String\" name=\"System.String\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> object; <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph2\">param1</ph><ept id=\"p6\">&lt;/code&gt;</ept> may take on any value.","needQuote":true,"needEscape":true,"source":"Indicates that the <code>param2</code> argument to the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is a <xref uid=\"langword_csharp_System.IntPtr\" name=\"System.IntPtr\" href=\"\"></xref> created using <xref uid=\"langword_csharp_System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni\" name=\"System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni\" href=\"\"></xref> referencing a <xref uid=\"langword_csharp_System.String\" name=\"System.String\" href=\"\"></xref> object; <code>param1</code> may take on any value."},{"pos":[7905,7917],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8349,8479],"content":"Indicates that the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">param2</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument to the <bpt id=\"p2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is a","needQuote":true,"needEscape":true,"source":"Indicates that the <code>param2</code> argument to the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is a"},{"pos":[8492,9005],"content":"is a `System.IntPtr` created using `System.Runtime.InteropServices.Marshal.PtrToStructure`       referencing a Windows Desktop Speech Technology token --a Windows Desktop Speech Technology object representing a resource, such as a voice (<xref:System.Speech.Synthesis.VoiceInfo>); `param1` may take on any value.      > [!NOTE] >  Currently instances of a managed synthetic speech engines, written using the members of the <xref:System.Speech.Synthesis> name space, cannot change resources after construction","needQuote":false,"needEscape":true,"nodes":[{"content":"is a <ph id=\"ph1\">`System.IntPtr`</ph> created using <ph id=\"ph2\">`System.Runtime.InteropServices.Marshal.PtrToStructure`</ph>       referencing a Windows Desktop Speech Technology token --a Windows Desktop Speech Technology object representing a resource, such as a voice (&lt;xref:System.Speech.Synthesis.VoiceInfo&gt;); <ph id=\"ph3\">`param1`</ph> may take on any value.","pos":[0,312],"source":"is a `System.IntPtr` created using `System.Runtime.InteropServices.Marshal.PtrToStructure`       referencing a Windows Desktop Speech Technology token --a Windows Desktop Speech Technology object representing a resource, such as a voice (<xref:System.Speech.Synthesis.VoiceInfo>); `param1` may take on any value."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Currently instances of a managed synthetic speech engines, written using the members of the &lt;xref:System.Speech.Synthesis&gt; name space, cannot change resources after construction","pos":[318,508],"source":"      > [!NOTE] >  Currently instances of a managed synthetic speech engines, written using the members of the <xref:System.Speech.Synthesis> name space, cannot change resources after construction"}]},{"pos":[9132,9144],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9596,9735],"content":"Indicates that the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">param2</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument to the <bpt id=\"p2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is undefined.","needQuote":true,"needEscape":true,"source":"Indicates that the <code>param2</code> argument to the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is undefined."},{"pos":[9747,10139],"content":"Generally, `param1` and `param2` are then ignored. However, if<xref:System.Speech.Synthesis.TtsEngine.TtsEventId> is <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>, a progress meter event can be generated `param1` should be an integer containing the length of the current word, and `param2` a `System.IntPtr` referencing an integer containing the offset of the current word.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generally, <ph id=\"ph1\">`param1`</ph> and <ph id=\"ph2\">`param2`</ph> are then ignored.","pos":[0,50],"source":"Generally, `param1` and `param2` are then ignored."},{"content":"However, if&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEventId&gt; is &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary&gt;, a progress meter event can be generated <ph id=\"ph1\">`param1`</ph> should be an integer containing the length of the current word, and <ph id=\"ph2\">`param2`</ph> a <ph id=\"ph3\">`System.IntPtr`</ph> referencing an integer containing the offset of the current word.","pos":[51,392],"source":" However, if<xref:System.Speech.Synthesis.TtsEngine.TtsEventId> is <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>, a progress meter event can be generated `param1` should be an integer containing the length of the current word, and `param2` a `System.IntPtr` referencing an integer containing the offset of the current word."}]},{"pos":[10269,10281],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType\n  id: EventParameterType\n  children:\n  - System.Speech.Synthesis.TtsEngine.EventParameterType.Object\n  - System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer\n  - System.Speech.Synthesis.TtsEngine.EventParameterType.String\n  - System.Speech.Synthesis.TtsEngine.EventParameterType.Token\n  - System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined\n  langs:\n  - csharp\n  name: EventParameterType\n  nameWithType: EventParameterType\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType\n  type: Enum\n  summary: Enumerates the types of data pointers passed to speech synthesis events.\n  remarks: \"EventParameterType is used when constructing a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> object. An instance of EventParameterType passed as the `parameterType` argument to the constructor for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> specifies how the `param2` argument of the constructor (which must be a `System.IntPtr`) is interpreted.  \\n  \\n The choice of EventParameterType is dictated by the type of event being requested, as specified by a member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.  \\n  \\n For detailed information on how use EventParameterType, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>\"\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n         The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including the EventParameterType member value returned by <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>, are used to log the event generated through the `LogSpeechEvent` method.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n         LogSpeechEvent(spEvent.EventId,   \\n                        spEvent.ParameterType,   \\n                        spEvent.Param1,  \\n                        spEvent.Param2);  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public enum EventParameterType\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Object\n  id: Object\n  parent: System.Speech.Synthesis.TtsEngine.EventParameterType\n  langs:\n  - csharp\n  name: Object\n  nameWithType: EventParameterType.Object\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Object\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Currently not supported.\n  syntax:\n    content: Object\n    return:\n      type: System.Speech.Synthesis.TtsEngine.EventParameterType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer\n  id: Pointer\n  parent: System.Speech.Synthesis.TtsEngine.EventParameterType\n  langs:\n  - csharp\n  name: Pointer\n  nameWithType: EventParameterType.Pointer\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Currently not supported.\n  syntax:\n    content: Pointer\n    return:\n      type: System.Speech.Synthesis.TtsEngine.EventParameterType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.String\n  id: String\n  parent: System.Speech.Synthesis.TtsEngine.EventParameterType\n  langs:\n  - csharp\n  name: String\n  nameWithType: EventParameterType.String\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.String\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Indicates that the <code>param2</code> argument to the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is a <xref uid=\"langword_csharp_System.IntPtr\" name=\"System.IntPtr\" href=\"\"></xref> created using <xref uid=\"langword_csharp_System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni\" name=\"System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni\" href=\"\"></xref> referencing a <xref uid=\"langword_csharp_System.String\" name=\"System.String\" href=\"\"></xref> object; <code>param1</code> may take on any value.\n  syntax:\n    content: String\n    return:\n      type: System.Speech.Synthesis.TtsEngine.EventParameterType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Token\n  id: Token\n  parent: System.Speech.Synthesis.TtsEngine.EventParameterType\n  langs:\n  - csharp\n  name: Token\n  nameWithType: EventParameterType.Token\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Token\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Indicates that the <code>param2</code> argument to the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is a\n  remarks: \"is a `System.IntPtr` created using `System.Runtime.InteropServices.Marshal.PtrToStructure`  \\n  \\n referencing a Windows Desktop Speech Technology token --a Windows Desktop Speech Technology object representing a resource, such as a voice (<xref:System.Speech.Synthesis.VoiceInfo>); `param1` may take on any value.  \\n  \\n> [!NOTE]\\n>  Currently instances of a managed synthetic speech engines, written using the members of the <xref:System.Speech.Synthesis> name space, cannot change resources after construction\"\n  syntax:\n    content: Token\n    return:\n      type: System.Speech.Synthesis.TtsEngine.EventParameterType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined\n  id: Undefined\n  parent: System.Speech.Synthesis.TtsEngine.EventParameterType\n  langs:\n  - csharp\n  name: Undefined\n  nameWithType: EventParameterType.Undefined\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Indicates that the <code>param2</code> argument to the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is undefined.\n  remarks: Generally, `param1` and `param2` are then ignored. However, if<xref:System.Speech.Synthesis.TtsEngine.TtsEventId> is <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>, a progress meter event can be generated `param1` should be an integer containing the length of the current word, and `param2` a `System.IntPtr` referencing an integer containing the offset of the current word.\n  syntax:\n    content: Undefined\n    return:\n      type: System.Speech.Synthesis.TtsEngine.EventParameterType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Object\n  parent: System.Speech.Synthesis.TtsEngine.EventParameterType\n  isExternal: false\n  name: Object\n  nameWithType: EventParameterType.Object\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Object\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType\n  parent: System.Speech.Synthesis.TtsEngine\n  isExternal: false\n  name: EventParameterType\n  nameWithType: EventParameterType\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer\n  parent: System.Speech.Synthesis.TtsEngine.EventParameterType\n  isExternal: false\n  name: Pointer\n  nameWithType: EventParameterType.Pointer\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.String\n  parent: System.Speech.Synthesis.TtsEngine.EventParameterType\n  isExternal: false\n  name: String\n  nameWithType: EventParameterType.String\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.String\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Token\n  parent: System.Speech.Synthesis.TtsEngine.EventParameterType\n  isExternal: false\n  name: Token\n  nameWithType: EventParameterType.Token\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Token\n- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined\n  parent: System.Speech.Synthesis.TtsEngine.EventParameterType\n  isExternal: false\n  name: Undefined\n  nameWithType: EventParameterType.Undefined\n  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined\n"}