{"nodes":[{"pos":[1257,1321],"content":"A collection of headers and their values as defined in RFC 2616.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of headers and their values as defined in RFC 2616.","pos":[0,64]}]},{"pos":[2121,2218],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> class."},{"pos":[2920,3038],"content":"Adds the specified header and its values into the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Adds the specified header and its values into the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection."},{"pos":[3051,3363],"content":"The header `values` will be parsed and validated.       If the specified header does not exist, the Add method inserts a new header into the list of header name/value pairs.       If the specified header is already present, `values` are added to the comma-separated list of values associated with the header.","needQuote":false,"needEscape":true,"nodes":[{"content":"The header <ph id=\"ph1\">`values`</ph> will be parsed and validated.","pos":[0,49],"source":"The header `values` will be parsed and validated."},{"content":"If the specified header does not exist, the Add method inserts a new header into the list of header name/value pairs.","pos":[56,173]},{"content":"If the specified header is already present, <ph id=\"ph1\">`values`</ph> are added to the comma-separated list of values associated with the header.","pos":[180,308],"source":"       If the specified header is already present, `values` are added to the comma-separated list of values associated with the header."}]},{"pos":[3550,3586],"content":"The header to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The header to add to the collection.","pos":[0,36]}]},{"pos":[3689,3738],"content":"A list of header values to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of header values to add to the collection.","pos":[0,49]}]},{"pos":[4251,4368],"content":"Adds the specified header and its value into the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Adds the specified header and its value into the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection."},{"pos":[4381,4690],"content":"The header `value` will be parsed and validated.       If the specified header does not exist, the Add method inserts a new header into the list of header name/value pairs.       If the specified header is already present, `value` is added to the comma-separated list of values associated with the header.","needQuote":false,"needEscape":true,"nodes":[{"content":"The header <ph id=\"ph1\">`value`</ph> will be parsed and validated.","pos":[0,48],"source":"The header `value` will be parsed and validated."},{"content":"If the specified header does not exist, the Add method inserts a new header into the list of header name/value pairs.","pos":[55,172]},{"content":"If the specified header is already present, <ph id=\"ph1\">`value`</ph> is added to the comma-separated list of values associated with the header.","pos":[179,305],"source":"       If the specified header is already present, `value` is added to the comma-separated list of values associated with the header."}]},{"pos":[4836,4872],"content":"The header to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The header to add to the collection.","pos":[0,36]}]},{"pos":[4934,4960],"content":"The content of the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The content of the header.","pos":[0,26]}]},{"pos":[5386,5483],"content":"Removes all headers from the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes all headers from the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection."},{"pos":[6038,6150],"content":"Returns if  a specific header exists in the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Returns if  a specific header exists in the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection."},{"pos":[6286,6306],"content":"The specific header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specific header.","pos":[0,20]}]},{"pos":[6365,6549],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is the specified header exists in the collection; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is the specified header exists in the collection; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7020,7137],"content":"Returns an enumerator that can iterate through the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns an enumerator that can iterate through the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> instance."},{"pos":[7532,7611],"content":"An enumerator for the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerator for the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref>."},{"pos":[8115,8246],"content":"Returns all header values for a specified header stored in the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Returns all header values for a specified header stored in the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection."},{"pos":[8425,8467],"content":"The specified header to return values for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified header to return values for.","pos":[0,42]}]},{"pos":[8565,8592],"content":"An array of header strings.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of header strings.","pos":[0,27]}]},{"pos":[9077,9183],"content":"Removes the specified header from the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes the specified header from the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection."},{"pos":[9317,9370],"content":"The name of the header to remove from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the header to remove from the collection.","pos":[0,53]}]},{"pos":[9429,9459],"content":"Returns <xref:System.Boolean>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Boolean&gt;.","pos":[0,30],"source":"Returns <xref:System.Boolean>."}]},{"pos":[10097,10200],"content":"Gets an enumerator that can iterate through a <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an enumerator that can iterate through a <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref>."},{"pos":[10378,10539],"content":"An instance of an implementation of an &lt;xref:System.Collections.IEnumerator&gt; that can iterate through a <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An instance of an implementation of an <xref:System.Collections.IEnumerator> that can iterate through a <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref>."},{"pos":[11021,11130],"content":"Returns a string that represents the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a string that represents the current <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> object."},{"pos":[11266,11310],"content":"A string that represents the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the current object.","pos":[0,44]}]},{"pos":[12047,12252],"content":"Returns a value that indicates whether the specified header and its values were added to the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection without validating the provided information.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified header and its values were added to the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection without validating the provided information."},{"pos":[12458,12494],"content":"The header to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The header to add to the collection.","pos":[0,36]}]},{"pos":[12597,12622],"content":"The values of the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The values of the header.","pos":[0,25]}]},{"pos":[12681,12915],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified header <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">values</ph><ept id=\"p3\">&lt;/code&gt;</ept> could be added to the collection; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified header <code>name</code> and <code>values</code> could be added to the collection; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13548,13752],"content":"Returns a value that indicates whether the specified header and its value were added to the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection without validating the provided information.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified header and its value were added to the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection without validating the provided information."},{"pos":[13917,13953],"content":"The header to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The header to add to the collection.","pos":[0,36]}]},{"pos":[14015,14041],"content":"The content of the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The content of the header.","pos":[0,26]}]},{"pos":[14100,14333],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified header <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p3\">&lt;/code&gt;</ept> could be added to the collection; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified header <code>name</code> and <code>value</code> could be added to the collection; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15032,15168],"content":"Return if a specified header and specified values are stored in the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.HttpHeaders\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Return if a specified header and specified values are stored in the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection."},{"pos":[15367,15388],"content":"The specified header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified header.","pos":[0,21]}]},{"pos":[15491,15519],"content":"The specified header values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified header values.","pos":[0,28]}]},{"pos":[15578,15853],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is the specified header <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_values\" name=\"values\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> are stored in the collection; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is the specified header <code>name</code> and <xref uid=\"langword_csharp_values\" name=\"values\" href=\"\"></xref> are stored in the collection; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.Headers.HttpHeaders\n  id: HttpHeaders\n  children:\n  - System.Net.Http.Headers.HttpHeaders.#ctor\n  - System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})\n  - System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)\n  - System.Net.Http.Headers.HttpHeaders.Clear\n  - System.Net.Http.Headers.HttpHeaders.Contains(System.String)\n  - System.Net.Http.Headers.HttpHeaders.GetEnumerator\n  - System.Net.Http.Headers.HttpHeaders.GetValues(System.String)\n  - System.Net.Http.Headers.HttpHeaders.Remove(System.String)\n  - System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator\n  - System.Net.Http.Headers.HttpHeaders.ToString\n  - System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})\n  - System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)\n  - System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)\n  langs:\n  - csharp\n  name: HttpHeaders\n  nameWithType: HttpHeaders\n  fullName: System.Net.Http.Headers.HttpHeaders\n  type: Class\n  summary: A collection of headers and their values as defined in RFC 2616.\n  syntax:\n    content: 'public abstract class HttpHeaders : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: HttpHeaders()\n  nameWithType: HttpHeaders.HttpHeaders()\n  fullName: System.Net.Http.Headers.HttpHeaders.HttpHeaders()\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> class.\n  syntax:\n    content: protected HttpHeaders ();\n    parameters: []\n  overload: System.Net.Http.Headers.HttpHeaders.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})\n  id: Add(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: Add(String,IEnumerable<String>)\n  nameWithType: HttpHeaders.Add(String,IEnumerable<String>)\n  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,IEnumerable<String>)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Adds the specified header and its values into the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection.\n  remarks: \"The header `values` will be parsed and validated.  \\n  \\n If the specified header does not exist, the Add method inserts a new header into the list of header name/value pairs.  \\n  \\n If the specified header is already present, `values` are added to the comma-separated list of values associated with the header.\"\n  syntax:\n    content: public void Add (string name, System.Collections.Generic.IEnumerable<string> values);\n    parameters:\n    - id: name\n      type: System.String\n      description: The header to add to the collection.\n    - id: values\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: A list of header values to add to the collection.\n  overload: System.Net.Http.Headers.HttpHeaders.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)\n  id: Add(System.String,System.String)\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: Add(String,String)\n  nameWithType: HttpHeaders.Add(String,String)\n  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Adds the specified header and its value into the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection.\n  remarks: \"The header `value` will be parsed and validated.  \\n  \\n If the specified header does not exist, the Add method inserts a new header into the list of header name/value pairs.  \\n  \\n If the specified header is already present, `value` is added to the comma-separated list of values associated with the header.\"\n  syntax:\n    content: public void Add (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The header to add to the collection.\n    - id: value\n      type: System.String\n      description: The content of the header.\n  overload: System.Net.Http.Headers.HttpHeaders.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.Clear\n  id: Clear\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: HttpHeaders.Clear()\n  fullName: System.Net.Http.Headers.HttpHeaders.Clear()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Removes all headers from the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Net.Http.Headers.HttpHeaders.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: HttpHeaders.Contains(String)\n  fullName: System.Net.Http.Headers.HttpHeaders.Contains(String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Returns if  a specific header exists in the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection.\n  syntax:\n    content: public bool Contains (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The specific header.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is the specified header exists in the collection; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.HttpHeaders.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.GetEnumerator\n  id: GetEnumerator\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: HttpHeaders.GetEnumerator()\n  fullName: System.Net.Http.Headers.HttpHeaders.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Returns an enumerator that can iterate through the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> instance.\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}}\n      description: An enumerator for the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref>.\n  overload: System.Net.Http.Headers.HttpHeaders.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.GetValues(System.String)\n  id: GetValues(System.String)\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: GetValues(String)\n  nameWithType: HttpHeaders.GetValues(String)\n  fullName: System.Net.Http.Headers.HttpHeaders.GetValues(String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Returns all header values for a specified header stored in the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<string> GetValues (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The specified header to return values for.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: An array of header strings.\n  overload: System.Net.Http.Headers.HttpHeaders.GetValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: HttpHeaders.Remove(String)\n  fullName: System.Net.Http.Headers.HttpHeaders.Remove(String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Removes the specified header from the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection.\n  syntax:\n    content: public bool Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the header to remove from the collection.\n    return:\n      type: System.Boolean\n      description: Returns <xref:System.Boolean>.\n  overload: System.Net.Http.Headers.HttpHeaders.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: HttpHeaders.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Gets an enumerator that can iterate through a <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref>.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An instance of an implementation of an <xref:System.Collections.IEnumerator> that can iterate through a <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref>.\n  overload: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: HttpHeaders.ToString()\n  fullName: System.Net.Http.Headers.HttpHeaders.ToString()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Returns a string that represents the current <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current object.\n  overload: System.Net.Http.Headers.HttpHeaders.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})\n  id: TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: TryAddWithoutValidation(String,IEnumerable<String>)\n  nameWithType: HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)\n  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Returns a value that indicates whether the specified header and its values were added to the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection without validating the provided information.\n  syntax:\n    content: public bool TryAddWithoutValidation (string name, System.Collections.Generic.IEnumerable<string> values);\n    parameters:\n    - id: name\n      type: System.String\n      description: The header to add to the collection.\n    - id: values\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The values of the header.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified header <code>name</code> and <code>values</code> could be added to the collection; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)\n  id: TryAddWithoutValidation(System.String,System.String)\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: TryAddWithoutValidation(String,String)\n  nameWithType: HttpHeaders.TryAddWithoutValidation(String,String)\n  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Returns a value that indicates whether the specified header and its value were added to the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection without validating the provided information.\n  syntax:\n    content: public bool TryAddWithoutValidation (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The header to add to the collection.\n    - id: value\n      type: System.String\n      description: The content of the header.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified header <code>name</code> and <code>value</code> could be added to the collection; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)\n  id: TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)\n  parent: System.Net.Http.Headers.HttpHeaders\n  langs:\n  - csharp\n  name: TryGetValues(String,IEnumerable<String>)\n  nameWithType: HttpHeaders.TryGetValues(String,IEnumerable<String>)\n  fullName: System.Net.Http.Headers.HttpHeaders.TryGetValues(String,IEnumerable<String>)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Return if a specified header and specified values are stored in the <xref href=\"System.Net.Http.Headers.HttpHeaders\"></xref> collection.\n  syntax:\n    content: public bool TryGetValues (string name, out System.Collections.Generic.IEnumerable<string> values);\n    parameters:\n    - id: name\n      type: System.String\n      description: The specified header.\n    - id: values\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The specified header values.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is the specified header <code>name</code> and <xref uid=\"langword_csharp_values\" name=\"values\" href=\"\"></xref> are stored in the collection; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.HttpHeaders.TryGetValues*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Net.Http.Headers.HttpHeaders.#ctor\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: HttpHeaders()\n  nameWithType: HttpHeaders.HttpHeaders()\n  fullName: System.Net.Http.Headers.HttpHeaders.HttpHeaders()\n- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: Add(String,IEnumerable<String>)\n  nameWithType: HttpHeaders.Add(String,IEnumerable<String>)\n  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,IEnumerable<String>)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: Add(String,String)\n  nameWithType: HttpHeaders.Add(String,String)\n  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,String)\n- uid: System.Net.Http.Headers.HttpHeaders.Clear\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: Clear()\n  nameWithType: HttpHeaders.Clear()\n  fullName: System.Net.Http.Headers.HttpHeaders.Clear()\n- uid: System.Net.Http.Headers.HttpHeaders.Contains(System.String)\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: Contains(String)\n  nameWithType: HttpHeaders.Contains(String)\n  fullName: System.Net.Http.Headers.HttpHeaders.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.Headers.HttpHeaders.GetEnumerator\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: HttpHeaders.GetEnumerator()\n  fullName: System.Net.Http.Headers.HttpHeaders.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<KeyValuePair<String,IEnumerable<String>>>\n  nameWithType: IEnumerator<KeyValuePair<String,IEnumerable<String>>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.HttpHeaders.GetValues(System.String)\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: GetValues(String)\n  nameWithType: HttpHeaders.GetValues(String)\n  fullName: System.Net.Http.Headers.HttpHeaders.GetValues(String)\n- uid: System.Net.Http.Headers.HttpHeaders.Remove(System.String)\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: Remove(String)\n  nameWithType: HttpHeaders.Remove(String)\n  fullName: System.Net.Http.Headers.HttpHeaders.Remove(String)\n- uid: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: HttpHeaders.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Net.Http.Headers.HttpHeaders.ToString\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: ToString()\n  nameWithType: HttpHeaders.ToString()\n  fullName: System.Net.Http.Headers.HttpHeaders.ToString()\n- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: TryAddWithoutValidation(String,IEnumerable<String>)\n  nameWithType: HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)\n  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)\n- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: TryAddWithoutValidation(String,String)\n  nameWithType: HttpHeaders.TryAddWithoutValidation(String,String)\n  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,String)\n- uid: System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: TryGetValues(String,IEnumerable<String>)\n  nameWithType: HttpHeaders.TryGetValues(String,IEnumerable<String>)\n  fullName: System.Net.Http.Headers.HttpHeaders.TryGetValues(String,IEnumerable<String>)\n- uid: System.Net.Http.Headers.HttpHeaders.#ctor*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: HttpHeaders\n  nameWithType: HttpHeaders.HttpHeaders\n- uid: System.Net.Http.Headers.HttpHeaders.Add*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: Add\n  nameWithType: HttpHeaders.Add\n- uid: System.Net.Http.Headers.HttpHeaders.Clear*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: Clear\n  nameWithType: HttpHeaders.Clear\n- uid: System.Net.Http.Headers.HttpHeaders.Contains*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: Contains\n  nameWithType: HttpHeaders.Contains\n- uid: System.Net.Http.Headers.HttpHeaders.GetEnumerator*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: HttpHeaders.GetEnumerator\n- uid: System.Net.Http.Headers.HttpHeaders.GetValues*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: GetValues\n  nameWithType: HttpHeaders.GetValues\n- uid: System.Net.Http.Headers.HttpHeaders.Remove*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: Remove\n  nameWithType: HttpHeaders.Remove\n- uid: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: HttpHeaders.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Net.Http.Headers.HttpHeaders.ToString*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: ToString\n  nameWithType: HttpHeaders.ToString\n- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: TryAddWithoutValidation\n  nameWithType: HttpHeaders.TryAddWithoutValidation\n- uid: System.Net.Http.Headers.HttpHeaders.TryGetValues*\n  parent: System.Net.Http.Headers.HttpHeaders\n  isExternal: false\n  name: TryGetValues\n  nameWithType: HttpHeaders.TryGetValues\n"}