{"nodes":[{"pos":[5972,6015],"content":"Represents a Windows rich text box control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a Windows rich text box control.","pos":[0,43]}]},{"pos":[6028,10181],"content":"With the RichTextBox control, the user can enter and edit text. The control also provides more advanced formatting features than the standard <xref:System.Windows.Forms.TextBox> control. Text can be assigned directly to the control, or can be loaded from a rich text format (RTF) or plain text file. The text within the control can be assigned character and paragraph formatting.       The RichTextBox control provides a number of properties you can use to apply formatting to any portion of text within the control. To change the formatting of text, it must first be selected. Only selected text can be assigned character and paragraph formatting. Once a setting has been made to a selected section of text, all text entered after the selection is also formatted with the same settings until a setting change is made or a different section of the control's document is selected. The <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A> property enables you to make text bold or italic. You can also use this property to change the size and typeface of the text. The <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> property enables you to change the color of the text. To create bulleted lists you can use the <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> property. You can also adjust paragraph formatting by setting the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A>, <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A>, and <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> properties.       The RichTextBox control provides methods that provide functionality for opening and saving files. The <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method enables you to load an existing RTF or ASCII text file into the control. You can also load data from an already opened data stream. The <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> enables you to save a file to RTF or ASCII text. Similar to the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method, you can also use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method to save to an open data stream. The RichTextBox control also provides features for finding strings of text. The <xref:System.Windows.Forms.RichTextBox.Find%2A> method is overloaded to find both strings of text as well as specific characters within the text of the control.       You can also initialize the RichTextBox control to data stored in memory. For example, you can initialize the <xref:System.Windows.Forms.RichTextBox.Rtf%2A> property to a string that contains the text to display, including the RTF codes that determine how the text should be formatted.       If the text within the control contains links, such as a link to a Web site, you can use the <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A> property to display the link appropriately in the control's text. You can then handle the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event to perform the tasks associated with the link. The <xref:System.Windows.Forms.RichTextBox.SelectionProtected%2A> property enables you to protect text within the control from manipulation by the user. With protected text in your control, you can handle the <xref:System.Windows.Forms.RichTextBox.Protected> event to determine when the user has attempted to modify protected text, and either alert the user that the text is protected or provide the user with a standard way to manipulate the protected text.       Applications that already use <xref:System.Windows.Forms.TextBox> controls can easily be adapted to make use of RichTextBox controls. However, the RichTextBox control does not have the same 64K character capacity limit of the <xref:System.Windows.Forms.TextBox> control. The RichTextBox is typically used to provide text manipulation and display features similar to word processing applications such as Microsoft Word.      > [!NOTE] >  The <xref:System.Windows.Forms.TextBoxBase.Undo%2A?displayProperty=fullName> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.","needQuote":false,"needEscape":true,"nodes":[{"content":"With the RichTextBox control, the user can enter and edit text.","pos":[0,63]},{"content":"The control also provides more advanced formatting features than the standard &lt;xref:System.Windows.Forms.TextBox&gt; control.","pos":[64,186],"source":" The control also provides more advanced formatting features than the standard <xref:System.Windows.Forms.TextBox> control."},{"content":"Text can be assigned directly to the control, or can be loaded from a rich text format (RTF) or plain text file.","pos":[187,299]},{"content":"The text within the control can be assigned character and paragraph formatting.","pos":[300,379]},{"content":"The RichTextBox control provides a number of properties you can use to apply formatting to any portion of text within the control.","pos":[386,516]},{"content":"To change the formatting of text, it must first be selected.","pos":[517,577]},{"content":"Only selected text can be assigned character and paragraph formatting.","pos":[578,648]},{"content":"Once a setting has been made to a selected section of text, all text entered after the selection is also formatted with the same settings until a setting change is made or a different section of the control's document is selected.","pos":[649,879]},{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.SelectionFont%2A&gt; property enables you to make text bold or italic.","pos":[880,990],"source":" The <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A> property enables you to make text bold or italic."},{"content":"You can also use this property to change the size and typeface of the text.","pos":[991,1066]},{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.SelectionColor%2A&gt; property enables you to change the color of the text.","pos":[1067,1182],"source":" The <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> property enables you to change the color of the text."},{"content":"To create bulleted lists you can use the &lt;xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A&gt; property.","pos":[1183,1292],"source":" To create bulleted lists you can use the <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> property."},{"content":"You can also adjust paragraph formatting by setting the &lt;xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A&gt;, &lt;xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A&gt;, and &lt;xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A&gt; properties.","pos":[1293,1555],"source":" You can also adjust paragraph formatting by setting the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A>, <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A>, and <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> properties."},{"content":"The RichTextBox control provides methods that provide functionality for opening and saving files.","pos":[1562,1659]},{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method enables you to load an existing RTF or ASCII text file into the control.","pos":[1660,1795],"source":" The <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method enables you to load an existing RTF or ASCII text file into the control."},{"content":"You can also load data from an already opened data stream.","pos":[1796,1854]},{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; enables you to save a file to RTF or ASCII text.","pos":[1855,1959],"source":" The <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> enables you to save a file to RTF or ASCII text."},{"content":"Similar to the &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method, you can also use the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method to save to an open data stream.","pos":[1960,2146],"source":" Similar to the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method, you can also use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method to save to an open data stream."},{"content":"The RichTextBox control also provides features for finding strings of text.","pos":[2147,2222]},{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method is overloaded to find both strings of text as well as specific characters within the text of the control.","pos":[2223,2387],"source":" The <xref:System.Windows.Forms.RichTextBox.Find%2A> method is overloaded to find both strings of text as well as specific characters within the text of the control."},{"content":"You can also initialize the RichTextBox control to data stored in memory.","pos":[2394,2467]},{"content":"For example, you can initialize the &lt;xref:System.Windows.Forms.RichTextBox.Rtf%2A&gt; property to a string that contains the text to display, including the RTF codes that determine how the text should be formatted.","pos":[2468,2679],"source":" For example, you can initialize the <xref:System.Windows.Forms.RichTextBox.Rtf%2A> property to a string that contains the text to display, including the RTF codes that determine how the text should be formatted."},{"content":"If the text within the control contains links, such as a link to a Web site, you can use the &lt;xref:System.Windows.Forms.RichTextBox.DetectUrls%2A&gt; property to display the link appropriately in the control's text.","pos":[2686,2898],"source":"       If the text within the control contains links, such as a link to a Web site, you can use the <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A> property to display the link appropriately in the control's text."},{"content":"You can then handle the &lt;xref:System.Windows.Forms.RichTextBox.LinkClicked&gt; event to perform the tasks associated with the link.","pos":[2899,3027],"source":" You can then handle the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event to perform the tasks associated with the link."},{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.SelectionProtected%2A&gt; property enables you to protect text within the control from manipulation by the user.","pos":[3028,3180],"source":" The <xref:System.Windows.Forms.RichTextBox.SelectionProtected%2A> property enables you to protect text within the control from manipulation by the user."},{"content":"With protected text in your control, you can handle the &lt;xref:System.Windows.Forms.RichTextBox.Protected&gt; event to determine when the user has attempted to modify protected text, and either alert the user that the text is protected or provide the user with a standard way to manipulate the protected text.","pos":[3181,3486],"source":" With protected text in your control, you can handle the <xref:System.Windows.Forms.RichTextBox.Protected> event to determine when the user has attempted to modify protected text, and either alert the user that the text is protected or provide the user with a standard way to manipulate the protected text."},{"content":"Applications that already use &lt;xref:System.Windows.Forms.TextBox&gt; controls can easily be adapted to make use of RichTextBox controls.","pos":[3493,3626],"source":"       Applications that already use <xref:System.Windows.Forms.TextBox> controls can easily be adapted to make use of RichTextBox controls."},{"content":"However, the RichTextBox control does not have the same 64K character capacity limit of the &lt;xref:System.Windows.Forms.TextBox&gt; control.","pos":[3627,3763],"source":" However, the RichTextBox control does not have the same 64K character capacity limit of the <xref:System.Windows.Forms.TextBox> control."},{"content":"The RichTextBox is typically used to provide text manipulation and display features similar to word processing applications such as Microsoft Word.","pos":[3764,3911]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A?displayProperty=fullName&gt; method does not work with the &lt;xref:System.Windows.Forms.Control.KeyPress&gt; or &lt;xref:System.Windows.Forms.Control.TextChanged&gt; events.","pos":[3917,4140],"source":"      > [!NOTE] >  The <xref:System.Windows.Forms.TextBoxBase.Undo%2A?displayProperty=fullName> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events."}]},{"pos":[36049,36143],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> class."},{"pos":[36155,36265],"content":"By default, the &lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt; property of the control is set to <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"source":"By default, the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the control is set to `true`."},{"pos":[37780,37869],"content":"Gets or sets a value indicating whether the control will enable drag-and-drop operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the control will enable drag-and-drop operations.","pos":[0,89]}]},{"pos":[39539,39718],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if drag-and-drop is enabled in the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if drag-and-drop is enabled in the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[40151,40195],"content":"This property is not relevant to this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not relevant to this class.","pos":[0,44]}]},{"pos":[40208,40256],"content":"-   This property is not relevant to this class.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property is not relevant to this class.","pos":[4,48]}]},{"pos":[40383,40530],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[41007,41083],"content":"Gets or sets a value indicating whether automatic word selection is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether automatic word selection is enabled.","pos":[0,76]}]},{"pos":[41095,41200],"content":"If this property is set to <ph id=\"ph1\">`true`</ph>, selecting any part of the text in the control selects the entire word.","needQuote":true,"needEscape":true,"source":"If this property is set to `true`, selecting any part of the text in the control selects the entire word."},{"pos":[42427,42679],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if automatic word selection is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if automatic word selection is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,175],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if automatic word selection is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[176,252],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[43155,43199],"content":"This property is not relevant to this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not relevant to this class.","pos":[0,44]}]},{"pos":[43211,43255],"content":"This property is not relevant to this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not relevant to this class.","pos":[0,44]}]},{"pos":[43410,43456],"content":"The background image displayed in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The background image displayed in the control.","pos":[0,46]}]},{"pos":[43962,44065],"content":"Occurs when the value of the <xref:System.Windows.Forms.RichTextBox.BackgroundImage*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.Forms.RichTextBox.BackgroundImage*&gt; property changes.","pos":[0,103],"source":"Occurs when the value of the <xref:System.Windows.Forms.RichTextBox.BackgroundImage*> property changes."}]},{"pos":[44078,44220],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","needQuote":false,"needEscape":true,"source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[44358,44370],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44812,44856],"content":"This property is not relevant to this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not relevant to this class.","pos":[0,44]}]},{"pos":[44868,44912],"content":"This property is not relevant to this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not relevant to this class.","pos":[0,44]}]},{"pos":[45097,45157],"content":"The layout of the background image displayed in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The layout of the background image displayed in the control.","pos":[0,60]}]},{"pos":[45699,45808],"content":"Occurs when the value of the <xref:System.Windows.Forms.RichTextBox.BackgroundImageLayout*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.Forms.RichTextBox.BackgroundImageLayout*&gt; property changes.","pos":[0,109],"source":"Occurs when the value of the <xref:System.Windows.Forms.RichTextBox.BackgroundImageLayout*> property changes."}]},{"pos":[45820,45861],"content":"This event is not relevant to this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event is not relevant to this class.","pos":[0,41]}]},{"pos":[46004,46016],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46413,46561],"content":"Gets or sets the indentation used in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control when the bullet style is applied to the text.","needQuote":true,"needEscape":true,"source":"Gets or sets the indentation used in the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control when the bullet style is applied to the text."},{"pos":[46573,47227],"content":"To apply the bullet style to a paragraph of text, set the <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> property to `true` and then set the BulletIndent property to the number of pixels that the text should be indented. The paragraph will have the bullet style applied to it with the specified amount of indentation after the bullet. This property only affects the current paragraph within the control's text and the currently selected bullet in a list of bulleted items. To apply a different indentation level to an entire list of bulleted items, all the text of the bulleted items must be selected before setting the BulletIndent property.","needQuote":true,"needEscape":true,"nodes":[{"content":"To apply the bullet style to a paragraph of text, set the &lt;xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A&gt; property to <ph id=\"ph1\">`true`</ph> and then set the BulletIndent property to the number of pixels that the text should be indented.","pos":[0,232],"source":"To apply the bullet style to a paragraph of text, set the <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> property to `true` and then set the BulletIndent property to the number of pixels that the text should be indented."},{"content":"The paragraph will have the bullet style applied to it with the specified amount of indentation after the bullet.","pos":[233,346]},{"content":"This property only affects the current paragraph within the control's text and the currently selected bullet in a list of bulleted items.","pos":[347,484]},{"content":"To apply a different indentation level to an entire list of bulleted items, all the text of the bulleted items must be selected before setting the BulletIndent property.","pos":[485,654]}]},{"pos":[48206,48291],"content":"The number of pixels inserted as the indentation after a bullet. The default is zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of pixels inserted as the indentation after a bullet. The default is zero.","pos":[0,85],"nodes":[{"content":"The number of pixels inserted as the indentation after a bullet.","pos":[0,64]},{"content":"The default is zero.","pos":[65,85]}]}]},{"pos":[48459,48504],"content":"The specified indentation was less than zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified indentation was less than zero.","pos":[0,45]}]},{"pos":[49199,49211],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49270,49282],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49709,49865],"content":"Gets a value indicating whether there are actions that have occurred within the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be reapplied.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether there are actions that have occurred within the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> that can be reapplied."},{"pos":[49877,50079],"content":"You can use this property to determine whether the last operation undone in the <xref:System.Windows.Forms.RichTextBox> can be reapplied using the <xref:System.Windows.Forms.RichTextBox.Redo%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can use this property to determine whether the last operation undone in the &lt;xref:System.Windows.Forms.RichTextBox&gt; can be reapplied using the &lt;xref:System.Windows.Forms.RichTextBox.Redo%2A&gt; method.","pos":[0,202],"source":"You can use this property to determine whether the last operation undone in the <xref:System.Windows.Forms.RichTextBox> can be reapplied using the <xref:System.Windows.Forms.RichTextBox.Redo%2A> method."}]},{"pos":[51034,51268],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there are operations that have been undone that can be reapplied to the content of the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are operations that have been undone that can be reapplied to the content of the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[51731,51783],"content":"Occurs when contents within the control are resized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when contents within the control are resized.","pos":[0,52]}]},{"pos":[51796,51938],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","needQuote":false,"needEscape":true,"source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[53155,53167],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53564,53637],"content":"Gets the required creation parameters when the control handle is created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the required creation parameters when the control handle is created.","pos":[0,73]}]},{"pos":[53813,53959],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CreateParams\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the required creation parameters when the handle to the control is created.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created."},{"pos":[54484,54649],"content":"Creates an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_IRichEditOleCallback\" name=\"IRichEditOleCallback\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>-compatible object for handling rich-edit callback operations.","needQuote":true,"needEscape":true,"source":"Creates an <xref uid=\"langword_csharp_IRichEditOleCallback\" name=\"IRichEditOleCallback\" href=\"\"></xref>-compatible object for handling rich-edit callback operations."},{"pos":[54804,54937],"content":"An object that implements the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_IRichEditOleCallback\" name=\"IRichEditOleCallback\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"An object that implements the <xref uid=\"langword_csharp_IRichEditOleCallback\" name=\"IRichEditOleCallback\" href=\"\"></xref> interface."},{"pos":[55401,55438],"content":"Gets the default size of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default size of the control.","pos":[0,37]}]},{"pos":[55585,55634],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Size\"></xref> value."},{"pos":[56079,56277],"content":"Gets or sets a value indicating whether or not the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> will automatically format a Uniform Resource Locator (URL) when it is typed into the control.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether or not the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> will automatically format a Uniform Resource Locator (URL) when it is typed into the control."},{"pos":[56289,56884],"content":"If this property is set to `true`, any text entered into the control that is determined by the <xref:System.Windows.Forms.RichTextBox> to be a URL is automatically formatted as a link. You can create an event handler for the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event to handle all links clicked in the control. The <xref:System.Windows.Forms.LinkClickedEventArgs> that is provided to the event handler for the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event provides data that enables you to determine which link was clicked in the control in order to process the link.","needQuote":true,"needEscape":true,"nodes":[{"content":"If this property is set to <ph id=\"ph1\">`true`</ph>, any text entered into the control that is determined by the &lt;xref:System.Windows.Forms.RichTextBox&gt; to be a URL is automatically formatted as a link.","pos":[0,184],"source":"If this property is set to `true`, any text entered into the control that is determined by the <xref:System.Windows.Forms.RichTextBox> to be a URL is automatically formatted as a link."},{"content":"You can create an event handler for the &lt;xref:System.Windows.Forms.RichTextBox.LinkClicked&gt; event to handle all links clicked in the control.","pos":[185,326],"source":" You can create an event handler for the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event to handle all links clicked in the control."},{"content":"The &lt;xref:System.Windows.Forms.LinkClickedEventArgs&gt; that is provided to the event handler for the &lt;xref:System.Windows.Forms.RichTextBox.LinkClicked&gt; event provides data that enables you to determine which link was clicked in the control in order to process the link.","pos":[327,595],"source":" The <xref:System.Windows.Forms.LinkClickedEventArgs> that is provided to the event handler for the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event provides data that enables you to determine which link was clicked in the control in order to process the link."}]},{"pos":[57968,58315],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> will automatically format URLs that are typed into the control as a link; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will automatically format URLs that are typed into the control as a link; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,270],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> will automatically format URLs that are typed into the control as a link; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[271,347],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[58746,58792],"content":"Occurs when the user completes a drag-and-drop","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user completes a drag-and-drop","pos":[0,46]}]},{"pos":[58958,58970],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59349,59408],"content":"Occurs when an object is dragged into the control's bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an object is dragged into the control's bounds.","pos":[0,59]}]},{"pos":[59421,59563],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","needQuote":false,"needEscape":true,"source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[60740,60752],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[61131,61192],"content":"Occurs when an object is dragged out of the control's bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an object is dragged out of the control's bounds.","pos":[0,61]}]},{"pos":[61205,61389],"content":"This event is not relevant to this class. For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"This event is not relevant to this class.","pos":[0,41]},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[42,184],"source":" For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[61514,61526],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[61900,61959],"content":"Occurs when an object is dragged over the control's bounds.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an object is dragged over the control's bounds.","pos":[0,59]}]},{"pos":[61972,62156],"content":"This event is not relevant to this class. For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"This event is not relevant to this class.","pos":[0,41]},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[42,184],"source":" For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[62323,62335],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62880,62923],"content":"This method is not relevant for this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]},{"pos":[62935,62978],"content":"This method is not relevant for this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]},{"pos":[63184,63229],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Bitmap\"></xref>."},{"pos":[63309,63357],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Rectangle\"></xref>."},{"pos":[63843,63936],"content":"Gets or sets a value that enables drag-and-drop operations on text, pictures, and other data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that enables drag-and-drop operations on text, pictures, and other data.","pos":[0,93]}]},{"pos":[64063,64313],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enable drag-and-drop operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to enable drag-and-drop operations; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enable drag-and-drop operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,250],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[64787,64936],"content":"Searches the text of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control for the first instance of a character from a list of characters.","needQuote":true,"needEscape":true,"source":"Searches the text of a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for the first instance of a character from a list of characters."},{"pos":[64949,66178],"content":"This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the first instance of a character from a list of characters specified in the `characterSet` parameter and returns the location of the character. For example, you pass an array of characters containing the character 'Q'. If the control contained the text \"The Quick Brown Fox\", the <xref:System.Windows.Forms.RichTextBox.Find%2A> method would return the value of four. An upper case character and a lower case character are considered different values in the search.       If the property returns a negative value, the characters being searched for were not found within the contents of the control. You can use this method to search for a group of characters within the control. This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method requires that the entire document contained in the control is searched for the characters. If a character from the character list provided in the method's `characterSet` parameter is found, the value returned by this method is a zero-based index of the character's position in the control. A space is considered a character by the method when determining the location of a character.","needQuote":false,"needEscape":true,"nodes":[{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method searches for the first instance of a character from a list of characters specified in the <ph id=\"ph1\">`characterSet`</ph> parameter and returns the location of the character.","pos":[0,232],"source":"This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the first instance of a character from a list of characters specified in the `characterSet` parameter and returns the location of the character."},{"content":"For example, you pass an array of characters containing the character 'Q'.","pos":[233,307]},{"content":"If the control contained the text \"The Quick Brown Fox\", the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method would return the value of four.","pos":[308,455],"source":" If the control contained the text \"The Quick Brown Fox\", the <xref:System.Windows.Forms.RichTextBox.Find%2A> method would return the value of four."},{"content":"An upper case character and a lower case character are considered different values in the search.","pos":[456,553]},{"content":"If the property returns a negative value, the characters being searched for were not found within the contents of the control.","pos":[560,686]},{"content":"You can use this method to search for a group of characters within the control.","pos":[687,766]},{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method requires that the entire document contained in the control is searched for the characters.","pos":[767,932],"source":" This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method requires that the entire document contained in the control is searched for the characters."},{"content":"If a character from the character list provided in the method's <ph id=\"ph1\">`characterSet`</ph> parameter is found, the value returned by this method is a zero-based index of the character's position in the control.","pos":[933,1131],"source":" If a character from the character list provided in the method's `characterSet` parameter is found, the value returned by this method is a zero-based index of the character's position in the control."},{"content":"A space is considered a character by the method when determining the location of a character.","pos":[1132,1225]}]},{"pos":[67308,67346],"content":"The array of characters to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array of characters to search for.","pos":[0,38]}]},{"pos":[67403,67600],"content":"The location within the control where the search characters were found or -1 if the search characters are not found or an empty search character set is specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">char</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The location within the control where the search characters were found or -1 if the search characters are not found or an empty search character set is specified in the <code>char</code> parameter."},{"pos":[68060,68158],"content":"Searches the text in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control for a string.","needQuote":true,"needEscape":true,"source":"Searches the text in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for a string."},{"pos":[68171,69151],"content":"The Find method searches for the text specified in the `str` parameter and returns the location of the first character within the control. If the property returns a negative value, the text string being searched for was not found within the contents of the control. You can use this method to create search functionality that can be provided to the user of the control. You can also use this method to search for text to be replaced with a specific format. For example, if the user entered dates into the control, you could use the Find method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control.      > [!NOTE] >  The Find methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>. Performing such a search will return a value of negative one (-1).","needQuote":false,"needEscape":true,"nodes":[{"content":"The Find method searches for the text specified in the <ph id=\"ph1\">`str`</ph> parameter and returns the location of the first character within the control.","pos":[0,138],"source":"The Find method searches for the text specified in the `str` parameter and returns the location of the first character within the control."},{"content":"If the property returns a negative value, the text string being searched for was not found within the contents of the control.","pos":[139,265]},{"content":"You can use this method to create search functionality that can be provided to the user of the control.","pos":[266,369]},{"content":"You can also use this method to search for text to be replaced with a specific format.","pos":[370,456]},{"content":"For example, if the user entered dates into the control, you could use the Find method to search for all dates in the document and replace them with the appropriate format before using the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method of the control.","pos":[457,720],"source":" For example, if the user entered dates into the control, you could use the Find method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Find methods that accept a <ph id=\"ph2\">`string`</ph> as a parameter cannot find text that is contained on more than one line of text within the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[726,910],"source":"      > [!NOTE] >  The Find methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>."},{"content":"Performing such a search will return a value of negative one (-1).","pos":[911,977]}]},{"pos":[70172,70206],"content":"The text to locate in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to locate in the control.","pos":[0,34]}]},{"pos":[70263,70440],"content":"The location within the control where the search text was found or -1 if the search string is not found or an empty search string is specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">str</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The location within the control where the search text was found or -1 if the search string is not found or an empty search string is specified in the <code>str</code> parameter."},{"pos":[70944,71124],"content":"Searches the text of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control, at a specific starting point, for the first instance of a character from a list of characters.","needQuote":true,"needEscape":true,"source":"Searches the text of a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control, at a specific starting point, for the first instance of a character from a list of characters."},{"pos":[71137,72781],"content":"This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the first instance of a character from a list of characters specified in the `characterSet` parameter and returns the location the character. For example, you pass an array of characters containing the character 'Q'. If the control contained the text \"The Quick Brown Fox\", the <xref:System.Windows.Forms.RichTextBox.Find%2A> method would return the value of four. An upper case character and a lower case character are considered different values in the search.       If the property returns a negative value, the characters being searched for were not found within the contents of the control. You can use this method to search for a group of characters within the control. If a character from the character list provided in the method's `characterSet` parameter is found, the value returned by this method is a zero-based index of the character's position in the control. A space is considered a character by the method when determining the location of a character.       This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method enables you to search for a character set from a specified start position within the text of the control by specifying a value for the `start` parameter. A value of zero indicates that the search should start from the beginning of the control's document. You can use this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to narrow your search to avoid text that you already know does not contain the specified characters you are searching for or are not important in your search.","needQuote":false,"needEscape":true,"nodes":[{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method searches for the first instance of a character from a list of characters specified in the <ph id=\"ph1\">`characterSet`</ph> parameter and returns the location the character.","pos":[0,229],"source":"This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the first instance of a character from a list of characters specified in the `characterSet` parameter and returns the location the character."},{"content":"For example, you pass an array of characters containing the character 'Q'.","pos":[230,304]},{"content":"If the control contained the text \"The Quick Brown Fox\", the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method would return the value of four.","pos":[305,452],"source":" If the control contained the text \"The Quick Brown Fox\", the <xref:System.Windows.Forms.RichTextBox.Find%2A> method would return the value of four."},{"content":"An upper case character and a lower case character are considered different values in the search.","pos":[453,550]},{"content":"If the property returns a negative value, the characters being searched for were not found within the contents of the control.","pos":[557,683]},{"content":"You can use this method to search for a group of characters within the control.","pos":[684,763]},{"content":"If a character from the character list provided in the method's <ph id=\"ph1\">`characterSet`</ph> parameter is found, the value returned by this method is a zero-based index of the character's position in the control.","pos":[764,962],"source":" If a character from the character list provided in the method's `characterSet` parameter is found, the value returned by this method is a zero-based index of the character's position in the control."},{"content":"A space is considered a character by the method when determining the location of a character.","pos":[963,1056]},{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method enables you to search for a character set from a specified start position within the text of the control by specifying a value for the <ph id=\"ph1\">`start`</ph> parameter.","pos":[1063,1291],"source":"       This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method enables you to search for a character set from a specified start position within the text of the control by specifying a value for the `start` parameter."},{"content":"A value of zero indicates that the search should start from the beginning of the control's document.","pos":[1292,1392]},{"content":"You can use this version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method to narrow your search to avoid text that you already know does not contain the specified characters you are searching for or are not important in your search.","pos":[1393,1638],"source":" You can use this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to narrow your search to avoid text that you already know does not contain the specified characters you are searching for or are not important in your search."}]},{"pos":[74102,74140],"content":"The array of characters to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array of characters to search for.","pos":[0,38]}]},{"pos":[74201,74268],"content":"The location within the control's text at which to begin searching.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control's text at which to begin searching.","pos":[0,67]}]},{"pos":[74325,74395],"content":"The location within the control where the search characters are found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control where the search characters are found.","pos":[0,70]}]},{"pos":[74982,75124],"content":"Searches the text in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control for a string with specific options applied to the search.","needQuote":true,"needEscape":true,"source":"Searches the text in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for a string with specific options applied to the search."},{"pos":[75137,76745],"content":"The <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the text specified in the `str` parameter and returns the location of the first character within the control. If the property returns a negative value, the text string being searched for was not found within the contents of the control. You can use this method to create search functionality that can be provided to the user of the control. You can also use this method to search for text to be replaced with a specific format. For example, if the user entered dates into the control, you can use the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control.       With this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method, you can specify options that enable you to expand or narrow your search. You can specify options that enable you to match the casing of the search word or to search for entire words instead of partial words. By specifying the `RichTextBoxFinds.Reverse` enumeration in the `options` parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method.      > [!NOTE] >  The <xref:System.Windows.Forms.RichTextBox.Find%2A> methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>. Performing such a search will return a value of negative one (-1).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method searches for the text specified in the <ph id=\"ph1\">`str`</ph> parameter and returns the location of the first character within the control.","pos":[0,181],"source":"The <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the text specified in the `str` parameter and returns the location of the first character within the control."},{"content":"If the property returns a negative value, the text string being searched for was not found within the contents of the control.","pos":[182,308]},{"content":"You can use this method to create search functionality that can be provided to the user of the control.","pos":[309,412]},{"content":"You can also use this method to search for text to be replaced with a specific format.","pos":[413,499]},{"content":"For example, if the user entered dates into the control, you can use the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method to search for all dates in the document and replace them with the appropriate format before using the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method of the control.","pos":[500,804],"source":" For example, if the user entered dates into the control, you can use the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control."},{"content":"With this version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method, you can specify options that enable you to expand or narrow your search.","pos":[811,964],"source":"       With this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method, you can specify options that enable you to expand or narrow your search."},{"content":"You can specify options that enable you to match the casing of the search word or to search for entire words instead of partial words.","pos":[965,1099]},{"content":"By specifying the <ph id=\"ph1\">`RichTextBoxFinds.Reverse`</ph> enumeration in the <ph id=\"ph2\">`options`</ph> parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method.","pos":[1100,1303],"source":" By specifying the `RichTextBoxFinds.Reverse` enumeration in the `options` parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; methods that accept a <ph id=\"ph2\">`string`</ph> as a parameter cannot find text that is contained on more than one line of text within the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[1309,1536],"source":"      > [!NOTE] >  The <xref:System.Windows.Forms.RichTextBox.Find%2A> methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>."},{"content":"Performing such a search will return a value of negative one (-1).","pos":[1537,1603]}]},{"pos":[77903,77937],"content":"The text to locate in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to locate in the control.","pos":[0,34]}]},{"pos":[78025,78120],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxFinds\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.RichTextBoxFinds\"></xref> values."},{"pos":[78177,78241],"content":"The location within the control where the search text was found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control where the search text was found.","pos":[0,64]}]},{"pos":[78789,78945],"content":"Searches a range of text in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control for the first instance of a character from a list of characters.","needQuote":true,"needEscape":true,"source":"Searches a range of text in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for the first instance of a character from a list of characters."},{"pos":[78958,80738],"content":"This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the first instance of a character from a list of characters specified in the `characterSet` parameter and returns the location of the character. For example, you pass an array of characters containing the character 'Q'. If the control contained the text \"The Quick Brown Fox\", the <xref:System.Windows.Forms.RichTextBox.Find%2A> method would return the value of four. An upper case character and a lower case character are considered different values in the search.       If the property returns a negative value, the characters being searched for were not found within the contents of the control. You can use this method to search for a group of characters within the control. If a character from the character list provided in the method's `characterSet` parameter is found, the value returned by this method is a zero based index of the character's position in the control. A space is considered a character by the method when determining the location of a character.       This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method enables you to search for a character set from a range of text in the control by specifying a value for the `start` and `end` parameters. A value of zero for the `start` parameter indicates that the search should start from the beginning of the control's document. A -1 value for the `end` parameter indicates that the search should end at the end of the text within the control. You can use this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to narrow your search to a specific range of text within the control to avoid searching areas of the document that are not important to the needs of your application.","needQuote":false,"needEscape":true,"nodes":[{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method searches for the first instance of a character from a list of characters specified in the <ph id=\"ph1\">`characterSet`</ph> parameter and returns the location of the character.","pos":[0,232],"source":"This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the first instance of a character from a list of characters specified in the `characterSet` parameter and returns the location of the character."},{"content":"For example, you pass an array of characters containing the character 'Q'.","pos":[233,307]},{"content":"If the control contained the text \"The Quick Brown Fox\", the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method would return the value of four.","pos":[308,455],"source":" If the control contained the text \"The Quick Brown Fox\", the <xref:System.Windows.Forms.RichTextBox.Find%2A> method would return the value of four."},{"content":"An upper case character and a lower case character are considered different values in the search.","pos":[456,553]},{"content":"If the property returns a negative value, the characters being searched for were not found within the contents of the control.","pos":[560,686]},{"content":"You can use this method to search for a group of characters within the control.","pos":[687,766]},{"content":"If a character from the character list provided in the method's <ph id=\"ph1\">`characterSet`</ph> parameter is found, the value returned by this method is a zero based index of the character's position in the control.","pos":[767,965],"source":" If a character from the character list provided in the method's `characterSet` parameter is found, the value returned by this method is a zero based index of the character's position in the control."},{"content":"A space is considered a character by the method when determining the location of a character.","pos":[966,1059]},{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method enables you to search for a character set from a range of text in the control by specifying a value for the <ph id=\"ph1\">`start`</ph> and <ph id=\"ph2\">`end`</ph> parameters.","pos":[1066,1278],"source":"       This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method enables you to search for a character set from a range of text in the control by specifying a value for the `start` and `end` parameters."},{"content":"A value of zero for the <ph id=\"ph1\">`start`</ph> parameter indicates that the search should start from the beginning of the control's document.","pos":[1279,1405],"source":" A value of zero for the `start` parameter indicates that the search should start from the beginning of the control's document."},{"content":"A -1 value for the <ph id=\"ph1\">`end`</ph> parameter indicates that the search should end at the end of the text within the control.","pos":[1406,1520],"source":" A -1 value for the `end` parameter indicates that the search should end at the end of the text within the control."},{"content":"You can use this version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method to narrow your search to a specific range of text within the control to avoid searching areas of the document that are not important to the needs of your application.","pos":[1521,1774],"source":" You can use this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to narrow your search to a specific range of text within the control to avoid searching areas of the document that are not important to the needs of your application."}]},{"pos":[80906,80944],"content":"The array of characters to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array of characters to search for.","pos":[0,38]}]},{"pos":[81005,81072],"content":"The location within the control's text at which to begin searching.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control's text at which to begin searching.","pos":[0,67]}]},{"pos":[81131,81196],"content":"The location within the control's text at which to end searching.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control's text at which to end searching.","pos":[0,65]}]},{"pos":[81253,81323],"content":"The location within the control where the search characters are found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control where the search characters are found.","pos":[0,70]}]},{"pos":[81491,81525],"content":"<ph id=\"ph1\">&lt;code&gt;characterSet&lt;/code&gt;</ph> is null.","needQuote":true,"needEscape":true,"source":"<code>characterSet</code> is null."},{"pos":[81620,81708],"content":"<ph id=\"ph1\">&lt;code&gt;start&lt;/code&gt;</ph> is less than 0 or greater than the length of the text in the control.","needQuote":true,"needEscape":true,"source":"<code>start</code> is less than 0 or greater than the length of the text in the control."},{"pos":[82271,82459],"content":"Searches the text in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control for a string at a specific location within the control and with specific options applied to the search.","needQuote":true,"needEscape":true,"source":"Searches the text in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for a string at a specific location within the control and with specific options applied to the search."},{"pos":[82472,84766],"content":"The <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the text specified in the `str` parameter and returns the location of the first character of the search string within the control. If the property returns a negative value, the text string being searched for was not found within the contents of the control. You can use this method to create search functionality that can be provided to the user of the control. You can also use this method to search for text to be replaced with a specific format. For example, if the user entered dates into the control, you could use the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control.       With this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method, you can specify options that enable you to expand or narrow your search. You can specify options that enable you to match the casing of the search word or to search for entire words instead of partial words. By specifying the `RichTextBoxFinds.Reverse` enumeration in the `options` parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method. This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method also enables you to narrow the search for text by selecting a specific starting position within the control's text. This feature can enable you to avoid text that might have already been searched or where the specific text you are searching for is known not to exist. When the `RichTextBoxFinds.Reverse` value is specified in the `options` parameter, the value of the `start` parameter indicates the position where the reverse search will end since the search will start at the bottom of the document when using this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method.      > [!NOTE] >  The <xref:System.Windows.Forms.RichTextBox.Find%2A> methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>. Performing such a search will return a value of negative one (-1).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method searches for the text specified in the <ph id=\"ph1\">`str`</ph> parameter and returns the location of the first character of the search string within the control.","pos":[0,202],"source":"The <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the text specified in the `str` parameter and returns the location of the first character of the search string within the control."},{"content":"If the property returns a negative value, the text string being searched for was not found within the contents of the control.","pos":[203,329]},{"content":"You can use this method to create search functionality that can be provided to the user of the control.","pos":[330,433]},{"content":"You can also use this method to search for text to be replaced with a specific format.","pos":[434,520]},{"content":"For example, if the user entered dates into the control, you could use the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method to search for all dates in the document and replace them with the appropriate format before using the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method of the control.","pos":[521,827],"source":" For example, if the user entered dates into the control, you could use the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control."},{"content":"With this version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method, you can specify options that enable you to expand or narrow your search.","pos":[834,987],"source":"       With this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method, you can specify options that enable you to expand or narrow your search."},{"content":"You can specify options that enable you to match the casing of the search word or to search for entire words instead of partial words.","pos":[988,1122]},{"content":"By specifying the <ph id=\"ph1\">`RichTextBoxFinds.Reverse`</ph> enumeration in the <ph id=\"ph2\">`options`</ph> parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method.","pos":[1123,1326],"source":" By specifying the `RichTextBoxFinds.Reverse` enumeration in the `options` parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method."},{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method also enables you to narrow the search for text by selecting a specific starting position within the control's text.","pos":[1327,1517],"source":" This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method also enables you to narrow the search for text by selecting a specific starting position within the control's text."},{"content":"This feature can enable you to avoid text that might have already been searched or where the specific text you are searching for is known not to exist.","pos":[1518,1669]},{"content":"When the <ph id=\"ph1\">`RichTextBoxFinds.Reverse`</ph> value is specified in the <ph id=\"ph2\">`options`</ph> parameter, the value of the <ph id=\"ph3\">`start`</ph> parameter indicates the position where the reverse search will end since the search will start at the bottom of the document when using this version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method.","pos":[1670,1989],"source":" When the `RichTextBoxFinds.Reverse` value is specified in the `options` parameter, the value of the `start` parameter indicates the position where the reverse search will end since the search will start at the bottom of the document when using this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; methods that accept a <ph id=\"ph2\">`string`</ph> as a parameter cannot find text that is contained on more than one line of text within the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[1995,2222],"source":"      > [!NOTE] >  The <xref:System.Windows.Forms.RichTextBox.Find%2A> methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>."},{"content":"Performing such a search will return a value of negative one (-1).","pos":[2223,2289]}]},{"pos":[86346,86380],"content":"The text to locate in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to locate in the control.","pos":[0,34]}]},{"pos":[86441,86508],"content":"The location within the control's text at which to begin searching.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control's text at which to begin searching.","pos":[0,67]}]},{"pos":[86596,86691],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxFinds\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.RichTextBoxFinds\"></xref> values."},{"pos":[86748,86812],"content":"The location within the control where the search text was found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control where the search text was found.","pos":[0,64]}]},{"pos":[87487,87675],"content":"Searches the text in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control for a string within a range of text within the control and with specific options applied to the search.","needQuote":true,"needEscape":true,"source":"Searches the text in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for a string within a range of text within the control and with specific options applied to the search."},{"pos":[87688,90257],"content":"The <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the text specified in the `str` parameter and returns the location of the first character of the search string within the control. If the property returns a negative value, the text string being searched for was not found within the contents of the control. You can use this method to create search functionality that can be provided to the user of the control. You can also use this method to search for text to be replaced with a specific format. For example, if the user entered dates into the control, you can use the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control.       With this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method, you can specify options that enable you to expand or narrow your search. You can specify options that enable you to match the casing of the search word or to search for entire words instead of partial words. By specifying the `RichTextBoxFinds.Reverse` enumeration in the `options` parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method. This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method also enables you to narrow the search for text by selecting a specific start and end position within the control's text. This feature can enable you to limit the search range to a specific section of the control's text. If a value of negative one (-1) is assigned to the `end` parameter, the method will search until the end of the text in the <xref:System.Windows.Forms.RichTextBox> for normal searches. For reverse searches, a value of negative one (-1) assigned to the `end` parameter indicates that text will be searched from the end of text (bottom) to the position defined by `start` parameter. When the `start` and `end` parameters are provided the same value the entire control is searched for normal searches. For a reverse search, the entire control is searched but the search begins at the bottom of the document and searches to the top of the document.      > [!NOTE] >  The <xref:System.Windows.Forms.RichTextBox.Find%2A> methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>. Performing such a search will return a value of negative one (-1).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method searches for the text specified in the <ph id=\"ph1\">`str`</ph> parameter and returns the location of the first character of the search string within the control.","pos":[0,202],"source":"The <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the text specified in the `str` parameter and returns the location of the first character of the search string within the control."},{"content":"If the property returns a negative value, the text string being searched for was not found within the contents of the control.","pos":[203,329]},{"content":"You can use this method to create search functionality that can be provided to the user of the control.","pos":[330,433]},{"content":"You can also use this method to search for text to be replaced with a specific format.","pos":[434,520]},{"content":"For example, if the user entered dates into the control, you can use the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method to search for all dates in the document and replace them with the appropriate format before using the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method of the control.","pos":[521,825],"source":" For example, if the user entered dates into the control, you can use the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control."},{"content":"With this version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method, you can specify options that enable you to expand or narrow your search.","pos":[832,985],"source":"       With this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method, you can specify options that enable you to expand or narrow your search."},{"content":"You can specify options that enable you to match the casing of the search word or to search for entire words instead of partial words.","pos":[986,1120]},{"content":"By specifying the <ph id=\"ph1\">`RichTextBoxFinds.Reverse`</ph> enumeration in the <ph id=\"ph2\">`options`</ph> parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method.","pos":[1121,1324],"source":" By specifying the `RichTextBoxFinds.Reverse` enumeration in the `options` parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method."},{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method also enables you to narrow the search for text by selecting a specific start and end position within the control's text.","pos":[1325,1520],"source":" This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method also enables you to narrow the search for text by selecting a specific start and end position within the control's text."},{"content":"This feature can enable you to limit the search range to a specific section of the control's text.","pos":[1521,1619]},{"content":"If a value of negative one (-1) is assigned to the <ph id=\"ph1\">`end`</ph> parameter, the method will search until the end of the text in the &lt;xref:System.Windows.Forms.RichTextBox&gt; for normal searches.","pos":[1620,1804],"source":" If a value of negative one (-1) is assigned to the `end` parameter, the method will search until the end of the text in the <xref:System.Windows.Forms.RichTextBox> for normal searches."},{"content":"For reverse searches, a value of negative one (-1) assigned to the <ph id=\"ph1\">`end`</ph> parameter indicates that text will be searched from the end of text (bottom) to the position defined by <ph id=\"ph2\">`start`</ph> parameter.","pos":[1805,2000],"source":" For reverse searches, a value of negative one (-1) assigned to the `end` parameter indicates that text will be searched from the end of text (bottom) to the position defined by `start` parameter."},{"content":"When the <ph id=\"ph1\">`start`</ph> and <ph id=\"ph2\">`end`</ph> parameters are provided the same value the entire control is searched for normal searches.","pos":[2001,2118],"source":" When the `start` and `end` parameters are provided the same value the entire control is searched for normal searches."},{"content":"For a reverse search, the entire control is searched but the search begins at the bottom of the document and searches to the top of the document.","pos":[2119,2264]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; methods that accept a <ph id=\"ph2\">`string`</ph> as a parameter cannot find text that is contained on more than one line of text within the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[2270,2497],"source":"      > [!NOTE] >  The <xref:System.Windows.Forms.RichTextBox.Find%2A> methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>."},{"content":"Performing such a search will return a value of negative one (-1).","pos":[2498,2564]}]},{"pos":[91826,91860],"content":"The text to locate in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to locate in the control.","pos":[0,34]}]},{"pos":[91921,91988],"content":"The location within the control's text at which to begin searching.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control's text at which to begin searching.","pos":[0,67]}]},{"pos":[92047,92209],"content":"The location within the control's text at which to end searching. This value must be equal to negative one (-1) or greater than or equal to the `start` parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control's text at which to end searching.","pos":[0,65]},{"content":"This value must be equal to negative one (-1) or greater than or equal to the <ph id=\"ph1\">`start`</ph> parameter.","pos":[66,162],"source":" This value must be equal to negative one (-1) or greater than or equal to the `start` parameter."}]},{"pos":[92297,92392],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxFinds\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.RichTextBoxFinds\"></xref> values."},{"pos":[92449,92513],"content":"The location within the control where the search text was found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location within the control where the search text was found.","pos":[0,64]}]},{"pos":[92681,92777],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">str</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>str</code> parameter was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[92872,92945],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">end</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was less the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">start</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The <code>end</code> parameter was less the <code>start</code> parameter."},{"pos":[93285,93344],"content":"Gets or sets the font of the text displayed by the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the font of the text displayed by the control.","pos":[0,59]}]},{"pos":[93486,93668],"content":"The <xref href=\"System.Drawing.Font\"></xref> to apply to the text displayed by the control. The default is the value of the <xref:System.Windows.Forms.Control.DefaultFont*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Font\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to apply to the text displayed by the control.","pos":[0,91],"source":"The <xref href=\"System.Drawing.Font\"></xref> to apply to the text displayed by the control."},{"content":"The default is the value of the &lt;xref:System.Windows.Forms.Control.DefaultFont*&gt; property.","pos":[92,182],"source":" The default is the value of the <xref:System.Windows.Forms.Control.DefaultFont*> property."}]},{"pos":[94101,94150],"content":"Gets or sets the foreground color of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the foreground color of the control.","pos":[0,49]}]},{"pos":[94299,94390],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the control's foreground color.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the control's foreground color."},{"pos":[94966,95037],"content":"Retrieves the index of the character nearest to the specified location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the index of the character nearest to the specified location.","pos":[0,71]}]},{"pos":[95049,95495],"content":"This method returns the character index that is closest to the position specified in the `pt` parameter. The character index is a zero-based index of text in the control, including spaces. You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method. This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method returns the character index that is closest to the position specified in the <ph id=\"ph1\">`pt`</ph> parameter.","pos":[0,104],"source":"This method returns the character index that is closest to the position specified in the `pt` parameter."},{"content":"The character index is a zero-based index of text in the control, including spaces.","pos":[105,188]},{"content":"You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.","pos":[189,320]},{"content":"This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.","pos":[321,446]}]},{"pos":[96860,96883],"content":"The location to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location to search.","pos":[0,23]}]},{"pos":[96940,96997],"content":"The zero-based character index at the specified location.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based character index at the specified location.","pos":[0,57]}]},{"pos":[97552,97701],"content":"Retrieves the line number from the specified character position within the text of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Retrieves the line number from the specified character position within the text of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control."},{"pos":[97714,99685],"content":"This method enables you to determine the line number based on the character index specified in the `index` parameter of the method. The first line of text in the control returns the value zero. The GetLineFromCharIndex method returns the physical line number where the indexed character is located within the control. For example, if a portion of the first logical line of text in the control wraps to the next line, the GetLineFromCharIndex method returns 1 if the character at the specified character index has wrapped to the second physical line. If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index. You can use this method to determine which line a specific character index is located within. For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found. You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.       In certain cases, GetLineFromCharIndex does not throw an exception when the `index` parameter is an invalid value. For example:      -   If the `index` parameter is <xref:System.Int32.MinValue> or -1, GetLineFromCharIndex returns 0.      -   If the `index` parameter is the text length or <xref:System.Int32.MaxValue>, GetLineFromCharIndex returns the number of the last line of text, which is not necessarily the same as `Lines.Length-1`, depending on the value of the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property.       In these cases, validate the input before calling GetLineFromCharIndex.      > [!NOTE] >  If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method enables you to determine the line number based on the character index specified in the <ph id=\"ph1\">`index`</ph> parameter of the method.","pos":[0,131],"source":"This method enables you to determine the line number based on the character index specified in the `index` parameter of the method."},{"content":"The first line of text in the control returns the value zero.","pos":[132,193]},{"content":"The GetLineFromCharIndex method returns the physical line number where the indexed character is located within the control.","pos":[194,317]},{"content":"For example, if a portion of the first logical line of text in the control wraps to the next line, the GetLineFromCharIndex method returns 1 if the character at the specified character index has wrapped to the second physical line.","pos":[318,549]},{"content":"If &lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt; is set to <ph id=\"ph1\">`false`</ph>, no portion of the line wraps to the next, and the method returns 0 for the specified character index.","pos":[550,725],"source":" If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index."},{"content":"You can use this method to determine which line a specific character index is located within.","pos":[726,819]},{"content":"For example, after calling the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method to search for text, you can obtain the character index to where the search results are found.","pos":[820,999],"source":" For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found."},{"content":"You can call this method with the character index returned by the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method to determine which line the word was found.","pos":[1000,1164],"source":" You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found."},{"content":"In certain cases, GetLineFromCharIndex does not throw an exception when the <ph id=\"ph1\">`index`</ph> parameter is an invalid value.","pos":[1171,1285],"source":"       In certain cases, GetLineFromCharIndex does not throw an exception when the `index` parameter is an invalid value."},{"content":"For example:      -   If the <ph id=\"ph1\">`index`</ph> parameter is &lt;xref:System.Int32.MinValue&gt; or -1, GetLineFromCharIndex returns 0.","pos":[1286,1403],"source":" For example:      -   If the `index` parameter is <xref:System.Int32.MinValue> or -1, GetLineFromCharIndex returns 0."},{"content":"-   If the <ph id=\"ph1\">`index`</ph> parameter is the text length or &lt;xref:System.Int32.MaxValue&gt;, GetLineFromCharIndex returns the number of the last line of text, which is not necessarily the same as <ph id=\"ph2\">`Lines.Length-1`</ph>, depending on the value of the &lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt; property.","pos":[1409,1702],"source":"      -   If the `index` parameter is the text length or <xref:System.Int32.MaxValue>, GetLineFromCharIndex returns the number of the last line of text, which is not necessarily the same as `Lines.Length-1`, depending on the value of the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property."},{"content":"In these cases, validate the input before calling GetLineFromCharIndex.","pos":[1709,1780]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the character index specified in the <ph id=\"ph2\">`index`</ph> parameter is beyond the available number of lines contained within the control, the last line number is returned.","pos":[1786,1960],"source":"      > [!NOTE] >  If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned."}]},{"pos":[100612,100651],"content":"The character index position to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character index position to search.","pos":[0,39]}]},{"pos":[100708,100775],"content":"The zero-based line number in which the character index is located.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based line number in which the character index is located.","pos":[0,67]}]},{"pos":[101346,101421],"content":"Retrieves the location within the control at the specified character index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the location within the control at the specified character index.","pos":[0,75]}]},{"pos":[101433,101903],"content":"This method enables you to determine where in the control a specific character index is located. You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control. For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method enables you to determine where in the control a specific character index is located. You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control. For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.","pos":[0,470],"nodes":[{"content":"This method enables you to determine where in the control a specific character index is located.","pos":[0,96]},{"content":"You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.","pos":[97,216]},{"content":"For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a &lt;xref:System.Windows.Forms.ContextMenu&gt; control.","pos":[217,470],"source":" For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control."}]}]},{"pos":[102078,102140],"content":"The index of the character for which to retrieve the location.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the character for which to retrieve the location.","pos":[0,62]}]},{"pos":[102205,102245],"content":"The location of the specified character.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location of the specified character.","pos":[0,40]}]},{"pos":[102710,102741],"content":"Occurs during a drag operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs during a drag operation.","pos":[0,31]}]},{"pos":[102753,102794],"content":"This event is not relevant to this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event is not relevant to this class.","pos":[0,41]}]},{"pos":[102980,102992],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[103361,103430],"content":"Occurs when the user clicks the horizontal scroll bar of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user clicks the horizontal scroll bar of the control.","pos":[0,69]}]},{"pos":[103443,103585],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","needQuote":false,"needEscape":true,"source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[104713,104725],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[105104,105200],"content":"Occurs when the user switches input methods on an Asian version of the Windows operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user switches input methods on an Asian version of the Windows operating system.","pos":[0,96]}]},{"pos":[105213,105355],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","needQuote":false,"needEscape":true,"source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[106489,106501],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[106908,107064],"content":"Gets or sets a value that indicates <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> settings for Input Method Editor (IME) and Asian language support.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates <xref href=\"System.Windows.Forms.RichTextBox\"></xref> settings for Input Method Editor (IME) and Asian language support."},{"pos":[107263,107435],"content":"One of the <xref href=\"System.Windows.Forms.RichTextBoxLanguageOptions\"></xref> values. The default is <xref href=\"System.Windows.Forms.RichTextBoxLanguageOptions\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxLanguageOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,87],"source":"One of the <xref href=\"System.Windows.Forms.RichTextBoxLanguageOptions\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxLanguageOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[88,172],"source":" The default is <xref href=\"System.Windows.Forms.RichTextBoxLanguageOptions\"></xref>."}]},{"pos":[107885,107954],"content":"Occurs when the user clicks on a link within the text of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user clicks on a link within the text of the control.","pos":[0,69]}]},{"pos":[107967,108529],"content":"You can create an event handler for this event to process a link that has been clicked within the control. Using the information provided to the event handler, you can determine which link was clicked in the document.      > [!IMPORTANT] >  By default, links are displayed as text and are not clickable. To make them clickable set the <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A> property to `true`.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"You can create an event handler for this event to process a link that has been clicked within the control.","pos":[0,106]},{"content":"Using the information provided to the event handler, you can determine which link was clicked in the document.","pos":[107,217]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  By default, links are displayed as text and are not clickable.","pos":[223,303],"source":"      > [!IMPORTANT] >  By default, links are displayed as text and are not clickable."},{"content":"To make them clickable set the &lt;xref:System.Windows.Forms.RichTextBox.DetectUrls%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[304,408],"source":" To make them clickable set the <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A> property to `true`."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[415,557],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[109598,109610],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[110039,110169],"content":"Loads a rich text format (RTF) or standard ASCII text file into the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Loads a rich text format (RTF) or standard ASCII text file into the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control."},{"pos":[110182,111279],"content":"When loading a file with the LoadFile method, the contents of the file being loaded replace the entire contents of the <xref:System.Windows.Forms.RichTextBox> control. This will cause the values of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> and <xref:System.Windows.Forms.RichTextBox.Rtf%2A> properties to change. You can use this method to load a previously created text or RTF document into the control for manipulation. If you want to save the file, you can use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method.      > [!NOTE] >  With this version of the LoadFile method, if the file being loaded is not an RTF document, an exception will occur. To load a different type of file such as an ASCII text file, use the other versions of this method that accept a value from the <xref:System.Windows.Forms.RichTextBoxStreamType> enumeration as a parameter.      > [!NOTE] >  The LoadFile method will not open a file until a handle is created for the <xref:System.Windows.Forms.RichTextBox>. Ensure that the control's handle is created before calling the LoadFile method.","needQuote":false,"needEscape":true,"nodes":[{"content":"When loading a file with the LoadFile method, the contents of the file being loaded replace the entire contents of the &lt;xref:System.Windows.Forms.RichTextBox&gt; control.","pos":[0,167],"source":"When loading a file with the LoadFile method, the contents of the file being loaded replace the entire contents of the <xref:System.Windows.Forms.RichTextBox> control."},{"content":"This will cause the values of the &lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt; and &lt;xref:System.Windows.Forms.RichTextBox.Rtf%2A&gt; properties to change.","pos":[168,322],"source":" This will cause the values of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> and <xref:System.Windows.Forms.RichTextBox.Rtf%2A> properties to change."},{"content":"You can use this method to load a previously created text or RTF document into the control for manipulation.","pos":[323,431]},{"content":"If you want to save the file, you can use the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method.","pos":[432,537],"source":" If you want to save the file, you can use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  With this version of the LoadFile method, if the file being loaded is not an RTF document, an exception will occur.","pos":[543,671],"source":"      > [!NOTE] >  With this version of the LoadFile method, if the file being loaded is not an RTF document, an exception will occur."},{"content":"To load a different type of file such as an ASCII text file, use the other versions of this method that accept a value from the &lt;xref:System.Windows.Forms.RichTextBoxStreamType&gt; enumeration as a parameter.","pos":[672,877],"source":" To load a different type of file such as an ASCII text file, use the other versions of this method that accept a value from the <xref:System.Windows.Forms.RichTextBoxStreamType> enumeration as a parameter."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The LoadFile method will not open a file until a handle is created for the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[883,1011],"source":"      > [!NOTE] >  The LoadFile method will not open a file until a handle is created for the <xref:System.Windows.Forms.RichTextBox>."},{"content":"Ensure that the control's handle is created before calling the LoadFile method.","pos":[1012,1091]}]},{"pos":[112309,112368],"content":"The name and location of the file to load into the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name and location of the file to load into the control.","pos":[0,59]}]},{"pos":[112526,112584],"content":"An error occurred while loading the file into the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while loading the file into the control.","pos":[0,58]}]},{"pos":[112679,112724],"content":"The file being loaded is not an RTF document.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file being loaded is not an RTF document.","pos":[0,45]}]},{"pos":[113294,113411],"content":"Loads the contents of an existing data stream into the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Loads the contents of an existing data stream into the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control."},{"pos":[113424,114817],"content":"You can use this version of the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the <xref:System.Windows.Forms.RichTextBox> with data from an existing stream of data. The data that is loaded into the control replaces the entire contents of the <xref:System.Windows.Forms.RichTextBox> control. This will cause the values of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> and <xref:System.Windows.Forms.RichTextBox.Rtf%2A> properties to change. You can use this method to load a file that has been previously opened into a data stream into the control for manipulation. If you want to save contents of the control back into the stream, you can use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method that accepts a <xref:System.IO.Stream> object as a parameter.       This version of the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method also enables you to specify the type of data that is being loaded into the control. This feature enables you to use data streams that contain data other than rich text format (RTF) documents into the control.      > [!NOTE] >  The <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method will not open a file until a handle is created for the <xref:System.Windows.Forms.RichTextBox>. Ensure that the control's handle is created before calling the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can use this version of the &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method to load the &lt;xref:System.Windows.Forms.RichTextBox&gt; with data from an existing stream of data.","pos":[0,185],"source":"You can use this version of the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the <xref:System.Windows.Forms.RichTextBox> with data from an existing stream of data."},{"content":"The data that is loaded into the control replaces the entire contents of the &lt;xref:System.Windows.Forms.RichTextBox&gt; control.","pos":[186,311],"source":" The data that is loaded into the control replaces the entire contents of the <xref:System.Windows.Forms.RichTextBox> control."},{"content":"This will cause the values of the &lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt; and &lt;xref:System.Windows.Forms.RichTextBox.Rtf%2A&gt; properties to change.","pos":[312,466],"source":" This will cause the values of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> and <xref:System.Windows.Forms.RichTextBox.Rtf%2A> properties to change."},{"content":"You can use this method to load a file that has been previously opened into a data stream into the control for manipulation.","pos":[467,591]},{"content":"If you want to save contents of the control back into the stream, you can use the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method that accepts a &lt;xref:System.IO.Stream&gt; object as a parameter.","pos":[592,794],"source":" If you want to save contents of the control back into the stream, you can use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method that accepts a <xref:System.IO.Stream> object as a parameter."},{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method also enables you to specify the type of data that is being loaded into the control.","pos":[801,963],"source":"       This version of the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method also enables you to specify the type of data that is being loaded into the control."},{"content":"This feature enables you to use data streams that contain data other than rich text format (RTF) documents into the control.","pos":[964,1088]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method will not open a file until a handle is created for the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[1094,1265],"source":"      > [!NOTE] >  The <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method will not open a file until a handle is created for the <xref:System.Windows.Forms.RichTextBox>."},{"content":"Ensure that the control's handle is created before calling the &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method.","pos":[1266,1388],"source":" Ensure that the control's handle is created before calling the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method."}]},{"pos":[116028,116124],"content":"A stream of data to load into the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A stream of data to load into the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control."},{"pos":[116218,116300],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxStreamType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.RichTextBoxStreamType\"></xref> values."},{"pos":[116458,116516],"content":"An error occurred while loading the file into the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while loading the file into the control.","pos":[0,58]}]},{"pos":[116611,116656],"content":"The file being loaded is not an RTF document.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file being loaded is not an RTF document.","pos":[0,45]}]},{"pos":[117220,117321],"content":"Loads a specific type of file into the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Loads a specific type of file into the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control."},{"pos":[117334,118468],"content":"When loading a file with the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method, the contents of the file being loaded replace the entire contents of the <xref:System.Windows.Forms.RichTextBox> control. This will cause the values of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> and <xref:System.Windows.Forms.RichTextBox.Rtf%2A> properties to change. You can use this method to load a previously created text or rich text format (RTF) document into the control for manipulation. If you want to save the file, you can use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method.       You can use this version of the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to specify the file type of the file being loaded. This feature enables you to load files other than RTF documents into the control.      > [!NOTE] >  The <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method will not open a file until a handle is created for the <xref:System.Windows.Forms.RichTextBox>. Ensure that the control's handle is created before calling the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"When loading a file with the &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method, the contents of the file being loaded replace the entire contents of the &lt;xref:System.Windows.Forms.RichTextBox&gt; control.","pos":[0,210],"source":"When loading a file with the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method, the contents of the file being loaded replace the entire contents of the <xref:System.Windows.Forms.RichTextBox> control."},{"content":"This will cause the values of the &lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt; and &lt;xref:System.Windows.Forms.RichTextBox.Rtf%2A&gt; properties to change.","pos":[211,365],"source":" This will cause the values of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> and <xref:System.Windows.Forms.RichTextBox.Rtf%2A> properties to change."},{"content":"You can use this method to load a previously created text or rich text format (RTF) document into the control for manipulation.","pos":[366,493]},{"content":"If you want to save the file, you can use the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method.","pos":[494,599],"source":" If you want to save the file, you can use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method."},{"content":"You can use this version of the &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method to specify the file type of the file being loaded.","pos":[606,747],"source":"       You can use this version of the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to specify the file type of the file being loaded."},{"content":"This feature enables you to load files other than RTF documents into the control.","pos":[748,829]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method will not open a file until a handle is created for the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[835,1006],"source":"      > [!NOTE] >  The <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method will not open a file until a handle is created for the <xref:System.Windows.Forms.RichTextBox>."},{"content":"Ensure that the control's handle is created before calling the &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method.","pos":[1007,1129],"source":" Ensure that the control's handle is created before calling the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method."}]},{"pos":[119697,119756],"content":"The name and location of the file to load into the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name and location of the file to load into the control.","pos":[0,59]}]},{"pos":[119850,119932],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxStreamType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.RichTextBoxStreamType\"></xref> values."},{"pos":[120090,120148],"content":"An error occurred while loading the file into the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while loading the file into the control.","pos":[0,58]}]},{"pos":[120243,120288],"content":"The file being loaded is not an RTF document.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file being loaded is not an RTF document.","pos":[0,45]}]},{"pos":[120653,120757],"content":"Gets or sets the maximum number of characters the user can type or paste into the rich text box control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of characters the user can type or paste into the rich text box control.","pos":[0,104]}]},{"pos":[120770,121692],"content":"When this property is set to 0, the maximum length of the text that can be entered in the control is 64 KB of characters. This property is typically used when the <xref:System.Windows.Forms.RichTextBox> is used to display a single line of rich text format (RTF) text. You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database. You can limit the text entered into the control to the maximum length of the corresponding field in the database.      > [!NOTE] >  In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property. This property only affects text entered into the control at run time.","needQuote":false,"needEscape":true,"nodes":[{"content":"When this property is set to 0, the maximum length of the text that can be entered in the control is 64 KB of characters.","pos":[0,121]},{"content":"This property is typically used when the &lt;xref:System.Windows.Forms.RichTextBox&gt; is used to display a single line of rich text format (RTF) text.","pos":[122,267],"source":" This property is typically used when the <xref:System.Windows.Forms.RichTextBox> is used to display a single line of rich text format (RTF) text."},{"content":"You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.","pos":[268,490]},{"content":"You can limit the text entered into the control to the maximum length of the corresponding field in the database.","pos":[491,604]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In code, you can set the value of the &lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt; property to a value that has a length greater than the value specified by the &lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt; property.","pos":[610,849],"source":"      > [!NOTE] >  In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property."},{"content":"This property only affects text entered into the control at run time.","pos":[850,919]}]},{"pos":[122943,123041],"content":"The number of characters that can be entered into the control. The default is <xref:System.Int32>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters that can be entered into the control. The default is <xref:System.Int32>.","pos":[0,98],"nodes":[{"content":"The number of characters that can be entered into the control.","pos":[0,62]},{"content":"The default is &lt;xref:System.Int32&gt;.","pos":[63,98],"source":" The default is <xref:System.Int32>."}]}]},{"pos":[123206,123256],"content":"The value assigned to the property is less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value assigned to the property is less than 0.","pos":[0,50]}]},{"pos":[123621,123743],"content":"Gets or sets a value indicating whether this is a multiline <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether this is a multiline <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control."},{"pos":[123870,124175],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is a multiline <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control is a multiline <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,228],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is a multiline <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[229,305],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[124725,124809],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.BackColorChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.BackColorChanged\"></xref> event."},{"pos":[124967,125023],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[125680,125767],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox.ContentsResized\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.RichTextBox.ContentsResized\"></xref> event."},{"pos":[125780,126153],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnContentsResized method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnContentsResized method also allows derived classes to handle the event without attaching a delegate.","pos":[190,296]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[297,371]}]},{"pos":[126375,126473],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ContentsResizedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.ContentsResizedEventArgs\"></xref> that contains the event data."},{"pos":[127041,127127],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.ContextMenuChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.ContextMenuChanged\"></xref> event."},{"pos":[127287,127343],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[127889,127970],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.HandleCreated\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event."},{"pos":[128125,128181],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[128732,128815],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.HandleDestroyed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event."},{"pos":[128972,129028],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[129541,129620],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox.HScroll\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.RichTextBox.HScroll\"></xref> event."},{"pos":[129633,129998],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnHScroll method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnHScroll method also allows derived classes to handle the event without attaching a delegate.","pos":[190,288]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[289,363]}]},{"pos":[130147,130203],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[130718,130799],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox.ImeChange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.RichTextBox.ImeChange\"></xref> event."},{"pos":[130812,131179],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnImeChange method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnImeChange method also allows derived classes to handle the event without attaching a delegate.","pos":[190,290]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[291,365]}]},{"pos":[131330,131386],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[131996,132079],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox.LinkClicked\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.RichTextBox.LinkClicked\"></xref> event."},{"pos":[132092,132461],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnLinkClicked method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnLinkClicked method also allows derived classes to handle the event without attaching a delegate.","pos":[190,292]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[293,367]}]},{"pos":[132671,132765],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.LinkClickedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.LinkClickedEventArgs\"></xref> that contains the event data."},{"pos":[133284,133365],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox.Protected\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.RichTextBox.Protected\"></xref> event."},{"pos":[133378,133745],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnProtected method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnProtected method also allows derived classes to handle the event without attaching a delegate.","pos":[190,290]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[291,365]}]},{"pos":[133896,133952],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[134514,134600],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"></xref> event."},{"pos":[134760,134816],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[135377,135465],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox.SelectionChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.RichTextBox.SelectionChanged\"></xref> event."},{"pos":[135478,135852],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnSelectionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnSelectionChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[190,297]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[298,372]}]},{"pos":[136010,136066],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[136580,136659],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox.VScroll\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.RichTextBox.VScroll\"></xref> event."},{"pos":[136672,137037],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnVScroll method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnVScroll method also allows derived classes to handle the event without attaching a delegate.","pos":[190,288]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[289,363]}]},{"pos":[137186,137242],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[137992,138004],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[138612,138636],"content":"Processes a command key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes a command key.","pos":[0,24]}]},{"pos":[138859,138979],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, passed by reference, that represents the window message to process.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process."},{"pos":[139055,139156],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that represents the  key to process.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the  key to process."},{"pos":[139215,139397],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the character was processed by the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the character was processed by the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[139836,139906],"content":"Occurs when the user attempts to modify protected text in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user attempts to modify protected text in the control.","pos":[0,70]}]},{"pos":[139919,140610],"content":"You can create an event handler for this event in your applications to determine when the user has attempted to modify text that has been marked as protected in the control. The event handler can be used to notify the user that the text the user is attempting to modify is protected or to display a dialog box that enables the user to make appropriate changes to the text. For example, if the protected area is a date, you can display a dialog box that enables the user to choose a date which can then be applied to the text of the control.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"You can create an event handler for this event in your applications to determine when the user has attempted to modify text that has been marked as protected in the control.","pos":[0,173]},{"content":"The event handler can be used to notify the user that the text the user is attempting to modify is protected or to display a dialog box that enables the user to make appropriate changes to the text.","pos":[174,372]},{"content":"For example, if the protected area is a date, you can display a dialog box that enables the user to choose a date which can then be applied to the text of the control.","pos":[373,540]},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[547,689],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[141744,141756],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[142175,142216],"content":"This event is not relevant to this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event is not relevant to this class.","pos":[0,41]}]},{"pos":[142228,142269],"content":"This event is not relevant to this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event is not relevant to this class.","pos":[0,41]}]},{"pos":[142470,142482],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[142843,142903],"content":"Reapplies the last operation that was undone in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reapplies the last operation that was undone in the control.","pos":[0,60]}]},{"pos":[142915,143165],"content":"You can then use the Redo method to reapply the last undo operation to the control. The <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> method enables you to determine whether the last operation the user has undone can be reapplied to the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can then use the Redo method to reapply the last undo operation to the control. The <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> method enables you to determine whether the last operation the user has undone can be reapplied to the control.","pos":[0,250],"nodes":[{"content":"You can then use the Redo method to reapply the last undo operation to the control.","pos":[0,83]},{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.CanRedo%2A&gt; method enables you to determine whether the last operation the user has undone can be reapplied to the control.","pos":[84,250],"source":" The <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> method enables you to determine whether the last operation the user has undone can be reapplied to the control."}]}]},{"pos":[144533,144670],"content":"Gets the name of the action that can be reapplied to the control when the <xref:System.Windows.Forms.RichTextBox.Redo*> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the action that can be reapplied to the control when the &lt;xref:System.Windows.Forms.RichTextBox.Redo*&gt; method is called.","pos":[0,137],"source":"Gets the name of the action that can be reapplied to the control when the <xref:System.Windows.Forms.RichTextBox.Redo*> method is called."}]},{"pos":[144682,145183],"content":"If this property returns an empty string (\"\"), there is no operation available to reapply to the control. You can use this method to determine the last action undone in the <xref:System.Windows.Forms.RichTextBox> control that can then be reapplied to the control when a call to the <xref:System.Windows.Forms.RichTextBox.Redo%2A> method is made. You can determine whether there are any operations to be reapplied to the control by using the <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"If this property returns an empty string (\"\"), there is no operation available to reapply to the control. You can use this method to determine the last action undone in the <xref:System.Windows.Forms.RichTextBox> control that can then be reapplied to the control when a call to the <xref:System.Windows.Forms.RichTextBox.Redo%2A> method is made. You can determine whether there are any operations to be reapplied to the control by using the <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> property.","pos":[0,501],"nodes":[{"content":"If this property returns an empty string (\"\"), there is no operation available to reapply to the control.","pos":[0,105]},{"content":"You can use this method to determine the last action undone in the &lt;xref:System.Windows.Forms.RichTextBox&gt; control that can then be reapplied to the control when a call to the &lt;xref:System.Windows.Forms.RichTextBox.Redo%2A&gt; method is made.","pos":[106,345],"source":" You can use this method to determine the last action undone in the <xref:System.Windows.Forms.RichTextBox> control that can then be reapplied to the control when a call to the <xref:System.Windows.Forms.RichTextBox.Redo%2A> method is made."},{"content":"You can determine whether there are any operations to be reapplied to the control by using the &lt;xref:System.Windows.Forms.RichTextBox.CanRedo%2A&gt; property.","pos":[346,501],"source":" You can determine whether there are any operations to be reapplied to the control by using the <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> property."}]}]},{"pos":[146149,146300],"content":"A string that represents the name of the action that will be performed when a call to the <xref:System.Windows.Forms.RichTextBox.Redo*> method is made.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the name of the action that will be performed when a call to the &lt;xref:System.Windows.Forms.RichTextBox.Redo*&gt; method is made.","pos":[0,151],"source":"A string that represents the name of the action that will be performed when a call to the <xref:System.Windows.Forms.RichTextBox.Redo*> method is made."}]},{"pos":[146818,146863],"content":"This property is not relevant for this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]},{"pos":[146875,146920],"content":"This property is not relevant for this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]},{"pos":[147053,147295],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if shortcut keys are enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if shortcut keys are enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,165],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if shortcut keys are enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[166,242],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[147758,147878],"content":"Gets or sets the size of a single line of text within the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the size of a single line of text within the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control."},{"pos":[147890,148455],"content":"When a value greater than zero is entered into the control, a nonvisible margin is placed in the control at the specified number of pixels from the left side of the control. Any text that is entered that extends beyond this margin is placed on the next line of text in the control. This property affects all text currently entered into the control as well as any additional text entered into the control after the property is set. You can use this property to specify a maximum line width for all text entered into a <xref:System.Windows.Forms.RichTextBox> control.","needQuote":true,"needEscape":true,"nodes":[{"content":"When a value greater than zero is entered into the control, a nonvisible margin is placed in the control at the specified number of pixels from the left side of the control. Any text that is entered that extends beyond this margin is placed on the next line of text in the control. This property affects all text currently entered into the control as well as any additional text entered into the control after the property is set. You can use this property to specify a maximum line width for all text entered into a <xref:System.Windows.Forms.RichTextBox> control.","pos":[0,565],"nodes":[{"content":"When a value greater than zero is entered into the control, a nonvisible margin is placed in the control at the specified number of pixels from the left side of the control.","pos":[0,173]},{"content":"Any text that is entered that extends beyond this margin is placed on the next line of text in the control.","pos":[174,281]},{"content":"This property affects all text currently entered into the control as well as any additional text entered into the control after the property is set.","pos":[282,430]},{"content":"You can use this property to specify a maximum line width for all text entered into a &lt;xref:System.Windows.Forms.RichTextBox&gt; control.","pos":[431,565],"source":" You can use this property to specify a maximum line width for all text entered into a <xref:System.Windows.Forms.RichTextBox> control."}]}]},{"pos":[149670,149752],"content":"The size, in pixels, of a single line of text in the control. The default is zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size, in pixels, of a single line of text in the control. The default is zero.","pos":[0,82],"nodes":[{"content":"The size, in pixels, of a single line of text in the control.","pos":[0,61]},{"content":"The default is zero.","pos":[62,82]}]}]},{"pos":[149919,149958],"content":"The specified value was less than zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified value was less than zero.","pos":[0,39]}]},{"pos":[150293,150428],"content":"Gets or sets the text of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control, including all rich text format (RTF) codes.","needQuote":true,"needEscape":true,"source":"Gets or sets the text of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control, including all rich text format (RTF) codes."},{"pos":[150441,151068],"content":"You can use this property to place RTF formatted text into the control for display or to extract the text of the control with the specified RTF formatting defined in the text of the control. This property is typically used when you are assigning RTF text from another RTF source, such as Microsoft Word or Windows WordPad, to the control.       If you change the <xref:System.Windows.Forms.Control.RightToLeft%2A> property at run time, only raw text without formatting is preserved.       For the RTF codes, see \"rich text format (RTF) Specification, version 1.6\" in the MSDN library at http://msdn.microsoft.com/library.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can use this property to place RTF formatted text into the control for display or to extract the text of the control with the specified RTF formatting defined in the text of the control. This property is typically used when you are assigning RTF text from another RTF source, such as Microsoft Word or Windows WordPad, to the control.       If you change the <xref:System.Windows.Forms.Control.RightToLeft%2A> property at run time, only raw text without formatting is preserved.       For the RTF codes, see \"rich text format (RTF) Specification, version 1.6\" in the MSDN library at http://msdn.microsoft.com/library.","pos":[0,621],"nodes":[{"content":"You can use this property to place RTF formatted text into the control for display or to extract the text of the control with the specified RTF formatting defined in the text of the control.","pos":[0,190]},{"content":"This property is typically used when you are assigning RTF text from another RTF source, such as Microsoft Word or Windows WordPad, to the control.","pos":[191,338]},{"content":"If you change the &lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt; property at run time, only raw text without formatting is preserved.","pos":[345,482],"source":"       If you change the <xref:System.Windows.Forms.Control.RightToLeft%2A> property at run time, only raw text without formatting is preserved."},{"content":"For the RTF codes, see \"rich text format (RTF) Specification, version 1.6\" in the MSDN library at http://msdn.microsoft.com/library.","pos":[489,621]}]}]},{"pos":[151182,151220],"content":"The text of the control in RTF format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text of the control in RTF format.","pos":[0,38]}]},{"pos":[151699,151812],"content":"Saves the contents of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a rich text format (RTF) file.","needQuote":true,"needEscape":true,"source":"Saves the contents of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> to a rich text format (RTF) file."},{"pos":[151825,152550],"content":"The SaveFile method enables you to save the entire contents of the control to an RTF file that can be used by other programs such as Microsoft Word and Windows WordPad. If the file name that is passed to the `path` parameter already exists at the specified directory, the file will be overwritten without notice. You can use the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the contents of a file into the <xref:System.Windows.Forms.RichTextBox>.      > [!NOTE] >  To save the contents of the control to a different type of file format such as ASCII text, use the other versions of this method that accept a value from the <xref:System.Windows.Forms.RichTextBoxStreamType> enumeration as a parameter.","needQuote":false,"needEscape":true,"nodes":[{"content":"The SaveFile method enables you to save the entire contents of the control to an RTF file that can be used by other programs such as Microsoft Word and Windows WordPad.","pos":[0,168]},{"content":"If the file name that is passed to the <ph id=\"ph1\">`path`</ph> parameter already exists at the specified directory, the file will be overwritten without notice.","pos":[169,312],"source":" If the file name that is passed to the `path` parameter already exists at the specified directory, the file will be overwritten without notice."},{"content":"You can use the &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method to load the contents of a file into the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[313,468],"source":" You can use the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the contents of a file into the <xref:System.Windows.Forms.RichTextBox>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To save the contents of the control to a different type of file format such as ASCII text, use the other versions of this method that accept a value from the &lt;xref:System.Windows.Forms.RichTextBoxStreamType&gt; enumeration as a parameter.","pos":[474,722],"source":"      > [!NOTE] >  To save the contents of the control to a different type of file format such as ASCII text, use the other versions of this method that accept a value from the <xref:System.Windows.Forms.RichTextBoxStreamType> enumeration as a parameter."}]},{"pos":[153627,153669],"content":"The name and location of the file to save.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name and location of the file to save.","pos":[0,42]}]},{"pos":[153827,153891],"content":"An error occurs in saving the contents of the control to a file.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurs in saving the contents of the control to a file.","pos":[0,64]}]},{"pos":[154461,154570],"content":"Saves the contents of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control to an open data stream.","needQuote":true,"needEscape":true,"source":"Saves the contents of a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control to an open data stream."},{"pos":[154583,155177],"content":"This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method enables you to save the entire contents of the control to the data stream that is already opened. The data stream can then save the information to a file. You can use the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the contents of a file into the <xref:System.Windows.Forms.RichTextBox>.       This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method also enables you to specify a data format of the information that will be sent to the <xref:System.IO.Stream> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method enables you to save the entire contents of the control to the data stream that is already opened. The data stream can then save the information to a file. You can use the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the contents of a file into the <xref:System.Windows.Forms.RichTextBox>.       This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method also enables you to specify a data format of the information that will be sent to the <xref:System.IO.Stream> object.","pos":[0,592],"nodes":[{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method enables you to save the entire contents of the control to the data stream that is already opened.","pos":[0,176],"source":"This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method enables you to save the entire contents of the control to the data stream that is already opened."},{"content":"The data stream can then save the information to a file.","pos":[177,233]},{"content":"You can use the &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method to load the contents of a file into the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[234,389],"source":" You can use the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the contents of a file into the <xref:System.Windows.Forms.RichTextBox>."},{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method also enables you to specify a data format of the information that will be sent to the &lt;xref:System.IO.Stream&gt; object.","pos":[396,592],"source":"       This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method also enables you to specify a data format of the information that will be sent to the <xref:System.IO.Stream> object."}]}]},{"pos":[156388,156438],"content":"The data stream that contains the file to save to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data stream that contains the file to save to.","pos":[0,50]}]},{"pos":[156532,156614],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxStreamType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.RichTextBoxStreamType\"></xref> values."},{"pos":[156778,156851],"content":"An invalid file type is specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"An invalid file type is specified in the <code>fileType</code> parameter."},{"pos":[156940,157004],"content":"An error occurs in saving the contents of the control to a file.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurs in saving the contents of the control to a file.","pos":[0,64]}]},{"pos":[157568,157675],"content":"Saves the contents of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a specific type of file.","needQuote":true,"needEscape":true,"source":"Saves the contents of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> to a specific type of file."},{"pos":[157688,158672],"content":"The <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method enables you to save the entire contents of the control to an RTF file that can be used by other programs such as Microsoft Word and Windows WordPad. If the file name that is passed to the `path` parameter already exists at the specified directory, the file will be overwritten without notice. You can use the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the contents of a file into the <xref:System.Windows.Forms.RichTextBox>.       This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method enables you to specify a file type to save the contents of the control to. You can use this feature to ensure that the file is saved in the proper format based on the contents of the control. For example, if your document has no differences in font style or coloring, you can save the file as an ASCII text file by setting the `fileType` parameter to `RichTextBoxStreamType.PlainText`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method enables you to save the entire contents of the control to an RTF file that can be used by other programs such as Microsoft Word and Windows WordPad.","pos":[0,211],"source":"The <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method enables you to save the entire contents of the control to an RTF file that can be used by other programs such as Microsoft Word and Windows WordPad."},{"content":"If the file name that is passed to the <ph id=\"ph1\">`path`</ph> parameter already exists at the specified directory, the file will be overwritten without notice.","pos":[212,355],"source":" If the file name that is passed to the `path` parameter already exists at the specified directory, the file will be overwritten without notice."},{"content":"You can use the &lt;xref:System.Windows.Forms.RichTextBox.LoadFile%2A&gt; method to load the contents of a file into the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[356,511],"source":" You can use the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the contents of a file into the <xref:System.Windows.Forms.RichTextBox>."},{"content":"This version of the &lt;xref:System.Windows.Forms.RichTextBox.SaveFile%2A&gt; method enables you to specify a file type to save the contents of the control to.","pos":[518,671],"source":"       This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method enables you to specify a file type to save the contents of the control to."},{"content":"You can use this feature to ensure that the file is saved in the proper format based on the contents of the control.","pos":[672,788]},{"content":"For example, if your document has no differences in font style or coloring, you can save the file as an ASCII text file by setting the <ph id=\"ph1\">`fileType`</ph> parameter to <ph id=\"ph2\">`RichTextBoxStreamType.PlainText`</ph>.","pos":[789,982],"source":" For example, if your document has no differences in font style or coloring, you can save the file as an ASCII text file by setting the `fileType` parameter to `RichTextBoxStreamType.PlainText`."}]},{"pos":[159903,159945],"content":"The name and location of the file to save.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name and location of the file to save.","pos":[0,42]}]},{"pos":[160039,160121],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxStreamType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.RichTextBoxStreamType\"></xref> values."},{"pos":[160285,160358],"content":"An invalid file type is specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"An invalid file type is specified in the <code>fileType</code> parameter."},{"pos":[160447,160511],"content":"An error occurs in saving the contents of the control to a file.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurs in saving the contents of the control to a file.","pos":[0,64]}]},{"pos":[160881,160998],"content":"Gets or sets the type of scroll bars to display in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the type of scroll bars to display in the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control."},{"pos":[161011,161558],"content":"This property enables you to provide horizontal and vertical scroll bars to the user of the <xref:System.Windows.Forms.RichTextBox> control to enable scrolling text within the control that is outside of the physical dimensions of the control. You can also use this property to remove scroll bars from the control to restrict scrolling the contents of the control.      > [!NOTE] >  Horizontal scroll bars will not be shown if the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is `true`, regardless of the value of the ScrollBars property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property enables you to provide horizontal and vertical scroll bars to the user of the &lt;xref:System.Windows.Forms.RichTextBox&gt; control to enable scrolling text within the control that is outside of the physical dimensions of the control.","pos":[0,242],"source":"This property enables you to provide horizontal and vertical scroll bars to the user of the <xref:System.Windows.Forms.RichTextBox> control to enable scrolling text within the control that is outside of the physical dimensions of the control."},{"content":"You can also use this property to remove scroll bars from the control to restrict scrolling the contents of the control.","pos":[243,363]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Horizontal scroll bars will not be shown if the &lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt; is <ph id=\"ph2\">`true`</ph>, regardless of the value of the ScrollBars property.","pos":[369,544],"source":"      > [!NOTE] >  Horizontal scroll bars will not be shown if the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is `true`, regardless of the value of the ScrollBars property."}]},{"pos":[161744,161947],"content":"One of the <xref href=\"System.Windows.Forms.RichTextBoxScrollBars\"></xref> values. The default is <xref uid=\"langword_csharp_RichTextBoxScrollBars.Both\" name=\"RichTextBoxScrollBars.Both\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxScrollBars\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,82],"source":"One of the <xref href=\"System.Windows.Forms.RichTextBoxScrollBars\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_RichTextBoxScrollBars.Both\" name=\"RichTextBoxScrollBars.Both\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[83,203],"source":" The default is <xref uid=\"langword_csharp_RichTextBoxScrollBars.Both\" name=\"RichTextBoxScrollBars.Both\" href=\"\"></xref>."}]},{"pos":[162165,162283],"content":"The specified value is not defined in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxScrollBars\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"The specified value is not defined in the <xref href=\"System.Windows.Forms.RichTextBoxScrollBars\"></xref> enumeration."},{"pos":[162658,162747],"content":"Gets or sets the currently selected rich text format (RTF) formatted text in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the currently selected rich text format (RTF) formatted text in the control.","pos":[0,89]}]},{"pos":[162760,163394],"content":"This property enables you to obtain the selected text in the control, including the RTF formatting codes. You can use this property to copy text from your control, complete with formatting, and paste the text in other applications that accept RTF formatted text, such as Microsoft Word and Windows WordPad. To get the selected text, without RTF formatting codes, use the <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A> property.       If no text is currently selected, the text specified in this property is inserted at the insertion point. If text is selected, any text assigned to this property replaces the selected text.","needQuote":false,"needEscape":true,"nodes":[{"content":"This property enables you to obtain the selected text in the control, including the RTF formatting codes. You can use this property to copy text from your control, complete with formatting, and paste the text in other applications that accept RTF formatted text, such as Microsoft Word and Windows WordPad. To get the selected text, without RTF formatting codes, use the <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A> property.       If no text is currently selected, the text specified in this property is inserted at the insertion point. If text is selected, any text assigned to this property replaces the selected text.","pos":[0,632],"nodes":[{"content":"This property enables you to obtain the selected text in the control, including the RTF formatting codes.","pos":[0,105]},{"content":"You can use this property to copy text from your control, complete with formatting, and paste the text in other applications that accept RTF formatted text, such as Microsoft Word and Windows WordPad.","pos":[106,306]},{"content":"To get the selected text, without RTF formatting codes, use the &lt;xref:System.Windows.Forms.TextBoxBase.SelectedText%2A&gt; property.","pos":[307,436],"source":" To get the selected text, without RTF formatting codes, use the <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A> property."},{"content":"If no text is currently selected, the text specified in this property is inserted at the insertion point.","pos":[443,548]},{"content":"If text is selected, any text assigned to this property replaces the selected text.","pos":[549,632]}]}]},{"pos":[163516,163553],"content":"The selected RTF text in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected RTF text in the control.","pos":[0,37]}]},{"pos":[164008,164104],"content":"Gets or sets the selected text within the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the selected text within the <xref href=\"System.Windows.Forms.RichTextBox\"></xref>."},{"pos":[165062,165120],"content":"A string that represents the selected text in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the selected text in the control.","pos":[0,58]}]},{"pos":[165606,165686],"content":"Gets or sets the alignment to apply to the current selection or insertion point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the alignment to apply to the current selection or insertion point.","pos":[0,80]}]},{"pos":[165699,166970],"content":"If no paragraph is selected in the control, setting this property applies the alignment setting to the paragraph in which the insertion point appears as well as to paragraphs created after the paragraph that has the alignment property setting. For example, if there are two paragraphs in a <xref:System.Windows.Forms.RichTextBox> control and the insertion point is located within the second paragraph. If you set the SelectionAlignment property to `HorizontalAlignment.Center`, the paragraph at the insertion point will be centered within the control. If a third paragraph is created after the second paragraph, it also is aligned to the center of the control.       If a selection is made within the control when the property is set, all paragraphs selected are aligned based on this property setting. You can use this property to align the paragraphs in a document being created in the <xref:System.Windows.Forms.RichTextBox>. For example, if you want all paragraphs in a document to be centered, you can select all the paragraphs in the control and set the SelectionAlignment property to `HorizontalAlignment.Center`.      > [!NOTE] >  SelectionAlignment returns `SelectionAlignment.Left` when the text selection contains multiple paragraphs with mixed alignment.","needQuote":false,"needEscape":true,"nodes":[{"content":"If no paragraph is selected in the control, setting this property applies the alignment setting to the paragraph in which the insertion point appears as well as to paragraphs created after the paragraph that has the alignment property setting.","pos":[0,243]},{"content":"For example, if there are two paragraphs in a &lt;xref:System.Windows.Forms.RichTextBox&gt; control and the insertion point is located within the second paragraph.","pos":[244,401],"source":" For example, if there are two paragraphs in a <xref:System.Windows.Forms.RichTextBox> control and the insertion point is located within the second paragraph."},{"content":"If you set the SelectionAlignment property to <ph id=\"ph1\">`HorizontalAlignment.Center`</ph>, the paragraph at the insertion point will be centered within the control.","pos":[402,551],"source":" If you set the SelectionAlignment property to `HorizontalAlignment.Center`, the paragraph at the insertion point will be centered within the control."},{"content":"If a third paragraph is created after the second paragraph, it also is aligned to the center of the control.","pos":[552,660]},{"content":"If a selection is made within the control when the property is set, all paragraphs selected are aligned based on this property setting.","pos":[667,802]},{"content":"You can use this property to align the paragraphs in a document being created in the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[803,928],"source":" You can use this property to align the paragraphs in a document being created in the <xref:System.Windows.Forms.RichTextBox>."},{"content":"For example, if you want all paragraphs in a document to be centered, you can select all the paragraphs in the control and set the SelectionAlignment property to <ph id=\"ph1\">`HorizontalAlignment.Center`</ph>.","pos":[929,1120],"source":" For example, if you want all paragraphs in a document to be centered, you can select all the paragraphs in the control and set the SelectionAlignment property to `HorizontalAlignment.Center`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  SelectionAlignment returns <ph id=\"ph2\">`SelectionAlignment.Left`</ph> when the text selection contains multiple paragraphs with mixed alignment.","pos":[1126,1266],"source":"      > [!NOTE] >  SelectionAlignment returns `SelectionAlignment.Left` when the text selection contains multiple paragraphs with mixed alignment."}]},{"pos":[167740,167820],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values."},{"pos":[168046,168174],"content":"The specified value is not one of the values defined in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"The specified value is not one of the values defined in the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> class."},{"pos":[168584,168708],"content":"Gets or sets the color of text when the text is selected in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the color of text when the text is selected in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control."},{"pos":[168720,169029],"content":"Use SelectionBackColor to get or set the color of selected text in the <xref:System.Windows.Forms.RichTextBox>. If no text is currently selected, the SelectionBackColor property applies to the current position of the caret. Characters that are entered from that position have the specified SelectionBackColor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use SelectionBackColor to get or set the color of selected text in the <xref:System.Windows.Forms.RichTextBox>. If no text is currently selected, the SelectionBackColor property applies to the current position of the caret. Characters that are entered from that position have the specified SelectionBackColor.","pos":[0,309],"nodes":[{"content":"Use SelectionBackColor to get or set the color of selected text in the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[0,111],"source":"Use SelectionBackColor to get or set the color of selected text in the <xref:System.Windows.Forms.RichTextBox>."},{"content":"If no text is currently selected, the SelectionBackColor property applies to the current position of the caret.","pos":[112,223]},{"content":"Characters that are entered from that position have the specified SelectionBackColor.","pos":[224,309]}]}]},{"pos":[169178,169375],"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the text color when the text is selected. The default is the value of the <xref:System.Windows.Forms.Control.DefaultBackColor*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the text color when the text is selected.","pos":[0,101],"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the text color when the text is selected."},{"content":"The default is the value of the &lt;xref:System.Windows.Forms.Control.DefaultBackColor*&gt; property.","pos":[102,197],"source":" The default is the value of the <xref:System.Windows.Forms.Control.DefaultBackColor*> property."}]},{"pos":[169852,169964],"content":"Gets or sets a value indicating whether the bullet style is applied to the current selection or insertion point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the bullet style is applied to the current selection or insertion point.","pos":[0,112]}]},{"pos":[169977,170776],"content":"If no text is selected, the bullet style is applied to the current insertion point and to all paragraphs that the user enters after the insertion point. The bullet style is applied to the text of the control until the insertion point is moved or when the user presses the Enter key on an empty bullet item.       If text is selected within the control when this property is set, all paragraphs within the selected text are converted into bulleted items in the bulleted list. You can use this property to create bulleted lists within the documents you create in the <xref:System.Windows.Forms.RichTextBox> control.       The <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A> property enables you to specify the amount of indentation to apply between the bullet and the bulleted item's text.","needQuote":false,"needEscape":true,"nodes":[{"content":"If no text is selected, the bullet style is applied to the current insertion point and to all paragraphs that the user enters after the insertion point. The bullet style is applied to the text of the control until the insertion point is moved or when the user presses the Enter key on an empty bullet item.       If text is selected within the control when this property is set, all paragraphs within the selected text are converted into bulleted items in the bulleted list. You can use this property to create bulleted lists within the documents you create in the <xref:System.Windows.Forms.RichTextBox> control.       The <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A> property enables you to specify the amount of indentation to apply between the bullet and the bulleted item's text.","pos":[0,795],"nodes":[{"content":"If no text is selected, the bullet style is applied to the current insertion point and to all paragraphs that the user enters after the insertion point.","pos":[0,152]},{"content":"The bullet style is applied to the text of the control until the insertion point is moved or when the user presses the Enter key on an empty bullet item.","pos":[153,306]},{"content":"If text is selected within the control when this property is set, all paragraphs within the selected text are converted into bulleted items in the bulleted list.","pos":[313,474]},{"content":"You can use this property to create bulleted lists within the documents you create in the &lt;xref:System.Windows.Forms.RichTextBox&gt; control.","pos":[475,613],"source":" You can use this property to create bulleted lists within the documents you create in the <xref:System.Windows.Forms.RichTextBox> control."},{"content":"The &lt;xref:System.Windows.Forms.RichTextBox.BulletIndent%2A&gt; property enables you to specify the amount of indentation to apply between the bullet and the bulleted item's text.","pos":[620,795],"source":"       The <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A> property enables you to specify the amount of indentation to apply between the bullet and the bulleted item's text."}]}]},{"pos":[171714,171923],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current selection or insertion point has the bullet style applied; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection or insertion point has the bullet style applied; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[172399,172464],"content":"Occurs when the selection of text within the control has changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the selection of text within the control has changed.","pos":[0,65]}]},{"pos":[172477,172874],"content":"You can create an event handler for this event to determine when the user has changed text selection within the control. An event handler for this event can be used to keep text selected until the user has completed a task within the application.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"You can create an event handler for this event to determine when the user has changed text selection within the control.","pos":[0,120]},{"content":"An event handler for this event can be used to keep text selected until the user has completed a task within the application.","pos":[121,246]},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[253,395],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[174029,174041],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[174473,174594],"content":"Gets or sets whether text in the control appears on the baseline, as a superscript, or as a subscript below the baseline.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether text in the control appears on the baseline, as a superscript, or as a subscript below the baseline.","pos":[0,121]}]},{"pos":[174607,175642],"content":"The value of this property must be between -2000 and 2000.       If this property is set to zero, the text appears on the baseline. If it is a positive number, the number specifies the number of pixels by which to raise the text selection above the baseline. If it is a negative number, this number specifies the number of pixels by which to subscript the text selection. You can use this property to specify text as superscript or subscript.       If no text is selected, the offset is applied to the current insertion point and to all text that the user types after the insertion point. The character offset applies until the property is changed to a different value or until the insertion point is moved to a different section within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to create superscript and subscript text for such applications as mathematical expressions.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of this property must be between -2000 and 2000.       If this property is set to zero, the text appears on the baseline. If it is a positive number, the number specifies the number of pixels by which to raise the text selection above the baseline. If it is a negative number, this number specifies the number of pixels by which to subscript the text selection. You can use this property to specify text as superscript or subscript.       If no text is selected, the offset is applied to the current insertion point and to all text that the user types after the insertion point. The character offset applies until the property is changed to a different value or until the insertion point is moved to a different section within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to create superscript and subscript text for such applications as mathematical expressions.","pos":[0,1029],"nodes":[{"content":"The value of this property must be between -2000 and 2000.","pos":[0,58]},{"content":"If this property is set to zero, the text appears on the baseline.","pos":[65,131]},{"content":"If it is a positive number, the number specifies the number of pixels by which to raise the text selection above the baseline.","pos":[132,258]},{"content":"If it is a negative number, this number specifies the number of pixels by which to subscript the text selection.","pos":[259,371]},{"content":"You can use this property to specify text as superscript or subscript.","pos":[372,442]},{"content":"If no text is selected, the offset is applied to the current insertion point and to all text that the user types after the insertion point.","pos":[449,588]},{"content":"The character offset applies until the property is changed to a different value or until the insertion point is moved to a different section within the control.","pos":[589,749]},{"content":"If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it.","pos":[756,911]},{"content":"You can use this property to create superscript and subscript text for such applications as mathematical expressions.","pos":[912,1029]}]}]},{"pos":[176421,176466],"content":"A number that specifies the character offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"A number that specifies the character offset.","pos":[0,45]}]},{"pos":[176641,176702],"content":"The specified value was less than -2000 or greater than 2000.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified value was less than -2000 or greater than 2000.","pos":[0,61]}]},{"pos":[177092,177169],"content":"Gets or sets the text color of the current text selection or insertion point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text color of the current text selection or insertion point.","pos":[0,77]}]},{"pos":[177182,178081],"content":"If the current text selection has more than one color specified, this property returns `Color.Empty`. If no text is currently selected, the text color specified in this property is applied to the current insertion point and to all text that is typed into the control after the insertion point. The text color setting applies until the property is changed to a different color or until the insertion point is moved to a different section within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to change the color of text in the <xref:System.Windows.Forms.RichTextBox>.       To make text bold in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A> property to assign a new font that has the bold font style specified.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the current text selection has more than one color specified, this property returns <ph id=\"ph1\">`Color.Empty`</ph>.","pos":[0,101],"source":"If the current text selection has more than one color specified, this property returns `Color.Empty`."},{"content":"If no text is currently selected, the text color specified in this property is applied to the current insertion point and to all text that is typed into the control after the insertion point.","pos":[102,293]},{"content":"The text color setting applies until the property is changed to a different color or until the insertion point is moved to a different section within the control.","pos":[294,456]},{"content":"If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it.","pos":[463,618]},{"content":"You can use this property to change the color of text in the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[619,720],"source":" You can use this property to change the color of text in the <xref:System.Windows.Forms.RichTextBox>."},{"content":"To make text bold in the control, use the &lt;xref:System.Windows.Forms.RichTextBox.SelectionFont%2A&gt; property to assign a new font that has the bold font style specified.","pos":[727,895],"source":"       To make text bold in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A> property to assign a new font that has the bold font style specified."}]},{"pos":[179052,179206],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the color to apply to the current text selection or to text entered after the insertion point.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the color to apply to the current text selection or to text entered after the insertion point."},{"pos":[179669,179740],"content":"Gets or sets the font of the current text selection or insertion point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the font of the current text selection or insertion point.","pos":[0,71]}]},{"pos":[179753,180728],"content":"If the current text selection has more than one font specified, this property is `null`. If no text is currently selected, the font specified in this property is applied to the current insertion point and to all text that is typed into the control after the insertion point. The font setting applies until the property is changed to a different font or until the insertion point is moved to a different section within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to change the font style of text in the <xref:System.Windows.Forms.RichTextBox>. You can make the text in the control bold, italic, and underlined. You can also change the size of the text and the font applied to the text.       To change the color of the text in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the current text selection has more than one font specified, this property is <ph id=\"ph1\">`null`</ph>.","pos":[0,88],"source":"If the current text selection has more than one font specified, this property is `null`."},{"content":"If no text is currently selected, the font specified in this property is applied to the current insertion point and to all text that is typed into the control after the insertion point.","pos":[89,274]},{"content":"The font setting applies until the property is changed to a different font or until the insertion point is moved to a different section within the control.","pos":[275,430]},{"content":"If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it.","pos":[437,592]},{"content":"You can use this property to change the font style of text in the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[593,699],"source":" You can use this property to change the font style of text in the <xref:System.Windows.Forms.RichTextBox>."},{"content":"You can make the text in the control bold, italic, and underlined.","pos":[700,766]},{"content":"You can also change the size of the text and the font applied to the text.","pos":[767,841]},{"content":"To change the color of the text in the control, use the &lt;xref:System.Windows.Forms.RichTextBox.SelectionColor%2A&gt; property.","pos":[848,971],"source":"       To change the color of the text in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> property."}]},{"pos":[181698,181850],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Font\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the font to apply to the current text selection or to text entered after the insertion point.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Font\"></xref> that represents the font to apply to the current text selection or to text entered after the insertion point."},{"pos":[182357,182517],"content":"Gets or sets the distance between the left edge of the first line of text in the selected paragraph and the left edge of subsequent lines in the same paragraph.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the distance between the left edge of the first line of text in the selected paragraph and the left edge of subsequent lines in the same paragraph.","pos":[0,160]}]},{"pos":[182530,183276],"content":"If no text is currently selected, the hanging indent is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The hanging indent setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to apply a hanging indent to your paragraphs.       To set the indention of the first line of a paragraph selection, use the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"If no text is currently selected, the hanging indent is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The hanging indent setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to apply a hanging indent to your paragraphs.       To set the indention of the first line of a paragraph selection, use the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> property.","pos":[0,742],"nodes":[{"content":"If no text is currently selected, the hanging indent is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point.","pos":[0,191]},{"content":"The hanging indent setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.","pos":[192,360]},{"content":"If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it.","pos":[367,522]},{"content":"You can use this property to apply a hanging indent to your paragraphs.","pos":[523,594]},{"content":"To set the indention of the first line of a paragraph selection, use the &lt;xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A&gt; property.","pos":[601,742],"source":"       To set the indention of the first line of a paragraph selection, use the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> property."}]}]},{"pos":[184055,184164],"content":"The distance, in pixels, for the hanging indent applied to the current text selection or the insertion point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distance, in pixels, for the hanging indent applied to the current text selection or the insertion point.","pos":[0,109]}]},{"pos":[184645,184739],"content":"Gets or sets the length, in pixels, of the indentation of the line where the selection starts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the length, in pixels, of the indentation of the line where the selection starts.","pos":[0,94]}]},{"pos":[184752,185705],"content":"If no text is currently selected, the indentation setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The indentation setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to indent paragraphs contained in document of the <xref:System.Windows.Forms.RichTextBox>. You can use this property in conjunction with the <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A> to create paragraphs displayed in paragraphs.       To create a hanging indent for paragraphs in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"If no text is currently selected, the indentation setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The indentation setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to indent paragraphs contained in document of the <xref:System.Windows.Forms.RichTextBox>. You can use this property in conjunction with the <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A> to create paragraphs displayed in paragraphs.       To create a hanging indent for paragraphs in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> property.","pos":[0,949],"nodes":[{"content":"If no text is currently selected, the indentation setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point.","pos":[0,196]},{"content":"The indentation setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.","pos":[197,362]},{"content":"If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it.","pos":[369,524]},{"content":"You can use this property to indent paragraphs contained in document of the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[525,641],"source":" You can use this property to indent paragraphs contained in document of the <xref:System.Windows.Forms.RichTextBox>."},{"content":"You can use this property in conjunction with the &lt;xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A&gt; to create paragraphs displayed in paragraphs.","pos":[642,801],"source":" You can use this property in conjunction with the <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A> to create paragraphs displayed in paragraphs."},{"content":"To create a hanging indent for paragraphs in the control, use the &lt;xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A&gt; property.","pos":[808,949],"source":"       To create a hanging indent for paragraphs in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> property."}]}]},{"pos":[186447,186572],"content":"The current distance, in pixels, of the indentation applied to the left of the current text selection or the insertion point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current distance, in pixels, of the indentation applied to the left of the current text selection or the insertion point.","pos":[0,125]}]},{"pos":[187046,187104],"content":"Gets or sets the number of characters selected in control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of characters selected in control.","pos":[0,58]}]},{"pos":[187116,187438],"content":"You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text. You can also use this property to determine the total number of characters (including spaces) that are selected when performing single character tasks in a `for` loop.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.","pos":[0,154]},{"content":"You can also use this property to determine the total number of characters (including spaces) that are selected when performing single character tasks in a <ph id=\"ph1\">`for`</ph> loop.","pos":[155,322],"source":" You can also use this property to determine the total number of characters (including spaces) that are selected when performing single character tasks in a `for` loop."}]},{"pos":[188287,188337],"content":"The number of characters selected in the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters selected in the text box.","pos":[0,50]}]},{"pos":[188826,188906],"content":"Gets or sets a value indicating whether the current text selection is protected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the current text selection is protected.","pos":[0,80]}]},{"pos":[188919,189845],"content":"If no text is currently selected, the protection setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The protection setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to prevent the user from modifying sections of text within the control.       If this property is set to `true`, the <xref:System.Windows.Forms.RichTextBox.Protected> event is raised when the user attempts to change the current text selection.      > [!NOTE] >  This property will return `true` only if the entire selection within the control contains protected content.","needQuote":false,"needEscape":true,"nodes":[{"content":"If no text is currently selected, the protection setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point.","pos":[0,195]},{"content":"The protection setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.","pos":[196,360]},{"content":"If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it.","pos":[367,522]},{"content":"You can use this property to prevent the user from modifying sections of text within the control.","pos":[523,620]},{"content":"If this property is set to <ph id=\"ph1\">`true`</ph>, the &lt;xref:System.Windows.Forms.RichTextBox.Protected&gt; event is raised when the user attempts to change the current text selection.","pos":[627,792],"source":"       If this property is set to `true`, the <xref:System.Windows.Forms.RichTextBox.Protected> event is raised when the user attempts to change the current text selection."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property will return <ph id=\"ph2\">`true`</ph> only if the entire selection within the control contains protected content.","pos":[798,919],"source":"      > [!NOTE] >  This property will return `true` only if the entire selection within the control contains protected content."}]},{"pos":[190724,191000],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection prevents any changes to its content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current selection prevents any changes to its content; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,197],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection prevents any changes to its content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[198,276],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[191502,191707],"content":"The distance (in pixels) between the right edge of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control and the right edge of the text that is selected or added at the current insertion point.","needQuote":true,"needEscape":true,"source":"The distance (in pixels) between the right edge of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control and the right edge of the text that is selected or added at the current insertion point."},{"pos":[191720,192668],"content":"If no text is currently selected, the indentation setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The indentation setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to indent paragraphs contained in document of the <xref:System.Windows.Forms.RichTextBox>. You can use this property in conjunction with the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> to create paragraphs displayed in paragraphs.       To create a hanging indent for paragraphs in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"If no text is currently selected, the indentation setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The indentation setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.       If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to indent paragraphs contained in document of the <xref:System.Windows.Forms.RichTextBox>. You can use this property in conjunction with the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> to create paragraphs displayed in paragraphs.       To create a hanging indent for paragraphs in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> property.","pos":[0,944],"nodes":[{"content":"If no text is currently selected, the indentation setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point.","pos":[0,196]},{"content":"The indentation setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.","pos":[197,362]},{"content":"If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it.","pos":[369,524]},{"content":"You can use this property to indent paragraphs contained in document of the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[525,641],"source":" You can use this property to indent paragraphs contained in document of the <xref:System.Windows.Forms.RichTextBox>."},{"content":"You can use this property in conjunction with the &lt;xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A&gt; to create paragraphs displayed in paragraphs.","pos":[642,796],"source":" You can use this property in conjunction with the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> to create paragraphs displayed in paragraphs."},{"content":"To create a hanging indent for paragraphs in the control, use the &lt;xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A&gt; property.","pos":[803,944],"source":"       To create a hanging indent for paragraphs in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> property."}]}]},{"pos":[193504,193595],"content":"The indentation space, in pixels, at the right of the current selection or insertion point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The indentation space, in pixels, at the right of the current selection or insertion point.","pos":[0,91]}]},{"pos":[194064,194176],"content":"Gets or sets the absolute tab stop positions in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the absolute tab stop positions in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control."},{"pos":[194188,194698],"content":"This property enables you to obtain an array that contains the spacing for each tab in the current text selection within the <xref:System.Windows.Forms.RichTextBox> control. You can then use this property to adjust the size of each tab within the text selection. For example, if you want to adjust the tab space within the document, you can select the entire document and obtain the list of tab spaces using the SelectionTabs property. You can then adjust them to new values and reassign them to this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property enables you to obtain an array that contains the spacing for each tab in the current text selection within the <xref:System.Windows.Forms.RichTextBox> control. You can then use this property to adjust the size of each tab within the text selection. For example, if you want to adjust the tab space within the document, you can select the entire document and obtain the list of tab spaces using the SelectionTabs property. You can then adjust them to new values and reassign them to this property.","pos":[0,510],"nodes":[{"content":"This property enables you to obtain an array that contains the spacing for each tab in the current text selection within the &lt;xref:System.Windows.Forms.RichTextBox&gt; control.","pos":[0,173],"source":"This property enables you to obtain an array that contains the spacing for each tab in the current text selection within the <xref:System.Windows.Forms.RichTextBox> control."},{"content":"You can then use this property to adjust the size of each tab within the text selection.","pos":[174,262]},{"content":"For example, if you want to adjust the tab space within the document, you can select the entire document and obtain the list of tab spaces using the SelectionTabs property.","pos":[263,435]},{"content":"You can then adjust them to new values and reassign them to this property.","pos":[436,510]}]}]},{"pos":[194821,194885],"content":"An array in which each member specifies a tab offset, in pixels.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array in which each member specifies a tab offset, in pixels.","pos":[0,64]}]},{"pos":[195074,195122],"content":"The array has more than the maximum 32 elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array has more than the maximum 32 elements.","pos":[0,48]}]},{"pos":[195507,195550],"content":"Gets the selection type within the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the selection type within the control.","pos":[0,43]}]},{"pos":[195562,195961],"content":"You can use this property to determine the type of data that is currently selected in the control in order to handle the selection properly when performing tasks within the control on the current selection. The property can represent any combination of values from the <xref:System.Windows.Forms.RichTextBoxSelectionTypes> enumeration representing the many types of objects in the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can use this property to determine the type of data that is currently selected in the control in order to handle the selection properly when performing tasks within the control on the current selection. The property can represent any combination of values from the <xref:System.Windows.Forms.RichTextBoxSelectionTypes> enumeration representing the many types of objects in the current selection.","pos":[0,399],"nodes":[{"content":"You can use this property to determine the type of data that is currently selected in the control in order to handle the selection properly when performing tasks within the control on the current selection.","pos":[0,206]},{"content":"The property can represent any combination of values from the &lt;xref:System.Windows.Forms.RichTextBoxSelectionTypes&gt; enumeration representing the many types of objects in the current selection.","pos":[207,399],"source":" The property can represent any combination of values from the <xref:System.Windows.Forms.RichTextBoxSelectionTypes> enumeration representing the many types of objects in the current selection."}]}]},{"pos":[196152,196256],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBoxSelectionTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.RichTextBoxSelectionTypes\"></xref> values."},{"pos":[196748,196881],"content":"Gets or sets a value indicating whether a selection margin is displayed in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether a selection margin is displayed in the <xref href=\"System.Windows.Forms.RichTextBox\"></xref>."},{"pos":[196894,197965],"content":"You can use this property to enable the user to easily select lines of text in the <xref:System.Windows.Forms.RichTextBox>. The selection margin is added to the left side of the <xref:System.Windows.Forms.RichTextBox>. This margin makes it easier for the user to select text starting on the left side of the control. The user can click in the selection margin to select a single line of text or double-click to select the entire paragraph that the line double-clicked is contained within.      > [!NOTE] >  If the ShowSelectionMargin property is set to `true`, setting the <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> property to `RichTextBoxScrollBars.Horizontal`, `RichTextBoxScrollBars.Vertical`, or `RichTextBoxScrollBars.Both` will not cause scroll bars to be displayed. In order to display scroll bars while the ShowSelectionMargin property is set to `true`, set the <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> property to `RichTextBoxScrollBars.ForcedHorizontal`, `RichTextBoxScrollBars.ForcedVertical`, or `RichTextBoxScrollBars.ForcedBoth`.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can use this property to enable the user to easily select lines of text in the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[0,123],"source":"You can use this property to enable the user to easily select lines of text in the <xref:System.Windows.Forms.RichTextBox>."},{"content":"The selection margin is added to the left side of the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[124,218],"source":" The selection margin is added to the left side of the <xref:System.Windows.Forms.RichTextBox>."},{"content":"This margin makes it easier for the user to select text starting on the left side of the control.","pos":[219,316]},{"content":"The user can click in the selection margin to select a single line of text or double-click to select the entire paragraph that the line double-clicked is contained within.","pos":[317,488]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the ShowSelectionMargin property is set to <ph id=\"ph2\">`true`</ph>, setting the &lt;xref:System.Windows.Forms.RichTextBox.ScrollBars%2A&gt; property to <ph id=\"ph3\">`RichTextBoxScrollBars.Horizontal`</ph>, <ph id=\"ph4\">`RichTextBoxScrollBars.Vertical`</ph>, or <ph id=\"ph5\">`RichTextBoxScrollBars.Both`</ph> will not cause scroll bars to be displayed.","pos":[494,784],"source":"      > [!NOTE] >  If the ShowSelectionMargin property is set to `true`, setting the <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> property to `RichTextBoxScrollBars.Horizontal`, `RichTextBoxScrollBars.Vertical`, or `RichTextBoxScrollBars.Both` will not cause scroll bars to be displayed."},{"content":"In order to display scroll bars while the ShowSelectionMargin property is set to <ph id=\"ph1\">`true`</ph>, set the &lt;xref:System.Windows.Forms.RichTextBox.ScrollBars%2A&gt; property to <ph id=\"ph2\">`RichTextBoxScrollBars.ForcedHorizontal`</ph>, <ph id=\"ph3\">`RichTextBoxScrollBars.ForcedVertical`</ph>, or <ph id=\"ph4\">`RichTextBoxScrollBars.ForcedBoth`</ph>.","pos":[785,1068],"source":" In order to display scroll bars while the ShowSelectionMargin property is set to `true`, set the <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> property to `RichTextBoxScrollBars.ForcedHorizontal`, `RichTextBoxScrollBars.ForcedVertical`, or `RichTextBoxScrollBars.ForcedBoth`."}]},{"pos":[198094,198357],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a selection margin is enabled in the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a selection margin is enabled in the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,184],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a selection margin is enabled in the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[185,263],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[198780,198831],"content":"Gets or sets the current text in the rich text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the current text in the rich text box.","pos":[0,51]}]},{"pos":[198843,199510],"content":"To display multiple lines of text in a <xref:System.Windows.Forms.RichTextBox>, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`. To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property. The Text property does not return any information about the formatting applied to the contents of the <xref:System.Windows.Forms.RichTextBox>. To get the rich text formatting (RTF) codes, use the <xref:System.Windows.Forms.RichTextBox.Rtf%2A> property. The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"To display multiple lines of text in a &lt;xref:System.Windows.Forms.RichTextBox&gt;, set the &lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[0,160],"source":"To display multiple lines of text in a <xref:System.Windows.Forms.RichTextBox>, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`."},{"content":"To read or set the text of a multiline text box, use the &lt;xref:System.Windows.Forms.TextBoxBase.Lines%2A&gt; property.","pos":[161,276],"source":" To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property."},{"content":"The Text property does not return any information about the formatting applied to the contents of the &lt;xref:System.Windows.Forms.RichTextBox&gt;.","pos":[277,419],"source":" The Text property does not return any information about the formatting applied to the contents of the <xref:System.Windows.Forms.RichTextBox>."},{"content":"To get the rich text formatting (RTF) codes, use the &lt;xref:System.Windows.Forms.RichTextBox.Rtf%2A&gt; property.","pos":[420,529],"source":" To get the rich text formatting (RTF) codes, use the <xref:System.Windows.Forms.RichTextBox.Rtf%2A> property."},{"content":"The amount of text that can be entered in the &lt;xref:System.Windows.Forms.RichTextBox&gt; control is limited only by available system memory.","pos":[530,667],"source":" The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory."}]},{"pos":[199633,199667],"content":"The text displayed in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text displayed in the control.","pos":[0,34]}]},{"pos":[200105,200144],"content":"Gets the length of text in the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the length of text in the control.","pos":[0,39]}]},{"pos":[200264,200326],"content":"The number of characters contained in the text of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters contained in the text of the control.","pos":[0,62]}]},{"pos":[200790,200924],"content":"Gets the name of the action that can be undone in the control when the <xref:System.Windows.Forms.TextBoxBase.Undo*> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the action that can be undone in the control when the &lt;xref:System.Windows.Forms.TextBoxBase.Undo*&gt; method is called.","pos":[0,134],"source":"Gets the name of the action that can be undone in the control when the <xref:System.Windows.Forms.TextBoxBase.Undo*> method is called."}]},{"pos":[200936,201144],"content":"This property enables you to determine the last action that was done within the control that can be undone. You can use this property to limit the operations available to be undone by the user of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property enables you to determine the last action that was done within the control that can be undone. You can use this property to limit the operations available to be undone by the user of the control.","pos":[0,208],"nodes":[{"content":"This property enables you to determine the last action that was done within the control that can be undone.","pos":[0,107]},{"content":"You can use this property to limit the operations available to be undone by the user of the control.","pos":[108,208]}]}]},{"pos":[201263,201310],"content":"The text name of the action that can be undone.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text name of the action that can be undone.","pos":[0,47]}]},{"pos":[201740,201808],"content":"Occurs when the user clicks the vertical scroll bars of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user clicks the vertical scroll bars of the control.","pos":[0,68]}]},{"pos":[201821,201963],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","needQuote":false,"needEscape":true,"source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[203091,203103],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[203562,203589],"content":"Processes Windows messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes Windows messages.","pos":[0,27]}]},{"pos":[203771,203796],"content":"A Windows Message object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Windows Message object.","pos":[0,25]}]},{"pos":[204237,204334],"content":"Gets or sets the current zoom level of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the current zoom level of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref>."},{"pos":[204346,204963],"content":"The value of this property can be between 1/64 (0.015625) and 64.0, not inclusive. A value of 1.0 indicates that no zoom is applied to the control. The zoom feature performs optimally when the document contains TrueType fonts. When a font that is not TrueType is used within the document of the control, the ZoomFactor property will use the nearest whole number value. You can use this property to enable the user of the <xref:System.Windows.Forms.RichTextBox> control to zoom into sections of the documentation that are too small to view or to condense the view to enable more of the document to be viewed on screen.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this property can be between 1/64 (0.015625) and 64.0, not inclusive. A value of 1.0 indicates that no zoom is applied to the control. The zoom feature performs optimally when the document contains TrueType fonts. When a font that is not TrueType is used within the document of the control, the ZoomFactor property will use the nearest whole number value. You can use this property to enable the user of the <xref:System.Windows.Forms.RichTextBox> control to zoom into sections of the documentation that are too small to view or to condense the view to enable more of the document to be viewed on screen.","pos":[0,617],"nodes":[{"content":"The value of this property can be between 1/64 (0.015625) and 64.0, not inclusive.","pos":[0,82]},{"content":"A value of 1.0 indicates that no zoom is applied to the control.","pos":[83,147]},{"content":"The zoom feature performs optimally when the document contains TrueType fonts.","pos":[148,226]},{"content":"When a font that is not TrueType is used within the document of the control, the ZoomFactor property will use the nearest whole number value.","pos":[227,368]},{"content":"You can use this property to enable the user of the &lt;xref:System.Windows.Forms.RichTextBox&gt; control to zoom into sections of the documentation that are too small to view or to condense the view to enable more of the document to be viewed on screen.","pos":[369,617],"source":" You can use this property to enable the user of the <xref:System.Windows.Forms.RichTextBox> control to zoom into sections of the documentation that are too small to view or to condense the view to enable more of the document to be viewed on screen."}]}]},{"pos":[206183,206241],"content":"The factor by which the contents of the control is zoomed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The factor by which the contents of the control is zoomed.","pos":[0,58]}]},{"pos":[206407,206475],"content":"The specified zoom factor did not fall within the permissible range.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified zoom factor did not fall within the permissible range.","pos":[0,68]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.RichTextBox\n  id: RichTextBox\n  children:\n  - System.Windows.Forms.RichTextBox.#ctor\n  - System.Windows.Forms.RichTextBox.AllowDrop\n  - System.Windows.Forms.RichTextBox.AutoSize\n  - System.Windows.Forms.RichTextBox.AutoWordSelection\n  - System.Windows.Forms.RichTextBox.BackgroundImage\n  - System.Windows.Forms.RichTextBox.BackgroundImageChanged\n  - System.Windows.Forms.RichTextBox.BackgroundImageLayout\n  - System.Windows.Forms.RichTextBox.BackgroundImageLayoutChanged\n  - System.Windows.Forms.RichTextBox.BulletIndent\n  - System.Windows.Forms.RichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)\n  - System.Windows.Forms.RichTextBox.CanRedo\n  - System.Windows.Forms.RichTextBox.ContentsResized\n  - System.Windows.Forms.RichTextBox.CreateParams\n  - System.Windows.Forms.RichTextBox.CreateRichEditOleCallback\n  - System.Windows.Forms.RichTextBox.DefaultSize\n  - System.Windows.Forms.RichTextBox.DetectUrls\n  - System.Windows.Forms.RichTextBox.DragDrop\n  - System.Windows.Forms.RichTextBox.DragEnter\n  - System.Windows.Forms.RichTextBox.DragLeave\n  - System.Windows.Forms.RichTextBox.DragOver\n  - System.Windows.Forms.RichTextBox.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  - System.Windows.Forms.RichTextBox.EnableAutoDragDrop\n  - System.Windows.Forms.RichTextBox.Find(System.Char[])\n  - System.Windows.Forms.RichTextBox.Find(System.String)\n  - System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32)\n  - System.Windows.Forms.RichTextBox.Find(System.String,System.Windows.Forms.RichTextBoxFinds)\n  - System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32,System.Int32)\n  - System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Windows.Forms.RichTextBoxFinds)\n  - System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Int32,System.Windows.Forms.RichTextBoxFinds)\n  - System.Windows.Forms.RichTextBox.Font\n  - System.Windows.Forms.RichTextBox.ForeColor\n  - System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)\n  - System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)\n  - System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)\n  - System.Windows.Forms.RichTextBox.GiveFeedback\n  - System.Windows.Forms.RichTextBox.HScroll\n  - System.Windows.Forms.RichTextBox.ImeChange\n  - System.Windows.Forms.RichTextBox.LanguageOption\n  - System.Windows.Forms.RichTextBox.LinkClicked\n  - System.Windows.Forms.RichTextBox.LoadFile(System.String)\n  - System.Windows.Forms.RichTextBox.LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)\n  - System.Windows.Forms.RichTextBox.LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)\n  - System.Windows.Forms.RichTextBox.MaxLength\n  - System.Windows.Forms.RichTextBox.Multiline\n  - System.Windows.Forms.RichTextBox.OnBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)\n  - System.Windows.Forms.RichTextBox.OnContextMenuChanged(System.EventArgs)\n  - System.Windows.Forms.RichTextBox.OnHandleCreated(System.EventArgs)\n  - System.Windows.Forms.RichTextBox.OnHandleDestroyed(System.EventArgs)\n  - System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)\n  - System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)\n  - System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)\n  - System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)\n  - System.Windows.Forms.RichTextBox.OnRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)\n  - System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)\n  - System.Windows.Forms.RichTextBox.Paste(System.Windows.Forms.DataFormats.Format)\n  - System.Windows.Forms.RichTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  - System.Windows.Forms.RichTextBox.Protected\n  - System.Windows.Forms.RichTextBox.QueryContinueDrag\n  - System.Windows.Forms.RichTextBox.Redo\n  - System.Windows.Forms.RichTextBox.RedoActionName\n  - System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled\n  - System.Windows.Forms.RichTextBox.RightMargin\n  - System.Windows.Forms.RichTextBox.Rtf\n  - System.Windows.Forms.RichTextBox.SaveFile(System.String)\n  - System.Windows.Forms.RichTextBox.SaveFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)\n  - System.Windows.Forms.RichTextBox.SaveFile(System.String,System.Windows.Forms.RichTextBoxStreamType)\n  - System.Windows.Forms.RichTextBox.ScrollBars\n  - System.Windows.Forms.RichTextBox.SelectedRtf\n  - System.Windows.Forms.RichTextBox.SelectedText\n  - System.Windows.Forms.RichTextBox.SelectionAlignment\n  - System.Windows.Forms.RichTextBox.SelectionBackColor\n  - System.Windows.Forms.RichTextBox.SelectionBullet\n  - System.Windows.Forms.RichTextBox.SelectionChanged\n  - System.Windows.Forms.RichTextBox.SelectionCharOffset\n  - System.Windows.Forms.RichTextBox.SelectionColor\n  - System.Windows.Forms.RichTextBox.SelectionFont\n  - System.Windows.Forms.RichTextBox.SelectionHangingIndent\n  - System.Windows.Forms.RichTextBox.SelectionIndent\n  - System.Windows.Forms.RichTextBox.SelectionLength\n  - System.Windows.Forms.RichTextBox.SelectionProtected\n  - System.Windows.Forms.RichTextBox.SelectionRightIndent\n  - System.Windows.Forms.RichTextBox.SelectionTabs\n  - System.Windows.Forms.RichTextBox.SelectionType\n  - System.Windows.Forms.RichTextBox.ShowSelectionMargin\n  - System.Windows.Forms.RichTextBox.Text\n  - System.Windows.Forms.RichTextBox.TextLength\n  - System.Windows.Forms.RichTextBox.UndoActionName\n  - System.Windows.Forms.RichTextBox.VScroll\n  - System.Windows.Forms.RichTextBox.WndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.RichTextBox.ZoomFactor\n  langs:\n  - csharp\n  name: RichTextBox\n  nameWithType: RichTextBox\n  fullName: System.Windows.Forms.RichTextBox\n  type: Class\n  summary: Represents a Windows rich text box control.\n  remarks: \"With the RichTextBox control, the user can enter and edit text. The control also provides more advanced formatting features than the standard <xref:System.Windows.Forms.TextBox> control. Text can be assigned directly to the control, or can be loaded from a rich text format (RTF) or plain text file. The text within the control can be assigned character and paragraph formatting.  \\n  \\n The RichTextBox control provides a number of properties you can use to apply formatting to any portion of text within the control. To change the formatting of text, it must first be selected. Only selected text can be assigned character and paragraph formatting. Once a setting has been made to a selected section of text, all text entered after the selection is also formatted with the same settings until a setting change is made or a different section of the control's document is selected. The <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A> property enables you to make text bold or italic. You can also use this property to change the size and typeface of the text. The <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> property enables you to change the color of the text. To create bulleted lists you can use the <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> property. You can also adjust paragraph formatting by setting the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A>, <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A>, and <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> properties.  \\n  \\n The RichTextBox control provides methods that provide functionality for opening and saving files. The <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method enables you to load an existing RTF or ASCII text file into the control. You can also load data from an already opened data stream. The <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> enables you to save a file to RTF or ASCII text. Similar to the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method, you can also use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method to save to an open data stream. The RichTextBox control also provides features for finding strings of text. The <xref:System.Windows.Forms.RichTextBox.Find%2A> method is overloaded to find both strings of text as well as specific characters within the text of the control.  \\n  \\n You can also initialize the RichTextBox control to data stored in memory. For example, you can initialize the <xref:System.Windows.Forms.RichTextBox.Rtf%2A> property to a string that contains the text to display, including the RTF codes that determine how the text should be formatted.  \\n  \\n If the text within the control contains links, such as a link to a Web site, you can use the <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A> property to display the link appropriately in the control's text. You can then handle the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event to perform the tasks associated with the link. The <xref:System.Windows.Forms.RichTextBox.SelectionProtected%2A> property enables you to protect text within the control from manipulation by the user. With protected text in your control, you can handle the <xref:System.Windows.Forms.RichTextBox.Protected> event to determine when the user has attempted to modify protected text, and either alert the user that the text is protected or provide the user with a standard way to manipulate the protected text.  \\n  \\n Applications that already use <xref:System.Windows.Forms.TextBox> controls can easily be adapted to make use of RichTextBox controls. However, the RichTextBox control does not have the same 64K character capacity limit of the <xref:System.Windows.Forms.TextBox> control. The RichTextBox is typically used to provide text manipulation and display features similar to word processing applications such as Microsoft Word.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.TextBoxBase.Undo%2A?displayProperty=fullName> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.\"\n  example:\n  - \"The following code example creates a RichTextBox control that loads an RTF file into the control and searches for the first instance of the word \\\"Text.\\\" The code then changes the font style, font size, and font color of the selected text and saves the changes back to the original file. The example code finishes by adding the control to its <xref:System.Windows.Forms.Form>. This example requires that the method created in the example code is added to a <xref:System.Windows.Forms.Form> class and called from the constructor of the form. The example also requires that an RTF file is created, in the root of the C drive, containing the word \\\"Text.\\\"  \\n  \\n [!code-cpp[Classic RichTextBox Example#1](~/add/codesnippet/cpp/t-system.windows.forms.r_0_1.cpp)]\\n [!code-cs[Classic RichTextBox Example#1](~/add/codesnippet/csharp/t-system.windows.forms.r_0_1.cs)]\\n [!code-vb[Classic RichTextBox Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.r_0_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(\"System.Windows.Forms.Design.RichTextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)]\n\n      public class RichTextBox : System.Windows.Forms.TextBoxBase\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Windows.Forms.Control\n  - System.Windows.Forms.TextBoxBase\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityObject\n  - System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  - System.Windows.Forms.Control.AccessibleDescription\n  - System.Windows.Forms.Control.AccessibleName\n  - System.Windows.Forms.Control.AccessibleRole\n  - System.Windows.Forms.Control.Anchor\n  - System.Windows.Forms.Control.AutoScrollOffset\n  - System.Windows.Forms.Control.BackColorChanged\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.BindingContext\n  - System.Windows.Forms.Control.BindingContextChanged\n  - System.Windows.Forms.Control.Bottom\n  - System.Windows.Forms.Control.Bounds\n  - System.Windows.Forms.Control.BringToFront\n  - System.Windows.Forms.Control.CanFocus\n  - System.Windows.Forms.Control.CanRaiseEvents\n  - System.Windows.Forms.Control.CanSelect\n  - System.Windows.Forms.Control.Capture\n  - System.Windows.Forms.Control.CausesValidation\n  - System.Windows.Forms.Control.CausesValidationChanged\n  - System.Windows.Forms.Control.ChangeUICues\n  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  - System.Windows.Forms.Control.ClientRectangle\n  - System.Windows.Forms.Control.ClientSize\n  - System.Windows.Forms.Control.ClientSizeChanged\n  - System.Windows.Forms.Control.CompanyName\n  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  - System.Windows.Forms.Control.ContainsFocus\n  - System.Windows.Forms.Control.ContextMenu\n  - System.Windows.Forms.Control.ContextMenuChanged\n  - System.Windows.Forms.Control.ContextMenuStrip\n  - System.Windows.Forms.Control.ContextMenuStripChanged\n  - System.Windows.Forms.Control.ControlAdded\n  - System.Windows.Forms.Control.ControlRemoved\n  - System.Windows.Forms.Control.Controls\n  - System.Windows.Forms.Control.CreateAccessibilityInstance\n  - System.Windows.Forms.Control.CreateControl\n  - System.Windows.Forms.Control.CreateControlsInstance\n  - System.Windows.Forms.Control.Created\n  - System.Windows.Forms.Control.CreateGraphics\n  - System.Windows.Forms.Control.Cursor\n  - System.Windows.Forms.Control.CursorChanged\n  - System.Windows.Forms.Control.DataBindings\n  - System.Windows.Forms.Control.DefaultBackColor\n  - System.Windows.Forms.Control.DefaultFont\n  - System.Windows.Forms.Control.DefaultForeColor\n  - System.Windows.Forms.Control.DefaultImeMode\n  - System.Windows.Forms.Control.DefaultMargin\n  - System.Windows.Forms.Control.DefaultMaximumSize\n  - System.Windows.Forms.Control.DefaultMinimumSize\n  - System.Windows.Forms.Control.DefaultPadding\n  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.DestroyHandle\n  - System.Windows.Forms.Control.DisplayRectangle\n  - System.Windows.Forms.Control.Dispose(System.Boolean)\n  - System.Windows.Forms.Control.Disposing\n  - System.Windows.Forms.Control.Dock\n  - System.Windows.Forms.Control.DockChanged\n  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  - System.Windows.Forms.Control.DoubleClick\n  - System.Windows.Forms.Control.Enabled\n  - System.Windows.Forms.Control.EnabledChanged\n  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  - System.Windows.Forms.Control.Enter\n  - System.Windows.Forms.Control.FindForm\n  - System.Windows.Forms.Control.Focus\n  - System.Windows.Forms.Control.Focused\n  - System.Windows.Forms.Control.FontChanged\n  - System.Windows.Forms.Control.FontHeight\n  - System.Windows.Forms.Control.ForeColorChanged\n  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  - System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  - System.Windows.Forms.Control.GetAutoSizeMode\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  - System.Windows.Forms.Control.GetContainerControl\n  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  - System.Windows.Forms.Control.GetTopLevel\n  - System.Windows.Forms.Control.GotFocus\n  - System.Windows.Forms.Control.Handle\n  - System.Windows.Forms.Control.HandleCreated\n  - System.Windows.Forms.Control.HandleDestroyed\n  - System.Windows.Forms.Control.HasChildren\n  - System.Windows.Forms.Control.Height\n  - System.Windows.Forms.Control.HelpRequested\n  - System.Windows.Forms.Control.Hide\n  - System.Windows.Forms.Control.ImeMode\n  - System.Windows.Forms.Control.ImeModeChanged\n  - System.Windows.Forms.Control.InitLayout\n  - System.Windows.Forms.Control.Invalidate\n  - System.Windows.Forms.Control.Invalidate(System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  - System.Windows.Forms.Control.Invalidated\n  - System.Windows.Forms.Control.Invoke(System.Delegate)\n  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokeRequired\n  - System.Windows.Forms.Control.IsAccessible\n  - System.Windows.Forms.Control.IsDisposed\n  - System.Windows.Forms.Control.IsHandleCreated\n  - System.Windows.Forms.Control.IsInputChar(System.Char)\n  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsMirrored\n  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  - System.Windows.Forms.Control.KeyDown\n  - System.Windows.Forms.Control.KeyPress\n  - System.Windows.Forms.Control.KeyUp\n  - System.Windows.Forms.Control.Layout\n  - System.Windows.Forms.Control.LayoutEngine\n  - System.Windows.Forms.Control.Leave\n  - System.Windows.Forms.Control.Left\n  - System.Windows.Forms.Control.Location\n  - System.Windows.Forms.Control.LocationChanged\n  - System.Windows.Forms.Control.LostFocus\n  - System.Windows.Forms.Control.Margin\n  - System.Windows.Forms.Control.MarginChanged\n  - System.Windows.Forms.Control.MaximumSize\n  - System.Windows.Forms.Control.MinimumSize\n  - System.Windows.Forms.Control.ModifierKeys\n  - System.Windows.Forms.Control.MouseButtons\n  - System.Windows.Forms.Control.MouseCaptureChanged\n  - System.Windows.Forms.Control.MouseDoubleClick\n  - System.Windows.Forms.Control.MouseDown\n  - System.Windows.Forms.Control.MouseEnter\n  - System.Windows.Forms.Control.MouseHover\n  - System.Windows.Forms.Control.MouseLeave\n  - System.Windows.Forms.Control.MouseMove\n  - System.Windows.Forms.Control.MousePosition\n  - System.Windows.Forms.Control.MouseUp\n  - System.Windows.Forms.Control.MouseWheel\n  - System.Windows.Forms.Control.Move\n  - System.Windows.Forms.Control.Name\n  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  - System.Windows.Forms.Control.OnClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnCreateControl\n  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)\n  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  - System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)\n  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMove(System.EventArgs)\n  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnResize(System.EventArgs)\n  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.Parent\n  - System.Windows.Forms.Control.ParentChanged\n  - System.Windows.Forms.Control.PerformLayout\n  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  - System.Windows.Forms.Control.PreferredSize\n  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreviewKeyDown\n  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)\n  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)\n  - System.Windows.Forms.Control.ProductName\n  - System.Windows.Forms.Control.ProductVersion\n  - System.Windows.Forms.Control.PropagatingImeMode\n  - System.Windows.Forms.Control.QueryAccessibilityHelp\n  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.RecreateHandle\n  - System.Windows.Forms.Control.RecreatingHandle\n  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.Refresh\n  - System.Windows.Forms.Control.Region\n  - System.Windows.Forms.Control.RegionChanged\n  - System.Windows.Forms.Control.RenderRightToLeft\n  - System.Windows.Forms.Control.ResetBackColor\n  - System.Windows.Forms.Control.ResetBindings\n  - System.Windows.Forms.Control.ResetCursor\n  - System.Windows.Forms.Control.ResetFont\n  - System.Windows.Forms.Control.ResetForeColor\n  - System.Windows.Forms.Control.ResetImeMode\n  - System.Windows.Forms.Control.ResetMouseEventArgs\n  - System.Windows.Forms.Control.ResetRightToLeft\n  - System.Windows.Forms.Control.ResetText\n  - System.Windows.Forms.Control.Resize\n  - System.Windows.Forms.Control.ResizeRedraw\n  - System.Windows.Forms.Control.ResumeLayout\n  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  - System.Windows.Forms.Control.Right\n  - System.Windows.Forms.Control.RightToLeft\n  - System.Windows.Forms.Control.RightToLeftChanged\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  - System.Windows.Forms.Control.Scale(System.Single)\n  - System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  - System.Windows.Forms.Control.ScaleChildren\n  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)\n  - System.Windows.Forms.Control.Select\n  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SendToBack\n  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)\n  - System.Windows.Forms.Control.Show\n  - System.Windows.Forms.Control.ShowFocusCues\n  - System.Windows.Forms.Control.ShowKeyboardCues\n  - System.Windows.Forms.Control.Site\n  - System.Windows.Forms.Control.Size\n  - System.Windows.Forms.Control.SizeChanged\n  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.StyleChanged\n  - System.Windows.Forms.Control.SuspendLayout\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.SystemColorsChanged\n  - System.Windows.Forms.Control.TabIndex\n  - System.Windows.Forms.Control.TabIndexChanged\n  - System.Windows.Forms.Control.TabStop\n  - System.Windows.Forms.Control.TabStopChanged\n  - System.Windows.Forms.Control.Tag\n  - System.Windows.Forms.Control.TextChanged\n  - System.Windows.Forms.Control.Top\n  - System.Windows.Forms.Control.TopLevelControl\n  - System.Windows.Forms.Control.Update\n  - System.Windows.Forms.Control.UpdateBounds\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateStyles\n  - System.Windows.Forms.Control.UpdateZOrder\n  - System.Windows.Forms.Control.UseWaitCursor\n  - System.Windows.Forms.Control.Validated\n  - System.Windows.Forms.Control.Validating\n  - System.Windows.Forms.Control.Visible\n  - System.Windows.Forms.Control.VisibleChanged\n  - System.Windows.Forms.Control.Width\n  - System.Windows.Forms.Control.WindowTarget\n  - System.Windows.Forms.TextBoxBase.AcceptsTab\n  - System.Windows.Forms.TextBoxBase.AcceptsTabChanged\n  - System.Windows.Forms.TextBoxBase.AppendText(System.String)\n  - System.Windows.Forms.TextBoxBase.AutoSizeChanged\n  - System.Windows.Forms.TextBoxBase.BackColor\n  - System.Windows.Forms.TextBoxBase.BorderStyle\n  - System.Windows.Forms.TextBoxBase.BorderStyleChanged\n  - System.Windows.Forms.TextBoxBase.CanEnableIme\n  - System.Windows.Forms.TextBoxBase.CanUndo\n  - System.Windows.Forms.TextBoxBase.Clear\n  - System.Windows.Forms.TextBoxBase.ClearUndo\n  - System.Windows.Forms.TextBoxBase.Click\n  - System.Windows.Forms.TextBoxBase.Copy\n  - System.Windows.Forms.TextBoxBase.CreateHandle\n  - System.Windows.Forms.TextBoxBase.Cut\n  - System.Windows.Forms.TextBoxBase.DefaultCursor\n  - System.Windows.Forms.TextBoxBase.DeselectAll\n  - System.Windows.Forms.TextBoxBase.DoubleBuffered\n  - System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)\n  - System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)\n  - System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine\n  - System.Windows.Forms.TextBoxBase.HideSelection\n  - System.Windows.Forms.TextBoxBase.HideSelectionChanged\n  - System.Windows.Forms.TextBoxBase.ImeModeBase\n  - System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.TextBoxBase.Lines\n  - System.Windows.Forms.TextBoxBase.Modified\n  - System.Windows.Forms.TextBoxBase.ModifiedChanged\n  - System.Windows.Forms.TextBoxBase.MouseClick\n  - System.Windows.Forms.TextBoxBase.MultilineChanged\n  - System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.Padding\n  - System.Windows.Forms.TextBoxBase.PaddingChanged\n  - System.Windows.Forms.TextBoxBase.Paint\n  - System.Windows.Forms.TextBoxBase.Paste\n  - System.Windows.Forms.TextBoxBase.PreferredHeight\n  - System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.TextBoxBase.ReadOnly\n  - System.Windows.Forms.TextBoxBase.ReadOnlyChanged\n  - System.Windows.Forms.TextBoxBase.ScrollToCaret\n  - System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)\n  - System.Windows.Forms.TextBoxBase.SelectAll\n  - System.Windows.Forms.TextBoxBase.SelectionStart\n  - System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.TextBoxBase.ShortcutsEnabled\n  - System.Windows.Forms.TextBoxBase.ToString\n  - System.Windows.Forms.TextBoxBase.Undo\n  - System.Windows.Forms.TextBoxBase.WordWrap\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: RichTextBox()\n  nameWithType: RichTextBox.RichTextBox()\n  fullName: System.Windows.Forms.RichTextBox.RichTextBox()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> class.\n  remarks: By default, the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the control is set to `true`.\n  example:\n  - \"The following code example creates a <xref:System.Windows.Forms.RichTextBox> control that loads an RTF file into the control and searches for the first instance of the word \\\"Text.\\\" The code then changes the font style, font size, and font color of the selected text and saves the changes back to the original file. The example code finishes by adding the control to its <xref:System.Windows.Forms.Form>. This example requires that the method created in the example code is added to a <xref:System.Windows.Forms.Form> class and called from the constructor of the form. The example also requires that an RTF file is created, in the root of the C drive, containing the word \\\"Text.\\\"  \\n  \\n [!code-cpp[Classic RichTextBox Example#1](~/add/codesnippet/cpp/m-system.windows.forms.r_0_1.cpp)]\\n [!code-cs[Classic RichTextBox Example#1](~/add/codesnippet/csharp/m-system.windows.forms.r_0_1.cs)]\\n [!code-vb[Classic RichTextBox Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_0_1.vb)]\"\n  syntax:\n    content: public RichTextBox ();\n    parameters: []\n  overload: System.Windows.Forms.RichTextBox.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.AllowDrop\n  id: AllowDrop\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: AllowDrop\n  nameWithType: RichTextBox.AllowDrop\n  fullName: System.Windows.Forms.RichTextBox.AllowDrop\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the control will enable drag-and-drop operations.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control. The constructor of the form sets the AllowDrop property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>. The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method. The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type. The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>. This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.  \\n  \\n [!code-cpp[RichTextBox.AllowDrop#1](~/add/codesnippet/cpp/p-system.windows.forms.r_4_1.cpp)]\\n [!code-vb[RichTextBox.AllowDrop#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_4_1.vb)]\\n [!code-cs[RichTextBox.AllowDrop#1](~/add/codesnippet/csharp/p-system.windows.forms.r_4_1.cs)]\"\n  syntax:\n    content: public override bool AllowDrop { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if drag-and-drop is enabled in the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.AllowDrop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.AutoSize\n  id: AutoSize\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: AutoSize\n  nameWithType: RichTextBox.AutoSize\n  fullName: System.Windows.Forms.RichTextBox.AutoSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This property is not relevant to this class.\n  remarks: '-   This property is not relevant to this class.'\n  syntax:\n    content: public override bool AutoSize { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.AutoSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.AutoWordSelection\n  id: AutoWordSelection\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: AutoWordSelection\n  nameWithType: RichTextBox.AutoWordSelection\n  fullName: System.Windows.Forms.RichTextBox.AutoWordSelection\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether automatic word selection is enabled.\n  remarks: If this property is set to `true`, selecting any part of the text in the control selects the entire word.\n  example:\n  - \"The following code example demonstrates how to create a <xref:System.Windows.Forms.RichTextBox> that zooms in on text, automatically selects words in the text of the control when a word is double-clicked, and has a margin on the right side of the client area of the control. If the <xref:System.Windows.Forms.RichTextBox> control has a small width, using this code will create a <xref:System.Windows.Forms.RichTextBox> where each character of text is displayed on its own line. While in this vertical display position, clicking on any part of a word will select all characters of the word regardless of the fact that the text is displayed vertically. This example requires that you have a form that contains a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1`.  \\n  \\n [!code-cpp[RichTextBox.ZoomFactor#1](~/add/codesnippet/cpp/p-system.windows.forms.r_25_1.cpp)]\\n [!code-cs[RichTextBox.ZoomFactor#1](~/add/codesnippet/csharp/p-system.windows.forms.r_25_1.cs)]\\n [!code-vb[RichTextBox.ZoomFactor#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_25_1.vb)]\"\n  syntax:\n    content: public bool AutoWordSelection { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if automatic word selection is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.AutoWordSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.BackgroundImage\n  id: BackgroundImage\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: BackgroundImage\n  nameWithType: RichTextBox.BackgroundImage\n  fullName: System.Windows.Forms.RichTextBox.BackgroundImage\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This property is not relevant to this class.\n  remarks: This property is not relevant to this class.\n  syntax:\n    content: public override System.Drawing.Image BackgroundImage { get; set; }\n    return:\n      type: System.Drawing.Image\n      description: The background image displayed in the control.\n  overload: System.Windows.Forms.RichTextBox.BackgroundImage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.BackgroundImageChanged\n  id: BackgroundImageChanged\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: BackgroundImageChanged\n  nameWithType: RichTextBox.BackgroundImageChanged\n  fullName: System.Windows.Forms.RichTextBox.BackgroundImageChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref:System.Windows.Forms.RichTextBox.BackgroundImage*> property changes.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler BackgroundImageChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.BackgroundImageLayout\n  id: BackgroundImageLayout\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: BackgroundImageLayout\n  nameWithType: RichTextBox.BackgroundImageLayout\n  fullName: System.Windows.Forms.RichTextBox.BackgroundImageLayout\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This property is not relevant to this class.\n  remarks: This property is not relevant to this class.\n  syntax:\n    content: public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }\n    return:\n      type: System.Windows.Forms.ImageLayout\n      description: The layout of the background image displayed in the control.\n  overload: System.Windows.Forms.RichTextBox.BackgroundImageLayout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.BackgroundImageLayoutChanged\n  id: BackgroundImageLayoutChanged\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: BackgroundImageLayoutChanged\n  nameWithType: RichTextBox.BackgroundImageLayoutChanged\n  fullName: System.Windows.Forms.RichTextBox.BackgroundImageLayoutChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref:System.Windows.Forms.RichTextBox.BackgroundImageLayout*> property changes.\n  remarks: This event is not relevant to this class.\n  syntax:\n    content: public event EventHandler BackgroundImageLayoutChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.BulletIndent\n  id: BulletIndent\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: BulletIndent\n  nameWithType: RichTextBox.BulletIndent\n  fullName: System.Windows.Forms.RichTextBox.BulletIndent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the indentation used in the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control when the bullet style is applied to the text.\n  remarks: To apply the bullet style to a paragraph of text, set the <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> property to `true` and then set the BulletIndent property to the number of pixels that the text should be indented. The paragraph will have the bullet style applied to it with the specified amount of indentation after the bullet. This property only affects the current paragraph within the control's text and the currently selected bullet in a list of bulleted items. To apply a different indentation level to an entire list of bulleted items, all the text of the bulleted items must be selected before setting the BulletIndent property.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> property with the BulletIndent, <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>, and <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> properties to create a bulleted list in a <xref:System.Windows.Forms.RichTextBox> control. This example requires that a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1` is created on a form.  \\n  \\n [!code-cs[RichTextBox.BulletIndent#1](~/add/codesnippet/csharp/p-system.windows.forms.r_26_1.cs)]\\n [!code-cpp[RichTextBox.BulletIndent#1](~/add/codesnippet/cpp/p-system.windows.forms.r_26_1.cpp)]\\n [!code-vb[RichTextBox.BulletIndent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_26_1.vb)]\"\n  syntax:\n    content: public int BulletIndent { get; set; }\n    return:\n      type: System.Int32\n      description: The number of pixels inserted as the indentation after a bullet. The default is zero.\n  overload: System.Windows.Forms.RichTextBox.BulletIndent*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified indentation was less than zero.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)\n  id: CanPaste(System.Windows.Forms.DataFormats.Format)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: CanPaste(DataFormats+Format)\n  nameWithType: RichTextBox.CanPaste(DataFormats+Format)\n  fullName: System.Windows.Forms.RichTextBox.CanPaste(DataFormats+Format)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: public bool CanPaste (System.Windows.Forms.DataFormats.Format clipFormat);\n    parameters:\n    - id: clipFormat\n      type: System.Windows.Forms.DataFormats.Format\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Windows.Forms.RichTextBox.CanPaste*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.CanRedo\n  id: CanRedo\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: CanRedo\n  nameWithType: RichTextBox.CanRedo\n  fullName: System.Windows.Forms.RichTextBox.CanRedo\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether there are actions that have occurred within the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> that can be reapplied.\n  remarks: You can use this property to determine whether the last operation undone in the <xref:System.Windows.Forms.RichTextBox> can be reapplied using the <xref:System.Windows.Forms.RichTextBox.Redo%2A> method.\n  example:\n  - \"The following code example demonstrates how to use the CanRedo and <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> properties, and the <xref:System.Windows.Forms.RichTextBox.Redo%2A> method, to restrict a redo operation to any action except the deletion of text. This example requires that you have a form that contains a <xref:System.Windows.Forms.RichTextBox> control and that an operation within the <xref:System.Windows.Forms.RichTextBox> has been performed and undone before the code in this example is called.  \\n  \\n [!code-cs[RichTextBox.RedoAction#1](~/add/codesnippet/csharp/p-system.windows.forms.r_2_1.cs)]\\n [!code-vb[RichTextBox.RedoAction#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_2_1.vb)]\\n [!code-cpp[RichTextBox.RedoAction#1](~/add/codesnippet/cpp/p-system.windows.forms.r_2_1.cpp)]\"\n  syntax:\n    content: public bool CanRedo { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are operations that have been undone that can be reapplied to the content of the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.CanRedo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.ContentsResized\n  id: ContentsResized\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: ContentsResized\n  nameWithType: RichTextBox.ContentsResized\n  fullName: System.Windows.Forms.RichTextBox.ContentsResized\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when contents within the control are resized.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ContentsResized event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.RichTextBox> named `RichTextBox1`. Then ensure that the event handler is associated with the ContentsResized event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#537](~/add/codesnippet/csharp/e-system.windows.forms.r_8_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#537](~/add/codesnippet/visualbasic/e-system.windows.forms.r_8_1.vb)]\"\n  syntax:\n    content: public event System.Windows.Forms.ContentsResizedEventHandler ContentsResized;\n    return:\n      type: System.Windows.Forms.ContentsResizedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.CreateParams\n  id: CreateParams\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: CreateParams\n  nameWithType: RichTextBox.CreateParams\n  fullName: System.Windows.Forms.RichTextBox.CreateParams\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the required creation parameters when the control handle is created.\n  syntax:\n    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }\n    return:\n      type: System.Windows.Forms.CreateParams\n      description: A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created.\n  overload: System.Windows.Forms.RichTextBox.CreateParams*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.CreateRichEditOleCallback\n  id: CreateRichEditOleCallback\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: CreateRichEditOleCallback()\n  nameWithType: RichTextBox.CreateRichEditOleCallback()\n  fullName: System.Windows.Forms.RichTextBox.CreateRichEditOleCallback()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates an <xref uid=\"langword_csharp_IRichEditOleCallback\" name=\"IRichEditOleCallback\" href=\"\"></xref>-compatible object for handling rich-edit callback operations.\n  syntax:\n    content: protected virtual object CreateRichEditOleCallback ();\n    parameters: []\n    return:\n      type: System.Object\n      description: An object that implements the <xref uid=\"langword_csharp_IRichEditOleCallback\" name=\"IRichEditOleCallback\" href=\"\"></xref> interface.\n  overload: System.Windows.Forms.RichTextBox.CreateRichEditOleCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.DefaultSize\n  id: DefaultSize\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: DefaultSize\n  nameWithType: RichTextBox.DefaultSize\n  fullName: System.Windows.Forms.RichTextBox.DefaultSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default size of the control.\n  syntax:\n    content: protected override System.Drawing.Size DefaultSize { get; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> value.\n  overload: System.Windows.Forms.RichTextBox.DefaultSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.DetectUrls\n  id: DetectUrls\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: DetectUrls\n  nameWithType: RichTextBox.DetectUrls\n  fullName: System.Windows.Forms.RichTextBox.DetectUrls\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether or not the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> will automatically format a Uniform Resource Locator (URL) when it is typed into the control.\n  remarks: If this property is set to `true`, any text entered into the control that is determined by the <xref:System.Windows.Forms.RichTextBox> to be a URL is automatically formatted as a link. You can create an event handler for the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event to handle all links clicked in the control. The <xref:System.Windows.Forms.LinkClickedEventArgs> that is provided to the event handler for the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event provides data that enables you to determine which link was clicked in the control in order to process the link.\n  example:\n  - \"The following code example contains an event handler for the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event. The event handler processes link clicks within the document of a <xref:System.Windows.Forms.RichTextBox> control and launches an instance of the default browser (using the <xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName> method), displaying the page for the link that was clicked. This example requires that the event handler has been connected to the <xref:System.Windows.Forms.RichTextBox.LinkClicked> event for a <xref:System.Windows.Forms.RichTextBox>.  \\n  \\n [!code-cs[Classic RichTextBox.LinkClicked Example#1](~/add/codesnippet/csharp/p-system.windows.forms.r_7_1.cs)]\\n [!code-cpp[Classic RichTextBox.LinkClicked Example#1](~/add/codesnippet/cpp/p-system.windows.forms.r_7_1.cpp)]\\n [!code-vb[Classic RichTextBox.LinkClicked Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_7_1.vb)]\"\n  syntax:\n    content: public bool DetectUrls { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> will automatically format URLs that are typed into the control as a link; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.DetectUrls*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.DragDrop\n  id: DragDrop\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: DragDrop\n  nameWithType: RichTextBox.DragDrop\n  fullName: System.Windows.Forms.RichTextBox.DragDrop\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user completes a drag-and-drop\n  syntax:\n    content: public event System.Windows.Forms.DragEventHandler DragDrop;\n    return:\n      type: System.Windows.Forms.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.DragEnter\n  id: DragEnter\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: DragEnter\n  nameWithType: RichTextBox.DragEnter\n  fullName: System.Windows.Forms.RichTextBox.DragEnter\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when an object is dragged into the control's bounds.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DragEnter event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.RichTextBox> named `RichTextBox1`. Then ensure that the event handler is associated with the DragEnter event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#539](~/add/codesnippet/csharp/e-system.windows.forms.r_2_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#539](~/add/codesnippet/visualbasic/e-system.windows.forms.r_2_1.vb)]\"\n  syntax:\n    content: public event System.Windows.Forms.DragEventHandler DragEnter;\n    return:\n      type: System.Windows.Forms.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.DragLeave\n  id: DragLeave\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: DragLeave\n  nameWithType: RichTextBox.DragLeave\n  fullName: System.Windows.Forms.RichTextBox.DragLeave\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when an object is dragged out of the control's bounds.\n  remarks: 'This event is not relevant to this class. For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler DragLeave;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.DragOver\n  id: DragOver\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: DragOver\n  nameWithType: RichTextBox.DragOver\n  fullName: System.Windows.Forms.RichTextBox.DragOver\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when an object is dragged over the control's bounds.\n  remarks: 'This event is not relevant to this class. For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event System.Windows.Forms.DragEventHandler DragOver;\n    return:\n      type: System.Windows.Forms.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  id: DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: DrawToBitmap(Bitmap,Rectangle)\n  nameWithType: RichTextBox.DrawToBitmap(Bitmap,Rectangle)\n  fullName: System.Windows.Forms.RichTextBox.DrawToBitmap(Bitmap,Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This method is not relevant for this class.\n  remarks: This method is not relevant for this class.\n  syntax:\n    content: public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);\n    parameters:\n    - id: bitmap\n      type: System.Drawing.Bitmap\n      description: A <xref href=\"System.Drawing.Bitmap\"></xref>.\n    - id: targetBounds\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.DrawToBitmap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.EnableAutoDragDrop\n  id: EnableAutoDragDrop\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: EnableAutoDragDrop\n  nameWithType: RichTextBox.EnableAutoDragDrop\n  fullName: System.Windows.Forms.RichTextBox.EnableAutoDragDrop\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that enables drag-and-drop operations on text, pictures, and other data.\n  syntax:\n    content: public bool EnableAutoDragDrop { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enable drag-and-drop operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.EnableAutoDragDrop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Find(System.Char[])\n  id: Find(System.Char[])\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Find(Char[])\n  nameWithType: RichTextBox.Find(Char[])\n  fullName: System.Windows.Forms.RichTextBox.Find(Char[])\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Searches the text of a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for the first instance of a character from a list of characters.\n  remarks: \"This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the first instance of a character from a list of characters specified in the `characterSet` parameter and returns the location of the character. For example, you pass an array of characters containing the character 'Q'. If the control contained the text \\\"The Quick Brown Fox\\\", the <xref:System.Windows.Forms.RichTextBox.Find%2A> method would return the value of four. An upper case character and a lower case character are considered different values in the search.  \\n  \\n If the property returns a negative value, the characters being searched for were not found within the contents of the control. You can use this method to search for a group of characters within the control. This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method requires that the entire document contained in the control is searched for the characters. If a character from the character list provided in the method's `characterSet` parameter is found, the value returned by this method is a zero-based index of the character's position in the control. A space is considered a character by the method when determining the location of a character.\"\n  example:\n  - \"The following code example searches the contents of a <xref:System.Windows.Forms.RichTextBox> for the characters that are passed to the method in the `text` parameter. If the contents of the `text` array are found in the <xref:System.Windows.Forms.RichTextBox>, the method returns the index of the value that is found; otherwise, it returns -1. The example requires that this method is placed in the class of a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1` and a <xref:System.Windows.Forms.Button> control, named `button1`, that is connected to the `Click` event handler defined in the example.  \\n  \\n [!code-vb[RichTextBox.FindChar1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_6_1.vb)]\\n [!code-cpp[RichTextBox.FindChar1#1](~/add/codesnippet/cpp/m-system.windows.forms.r_6_1.cpp)]\\n [!code-cs[RichTextBox.FindChar1#1](~/add/codesnippet/csharp/m-system.windows.forms.r_6_1.cs)]\"\n  syntax:\n    content: public int Find (char[] characterSet);\n    parameters:\n    - id: characterSet\n      type: System.Char[]\n      description: The array of characters to search for.\n    return:\n      type: System.Int32\n      description: The location within the control where the search characters were found or -1 if the search characters are not found or an empty search character set is specified in the <code>char</code> parameter.\n  overload: System.Windows.Forms.RichTextBox.Find*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Find(System.String)\n  id: Find(System.String)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Find(String)\n  nameWithType: RichTextBox.Find(String)\n  fullName: System.Windows.Forms.RichTextBox.Find(String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Searches the text in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for a string.\n  remarks: \"The Find method searches for the text specified in the `str` parameter and returns the location of the first character within the control. If the property returns a negative value, the text string being searched for was not found within the contents of the control. You can use this method to create search functionality that can be provided to the user of the control. You can also use this method to search for text to be replaced with a specific format. For example, if the user entered dates into the control, you could use the Find method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control.  \\n  \\n> [!NOTE]\\n>  The Find methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>. Performing such a search will return a value of negative one (-1).\"\n  example:\n  - \"The following code example searches the entire contents of a <xref:System.Windows.Forms.RichTextBox> for the first instance of a search string passed into the text parameter of the method. If the search string is found in the <xref:System.Windows.Forms.RichTextBox>, the method returns a value of `true` and highlights the search text, otherwise it returns `false`. The example requires that this method is placed in the class of a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.RichTextBox> named `richTextBox1`.  \\n  \\n [!code-cs[Classic RichTextBox.Find Example#1](~/add/codesnippet/csharp/m-system.windows.forms.r_9_1.cs)]\\n [!code-vb[Classic RichTextBox.Find Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_9_1.vb)]\\n [!code-cpp[Classic RichTextBox.Find Example#1](~/add/codesnippet/cpp/m-system.windows.forms.r_9_1.cpp)]\"\n  syntax:\n    content: public int Find (string str);\n    parameters:\n    - id: str\n      type: System.String\n      description: The text to locate in the control.\n    return:\n      type: System.Int32\n      description: The location within the control where the search text was found or -1 if the search string is not found or an empty search string is specified in the <code>str</code> parameter.\n  overload: System.Windows.Forms.RichTextBox.Find*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32)\n  id: Find(System.Char[],System.Int32)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Find(Char[],Int32)\n  nameWithType: RichTextBox.Find(Char[],Int32)\n  fullName: System.Windows.Forms.RichTextBox.Find(Char[],Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Searches the text of a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control, at a specific starting point, for the first instance of a character from a list of characters.\n  remarks: \"This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the first instance of a character from a list of characters specified in the `characterSet` parameter and returns the location the character. For example, you pass an array of characters containing the character 'Q'. If the control contained the text \\\"The Quick Brown Fox\\\", the <xref:System.Windows.Forms.RichTextBox.Find%2A> method would return the value of four. An upper case character and a lower case character are considered different values in the search.  \\n  \\n If the property returns a negative value, the characters being searched for were not found within the contents of the control. You can use this method to search for a group of characters within the control. If a character from the character list provided in the method's `characterSet` parameter is found, the value returned by this method is a zero-based index of the character's position in the control. A space is considered a character by the method when determining the location of a character.  \\n  \\n This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method enables you to search for a character set from a specified start position within the text of the control by specifying a value for the `start` parameter. A value of zero indicates that the search should start from the beginning of the control's document. You can use this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to narrow your search to avoid text that you already know does not contain the specified characters you are searching for or are not important in your search.\"\n  example:\n  - \"The following code example searches the contents of a <xref:System.Windows.Forms.RichTextBox> for the characters that are passed to the method in the `text` parameter. The search begins from the location within the <xref:System.Windows.Forms.RichTextBox> specified by the `start` parameter of the `FindMyText` method. If the contents of the text array are found in the <xref:System.Windows.Forms.RichTextBox>, the method returns the index of the value that is found; otherwise, it returns -1. The example requires that this method is placed in the class of a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1` and a <xref:System.Windows.Forms.Button> control named `button1` that is connected to the <xref:System.Windows.Forms.Control.Click> event handler defined in the example.  \\n  \\n [!code-cs[RichTextBox.FindChar2#1](~/add/codesnippet/csharp/m-system.windows.forms.r_4_1.cs)]\\n [!code-cpp[RichTextBox.FindChar2#1](~/add/codesnippet/cpp/m-system.windows.forms.r_4_1.cpp)]\\n [!code-vb[RichTextBox.FindChar2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_4_1.vb)]\"\n  syntax:\n    content: public int Find (char[] characterSet, int start);\n    parameters:\n    - id: characterSet\n      type: System.Char[]\n      description: The array of characters to search for.\n    - id: start\n      type: System.Int32\n      description: The location within the control's text at which to begin searching.\n    return:\n      type: System.Int32\n      description: The location within the control where the search characters are found.\n  overload: System.Windows.Forms.RichTextBox.Find*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Find(System.String,System.Windows.Forms.RichTextBoxFinds)\n  id: Find(System.String,System.Windows.Forms.RichTextBoxFinds)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Find(String,RichTextBoxFinds)\n  nameWithType: RichTextBox.Find(String,RichTextBoxFinds)\n  fullName: System.Windows.Forms.RichTextBox.Find(String,RichTextBoxFinds)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Searches the text in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for a string with specific options applied to the search.\n  remarks: \"The <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the text specified in the `str` parameter and returns the location of the first character within the control. If the property returns a negative value, the text string being searched for was not found within the contents of the control. You can use this method to create search functionality that can be provided to the user of the control. You can also use this method to search for text to be replaced with a specific format. For example, if the user entered dates into the control, you can use the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control.  \\n  \\n With this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method, you can specify options that enable you to expand or narrow your search. You can specify options that enable you to match the casing of the search word or to search for entire words instead of partial words. By specifying the `RichTextBoxFinds.Reverse` enumeration in the `options` parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.RichTextBox.Find%2A> methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>. Performing such a search will return a value of negative one (-1).\"\n  example:\n  - \"The following code example searches the entire contents of a <xref:System.Windows.Forms.RichTextBox> for the first instance of a search string passed into the text parameter of the method. If the search string is found in the <xref:System.Windows.Forms.RichTextBox>, the method returns a value of `true` and highlights the text; otherwise, it returns `false`. The example also specifies options in the search to match the case of the specified search string. The example requires that this method is placed in the class of a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.RichTextBox> named `richTextBox1`.  \\n  \\n [!code-cs[Classic RichTextBox.Find1 Example#1](~/add/codesnippet/csharp/980dc01f-d474-4283-96db-_1.cs)]\\n [!code-vb[Classic RichTextBox.Find1 Example#1](~/add/codesnippet/visualbasic/980dc01f-d474-4283-96db-_1.vb)]\\n [!code-cpp[Classic RichTextBox.Find1 Example#1](~/add/codesnippet/cpp/980dc01f-d474-4283-96db-_1.cpp)]\"\n  syntax:\n    content: public int Find (string str, System.Windows.Forms.RichTextBoxFinds options);\n    parameters:\n    - id: str\n      type: System.String\n      description: The text to locate in the control.\n    - id: options\n      type: System.Windows.Forms.RichTextBoxFinds\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.RichTextBoxFinds\"></xref> values.\n    return:\n      type: System.Int32\n      description: The location within the control where the search text was found.\n  overload: System.Windows.Forms.RichTextBox.Find*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32,System.Int32)\n  id: Find(System.Char[],System.Int32,System.Int32)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Find(Char[],Int32,Int32)\n  nameWithType: RichTextBox.Find(Char[],Int32,Int32)\n  fullName: System.Windows.Forms.RichTextBox.Find(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Searches a range of text in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for the first instance of a character from a list of characters.\n  remarks: \"This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the first instance of a character from a list of characters specified in the `characterSet` parameter and returns the location of the character. For example, you pass an array of characters containing the character 'Q'. If the control contained the text \\\"The Quick Brown Fox\\\", the <xref:System.Windows.Forms.RichTextBox.Find%2A> method would return the value of four. An upper case character and a lower case character are considered different values in the search.  \\n  \\n If the property returns a negative value, the characters being searched for were not found within the contents of the control. You can use this method to search for a group of characters within the control. If a character from the character list provided in the method's `characterSet` parameter is found, the value returned by this method is a zero based index of the character's position in the control. A space is considered a character by the method when determining the location of a character.  \\n  \\n This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method enables you to search for a character set from a range of text in the control by specifying a value for the `start` and `end` parameters. A value of zero for the `start` parameter indicates that the search should start from the beginning of the control's document. A -1 value for the `end` parameter indicates that the search should end at the end of the text within the control. You can use this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to narrow your search to a specific range of text within the control to avoid searching areas of the document that are not important to the needs of your application.\"\n  syntax:\n    content: public int Find (char[] characterSet, int start, int end);\n    parameters:\n    - id: characterSet\n      type: System.Char[]\n      description: The array of characters to search for.\n    - id: start\n      type: System.Int32\n      description: The location within the control's text at which to begin searching.\n    - id: end\n      type: System.Int32\n      description: The location within the control's text at which to end searching.\n    return:\n      type: System.Int32\n      description: The location within the control where the search characters are found.\n  overload: System.Windows.Forms.RichTextBox.Find*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>characterSet</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>start</code> is less than 0 or greater than the length of the text in the control.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Windows.Forms.RichTextBoxFinds)\n  id: Find(System.String,System.Int32,System.Windows.Forms.RichTextBoxFinds)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Find(String,Int32,RichTextBoxFinds)\n  nameWithType: RichTextBox.Find(String,Int32,RichTextBoxFinds)\n  fullName: System.Windows.Forms.RichTextBox.Find(String,Int32,RichTextBoxFinds)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Searches the text in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for a string at a specific location within the control and with specific options applied to the search.\n  remarks: \"The <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the text specified in the `str` parameter and returns the location of the first character of the search string within the control. If the property returns a negative value, the text string being searched for was not found within the contents of the control. You can use this method to create search functionality that can be provided to the user of the control. You can also use this method to search for text to be replaced with a specific format. For example, if the user entered dates into the control, you could use the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control.  \\n  \\n With this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method, you can specify options that enable you to expand or narrow your search. You can specify options that enable you to match the casing of the search word or to search for entire words instead of partial words. By specifying the `RichTextBoxFinds.Reverse` enumeration in the `options` parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method. This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method also enables you to narrow the search for text by selecting a specific starting position within the control's text. This feature can enable you to avoid text that might have already been searched or where the specific text you are searching for is known not to exist. When the `RichTextBoxFinds.Reverse` value is specified in the `options` parameter, the value of the `start` parameter indicates the position where the reverse search will end since the search will start at the bottom of the document when using this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.RichTextBox.Find%2A> methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>. Performing such a search will return a value of negative one (-1).\"\n  example:\n  - \"The following code example searches the entire contents of a <xref:System.Windows.Forms.RichTextBox> for the first instance of a search string passed into the text parameter of the method. The search starting location is specified by the start parameter of the method. If the search string is found in the <xref:System.Windows.Forms.RichTextBox>, the method returns the index location of the first character of the found text and highlights the found text; otherwise, it returns a value of -1. The example also specifies options in the search to match the case of the specified search string. The example requires that this method is placed in the class of a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.RichTextBox> named `richTextBox1`. You can use this example to perform a \\\"Find Next\\\" type of operation. Once an instance of the search text has been found, you can find other instances of the text by changing the value of the `start` parameter to search at a location beyond the position of the current match.  \\n  \\n [!code-cpp[Classic RichTextBox.Find2 Example#1](~/add/codesnippet/cpp/06dd28bd-7b49-4f74-b780-_1.cpp)]\\n [!code-cs[Classic RichTextBox.Find2 Example#1](~/add/codesnippet/csharp/06dd28bd-7b49-4f74-b780-_1.cs)]\\n [!code-vb[Classic RichTextBox.Find2 Example#1](~/add/codesnippet/visualbasic/06dd28bd-7b49-4f74-b780-_1.vb)]\"\n  syntax:\n    content: public int Find (string str, int start, System.Windows.Forms.RichTextBoxFinds options);\n    parameters:\n    - id: str\n      type: System.String\n      description: The text to locate in the control.\n    - id: start\n      type: System.Int32\n      description: The location within the control's text at which to begin searching.\n    - id: options\n      type: System.Windows.Forms.RichTextBoxFinds\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.RichTextBoxFinds\"></xref> values.\n    return:\n      type: System.Int32\n      description: The location within the control where the search text was found.\n  overload: System.Windows.Forms.RichTextBox.Find*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Int32,System.Windows.Forms.RichTextBoxFinds)\n  id: Find(System.String,System.Int32,System.Int32,System.Windows.Forms.RichTextBoxFinds)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Find(String,Int32,Int32,RichTextBoxFinds)\n  nameWithType: RichTextBox.Find(String,Int32,Int32,RichTextBoxFinds)\n  fullName: System.Windows.Forms.RichTextBox.Find(String,Int32,Int32,RichTextBoxFinds)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Searches the text in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control for a string within a range of text within the control and with specific options applied to the search.\n  remarks: \"The <xref:System.Windows.Forms.RichTextBox.Find%2A> method searches for the text specified in the `str` parameter and returns the location of the first character of the search string within the control. If the property returns a negative value, the text string being searched for was not found within the contents of the control. You can use this method to create search functionality that can be provided to the user of the control. You can also use this method to search for text to be replaced with a specific format. For example, if the user entered dates into the control, you can use the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for all dates in the document and replace them with the appropriate format before using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method of the control.  \\n  \\n With this version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method, you can specify options that enable you to expand or narrow your search. You can specify options that enable you to match the casing of the search word or to search for entire words instead of partial words. By specifying the `RichTextBoxFinds.Reverse` enumeration in the `options` parameter, you can search for text from the bottom of the document to the top instead of the default top to bottom search method. This version of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method also enables you to narrow the search for text by selecting a specific start and end position within the control's text. This feature can enable you to limit the search range to a specific section of the control's text. If a value of negative one (-1) is assigned to the `end` parameter, the method will search until the end of the text in the <xref:System.Windows.Forms.RichTextBox> for normal searches. For reverse searches, a value of negative one (-1) assigned to the `end` parameter indicates that text will be searched from the end of text (bottom) to the position defined by `start` parameter. When the `start` and `end` parameters are provided the same value the entire control is searched for normal searches. For a reverse search, the entire control is searched but the search begins at the bottom of the document and searches to the top of the document.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.RichTextBox.Find%2A> methods that accept a `string` as a parameter cannot find text that is contained on more than one line of text within the <xref:System.Windows.Forms.RichTextBox>. Performing such a search will return a value of negative one (-1).\"\n  example:\n  - \"The following code example searches a section of text in a <xref:System.Windows.Forms.RichTextBox> for the first instance of a search string passed into the `searchText` parameter of the method. The range to search for text within the control is specified by the `searchStart` and `searchEnd` parameters of the method. If the search string is found in the <xref:System.Windows.Forms.RichTextBox>, the method returns the index location of the first character of the found text and highlights the found text; otherwise, it returns a value of -1. The example also uses the `options` parameter of the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to specify that the found text should match the case of the search string. The example requires that this method is placed in the class of a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1`. After the first instance of the search string has been found, you can use this example to find other instances in the text.  \\n  \\n [!code-cpp[RichTextBox.FindStringStartEnd#1](~/add/codesnippet/cpp/90d5bd92-8a57-4311-b177-_1.cpp)]\\n [!code-cs[RichTextBox.FindStringStartEnd#1](~/add/codesnippet/csharp/90d5bd92-8a57-4311-b177-_1.cs)]\\n [!code-vb[RichTextBox.FindStringStartEnd#1](~/add/codesnippet/visualbasic/90d5bd92-8a57-4311-b177-_1.vb)]\"\n  syntax:\n    content: public int Find (string str, int start, int end, System.Windows.Forms.RichTextBoxFinds options);\n    parameters:\n    - id: str\n      type: System.String\n      description: The text to locate in the control.\n    - id: start\n      type: System.Int32\n      description: The location within the control's text at which to begin searching.\n    - id: end\n      type: System.Int32\n      description: The location within the control's text at which to end searching. This value must be equal to negative one (-1) or greater than or equal to the `start` parameter.\n    - id: options\n      type: System.Windows.Forms.RichTextBoxFinds\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.RichTextBoxFinds\"></xref> values.\n    return:\n      type: System.Int32\n      description: The location within the control where the search text was found.\n  overload: System.Windows.Forms.RichTextBox.Find*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>str</code> parameter was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>end</code> parameter was less the <code>start</code> parameter.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Font\n  id: Font\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Font\n  nameWithType: RichTextBox.Font\n  fullName: System.Windows.Forms.RichTextBox.Font\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the font of the text displayed by the control.\n  syntax:\n    content: public override System.Drawing.Font Font { get; set; }\n    return:\n      type: System.Drawing.Font\n      description: The <xref href=\"System.Drawing.Font\"></xref> to apply to the text displayed by the control. The default is the value of the <xref:System.Windows.Forms.Control.DefaultFont*> property.\n  overload: System.Windows.Forms.RichTextBox.Font*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.ForeColor\n  id: ForeColor\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: ForeColor\n  nameWithType: RichTextBox.ForeColor\n  fullName: System.Windows.Forms.RichTextBox.ForeColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the foreground color of the control.\n  syntax:\n    content: public override System.Drawing.Color ForeColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the control's foreground color.\n  overload: System.Windows.Forms.RichTextBox.ForeColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)\n  id: GetCharIndexFromPosition(System.Drawing.Point)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: GetCharIndexFromPosition(Point)\n  nameWithType: RichTextBox.GetCharIndexFromPosition(Point)\n  fullName: System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(Point)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the index of the character nearest to the specified location.\n  remarks: This method returns the character index that is closest to the position specified in the `pt` parameter. The character index is a zero-based index of text in the control, including spaces. You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method. This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.\n  example:\n  - \"The following code example demonstrates how to use the GetCharIndexFromPosition method with the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for a specific string within a <xref:System.Windows.Forms.RichTextBox> control and display the character index where the found string is located within the <xref:System.Windows.Forms.RichTextBox> control. The example searches for the word \\\"brown\\\" within the contents of the control and returns the character index position where the search string is found. This example requires that you have a form that contains a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1` that contains text. It also requires that the code in the example is connected to the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.RichTextBox>.  \\n  \\n [!code-cpp[RichTextBox.GetCharIndexFromPosition#1](~/add/codesnippet/cpp/8f489711-0ffe-4f8f-8a78-_1.cpp)]\\n [!code-cs[RichTextBox.GetCharIndexFromPosition#1](~/add/codesnippet/csharp/8f489711-0ffe-4f8f-8a78-_1.cs)]\\n [!code-vb[RichTextBox.GetCharIndexFromPosition#1](~/add/codesnippet/visualbasic/8f489711-0ffe-4f8f-8a78-_1.vb)]\"\n  syntax:\n    content: public override int GetCharIndexFromPosition (System.Drawing.Point pt);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: The location to search.\n    return:\n      type: System.Int32\n      description: The zero-based character index at the specified location.\n  overload: System.Windows.Forms.RichTextBox.GetCharIndexFromPosition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)\n  id: GetLineFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: GetLineFromCharIndex(Int32)\n  nameWithType: RichTextBox.GetLineFromCharIndex(Int32)\n  fullName: System.Windows.Forms.RichTextBox.GetLineFromCharIndex(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the line number from the specified character position within the text of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control.\n  remarks: \"This method enables you to determine the line number based on the character index specified in the `index` parameter of the method. The first line of text in the control returns the value zero. The GetLineFromCharIndex method returns the physical line number where the indexed character is located within the control. For example, if a portion of the first logical line of text in the control wraps to the next line, the GetLineFromCharIndex method returns 1 if the character at the specified character index has wrapped to the second physical line. If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index. You can use this method to determine which line a specific character index is located within. For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found. You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.  \\n  \\n In certain cases, GetLineFromCharIndex does not throw an exception when the `index` parameter is an invalid value. For example:  \\n  \\n-   If the `index` parameter is <xref:System.Int32.MinValue> or -1, GetLineFromCharIndex returns 0.  \\n  \\n-   If the `index` parameter is the text length or <xref:System.Int32.MaxValue>, GetLineFromCharIndex returns the number of the last line of text, which is not necessarily the same as `Lines.Length-1`, depending on the value of the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property.  \\n  \\n In these cases, validate the input before calling GetLineFromCharIndex.  \\n  \\n> [!NOTE]\\n>  If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.\"\n  example:\n  - \"The following code example demonstrates using the GetLineFromCharIndex method. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.RichTextBox> control named `RichTextBox1`, a button named `Button1` and two text boxes named `TextBox1` and `TextBox2`. When the example is running, enter a search string in `TextBox2` and click the button to get search results.  \\n  \\n [!code-cpp[System.Windows.Forms.RichTextBoxGetLine#1](~/add/codesnippet/cpp/m-system.windows.forms.r_3_1.cpp)]\\n [!code-vb[System.Windows.Forms.RichTextBoxGetLine#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_3_1.vb)]\\n [!code-cs[System.Windows.Forms.RichTextBoxGetLine#1](~/add/codesnippet/csharp/m-system.windows.forms.r_3_1.cs)]\"\n  syntax:\n    content: public override int GetLineFromCharIndex (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The character index position to search.\n    return:\n      type: System.Int32\n      description: The zero-based line number in which the character index is located.\n  overload: System.Windows.Forms.RichTextBox.GetLineFromCharIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)\n  id: GetPositionFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: GetPositionFromCharIndex(Int32)\n  nameWithType: RichTextBox.GetPositionFromCharIndex(Int32)\n  fullName: System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the location within the control at the specified character index.\n  remarks: This method enables you to determine where in the control a specific character index is located. You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control. For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.\n  syntax:\n    content: public override System.Drawing.Point GetPositionFromCharIndex (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the character for which to retrieve the location.\n    return:\n      type: System.Drawing.Point\n      description: The location of the specified character.\n  overload: System.Windows.Forms.RichTextBox.GetPositionFromCharIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.GiveFeedback\n  id: GiveFeedback\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: GiveFeedback\n  nameWithType: RichTextBox.GiveFeedback\n  fullName: System.Windows.Forms.RichTextBox.GiveFeedback\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs during a drag operation.\n  remarks: This event is not relevant to this class.\n  syntax:\n    content: public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;\n    return:\n      type: System.Windows.Forms.GiveFeedbackEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.HScroll\n  id: HScroll\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: HScroll\n  nameWithType: RichTextBox.HScroll\n  fullName: System.Windows.Forms.RichTextBox.HScroll\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user clicks the horizontal scroll bar of the control.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HScroll event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.RichTextBox> named `RichTextBox1`. Then ensure that the event handler is associated with the HScroll event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#540](~/add/codesnippet/csharp/e-system.windows.forms.r_4_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#540](~/add/codesnippet/visualbasic/e-system.windows.forms.r_4_1.vb)]\"\n  syntax:\n    content: public event EventHandler HScroll;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.ImeChange\n  id: ImeChange\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: ImeChange\n  nameWithType: RichTextBox.ImeChange\n  fullName: System.Windows.Forms.RichTextBox.ImeChange\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user switches input methods on an Asian version of the Windows operating system.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ImeChange event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.RichTextBox> named `RichTextBox1`. Then ensure that the event handler is associated with the ImeChange event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#542](~/add/codesnippet/csharp/e-system.windows.forms.r_7_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#542](~/add/codesnippet/visualbasic/e-system.windows.forms.r_7_1.vb)]\"\n  syntax:\n    content: public event EventHandler ImeChange;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.LanguageOption\n  id: LanguageOption\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: LanguageOption\n  nameWithType: RichTextBox.LanguageOption\n  fullName: System.Windows.Forms.RichTextBox.LanguageOption\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that indicates <xref href=\"System.Windows.Forms.RichTextBox\"></xref> settings for Input Method Editor (IME) and Asian language support.\n  syntax:\n    content: public System.Windows.Forms.RichTextBoxLanguageOptions LanguageOption { get; set; }\n    return:\n      type: System.Windows.Forms.RichTextBoxLanguageOptions\n      description: One of the <xref href=\"System.Windows.Forms.RichTextBoxLanguageOptions\"></xref> values. The default is <xref href=\"System.Windows.Forms.RichTextBoxLanguageOptions\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.LanguageOption*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.LinkClicked\n  id: LinkClicked\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: LinkClicked\n  nameWithType: RichTextBox.LinkClicked\n  fullName: System.Windows.Forms.RichTextBox.LinkClicked\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user clicks on a link within the text of the control.\n  remarks: \"You can create an event handler for this event to process a link that has been clicked within the control. Using the information provided to the event handler, you can determine which link was clicked in the document.  \\n  \\n> [!IMPORTANT]\\n>  By default, links are displayed as text and are not clickable. To make them clickable set the <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A> property to `true`.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example contains an event handler for the LinkClicked event. The event handler processes link clicks within the document of a <xref:System.Windows.Forms.RichTextBox> control and launches an instance of the default browser (using the <xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName> method), displaying the page for the link that was clicked. This example requires that the event handler has been connected to the LinkClicked event for a <xref:System.Windows.Forms.RichTextBox>.  \\n  \\n [!code-cs[Classic RichTextBox.LinkClicked Example#1](~/add/codesnippet/csharp/e-system.windows.forms.r_1_1.cs)]\\n [!code-cpp[Classic RichTextBox.LinkClicked Example#1](~/add/codesnippet/cpp/e-system.windows.forms.r_1_1.cpp)]\\n [!code-vb[Classic RichTextBox.LinkClicked Example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.r_1_1.vb)]\"\n  syntax:\n    content: public event System.Windows.Forms.LinkClickedEventHandler LinkClicked;\n    return:\n      type: System.Windows.Forms.LinkClickedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.LoadFile(System.String)\n  id: LoadFile(System.String)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: LoadFile(String)\n  nameWithType: RichTextBox.LoadFile(String)\n  fullName: System.Windows.Forms.RichTextBox.LoadFile(String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Loads a rich text format (RTF) or standard ASCII text file into the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control.\n  remarks: \"When loading a file with the LoadFile method, the contents of the file being loaded replace the entire contents of the <xref:System.Windows.Forms.RichTextBox> control. This will cause the values of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> and <xref:System.Windows.Forms.RichTextBox.Rtf%2A> properties to change. You can use this method to load a previously created text or RTF document into the control for manipulation. If you want to save the file, you can use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method.  \\n  \\n> [!NOTE]\\n>  With this version of the LoadFile method, if the file being loaded is not an RTF document, an exception will occur. To load a different type of file such as an ASCII text file, use the other versions of this method that accept a value from the <xref:System.Windows.Forms.RichTextBoxStreamType> enumeration as a parameter.  \\n  \\n> [!NOTE]\\n>  The LoadFile method will not open a file until a handle is created for the <xref:System.Windows.Forms.RichTextBox>. Ensure that the control's handle is created before calling the LoadFile method.\"\n  example:\n  - \"The following code example opens an RTF file into the <xref:System.Windows.Forms.RichTextBox> control. The example uses the <xref:System.Windows.Forms.OpenFileDialog> class to display a dialog to request the file from the user. The code then loads that file assuming that it is an RTF document file. If the file is not, the example code will throw an exception. This example requires that the code is placed in a <xref:System.Windows.Forms.Form> class that has a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1`.  \\n  \\n [!code-cs[Classic RichTextBox.LoadFile Example#1](~/add/codesnippet/csharp/m-system.windows.forms.r_2_1.cs)]\\n [!code-vb[Classic RichTextBox.LoadFile Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_2_1.vb)]\\n [!code-cpp[Classic RichTextBox.LoadFile Example#1](~/add/codesnippet/cpp/m-system.windows.forms.r_2_1.cpp)]\"\n  syntax:\n    content: public void LoadFile (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name and location of the file to load into the control.\n  overload: System.Windows.Forms.RichTextBox.LoadFile*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred while loading the file into the control.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The file being loaded is not an RTF document.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)\n  id: LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: LoadFile(Stream,RichTextBoxStreamType)\n  nameWithType: RichTextBox.LoadFile(Stream,RichTextBoxStreamType)\n  fullName: System.Windows.Forms.RichTextBox.LoadFile(Stream,RichTextBoxStreamType)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Loads the contents of an existing data stream into the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control.\n  remarks: \"You can use this version of the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the <xref:System.Windows.Forms.RichTextBox> with data from an existing stream of data. The data that is loaded into the control replaces the entire contents of the <xref:System.Windows.Forms.RichTextBox> control. This will cause the values of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> and <xref:System.Windows.Forms.RichTextBox.Rtf%2A> properties to change. You can use this method to load a file that has been previously opened into a data stream into the control for manipulation. If you want to save contents of the control back into the stream, you can use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method that accepts a <xref:System.IO.Stream> object as a parameter.  \\n  \\n This version of the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method also enables you to specify the type of data that is being loaded into the control. This feature enables you to use data streams that contain data other than rich text format (RTF) documents into the control.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method will not open a file until a handle is created for the <xref:System.Windows.Forms.RichTextBox>. Ensure that the control's handle is created before calling the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method.\"\n  example:\n  - \"The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> methods with streams. It also demonstrates using the <xref:System.Windows.Forms.FileDialog.FileName%2A?displayProperty=fullName>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A?displayProperty=fullName>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=fullName> members.  \\n  \\n This is a complete example that is ready to run when you copy it to your project.  \\n  \\n [!code-cs[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/csharp/874d5e1f-06d0-45a7-8f4e-_1.cs)]\\n [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/visualbasic/874d5e1f-06d0-45a7-8f4e-_1.vb)]\\n [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/cpp/874d5e1f-06d0-45a7-8f4e-_1.cpp)]\"\n  syntax:\n    content: public void LoadFile (System.IO.Stream data, System.Windows.Forms.RichTextBoxStreamType fileType);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: A stream of data to load into the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control.\n    - id: fileType\n      type: System.Windows.Forms.RichTextBoxStreamType\n      description: One of the <xref href=\"System.Windows.Forms.RichTextBoxStreamType\"></xref> values.\n  overload: System.Windows.Forms.RichTextBox.LoadFile*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred while loading the file into the control.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The file being loaded is not an RTF document.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)\n  id: LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: LoadFile(String,RichTextBoxStreamType)\n  nameWithType: RichTextBox.LoadFile(String,RichTextBoxStreamType)\n  fullName: System.Windows.Forms.RichTextBox.LoadFile(String,RichTextBoxStreamType)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Loads a specific type of file into the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control.\n  remarks: \"When loading a file with the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method, the contents of the file being loaded replace the entire contents of the <xref:System.Windows.Forms.RichTextBox> control. This will cause the values of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> and <xref:System.Windows.Forms.RichTextBox.Rtf%2A> properties to change. You can use this method to load a previously created text or rich text format (RTF) document into the control for manipulation. If you want to save the file, you can use the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method.  \\n  \\n You can use this version of the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to specify the file type of the file being loaded. This feature enables you to load files other than RTF documents into the control.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method will not open a file until a handle is created for the <xref:System.Windows.Forms.RichTextBox>. Ensure that the control's handle is created before calling the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method.\"\n  example:\n  - \"The following code example opens a text file into the <xref:System.Windows.Forms.RichTextBox> control. The example uses the <xref:System.Windows.Forms.OpenFileDialog> class to display a dialog to request the file from the user. The code then loads that file into the <xref:System.Windows.Forms.RichTextBox> control. The example uses this version of the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to specify that the file be opened as an ASCII text file instead of the standard rich text format. This example requires that the code is placed in a <xref:System.Windows.Forms.Form> class that has a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1`.  \\n  \\n [!code-vb[Classic RichTextBox.LoadFile1 Example#1](~/add/codesnippet/visualbasic/8b233da3-72f6-4b02-8e08-_1.vb)]\\n [!code-cs[Classic RichTextBox.LoadFile1 Example#1](~/add/codesnippet/csharp/8b233da3-72f6-4b02-8e08-_1.cs)]\\n [!code-cpp[Classic RichTextBox.LoadFile1 Example#1](~/add/codesnippet/cpp/8b233da3-72f6-4b02-8e08-_1.cpp)]\"\n  syntax:\n    content: public void LoadFile (string path, System.Windows.Forms.RichTextBoxStreamType fileType);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name and location of the file to load into the control.\n    - id: fileType\n      type: System.Windows.Forms.RichTextBoxStreamType\n      description: One of the <xref href=\"System.Windows.Forms.RichTextBoxStreamType\"></xref> values.\n  overload: System.Windows.Forms.RichTextBox.LoadFile*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred while loading the file into the control.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The file being loaded is not an RTF document.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.MaxLength\n  id: MaxLength\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: MaxLength\n  nameWithType: RichTextBox.MaxLength\n  fullName: System.Windows.Forms.RichTextBox.MaxLength\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the maximum number of characters the user can type or paste into the rich text box control.\n  remarks: \"When this property is set to 0, the maximum length of the text that can be entered in the control is 64 KB of characters. This property is typically used when the <xref:System.Windows.Forms.RichTextBox> is used to display a single line of rich text format (RTF) text. You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database. You can limit the text entered into the control to the maximum length of the corresponding field in the database.  \\n  \\n> [!NOTE]\\n>  In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property. This property only affects text entered into the control at run time.\"\n  example:\n  - \"The following code example demonstrates how to use the MaxLength property to determine if text being assigned to a <xref:System.Windows.Forms.RichTextBox> control is larger than the value assigned to the MaxLength property. If the text is not larger, the example uses the <xref:System.Windows.Forms.RichTextBox.SelectedText%2A> property to assign the text to the control. This example requires that a <xref:System.Windows.Forms.RichTextBox> control, named `richTextBox1`, has been added to a form and that the method in the example is called with text supplied to the parameter that is to be pasted into the control. The example also requires that the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property has been set to a value to limit text entry into the <xref:System.Windows.Forms.RichTextBox>.  \\n  \\n [!code-cpp[RichTextBox.MaxLength#1](~/add/codesnippet/cpp/p-system.windows.forms.r_16_1.cpp)]\\n [!code-cs[RichTextBox.MaxLength#1](~/add/codesnippet/csharp/p-system.windows.forms.r_16_1.cs)]\\n [!code-vb[RichTextBox.MaxLength#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_16_1.vb)]\"\n  syntax:\n    content: public override int MaxLength { get; set; }\n    return:\n      type: System.Int32\n      description: The number of characters that can be entered into the control. The default is <xref:System.Int32>.\n  overload: System.Windows.Forms.RichTextBox.MaxLength*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value assigned to the property is less than 0.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Multiline\n  id: Multiline\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Multiline\n  nameWithType: RichTextBox.Multiline\n  fullName: System.Windows.Forms.RichTextBox.Multiline\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether this is a multiline <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control.\n  syntax:\n    content: public override bool Multiline { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is a multiline <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.Multiline*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnBackColorChanged(System.EventArgs)\n  id: OnBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnBackColorChanged(EventArgs)\n  nameWithType: RichTextBox.OnBackColorChanged(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnBackColorChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.BackColorChanged\"></xref> event.\n  syntax:\n    content: protected override void OnBackColorChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnBackColorChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)\n  id: OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnContentsResized(ContentsResizedEventArgs)\n  nameWithType: RichTextBox.OnContentsResized(ContentsResizedEventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnContentsResized(ContentsResizedEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.RichTextBox.ContentsResized\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnContentsResized method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnContentsResized (System.Windows.Forms.ContentsResizedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.ContentsResizedEventArgs\n      description: A <xref href=\"System.Windows.Forms.ContentsResizedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnContentsResized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnContextMenuChanged(System.EventArgs)\n  id: OnContextMenuChanged(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnContextMenuChanged(EventArgs)\n  nameWithType: RichTextBox.OnContextMenuChanged(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnContextMenuChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ContextMenuChanged\"></xref> event.\n  syntax:\n    content: protected override void OnContextMenuChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnContextMenuChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnHandleCreated(System.EventArgs)\n  id: OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnHandleCreated(EventArgs)\n  nameWithType: RichTextBox.OnHandleCreated(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnHandleCreated(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event.\n  syntax:\n    content: protected override void OnHandleCreated (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnHandleCreated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnHandleDestroyed(System.EventArgs)\n  id: OnHandleDestroyed(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnHandleDestroyed(EventArgs)\n  nameWithType: RichTextBox.OnHandleDestroyed(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnHandleDestroyed(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event.\n  syntax:\n    content: protected override void OnHandleDestroyed (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnHandleDestroyed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)\n  id: OnHScroll(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnHScroll(EventArgs)\n  nameWithType: RichTextBox.OnHScroll(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnHScroll(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.RichTextBox.HScroll\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnHScroll method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnHScroll (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnHScroll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)\n  id: OnImeChange(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnImeChange(EventArgs)\n  nameWithType: RichTextBox.OnImeChange(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnImeChange(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.RichTextBox.ImeChange\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnImeChange method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnImeChange (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnImeChange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)\n  id: OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnLinkClicked(LinkClickedEventArgs)\n  nameWithType: RichTextBox.OnLinkClicked(LinkClickedEventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnLinkClicked(LinkClickedEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.RichTextBox.LinkClicked\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnLinkClicked method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnLinkClicked (System.Windows.Forms.LinkClickedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.LinkClickedEventArgs\n      description: A <xref href=\"System.Windows.Forms.LinkClickedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnLinkClicked*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)\n  id: OnProtected(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnProtected(EventArgs)\n  nameWithType: RichTextBox.OnProtected(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnProtected(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.RichTextBox.Protected\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnProtected method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnProtected (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnProtected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnRightToLeftChanged(System.EventArgs)\n  id: OnRightToLeftChanged(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnRightToLeftChanged(EventArgs)\n  nameWithType: RichTextBox.OnRightToLeftChanged(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnRightToLeftChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"></xref> event.\n  syntax:\n    content: protected override void OnRightToLeftChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnRightToLeftChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)\n  id: OnSelectionChanged(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnSelectionChanged(EventArgs)\n  nameWithType: RichTextBox.OnSelectionChanged(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnSelectionChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.RichTextBox.SelectionChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnSelectionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSelectionChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnSelectionChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)\n  id: OnVScroll(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: OnVScroll(EventArgs)\n  nameWithType: RichTextBox.OnVScroll(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnVScroll(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.RichTextBox.VScroll\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnVScroll method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnVScroll (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.RichTextBox.OnVScroll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Paste(System.Windows.Forms.DataFormats.Format)\n  id: Paste(System.Windows.Forms.DataFormats.Format)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Paste(DataFormats+Format)\n  nameWithType: RichTextBox.Paste(DataFormats+Format)\n  fullName: System.Windows.Forms.RichTextBox.Paste(DataFormats+Format)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: public void Paste (System.Windows.Forms.DataFormats.Format clipFormat);\n    parameters:\n    - id: clipFormat\n      type: System.Windows.Forms.DataFormats.Format\n      description: To be added.\n  overload: System.Windows.Forms.RichTextBox.Paste*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: ProcessCmdKey(Message,Keys)\n  nameWithType: RichTextBox.ProcessCmdKey(Message,Keys)\n  fullName: System.Windows.Forms.RichTextBox.ProcessCmdKey(Message,Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a command key.\n  syntax:\n    content: protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the  key to process.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the character was processed by the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.ProcessCmdKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Protected\n  id: Protected\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Protected\n  nameWithType: RichTextBox.Protected\n  fullName: System.Windows.Forms.RichTextBox.Protected\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user attempts to modify protected text in the control.\n  remarks: \"You can create an event handler for this event in your applications to determine when the user has attempted to modify text that has been marked as protected in the control. The event handler can be used to notify the user that the text the user is attempting to modify is protected or to display a dialog box that enables the user to make appropriate changes to the text. For example, if the protected area is a date, you can display a dialog box that enables the user to choose a date which can then be applied to the text of the control.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Protected event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.RichTextBox> named `RichTextBox1`. Then ensure that the event handler is associated with the Protected event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#543](~/add/codesnippet/csharp/e-system.windows.forms.r_3_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#543](~/add/codesnippet/visualbasic/e-system.windows.forms.r_3_1.vb)]\"\n  syntax:\n    content: public event EventHandler Protected;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.QueryContinueDrag\n  id: QueryContinueDrag\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: QueryContinueDrag\n  nameWithType: RichTextBox.QueryContinueDrag\n  fullName: System.Windows.Forms.RichTextBox.QueryContinueDrag\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This event is not relevant to this class.\n  remarks: This event is not relevant to this class.\n  syntax:\n    content: public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;\n    return:\n      type: System.Windows.Forms.QueryContinueDragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Redo\n  id: Redo\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Redo()\n  nameWithType: RichTextBox.Redo()\n  fullName: System.Windows.Forms.RichTextBox.Redo()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Reapplies the last operation that was undone in the control.\n  remarks: You can then use the Redo method to reapply the last undo operation to the control. The <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> method enables you to determine whether the last operation the user has undone can be reapplied to the control.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> and <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> properties, and the Redo method, to restrict a redo operation to any action except the deletion of text. This example requires that you have a form that contains a <xref:System.Windows.Forms.RichTextBox> control and that an operation within the <xref:System.Windows.Forms.RichTextBox> has been performed and undone before the code in this example is called.  \\n  \\n [!code-cs[RichTextBox.RedoAction#1](~/add/codesnippet/csharp/m-system.windows.forms.r_10_1.cs)]\\n [!code-vb[RichTextBox.RedoAction#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_10_1.vb)]\\n [!code-cpp[RichTextBox.RedoAction#1](~/add/codesnippet/cpp/m-system.windows.forms.r_10_1.cpp)]\"\n  syntax:\n    content: public void Redo ();\n    parameters: []\n  overload: System.Windows.Forms.RichTextBox.Redo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.RedoActionName\n  id: RedoActionName\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: RedoActionName\n  nameWithType: RichTextBox.RedoActionName\n  fullName: System.Windows.Forms.RichTextBox.RedoActionName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the name of the action that can be reapplied to the control when the <xref:System.Windows.Forms.RichTextBox.Redo*> method is called.\n  remarks: If this property returns an empty string (\"\"), there is no operation available to reapply to the control. You can use this method to determine the last action undone in the <xref:System.Windows.Forms.RichTextBox> control that can then be reapplied to the control when a call to the <xref:System.Windows.Forms.RichTextBox.Redo%2A> method is made. You can determine whether there are any operations to be reapplied to the control by using the <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> property.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> and RedoActionName properties, and the <xref:System.Windows.Forms.RichTextBox.Redo%2A> method, to restrict a redo operation to any action except the deletion of text. This example requires that you have a form that contains a <xref:System.Windows.Forms.RichTextBox> control and that an operation within the <xref:System.Windows.Forms.RichTextBox> has been performed and undone before the code in this example is called.  \\n  \\n [!code-cs[RichTextBox.RedoAction#1](~/add/codesnippet/csharp/p-system.windows.forms.r_17_1.cs)]\\n [!code-vb[RichTextBox.RedoAction#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_17_1.vb)]\\n [!code-cpp[RichTextBox.RedoAction#1](~/add/codesnippet/cpp/p-system.windows.forms.r_17_1.cpp)]\"\n  syntax:\n    content: public string RedoActionName { get; }\n    return:\n      type: System.String\n      description: A string that represents the name of the action that will be performed when a call to the <xref:System.Windows.Forms.RichTextBox.Redo*> method is made.\n  overload: System.Windows.Forms.RichTextBox.RedoActionName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled\n  id: RichTextShortcutsEnabled\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: RichTextShortcutsEnabled\n  nameWithType: RichTextBox.RichTextShortcutsEnabled\n  fullName: System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This property is not relevant for this class.\n  remarks: This property is not relevant for this class.\n  syntax:\n    content: public bool RichTextShortcutsEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if shortcut keys are enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.RightMargin\n  id: RightMargin\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: RightMargin\n  nameWithType: RichTextBox.RightMargin\n  fullName: System.Windows.Forms.RichTextBox.RightMargin\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the size of a single line of text within the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control.\n  remarks: When a value greater than zero is entered into the control, a nonvisible margin is placed in the control at the specified number of pixels from the left side of the control. Any text that is entered that extends beyond this margin is placed on the next line of text in the control. This property affects all text currently entered into the control as well as any additional text entered into the control after the property is set. You can use this property to specify a maximum line width for all text entered into a <xref:System.Windows.Forms.RichTextBox> control.\n  example:\n  - \"The following code example demonstrates how to create a <xref:System.Windows.Forms.RichTextBox> that zooms in on text, automatically selects words in the text of the control when a word is double-clicked, and has a margin on the right side of the client area of the control. If the <xref:System.Windows.Forms.RichTextBox> control has a small width, using this code will create a <xref:System.Windows.Forms.RichTextBox> where each character of text is displayed on its own line. While in this vertical display position, clicking on any part of a word will select all characters of the word regardless of the fact that the text is displayed vertically. This example requires that you have a form that contains a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1`.  \\n  \\n [!code-cpp[RichTextBox.ZoomFactor#1](~/add/codesnippet/cpp/p-system.windows.forms.r_6_1.cpp)]\\n [!code-cs[RichTextBox.ZoomFactor#1](~/add/codesnippet/csharp/p-system.windows.forms.r_6_1.cs)]\\n [!code-vb[RichTextBox.ZoomFactor#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_6_1.vb)]\"\n  syntax:\n    content: public int RightMargin { get; set; }\n    return:\n      type: System.Int32\n      description: The size, in pixels, of a single line of text in the control. The default is zero.\n  overload: System.Windows.Forms.RichTextBox.RightMargin*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified value was less than zero.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Rtf\n  id: Rtf\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Rtf\n  nameWithType: RichTextBox.Rtf\n  fullName: System.Windows.Forms.RichTextBox.Rtf\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the text of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control, including all rich text format (RTF) codes.\n  remarks: \"You can use this property to place RTF formatted text into the control for display or to extract the text of the control with the specified RTF formatting defined in the text of the control. This property is typically used when you are assigning RTF text from another RTF source, such as Microsoft Word or Windows WordPad, to the control.  \\n  \\n If you change the <xref:System.Windows.Forms.Control.RightToLeft%2A> property at run time, only raw text without formatting is preserved.  \\n  \\n For the RTF codes, see \\\"rich text format (RTF) Specification, version 1.6\\\" in the MSDN library at http://msdn.microsoft.com/library.\"\n  syntax:\n    content: public string Rtf { get; set; }\n    return:\n      type: System.String\n      description: The text of the control in RTF format.\n  overload: System.Windows.Forms.RichTextBox.Rtf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SaveFile(System.String)\n  id: SaveFile(System.String)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SaveFile(String)\n  nameWithType: RichTextBox.SaveFile(String)\n  fullName: System.Windows.Forms.RichTextBox.SaveFile(String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Saves the contents of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> to a rich text format (RTF) file.\n  remarks: \"The SaveFile method enables you to save the entire contents of the control to an RTF file that can be used by other programs such as Microsoft Word and Windows WordPad. If the file name that is passed to the `path` parameter already exists at the specified directory, the file will be overwritten without notice. You can use the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the contents of a file into the <xref:System.Windows.Forms.RichTextBox>.  \\n  \\n> [!NOTE]\\n>  To save the contents of the control to a different type of file format such as ASCII text, use the other versions of this method that accept a value from the <xref:System.Windows.Forms.RichTextBoxStreamType> enumeration as a parameter.\"\n  example:\n  - \"The following code example saves the contents of a <xref:System.Windows.Forms.RichTextBox> control to an RTF file. The example uses the <xref:System.Windows.Forms.SaveFileDialog> class to display a dialog to request from the user, the path and filename of the file to save. The code then saves the file assuming the content is in rich text format. If the file already exists, it is automatically overwritten. This example requires that the code is placed in a <xref:System.Windows.Forms.Form> class that has a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1`.  \\n  \\n [!code-cpp[Classic RichTextBox.SaveFile Example#1](~/add/codesnippet/cpp/m-system.windows.forms.r_5_1.cpp)]\\n [!code-vb[Classic RichTextBox.SaveFile Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.r_5_1.vb)]\\n [!code-cs[Classic RichTextBox.SaveFile Example#1](~/add/codesnippet/csharp/m-system.windows.forms.r_5_1.cs)]\"\n  syntax:\n    content: public void SaveFile (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name and location of the file to save.\n  overload: System.Windows.Forms.RichTextBox.SaveFile*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurs in saving the contents of the control to a file.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SaveFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)\n  id: SaveFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SaveFile(Stream,RichTextBoxStreamType)\n  nameWithType: RichTextBox.SaveFile(Stream,RichTextBoxStreamType)\n  fullName: System.Windows.Forms.RichTextBox.SaveFile(Stream,RichTextBoxStreamType)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Saves the contents of a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control to an open data stream.\n  remarks: \"This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method enables you to save the entire contents of the control to the data stream that is already opened. The data stream can then save the information to a file. You can use the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the contents of a file into the <xref:System.Windows.Forms.RichTextBox>.  \\n  \\n This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method also enables you to specify a data format of the information that will be sent to the <xref:System.IO.Stream> object.\"\n  example:\n  - \"The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> methods with streams. It also demonstrates using the <xref:System.Windows.Forms.FileDialog.FileName%2A?displayProperty=fullName>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A?displayProperty=fullName>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=fullName> members.  \\n  \\n This is a complete example that is ready to run when you copy it to your project.  \\n  \\n [!code-cs[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/csharp/ad35043f-c873-4c0b-b09c-_1.cs)]\\n [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/visualbasic/ad35043f-c873-4c0b-b09c-_1.vb)]\\n [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/cpp/ad35043f-c873-4c0b-b09c-_1.cpp)]\"\n  syntax:\n    content: public void SaveFile (System.IO.Stream data, System.Windows.Forms.RichTextBoxStreamType fileType);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: The data stream that contains the file to save to.\n    - id: fileType\n      type: System.Windows.Forms.RichTextBoxStreamType\n      description: One of the <xref href=\"System.Windows.Forms.RichTextBoxStreamType\"></xref> values.\n  overload: System.Windows.Forms.RichTextBox.SaveFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid file type is specified in the <code>fileType</code> parameter.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurs in saving the contents of the control to a file.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SaveFile(System.String,System.Windows.Forms.RichTextBoxStreamType)\n  id: SaveFile(System.String,System.Windows.Forms.RichTextBoxStreamType)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SaveFile(String,RichTextBoxStreamType)\n  nameWithType: RichTextBox.SaveFile(String,RichTextBoxStreamType)\n  fullName: System.Windows.Forms.RichTextBox.SaveFile(String,RichTextBoxStreamType)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Saves the contents of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> to a specific type of file.\n  remarks: \"The <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method enables you to save the entire contents of the control to an RTF file that can be used by other programs such as Microsoft Word and Windows WordPad. If the file name that is passed to the `path` parameter already exists at the specified directory, the file will be overwritten without notice. You can use the <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> method to load the contents of a file into the <xref:System.Windows.Forms.RichTextBox>.  \\n  \\n This version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method enables you to specify a file type to save the contents of the control to. You can use this feature to ensure that the file is saved in the proper format based on the contents of the control. For example, if your document has no differences in font style or coloring, you can save the file as an ASCII text file by setting the `fileType` parameter to `RichTextBoxStreamType.PlainText`.\"\n  example:\n  - \"The following code example saves the contents of the <xref:System.Windows.Forms.RichTextBox> into an ASCII text file. The example uses the <xref:System.Windows.Forms.SaveFileDialog> class to display a dialog to request the path and file name from the user. The code then saves the contents of the control to that file. The example uses this version of the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> method to specify that the file be saved as an ASCII text file instead of the standard rich text format. This example requires that the code is placed in a <xref:System.Windows.Forms.Form> class that has a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1`.  \\n  \\n [!code-cs[Classic RichTextBox.SaveFile1 Example#1](~/add/codesnippet/csharp/bdd53489-5eb5-4d77-8305-_1.cs)]\\n [!code-vb[Classic RichTextBox.SaveFile1 Example#1](~/add/codesnippet/visualbasic/bdd53489-5eb5-4d77-8305-_1.vb)]\\n [!code-cpp[Classic RichTextBox.SaveFile1 Example#1](~/add/codesnippet/cpp/bdd53489-5eb5-4d77-8305-_1.cpp)]\"\n  syntax:\n    content: public void SaveFile (string path, System.Windows.Forms.RichTextBoxStreamType fileType);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name and location of the file to save.\n    - id: fileType\n      type: System.Windows.Forms.RichTextBoxStreamType\n      description: One of the <xref href=\"System.Windows.Forms.RichTextBoxStreamType\"></xref> values.\n  overload: System.Windows.Forms.RichTextBox.SaveFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid file type is specified in the <code>fileType</code> parameter.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurs in saving the contents of the control to a file.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.ScrollBars\n  id: ScrollBars\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: ScrollBars\n  nameWithType: RichTextBox.ScrollBars\n  fullName: System.Windows.Forms.RichTextBox.ScrollBars\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the type of scroll bars to display in the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control.\n  remarks: \"This property enables you to provide horizontal and vertical scroll bars to the user of the <xref:System.Windows.Forms.RichTextBox> control to enable scrolling text within the control that is outside of the physical dimensions of the control. You can also use this property to remove scroll bars from the control to restrict scrolling the contents of the control.  \\n  \\n> [!NOTE]\\n>  Horizontal scroll bars will not be shown if the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is `true`, regardless of the value of the ScrollBars property.\"\n  syntax:\n    content: public System.Windows.Forms.RichTextBoxScrollBars ScrollBars { get; set; }\n    return:\n      type: System.Windows.Forms.RichTextBoxScrollBars\n      description: One of the <xref href=\"System.Windows.Forms.RichTextBoxScrollBars\"></xref> values. The default is <xref uid=\"langword_csharp_RichTextBoxScrollBars.Both\" name=\"RichTextBoxScrollBars.Both\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.ScrollBars*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The specified value is not defined in the <xref href=\"System.Windows.Forms.RichTextBoxScrollBars\"></xref> enumeration.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectedRtf\n  id: SelectedRtf\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectedRtf\n  nameWithType: RichTextBox.SelectedRtf\n  fullName: System.Windows.Forms.RichTextBox.SelectedRtf\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the currently selected rich text format (RTF) formatted text in the control.\n  remarks: \"This property enables you to obtain the selected text in the control, including the RTF formatting codes. You can use this property to copy text from your control, complete with formatting, and paste the text in other applications that accept RTF formatted text, such as Microsoft Word and Windows WordPad. To get the selected text, without RTF formatting codes, use the <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A> property.  \\n  \\n If no text is currently selected, the text specified in this property is inserted at the insertion point. If text is selected, any text assigned to this property replaces the selected text.\"\n  syntax:\n    content: public string SelectedRtf { get; set; }\n    return:\n      type: System.String\n      description: The selected RTF text in the control.\n  overload: System.Windows.Forms.RichTextBox.SelectedRtf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectedText\n  id: SelectedText\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectedText\n  nameWithType: RichTextBox.SelectedText\n  fullName: System.Windows.Forms.RichTextBox.SelectedText\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the selected text within the <xref href=\"System.Windows.Forms.RichTextBox\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A> property with the <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, SelectedText, and <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> properties to create a bulleted list in a <xref:System.Windows.Forms.RichTextBox> control. This example requires that a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1` is created on a form.  \\n  \\n [!code-vb[RichTextBox.SelectionBullet#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_14_1.vb)]\\n [!code-cs[RichTextBox.SelectionBullet#1](~/add/codesnippet/csharp/p-system.windows.forms.r_14_1.cs)]\\n [!code-cpp[RichTextBox.SelectionBullet#1](~/add/codesnippet/cpp/p-system.windows.forms.r_14_1.cpp)]\"\n  syntax:\n    content: public override string SelectedText { get; set; }\n    return:\n      type: System.String\n      description: A string that represents the selected text in the control.\n  overload: System.Windows.Forms.RichTextBox.SelectedText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionAlignment\n  id: SelectionAlignment\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionAlignment\n  nameWithType: RichTextBox.SelectionAlignment\n  fullName: System.Windows.Forms.RichTextBox.SelectionAlignment\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the alignment to apply to the current selection or insertion point.\n  remarks: \"If no paragraph is selected in the control, setting this property applies the alignment setting to the paragraph in which the insertion point appears as well as to paragraphs created after the paragraph that has the alignment property setting. For example, if there are two paragraphs in a <xref:System.Windows.Forms.RichTextBox> control and the insertion point is located within the second paragraph. If you set the SelectionAlignment property to `HorizontalAlignment.Center`, the paragraph at the insertion point will be centered within the control. If a third paragraph is created after the second paragraph, it also is aligned to the center of the control.  \\n  \\n If a selection is made within the control when the property is set, all paragraphs selected are aligned based on this property setting. You can use this property to align the paragraphs in a document being created in the <xref:System.Windows.Forms.RichTextBox>. For example, if you want all paragraphs in a document to be centered, you can select all the paragraphs in the control and set the SelectionAlignment property to `HorizontalAlignment.Center`.  \\n  \\n> [!NOTE]\\n>  SelectionAlignment returns `SelectionAlignment.Left` when the text selection contains multiple paragraphs with mixed alignment.\"\n  example:\n  - \"The following code example demonstrates how to align text within the <xref:System.Windows.Forms.RichTextBox>. This example requires that a <xref:System.Windows.Forms.RichTextBox> control, named `richTextBox1`, has been added to the form.  \\n  \\n [!code-cpp[RichTextBox.SelectionAlignment#1](~/add/codesnippet/cpp/p-system.windows.forms.r_5_1.cpp)]\\n [!code-cs[RichTextBox.SelectionAlignment#1](~/add/codesnippet/csharp/p-system.windows.forms.r_5_1.cs)]\\n [!code-vb[RichTextBox.SelectionAlignment#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_5_1.vb)]\"\n  syntax:\n    content: public System.Windows.Forms.HorizontalAlignment SelectionAlignment { get; set; }\n    return:\n      type: System.Windows.Forms.HorizontalAlignment\n      description: One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values.\n  overload: System.Windows.Forms.RichTextBox.SelectionAlignment*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The specified value is not one of the values defined in the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> class.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionBackColor\n  id: SelectionBackColor\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionBackColor\n  nameWithType: RichTextBox.SelectionBackColor\n  fullName: System.Windows.Forms.RichTextBox.SelectionBackColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the color of text when the text is selected in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control.\n  remarks: Use SelectionBackColor to get or set the color of selected text in the <xref:System.Windows.Forms.RichTextBox>. If no text is currently selected, the SelectionBackColor property applies to the current position of the caret. Characters that are entered from that position have the specified SelectionBackColor.\n  syntax:\n    content: public System.Drawing.Color SelectionBackColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the text color when the text is selected. The default is the value of the <xref:System.Windows.Forms.Control.DefaultBackColor*> property.\n  overload: System.Windows.Forms.RichTextBox.SelectionBackColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionBullet\n  id: SelectionBullet\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionBullet\n  nameWithType: RichTextBox.SelectionBullet\n  fullName: System.Windows.Forms.RichTextBox.SelectionBullet\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the bullet style is applied to the current selection or insertion point.\n  remarks: \"If no text is selected, the bullet style is applied to the current insertion point and to all paragraphs that the user enters after the insertion point. The bullet style is applied to the text of the control until the insertion point is moved or when the user presses the Enter key on an empty bullet item.  \\n  \\n If text is selected within the control when this property is set, all paragraphs within the selected text are converted into bulleted items in the bulleted list. You can use this property to create bulleted lists within the documents you create in the <xref:System.Windows.Forms.RichTextBox> control.  \\n  \\n The <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A> property enables you to specify the amount of indentation to apply between the bullet and the bulleted item's text.\"\n  example:\n  - \"The following code example demonstrates how to use the SelectionBullet property with the <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>, and <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> properties to create a bulleted list in a <xref:System.Windows.Forms.RichTextBox> control. This example requires that a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1` is created on a form.  \\n  \\n [!code-vb[RichTextBox.SelectionBullet#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_21_1.vb)]\\n [!code-cs[RichTextBox.SelectionBullet#1](~/add/codesnippet/csharp/p-system.windows.forms.r_21_1.cs)]\\n [!code-cpp[RichTextBox.SelectionBullet#1](~/add/codesnippet/cpp/p-system.windows.forms.r_21_1.cpp)]\"\n  syntax:\n    content: public bool SelectionBullet { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection or insertion point has the bullet style applied; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.SelectionBullet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionChanged\n  id: SelectionChanged\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionChanged\n  nameWithType: RichTextBox.SelectionChanged\n  fullName: System.Windows.Forms.RichTextBox.SelectionChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the selection of text within the control has changed.\n  remarks: \"You can create an event handler for this event to determine when the user has changed text selection within the control. An event handler for this event can be used to keep text selected until the user has completed a task within the application.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the SelectionChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.RichTextBox> named `RichTextBox1`. Then ensure that the event handler is associated with the SelectionChanged event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#544](~/add/codesnippet/csharp/e-system.windows.forms.r_5_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#544](~/add/codesnippet/visualbasic/e-system.windows.forms.r_5_1.vb)]\"\n  syntax:\n    content: public event EventHandler SelectionChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionCharOffset\n  id: SelectionCharOffset\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionCharOffset\n  nameWithType: RichTextBox.SelectionCharOffset\n  fullName: System.Windows.Forms.RichTextBox.SelectionCharOffset\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets whether text in the control appears on the baseline, as a superscript, or as a subscript below the baseline.\n  remarks: \"The value of this property must be between -2000 and 2000.  \\n  \\n If this property is set to zero, the text appears on the baseline. If it is a positive number, the number specifies the number of pixels by which to raise the text selection above the baseline. If it is a negative number, this number specifies the number of pixels by which to subscript the text selection. You can use this property to specify text as superscript or subscript.  \\n  \\n If no text is selected, the offset is applied to the current insertion point and to all text that the user types after the insertion point. The character offset applies until the property is changed to a different value or until the insertion point is moved to a different section within the control.  \\n  \\n If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to create superscript and subscript text for such applications as mathematical expressions.\"\n  example:\n  - \"The following code example demonstrates how to specify superscript and subscript text within the <xref:System.Windows.Forms.RichTextBox> using the SelectionCharOffset property. This example requires that a <xref:System.Windows.Forms.RichTextBox> control, named `richTextBox1`, has been added to the form.  \\n  \\n [!code-cpp[RichTextBox.SelectionCharOffset#1](~/add/codesnippet/cpp/p-system.windows.forms.r_11_1.cpp)]\\n [!code-vb[RichTextBox.SelectionCharOffset#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_11_1.vb)]\\n [!code-cs[RichTextBox.SelectionCharOffset#1](~/add/codesnippet/csharp/p-system.windows.forms.r_11_1.cs)]\"\n  syntax:\n    content: public int SelectionCharOffset { get; set; }\n    return:\n      type: System.Int32\n      description: A number that specifies the character offset.\n  overload: System.Windows.Forms.RichTextBox.SelectionCharOffset*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified value was less than -2000 or greater than 2000.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionColor\n  id: SelectionColor\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionColor\n  nameWithType: RichTextBox.SelectionColor\n  fullName: System.Windows.Forms.RichTextBox.SelectionColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the text color of the current text selection or insertion point.\n  remarks: \"If the current text selection has more than one color specified, this property returns `Color.Empty`. If no text is currently selected, the text color specified in this property is applied to the current insertion point and to all text that is typed into the control after the insertion point. The text color setting applies until the property is changed to a different color or until the insertion point is moved to a different section within the control.  \\n  \\n If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to change the color of text in the <xref:System.Windows.Forms.RichTextBox>.  \\n  \\n To make text bold in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A> property to assign a new font that has the bold font style specified.\"\n  example:\n  - \"The following code example displays a <xref:System.Windows.Forms.ColorDialog> to the user to specify a color for the current text selection or text entered after the current insertion point in a <xref:System.Windows.Forms.RichTextBox> control. This example requires that the method defined in the example is added to a <xref:System.Windows.Forms.Form> class that contains a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1`.  \\n  \\n [!code-cpp[Classic RichTextBox.SelectionColor Example#1](~/add/codesnippet/cpp/p-system.windows.forms.r_12_1.cpp)]\\n [!code-vb[Classic RichTextBox.SelectionColor Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_12_1.vb)]\\n [!code-cs[Classic RichTextBox.SelectionColor Example#1](~/add/codesnippet/csharp/p-system.windows.forms.r_12_1.cs)]\"\n  syntax:\n    content: public System.Drawing.Color SelectionColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the color to apply to the current text selection or to text entered after the insertion point.\n  overload: System.Windows.Forms.RichTextBox.SelectionColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionFont\n  id: SelectionFont\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionFont\n  nameWithType: RichTextBox.SelectionFont\n  fullName: System.Windows.Forms.RichTextBox.SelectionFont\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the font of the current text selection or insertion point.\n  remarks: \"If the current text selection has more than one font specified, this property is `null`. If no text is currently selected, the font specified in this property is applied to the current insertion point and to all text that is typed into the control after the insertion point. The font setting applies until the property is changed to a different font or until the insertion point is moved to a different section within the control.  \\n  \\n If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to change the font style of text in the <xref:System.Windows.Forms.RichTextBox>. You can make the text in the control bold, italic, and underlined. You can also change the size of the text and the font applied to the text.  \\n  \\n To change the color of the text in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> property.\"\n  example:\n  - \"The following code example changes the current font bold style setting for the text selection or text entered after the insertion point within the <xref:System.Windows.Forms.RichTextBox> control. This example requires that the code is contained within a method in a <xref:System.Windows.Forms.Form>. The example also requires that a <xref:System.Windows.Forms.RichTextBox>, named `richTextBox1`, has been added to the <xref:System.Windows.Forms.Form>.  \\n  \\n [!code-cs[Classic RichTextBox.SelectionFont Example#1](~/add/codesnippet/csharp/p-system.windows.forms.r_8_1.cs)]\\n [!code-cpp[Classic RichTextBox.SelectionFont Example#1](~/add/codesnippet/cpp/p-system.windows.forms.r_8_1.cpp)]\\n [!code-vb[Classic RichTextBox.SelectionFont Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_8_1.vb)]\"\n  syntax:\n    content: public System.Drawing.Font SelectionFont { get; set; }\n    return:\n      type: System.Drawing.Font\n      description: A <xref href=\"System.Drawing.Font\"></xref> that represents the font to apply to the current text selection or to text entered after the insertion point.\n  overload: System.Windows.Forms.RichTextBox.SelectionFont*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionHangingIndent\n  id: SelectionHangingIndent\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionHangingIndent\n  nameWithType: RichTextBox.SelectionHangingIndent\n  fullName: System.Windows.Forms.RichTextBox.SelectionHangingIndent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the distance between the left edge of the first line of text in the selected paragraph and the left edge of subsequent lines in the same paragraph.\n  remarks: \"If no text is currently selected, the hanging indent is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The hanging indent setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.  \\n  \\n If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to apply a hanging indent to your paragraphs.  \\n  \\n To set the indention of the first line of a paragraph selection, use the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> property.\"\n  example:\n  - \"The following code example demonstrates how to specify hanging indents within the <xref:System.Windows.Forms.RichTextBox> using the SelectionHangingIndent property. This example requires that a <xref:System.Windows.Forms.RichTextBox> control, named `richTextBox1`, has been added to the form.  \\n  \\n [!code-cs[RichTextBox.SelectionHangingIndent#1](~/add/codesnippet/csharp/p-system.windows.forms.r_10_1.cs)]\\n [!code-cpp[RichTextBox.SelectionHangingIndent#1](~/add/codesnippet/cpp/p-system.windows.forms.r_10_1.cpp)]\\n [!code-vb[RichTextBox.SelectionHangingIndent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_10_1.vb)]\"\n  syntax:\n    content: public int SelectionHangingIndent { get; set; }\n    return:\n      type: System.Int32\n      description: The distance, in pixels, for the hanging indent applied to the current text selection or the insertion point.\n  overload: System.Windows.Forms.RichTextBox.SelectionHangingIndent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionIndent\n  id: SelectionIndent\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionIndent\n  nameWithType: RichTextBox.SelectionIndent\n  fullName: System.Windows.Forms.RichTextBox.SelectionIndent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the length, in pixels, of the indentation of the line where the selection starts.\n  remarks: \"If no text is currently selected, the indentation setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The indentation setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.  \\n  \\n If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to indent paragraphs contained in document of the <xref:System.Windows.Forms.RichTextBox>. You can use this property in conjunction with the <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A> to create paragraphs displayed in paragraphs.  \\n  \\n To create a hanging indent for paragraphs in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> property.\"\n  example:\n  - \"The following code example demonstrates how to specify indented text within the <xref:System.Windows.Forms.RichTextBox> using the SelectionIndent property. This example requires that a <xref:System.Windows.Forms.RichTextBox> control, named `richTextBox1`, has been added to the form.  \\n  \\n [!code-cpp[RichTextBox.SelectionIndent#1](~/add/codesnippet/cpp/p-system.windows.forms.r_23_1.cpp)]\\n [!code-cs[RichTextBox.SelectionIndent#1](~/add/codesnippet/csharp/p-system.windows.forms.r_23_1.cs)]\\n [!code-vb[RichTextBox.SelectionIndent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_23_1.vb)]\"\n  syntax:\n    content: public int SelectionIndent { get; set; }\n    return:\n      type: System.Int32\n      description: The current distance, in pixels, of the indentation applied to the left of the current text selection or the insertion point.\n  overload: System.Windows.Forms.RichTextBox.SelectionIndent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionLength\n  id: SelectionLength\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionLength\n  nameWithType: RichTextBox.SelectionLength\n  fullName: System.Windows.Forms.RichTextBox.SelectionLength\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the number of characters selected in control.\n  remarks: You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text. You can also use this property to determine the total number of characters (including spaces) that are selected when performing single character tasks in a `for` loop.\n  example:\n  - \"The following code example demonstrates how to use the SelectionLength property to determine if text is selected within the <xref:System.Windows.Forms.RichTextBox>. This example requires that a <xref:System.Windows.Forms.RichTextBox> control, named `richTextBox1`, has been added to the form. The example also requires that `richTextBox1` contains text that is selected in the control.  \\n  \\n [!code-cpp[RichTextBox.SelectionLength#1](~/add/codesnippet/cpp/p-system.windows.forms.r_3_1.cpp)]\\n [!code-cs[RichTextBox.SelectionLength#1](~/add/codesnippet/csharp/p-system.windows.forms.r_3_1.cs)]\\n [!code-vb[RichTextBox.SelectionLength#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_3_1.vb)]\"\n  syntax:\n    content: public override int SelectionLength { get; set; }\n    return:\n      type: System.Int32\n      description: The number of characters selected in the text box.\n  overload: System.Windows.Forms.RichTextBox.SelectionLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionProtected\n  id: SelectionProtected\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionProtected\n  nameWithType: RichTextBox.SelectionProtected\n  fullName: System.Windows.Forms.RichTextBox.SelectionProtected\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the current text selection is protected.\n  remarks: \"If no text is currently selected, the protection setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The protection setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.  \\n  \\n If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to prevent the user from modifying sections of text within the control.  \\n  \\n If this property is set to `true`, the <xref:System.Windows.Forms.RichTextBox.Protected> event is raised when the user attempts to change the current text selection.  \\n  \\n> [!NOTE]\\n>  This property will return `true` only if the entire selection within the control contains protected content.\"\n  example:\n  - \"The following code example demonstrates how to specify protected text within the <xref:System.Windows.Forms.RichTextBox> using the SelectionProtected property. This example requires that a <xref:System.Windows.Forms.RichTextBox> control, named `richTextBox1`, has been added to the form and that the <xref:System.Windows.Forms.RichTextBox> control has text added to it that contains the word \\\"RichTextBox.\\\"  \\n  \\n [!code-cpp[RichTextBox.SelectionProtected#1](~/add/codesnippet/cpp/p-system.windows.forms.r_0_1.cpp)]\\n [!code-cs[RichTextBox.SelectionProtected#1](~/add/codesnippet/csharp/p-system.windows.forms.r_0_1.cs)]\\n [!code-vb[RichTextBox.SelectionProtected#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_0_1.vb)]\"\n  syntax:\n    content: public bool SelectionProtected { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current selection prevents any changes to its content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.SelectionProtected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionRightIndent\n  id: SelectionRightIndent\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionRightIndent\n  nameWithType: RichTextBox.SelectionRightIndent\n  fullName: System.Windows.Forms.RichTextBox.SelectionRightIndent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: The distance (in pixels) between the right edge of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control and the right edge of the text that is selected or added at the current insertion point.\n  remarks: \"If no text is currently selected, the indentation setting is applied to the paragraph in which the insertion point appears and to all text that is typed into the control after the insertion point. The indentation setting applies until the property is changed to a different value or until the insertion point is moved to a different paragraph within the control.  \\n  \\n If text is selected within the control, the selected text and any text entered after the text selection will have the value of this property applied to it. You can use this property to indent paragraphs contained in document of the <xref:System.Windows.Forms.RichTextBox>. You can use this property in conjunction with the <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> to create paragraphs displayed in paragraphs.  \\n  \\n To create a hanging indent for paragraphs in the control, use the <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> property.\"\n  example:\n  - \"The following code example demonstrates how to create a right margin in a <xref:System.Windows.Forms.RichTextBox> using the SelectionRightIndent property. The example requires that you have a form that contains a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1`, and that the example code is called from an event within the form's class.  \\n  \\n [!code-cpp[RichTextBox.SelectionRightIndent#1](~/add/codesnippet/cpp/p-system.windows.forms.r_24_1.cpp)]\\n [!code-cs[RichTextBox.SelectionRightIndent#1](~/add/codesnippet/csharp/p-system.windows.forms.r_24_1.cs)]\\n [!code-vb[RichTextBox.SelectionRightIndent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_24_1.vb)]\"\n  syntax:\n    content: public int SelectionRightIndent { get; set; }\n    return:\n      type: System.Int32\n      description: The indentation space, in pixels, at the right of the current selection or insertion point.\n  overload: System.Windows.Forms.RichTextBox.SelectionRightIndent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionTabs\n  id: SelectionTabs\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionTabs\n  nameWithType: RichTextBox.SelectionTabs\n  fullName: System.Windows.Forms.RichTextBox.SelectionTabs\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the absolute tab stop positions in a <xref href=\"System.Windows.Forms.RichTextBox\"></xref> control.\n  remarks: This property enables you to obtain an array that contains the spacing for each tab in the current text selection within the <xref:System.Windows.Forms.RichTextBox> control. You can then use this property to adjust the size of each tab within the text selection. For example, if you want to adjust the tab space within the document, you can select the entire document and obtain the list of tab spaces using the SelectionTabs property. You can then adjust them to new values and reassign them to this property.\n  syntax:\n    content: public int[] SelectionTabs { get; set; }\n    return:\n      type: System.Int32[]\n      description: An array in which each member specifies a tab offset, in pixels.\n  overload: System.Windows.Forms.RichTextBox.SelectionTabs*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The array has more than the maximum 32 elements.\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.SelectionType\n  id: SelectionType\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: SelectionType\n  nameWithType: RichTextBox.SelectionType\n  fullName: System.Windows.Forms.RichTextBox.SelectionType\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the selection type within the control.\n  remarks: You can use this property to determine the type of data that is currently selected in the control in order to handle the selection properly when performing tasks within the control on the current selection. The property can represent any combination of values from the <xref:System.Windows.Forms.RichTextBoxSelectionTypes> enumeration representing the many types of objects in the current selection.\n  syntax:\n    content: public System.Windows.Forms.RichTextBoxSelectionTypes SelectionType { get; }\n    return:\n      type: System.Windows.Forms.RichTextBoxSelectionTypes\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.RichTextBoxSelectionTypes\"></xref> values.\n  overload: System.Windows.Forms.RichTextBox.SelectionType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.ShowSelectionMargin\n  id: ShowSelectionMargin\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: ShowSelectionMargin\n  nameWithType: RichTextBox.ShowSelectionMargin\n  fullName: System.Windows.Forms.RichTextBox.ShowSelectionMargin\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether a selection margin is displayed in the <xref href=\"System.Windows.Forms.RichTextBox\"></xref>.\n  remarks: \"You can use this property to enable the user to easily select lines of text in the <xref:System.Windows.Forms.RichTextBox>. The selection margin is added to the left side of the <xref:System.Windows.Forms.RichTextBox>. This margin makes it easier for the user to select text starting on the left side of the control. The user can click in the selection margin to select a single line of text or double-click to select the entire paragraph that the line double-clicked is contained within.  \\n  \\n> [!NOTE]\\n>  If the ShowSelectionMargin property is set to `true`, setting the <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> property to `RichTextBoxScrollBars.Horizontal`, `RichTextBoxScrollBars.Vertical`, or `RichTextBoxScrollBars.Both` will not cause scroll bars to be displayed. In order to display scroll bars while the ShowSelectionMargin property is set to `true`, set the <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> property to `RichTextBoxScrollBars.ForcedHorizontal`, `RichTextBoxScrollBars.ForcedVertical`, or `RichTextBoxScrollBars.ForcedBoth`.\"\n  syntax:\n    content: public bool ShowSelectionMargin { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a selection margin is enabled in the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.RichTextBox.ShowSelectionMargin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.Text\n  id: Text\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: Text\n  nameWithType: RichTextBox.Text\n  fullName: System.Windows.Forms.RichTextBox.Text\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the current text in the rich text box.\n  remarks: To display multiple lines of text in a <xref:System.Windows.Forms.RichTextBox>, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`. To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property. The Text property does not return any information about the formatting applied to the contents of the <xref:System.Windows.Forms.RichTextBox>. To get the rich text formatting (RTF) codes, use the <xref:System.Windows.Forms.RichTextBox.Rtf%2A> property. The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.\n  syntax:\n    content: public override string Text { get; set; }\n    return:\n      type: System.String\n      description: The text displayed in the control.\n  overload: System.Windows.Forms.RichTextBox.Text*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.TextLength\n  id: TextLength\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: TextLength\n  nameWithType: RichTextBox.TextLength\n  fullName: System.Windows.Forms.RichTextBox.TextLength\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the length of text in the control.\n  syntax:\n    content: public override int TextLength { get; }\n    return:\n      type: System.Int32\n      description: The number of characters contained in the text of the control.\n  overload: System.Windows.Forms.RichTextBox.TextLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.UndoActionName\n  id: UndoActionName\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: UndoActionName\n  nameWithType: RichTextBox.UndoActionName\n  fullName: System.Windows.Forms.RichTextBox.UndoActionName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the name of the action that can be undone in the control when the <xref:System.Windows.Forms.TextBoxBase.Undo*> method is called.\n  remarks: This property enables you to determine the last action that was done within the control that can be undone. You can use this property to limit the operations available to be undone by the user of the control.\n  syntax:\n    content: public string UndoActionName { get; }\n    return:\n      type: System.String\n      description: The text name of the action that can be undone.\n  overload: System.Windows.Forms.RichTextBox.UndoActionName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.VScroll\n  id: VScroll\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: VScroll\n  nameWithType: RichTextBox.VScroll\n  fullName: System.Windows.Forms.RichTextBox.VScroll\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user clicks the vertical scroll bars of the control.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the VScroll event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.RichTextBox> named `RichTextBox1`. Then ensure that the event handler is associated with the VScroll event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#545](~/add/codesnippet/csharp/e-system.windows.forms.r_9_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#545](~/add/codesnippet/visualbasic/e-system.windows.forms.r_9_1.vb)]\"\n  syntax:\n    content: public event EventHandler VScroll;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.WndProc(System.Windows.Forms.Message@)\n  id: WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: WndProc(Message)\n  nameWithType: RichTextBox.WndProc(Message)\n  fullName: System.Windows.Forms.RichTextBox.WndProc(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes Windows messages.\n  syntax:\n    content: protected override void WndProc (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: A Windows Message object.\n  overload: System.Windows.Forms.RichTextBox.WndProc*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.RichTextBox.ZoomFactor\n  id: ZoomFactor\n  parent: System.Windows.Forms.RichTextBox\n  langs:\n  - csharp\n  name: ZoomFactor\n  nameWithType: RichTextBox.ZoomFactor\n  fullName: System.Windows.Forms.RichTextBox.ZoomFactor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the current zoom level of the <xref href=\"System.Windows.Forms.RichTextBox\"></xref>.\n  remarks: The value of this property can be between 1/64 (0.015625) and 64.0, not inclusive. A value of 1.0 indicates that no zoom is applied to the control. The zoom feature performs optimally when the document contains TrueType fonts. When a font that is not TrueType is used within the document of the control, the ZoomFactor property will use the nearest whole number value. You can use this property to enable the user of the <xref:System.Windows.Forms.RichTextBox> control to zoom into sections of the documentation that are too small to view or to condense the view to enable more of the document to be viewed on screen.\n  example:\n  - \"The following code example demonstrates how to create a <xref:System.Windows.Forms.RichTextBox> that zooms in on text, automatically selects words in the text of the control when a word is double-clicked, and has a margin on the right side of the client area of the control. If the <xref:System.Windows.Forms.RichTextBox> control has a small width, using this code will create a <xref:System.Windows.Forms.RichTextBox> where each character of text is displayed on its own line. While in this vertical display position, clicking on any part of a word will select all characters of the word regardless of the fact that the text is displayed vertically. This example requires that you have a form that contains a <xref:System.Windows.Forms.RichTextBox> control named `richTextBox1`.  \\n  \\n [!code-cpp[RichTextBox.ZoomFactor#1](~/add/codesnippet/cpp/p-system.windows.forms.r_13_1.cpp)]\\n [!code-cs[RichTextBox.ZoomFactor#1](~/add/codesnippet/csharp/p-system.windows.forms.r_13_1.cs)]\\n [!code-vb[RichTextBox.ZoomFactor#1](~/add/codesnippet/visualbasic/p-system.windows.forms.r_13_1.vb)]\"\n  syntax:\n    content: public float ZoomFactor { get; set; }\n    return:\n      type: System.Single\n      description: The factor by which the contents of the control is zoomed.\n  overload: System.Windows.Forms.RichTextBox.ZoomFactor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified zoom factor did not fall within the permissible range.\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: System.Windows.Forms.TextBoxBase\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IO.IOException\n  isExternal: true\n  name: System.IO.IOException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Windows.Forms.RichTextBox.#ctor\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: RichTextBox()\n  nameWithType: RichTextBox.RichTextBox()\n  fullName: System.Windows.Forms.RichTextBox.RichTextBox()\n- uid: System.Windows.Forms.RichTextBox.AllowDrop\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: AllowDrop\n  nameWithType: RichTextBox.AllowDrop\n  fullName: System.Windows.Forms.RichTextBox.AllowDrop\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.RichTextBox.AutoSize\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: AutoSize\n  nameWithType: RichTextBox.AutoSize\n  fullName: System.Windows.Forms.RichTextBox.AutoSize\n- uid: System.Windows.Forms.RichTextBox.AutoWordSelection\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: AutoWordSelection\n  nameWithType: RichTextBox.AutoWordSelection\n  fullName: System.Windows.Forms.RichTextBox.AutoWordSelection\n- uid: System.Windows.Forms.RichTextBox.BackgroundImage\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: BackgroundImage\n  nameWithType: RichTextBox.BackgroundImage\n  fullName: System.Windows.Forms.RichTextBox.BackgroundImage\n- uid: System.Drawing.Image\n  parent: System.Drawing\n  isExternal: false\n  name: Image\n  nameWithType: Image\n  fullName: System.Drawing.Image\n- uid: System.Windows.Forms.RichTextBox.BackgroundImageChanged\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: BackgroundImageChanged\n  nameWithType: RichTextBox.BackgroundImageChanged\n  fullName: System.Windows.Forms.RichTextBox.BackgroundImageChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.RichTextBox.BackgroundImageLayout\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: BackgroundImageLayout\n  nameWithType: RichTextBox.BackgroundImageLayout\n  fullName: System.Windows.Forms.RichTextBox.BackgroundImageLayout\n- uid: System.Windows.Forms.ImageLayout\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ImageLayout\n  nameWithType: ImageLayout\n  fullName: System.Windows.Forms.ImageLayout\n- uid: System.Windows.Forms.RichTextBox.BackgroundImageLayoutChanged\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: BackgroundImageLayoutChanged\n  nameWithType: RichTextBox.BackgroundImageLayoutChanged\n  fullName: System.Windows.Forms.RichTextBox.BackgroundImageLayoutChanged\n- uid: System.Windows.Forms.RichTextBox.BulletIndent\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: BulletIndent\n  nameWithType: RichTextBox.BulletIndent\n  fullName: System.Windows.Forms.RichTextBox.BulletIndent\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.RichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: CanPaste(DataFormats+Format)\n  nameWithType: RichTextBox.CanPaste(DataFormats+Format)\n  fullName: System.Windows.Forms.RichTextBox.CanPaste(DataFormats+Format)\n- uid: System.Windows.Forms.DataFormats.Format\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DataFormats+Format\n  nameWithType: DataFormats+Format\n  fullName: System.Windows.Forms.DataFormats+Format\n- uid: System.Windows.Forms.RichTextBox.CanRedo\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: CanRedo\n  nameWithType: RichTextBox.CanRedo\n  fullName: System.Windows.Forms.RichTextBox.CanRedo\n- uid: System.Windows.Forms.RichTextBox.ContentsResized\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ContentsResized\n  nameWithType: RichTextBox.ContentsResized\n  fullName: System.Windows.Forms.RichTextBox.ContentsResized\n- uid: System.Windows.Forms.ContentsResizedEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ContentsResizedEventHandler\n  nameWithType: ContentsResizedEventHandler\n  fullName: System.Windows.Forms.ContentsResizedEventHandler\n- uid: System.Windows.Forms.RichTextBox.CreateParams\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: CreateParams\n  nameWithType: RichTextBox.CreateParams\n  fullName: System.Windows.Forms.RichTextBox.CreateParams\n- uid: System.Windows.Forms.CreateParams\n  parent: System.Windows.Forms\n  isExternal: false\n  name: CreateParams\n  nameWithType: CreateParams\n  fullName: System.Windows.Forms.CreateParams\n- uid: System.Windows.Forms.RichTextBox.CreateRichEditOleCallback\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: CreateRichEditOleCallback()\n  nameWithType: RichTextBox.CreateRichEditOleCallback()\n  fullName: System.Windows.Forms.RichTextBox.CreateRichEditOleCallback()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.RichTextBox.DefaultSize\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: DefaultSize\n  nameWithType: RichTextBox.DefaultSize\n  fullName: System.Windows.Forms.RichTextBox.DefaultSize\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Windows.Forms.RichTextBox.DetectUrls\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: DetectUrls\n  nameWithType: RichTextBox.DetectUrls\n  fullName: System.Windows.Forms.RichTextBox.DetectUrls\n- uid: System.Windows.Forms.RichTextBox.DragDrop\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: DragDrop\n  nameWithType: RichTextBox.DragDrop\n  fullName: System.Windows.Forms.RichTextBox.DragDrop\n- uid: System.Windows.Forms.DragEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DragEventHandler\n  nameWithType: DragEventHandler\n  fullName: System.Windows.Forms.DragEventHandler\n- uid: System.Windows.Forms.RichTextBox.DragEnter\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: DragEnter\n  nameWithType: RichTextBox.DragEnter\n  fullName: System.Windows.Forms.RichTextBox.DragEnter\n- uid: System.Windows.Forms.RichTextBox.DragLeave\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: DragLeave\n  nameWithType: RichTextBox.DragLeave\n  fullName: System.Windows.Forms.RichTextBox.DragLeave\n- uid: System.Windows.Forms.RichTextBox.DragOver\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: DragOver\n  nameWithType: RichTextBox.DragOver\n  fullName: System.Windows.Forms.RichTextBox.DragOver\n- uid: System.Windows.Forms.RichTextBox.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: DrawToBitmap(Bitmap,Rectangle)\n  nameWithType: RichTextBox.DrawToBitmap(Bitmap,Rectangle)\n  fullName: System.Windows.Forms.RichTextBox.DrawToBitmap(Bitmap,Rectangle)\n- uid: System.Drawing.Bitmap\n  parent: System.Drawing\n  isExternal: false\n  name: Bitmap\n  nameWithType: Bitmap\n  fullName: System.Drawing.Bitmap\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Windows.Forms.RichTextBox.EnableAutoDragDrop\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: EnableAutoDragDrop\n  nameWithType: RichTextBox.EnableAutoDragDrop\n  fullName: System.Windows.Forms.RichTextBox.EnableAutoDragDrop\n- uid: System.Windows.Forms.RichTextBox.Find(System.Char[])\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Find(Char[])\n  nameWithType: RichTextBox.Find(Char[])\n  fullName: System.Windows.Forms.RichTextBox.Find(Char[])\n- uid: System.Char[]\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: Char[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.RichTextBox.Find(System.String)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Find(String)\n  nameWithType: RichTextBox.Find(String)\n  fullName: System.Windows.Forms.RichTextBox.Find(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Find(Char[],Int32)\n  nameWithType: RichTextBox.Find(Char[],Int32)\n  fullName: System.Windows.Forms.RichTextBox.Find(Char[],Int32)\n- uid: System.Windows.Forms.RichTextBox.Find(System.String,System.Windows.Forms.RichTextBoxFinds)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Find(String,RichTextBoxFinds)\n  nameWithType: RichTextBox.Find(String,RichTextBoxFinds)\n  fullName: System.Windows.Forms.RichTextBox.Find(String,RichTextBoxFinds)\n- uid: System.Windows.Forms.RichTextBoxFinds\n  parent: System.Windows.Forms\n  isExternal: false\n  name: RichTextBoxFinds\n  nameWithType: RichTextBoxFinds\n  fullName: System.Windows.Forms.RichTextBoxFinds\n- uid: System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32,System.Int32)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Find(Char[],Int32,Int32)\n  nameWithType: RichTextBox.Find(Char[],Int32,Int32)\n  fullName: System.Windows.Forms.RichTextBox.Find(Char[],Int32,Int32)\n- uid: System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Windows.Forms.RichTextBoxFinds)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Find(String,Int32,RichTextBoxFinds)\n  nameWithType: RichTextBox.Find(String,Int32,RichTextBoxFinds)\n  fullName: System.Windows.Forms.RichTextBox.Find(String,Int32,RichTextBoxFinds)\n- uid: System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Int32,System.Windows.Forms.RichTextBoxFinds)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Find(String,Int32,Int32,RichTextBoxFinds)\n  nameWithType: RichTextBox.Find(String,Int32,Int32,RichTextBoxFinds)\n  fullName: System.Windows.Forms.RichTextBox.Find(String,Int32,Int32,RichTextBoxFinds)\n- uid: System.Windows.Forms.RichTextBox.Font\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Font\n  nameWithType: RichTextBox.Font\n  fullName: System.Windows.Forms.RichTextBox.Font\n- uid: System.Drawing.Font\n  parent: System.Drawing\n  isExternal: false\n  name: Font\n  nameWithType: Font\n  fullName: System.Drawing.Font\n- uid: System.Windows.Forms.RichTextBox.ForeColor\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ForeColor\n  nameWithType: RichTextBox.ForeColor\n  fullName: System.Windows.Forms.RichTextBox.ForeColor\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: GetCharIndexFromPosition(Point)\n  nameWithType: RichTextBox.GetCharIndexFromPosition(Point)\n  fullName: System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(Point)\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: GetLineFromCharIndex(Int32)\n  nameWithType: RichTextBox.GetLineFromCharIndex(Int32)\n  fullName: System.Windows.Forms.RichTextBox.GetLineFromCharIndex(Int32)\n- uid: System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: GetPositionFromCharIndex(Int32)\n  nameWithType: RichTextBox.GetPositionFromCharIndex(Int32)\n  fullName: System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(Int32)\n- uid: System.Windows.Forms.RichTextBox.GiveFeedback\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: GiveFeedback\n  nameWithType: RichTextBox.GiveFeedback\n  fullName: System.Windows.Forms.RichTextBox.GiveFeedback\n- uid: System.Windows.Forms.GiveFeedbackEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: GiveFeedbackEventHandler\n  nameWithType: GiveFeedbackEventHandler\n  fullName: System.Windows.Forms.GiveFeedbackEventHandler\n- uid: System.Windows.Forms.RichTextBox.HScroll\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: HScroll\n  nameWithType: RichTextBox.HScroll\n  fullName: System.Windows.Forms.RichTextBox.HScroll\n- uid: System.Windows.Forms.RichTextBox.ImeChange\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ImeChange\n  nameWithType: RichTextBox.ImeChange\n  fullName: System.Windows.Forms.RichTextBox.ImeChange\n- uid: System.Windows.Forms.RichTextBox.LanguageOption\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: LanguageOption\n  nameWithType: RichTextBox.LanguageOption\n  fullName: System.Windows.Forms.RichTextBox.LanguageOption\n- uid: System.Windows.Forms.RichTextBoxLanguageOptions\n  parent: System.Windows.Forms\n  isExternal: false\n  name: RichTextBoxLanguageOptions\n  nameWithType: RichTextBoxLanguageOptions\n  fullName: System.Windows.Forms.RichTextBoxLanguageOptions\n- uid: System.Windows.Forms.RichTextBox.LinkClicked\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: LinkClicked\n  nameWithType: RichTextBox.LinkClicked\n  fullName: System.Windows.Forms.RichTextBox.LinkClicked\n- uid: System.Windows.Forms.LinkClickedEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: LinkClickedEventHandler\n  nameWithType: LinkClickedEventHandler\n  fullName: System.Windows.Forms.LinkClickedEventHandler\n- uid: System.Windows.Forms.RichTextBox.LoadFile(System.String)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: LoadFile(String)\n  nameWithType: RichTextBox.LoadFile(String)\n  fullName: System.Windows.Forms.RichTextBox.LoadFile(String)\n- uid: System.Windows.Forms.RichTextBox.LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: LoadFile(Stream,RichTextBoxStreamType)\n  nameWithType: RichTextBox.LoadFile(Stream,RichTextBoxStreamType)\n  fullName: System.Windows.Forms.RichTextBox.LoadFile(Stream,RichTextBoxStreamType)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Windows.Forms.RichTextBoxStreamType\n  parent: System.Windows.Forms\n  isExternal: false\n  name: RichTextBoxStreamType\n  nameWithType: RichTextBoxStreamType\n  fullName: System.Windows.Forms.RichTextBoxStreamType\n- uid: System.Windows.Forms.RichTextBox.LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: LoadFile(String,RichTextBoxStreamType)\n  nameWithType: RichTextBox.LoadFile(String,RichTextBoxStreamType)\n  fullName: System.Windows.Forms.RichTextBox.LoadFile(String,RichTextBoxStreamType)\n- uid: System.Windows.Forms.RichTextBox.MaxLength\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: MaxLength\n  nameWithType: RichTextBox.MaxLength\n  fullName: System.Windows.Forms.RichTextBox.MaxLength\n- uid: System.Windows.Forms.RichTextBox.Multiline\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Multiline\n  nameWithType: RichTextBox.Multiline\n  fullName: System.Windows.Forms.RichTextBox.Multiline\n- uid: System.Windows.Forms.RichTextBox.OnBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnBackColorChanged(EventArgs)\n  nameWithType: RichTextBox.OnBackColorChanged(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnBackColorChanged(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnContentsResized(ContentsResizedEventArgs)\n  nameWithType: RichTextBox.OnContentsResized(ContentsResizedEventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnContentsResized(ContentsResizedEventArgs)\n- uid: System.Windows.Forms.ContentsResizedEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ContentsResizedEventArgs\n  nameWithType: ContentsResizedEventArgs\n  fullName: System.Windows.Forms.ContentsResizedEventArgs\n- uid: System.Windows.Forms.RichTextBox.OnContextMenuChanged(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnContextMenuChanged(EventArgs)\n  nameWithType: RichTextBox.OnContextMenuChanged(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnContextMenuChanged(EventArgs)\n- uid: System.Windows.Forms.RichTextBox.OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnHandleCreated(EventArgs)\n  nameWithType: RichTextBox.OnHandleCreated(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnHandleCreated(EventArgs)\n- uid: System.Windows.Forms.RichTextBox.OnHandleDestroyed(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnHandleDestroyed(EventArgs)\n  nameWithType: RichTextBox.OnHandleDestroyed(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnHandleDestroyed(EventArgs)\n- uid: System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnHScroll(EventArgs)\n  nameWithType: RichTextBox.OnHScroll(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnHScroll(EventArgs)\n- uid: System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnImeChange(EventArgs)\n  nameWithType: RichTextBox.OnImeChange(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnImeChange(EventArgs)\n- uid: System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnLinkClicked(LinkClickedEventArgs)\n  nameWithType: RichTextBox.OnLinkClicked(LinkClickedEventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnLinkClicked(LinkClickedEventArgs)\n- uid: System.Windows.Forms.LinkClickedEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: LinkClickedEventArgs\n  nameWithType: LinkClickedEventArgs\n  fullName: System.Windows.Forms.LinkClickedEventArgs\n- uid: System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnProtected(EventArgs)\n  nameWithType: RichTextBox.OnProtected(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnProtected(EventArgs)\n- uid: System.Windows.Forms.RichTextBox.OnRightToLeftChanged(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnRightToLeftChanged(EventArgs)\n  nameWithType: RichTextBox.OnRightToLeftChanged(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnRightToLeftChanged(EventArgs)\n- uid: System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnSelectionChanged(EventArgs)\n  nameWithType: RichTextBox.OnSelectionChanged(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnSelectionChanged(EventArgs)\n- uid: System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnVScroll(EventArgs)\n  nameWithType: RichTextBox.OnVScroll(EventArgs)\n  fullName: System.Windows.Forms.RichTextBox.OnVScroll(EventArgs)\n- uid: System.Windows.Forms.RichTextBox.Paste(System.Windows.Forms.DataFormats.Format)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Paste(DataFormats+Format)\n  nameWithType: RichTextBox.Paste(DataFormats+Format)\n  fullName: System.Windows.Forms.RichTextBox.Paste(DataFormats+Format)\n- uid: System.Windows.Forms.RichTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ProcessCmdKey(Message,Keys)\n  nameWithType: RichTextBox.ProcessCmdKey(Message,Keys)\n  fullName: System.Windows.Forms.RichTextBox.ProcessCmdKey(Message,Keys)\n- uid: System.Windows.Forms.Message\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Windows.Forms.Message\n- uid: System.Windows.Forms.Keys\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Keys\n  nameWithType: Keys\n  fullName: System.Windows.Forms.Keys\n- uid: System.Windows.Forms.RichTextBox.Protected\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Protected\n  nameWithType: RichTextBox.Protected\n  fullName: System.Windows.Forms.RichTextBox.Protected\n- uid: System.Windows.Forms.RichTextBox.QueryContinueDrag\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: QueryContinueDrag\n  nameWithType: RichTextBox.QueryContinueDrag\n  fullName: System.Windows.Forms.RichTextBox.QueryContinueDrag\n- uid: System.Windows.Forms.QueryContinueDragEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: QueryContinueDragEventHandler\n  nameWithType: QueryContinueDragEventHandler\n  fullName: System.Windows.Forms.QueryContinueDragEventHandler\n- uid: System.Windows.Forms.RichTextBox.Redo\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Redo()\n  nameWithType: RichTextBox.Redo()\n  fullName: System.Windows.Forms.RichTextBox.Redo()\n- uid: System.Windows.Forms.RichTextBox.RedoActionName\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: RedoActionName\n  nameWithType: RichTextBox.RedoActionName\n  fullName: System.Windows.Forms.RichTextBox.RedoActionName\n- uid: System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: RichTextShortcutsEnabled\n  nameWithType: RichTextBox.RichTextShortcutsEnabled\n  fullName: System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled\n- uid: System.Windows.Forms.RichTextBox.RightMargin\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: RightMargin\n  nameWithType: RichTextBox.RightMargin\n  fullName: System.Windows.Forms.RichTextBox.RightMargin\n- uid: System.Windows.Forms.RichTextBox.Rtf\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Rtf\n  nameWithType: RichTextBox.Rtf\n  fullName: System.Windows.Forms.RichTextBox.Rtf\n- uid: System.Windows.Forms.RichTextBox.SaveFile(System.String)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SaveFile(String)\n  nameWithType: RichTextBox.SaveFile(String)\n  fullName: System.Windows.Forms.RichTextBox.SaveFile(String)\n- uid: System.Windows.Forms.RichTextBox.SaveFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SaveFile(Stream,RichTextBoxStreamType)\n  nameWithType: RichTextBox.SaveFile(Stream,RichTextBoxStreamType)\n  fullName: System.Windows.Forms.RichTextBox.SaveFile(Stream,RichTextBoxStreamType)\n- uid: System.Windows.Forms.RichTextBox.SaveFile(System.String,System.Windows.Forms.RichTextBoxStreamType)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SaveFile(String,RichTextBoxStreamType)\n  nameWithType: RichTextBox.SaveFile(String,RichTextBoxStreamType)\n  fullName: System.Windows.Forms.RichTextBox.SaveFile(String,RichTextBoxStreamType)\n- uid: System.Windows.Forms.RichTextBox.ScrollBars\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ScrollBars\n  nameWithType: RichTextBox.ScrollBars\n  fullName: System.Windows.Forms.RichTextBox.ScrollBars\n- uid: System.Windows.Forms.RichTextBoxScrollBars\n  parent: System.Windows.Forms\n  isExternal: false\n  name: RichTextBoxScrollBars\n  nameWithType: RichTextBoxScrollBars\n  fullName: System.Windows.Forms.RichTextBoxScrollBars\n- uid: System.Windows.Forms.RichTextBox.SelectedRtf\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectedRtf\n  nameWithType: RichTextBox.SelectedRtf\n  fullName: System.Windows.Forms.RichTextBox.SelectedRtf\n- uid: System.Windows.Forms.RichTextBox.SelectedText\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectedText\n  nameWithType: RichTextBox.SelectedText\n  fullName: System.Windows.Forms.RichTextBox.SelectedText\n- uid: System.Windows.Forms.RichTextBox.SelectionAlignment\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionAlignment\n  nameWithType: RichTextBox.SelectionAlignment\n  fullName: System.Windows.Forms.RichTextBox.SelectionAlignment\n- uid: System.Windows.Forms.HorizontalAlignment\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HorizontalAlignment\n  nameWithType: HorizontalAlignment\n  fullName: System.Windows.Forms.HorizontalAlignment\n- uid: System.Windows.Forms.RichTextBox.SelectionBackColor\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionBackColor\n  nameWithType: RichTextBox.SelectionBackColor\n  fullName: System.Windows.Forms.RichTextBox.SelectionBackColor\n- uid: System.Windows.Forms.RichTextBox.SelectionBullet\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionBullet\n  nameWithType: RichTextBox.SelectionBullet\n  fullName: System.Windows.Forms.RichTextBox.SelectionBullet\n- uid: System.Windows.Forms.RichTextBox.SelectionChanged\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionChanged\n  nameWithType: RichTextBox.SelectionChanged\n  fullName: System.Windows.Forms.RichTextBox.SelectionChanged\n- uid: System.Windows.Forms.RichTextBox.SelectionCharOffset\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionCharOffset\n  nameWithType: RichTextBox.SelectionCharOffset\n  fullName: System.Windows.Forms.RichTextBox.SelectionCharOffset\n- uid: System.Windows.Forms.RichTextBox.SelectionColor\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionColor\n  nameWithType: RichTextBox.SelectionColor\n  fullName: System.Windows.Forms.RichTextBox.SelectionColor\n- uid: System.Windows.Forms.RichTextBox.SelectionFont\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionFont\n  nameWithType: RichTextBox.SelectionFont\n  fullName: System.Windows.Forms.RichTextBox.SelectionFont\n- uid: System.Windows.Forms.RichTextBox.SelectionHangingIndent\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionHangingIndent\n  nameWithType: RichTextBox.SelectionHangingIndent\n  fullName: System.Windows.Forms.RichTextBox.SelectionHangingIndent\n- uid: System.Windows.Forms.RichTextBox.SelectionIndent\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionIndent\n  nameWithType: RichTextBox.SelectionIndent\n  fullName: System.Windows.Forms.RichTextBox.SelectionIndent\n- uid: System.Windows.Forms.RichTextBox.SelectionLength\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionLength\n  nameWithType: RichTextBox.SelectionLength\n  fullName: System.Windows.Forms.RichTextBox.SelectionLength\n- uid: System.Windows.Forms.RichTextBox.SelectionProtected\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionProtected\n  nameWithType: RichTextBox.SelectionProtected\n  fullName: System.Windows.Forms.RichTextBox.SelectionProtected\n- uid: System.Windows.Forms.RichTextBox.SelectionRightIndent\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionRightIndent\n  nameWithType: RichTextBox.SelectionRightIndent\n  fullName: System.Windows.Forms.RichTextBox.SelectionRightIndent\n- uid: System.Windows.Forms.RichTextBox.SelectionTabs\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionTabs\n  nameWithType: RichTextBox.SelectionTabs\n  fullName: System.Windows.Forms.RichTextBox.SelectionTabs\n- uid: System.Int32[]\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.RichTextBox.SelectionType\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionType\n  nameWithType: RichTextBox.SelectionType\n  fullName: System.Windows.Forms.RichTextBox.SelectionType\n- uid: System.Windows.Forms.RichTextBoxSelectionTypes\n  parent: System.Windows.Forms\n  isExternal: false\n  name: RichTextBoxSelectionTypes\n  nameWithType: RichTextBoxSelectionTypes\n  fullName: System.Windows.Forms.RichTextBoxSelectionTypes\n- uid: System.Windows.Forms.RichTextBox.ShowSelectionMargin\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ShowSelectionMargin\n  nameWithType: RichTextBox.ShowSelectionMargin\n  fullName: System.Windows.Forms.RichTextBox.ShowSelectionMargin\n- uid: System.Windows.Forms.RichTextBox.Text\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Text\n  nameWithType: RichTextBox.Text\n  fullName: System.Windows.Forms.RichTextBox.Text\n- uid: System.Windows.Forms.RichTextBox.TextLength\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: TextLength\n  nameWithType: RichTextBox.TextLength\n  fullName: System.Windows.Forms.RichTextBox.TextLength\n- uid: System.Windows.Forms.RichTextBox.UndoActionName\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: UndoActionName\n  nameWithType: RichTextBox.UndoActionName\n  fullName: System.Windows.Forms.RichTextBox.UndoActionName\n- uid: System.Windows.Forms.RichTextBox.VScroll\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: VScroll\n  nameWithType: RichTextBox.VScroll\n  fullName: System.Windows.Forms.RichTextBox.VScroll\n- uid: System.Windows.Forms.RichTextBox.WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: WndProc(Message)\n  nameWithType: RichTextBox.WndProc(Message)\n  fullName: System.Windows.Forms.RichTextBox.WndProc(Message)\n- uid: System.Windows.Forms.RichTextBox.ZoomFactor\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ZoomFactor\n  nameWithType: RichTextBox.ZoomFactor\n  fullName: System.Windows.Forms.RichTextBox.ZoomFactor\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Forms.RichTextBox.#ctor*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: RichTextBox\n  nameWithType: RichTextBox.RichTextBox\n- uid: System.Windows.Forms.RichTextBox.AllowDrop*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: AllowDrop\n  nameWithType: RichTextBox.AllowDrop\n- uid: System.Windows.Forms.RichTextBox.AutoSize*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: AutoSize\n  nameWithType: RichTextBox.AutoSize\n- uid: System.Windows.Forms.RichTextBox.AutoWordSelection*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: AutoWordSelection\n  nameWithType: RichTextBox.AutoWordSelection\n- uid: System.Windows.Forms.RichTextBox.BackgroundImage*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: BackgroundImage\n  nameWithType: RichTextBox.BackgroundImage\n- uid: System.Windows.Forms.RichTextBox.BackgroundImageLayout*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: BackgroundImageLayout\n  nameWithType: RichTextBox.BackgroundImageLayout\n- uid: System.Windows.Forms.RichTextBox.BulletIndent*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: BulletIndent\n  nameWithType: RichTextBox.BulletIndent\n- uid: System.Windows.Forms.RichTextBox.CanPaste*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: CanPaste\n  nameWithType: RichTextBox.CanPaste\n- uid: System.Windows.Forms.RichTextBox.CanRedo*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: CanRedo\n  nameWithType: RichTextBox.CanRedo\n- uid: System.Windows.Forms.RichTextBox.CreateParams*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: CreateParams\n  nameWithType: RichTextBox.CreateParams\n- uid: System.Windows.Forms.RichTextBox.CreateRichEditOleCallback*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: CreateRichEditOleCallback\n  nameWithType: RichTextBox.CreateRichEditOleCallback\n- uid: System.Windows.Forms.RichTextBox.DefaultSize*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: DefaultSize\n  nameWithType: RichTextBox.DefaultSize\n- uid: System.Windows.Forms.RichTextBox.DetectUrls*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: DetectUrls\n  nameWithType: RichTextBox.DetectUrls\n- uid: System.Windows.Forms.RichTextBox.DrawToBitmap*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: DrawToBitmap\n  nameWithType: RichTextBox.DrawToBitmap\n- uid: System.Windows.Forms.RichTextBox.EnableAutoDragDrop*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: EnableAutoDragDrop\n  nameWithType: RichTextBox.EnableAutoDragDrop\n- uid: System.Windows.Forms.RichTextBox.Find*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Find\n  nameWithType: RichTextBox.Find\n- uid: System.Windows.Forms.RichTextBox.Font*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Font\n  nameWithType: RichTextBox.Font\n- uid: System.Windows.Forms.RichTextBox.ForeColor*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ForeColor\n  nameWithType: RichTextBox.ForeColor\n- uid: System.Windows.Forms.RichTextBox.GetCharIndexFromPosition*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: GetCharIndexFromPosition\n  nameWithType: RichTextBox.GetCharIndexFromPosition\n- uid: System.Windows.Forms.RichTextBox.GetLineFromCharIndex*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: GetLineFromCharIndex\n  nameWithType: RichTextBox.GetLineFromCharIndex\n- uid: System.Windows.Forms.RichTextBox.GetPositionFromCharIndex*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: GetPositionFromCharIndex\n  nameWithType: RichTextBox.GetPositionFromCharIndex\n- uid: System.Windows.Forms.RichTextBox.LanguageOption*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: LanguageOption\n  nameWithType: RichTextBox.LanguageOption\n- uid: System.Windows.Forms.RichTextBox.LoadFile*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: LoadFile\n  nameWithType: RichTextBox.LoadFile\n- uid: System.Windows.Forms.RichTextBox.MaxLength*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: MaxLength\n  nameWithType: RichTextBox.MaxLength\n- uid: System.Windows.Forms.RichTextBox.Multiline*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Multiline\n  nameWithType: RichTextBox.Multiline\n- uid: System.Windows.Forms.RichTextBox.OnBackColorChanged*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnBackColorChanged\n  nameWithType: RichTextBox.OnBackColorChanged\n- uid: System.Windows.Forms.RichTextBox.OnContentsResized*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnContentsResized\n  nameWithType: RichTextBox.OnContentsResized\n- uid: System.Windows.Forms.RichTextBox.OnContextMenuChanged*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnContextMenuChanged\n  nameWithType: RichTextBox.OnContextMenuChanged\n- uid: System.Windows.Forms.RichTextBox.OnHandleCreated*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnHandleCreated\n  nameWithType: RichTextBox.OnHandleCreated\n- uid: System.Windows.Forms.RichTextBox.OnHandleDestroyed*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnHandleDestroyed\n  nameWithType: RichTextBox.OnHandleDestroyed\n- uid: System.Windows.Forms.RichTextBox.OnHScroll*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnHScroll\n  nameWithType: RichTextBox.OnHScroll\n- uid: System.Windows.Forms.RichTextBox.OnImeChange*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnImeChange\n  nameWithType: RichTextBox.OnImeChange\n- uid: System.Windows.Forms.RichTextBox.OnLinkClicked*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnLinkClicked\n  nameWithType: RichTextBox.OnLinkClicked\n- uid: System.Windows.Forms.RichTextBox.OnProtected*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnProtected\n  nameWithType: RichTextBox.OnProtected\n- uid: System.Windows.Forms.RichTextBox.OnRightToLeftChanged*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnRightToLeftChanged\n  nameWithType: RichTextBox.OnRightToLeftChanged\n- uid: System.Windows.Forms.RichTextBox.OnSelectionChanged*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnSelectionChanged\n  nameWithType: RichTextBox.OnSelectionChanged\n- uid: System.Windows.Forms.RichTextBox.OnVScroll*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: OnVScroll\n  nameWithType: RichTextBox.OnVScroll\n- uid: System.Windows.Forms.RichTextBox.Paste*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Paste\n  nameWithType: RichTextBox.Paste\n- uid: System.Windows.Forms.RichTextBox.ProcessCmdKey*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ProcessCmdKey\n  nameWithType: RichTextBox.ProcessCmdKey\n- uid: System.Windows.Forms.RichTextBox.Redo*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Redo\n  nameWithType: RichTextBox.Redo\n- uid: System.Windows.Forms.RichTextBox.RedoActionName*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: RedoActionName\n  nameWithType: RichTextBox.RedoActionName\n- uid: System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: RichTextShortcutsEnabled\n  nameWithType: RichTextBox.RichTextShortcutsEnabled\n- uid: System.Windows.Forms.RichTextBox.RightMargin*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: RightMargin\n  nameWithType: RichTextBox.RightMargin\n- uid: System.Windows.Forms.RichTextBox.Rtf*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Rtf\n  nameWithType: RichTextBox.Rtf\n- uid: System.Windows.Forms.RichTextBox.SaveFile*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SaveFile\n  nameWithType: RichTextBox.SaveFile\n- uid: System.Windows.Forms.RichTextBox.ScrollBars*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ScrollBars\n  nameWithType: RichTextBox.ScrollBars\n- uid: System.Windows.Forms.RichTextBox.SelectedRtf*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectedRtf\n  nameWithType: RichTextBox.SelectedRtf\n- uid: System.Windows.Forms.RichTextBox.SelectedText*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectedText\n  nameWithType: RichTextBox.SelectedText\n- uid: System.Windows.Forms.RichTextBox.SelectionAlignment*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionAlignment\n  nameWithType: RichTextBox.SelectionAlignment\n- uid: System.Windows.Forms.RichTextBox.SelectionBackColor*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionBackColor\n  nameWithType: RichTextBox.SelectionBackColor\n- uid: System.Windows.Forms.RichTextBox.SelectionBullet*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionBullet\n  nameWithType: RichTextBox.SelectionBullet\n- uid: System.Windows.Forms.RichTextBox.SelectionCharOffset*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionCharOffset\n  nameWithType: RichTextBox.SelectionCharOffset\n- uid: System.Windows.Forms.RichTextBox.SelectionColor*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionColor\n  nameWithType: RichTextBox.SelectionColor\n- uid: System.Windows.Forms.RichTextBox.SelectionFont*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionFont\n  nameWithType: RichTextBox.SelectionFont\n- uid: System.Windows.Forms.RichTextBox.SelectionHangingIndent*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionHangingIndent\n  nameWithType: RichTextBox.SelectionHangingIndent\n- uid: System.Windows.Forms.RichTextBox.SelectionIndent*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionIndent\n  nameWithType: RichTextBox.SelectionIndent\n- uid: System.Windows.Forms.RichTextBox.SelectionLength*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionLength\n  nameWithType: RichTextBox.SelectionLength\n- uid: System.Windows.Forms.RichTextBox.SelectionProtected*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionProtected\n  nameWithType: RichTextBox.SelectionProtected\n- uid: System.Windows.Forms.RichTextBox.SelectionRightIndent*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionRightIndent\n  nameWithType: RichTextBox.SelectionRightIndent\n- uid: System.Windows.Forms.RichTextBox.SelectionTabs*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionTabs\n  nameWithType: RichTextBox.SelectionTabs\n- uid: System.Windows.Forms.RichTextBox.SelectionType*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: SelectionType\n  nameWithType: RichTextBox.SelectionType\n- uid: System.Windows.Forms.RichTextBox.ShowSelectionMargin*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ShowSelectionMargin\n  nameWithType: RichTextBox.ShowSelectionMargin\n- uid: System.Windows.Forms.RichTextBox.Text*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: Text\n  nameWithType: RichTextBox.Text\n- uid: System.Windows.Forms.RichTextBox.TextLength*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: TextLength\n  nameWithType: RichTextBox.TextLength\n- uid: System.Windows.Forms.RichTextBox.UndoActionName*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: UndoActionName\n  nameWithType: RichTextBox.UndoActionName\n- uid: System.Windows.Forms.RichTextBox.WndProc*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: WndProc\n  nameWithType: RichTextBox.WndProc\n- uid: System.Windows.Forms.RichTextBox.ZoomFactor*\n  parent: System.Windows.Forms.RichTextBox\n  isExternal: false\n  name: ZoomFactor\n  nameWithType: RichTextBox.ZoomFactor\n"}