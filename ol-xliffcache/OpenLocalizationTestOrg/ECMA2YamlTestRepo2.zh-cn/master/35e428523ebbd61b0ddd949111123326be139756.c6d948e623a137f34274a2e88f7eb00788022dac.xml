{"nodes":[{"pos":[424,610],"content":"Provides a single helper method (<xref:System.Windows.DependencyPropertyHelper.GetValueSource*>) that reports the property system source for the effective value of a dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a single helper method (&lt;xref:System.Windows.DependencyPropertyHelper.GetValueSource*&gt;) that reports the property system source for the effective value of a dependency property.","pos":[0,186],"source":"Provides a single helper method (<xref:System.Windows.DependencyPropertyHelper.GetValueSource*>) that reports the property system source for the effective value of a dependency property."}]},{"pos":[623,2032],"content":"The[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] property system is fairly complex, and relies on rationalizing the values that potentially come from a variety of inputs, based on an established value determination precedence. Because these sources potentially come from run-time code, from compiled markup, or even from run-time user settings, it can be useful to know exactly which participant in the dependency property value system established the value you obtain when calling <xref:System.Windows.DependencyObject.GetValue%2A> at run-time on that property. If the value came from a different source than you had intended, you might need to adjust some aspect of your application. The value source might be a style, a theme, a local value, an animation, a binding, or a run-time based value such as system settings through themes or system resources. For more information, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md).       Another mechanism that reports on the property in general, rather than a specific instance of the property on an object, is the property metadata. The property metadata is findable by calling <xref:System.Windows.DependencyProperty.GetMetadata%2A> and examining the returned <xref:System.Windows.PropertyMetadata> (or one of several possible derived classes that the returned property metadata is castable to).","needQuote":false,"needEscape":true,"nodes":[{"content":"The<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system is fairly complex, and relies on rationalizing the values that potentially come from a variety of inputs, based on an established value determination precedence.","pos":[0,256],"source":"The[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] property system is fairly complex, and relies on rationalizing the values that potentially come from a variety of inputs, based on an established value determination precedence."},{"content":"Because these sources potentially come from run-time code, from compiled markup, or even from run-time user settings, it can be useful to know exactly which participant in the dependency property value system established the value you obtain when calling &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt; at run-time on that property.","pos":[257,592],"source":" Because these sources potentially come from run-time code, from compiled markup, or even from run-time user settings, it can be useful to know exactly which participant in the dependency property value system established the value you obtain when calling <xref:System.Windows.DependencyObject.GetValue%2A> at run-time on that property."},{"content":"If the value came from a different source than you had intended, you might need to adjust some aspect of your application.","pos":[593,715]},{"content":"The value source might be a style, a theme, a local value, an animation, a binding, or a run-time based value such as system settings through themes or system resources.","pos":[716,885]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Dependency Property Value Precedence<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[886,990],"source":" For more information, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md)."},{"content":"Another mechanism that reports on the property in general, rather than a specific instance of the property on an object, is the property metadata.","pos":[997,1143]},{"content":"The property metadata is findable by calling &lt;xref:System.Windows.DependencyProperty.GetMetadata%2A&gt; and examining the returned &lt;xref:System.Windows.PropertyMetadata&gt; (or one of several possible derived classes that the returned property metadata is castable to).","pos":[1144,1407],"source":" The property metadata is findable by calling <xref:System.Windows.DependencyProperty.GetMetadata%2A> and examining the returned <xref:System.Windows.PropertyMetadata> (or one of several possible derived classes that the returned property metadata is castable to)."}]},{"pos":[2836,3026],"content":"Returns a structure that reports various metadata and property system characteristics of a specified dependency property on a particular <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a structure that reports various metadata and property system characteristics of a specified dependency property on a particular <xref href=\"System.Windows.DependencyObject\"></xref>."},{"pos":[3038,3460],"content":"You should call this method in a context such that late participants in property value determination are able to act on a property. For instance, bindings may not be active on a property unless all participant elements in the element tree are loaded and the asynchronous binding is propagated, and the binding source object is connected. Similarly, resources including all necessary theme dictionaries should be available.","needQuote":true,"needEscape":true,"nodes":[{"content":"You should call this method in a context such that late participants in property value determination are able to act on a property. For instance, bindings may not be active on a property unless all participant elements in the element tree are loaded and the asynchronous binding is propagated, and the binding source object is connected. Similarly, resources including all necessary theme dictionaries should be available.","pos":[0,422],"nodes":[{"content":"You should call this method in a context such that late participants in property value determination are able to act on a property.","pos":[0,131]},{"content":"For instance, bindings may not be active on a property unless all participant elements in the element tree are loaded and the asynchronous binding is propagated, and the binding source object is connected.","pos":[132,337]},{"content":"Similarly, resources including all necessary theme dictionaries should be available.","pos":[338,422]}]}]},{"pos":[3752,3829],"content":"The element that contains the <ph id=\"ph1\">`dependencyProperty`</ph> to report information for.","needQuote":true,"needEscape":true,"source":"The element that contains the `dependencyProperty` to report information for."},{"pos":[3924,3993],"content":"The identifier for the dependency property to report information for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for the dependency property to report information for.","pos":[0,69]}]},{"pos":[4064,4162],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that reports the specific information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.ValueSource\"></xref> structure that reports the specific information."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.DependencyPropertyHelper\n  id: DependencyPropertyHelper\n  children:\n  - System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  langs:\n  - csharp\n  name: DependencyPropertyHelper\n  nameWithType: DependencyPropertyHelper\n  fullName: System.Windows.DependencyPropertyHelper\n  type: Class\n  summary: Provides a single helper method (<xref:System.Windows.DependencyPropertyHelper.GetValueSource*>) that reports the property system source for the effective value of a dependency property.\n  remarks: \"The[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] property system is fairly complex, and relies on rationalizing the values that potentially come from a variety of inputs, based on an established value determination precedence. Because these sources potentially come from run-time code, from compiled markup, or even from run-time user settings, it can be useful to know exactly which participant in the dependency property value system established the value you obtain when calling <xref:System.Windows.DependencyObject.GetValue%2A> at run-time on that property. If the value came from a different source than you had intended, you might need to adjust some aspect of your application. The value source might be a style, a theme, a local value, an animation, a binding, or a run-time based value such as system settings through themes or system resources. For more information, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Another mechanism that reports on the property in general, rather than a specific instance of the property on an object, is the property metadata. The property metadata is findable by calling <xref:System.Windows.DependencyProperty.GetMetadata%2A> and examining the returned <xref:System.Windows.PropertyMetadata> (or one of several possible derived classes that the returned property metadata is castable to).\"\n  syntax:\n    content: public static class DependencyPropertyHelper\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  id: GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyPropertyHelper\n  langs:\n  - csharp\n  name: GetValueSource(DependencyObject,DependencyProperty)\n  nameWithType: DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)\n  fullName: System.Windows.DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns a structure that reports various metadata and property system characteristics of a specified dependency property on a particular <xref href=\"System.Windows.DependencyObject\"></xref>.\n  remarks: You should call this method in a context such that late participants in property value determination are able to act on a property. For instance, bindings may not be active on a property unless all participant elements in the element tree are loaded and the asynchronous binding is propagated, and the binding source object is connected. Similarly, resources including all necessary theme dictionaries should be available.\n  syntax:\n    content: public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);\n    parameters:\n    - id: dependencyObject\n      type: System.Windows.DependencyObject\n      description: The element that contains the `dependencyProperty` to report information for.\n    - id: dependencyProperty\n      type: System.Windows.DependencyProperty\n      description: The identifier for the dependency property to report information for.\n    return:\n      type: System.Windows.ValueSource\n      description: A <xref href=\"System.Windows.ValueSource\"></xref> structure that reports the specific information.\n  overload: System.Windows.DependencyPropertyHelper.GetValueSource*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyPropertyHelper\n  isExternal: false\n  name: GetValueSource(DependencyObject,DependencyProperty)\n  nameWithType: DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)\n  fullName: System.Windows.DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)\n- uid: System.Windows.ValueSource\n  parent: System.Windows\n  isExternal: false\n  name: ValueSource\n  nameWithType: ValueSource\n  fullName: System.Windows.ValueSource\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.DependencyPropertyHelper.GetValueSource*\n  parent: System.Windows.DependencyPropertyHelper\n  isExternal: false\n  name: GetValueSource\n  nameWithType: DependencyPropertyHelper.GetValueSource\n"}