{"nodes":[{"pos":[461,766],"content":"Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] implementations; see Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.","pos":[0,198]},{"content":"Do not use for <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementations; see Remarks.","pos":[199,305],"source":" Do not use for [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] implementations; see Remarks."}]},{"pos":[779,2008],"content":"In [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)], IReceiveMarkupExtension was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing. In [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.       For [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attributes applied. The attribute specifies a callback, which is typically defined as a private member of the type.       In infrastructure implementations of WPF classes, most cases where <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> is applied reference a `ReceiveMarkupExtension` method that previously implemented this interface, but now instead use context through the callback.","needQuote":false,"needEscape":true,"nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph>, IReceiveMarkupExtension was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing.","pos":[0,265],"source":"In [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)], IReceiveMarkupExtension was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing."},{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.","pos":[266,533],"source":" In [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic."},{"content":"For <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt; attributes applied.","pos":[540,846],"source":"       For [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attributes applied."},{"content":"The attribute specifies a callback, which is typically defined as a private member of the type.","pos":[847,942]},{"content":"In infrastructure implementations of WPF classes, most cases where &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt; is applied reference a <ph id=\"ph1\">`ReceiveMarkupExtension`</ph> method that previously implemented this interface, but now instead use context through the callback.","pos":[949,1225],"source":"       In infrastructure implementations of WPF classes, most cases where <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> is applied reference a `ReceiveMarkupExtension` method that previously implemented this interface, but now instead use context through the callback."}]},{"pos":[2956,3206],"content":"Provides the handling for markup extensions that provide property values. Do not use for [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] implementations; see Remarks in <xref href=\"System.Windows.Markup.IReceiveMarkupExtension\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the handling for markup extensions that provide property values.","pos":[0,73]},{"content":"Do not use for <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementations; see Remarks in <bpt id=\"p1\">&lt;xref href=\"System.Windows.Markup.IReceiveMarkupExtension\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[74,250],"source":" Do not use for [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] implementations; see Remarks in <xref href=\"System.Windows.Markup.IReceiveMarkupExtension\"></xref>."}]},{"pos":[3453,3485],"content":"The name of the target property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the target property.","pos":[0,32]}]},{"pos":[3581,3632],"content":"The markup extension instance of the incoming data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The markup extension instance of the incoming data.","pos":[0,51]}]},{"pos":[3714,3834],"content":"Can provide additional services that should be performed when processing the markup extension data for a property value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Can provide additional services that should be performed when processing the markup extension data for a property value.","pos":[0,120]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.IReceiveMarkupExtension\n  id: IReceiveMarkupExtension\n  children:\n  - System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)\n  langs:\n  - csharp\n  name: IReceiveMarkupExtension\n  nameWithType: IReceiveMarkupExtension\n  fullName: System.Windows.Markup.IReceiveMarkupExtension\n  type: Interface\n  summary: Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] implementations; see Remarks.\n  remarks: \"In [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)], IReceiveMarkupExtension was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing. In [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.  \\n  \\n For [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attributes applied. The attribute specifies a callback, which is typically defined as a private member of the type.  \\n  \\n In infrastructure implementations of WPF classes, most cases where <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> is applied reference a `ReceiveMarkupExtension` method that previously implemented this interface, but now instead use context through the callback.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"IReceiveMarkupExtension has been deprecated. This interface is no longer in use.\")]\n\n      public interface IReceiveMarkupExtension\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)\n  id: ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)\n  parent: System.Windows.Markup.IReceiveMarkupExtension\n  langs:\n  - csharp\n  name: ReceiveMarkupExtension(String,MarkupExtension,IServiceProvider)\n  nameWithType: IReceiveMarkupExtension.ReceiveMarkupExtension(String,MarkupExtension,IServiceProvider)\n  fullName: System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(String,MarkupExtension,IServiceProvider)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Provides the handling for markup extensions that provide property values. Do not use for [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] implementations; see Remarks in <xref href=\"System.Windows.Markup.IReceiveMarkupExtension\"></xref>.\n  syntax:\n    content: public void ReceiveMarkupExtension (string property, System.Windows.Markup.MarkupExtension markupExtension, IServiceProvider serviceProvider);\n    parameters:\n    - id: property\n      type: System.String\n      description: The name of the target property.\n    - id: markupExtension\n      type: System.Windows.Markup.MarkupExtension\n      description: The markup extension instance of the incoming data.\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: Can provide additional services that should be performed when processing the markup extension data for a property value.\n  overload: System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)\n  parent: System.Windows.Markup.IReceiveMarkupExtension\n  isExternal: false\n  name: ReceiveMarkupExtension(String,MarkupExtension,IServiceProvider)\n  nameWithType: IReceiveMarkupExtension.ReceiveMarkupExtension(String,MarkupExtension,IServiceProvider)\n  fullName: System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(String,MarkupExtension,IServiceProvider)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Markup.MarkupExtension\n  parent: System.Windows.Markup\n  isExternal: true\n  name: MarkupExtension\n  nameWithType: MarkupExtension\n  fullName: System.Windows.Markup.MarkupExtension\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension*\n  parent: System.Windows.Markup.IReceiveMarkupExtension\n  isExternal: false\n  name: ReceiveMarkupExtension\n  nameWithType: IReceiveMarkupExtension.ReceiveMarkupExtension\n"}