{"nodes":[{"pos":[1631,1765],"content":"Provides properties and methods that support Visual Basic XML literals. This class is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides properties and methods that support Visual Basic XML literals. This class is not intended to be used directly from your code.","pos":[0,134],"nodes":[{"content":"Provides properties and methods that support Visual Basic XML literals.","pos":[0,71]},{"content":"This class is not intended to be used directly from your code.","pos":[72,134]}]}]},{"pos":[2803,2903],"content":"Gets or sets the value of an XML attribute. This property is not intended to be used from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value of an XML attribute. This property is not intended to be used from your code.","pos":[0,100],"nodes":[{"content":"Gets or sets the value of an XML attribute.","pos":[0,43]},{"content":"This property is not intended to be used from your code.","pos":[44,100]}]}]},{"pos":[3207,3297],"content":"A collection of XML elements to get an attribute value from or set an attribute value for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of XML elements to get an attribute value from or set an attribute value for.","pos":[0,90]}]},{"pos":[3366,3435],"content":"The name of the XML attribute to get a value from or set a value for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the XML attribute to get a value from or set a value for.","pos":[0,69]}]},{"pos":[3493,3740],"content":"The value of the XML attribute identified by the <code>name</code> parameter from the first element in the supplied collection of XML elements. If the collection is empty, returns <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the XML attribute identified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter from the first element in the supplied collection of XML elements.","pos":[0,143],"source":"The value of the XML attribute identified by the <code>name</code> parameter from the first element in the supplied collection of XML elements."},{"content":"If the collection is empty, returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[144,247],"source":" If the collection is empty, returns <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>."}]},{"pos":[4473,4573],"content":"Gets or sets the value of an XML attribute. This property is not intended to be used from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value of an XML attribute. This property is not intended to be used from your code.","pos":[0,100],"nodes":[{"content":"Gets or sets the value of an XML attribute.","pos":[0,43]},{"content":"This property is not intended to be used from your code.","pos":[44,100]}]}]},{"pos":[4797,4873],"content":"An XML element to get an attribute value from or set an attribute value for.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML element to get an attribute value from or set an attribute value for.","pos":[0,76]}]},{"pos":[4942,5011],"content":"The name of the XML attribute to get a value from or set a value for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the XML attribute to get a value from or set a value for.","pos":[0,69]}]},{"pos":[5069,5174],"content":"The value of the XML attribute identified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter in the supplied XML element.","needQuote":true,"needEscape":true,"source":"The value of the XML attribute identified by the <code>name</code> parameter in the supplied XML element."},{"pos":[5882,5999],"content":"Creates an XML attribute that has the supplied name and value. This method is not intended to be used from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML attribute that has the supplied name and value. This method is not intended to be used from your code.","pos":[0,117],"nodes":[{"content":"Creates an XML attribute that has the supplied name and value.","pos":[0,62]},{"content":"This method is not intended to be used from your code.","pos":[63,117]}]}]},{"pos":[6208,6248],"content":"The name of the XML attribute to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the XML attribute to create.","pos":[0,40]}]},{"pos":[6310,6529],"content":"The value to assign to the created XML attribute. If `value` is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to assign to the created XML attribute.","pos":[0,49]},{"content":"If <ph id=\"ph1\">`value`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[50,219],"source":" If `value` is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>."}]},{"pos":[6600,6681],"content":"An <xref:System.Xml.Linq.XAttribute> object that has the supplied name and value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.Linq.XAttribute&gt; object that has the supplied name and value.","pos":[0,81],"source":"An <xref:System.Xml.Linq.XAttribute> object that has the supplied name and value."}]},{"pos":[7473,7600],"content":"Creates an XML attribute that has the supplied name and namespace value. This method is not intended to be used from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML attribute that has the supplied name and namespace value. This method is not intended to be used from your code.","pos":[0,127],"nodes":[{"content":"Creates an XML attribute that has the supplied name and namespace value.","pos":[0,72]},{"content":"This method is not intended to be used from your code.","pos":[73,127]}]}]},{"pos":[7835,7875],"content":"The name of the XML attribute to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the XML attribute to create.","pos":[0,40]}]},{"pos":[7947,8006],"content":"The namespace value to assign to the created XML attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace value to assign to the created XML attribute.","pos":[0,59]}]},{"pos":[8077,8168],"content":"An <xref:System.Xml.Linq.XAttribute> object that has the supplied name and namespace value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.Linq.XAttribute&gt; object that has the supplied name and namespace value.","pos":[0,91],"source":"An <xref:System.Xml.Linq.XAttribute> object that has the supplied name and namespace value."}]},{"pos":[9250,9358],"content":"Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.","pos":[0,108],"nodes":[{"content":"Removes XML namespace attributes from an XML element.","pos":[0,53]},{"content":"This method is not intended to be used from your code.","pos":[54,108]}]}]},{"pos":[9718,9791],"content":"The list of XML namespace prefixes for XML elements in the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of XML namespace prefixes for XML elements in the current scope.","pos":[0,73]}]},{"pos":[9872,9937],"content":"The list of XML namespaces for XML elements in the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of XML namespaces for XML elements in the current scope.","pos":[0,65]}]},{"pos":[10050,10114],"content":"The list of namespace attributes to remove from the XML element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of namespace attributes to remove from the XML element.","pos":[0,64]}]},{"pos":[10191,10247],"content":"The XML element to remove XML namespace attributes from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML element to remove XML namespace attributes from.","pos":[0,56]}]},{"pos":[10322,10399],"content":"The supplied XML element with the specified XML namespace attributes removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The supplied XML element with the specified XML namespace attributes removed.","pos":[0,77]}]},{"pos":[11433,11541],"content":"Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.","pos":[0,108],"nodes":[{"content":"Removes XML namespace attributes from an XML element.","pos":[0,53]},{"content":"This method is not intended to be used from your code.","pos":[54,108]}]}]},{"pos":[11853,11926],"content":"The list of XML namespace prefixes for XML elements in the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of XML namespace prefixes for XML elements in the current scope.","pos":[0,73]}]},{"pos":[12007,12072],"content":"The list of XML namespaces for XML elements in the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of XML namespaces for XML elements in the current scope.","pos":[0,65]}]},{"pos":[12185,12249],"content":"The list of namespace attributes to remove from the XML element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of namespace attributes to remove from the XML element.","pos":[0,64]}]},{"pos":[12309,12365],"content":"The XML element to remove XML namespace attributes from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML element to remove XML namespace attributes from.","pos":[0,56]}]},{"pos":[12423,12500],"content":"The supplied XML element with the specified XML namespace attributes removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The supplied XML element with the specified XML namespace attributes removed.","pos":[0,77]}]},{"pos":[13562,13670],"content":"Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.","pos":[0,108],"nodes":[{"content":"Removes XML namespace attributes from an XML element.","pos":[0,53]},{"content":"This method is not intended to be used from your code.","pos":[54,108]}]}]},{"pos":[14016,14089],"content":"The list of XML namespace prefixes for XML elements in the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of XML namespace prefixes for XML elements in the current scope.","pos":[0,73]}]},{"pos":[14170,14235],"content":"The list of XML namespaces for XML elements in the current scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of XML namespaces for XML elements in the current scope.","pos":[0,65]}]},{"pos":[14348,14412],"content":"The list of namespace attributes to remove from the XML element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of namespace attributes to remove from the XML element.","pos":[0,64]}]},{"pos":[14481,14537],"content":"The XML element to remove XML namespace attributes from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML element to remove XML namespace attributes from.","pos":[0,56]}]},{"pos":[14606,14683],"content":"The supplied XML element with the specified XML namespace attributes removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The supplied XML element with the specified XML namespace attributes removed.","pos":[0,77]}]},{"pos":[15439,15537],"content":"Gets or sets the value of an XML element. This property is not intended to be used from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value of an XML element. This property is not intended to be used from your code.","pos":[0,98],"nodes":[{"content":"Gets or sets the value of an XML element.","pos":[0,41]},{"content":"This property is not intended to be used from your code.","pos":[42,98]}]}]},{"pos":[15804,15872],"content":"A collection of XML elements to get a value from or set a value for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of XML elements to get a value from or set a value for.","pos":[0,68]}]},{"pos":[15930,16096],"content":"The value of the first XML element in the supplied collection. If the collection is empty, returns <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the first XML element in the supplied collection.","pos":[0,62]},{"content":"If the collection is empty, returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[63,166],"source":" If the collection is empty, returns <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  id: InternalXmlHelper\n  children:\n  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)\n  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)\n  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)\n  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)\n  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)\n  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  langs:\n  - csharp\n  name: InternalXmlHelper\n  nameWithType: InternalXmlHelper\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  type: Class\n  summary: Provides properties and methods that support Visual Basic XML literals. This class is not intended to be used directly from your code.\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      [System.Diagnostics.DebuggerNonUserCode]\n\n      public sealed class InternalXmlHelper\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  id: AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  langs:\n  - csharp\n  name: AttributeValue(IEnumerable<XElement>,XName)\n  nameWithType: InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Gets or sets the value of an XML attribute. This property is not intended to be used from your code.\n  syntax:\n    content: public static string AttributeValue[System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source, System.Xml.Linq.XName name] { get; set; }\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: A collection of XML elements to get an attribute value from or set an attribute value for.\n    - id: name\n      type: System.Xml.Linq.XName\n      description: The name of the XML attribute to get a value from or set a value for.\n    return:\n      type: System.String\n      description: The value of the XML attribute identified by the <code>name</code> parameter from the first element in the supplied collection of XML elements. If the collection is empty, returns <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)\n  id: AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  langs:\n  - csharp\n  name: AttributeValue(XElement,XName)\n  nameWithType: InternalXmlHelper.AttributeValue(XElement,XName)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(XElement,XName)\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Gets or sets the value of an XML attribute. This property is not intended to be used from your code.\n  syntax:\n    content: public static string AttributeValue[System.Xml.Linq.XElement source, System.Xml.Linq.XName name] { get; set; }\n    parameters:\n    - id: source\n      type: System.Xml.Linq.XElement\n      description: An XML element to get an attribute value from or set an attribute value for.\n    - id: name\n      type: System.Xml.Linq.XName\n      description: The name of the XML attribute to get a value from or set a value for.\n    return:\n      type: System.String\n      description: The value of the XML attribute identified by the <code>name</code> parameter in the supplied XML element.\n  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)\n  id: CreateAttribute(System.Xml.Linq.XName,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  langs:\n  - csharp\n  name: CreateAttribute(XName,Object)\n  nameWithType: InternalXmlHelper.CreateAttribute(XName,Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(XName,Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Creates an XML attribute that has the supplied name and value. This method is not intended to be used from your code.\n  syntax:\n    content: public static System.Xml.Linq.XAttribute CreateAttribute (System.Xml.Linq.XName name, object value);\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: The name of the XML attribute to create.\n    - id: value\n      type: System.Object\n      description: The value to assign to the created XML attribute. If `value` is <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>.\n    return:\n      type: System.Xml.Linq.XAttribute\n      description: An <xref:System.Xml.Linq.XAttribute> object that has the supplied name and value.\n  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)\n  id: CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  langs:\n  - csharp\n  name: CreateNamespaceAttribute(XName,XNamespace)\n  nameWithType: InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Creates an XML attribute that has the supplied name and namespace value. This method is not intended to be used from your code.\n  syntax:\n    content: public static System.Xml.Linq.XAttribute CreateNamespaceAttribute (System.Xml.Linq.XName name, System.Xml.Linq.XNamespace ns);\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: The name of the XML attribute to create.\n    - id: ns\n      type: System.Xml.Linq.XNamespace\n      description: The namespace value to assign to the created XML attribute.\n    return:\n      type: System.Xml.Linq.XAttribute\n      description: An <xref:System.Xml.Linq.XAttribute> object that has the supplied name and namespace value.\n  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)\n  id: RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  langs:\n  - csharp\n  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)\n  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.\n  syntax:\n    content: public static System.Collections.IEnumerable RemoveNamespaceAttributes (string[] inScopePrefixes, System.Xml.Linq.XNamespace[] inScopeNs, System.Collections.Generic.List<System.Xml.Linq.XAttribute> attributes, System.Collections.IEnumerable obj);\n    parameters:\n    - id: inScopePrefixes\n      type: System.String[]\n      description: The list of XML namespace prefixes for XML elements in the current scope.\n    - id: inScopeNs\n      type: System.Xml.Linq.XNamespace[]\n      description: The list of XML namespaces for XML elements in the current scope.\n    - id: attributes\n      type: System.Collections.Generic.List{System.Xml.Linq.XAttribute}\n      description: The list of namespace attributes to remove from the XML element.\n    - id: obj\n      type: System.Collections.IEnumerable\n      description: The XML element to remove XML namespace attributes from.\n    return:\n      type: System.Collections.IEnumerable\n      description: The supplied XML element with the specified XML namespace attributes removed.\n  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)\n  id: RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  langs:\n  - csharp\n  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)\n  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.\n  syntax:\n    content: public static object RemoveNamespaceAttributes (string[] inScopePrefixes, System.Xml.Linq.XNamespace[] inScopeNs, System.Collections.Generic.List<System.Xml.Linq.XAttribute> attributes, object obj);\n    parameters:\n    - id: inScopePrefixes\n      type: System.String[]\n      description: The list of XML namespace prefixes for XML elements in the current scope.\n    - id: inScopeNs\n      type: System.Xml.Linq.XNamespace[]\n      description: The list of XML namespaces for XML elements in the current scope.\n    - id: attributes\n      type: System.Collections.Generic.List{System.Xml.Linq.XAttribute}\n      description: The list of namespace attributes to remove from the XML element.\n    - id: obj\n      type: System.Object\n      description: The XML element to remove XML namespace attributes from.\n    return:\n      type: System.Object\n      description: The supplied XML element with the specified XML namespace attributes removed.\n  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)\n  id: RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  langs:\n  - csharp\n  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)\n  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Removes XML namespace attributes from an XML element. This method is not intended to be used from your code.\n  syntax:\n    content: public static System.Xml.Linq.XElement RemoveNamespaceAttributes (string[] inScopePrefixes, System.Xml.Linq.XNamespace[] inScopeNs, System.Collections.Generic.List<System.Xml.Linq.XAttribute> attributes, System.Xml.Linq.XElement e);\n    parameters:\n    - id: inScopePrefixes\n      type: System.String[]\n      description: The list of XML namespace prefixes for XML elements in the current scope.\n    - id: inScopeNs\n      type: System.Xml.Linq.XNamespace[]\n      description: The list of XML namespaces for XML elements in the current scope.\n    - id: attributes\n      type: System.Collections.Generic.List{System.Xml.Linq.XAttribute}\n      description: The list of namespace attributes to remove from the XML element.\n    - id: e\n      type: System.Xml.Linq.XElement\n      description: The XML element to remove XML namespace attributes from.\n    return:\n      type: System.Xml.Linq.XElement\n      description: The supplied XML element with the specified XML namespace attributes removed.\n  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  id: Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  langs:\n  - csharp\n  name: Value(IEnumerable<XElement>)\n  nameWithType: InternalXmlHelper.Value(IEnumerable<XElement>)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(IEnumerable<XElement>)\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Gets or sets the value of an XML element. This property is not intended to be used from your code.\n  syntax:\n    content: public static string Value[System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source] { get; set; }\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: A collection of XML elements to get a value from or set a value for.\n    return:\n      type: System.String\n      description: The value of the first XML element in the supplied collection. If the collection is empty, returns <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: AttributeValue(IEnumerable<XElement>,XName)\n  nameWithType: InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<XElement>\n  nameWithType: IEnumerable<XElement>\n  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Xml.Linq.XElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.Linq.XElement\n    name: XElement\n    nameWithType: XElement\n    fullName: XElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XName\n  parent: System.Xml.Linq\n  isExternal: true\n  name: XName\n  nameWithType: XName\n  fullName: System.Xml.Linq.XName\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: AttributeValue(XElement,XName)\n  nameWithType: InternalXmlHelper.AttributeValue(XElement,XName)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(XElement,XName)\n- uid: System.Xml.Linq.XElement\n  parent: System.Xml.Linq\n  isExternal: true\n  name: XElement\n  nameWithType: XElement\n  fullName: System.Xml.Linq.XElement\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: CreateAttribute(XName,Object)\n  nameWithType: InternalXmlHelper.CreateAttribute(XName,Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(XName,Object)\n- uid: System.Xml.Linq.XAttribute\n  parent: System.Xml.Linq\n  isExternal: true\n  name: XAttribute\n  nameWithType: XAttribute\n  fullName: System.Xml.Linq.XAttribute\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: CreateNamespaceAttribute(XName,XNamespace)\n  nameWithType: InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)\n- uid: System.Xml.Linq.XNamespace\n  parent: System.Xml.Linq\n  isExternal: true\n  name: XNamespace\n  nameWithType: XNamespace\n  fullName: System.Xml.Linq.XNamespace\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)\n  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.Linq.XNamespace[]\n  parent: System.Xml.Linq\n  isExternal: true\n  name: XNamespace\n  nameWithType: XNamespace\n  fullName: System.Xml.Linq.XNamespace[]\n  spec.csharp:\n  - uid: System.Xml.Linq.XNamespace\n    name: XNamespace\n    nameWithType: XNamespace\n    fullName: XNamespace[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Collections.Generic.List{System.Xml.Linq.XAttribute}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: List<XAttribute>\n  nameWithType: List<XAttribute>\n  fullName: System.Collections.Generic.List<System.Xml.Linq.XAttribute>\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: List<System.Xml.Linq.XAttribute>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.Linq.XAttribute\n    name: XAttribute\n    nameWithType: XAttribute\n    fullName: XAttribute\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)\n  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)\n  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: Value(IEnumerable<XElement>)\n  nameWithType: InternalXmlHelper.Value(IEnumerable<XElement>)\n  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(IEnumerable<XElement>)\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue*\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: AttributeValue\n  nameWithType: InternalXmlHelper.AttributeValue\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute*\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: CreateAttribute\n  nameWithType: InternalXmlHelper.CreateAttribute\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute*\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: CreateNamespaceAttribute\n  nameWithType: InternalXmlHelper.CreateNamespaceAttribute\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: RemoveNamespaceAttributes\n  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes\n- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value*\n  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper\n  isExternal: false\n  name: Value\n  nameWithType: InternalXmlHelper.Value\n"}