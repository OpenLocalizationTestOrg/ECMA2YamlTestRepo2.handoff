{"nodes":[{"pos":[1041,1183],"content":"Represents Digital Rights Management (DRM) information that is stored in an <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.EncryptedPackageEnvelope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents Digital Rights Management (DRM) information that is stored in an <xref href=\"System.IO.Packaging.EncryptedPackageEnvelope\"></xref>."},{"pos":[1195,1433],"content":"RightsManagementInformation provides access to the <xref:System.Security.RightsManagement.PublishLicense> and <xref:System.Security.RightsManagement.UseLicense> data stored in a rights managed protected <xref:System.IO.Packaging.Package>.","needQuote":true,"needEscape":true,"nodes":[{"content":"RightsManagementInformation provides access to the &lt;xref:System.Security.RightsManagement.PublishLicense&gt; and &lt;xref:System.Security.RightsManagement.UseLicense&gt; data stored in a rights managed protected &lt;xref:System.IO.Packaging.Package&gt;.","pos":[0,238],"source":"RightsManagementInformation provides access to the <xref:System.Security.RightsManagement.PublishLicense> and <xref:System.Security.RightsManagement.UseLicense> data stored in a rights managed protected <xref:System.IO.Packaging.Package>."}]},{"pos":[2788,2942],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for accessing the package's encrypted rights management data stream.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> for accessing the package's encrypted rights management data stream."},{"pos":[3861,3982],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for accessing the rights management information.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> for accessing the rights management information."},{"pos":[4655,4802],"content":"Deletes the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a specified user from the encrypted rights management data stream.","needQuote":true,"needEscape":true,"source":"Deletes the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a specified user from the encrypted rights management data stream."},{"pos":[5021,5116],"content":"The user of the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be deleted.","needQuote":true,"needEscape":true,"source":"The user of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> to be deleted."},{"pos":[5696,5870],"content":"Returns a dictionary collection of user and <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> key/value pairs from the encrypted rights management data stream.","needQuote":true,"needEscape":true,"source":"Returns a dictionary collection of user and <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> key/value pairs from the encrypted rights management data stream."},{"pos":[5882,6154],"content":"GetEmbeddedUseLicenses only returns those use licenses that are currently embedded in the package.  It does not include any other use licenses that the application might have acquired separately from a rights management server but that are not yet embedded in the package.","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEmbeddedUseLicenses only returns those use licenses that are currently embedded in the package.  It does not include any other use licenses that the application might have acquired separately from a rights management server but that are not yet embedded in the package.","pos":[0,272],"nodes":[{"content":"GetEmbeddedUseLicenses only returns those use licenses that are currently embedded in the package.","pos":[0,98]},{"content":"It does not include any other use licenses that the application might have acquired separately from a rights management server but that are not yet embedded in the package.","pos":[100,272]}]}]},{"pos":[6532,6697],"content":"A collection of user and <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> key/value pairs that are contained in the rights managed protected package.","needQuote":true,"needEscape":true,"source":"A collection of user and <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> key/value pairs that are contained in the rights managed protected package."},{"pos":[7263,7402],"content":"Returns the embedded <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the encrypted rights management data stream.","needQuote":true,"needEscape":true,"source":"Returns the embedded <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> from the encrypted rights management data stream."},{"pos":[7992,8243],"content":"The embedded <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if the package does not contain a <bpt id=\"p3\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The embedded <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the package does not contain a <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>."},{"pos":[8442,8544],"content":"The rights management information in this package cannot be read by the current version of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rights management information in this package cannot be read by the current version of this class.","pos":[0,102]}]},{"pos":[9114,9264],"content":"Returns a specified user's embedded <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the encrypted rights management data stream.","needQuote":true,"needEscape":true,"source":"Returns a specified user's embedded <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> from the encrypted rights management data stream."},{"pos":[9894,10000],"content":"The user or user group to return the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for.","needQuote":true,"needEscape":true,"source":"The user or user group to return the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for."},{"pos":[10088,10389],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified user; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if the package does not contain a <bpt id=\"p3\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> that matches the given <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph1\">userKey</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for the specified user; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the package does not contain a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> that matches the given <code>userKey</code>."},{"pos":[10582,10681],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">userKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>userKey</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10786,10888],"content":"The rights management information in this package cannot be read by the current version of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rights management information in this package cannot be read by the current version of this class.","pos":[0,102]}]},{"pos":[11493,11623],"content":"Saves a given <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the encrypted rights management data stream.","needQuote":true,"needEscape":true,"source":"Saves a given <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> to the encrypted rights management data stream."},{"pos":[11635,11951],"content":"Each <xref:System.IO.Packaging.EncryptedPackageEnvelope> can contain only one <xref:System.Security.RightsManagement.PublishLicense>.  Each call to SavePublishLicense will overwrite any prior <xref:System.Security.RightsManagement.PublishLicense> contained in the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Each <xref:System.IO.Packaging.EncryptedPackageEnvelope> can contain only one <xref:System.Security.RightsManagement.PublishLicense>.  Each call to SavePublishLicense will overwrite any prior <xref:System.Security.RightsManagement.PublishLicense> contained in the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.","pos":[0,316],"nodes":[{"content":"Each &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; can contain only one &lt;xref:System.Security.RightsManagement.PublishLicense&gt;.","pos":[0,133],"source":"Each <xref:System.IO.Packaging.EncryptedPackageEnvelope> can contain only one <xref:System.Security.RightsManagement.PublishLicense>."},{"content":"Each call to SavePublishLicense will overwrite any prior &lt;xref:System.Security.RightsManagement.PublishLicense&gt; contained in the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;.","pos":[135,316],"source":"  Each call to SavePublishLicense will overwrite any prior <xref:System.Security.RightsManagement.PublishLicense> contained in the <xref:System.IO.Packaging.EncryptedPackageEnvelope>."}]}]},{"pos":[12192,12246],"content":"The publish license to store and embed in the package.","needQuote":true,"needEscape":true,"nodes":[{"content":"The publish license to store and embed in the package.","pos":[0,54]}]},{"pos":[12443,12549],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">publishLicense</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>publishLicense</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12654,12756],"content":"The rights management information in this package cannot be read by the current version of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rights management information in this package cannot be read by the current version of this class.","pos":[0,102]}]},{"pos":[13447,13594],"content":"Saves a given <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a specified user to the encrypted rights management data stream.","needQuote":true,"needEscape":true,"source":"Saves a given <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a specified user to the encrypted rights management data stream."},{"pos":[13607,14471],"content":"After the <xref:System.Security.RightsManagement.UseLicense> for the specified user has been saved, it can be retrieved through the <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A> method and from the collection returned by <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A>.       A <xref:System.IO.Packaging.Package> can store the <xref:System.Security.RightsManagement.UseLicense> rights information for multiple content users.  Each ContentUser can have at most one <xref:System.Security.RightsManagement.UseLicense>.  If SaveUseLicense is called to store a new <xref:System.Security.RightsManagement.UseLicense> for a <xref:System.Security.RightsManagement.ContentUser> that already has a <xref:System.Security.RightsManagement.UseLicense>, the previous license will be overwritten with the new license.","needQuote":false,"needEscape":true,"nodes":[{"content":"After the <xref:System.Security.RightsManagement.UseLicense> for the specified user has been saved, it can be retrieved through the <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A> method and from the collection returned by <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A>.       A <xref:System.IO.Packaging.Package> can store the <xref:System.Security.RightsManagement.UseLicense> rights information for multiple content users.  Each ContentUser can have at most one <xref:System.Security.RightsManagement.UseLicense>.  If SaveUseLicense is called to store a new <xref:System.Security.RightsManagement.UseLicense> for a <xref:System.Security.RightsManagement.ContentUser> that already has a <xref:System.Security.RightsManagement.UseLicense>, the previous license will be overwritten with the new license.","pos":[0,862],"nodes":[{"content":"After the &lt;xref:System.Security.RightsManagement.UseLicense&gt; for the specified user has been saved, it can be retrieved through the &lt;xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A&gt; method and from the collection returned by &lt;xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A&gt;.","pos":[0,329],"source":"After the <xref:System.Security.RightsManagement.UseLicense> for the specified user has been saved, it can be retrieved through the <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A> method and from the collection returned by <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A>."},{"content":"A &lt;xref:System.IO.Packaging.Package&gt; can store the &lt;xref:System.Security.RightsManagement.UseLicense&gt; rights information for multiple content users.","pos":[336,484],"source":"       A <xref:System.IO.Packaging.Package> can store the <xref:System.Security.RightsManagement.UseLicense> rights information for multiple content users."},{"content":"Each ContentUser can have at most one &lt;xref:System.Security.RightsManagement.UseLicense&gt;.","pos":[486,575],"source":"  Each ContentUser can have at most one <xref:System.Security.RightsManagement.UseLicense>."},{"content":"If SaveUseLicense is called to store a new &lt;xref:System.Security.RightsManagement.UseLicense&gt; for a &lt;xref:System.Security.RightsManagement.ContentUser&gt; that already has a &lt;xref:System.Security.RightsManagement.UseLicense&gt;, the previous license will be overwritten with the new license.","pos":[577,862],"source":"  If SaveUseLicense is called to store a new <xref:System.Security.RightsManagement.UseLicense> for a <xref:System.Security.RightsManagement.ContentUser> that already has a <xref:System.Security.RightsManagement.UseLicense>, the previous license will be overwritten with the new license."}]}]},{"pos":[15108,15189],"content":"The user of the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The user of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>."},{"pos":[15286,15336],"content":"The use license to store and embed in the package.","needQuote":true,"needEscape":true,"nodes":[{"content":"The use license to store and embed in the package.","pos":[0,50]}]},{"pos":[15529,15662],"content":"Either the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">userKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">useLicense</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Either the <code>userKey</code> or <code>useLicense</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15767,15869],"content":"The rights management information in this package cannot be read by the current version of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rights management information in this package cannot be read by the current version of this class.","pos":[0,102]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Packaging.RightsManagementInformation\n  id: RightsManagementInformation\n  children:\n  - System.IO.Packaging.RightsManagementInformation.CryptoProvider\n  - System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)\n  - System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses\n  - System.IO.Packaging.RightsManagementInformation.LoadPublishLicense\n  - System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)\n  - System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)\n  - System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)\n  langs:\n  - csharp\n  name: RightsManagementInformation\n  nameWithType: RightsManagementInformation\n  fullName: System.IO.Packaging.RightsManagementInformation\n  type: Class\n  summary: Represents Digital Rights Management (DRM) information that is stored in an <xref href=\"System.IO.Packaging.EncryptedPackageEnvelope\"></xref>.\n  remarks: RightsManagementInformation provides access to the <xref:System.Security.RightsManagement.PublishLicense> and <xref:System.Security.RightsManagement.UseLicense> data stored in a rights managed protected <xref:System.IO.Packaging.Package>.\n  example:\n  - \"The following example shows how to initialize a RightsManagementInformation object for encryption.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]  \\n  \\n The following example shows how to initialize a RightsManagementInformation object for decryption.  \\n  \\n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewopenpkg)]\\n [!code-cs[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewopenpkg)]\"\n  syntax:\n    content: public class RightsManagementInformation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.RightsManagementInformation.CryptoProvider\n  id: CryptoProvider\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: CryptoProvider\n  nameWithType: RightsManagementInformation.CryptoProvider\n  fullName: System.IO.Packaging.RightsManagementInformation.CryptoProvider\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets or sets the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> for accessing the package's encrypted rights management data stream.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the CryptoProvider property.  \\n  \\n [!code-vb[RightsManagedPackageViewer#RmPkgViewBind](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewbind)]\\n [!code-cs[RightsManagedPackageViewer#RmPkgViewBind](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewbind)]  \\n  \\n The following example shows how to access the CryptoProvider property.  \\n  \\n [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewdecrypt)]\\n [!code-cs[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewdecrypt)]\"\n  syntax:\n    content: public System.Security.RightsManagement.CryptoProvider CryptoProvider { get; set; }\n    return:\n      type: System.Security.RightsManagement.CryptoProvider\n      description: The <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> for accessing the rights management information.\n  overload: System.IO.Packaging.RightsManagementInformation.CryptoProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)\n  id: DeleteUseLicense(System.Security.RightsManagement.ContentUser)\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: DeleteUseLicense(ContentUser)\n  nameWithType: RightsManagementInformation.DeleteUseLicense(ContentUser)\n  fullName: System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(ContentUser)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Deletes the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a specified user from the encrypted rights management data stream.\n  syntax:\n    content: public void DeleteUseLicense (System.Security.RightsManagement.ContentUser userKey);\n    parameters:\n    - id: userKey\n      type: System.Security.RightsManagement.ContentUser\n      description: The user of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> to be deleted.\n  overload: System.IO.Packaging.RightsManagementInformation.DeleteUseLicense*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses\n  id: GetEmbeddedUseLicenses\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: GetEmbeddedUseLicenses()\n  nameWithType: RightsManagementInformation.GetEmbeddedUseLicenses()\n  fullName: System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Returns a dictionary collection of user and <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> key/value pairs from the encrypted rights management data stream.\n  remarks: GetEmbeddedUseLicenses only returns those use licenses that are currently embedded in the package.  It does not include any other use licenses that the application might have acquired separately from a rights management server but that are not yet embedded in the package.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense> GetEmbeddedUseLicenses ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IDictionary{System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense}\n      description: A collection of user and <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> key/value pairs that are contained in the rights managed protected package.\n  overload: System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.RightsManagementInformation.LoadPublishLicense\n  id: LoadPublishLicense\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: LoadPublishLicense()\n  nameWithType: RightsManagementInformation.LoadPublishLicense()\n  fullName: System.IO.Packaging.RightsManagementInformation.LoadPublishLicense()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Returns the embedded <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> from the encrypted rights management data stream.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the LoadPublishLicense method.  \\n  \\n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewopenpkg)]\\n [!code-cs[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewopenpkg)]\"\n  syntax:\n    content: public System.Security.RightsManagement.PublishLicense LoadPublishLicense ();\n    parameters: []\n    return:\n      type: System.Security.RightsManagement.PublishLicense\n      description: The embedded <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the package does not contain a <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>.\n  overload: System.IO.Packaging.RightsManagementInformation.LoadPublishLicense*\n  exceptions:\n  - type: System.IO.FileFormatException\n    commentId: T:System.IO.FileFormatException\n    description: The rights management information in this package cannot be read by the current version of this class.\n  platform:\n  - net462\n- uid: System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)\n  id: LoadUseLicense(System.Security.RightsManagement.ContentUser)\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: LoadUseLicense(ContentUser)\n  nameWithType: RightsManagementInformation.LoadUseLicense(ContentUser)\n  fullName: System.IO.Packaging.RightsManagementInformation.LoadUseLicense(ContentUser)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Returns a specified user's embedded <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> from the encrypted rights management data stream.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the LoadUseLicense method.  \\n  \\n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewopenpkg)]\\n [!code-cs[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewopenpkg)]\"\n  syntax:\n    content: public System.Security.RightsManagement.UseLicense LoadUseLicense (System.Security.RightsManagement.ContentUser userKey);\n    parameters:\n    - id: userKey\n      type: System.Security.RightsManagement.ContentUser\n      description: The user or user group to return the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for.\n    return:\n      type: System.Security.RightsManagement.UseLicense\n      description: The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for the specified user; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if the package does not contain a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> that matches the given <code>userKey</code>.\n  overload: System.IO.Packaging.RightsManagementInformation.LoadUseLicense*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>userKey</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileFormatException\n    commentId: T:System.IO.FileFormatException\n    description: The rights management information in this package cannot be read by the current version of this class.\n  platform:\n  - net462\n- uid: System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)\n  id: SavePublishLicense(System.Security.RightsManagement.PublishLicense)\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: SavePublishLicense(PublishLicense)\n  nameWithType: RightsManagementInformation.SavePublishLicense(PublishLicense)\n  fullName: System.IO.Packaging.RightsManagementInformation.SavePublishLicense(PublishLicense)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Saves a given <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> to the encrypted rights management data stream.\n  remarks: Each <xref:System.IO.Packaging.EncryptedPackageEnvelope> can contain only one <xref:System.Security.RightsManagement.PublishLicense>.  Each call to SavePublishLicense will overwrite any prior <xref:System.Security.RightsManagement.PublishLicense> contained in the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.\n  syntax:\n    content: public void SavePublishLicense (System.Security.RightsManagement.PublishLicense publishLicense);\n    parameters:\n    - id: publishLicense\n      type: System.Security.RightsManagement.PublishLicense\n      description: The publish license to store and embed in the package.\n  overload: System.IO.Packaging.RightsManagementInformation.SavePublishLicense*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>publishLicense</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileFormatException\n    commentId: T:System.IO.FileFormatException\n    description: The rights management information in this package cannot be read by the current version of this class.\n  platform:\n  - net462\n- uid: System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)\n  id: SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: SaveUseLicense(ContentUser,UseLicense)\n  nameWithType: RightsManagementInformation.SaveUseLicense(ContentUser,UseLicense)\n  fullName: System.IO.Packaging.RightsManagementInformation.SaveUseLicense(ContentUser,UseLicense)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Saves a given <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a specified user to the encrypted rights management data stream.\n  remarks: \"After the <xref:System.Security.RightsManagement.UseLicense> for the specified user has been saved, it can be retrieved through the <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A> method and from the collection returned by <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A>.  \\n  \\n A <xref:System.IO.Packaging.Package> can store the <xref:System.Security.RightsManagement.UseLicense> rights information for multiple content users.  Each ContentUser can have at most one <xref:System.Security.RightsManagement.UseLicense>.  If SaveUseLicense is called to store a new <xref:System.Security.RightsManagement.UseLicense> for a <xref:System.Security.RightsManagement.ContentUser> that already has a <xref:System.Security.RightsManagement.UseLicense>, the previous license will be overwritten with the new license.\"\n  example:\n  - \"The following example shows how to use of the SaveUseLicense method.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]\"\n  syntax:\n    content: public void SaveUseLicense (System.Security.RightsManagement.ContentUser userKey, System.Security.RightsManagement.UseLicense useLicense);\n    parameters:\n    - id: userKey\n      type: System.Security.RightsManagement.ContentUser\n      description: The user of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>.\n    - id: useLicense\n      type: System.Security.RightsManagement.UseLicense\n      description: The use license to store and embed in the package.\n  overload: System.IO.Packaging.RightsManagementInformation.SaveUseLicense*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either the <code>userKey</code> or <code>useLicense</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileFormatException\n    commentId: T:System.IO.FileFormatException\n    description: The rights management information in this package cannot be read by the current version of this class.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IO.FileFormatException\n  parent: System.IO\n  isExternal: false\n  name: FileFormatException\n  nameWithType: FileFormatException\n  fullName: System.IO.FileFormatException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IO.Packaging.RightsManagementInformation.CryptoProvider\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: CryptoProvider\n  nameWithType: RightsManagementInformation.CryptoProvider\n  fullName: System.IO.Packaging.RightsManagementInformation.CryptoProvider\n- uid: System.Security.RightsManagement.CryptoProvider\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: CryptoProvider\n  nameWithType: CryptoProvider\n  fullName: System.Security.RightsManagement.CryptoProvider\n- uid: System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: DeleteUseLicense(ContentUser)\n  nameWithType: RightsManagementInformation.DeleteUseLicense(ContentUser)\n  fullName: System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(ContentUser)\n- uid: System.Security.RightsManagement.ContentUser\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: ContentUser\n  nameWithType: ContentUser\n  fullName: System.Security.RightsManagement.ContentUser\n- uid: System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: GetEmbeddedUseLicenses()\n  nameWithType: RightsManagementInformation.GetEmbeddedUseLicenses()\n  fullName: System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses()\n- uid: System.Collections.Generic.IDictionary{System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<ContentUser,UseLicense>\n  nameWithType: IDictionary<ContentUser,UseLicense>\n  fullName: System.Collections.Generic.IDictionary<System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.RightsManagement.ContentUser\n    name: ContentUser\n    nameWithType: ContentUser\n    fullName: ContentUser\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Security.RightsManagement.UseLicense\n    name: UseLicense\n    nameWithType: UseLicense\n    fullName: UseLicense\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.Packaging.RightsManagementInformation.LoadPublishLicense\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: LoadPublishLicense()\n  nameWithType: RightsManagementInformation.LoadPublishLicense()\n  fullName: System.IO.Packaging.RightsManagementInformation.LoadPublishLicense()\n- uid: System.Security.RightsManagement.PublishLicense\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: PublishLicense\n  nameWithType: PublishLicense\n  fullName: System.Security.RightsManagement.PublishLicense\n- uid: System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: LoadUseLicense(ContentUser)\n  nameWithType: RightsManagementInformation.LoadUseLicense(ContentUser)\n  fullName: System.IO.Packaging.RightsManagementInformation.LoadUseLicense(ContentUser)\n- uid: System.Security.RightsManagement.UseLicense\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: UseLicense\n  nameWithType: UseLicense\n  fullName: System.Security.RightsManagement.UseLicense\n- uid: System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: SavePublishLicense(PublishLicense)\n  nameWithType: RightsManagementInformation.SavePublishLicense(PublishLicense)\n  fullName: System.IO.Packaging.RightsManagementInformation.SavePublishLicense(PublishLicense)\n- uid: System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: SaveUseLicense(ContentUser,UseLicense)\n  nameWithType: RightsManagementInformation.SaveUseLicense(ContentUser,UseLicense)\n  fullName: System.IO.Packaging.RightsManagementInformation.SaveUseLicense(ContentUser,UseLicense)\n- uid: System.IO.Packaging.RightsManagementInformation.CryptoProvider*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: CryptoProvider\n  nameWithType: RightsManagementInformation.CryptoProvider\n- uid: System.IO.Packaging.RightsManagementInformation.DeleteUseLicense*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: DeleteUseLicense\n  nameWithType: RightsManagementInformation.DeleteUseLicense\n- uid: System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: GetEmbeddedUseLicenses\n  nameWithType: RightsManagementInformation.GetEmbeddedUseLicenses\n- uid: System.IO.Packaging.RightsManagementInformation.LoadPublishLicense*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: LoadPublishLicense\n  nameWithType: RightsManagementInformation.LoadPublishLicense\n- uid: System.IO.Packaging.RightsManagementInformation.LoadUseLicense*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: LoadUseLicense\n  nameWithType: RightsManagementInformation.LoadUseLicense\n- uid: System.IO.Packaging.RightsManagementInformation.SavePublishLicense*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: SavePublishLicense\n  nameWithType: RightsManagementInformation.SavePublishLicense\n- uid: System.IO.Packaging.RightsManagementInformation.SaveUseLicense*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: SaveUseLicense\n  nameWithType: RightsManagementInformation.SaveUseLicense\n"}