{"nodes":[{"pos":[436,555],"content":"Defines objects used to fill the interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines objects used to fill the interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.","pos":[0,119]}]},{"pos":[567,818],"content":"This is an abstract base class and cannot be instantiated. To create a brush object, use classes derived from Brush, such as <xref:System.Drawing.SolidBrush>, <xref:System.Drawing.TextureBrush>, and <xref:System.Drawing.Drawing2D.LinearGradientBrush>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This is an abstract base class and cannot be instantiated. To create a brush object, use classes derived from Brush, such as <xref:System.Drawing.SolidBrush>, <xref:System.Drawing.TextureBrush>, and <xref:System.Drawing.Drawing2D.LinearGradientBrush>.","pos":[0,251],"nodes":[{"content":"This is an abstract base class and cannot be instantiated.","pos":[0,58]},{"content":"To create a brush object, use classes derived from Brush, such as &lt;xref:System.Drawing.SolidBrush&gt;, &lt;xref:System.Drawing.TextureBrush&gt;, and &lt;xref:System.Drawing.Drawing2D.LinearGradientBrush&gt;.","pos":[59,251],"source":" To create a brush object, use classes derived from Brush, such as <xref:System.Drawing.SolidBrush>, <xref:System.Drawing.TextureBrush>, and <xref:System.Drawing.Drawing2D.LinearGradientBrush>."}]}]},{"pos":[1584,1666],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Brush\"></xref> class."},{"pos":[2080,2188],"content":"When overridden in a derived class, creates an exact copy of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, creates an exact copy of this <xref href=\"System.Drawing.Brush\"></xref>."},{"pos":[2321,2396],"content":"The new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that this method creates.","needQuote":true,"needEscape":true,"source":"The new <xref href=\"System.Drawing.Brush\"></xref> that this method creates."},{"pos":[2758,2843],"content":"Releases all resources used by this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Releases all resources used by this <xref href=\"System.Drawing.Brush\"></xref> object."},{"pos":[2856,3770],"content":"Calling Dispose allows the resources used by this <xref:System.Drawing.Brush> object to be reallocated for other purposes.       Call Dispose when you are finished using the <xref:System.Drawing.Brush>. The Dispose method leaves the <xref:System.Drawing.Brush> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Drawing.Brush> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Brush> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Drawing.Brush>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Brush> object's `Finalize` method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Calling Dispose allows the resources used by this &lt;xref:System.Drawing.Brush&gt; object to be reallocated for other purposes.","pos":[0,122],"source":"Calling Dispose allows the resources used by this <xref:System.Drawing.Brush> object to be reallocated for other purposes."},{"content":"Call Dispose when you are finished using the &lt;xref:System.Drawing.Brush&gt;.","pos":[129,202],"source":"       Call Dispose when you are finished using the <xref:System.Drawing.Brush>."},{"content":"The Dispose method leaves the &lt;xref:System.Drawing.Brush&gt; in an unusable state.","pos":[203,282],"source":" The Dispose method leaves the <xref:System.Drawing.Brush> in an unusable state."},{"content":"After calling Dispose, you must release all references to the &lt;xref:System.Drawing.Brush&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Drawing.Brush&gt; was occupying.","pos":[283,472],"source":" After calling Dispose, you must release all references to the <xref:System.Drawing.Brush> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Brush> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[473,647],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.Drawing.Brush&gt;.","pos":[653,760],"source":"      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Drawing.Brush>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Drawing.Brush&gt; object's <ph id=\"ph1\">`Finalize`</ph> method.","pos":[761,909],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Brush> object's `Finalize` method."}]},{"pos":[4254,4387],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.Drawing.Brush\"></xref> and optionally releases the managed resources."},{"pos":[4400,4923],"content":"This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Drawing.Brush> references. This method invokes the `Dispose()` method of each referenced object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[0,102],"source":"This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[103,208],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id=\"ph1\">`Dispose`</ph> with <ph id=\"ph2\">`disposing`</ph> set to <ph id=\"ph3\">`false`</ph>.","pos":[209,292],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.Drawing.Brush&gt; references.","pos":[299,451],"source":"       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Drawing.Brush> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[452,521],"source":" This method invokes the `Dispose()` method of each referenced object."}]},{"pos":[5079,5288],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[5657,5781],"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","pos":[0,124]}]},{"pos":[6282,6399],"content":"In a derived class, sets a reference to a <ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> brush object.","needQuote":true,"needEscape":true,"source":"In a derived class, sets a reference to a [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] brush object."},{"pos":[6546,6638],"content":"A pointer to the <ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> brush object.","needQuote":true,"needEscape":true,"source":"A pointer to the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] brush object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Brush\n  id: Brush\n  children:\n  - System.Drawing.Brush.#ctor\n  - System.Drawing.Brush.Clone\n  - System.Drawing.Brush.Dispose\n  - System.Drawing.Brush.Dispose(System.Boolean)\n  - System.Drawing.Brush.Finalize\n  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)\n  langs:\n  - csharp\n  name: Brush\n  nameWithType: Brush\n  fullName: System.Drawing.Brush\n  type: Class\n  summary: Defines objects used to fill the interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.\n  remarks: This is an abstract base class and cannot be instantiated. To create a brush object, use classes derived from Brush, such as <xref:System.Drawing.SolidBrush>, <xref:System.Drawing.TextureBrush>, and <xref:System.Drawing.Drawing2D.LinearGradientBrush>.\n  syntax:\n    content: 'public abstract class Brush : MarshalByRefObject, ICloneable, IDisposable'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements:\n  - System.ICloneable\n  - System.IDisposable\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Drawing.Brush.#ctor\n  id: '#ctor'\n  parent: System.Drawing.Brush\n  langs:\n  - csharp\n  name: Brush()\n  nameWithType: Brush.Brush()\n  fullName: System.Drawing.Brush.Brush()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Brush\"></xref> class.\n  syntax:\n    content: protected Brush ();\n    parameters: []\n  overload: System.Drawing.Brush.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Brush.Clone\n  id: Clone\n  parent: System.Drawing.Brush\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Brush.Clone()\n  fullName: System.Drawing.Brush.Clone()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: When overridden in a derived class, creates an exact copy of this <xref href=\"System.Drawing.Brush\"></xref>.\n  syntax:\n    content: public abstract object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The new <xref href=\"System.Drawing.Brush\"></xref> that this method creates.\n  overload: System.Drawing.Brush.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Brush.Dispose\n  id: Dispose\n  parent: System.Drawing.Brush\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: Brush.Dispose()\n  fullName: System.Drawing.Brush.Dispose()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Releases all resources used by this <xref href=\"System.Drawing.Brush\"></xref> object.\n  remarks: \"Calling Dispose allows the resources used by this <xref:System.Drawing.Brush> object to be reallocated for other purposes.  \\n  \\n Call Dispose when you are finished using the <xref:System.Drawing.Brush>. The Dispose method leaves the <xref:System.Drawing.Brush> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Drawing.Brush> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Brush> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  Always call Dispose before you release your last reference to the <xref:System.Drawing.Brush>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Brush> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Drawing.Brush.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Brush.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Drawing.Brush\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: Brush.Dispose(Boolean)\n  fullName: System.Drawing.Brush.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Drawing.Brush\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Drawing.Brush> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.Drawing.Brush.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Brush.Finalize\n  id: Finalize\n  parent: System.Drawing.Brush\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: Brush.Finalize()\n  fullName: System.Drawing.Brush.Finalize()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.\n  syntax:\n    content: ~Brush ();\n    parameters: []\n  overload: System.Drawing.Brush.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Brush.SetNativeBrush(System.IntPtr)\n  id: SetNativeBrush(System.IntPtr)\n  parent: System.Drawing.Brush\n  langs:\n  - csharp\n  name: SetNativeBrush(IntPtr)\n  nameWithType: Brush.SetNativeBrush(IntPtr)\n  fullName: System.Drawing.Brush.SetNativeBrush(IntPtr)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: In a derived class, sets a reference to a [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] brush object.\n  syntax:\n    content: protected void SetNativeBrush (IntPtr brush);\n    parameters:\n    - id: brush\n      type: System.IntPtr\n      description: A pointer to the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] brush object.\n  overload: System.Drawing.Brush.SetNativeBrush*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.Drawing.Brush.#ctor\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Brush()\n  nameWithType: Brush.Brush()\n  fullName: System.Drawing.Brush.Brush()\n- uid: System.Drawing.Brush.Clone\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Clone()\n  nameWithType: Brush.Clone()\n  fullName: System.Drawing.Brush.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.Brush.Dispose\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Dispose()\n  nameWithType: Brush.Dispose()\n  fullName: System.Drawing.Brush.Dispose()\n- uid: System.Drawing.Brush.Dispose(System.Boolean)\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Brush.Dispose(Boolean)\n  fullName: System.Drawing.Brush.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Drawing.Brush.Finalize\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Finalize()\n  nameWithType: Brush.Finalize()\n  fullName: System.Drawing.Brush.Finalize()\n- uid: System.Drawing.Brush.SetNativeBrush(System.IntPtr)\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: SetNativeBrush(IntPtr)\n  nameWithType: Brush.SetNativeBrush(IntPtr)\n  fullName: System.Drawing.Brush.SetNativeBrush(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Drawing.Brush.#ctor*\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Brush\n  nameWithType: Brush.Brush\n- uid: System.Drawing.Brush.Clone*\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Clone\n  nameWithType: Brush.Clone\n- uid: System.Drawing.Brush.Dispose*\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Dispose\n  nameWithType: Brush.Dispose\n- uid: System.Drawing.Brush.Finalize*\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: Finalize\n  nameWithType: Brush.Finalize\n- uid: System.Drawing.Brush.SetNativeBrush*\n  parent: System.Drawing.Brush\n  isExternal: false\n  name: SetNativeBrush\n  nameWithType: Brush.SetNativeBrush\n"}