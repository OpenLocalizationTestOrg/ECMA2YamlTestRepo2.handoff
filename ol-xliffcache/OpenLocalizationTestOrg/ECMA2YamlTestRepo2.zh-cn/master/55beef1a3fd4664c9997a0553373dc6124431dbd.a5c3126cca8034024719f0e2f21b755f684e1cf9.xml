{"nodes":[{"pos":[2889,3049],"content":"Serves as the base class that defines the methods, properties and events common to all controls in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> namespace.","needQuote":true,"needEscape":true,"source":"Serves as the base class that defines the methods, properties and events common to all controls in the <xref href=\"System.Web.UI.WebControls\"></xref> namespace."},{"pos":[3062,6023],"content":"The WebControl class provides the properties, methods, and events that are common to all Web server controls. You can control the appearance and behavior of a Web server control by setting properties defined in this class. For example, the background color and font color of a control are controlled by using the <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> and <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> properties, respectively. On controls that can display a border, you can control the border width, the border style, and the border color by setting the <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>, <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>, and <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> properties. The size of a Web server control can be specified by using the <xref:System.Web.UI.WebControls.WebControl.Height%2A> and <xref:System.Web.UI.WebControls.WebControl.Width%2A> properties.       The behavior of the control can be specified by setting certain properties. You can enable and disable a control by setting the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property. The place of the control in the tab order is controlled by setting the <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> property. You can specify a ToolTip for the control by setting the <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> property.      > [!NOTE] >  Not all controls support every property defined in this class. For specific information about whether a property is supported, see the documentation for the specific control.      > [!NOTE] >  Some properties in this class render differently, depending on the browser. Some properties do not render at all, while others render, but have no effect. The <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object determines the way in which a Web server control renders. For browsers that support HTML 4.0, the <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> property will contain a regular <xref:System.Web.HttpBrowserCapabilities> object, and most properties will be rendered using HTML 4.0 style attributes. Browsers that are not known to support HTML 4.0 will use the <xref:System.Web.UI.Html32TextWriter> object. This will automatically map the style attributes to any relevant HTML 3.2 tag attributes. In some cases, such as with the <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> property, the style attributes will be converted into additional tags, such as `<font>` tags. In some cases, there will be no mapping performed. For specific information about how a property is rendered in different browsers, see the documentation for the specific property.       For a list of initial property values for an instance of WebControl, see the <xref:System.Web.UI.WebControls.WebControl.%23ctor%2A> constructor.","needQuote":false,"needEscape":true,"nodes":[{"content":"The WebControl class provides the properties, methods, and events that are common to all Web server controls.","pos":[0,109]},{"content":"You can control the appearance and behavior of a Web server control by setting properties defined in this class.","pos":[110,222]},{"content":"For example, the background color and font color of a control are controlled by using the &lt;xref:System.Web.UI.WebControls.WebControl.BackColor%2A&gt; and &lt;xref:System.Web.UI.WebControls.WebControl.ForeColor%2A&gt; properties, respectively.","pos":[223,456],"source":" For example, the background color and font color of a control are controlled by using the <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> and <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> properties, respectively."},{"content":"On controls that can display a border, you can control the border width, the border style, and the border color by setting the &lt;xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A&gt;, &lt;xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A&gt;, and &lt;xref:System.Web.UI.WebControls.WebControl.BorderColor%2A&gt; properties.","pos":[457,778],"source":" On controls that can display a border, you can control the border width, the border style, and the border color by setting the <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>, <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>, and <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> properties."},{"content":"The size of a Web server control can be specified by using the &lt;xref:System.Web.UI.WebControls.WebControl.Height%2A&gt; and &lt;xref:System.Web.UI.WebControls.WebControl.Width%2A&gt; properties.","pos":[779,964],"source":" The size of a Web server control can be specified by using the <xref:System.Web.UI.WebControls.WebControl.Height%2A> and <xref:System.Web.UI.WebControls.WebControl.Width%2A> properties."},{"content":"The behavior of the control can be specified by setting certain properties.","pos":[971,1046]},{"content":"You can enable and disable a control by setting the &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt; property.","pos":[1047,1163],"source":" You can enable and disable a control by setting the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property."},{"content":"The place of the control in the tab order is controlled by setting the &lt;xref:System.Web.UI.WebControls.WebControl.TabIndex%2A&gt; property.","pos":[1164,1300],"source":" The place of the control in the tab order is controlled by setting the <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> property."},{"content":"You can specify a ToolTip for the control by setting the &lt;xref:System.Web.UI.WebControls.WebControl.ToolTip%2A&gt; property.","pos":[1301,1422],"source":" You can specify a ToolTip for the control by setting the <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Not all controls support every property defined in this class.","pos":[1428,1503],"source":"      > [!NOTE] >  Not all controls support every property defined in this class."},{"content":"For specific information about whether a property is supported, see the documentation for the specific control.","pos":[1504,1615]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Some properties in this class render differently, depending on the browser.","pos":[1621,1709],"source":"      > [!NOTE] >  Some properties in this class render differently, depending on the browser."},{"content":"Some properties do not render at all, while others render, but have no effect.","pos":[1710,1788]},{"content":"The &lt;xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A&gt; property of the &lt;xref:System.Web.HttpBrowserCapabilities&gt; object determines the way in which a Web server control renders.","pos":[1789,1981],"source":" The <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object determines the way in which a Web server control renders."},{"content":"For browsers that support HTML 4.0, the &lt;xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A&gt; property will contain a regular &lt;xref:System.Web.HttpBrowserCapabilities&gt; object, and most properties will be rendered using HTML 4.0 style attributes.","pos":[1982,2239],"source":" For browsers that support HTML 4.0, the <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> property will contain a regular <xref:System.Web.HttpBrowserCapabilities> object, and most properties will be rendered using HTML 4.0 style attributes."},{"content":"Browsers that are not known to support HTML 4.0 will use the &lt;xref:System.Web.UI.Html32TextWriter&gt; object.","pos":[2240,2346],"source":" Browsers that are not known to support HTML 4.0 will use the <xref:System.Web.UI.Html32TextWriter> object."},{"content":"This will automatically map the style attributes to any relevant HTML 3.2 tag attributes.","pos":[2347,2436]},{"content":"In some cases, such as with the &lt;xref:System.Web.UI.WebControls.WebControl.ForeColor%2A&gt; property, the style attributes will be converted into additional tags, such as <ph id=\"ph1\">`&lt;font&gt;`</ph> tags.","pos":[2437,2619],"source":" In some cases, such as with the <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> property, the style attributes will be converted into additional tags, such as `<font>` tags."},{"content":"In some cases, there will be no mapping performed.","pos":[2620,2670]},{"content":"For specific information about how a property is rendered in different browsers, see the documentation for the specific property.","pos":[2671,2800]},{"content":"For a list of initial property values for an instance of WebControl, see the &lt;xref:System.Web.UI.WebControls.WebControl.%23ctor%2A&gt; constructor.","pos":[2807,2951],"source":"       For a list of initial property values for an instance of WebControl, see the <xref:System.Web.UI.WebControls.WebControl.%23ctor%2A> constructor."}]},{"pos":[12534,12720],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that represents a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Span\" name=\"Span\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> HTML tag.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> class that represents a <xref uid=\"langword_csharp_Span\" name=\"Span\" href=\"\"></xref> HTML tag."},{"pos":[12733,13429],"content":"This constructor is used to initialize a new instance of the <xref:System.Web.UI.WebControls.WebControl> class that represents a `Span` HTML element.       The following table shows the initial property value for an instance of <xref:System.Web.UI.WebControls.WebControl>.      |Property|Initial Value|   |--------------|-------------------|   |`TagKey`|The <xref:System.Web.UI.HtmlTextWriterTag> enumeration value.|      > [!NOTE] >  This constructor is not called directly. Instead, it is often called by the constructor of a derived class to initialize the <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> property to the <xref:System.Web.UI.HtmlTextWriterTag> enumeration value.","needQuote":false,"needEscape":true,"nodes":[{"content":"This constructor is used to initialize a new instance of the &lt;xref:System.Web.UI.WebControls.WebControl&gt; class that represents a <ph id=\"ph1\">`Span`</ph> HTML element.","pos":[0,149],"source":"This constructor is used to initialize a new instance of the <xref:System.Web.UI.WebControls.WebControl> class that represents a `Span` HTML element."},{"content":"The following table shows the initial property value for an instance of &lt;xref:System.Web.UI.WebControls.WebControl&gt;.","pos":[156,272],"source":"       The following table shows the initial property value for an instance of <xref:System.Web.UI.WebControls.WebControl>."},{"content":"|Property|Initial Value|   |--------------|-------------------|   |<ph id=\"ph1\">`TagKey`</ph>|The &lt;xref:System.Web.UI.HtmlTextWriterTag&gt; enumeration value.|      &gt; <ph id=\"ph2\">[!NOTE]</ph> &gt;  This constructor is not called directly.","pos":[278,475],"source":"      |Property|Initial Value|   |--------------|-------------------|   |`TagKey`|The <xref:System.Web.UI.HtmlTextWriterTag> enumeration value.|      > [!NOTE] >  This constructor is not called directly."},{"content":"Instead, it is often called by the constructor of a derived class to initialize the &lt;xref:System.Web.UI.WebControls.WebControl.TagKey%2A&gt; property to the &lt;xref:System.Web.UI.HtmlTextWriterTag&gt; enumeration value.","pos":[476,687],"source":" Instead, it is often called by the constructor of a derived class to initialize the <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> property to the <xref:System.Web.UI.HtmlTextWriterTag> enumeration value."}]},{"pos":[13995,14122],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified HTML tag.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> class using the specified HTML tag."},{"pos":[14135,14872],"content":"Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.WebControl> class using the specified HTML tag.       The following table shows initial property values for an instance of <xref:System.Web.UI.WebControls.WebControl>.      |Property|Initial Value|   |--------------|-------------------|   |`TagKey`|The <xref:System.Web.UI.HtmlTextWriterTag> enumeration value.|   |`TagName`|The value of the `tag` parameter.|      > [!NOTE] >  This constructor is not called directly. Instead, it is often called by the constructor of a derived class to initialize the <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> and <xref:System.Web.UI.WebControls.WebControl.TagName%2A> properties.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this constructor to create and initialize a new instance of the &lt;xref:System.Web.UI.WebControls.WebControl&gt; class using the specified HTML tag.","pos":[0,147],"source":"Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.WebControl> class using the specified HTML tag."},{"content":"The following table shows initial property values for an instance of &lt;xref:System.Web.UI.WebControls.WebControl&gt;.","pos":[154,267],"source":"       The following table shows initial property values for an instance of <xref:System.Web.UI.WebControls.WebControl>."},{"content":"|Property|Initial Value|   |--------------|-------------------|   |<ph id=\"ph1\">`TagKey`</ph>|The &lt;xref:System.Web.UI.HtmlTextWriterTag&gt; enumeration value.|   |<ph id=\"ph2\">`TagName`</ph>|The value of the <ph id=\"ph3\">`tag`</ph> parameter.|      &gt; <ph id=\"ph4\">[!NOTE]</ph> &gt;  This constructor is not called directly.","pos":[273,518],"source":"      |Property|Initial Value|   |--------------|-------------------|   |`TagKey`|The <xref:System.Web.UI.HtmlTextWriterTag> enumeration value.|   |`TagName`|The value of the `tag` parameter.|      > [!NOTE] >  This constructor is not called directly."},{"content":"Instead, it is often called by the constructor of a derived class to initialize the &lt;xref:System.Web.UI.WebControls.WebControl.TagKey%2A&gt; and &lt;xref:System.Web.UI.WebControls.WebControl.TagName%2A&gt; properties.","pos":[519,727],"source":" Instead, it is often called by the constructor of a derived class to initialize the <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> and <xref:System.Web.UI.WebControls.WebControl.TagName%2A> properties."}]},{"pos":[15007,15019],"content":"An HTML tag.","needQuote":true,"needEscape":true,"nodes":[{"content":"An HTML tag.","pos":[0,12]}]},{"pos":[15586,15713],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified HTML tag.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> class using the specified HTML tag."},{"pos":[15726,16240],"content":"Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.WebControl> class using the specified <xref:System.Web.UI.HtmlTextWriterTag?displayProperty=fullName> value.       The following table shows the initial property value for an instance of <xref:System.Web.UI.WebControls.WebControl>.      |Property|Initial Value|   |--------------|-------------------|   |`TagKey`|The <xref:System.Web.UI.HtmlTextWriterTag> enumeration value specified by the `tag` parameter.|","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this constructor to create and initialize a new instance of the &lt;xref:System.Web.UI.WebControls.WebControl&gt; class using the specified &lt;xref:System.Web.UI.HtmlTextWriterTag?displayProperty=fullName&gt; value.","pos":[0,208],"source":"Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.WebControl> class using the specified <xref:System.Web.UI.HtmlTextWriterTag?displayProperty=fullName> value."},{"content":"The following table shows the initial property value for an instance of &lt;xref:System.Web.UI.WebControls.WebControl&gt;.","pos":[215,331],"source":"       The following table shows the initial property value for an instance of <xref:System.Web.UI.WebControls.WebControl>."},{"content":"|Property|Initial Value|   |--------------|-------------------|   |<ph id=\"ph1\">`TagKey`</ph>|The &lt;xref:System.Web.UI.HtmlTextWriterTag&gt; enumeration value specified by the <ph id=\"ph2\">`tag`</ph> parameter.|","pos":[337,508],"source":"      |Property|Initial Value|   |--------------|-------------------|   |`TagKey`|The <xref:System.Web.UI.HtmlTextWriterTag> enumeration value specified by the `tag` parameter.|"}]},{"pos":[17543,17614],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriterTag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> values."},{"pos":[18058,18148],"content":"Gets or sets the access key that allows you to quickly navigate to the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the access key that allows you to quickly navigate to the Web server control.","pos":[0,90]}]},{"pos":[18161,18837],"content":"Use the AccessKey property to specify the keyboard shortcut for the Web server control. This allows you to navigate quickly to the control by pressing the ALT key and the key for the specified character on the keyboard. For example, setting the access key of a control to the string `\"D\"` indicates that the user can navigate to the control by pressing ALT+D.       Only a single character string is allowed for the AccessKey property. If you attempt to set this property to a value that is neither `null`, <xref:System.String>, nor a single character string, an exception is thrown.      > [!NOTE] >  This property is supported only in Internet Explorer 4.0 and later.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the AccessKey property to specify the keyboard shortcut for the Web server control.","pos":[0,87]},{"content":"This allows you to navigate quickly to the control by pressing the ALT key and the key for the specified character on the keyboard.","pos":[88,219]},{"content":"For example, setting the access key of a control to the string <ph id=\"ph1\">`\"D\"`</ph> indicates that the user can navigate to the control by pressing ALT+D.","pos":[220,359],"source":" For example, setting the access key of a control to the string `\"D\"` indicates that the user can navigate to the control by pressing ALT+D."},{"content":"Only a single character string is allowed for the AccessKey property.","pos":[366,435]},{"content":"If you attempt to set this property to a value that is neither <ph id=\"ph1\">`null`</ph>, &lt;xref:System.String&gt;, nor a single character string, an exception is thrown.","pos":[436,583],"source":" If you attempt to set this property to a value that is neither `null`, <xref:System.String>, nor a single character string, an exception is thrown."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property is supported only in Internet Explorer 4.0 and later.","pos":[589,669],"source":"      > [!NOTE] >  This property is supported only in Internet Explorer 4.0 and later."}]},{"pos":[19661,19813],"content":"The access key for quick navigation to the Web server control. The default value is <xref:System.String>, which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access key for quick navigation to the Web server control. The default value is <xref:System.String>, which indicates that this property is not set.","pos":[0,152],"nodes":[{"content":"The access key for quick navigation to the Web server control.","pos":[0,62]},{"content":"The default value is &lt;xref:System.String&gt;, which indicates that this property is not set.","pos":[63,152],"source":" The default value is <xref:System.String>, which indicates that this property is not set."}]}]},{"pos":[20002,20151],"content":"The specified access key is neither <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, &lt;xref:System.String&gt; nor a single character string.","needQuote":true,"needEscape":true,"source":"The specified access key is neither <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, <xref:System.String> nor a single character string."},{"pos":[20688,20868],"content":"Adds HTML attributes and styles that need to be rendered to the specified <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref>. This method is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds HTML attributes and styles that need to be rendered to the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriterTag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,127],"source":"Adds HTML attributes and styles that need to be rendered to the specified <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref>."},{"content":"This method is used primarily by control developers.","pos":[128,180]}]},{"pos":[20881,22027],"content":"To render attributes and styles for a Web Server control on the client, you typically call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> methods to insert each attribute and style individually to the <xref:System.Web.UI.HtmlTextWriter> output stream. To simplify the process, this method encapsulates all calls to the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName> and <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> methods for every attribute and style associated with the Web server control. All attributes and styles are inserted into the <xref:System.Web.UI.HtmlTextWriter> output stream in a single method call. This method is typically overridden by control developers in derived classes to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter> output stream for the class.      > [!NOTE] >  The AddAttributesToRender method cannot be used to insert client script. To use client script, see the <xref:System.Web.UI.ClientScriptManager> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"To render attributes and styles for a Web Server control on the client, you typically call the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; and &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName&gt; methods to insert each attribute and style individually to the &lt;xref:System.Web.UI.HtmlTextWriter&gt; output stream.","pos":[0,346],"source":"To render attributes and styles for a Web Server control on the client, you typically call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> methods to insert each attribute and style individually to the <xref:System.Web.UI.HtmlTextWriter> output stream."},{"content":"To simplify the process, this method encapsulates all calls to the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName&gt; and &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName&gt; methods for every attribute and style associated with the Web server control.","pos":[347,654],"source":" To simplify the process, this method encapsulates all calls to the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName> and <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> methods for every attribute and style associated with the Web server control."},{"content":"All attributes and styles are inserted into the &lt;xref:System.Web.UI.HtmlTextWriter&gt; output stream in a single method call.","pos":[655,777],"source":" All attributes and styles are inserted into the <xref:System.Web.UI.HtmlTextWriter> output stream in a single method call."},{"content":"This method is typically overridden by control developers in derived classes to insert the appropriate attributes and styles to the &lt;xref:System.Web.UI.HtmlTextWriter&gt; output stream for the class.","pos":[778,974],"source":" This method is typically overridden by control developers in derived classes to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter> output stream for the class."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The AddAttributesToRender method cannot be used to insert client script.","pos":[980,1065],"source":"      > [!NOTE] >  The AddAttributesToRender method cannot be used to insert client script."},{"content":"To use client script, see the &lt;xref:System.Web.UI.ClientScriptManager&gt; class.","pos":[1066,1143],"source":" To use client script, see the <xref:System.Web.UI.ClientScriptManager> class."}]},{"pos":[22778,22901],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the output stream to render HTML content on the client.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client."},{"pos":[23451,23631],"content":"Copies any nonblank elements of the specified style to the Web control, overwriting any existing style elements of the control. This method is primarily used by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies any nonblank elements of the specified style to the Web control, overwriting any existing style elements of the control. This method is primarily used by control developers.","pos":[0,180],"nodes":[{"content":"Copies any nonblank elements of the specified style to the Web control, overwriting any existing style elements of the control.","pos":[0,127]},{"content":"This method is primarily used by control developers.","pos":[128,180]}]}]},{"pos":[24544,24638],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Style\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the style to be copied.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.Style\"></xref> that represents the style to be copied."},{"pos":[25092,25209],"content":"Gets the collection of arbitrary attributes (for rendering only) that do not correspond to properties on the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of arbitrary attributes (for rendering only) that do not correspond to properties on the control.","pos":[0,117]}]},{"pos":[25222,26067],"content":"The Attributes collection contains a collection of all attributes declared in the opening tag of a Web server control. This allows you to programmatically control the attributes associated with a Web server control. You can add attributes to the collection or remove attributes from the collection.      > [!NOTE] >  This property is rendered with all attributes in the collection in the control’s opening tag, regardless of the browser settings. Not all browsers support every attribute that is rendered. The unsupported attributes are usually ignored by the browser.      > [!NOTE] >  You cannot add client-side script to a <xref:System.Web.UI.WebControls.WebControl> instance using the Attributes collection. To add client-side script, use the <xref:System.Web.UI.Page.ClientScript%2A> property on the <xref:System.Web.UI.Page> control.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Attributes collection contains a collection of all attributes declared in the opening tag of a Web server control.","pos":[0,118]},{"content":"This allows you to programmatically control the attributes associated with a Web server control.","pos":[119,215]},{"content":"You can add attributes to the collection or remove attributes from the collection.","pos":[216,298]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property is rendered with all attributes in the collection in the control’s opening tag, regardless of the browser settings.","pos":[304,446],"source":"      > [!NOTE] >  This property is rendered with all attributes in the collection in the control’s opening tag, regardless of the browser settings."},{"content":"Not all browsers support every attribute that is rendered.","pos":[447,505]},{"content":"The unsupported attributes are usually ignored by the browser.","pos":[506,568]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You cannot add client-side script to a &lt;xref:System.Web.UI.WebControls.WebControl&gt; instance using the Attributes collection.","pos":[574,711],"source":"      > [!NOTE] >  You cannot add client-side script to a <xref:System.Web.UI.WebControls.WebControl> instance using the Attributes collection."},{"content":"To add client-side script, use the &lt;xref:System.Web.UI.Page.ClientScript%2A&gt; property on the &lt;xref:System.Web.UI.Page&gt; control.","pos":[712,839],"source":" To add client-side script, use the <xref:System.Web.UI.Page.ClientScript%2A> property on the <xref:System.Web.UI.Page> control."}]},{"pos":[27386,27467],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.AttributeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of name and value pairs.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.AttributeCollection\"></xref> of name and value pairs."},{"pos":[27916,27976],"content":"Gets or sets the background color of the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the background color of the Web server control.","pos":[0,60]}]},{"pos":[27989,29234],"content":"Use the BackColor property to specify the background color of the Web server control. This property is set using a <xref:System.Drawing.Color?displayProperty=fullName> object.      > [!NOTE] >  This property will render for only certain controls. For example, <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, and <xref:System.Web.UI.WebControls.ValidationSummary> will render this property. It will also work for <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> and <xref:System.Web.UI.WebControls.DataList> if their `RepeatLayout` property is `RepeatLayout.Table`, not `RepeatLayout.Flow`.       In general, only controls that render as a `<table>` tag can display a background color in HTML 3.2, whereas almost any control can in HTML 4.0.       For controls that render as a `<span>` tag (including <xref:System.Web.UI.WebControls.Label>, all validation controls, and list controls with their `RepeatLayout` property set to `RepeatLayout.Flow`), this property will work in Microsoft Internet Explorer version 5 and later, but not in Microsoft Internet Explorer version 4.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the BackColor property to specify the background color of the Web server control.","pos":[0,85]},{"content":"This property is set using a &lt;xref:System.Drawing.Color?displayProperty=fullName&gt; object.","pos":[86,175],"source":" This property is set using a <xref:System.Drawing.Color?displayProperty=fullName> object."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property will render for only certain controls.","pos":[181,246],"source":"      > [!NOTE] >  This property will render for only certain controls."},{"content":"For example, &lt;xref:System.Web.UI.WebControls.Table&gt;, &lt;xref:System.Web.UI.WebControls.Panel&gt;, &lt;xref:System.Web.UI.WebControls.DataGrid&gt;, &lt;xref:System.Web.UI.WebControls.Calendar&gt;, and &lt;xref:System.Web.UI.WebControls.ValidationSummary&gt; will render this property.","pos":[247,507],"source":" For example, <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, and <xref:System.Web.UI.WebControls.ValidationSummary> will render this property."},{"content":"It will also work for &lt;xref:System.Web.UI.WebControls.CheckBoxList&gt;, &lt;xref:System.Web.UI.WebControls.RadioButtonList&gt; and &lt;xref:System.Web.UI.WebControls.DataList&gt; if their <ph id=\"ph1\">`RepeatLayout`</ph> property is <ph id=\"ph2\">`RepeatLayout.Table`</ph>, not <ph id=\"ph3\">`RepeatLayout.Flow`</ph>.","pos":[508,754],"source":" It will also work for <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> and <xref:System.Web.UI.WebControls.DataList> if their `RepeatLayout` property is `RepeatLayout.Table`, not `RepeatLayout.Flow`."},{"content":"In general, only controls that render as a <ph id=\"ph1\">`&lt;table&gt;`</ph> tag can display a background color in HTML 3.2, whereas almost any control can in HTML 4.0.","pos":[761,905],"source":"       In general, only controls that render as a `<table>` tag can display a background color in HTML 3.2, whereas almost any control can in HTML 4.0."},{"content":"For controls that render as a <ph id=\"ph1\">`&lt;span&gt;`</ph> tag (including &lt;xref:System.Web.UI.WebControls.Label&gt;, all validation controls, and list controls with their <ph id=\"ph2\">`RepeatLayout`</ph> property set to <ph id=\"ph3\">`RepeatLayout.Flow`</ph>), this property will work in Microsoft Internet Explorer version 5 and later, but not in Microsoft Internet Explorer version 4.","pos":[912,1238],"source":"       For controls that render as a `<span>` tag (including <xref:System.Web.UI.WebControls.Label>, all validation controls, and list controls with their `RepeatLayout` property set to `RepeatLayout.Flow`), this property will work in Microsoft Internet Explorer version 5 and later, but not in Microsoft Internet Explorer version 4."}]},{"pos":[29846,30047],"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control. The default is <xref href=\"System.Drawing.Color\"></xref>, which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the background color of the control.","pos":[0,96],"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that this property is not set.","pos":[97,201],"source":" The default is <xref href=\"System.Drawing.Color\"></xref>, which indicates that this property is not set."}]},{"pos":[30505,30554],"content":"Gets or sets the border color of the Web control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the border color of the Web control.","pos":[0,49]}]},{"pos":[30567,31718],"content":"Use the BorderColor property to specify the border color of the Web Server control. This property is set using a <xref:System.Drawing.Color> object.      > [!NOTE] >  The BorderColor property will render only for certain controls. For example, the <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, and <xref:System.Web.UI.WebControls.ValidationSummary> controls will render this property. It will also work for the <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>, and <xref:System.Web.UI.WebControls.DataList> controls, if their `RepeatLayout` property is set to `RepeatLayout.Table`, not `RepeatLayout.Flow`. However, it is rendered as the `bordercolor` attribute, which is not part of the HTML 3.2 standard. The `bordercolor` attribute works for Microsoft Internet Explorer version 3.0 or later, but not most other browsers.       When the BorderColor property is not set, the browser will use its default border color. Refer to your browser to determine its default color scheme.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the BorderColor property to specify the border color of the Web Server control.","pos":[0,83]},{"content":"This property is set using a &lt;xref:System.Drawing.Color&gt; object.","pos":[84,148],"source":" This property is set using a <xref:System.Drawing.Color> object."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The BorderColor property will render only for certain controls.","pos":[154,230],"source":"      > [!NOTE] >  The BorderColor property will render only for certain controls."},{"content":"For example, the &lt;xref:System.Web.UI.WebControls.Table&gt;, &lt;xref:System.Web.UI.WebControls.Panel&gt;, &lt;xref:System.Web.UI.WebControls.DataGrid&gt;, &lt;xref:System.Web.UI.WebControls.Calendar&gt;, and &lt;xref:System.Web.UI.WebControls.ValidationSummary&gt; controls will render this property.","pos":[231,504],"source":" For example, the <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, and <xref:System.Web.UI.WebControls.ValidationSummary> controls will render this property."},{"content":"It will also work for the &lt;xref:System.Web.UI.WebControls.CheckBoxList&gt;, &lt;xref:System.Web.UI.WebControls.RadioButtonList&gt;, and &lt;xref:System.Web.UI.WebControls.DataList&gt; controls, if their <ph id=\"ph1\">`RepeatLayout`</ph> property is set to <ph id=\"ph2\">`RepeatLayout.Table`</ph>, not <ph id=\"ph3\">`RepeatLayout.Flow`</ph>.","pos":[505,773],"source":" It will also work for the <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>, and <xref:System.Web.UI.WebControls.DataList> controls, if their `RepeatLayout` property is set to `RepeatLayout.Table`, not `RepeatLayout.Flow`."},{"content":"However, it is rendered as the <ph id=\"ph1\">`bordercolor`</ph> attribute, which is not part of the HTML 3.2 standard.","pos":[774,873],"source":" However, it is rendered as the `bordercolor` attribute, which is not part of the HTML 3.2 standard."},{"content":"The <ph id=\"ph1\">`bordercolor`</ph> attribute works for Microsoft Internet Explorer version 3.0 or later, but not most other browsers.","pos":[874,990],"source":" The `bordercolor` attribute works for Microsoft Internet Explorer version 3.0 or later, but not most other browsers."},{"content":"When the BorderColor property is not set, the browser will use its default border color.","pos":[997,1085]},{"content":"Refer to your browser to determine its default color scheme.","pos":[1086,1146]}]},{"pos":[33201,33398],"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the border color of the control. The default is <xref href=\"System.Drawing.Color\"></xref>, which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the border color of the control.","pos":[0,92],"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the border color of the control."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that this property is not set.","pos":[93,197],"source":" The default is <xref href=\"System.Drawing.Color\"></xref>, which indicates that this property is not set."}]},{"pos":[33858,33914],"content":"Gets or sets the border style of the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the border style of the Web server control.","pos":[0,56]}]},{"pos":[33927,34876],"content":"Use the BorderStyle property to specify the border style for the Web server control. This property is set using one of the <xref:System.Web.UI.WebControls.BorderStyle> enumeration values. The following table lists the possible values.      |Border Style|Description|   |------------------|-----------------|   |`NotSet`|The border style is not set.|   |`None`|No border|   |`Dotted`|A dotted line border.|   |`Dashed`|A dashed line border.|   |`Solid`|A solid line border.|   |`Double`|A solid double line border.|   |`Groove`|A grooved border for a sunken border appearance.|   |`Ridge`|A ridged border for a raised border appearance.|   |`Inset`|An inset border for a sunken control appearance.|   |`Outset`|An outset border for a raised control appearance.|      > [!NOTE] >  This property will not render on browsers earlier than Microsoft Internet Explorer 4 for any Web server control. There is no equivalent to it in HTML 3.2.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the BorderStyle property to specify the border style for the Web server control.","pos":[0,84]},{"content":"This property is set using one of the &lt;xref:System.Web.UI.WebControls.BorderStyle&gt; enumeration values.","pos":[85,187],"source":" This property is set using one of the <xref:System.Web.UI.WebControls.BorderStyle> enumeration values."},{"content":"The following table lists the possible values.","pos":[188,234]},{"content":"|Border Style|Description|   |------------------|-----------------|   |<ph id=\"ph1\">`NotSet`</ph>|The border style is not set.|   |<ph id=\"ph2\">`None`</ph>|No border|   |<ph id=\"ph3\">`Dotted`</ph>|A dotted line border.|   |<ph id=\"ph4\">`Dashed`</ph>|A dashed line border.|   |<ph id=\"ph5\">`Solid`</ph>|A solid line border.|   |<ph id=\"ph6\">`Double`</ph>|A solid double line border.|   |<ph id=\"ph7\">`Groove`</ph>|A grooved border for a sunken border appearance.|   |<ph id=\"ph8\">`Ridge`</ph>|A ridged border for a raised border appearance.|   |<ph id=\"ph9\">`Inset`</ph>|An inset border for a sunken control appearance.|   |<ph id=\"ph10\">`Outset`</ph>|An outset border for a raised control appearance.|      &gt; <ph id=\"ph11\">[!NOTE]</ph> &gt;  This property will not render on browsers earlier than Microsoft Internet Explorer 4 for any Web server control.","pos":[240,891],"source":"      |Border Style|Description|   |------------------|-----------------|   |`NotSet`|The border style is not set.|   |`None`|No border|   |`Dotted`|A dotted line border.|   |`Dashed`|A dashed line border.|   |`Solid`|A solid line border.|   |`Double`|A solid double line border.|   |`Groove`|A grooved border for a sunken border appearance.|   |`Ridge`|A ridged border for a raised border appearance.|   |`Inset`|An inset border for a sunken control appearance.|   |`Outset`|An outset border for a raised control appearance.|      > [!NOTE] >  This property will not render on browsers earlier than Microsoft Internet Explorer 4 for any Web server control."},{"content":"There is no equivalent to it in HTML 3.2.","pos":[892,933]}]},{"pos":[36393,36563],"content":"One of the <xref href=\"System.Web.UI.WebControls.BorderStyle\"></xref> enumeration values. The default is <xref uid=\"langword_csharp_NotSet\" name=\"NotSet\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BorderStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","pos":[0,89],"source":"One of the <xref href=\"System.Web.UI.WebControls.BorderStyle\"></xref> enumeration values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_NotSet\" name=\"NotSet\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,170],"source":" The default is <xref uid=\"langword_csharp_NotSet\" name=\"NotSet\" href=\"\"></xref>."}]},{"pos":[37023,37079],"content":"Gets or sets the border width of the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the border width of the Web server control.","pos":[0,56]}]},{"pos":[37092,37888],"content":"Use the BorderWidth property to specify a border width for a control.      > [!NOTE] >  This property does not work with all Web server controls. It applies only to controls that display as a table, such as <xref:System.Web.UI.WebControls.Table> and <xref:System.Web.UI.WebControls.DataGrid>.       This property is set with a <xref:System.Web.UI.WebControls.Unit> object. If the <xref:System.Web.UI.WebControls.Unit.Value%2A> property of the <xref:System.Web.UI.WebControls.Unit> contains a negative number, an exception is thrown.      > [!NOTE] >  The border width can be expressed only in pixels for browsers earlier than Microsoft Internet Explorer version 5. All unit types are supported in Microsoft Internet Explorer version 5 and later. Refer to the specific control for details.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the BorderWidth property to specify a border width for a control.","pos":[0,69]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property does not work with all Web server controls.","pos":[75,145],"source":"      > [!NOTE] >  This property does not work with all Web server controls."},{"content":"It applies only to controls that display as a table, such as &lt;xref:System.Web.UI.WebControls.Table&gt; and &lt;xref:System.Web.UI.WebControls.DataGrid&gt;.","pos":[146,292],"source":" It applies only to controls that display as a table, such as <xref:System.Web.UI.WebControls.Table> and <xref:System.Web.UI.WebControls.DataGrid>."},{"content":"This property is set with a &lt;xref:System.Web.UI.WebControls.Unit&gt; object.","pos":[299,372],"source":"       This property is set with a <xref:System.Web.UI.WebControls.Unit> object."},{"content":"If the &lt;xref:System.Web.UI.WebControls.Unit.Value%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.Unit&gt; contains a negative number, an exception is thrown.","pos":[373,532],"source":" If the <xref:System.Web.UI.WebControls.Unit.Value%2A> property of the <xref:System.Web.UI.WebControls.Unit> contains a negative number, an exception is thrown."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The border width can be expressed only in pixels for browsers earlier than Microsoft Internet Explorer version 5.","pos":[538,664],"source":"      > [!NOTE] >  The border width can be expressed only in pixels for browsers earlier than Microsoft Internet Explorer version 5."},{"content":"All unit types are supported in Microsoft Internet Explorer version 5 and later.","pos":[665,745]},{"content":"Refer to the specific control for details.","pos":[746,788]}]},{"pos":[39382,39614],"content":"A <xref href=\"System.Web.UI.WebControls.Unit\"></xref> that represents the border width of a Web server control. The default value is <xref href=\"System.Web.UI.WebControls.Unit\"></xref>, which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Unit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the border width of a Web server control.","pos":[0,111],"source":"A <xref href=\"System.Web.UI.WebControls.Unit\"></xref> that represents the border width of a Web server control."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Unit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that this property is not set.","pos":[112,232],"source":" The default value is <xref href=\"System.Web.UI.WebControls.Unit\"></xref>, which indicates that this property is not set."}]},{"pos":[39785,39832],"content":"The specified border width is a negative value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified border width is a negative value.","pos":[0,47]}]},{"pos":[40218,40314],"content":"Gets the style of the Web server control. This property is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the style of the Web server control. This property is used primarily by control developers.","pos":[0,96],"nodes":[{"content":"Gets the style of the Web server control.","pos":[0,41]},{"content":"This property is used primarily by control developers.","pos":[42,96]}]}]},{"pos":[40326,40604],"content":"The ControlStyle property encapsulates all properties of the <xref:System.Web.UI.WebControls.WebControl> class that specify the appearance of the control, such as <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> and <xref:System.Web.UI.WebControls.WebControl.Font%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ControlStyle property encapsulates all properties of the &lt;xref:System.Web.UI.WebControls.WebControl&gt; class that specify the appearance of the control, such as &lt;xref:System.Web.UI.WebControls.WebControl.BorderColor%2A&gt; and &lt;xref:System.Web.UI.WebControls.WebControl.Font%2A&gt;.","pos":[0,278],"source":"The ControlStyle property encapsulates all properties of the <xref:System.Web.UI.WebControls.WebControl> class that specify the appearance of the control, such as <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> and <xref:System.Web.UI.WebControls.WebControl.Font%2A>."}]},{"pos":[40764,40889],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Style\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that encapsulates the appearance properties of the Web server control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.Style\"></xref> that encapsulates the appearance properties of the Web server control."},{"pos":[41390,41631],"content":"Gets a value indicating whether a <xref href=\"System.Web.UI.WebControls.Style\"></xref> object has been created for the <xref:System.Web.UI.WebControls.WebControl.ControlStyle*> property. This property is primarily used by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Style\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object has been created for the &lt;xref:System.Web.UI.WebControls.WebControl.ControlStyle*&gt; property.","pos":[0,186],"source":"Gets a value indicating whether a <xref href=\"System.Web.UI.WebControls.Style\"></xref> object has been created for the <xref:System.Web.UI.WebControls.WebControl.ControlStyle*> property."},{"content":"This property is primarily used by control developers.","pos":[187,241]}]},{"pos":[41754,42047],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.Style\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object has been created for the &lt;xref:System.Web.UI.WebControls.WebControl.ControlStyle*&gt; property; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a <xref href=\"System.Web.UI.WebControls.Style\"></xref> object has been created for the <xref:System.Web.UI.WebControls.WebControl.ControlStyle*> property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[42660,42913],"content":"Copies the properties not encapsulated by the <xref:System.Web.UI.WebControls.WebControl.Style*> object from the specified Web server control to the Web server control that this method is called from. This method is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the properties not encapsulated by the <xref:System.Web.UI.WebControls.WebControl.Style*> object from the specified Web server control to the Web server control that this method is called from. This method is used primarily by control developers.","pos":[0,253],"nodes":[{"content":"Copies the properties not encapsulated by the &lt;xref:System.Web.UI.WebControls.WebControl.Style*&gt; object from the specified Web server control to the Web server control that this method is called from.","pos":[0,200],"source":"Copies the properties not encapsulated by the <xref:System.Web.UI.WebControls.WebControl.Style*> object from the specified Web server control to the Web server control that this method is called from."},{"content":"This method is used primarily by control developers.","pos":[201,253]}]}]},{"pos":[42925,43755],"content":"The CopyBaseAttributes method copies the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>, <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>, <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>, <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>, and <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> properties from the specified Web server control to the Web server control that this method is called from. This is commonly used in cases where a Web server control works by dynamically creating new controls while it is rendering and using the controls. This method is useful in this situation because it copies all properties of Web server controls not encapsulated by the <xref:System.Web.UI.WebControls.Style> object so they can be placed on the outermost control of a tag that is being rendered.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CopyBaseAttributes method copies the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>, <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>, <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>, <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>, and <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> properties from the specified Web server control to the Web server control that this method is called from. This is commonly used in cases where a Web server control works by dynamically creating new controls while it is rendering and using the controls. This method is useful in this situation because it copies all properties of Web server controls not encapsulated by the <xref:System.Web.UI.WebControls.Style> object so they can be placed on the outermost control of a tag that is being rendered.","pos":[0,830],"nodes":[{"content":"The CopyBaseAttributes method copies the &lt;xref:System.Web.UI.WebControls.WebControl.AccessKey%2A&gt;, &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt;, &lt;xref:System.Web.UI.WebControls.WebControl.ToolTip%2A&gt;, &lt;xref:System.Web.UI.WebControls.WebControl.TabIndex%2A&gt;, and &lt;xref:System.Web.UI.WebControls.WebControl.Attributes%2A&gt; properties from the specified Web server control to the Web server control that this method is called from.","pos":[0,437],"source":"The CopyBaseAttributes method copies the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>, <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>, <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>, <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>, and <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> properties from the specified Web server control to the Web server control that this method is called from."},{"content":"This is commonly used in cases where a Web server control works by dynamically creating new controls while it is rendering and using the controls.","pos":[438,584]},{"content":"This method is useful in this situation because it copies all properties of Web server controls not encapsulated by the &lt;xref:System.Web.UI.WebControls.Style&gt; object so they can be placed on the outermost control of a tag that is being rendered.","pos":[585,830],"source":" This method is useful in this situation because it copies all properties of Web server controls not encapsulated by the <xref:System.Web.UI.WebControls.Style> object so they can be placed on the outermost control of a tag that is being rendered."}]}]},{"pos":[43966,44148],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the source control with properties to be copied to the Web server control that this method is called from.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> that represents the source control with properties to be copied to the Web server control that this method is called from."},{"pos":[44334,44422],"content":"<ph id=\"ph1\">&lt;code&gt;controlSrc&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>controlSrc</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[44842,45057],"content":"Creates the style object that is used internally by the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> class to implement all style related properties. This method is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the style object that is used internally by the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebControl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class to implement all style related properties.","pos":[0,162],"source":"Creates the style object that is used internally by the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> class to implement all style related properties."},{"content":"This method is used primarily by control developers.","pos":[163,215]}]},{"pos":[45070,45703],"content":"The CreateControlStyle method is used to create the style object that is used internally to implement all style related properties. Derived classes can override this method to create a style that is appropriate to the class. This method is primarily used by control developers.       **Note** Control developers should return a <xref:System.Web.UI.WebControls.Style> that derives from the <xref:System.Web.UI.WebControls.Style> that the base control returns. It cannot be assumed that the <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> is of a particular Style type since a derived control may return a different type.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CreateControlStyle method is used to create the style object that is used internally to implement all style related properties.","pos":[0,131]},{"content":"Derived classes can override this method to create a style that is appropriate to the class.","pos":[132,224]},{"content":"This method is primarily used by control developers.","pos":[225,277]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> Control developers should return a &lt;xref:System.Web.UI.WebControls.Style&gt; that derives from the &lt;xref:System.Web.UI.WebControls.Style&gt; that the base control returns.","pos":[284,458],"source":"**Note** Control developers should return a <xref:System.Web.UI.WebControls.Style> that derives from the <xref:System.Web.UI.WebControls.Style> that the base control returns."},{"content":"It cannot be assumed that the &lt;xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A&gt; is of a particular Style type since a derived control may return a different type.","pos":[459,631],"source":" It cannot be assumed that the <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> is of a particular Style type since a derived control may return a different type."}]},{"pos":[45895,46020],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Style\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used to implement all style-related properties of the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.Style\"></xref> that is used to implement all style-related properties of the control."},{"pos":[46472,46572],"content":"Gets or sets the Cascading Style Sheet (CSS) class rendered by the Web server control on the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the Cascading Style Sheet (CSS) class rendered by the Web server control on the client.","pos":[0,100]}]},{"pos":[46585,47828],"content":"Use the CssClass property to specify the CSS class to render on the client for the Web Server control. This property will render on browsers for all controls. It will always be rendered as the class attribute, regardless of the browser.      > [!IMPORTANT] >  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).       For example, suppose you have the following Web server control declaration:      ```   <asp:TextBox id=\"TextBox1\" ForeColor=\"Red\" CssClass=\"class1\" />   ```       The following HTML is rendered on the client for the previous Web server control declaration:      ```   <input type=text class=\"class1\" style=\"ForeColor:red\">   ```       If you use cascading style sheets (CSS) to customize the appearance of a control, use either inline styles or a separate CSS file, but not both. Using both inline styles and a separate CSS file could cause unexpected results.      > [!NOTE] >  On browsers that do not support CSS, setting the CssClass property will have no effect.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the CssClass property to specify the CSS class to render on the client for the Web Server control.","pos":[0,102]},{"content":"This property will render on browsers for all controls.","pos":[103,158]},{"content":"It will always be rendered as the class attribute, regardless of the browser.","pos":[159,236]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  This example has a text box that accepts user input, which is a potential security threat.","pos":[242,350],"source":"      > [!IMPORTANT] >  This example has a text box that accepts user input, which is a potential security threat."},{"content":"By default, ASP.NET Web pages validate that user input does not include script or HTML elements.","pos":[351,447]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Script Exploits Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[448,540],"source":" For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"For example, suppose you have the following Web server control declaration:      <ph id=\"ph1\">```   &lt;asp:TextBox id=\"TextBox1\" ForeColor=\"Red\" CssClass=\"class1\" /&gt;   ```</ph>       The following HTML is rendered on the client for the previous Web server control declaration:      <ph id=\"ph2\">```   &lt;input type=text class=\"class1\" style=\"ForeColor:red\"&gt;   ```</ph>       If you use cascading style sheets (CSS) to customize the appearance of a control, use either inline styles or a separate CSS file, but not both.","pos":[547,1026],"source":"       For example, suppose you have the following Web server control declaration:      ```   <asp:TextBox id=\"TextBox1\" ForeColor=\"Red\" CssClass=\"class1\" />   ```       The following HTML is rendered on the client for the previous Web server control declaration:      ```   <input type=text class=\"class1\" style=\"ForeColor:red\">   ```       If you use cascading style sheets (CSS) to customize the appearance of a control, use either inline styles or a separate CSS file, but not both."},{"content":"Using both inline styles and a separate CSS file could cause unexpected results.","pos":[1027,1107]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  On browsers that do not support CSS, setting the CssClass property will have no effect.","pos":[1113,1213],"source":"      > [!NOTE] >  On browsers that do not support CSS, setting the CssClass property will have no effect."}]},{"pos":[48831,48931],"content":"The CSS class rendered by the Web server control on the client. The default is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CSS class rendered by the Web server control on the client. The default is <xref:System.String>.","pos":[0,100],"nodes":[{"content":"The CSS class rendered by the Web server control on the client.","pos":[0,63]},{"content":"The default is &lt;xref:System.String&gt;.","pos":[64,100],"source":" The default is <xref:System.String>."}]}]},{"pos":[49413,49507],"content":"Gets or sets the CSS class to apply to the rendered HTML element when the control is disabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the CSS class to apply to the rendered HTML element when the control is disabled.","pos":[0,94]}]},{"pos":[49520,51161],"content":"This property can be used to change the name that is rendered for the DisabledCssClass property of individual Web controls. By default, this property returns \"aspNetDisabled\".       When <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> is overridden in a derived class to return `false`, the value of the DisabledCssClass property is rendered as the value of the `class` attribute of the HTML element for the control. In that case, if there is a value in the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property, both CSS classes will be applied to the rendered HTML element. The `class` attribute will consist of the value of the DisabledCssClass property followed by the value of the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property, separated by a space.       This property is static, which means that you can set it only for the <xref:System.Web.UI.WebControls.WebControl> class. Whatever value you set it to is used for all controls in a Web application. You cannot specify different values for individual controls.       If you want to use a class name different from the default value of \"aspNetDisabled\", you typically put the code to do that in the `Application_Start` method of the Global.asax file, as shown in the following example:      ```vb#   Private Sub Application_Start(       ByVal sender As Object, ByVal e As EventArgs)       WebControl.DisabledCssClass = \"customDisabledClassName\"   End Sub   ```      ```c#   void Application_Start(object sender, EventArgs e)   {       WebControl.DisabledCssClass = \"customDisabledClassName\";   }   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"This property can be used to change the name that is rendered for the DisabledCssClass property of individual Web controls.","pos":[0,123]},{"content":"By default, this property returns \"aspNetDisabled\".","pos":[124,175]},{"content":"When &lt;xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A&gt; is overridden in a derived class to return <ph id=\"ph1\">`false`</ph>, the value of the DisabledCssClass property is rendered as the value of the <ph id=\"ph2\">`class`</ph> attribute of the HTML element for the control.","pos":[182,441],"source":"       When <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> is overridden in a derived class to return `false`, the value of the DisabledCssClass property is rendered as the value of the `class` attribute of the HTML element for the control."},{"content":"In that case, if there is a value in the &lt;xref:System.Web.UI.WebControls.WebControl.CssClass%2A&gt; property, both CSS classes will be applied to the rendered HTML element.","pos":[442,611],"source":" In that case, if there is a value in the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property, both CSS classes will be applied to the rendered HTML element."},{"content":"The <ph id=\"ph1\">`class`</ph> attribute will consist of the value of the DisabledCssClass property followed by the value of the &lt;xref:System.Web.UI.WebControls.WebControl.CssClass%2A&gt; property, separated by a space.","pos":[612,809],"source":" The `class` attribute will consist of the value of the DisabledCssClass property followed by the value of the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property, separated by a space."},{"content":"This property is static, which means that you can set it only for the &lt;xref:System.Web.UI.WebControls.WebControl&gt; class.","pos":[816,936],"source":"       This property is static, which means that you can set it only for the <xref:System.Web.UI.WebControls.WebControl> class."},{"content":"Whatever value you set it to is used for all controls in a Web application.","pos":[937,1012]},{"content":"You cannot specify different values for individual controls.","pos":[1013,1073]},{"content":"If you want to use a class name different from the default value of \"aspNetDisabled\", you typically put the code to do that in the <ph id=\"ph1\">`Application_Start`</ph> method of the Global.asax file, as shown in the following example:      <ph id=\"ph2\">```vb#   Private Sub Application_Start(       ByVal sender As Object, ByVal e As EventArgs)       WebControl.DisabledCssClass = \"customDisabledClassName\"   End Sub   ```</ph>      <ph id=\"ph3\">```c#   void Application_Start(object sender, EventArgs e)   {       WebControl.DisabledCssClass = \"customDisabledClassName\";   }   ```</ph>","pos":[1080,1613],"source":"       If you want to use a class name different from the default value of \"aspNetDisabled\", you typically put the code to do that in the `Application_Start` method of the Global.asax file, as shown in the following example:      ```vb#   Private Sub Application_Start(       ByVal sender As Object, ByVal e As EventArgs)       WebControl.DisabledCssClass = \"customDisabledClassName\"   End Sub   ```      ```c#   void Application_Start(object sender, EventArgs e)   {       WebControl.DisabledCssClass = \"customDisabledClassName\";   }   ```"}]},{"pos":[52122,52256],"content":"The CSS class that should be applied to the rendered HTML element when the control is disabled. The default value is \"aspNetDisabled\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The CSS class that should be applied to the rendered HTML element when the control is disabled. The default value is \"aspNetDisabled\".","pos":[0,134],"nodes":[{"content":"The CSS class that should be applied to the rendered HTML element when the control is disabled.","pos":[0,95]},{"content":"The default value is \"aspNetDisabled\".","pos":[96,134]}]}]},{"pos":[52701,52775],"content":"Gets or sets a value indicating whether the Web server control is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the Web server control is enabled.","pos":[0,74]}]},{"pos":[52788,54566],"content":"When the Enabled property of a control is set to `false`, the control typically appears dimmed. If the control is an input element, the browser prevents the user from clicking or typing in it. HTML elements that are rendered for a server control are marked as disabled by setting their `disabled` attribute or their CSS `class` attribute. For more information, see <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> and <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.       This property propagates down the control hierarchy. If you disable a container control, the child controls within that container are also disabled. For more information, see the <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> property.      > [!NOTE] >  In a custom composite control, this inheritance behavior does not apply to controls that have not yet created their child controls. You must either set the enabled state of the child controls when they are created, or override the Enabled property to call the <xref:System.Web.UI.Control.EnsureChildControls%2A> method.      > [!NOTE] >  Disabling a control only prevents interaction with the control by the user through the browser UI. It is possible for a user to craft a request that submits a postback that is processed by the page even if controls on the page are disabled. Before you process a postback request, check to make sure that the control is enabled and visible.       Not all controls support this property. See the individual controls for details.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"When the Enabled property of a control is set to <ph id=\"ph1\">`false`</ph>, the control typically appears dimmed.","pos":[0,95],"source":"When the Enabled property of a control is set to `false`, the control typically appears dimmed."},{"content":"If the control is an input element, the browser prevents the user from clicking or typing in it.","pos":[96,192]},{"content":"HTML elements that are rendered for a server control are marked as disabled by setting their <ph id=\"ph1\">`disabled`</ph> attribute or their CSS <ph id=\"ph2\">`class`</ph> attribute.","pos":[193,338],"source":" HTML elements that are rendered for a server control are marked as disabled by setting their `disabled` attribute or their CSS `class` attribute."},{"content":"For more information, see &lt;xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A&gt; and &lt;xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A&gt;.","pos":[339,527],"source":" For more information, see <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> and <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>."},{"content":"This property propagates down the control hierarchy.","pos":[534,586]},{"content":"If you disable a container control, the child controls within that container are also disabled.","pos":[587,682]},{"content":"For more information, see the &lt;xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A&gt; property.","pos":[683,779],"source":" For more information, see the <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In a custom composite control, this inheritance behavior does not apply to controls that have not yet created their child controls.","pos":[785,929],"source":"      > [!NOTE] >  In a custom composite control, this inheritance behavior does not apply to controls that have not yet created their child controls."},{"content":"You must either set the enabled state of the child controls when they are created, or override the Enabled property to call the &lt;xref:System.Web.UI.Control.EnsureChildControls%2A&gt; method.","pos":[930,1117],"source":" You must either set the enabled state of the child controls when they are created, or override the Enabled property to call the <xref:System.Web.UI.Control.EnsureChildControls%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Disabling a control only prevents interaction with the control by the user through the browser UI.","pos":[1123,1234],"source":"      > [!NOTE] >  Disabling a control only prevents interaction with the control by the user through the browser UI."},{"content":"It is possible for a user to craft a request that submits a postback that is processed by the page even if controls on the page are disabled.","pos":[1235,1376]},{"content":"Before you process a postback request, check to make sure that the control is enabled and visible.","pos":[1377,1475]},{"content":"Not all controls support this property.","pos":[1482,1521]},{"content":"See the individual controls for details.","pos":[1522,1562]},{"content":"This property cannot be set by themes or style sheet themes.","pos":[1569,1629]},{"content":"For more information, see &lt;xref:System.Web.UI.ThemeableAttribute&gt; and <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1630,1766],"source":" For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[55854,56089],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if control is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if control is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,158],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if control is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[159,235],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[56555,56624],"content":"Gets or sets a value indicating whether themes apply to this control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether themes apply to this control.","pos":[0,69]}]},{"pos":[56637,57694],"content":"The EnableTheming property indicates whether themes are enabled for a specified control. When the EnableTheming property is `true`, the theme directory for the application is searched for control skins to apply. If no skin for the particular control exists in the theme directory, skins are not applied.       When the EnableTheming property is `false`, the theme directory is not searched and the contents of the <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> property is not used.       A control can override the EnableTheming value set by its parent control or the containing page. For example, if a parent control has the EnableTheming property set to `false`, you can selectively apply themes to child controls that are contained within the parent by setting the EnableTheming property to `true` on the individual child controls.       Themes can be enabled at the page, container, or control level. When theming is disabled at the page or container level, themes are disabled for all controls that are contained by the page or container.","needQuote":false,"needEscape":true,"nodes":[{"content":"The EnableTheming property indicates whether themes are enabled for a specified control.","pos":[0,88]},{"content":"When the EnableTheming property is <ph id=\"ph1\">`true`</ph>, the theme directory for the application is searched for control skins to apply.","pos":[89,211],"source":" When the EnableTheming property is `true`, the theme directory for the application is searched for control skins to apply."},{"content":"If no skin for the particular control exists in the theme directory, skins are not applied.","pos":[212,303]},{"content":"When the EnableTheming property is <ph id=\"ph1\">`false`</ph>, the theme directory is not searched and the contents of the &lt;xref:System.Web.UI.WebControls.WebControl.SkinID%2A&gt; property is not used.","pos":[310,489],"source":"       When the EnableTheming property is `false`, the theme directory is not searched and the contents of the <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> property is not used."},{"content":"A control can override the EnableTheming value set by its parent control or the containing page.","pos":[496,592]},{"content":"For example, if a parent control has the EnableTheming property set to <ph id=\"ph1\">`false`</ph>, you can selectively apply themes to child controls that are contained within the parent by setting the EnableTheming property to <ph id=\"ph2\">`true`</ph> on the individual child controls.","pos":[593,842],"source":" For example, if a parent control has the EnableTheming property set to `false`, you can selectively apply themes to child controls that are contained within the parent by setting the EnableTheming property to `true` on the individual child controls."},{"content":"Themes can be enabled at the page, container, or control level.","pos":[849,912]},{"content":"When theming is disabled at the page or container level, themes are disabled for all controls that are contained by the page or container.","pos":[913,1051]}]},{"pos":[57826,58053],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use themes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use themes; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,150],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use themes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[151,227],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[58480,58544],"content":"Gets the font properties associated with the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the font properties associated with the Web server control.","pos":[0,64]}]},{"pos":[58557,59882],"content":"Use the Font property to specify the font properties of the Web Server control. This property includes subproperties that can be accessed declaratively in the form of `Property-Subproperty` (for example `Font-Bold`) or programmatically in the form of `Property.Subproperty` (for example `Font.Bold`).       All but one subproperty will render in browsers prior to Microsoft Internet Explorer version 4 for all controls. They are: <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>, <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>, <xref:System.Web.UI.WebControls.FontInfo.Name%2A>, <xref:System.Web.UI.WebControls.FontInfo.Names%2A>, <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>, <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>, and <xref:System.Web.UI.WebControls.FontInfo.Size%2A> (but only named font sizes, such as `Small`, `Smaller`, and so on, will work).      > [!NOTE] >  Although these subproperties render in browsers prior to Microsoft Internet Explorer version 4, the HTML that is rendered is different than later browsers. Instead of rendering as style attributes, these subproperties are rendered as HTML elements, such as `<b>` and `<font>`.       The one subproperty that will not render on earlier browsers for all controls is <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Font property to specify the font properties of the Web Server control.","pos":[0,79]},{"content":"This property includes subproperties that can be accessed declaratively in the form of <ph id=\"ph1\">`Property-Subproperty`</ph> (for example <ph id=\"ph2\">`Font-Bold`</ph>) or programmatically in the form of <ph id=\"ph3\">`Property.Subproperty`</ph> (for example <ph id=\"ph4\">`Font.Bold`</ph>).","pos":[80,300],"source":" This property includes subproperties that can be accessed declaratively in the form of `Property-Subproperty` (for example `Font-Bold`) or programmatically in the form of `Property.Subproperty` (for example `Font.Bold`)."},{"content":"All but one subproperty will render in browsers prior to Microsoft Internet Explorer version 4 for all controls.","pos":[307,419]},{"content":"They are: &lt;xref:System.Web.UI.WebControls.FontInfo.Bold%2A&gt;, &lt;xref:System.Web.UI.WebControls.FontInfo.Italic%2A&gt;, &lt;xref:System.Web.UI.WebControls.FontInfo.Name%2A&gt;, &lt;xref:System.Web.UI.WebControls.FontInfo.Names%2A&gt;, &lt;xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A&gt;, &lt;xref:System.Web.UI.WebControls.FontInfo.Underline%2A&gt;, and &lt;xref:System.Web.UI.WebControls.FontInfo.Size%2A&gt; (but only named font sizes, such as <ph id=\"ph1\">`Small`</ph>, <ph id=\"ph2\">`Smaller`</ph>, and so on, will work).","pos":[420,881],"source":" They are: <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>, <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>, <xref:System.Web.UI.WebControls.FontInfo.Name%2A>, <xref:System.Web.UI.WebControls.FontInfo.Names%2A>, <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>, <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>, and <xref:System.Web.UI.WebControls.FontInfo.Size%2A> (but only named font sizes, such as `Small`, `Smaller`, and so on, will work)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Although these subproperties render in browsers prior to Microsoft Internet Explorer version 4, the HTML that is rendered is different than later browsers.","pos":[887,1055],"source":"      > [!NOTE] >  Although these subproperties render in browsers prior to Microsoft Internet Explorer version 4, the HTML that is rendered is different than later browsers."},{"content":"Instead of rendering as style attributes, these subproperties are rendered as HTML elements, such as <ph id=\"ph1\">`&lt;b&gt;`</ph> and <ph id=\"ph2\">`&lt;font&gt;`</ph>.","pos":[1056,1176],"source":" Instead of rendering as style attributes, these subproperties are rendered as HTML elements, such as `<b>` and `<font>`."},{"content":"The one subproperty that will not render on earlier browsers for all controls is &lt;xref:System.Web.UI.WebControls.FontInfo.Overline%2A&gt;.","pos":[1183,1318],"source":"       The one subproperty that will not render on earlier browsers for all controls is <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>."}]},{"pos":[60807,60927],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.FontInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the font properties of the Web server control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.FontInfo\"></xref> that represents the font properties of the Web server control."},{"pos":[61370,61464],"content":"Gets or sets the foreground color (typically the color of the text) of the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the foreground color (typically the color of the text) of the Web server control.","pos":[0,94]}]},{"pos":[61477,62040],"content":"Use the ForeColor property to specify the foreground color of the Web server control. The foreground color is usually the color of the text. This property will render on browsers earlier than Microsoft Internet Explorer version 4 for all controls, except the <xref:System.Web.UI.WebControls.Image>, <xref:System.Web.UI.WebControls.AdRotator>, <xref:System.Web.UI.WebControls.HyperLink> and <xref:System.Web.UI.WebControls.LinkButton>.      > [!NOTE] >  On browsers earlier than Microsoft Internet Explorer version 4, this property is rendered as `<font>` tags.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the ForeColor property to specify the foreground color of the Web server control.","pos":[0,85]},{"content":"The foreground color is usually the color of the text.","pos":[86,140]},{"content":"This property will render on browsers earlier than Microsoft Internet Explorer version 4 for all controls, except the &lt;xref:System.Web.UI.WebControls.Image&gt;, &lt;xref:System.Web.UI.WebControls.AdRotator&gt;, &lt;xref:System.Web.UI.WebControls.HyperLink&gt; and &lt;xref:System.Web.UI.WebControls.LinkButton&gt;.","pos":[141,434],"source":" This property will render on browsers earlier than Microsoft Internet Explorer version 4 for all controls, except the <xref:System.Web.UI.WebControls.Image>, <xref:System.Web.UI.WebControls.AdRotator>, <xref:System.Web.UI.WebControls.HyperLink> and <xref:System.Web.UI.WebControls.LinkButton>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  On browsers earlier than Microsoft Internet Explorer version 4, this property is rendered as <ph id=\"ph2\">`&lt;font&gt;`</ph> tags.","pos":[440,560],"source":"      > [!NOTE] >  On browsers earlier than Microsoft Internet Explorer version 4, this property is rendered as `<font>` tags."}]},{"pos":[62645,62799],"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the foreground color of the control. The default is <xref href=\"System.Drawing.Color\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the foreground color of the control.","pos":[0,96],"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the foreground color of the control."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,154],"source":" The default is <xref href=\"System.Drawing.Color\"></xref>."}]},{"pos":[63267,63330],"content":"Gets a value indicating whether the control has attributes set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the control has attributes set.","pos":[0,63]}]},{"pos":[63342,63554],"content":"The HasAttributes property returns `true` when the <xref:System.Web.UI.WebControls.WebControl> instance has attribute name/value pairs. The attribute pairs can be set either in the  property or in the view state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HasAttributes property returns <ph id=\"ph1\">`true`</ph> when the &lt;xref:System.Web.UI.WebControls.WebControl&gt; instance has attribute name/value pairs.","pos":[0,135],"source":"The HasAttributes property returns `true` when the <xref:System.Web.UI.WebControls.WebControl> instance has attribute name/value pairs."},{"content":"The attribute pairs can be set either in the  property or in the view state.","pos":[136,212]}]},{"pos":[63671,63841],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control has attributes set; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control has attributes set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[64278,64328],"content":"Gets or sets the height of the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the height of the Web server control.","pos":[0,50]}]},{"pos":[64341,65881],"content":"Use the Height property to specify the height of the Web server control.      > [!NOTE] >  This property does not render for all controls in browsers earlier than Microsoft Internet Explorer version 4. Controls that do not render this property in earlier browsers include <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>, and any validation controls. The <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> and <xref:System.Web.UI.WebControls.DataList> also do not render this property in earlier browsers when their `RepeatLayout` property is set to `RepeatLayout.Flow`. Furthermore, only unit types of `Pixel` and `Percentage` are supported in earlier browsers.       Because this property is nonstandard HTML, Web server controls that display as a table, such as <xref:System.Web.UI.WebControls.Table> and <xref:System.Web.UI.WebControls.DataGrid>, do not support this property in browsers earlier than Microsoft Internet Explorer version 4.      > [!NOTE] >  To set the Height property to a unit type other than the default of `Pixel`, you must create a new unit type specific to the unit type you want. For example, to set a control's Height property to a percentage value of 100, you could do the following:   >    >  `myWebControl.Width = Unit.Percentage(100);`   >    >  For more information on the unit types available for the Height property, see the <xref:System.Web.UI.WebControls.Unit> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Height property to specify the height of the Web server control.","pos":[0,72]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property does not render for all controls in browsers earlier than Microsoft Internet Explorer version 4.","pos":[78,201],"source":"      > [!NOTE] >  This property does not render for all controls in browsers earlier than Microsoft Internet Explorer version 4."},{"content":"Controls that do not render this property in earlier browsers include &lt;xref:System.Web.UI.WebControls.Label&gt;, &lt;xref:System.Web.UI.WebControls.HyperLink&gt;, &lt;xref:System.Web.UI.WebControls.LinkButton&gt;, and any validation controls.","pos":[202,429],"source":" Controls that do not render this property in earlier browsers include <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>, and any validation controls."},{"content":"The &lt;xref:System.Web.UI.WebControls.CheckBoxList&gt;, &lt;xref:System.Web.UI.WebControls.RadioButtonList&gt; and &lt;xref:System.Web.UI.WebControls.DataList&gt; also do not render this property in earlier browsers when their <ph id=\"ph1\">`RepeatLayout`</ph> property is set to <ph id=\"ph2\">`RepeatLayout.Flow`</ph>.","pos":[430,694],"source":" The <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> and <xref:System.Web.UI.WebControls.DataList> also do not render this property in earlier browsers when their `RepeatLayout` property is set to `RepeatLayout.Flow`."},{"content":"Furthermore, only unit types of <ph id=\"ph1\">`Pixel`</ph> and <ph id=\"ph2\">`Percentage`</ph> are supported in earlier browsers.","pos":[695,786],"source":" Furthermore, only unit types of `Pixel` and `Percentage` are supported in earlier browsers."},{"content":"Because this property is nonstandard HTML, Web server controls that display as a table, such as &lt;xref:System.Web.UI.WebControls.Table&gt; and &lt;xref:System.Web.UI.WebControls.DataGrid&gt;, do not support this property in browsers earlier than Microsoft Internet Explorer version 4.","pos":[793,1067],"source":"       Because this property is nonstandard HTML, Web server controls that display as a table, such as <xref:System.Web.UI.WebControls.Table> and <xref:System.Web.UI.WebControls.DataGrid>, do not support this property in browsers earlier than Microsoft Internet Explorer version 4."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To set the Height property to a unit type other than the default of <ph id=\"ph2\">`Pixel`</ph>, you must create a new unit type specific to the unit type you want.","pos":[1073,1230],"source":"      > [!NOTE] >  To set the Height property to a unit type other than the default of `Pixel`, you must create a new unit type specific to the unit type you want."},{"content":"For example, to set a control's Height property to a percentage value of 100, you could do the following:   &gt;    &gt;  <ph id=\"ph1\">`myWebControl.Width = Unit.Percentage(100);`</ph>   &gt;    &gt;  For more information on the unit types available for the Height property, see the &lt;xref:System.Web.UI.WebControls.Unit&gt; class.","pos":[1231,1528],"source":" For example, to set a control's Height property to a percentage value of 100, you could do the following:   >    >  `myWebControl.Width = Unit.Percentage(100);`   >    >  For more information on the unit types available for the Height property, see the <xref:System.Web.UI.WebControls.Unit> class."}]},{"pos":[66508,66672],"content":"A <xref href=\"System.Web.UI.WebControls.Unit\"></xref> that represents the height of the control. The default is <xref href=\"System.Web.UI.WebControls.Unit\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Unit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the height of the control.","pos":[0,96],"source":"A <xref href=\"System.Web.UI.WebControls.Unit\"></xref> that represents the height of the control."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Unit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,164],"source":" The default is <xref href=\"System.Web.UI.WebControls.Unit\"></xref>."}]},{"pos":[66838,66877],"content":"The height was set to a negative value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height was set to a negative value.","pos":[0,39]}]},{"pos":[67248,67303],"content":"Gets a value indicating whether the control is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the control is enabled.","pos":[0,55]}]},{"pos":[67316,69049],"content":"This is a read-only property. If you want to disable a control, you set its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property to `false`.       If a control is not contained by another control, the value of the IsEnabled property is always the same as the value of the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property.       The IsEnabled property has a value that is different from the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property if a control is a child of another control and if all the following circumstances are true:      -   The value of the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property or the IsEnabled property of the parent control is `false`.      -   The <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property of the child control is set to `true`.       In this situation, the child control inherits the disabled state of the parent control. The IsEnabled property of the child control returns `false` to indicate that the control is disabled even though the child control was not explicitly disabled by setting its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property to `false`. The parent control itself might have its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property set to `true` but might inherit the disabled state from its parent, and so on.       When ASP.NET renders HTML elements for a server control, it marks the elements as disabled by setting their `disabled` attribute or their CSS `class` attribute. For more information, see <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> and <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This is a read-only property.","pos":[0,29]},{"content":"If you want to disable a control, you set its &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt; property to <ph id=\"ph1\">`false`</ph>.","pos":[30,151],"source":" If you want to disable a control, you set its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property to `false`."},{"content":"If a control is not contained by another control, the value of the IsEnabled property is always the same as the value of the &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt; property.","pos":[158,347],"source":"       If a control is not contained by another control, the value of the IsEnabled property is always the same as the value of the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property."},{"content":"The IsEnabled property has a value that is different from the &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt; property if a control is a child of another control and if all the following circumstances are true:      -   The value of the &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt; property or the IsEnabled property of the parent control is <ph id=\"ph1\">`false`</ph>.","pos":[354,721],"source":"       The IsEnabled property has a value that is different from the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property if a control is a child of another control and if all the following circumstances are true:      -   The value of the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property or the IsEnabled property of the parent control is `false`."},{"content":"-   The &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt; property of the child control is set to <ph id=\"ph1\">`true`</ph>.","pos":[727,837],"source":"      -   The <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property of the child control is set to `true`."},{"content":"In this situation, the child control inherits the disabled state of the parent control.","pos":[844,931]},{"content":"The IsEnabled property of the child control returns <ph id=\"ph1\">`false`</ph> to indicate that the control is disabled even though the child control was not explicitly disabled by setting its &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt; property to <ph id=\"ph2\">`false`</ph>.","pos":[932,1181],"source":" The IsEnabled property of the child control returns `false` to indicate that the control is disabled even though the child control was not explicitly disabled by setting its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property to `false`."},{"content":"The parent control itself might have its &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt; property set to <ph id=\"ph1\">`true`</ph> but might inherit the disabled state from its parent, and so on.","pos":[1182,1365],"source":" The parent control itself might have its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property set to `true` but might inherit the disabled state from its parent, and so on."},{"content":"When ASP.NET renders HTML elements for a server control, it marks the elements as disabled by setting their <ph id=\"ph1\">`disabled`</ph> attribute or their CSS <ph id=\"ph2\">`class`</ph> attribute.","pos":[1372,1532],"source":"       When ASP.NET renders HTML elements for a server control, it marks the elements as disabled by setting their `disabled` attribute or their CSS `class` attribute."},{"content":"For more information, see &lt;xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A&gt; and &lt;xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A&gt;.","pos":[1533,1721],"source":" For more information, see <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> and <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>."}]},{"pos":[69166,69385],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.WebControl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is enabled; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> object is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[69905,70051],"content":"Restores view-state information from a previous request that was saved with the <xref:System.Web.UI.WebControls.WebControl.SaveViewState*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Restores view-state information from a previous request that was saved with the &lt;xref:System.Web.UI.WebControls.WebControl.SaveViewState*&gt; method.","pos":[0,146],"source":"Restores view-state information from a previous request that was saved with the <xref:System.Web.UI.WebControls.WebControl.SaveViewState*> method."}]},{"pos":[70064,70888],"content":"This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).       The LoadViewState method restores the view-state information that was saved during a previous <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> request. The <xref:System.Web.UI.WebControls.WebControl> class overrides the base <xref:System.Web.UI.Control.LoadViewState%2A> method to handle the <xref:System.Web.UI.Control.ViewState%2A>, <xref:System.Web.UI.WebControls.WebControl.Style%2A>, and <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> properties.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,122]},{"content":"However, control developers can override this method to specify how a custom server control restores its view state.","pos":[123,239]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET State Management Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[240,341],"source":" For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"The LoadViewState method restores the view-state information that was saved during a previous &lt;xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A&gt; request.","pos":[348,511],"source":"       The LoadViewState method restores the view-state information that was saved during a previous <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> request."},{"content":"The &lt;xref:System.Web.UI.WebControls.WebControl&gt; class overrides the base &lt;xref:System.Web.UI.Control.LoadViewState%2A&gt; method to handle the &lt;xref:System.Web.UI.Control.ViewState%2A&gt;, &lt;xref:System.Web.UI.WebControls.WebControl.Style%2A&gt;, and &lt;xref:System.Web.UI.WebControls.WebControl.Attributes%2A&gt; properties.","pos":[512,822],"source":" The <xref:System.Web.UI.WebControls.WebControl> class overrides the base <xref:System.Web.UI.Control.LoadViewState%2A> method to handle the <xref:System.Web.UI.Control.ViewState%2A>, <xref:System.Web.UI.WebControls.WebControl.Style%2A>, and <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> properties."}]},{"pos":[71054,71109],"content":"An object that represents the control state to restore.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the control state to restore.","pos":[0,55]}]},{"pos":[71651,71842],"content":"Copies any nonblank elements of the specified style to the Web control, but will not overwrite any existing style elements of the control. This method is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies any nonblank elements of the specified style to the Web control, but will not overwrite any existing style elements of the control. This method is used primarily by control developers.","pos":[0,191],"nodes":[{"content":"Copies any nonblank elements of the specified style to the Web control, but will not overwrite any existing style elements of the control.","pos":[0,138]},{"content":"This method is used primarily by control developers.","pos":[139,191]}]}]},{"pos":[72770,72864],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Style\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the style to be copied.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.Style\"></xref> that represents the style to be copied."},{"pos":[73404,73453],"content":"Renders the control to the specified HTML writer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Renders the control to the specified HTML writer.","pos":[0,49]}]},{"pos":[73466,74015],"content":"The Render method is used primarily by control developers.       The Render method sends the Web control to the specified <xref:System.Web.UI.HtmlTextWriter> instance. Override this method to send your custom server control to the client.       The Render method first calls the <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A> method, then the <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> method, and finally the <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> method to send the control to the client.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Render method is used primarily by control developers.       The Render method sends the Web control to the specified <xref:System.Web.UI.HtmlTextWriter> instance. Override this method to send your custom server control to the client.       The Render method first calls the <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A> method, then the <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> method, and finally the <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> method to send the control to the client.","pos":[0,545],"nodes":[{"content":"The Render method is used primarily by control developers.","pos":[0,58]},{"content":"The Render method sends the Web control to the specified &lt;xref:System.Web.UI.HtmlTextWriter&gt; instance.","pos":[65,167],"source":"       The Render method sends the Web control to the specified <xref:System.Web.UI.HtmlTextWriter> instance."},{"content":"Override this method to send your custom server control to the client.","pos":[168,238]},{"content":"The Render method first calls the &lt;xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A&gt; method, then the &lt;xref:System.Web.UI.WebControls.WebControl.RenderContents%2A&gt; method, and finally the &lt;xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A&gt; method to send the control to the client.","pos":[245,545],"source":"       The Render method first calls the <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A> method, then the <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> method, and finally the <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> method to send the control to the client."}]}]},{"pos":[74203,74298],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that receives the control content.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object that receives the control content."},{"pos":[74874,74995],"content":"Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.","pos":[0,121],"nodes":[{"content":"Renders the HTML opening tag of the control to the specified writer.","pos":[0,68]},{"content":"This method is used primarily by control developers.","pos":[69,121]}]}]},{"pos":[75007,75138],"content":"This is made public so other controls can render multiple controls in between the opening and closing tags of a Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"This is made public so other controls can render multiple controls in between the opening and closing tags of a Web server control.","pos":[0,131]}]},{"pos":[75329,75452],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the output stream to render HTML content on the client.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client."},{"pos":[76036,76149],"content":"Renders the contents of the control to the specified writer. This method is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Renders the contents of the control to the specified writer. This method is used primarily by control developers.","pos":[0,113],"nodes":[{"content":"Renders the contents of the control to the specified writer.","pos":[0,60]},{"content":"This method is used primarily by control developers.","pos":[61,113]}]}]},{"pos":[76162,76573],"content":"Override the RenderContents method to render the contents of the control between the begin and end tags. The default implementation of this method renders any child controls.       If your control has child controls, you must either call the base RenderContents method or call the <xref:System.Web.UI.Control.RenderChildren%2A> at the point where you want the child controls to be rendered to the text writer.","needQuote":false,"needEscape":true,"nodes":[{"content":"Override the RenderContents method to render the contents of the control between the begin and end tags. The default implementation of this method renders any child controls.       If your control has child controls, you must either call the base RenderContents method or call the <xref:System.Web.UI.Control.RenderChildren%2A> at the point where you want the child controls to be rendered to the text writer.","pos":[0,409],"nodes":[{"content":"Override the RenderContents method to render the contents of the control between the begin and end tags.","pos":[0,104]},{"content":"The default implementation of this method renders any child controls.","pos":[105,174]},{"content":"If your control has child controls, you must either call the base RenderContents method or call the &lt;xref:System.Web.UI.Control.RenderChildren%2A&gt; at the point where you want the child controls to be rendered to the text writer.","pos":[181,409],"source":"       If your control has child controls, you must either call the base RenderContents method or call the <xref:System.Web.UI.Control.RenderChildren%2A> at the point where you want the child controls to be rendered to the text writer."}]}]},{"pos":[76768,76891],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the output stream to render HTML content on the client.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client."},{"pos":[77465,77588],"content":"Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.","pos":[0,123],"nodes":[{"content":"Renders the HTML closing tag of the control into the specified writer.","pos":[0,70]},{"content":"This method is used primarily by control developers.","pos":[71,123]}]}]},{"pos":[77600,77731],"content":"This is made public so other controls can render multiple controls in between the opening and closing tags of a Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"This is made public so other controls can render multiple controls in between the opening and closing tags of a Web server control.","pos":[0,131]}]},{"pos":[77920,78043],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the output stream to render HTML content on the client.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client."},{"pos":[78518,78636],"content":"Saves any state that was modified after the <xref:System.Web.UI.WebControls.Style.TrackViewState*> method was invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves any state that was modified after the &lt;xref:System.Web.UI.WebControls.Style.TrackViewState*&gt; method was invoked.","pos":[0,118],"source":"Saves any state that was modified after the <xref:System.Web.UI.WebControls.Style.TrackViewState*> method was invoked."}]},{"pos":[78649,79695],"content":"The SaveViewState method is used primarily by control developers.       View state is the cumulative values of the properties for a server control. These values are placed automatically in the <xref:System.Web.UI.Control.ViewState%2A> property for the server control, which is an instance of the <xref:System.Web.UI.StateBag> class. The <xref:System.Web.UI.Control.ViewState%2A> property value is then persisted to a string object after the save state stage of the life cycle for the server control. For more information, see [ASP.NET Page Life Cycle Overview](~/add/includes/ajax-current-ext-md.md).       When view state is saved, this string object is returned to the client as a variable that is stored in a hidden HTML `input` element. When you author custom server controls, you can improve efficiency by overriding the SaveViewState method and modifying the <xref:System.Web.UI.Control.ViewState%2A> property for your server control. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The SaveViewState method is used primarily by control developers.","pos":[0,65]},{"content":"View state is the cumulative values of the properties for a server control.","pos":[72,147]},{"content":"These values are placed automatically in the &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property for the server control, which is an instance of the &lt;xref:System.Web.UI.StateBag&gt; class.","pos":[148,332],"source":" These values are placed automatically in the <xref:System.Web.UI.Control.ViewState%2A> property for the server control, which is an instance of the <xref:System.Web.UI.StateBag> class."},{"content":"The &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property value is then persisted to a string object after the save state stage of the life cycle for the server control.","pos":[333,499],"source":" The <xref:System.Web.UI.Control.ViewState%2A> property value is then persisted to a string object after the save state stage of the life cycle for the server control."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Page Life Cycle Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[500,600],"source":" For more information, see [ASP.NET Page Life Cycle Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"When view state is saved, this string object is returned to the client as a variable that is stored in a hidden HTML <ph id=\"ph1\">`input`</ph> element.","pos":[607,740],"source":"       When view state is saved, this string object is returned to the client as a variable that is stored in a hidden HTML `input` element."},{"content":"When you author custom server controls, you can improve efficiency by overriding the SaveViewState method and modifying the &lt;xref:System.Web.UI.Control.ViewState%2A&gt; property for your server control.","pos":[741,940],"source":" When you author custom server controls, you can improve efficiency by overriding the SaveViewState method and modifying the <xref:System.Web.UI.Control.ViewState%2A> property for your server control."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET State Management Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[941,1042],"source":" For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[79840,80030],"content":"An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[80467,80513],"content":"Gets or sets the skin to apply to the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the skin to apply to the control.","pos":[0,46]}]},{"pos":[80526,81530],"content":"Skins available to a control are contained in one or more skin files in a theme directory. The SkinID property specifies which of these skins to apply to the control. A skin is specific to a particular control; you cannot share skin setting between controls of different types.       If you do not set the SkinID property, a control uses the default skin if one is defined. For example, if a skin without an ID is defined for an <xref:System.Web.UI.WebControls.Image> control, then that skin applies to all <xref:System.Web.UI.WebControls.Image> controls that do not explicitly reference a skin by ID and that are not set to disable theming. If a skin with an ID is defined for an <xref:System.Web.UI.WebControls.Image> control, then that skin applies to only <xref:System.Web.UI.WebControls.Image> controls whose SkinID is set to that ID.       If the skin files in a theme directory do not contain a skin with the specified SkinID, an <xref:System.ArgumentException> exception is thrown at runtime.","needQuote":false,"needEscape":true,"nodes":[{"content":"Skins available to a control are contained in one or more skin files in a theme directory. The SkinID property specifies which of these skins to apply to the control. A skin is specific to a particular control; you cannot share skin setting between controls of different types.       If you do not set the SkinID property, a control uses the default skin if one is defined. For example, if a skin without an ID is defined for an <xref:System.Web.UI.WebControls.Image> control, then that skin applies to all <xref:System.Web.UI.WebControls.Image> controls that do not explicitly reference a skin by ID and that are not set to disable theming. If a skin with an ID is defined for an <xref:System.Web.UI.WebControls.Image> control, then that skin applies to only <xref:System.Web.UI.WebControls.Image> controls whose SkinID is set to that ID.       If the skin files in a theme directory do not contain a skin with the specified SkinID, an <xref:System.ArgumentException> exception is thrown at runtime.","pos":[0,1000],"nodes":[{"content":"Skins available to a control are contained in one or more skin files in a theme directory.","pos":[0,90]},{"content":"The SkinID property specifies which of these skins to apply to the control.","pos":[91,166]},{"content":"A skin is specific to a particular control; you cannot share skin setting between controls of different types.","pos":[167,277]},{"content":"If you do not set the SkinID property, a control uses the default skin if one is defined.","pos":[284,373]},{"content":"For example, if a skin without an ID is defined for an &lt;xref:System.Web.UI.WebControls.Image&gt; control, then that skin applies to all &lt;xref:System.Web.UI.WebControls.Image&gt; controls that do not explicitly reference a skin by ID and that are not set to disable theming.","pos":[374,641],"source":" For example, if a skin without an ID is defined for an <xref:System.Web.UI.WebControls.Image> control, then that skin applies to all <xref:System.Web.UI.WebControls.Image> controls that do not explicitly reference a skin by ID and that are not set to disable theming."},{"content":"If a skin with an ID is defined for an &lt;xref:System.Web.UI.WebControls.Image&gt; control, then that skin applies to only &lt;xref:System.Web.UI.WebControls.Image&gt; controls whose SkinID is set to that ID.","pos":[642,839],"source":" If a skin with an ID is defined for an <xref:System.Web.UI.WebControls.Image> control, then that skin applies to only <xref:System.Web.UI.WebControls.Image> controls whose SkinID is set to that ID."},{"content":"If the skin files in a theme directory do not contain a skin with the specified SkinID, an &lt;xref:System.ArgumentException&gt; exception is thrown at runtime.","pos":[846,1000],"source":"       If the skin files in a theme directory do not contain a skin with the specified SkinID, an <xref:System.ArgumentException> exception is thrown at runtime."}]}]},{"pos":[81656,81738],"content":"The name of the skin to apply to the control. The default is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the skin to apply to the control. The default is <xref:System.String>.","pos":[0,82],"nodes":[{"content":"The name of the skin to apply to the control.","pos":[0,45]},{"content":"The default is &lt;xref:System.String&gt;.","pos":[46,82],"source":" The default is <xref:System.String>."}]}]},{"pos":[81904,81974],"content":"The skin specified in the SkinID property does not exist in the theme.","needQuote":true,"needEscape":true,"nodes":[{"content":"The skin specified in the SkinID property does not exist in the theme.","pos":[0,70]}]},{"pos":[82325,82448],"content":"Gets a collection of text attributes that will be rendered as a style attribute on the outer tag of the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of text attributes that will be rendered as a style attribute on the outer tag of the Web server control.","pos":[0,123]}]},{"pos":[82461,83015],"content":"Use the Style collection to manage the style attributes rendered in the outer tag of the Web server control. This property will render on all browsers for all controls.      > [!NOTE] >  Browsers that do not support style attributes will ignore the rendered HTML.       Any style values set through the strongly typed style properties (for example, `BackColor=\"Red\"`) will automatically override a corresponding value in this collection.       Values set in this collection are not automatically reflected by the strongly typed style properties.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Style collection to manage the style attributes rendered in the outer tag of the Web server control.","pos":[0,108]},{"content":"This property will render on all browsers for all controls.","pos":[109,168]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Browsers that do not support style attributes will ignore the rendered HTML.","pos":[174,263],"source":"      > [!NOTE] >  Browsers that do not support style attributes will ignore the rendered HTML."},{"content":"Any style values set through the strongly typed style properties (for example, <ph id=\"ph1\">`BackColor=\"Red\"`</ph>) will automatically override a corresponding value in this collection.","pos":[270,437],"source":"       Any style values set through the strongly typed style properties (for example, `BackColor=\"Red\"`) will automatically override a corresponding value in this collection."},{"content":"Values set in this collection are not automatically reflected by the strongly typed style properties.","pos":[444,545]}]},{"pos":[83931,84080],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.CssStyleCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the HTML style attributes to render on the outer tag of the Web server control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.CssStyleCollection\"></xref> that contains the HTML style attributes to render on the outer tag of the Web server control."},{"pos":[84604,84938],"content":"Gets a value that indicates whether the control should set the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_disabled\" name=\"disabled\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attribute of the rendered HTML element to \"disabled\" when the control's &lt;xref:System.Web.UI.WebControls.WebControl.IsEnabled*&gt; property is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the control should set the <xref uid=\"langword_csharp_disabled\" name=\"disabled\" href=\"\"></xref> attribute of the rendered HTML element to \"disabled\" when the control's <xref:System.Web.UI.WebControls.WebControl.IsEnabled*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[84951,89387],"content":"In derived classes, this property indicates how ASP.NET should render HTML for a control when the control is disabled.      ## Disabling ASP.NET Web Controls    When the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property of an ASP.NET control is set to `false` (that is, when the control is disabled), the intent is that ASP.NET should render the control in the page, but display it in a disabled state (typically dimmed). If a parent control is disabled, children of that control are also displayed as disabled. In that case, the child control's <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> property is set to `false`, even though its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property might be set to `true`.       In ASP.NET 3.5 and earlier versions, when a control's <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> property is `false`, ASP.NET sets the `disabled` attribute to \"disabled\" in the HTML element that it renders for the control. However, the HTML 4.01 standard allows the `disabled` attribute only on certain elements that are used for user input. For example, the `disabled` attribute is allowed for `input` elements, but not for `span` elements.       Most browsers support a default disabled appearance for display-only elements that have `disabled` attributes. However, in order to comply with HTML standards, by default ASP.NET 4 omits invalid attributes.      ## How the SupportsDisabledAttribute Property is Used    If the SupportsDisabledAttribute property is `true`, ASP.NET renders a `disabled` attribute when the control is disabled. If this property is `false`, ASP.NET renders a `class` attribute when the control is disabled.       Derived classes override this property to return `false` if all the following conditions are true:      -   The control renders an HTML element that does not support the `disabled` attribute.      -   The <xref:System.Web.UI.Control.RenderingCompatibility%2A> property indicates an ASP.NET version number lower than 4.0.       The SupportsDisabledAttribute property does not necessarily indicate whether the HTML element that is rendered for a control supports (allows) the `disabled` attribute. If a control's <xref:System.Web.UI.Control.RenderingCompatibility%2A> property indicates an ASP.NET version number lower than 4.0, the value of the control's SupportsDisabledAttribute property might return `true` even if the rendered HTML does not support the `disabled` attribute.      ## Backward Compatibility for Disabled Controls    When you use Visual Studio to upgrade a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the `controlRenderingCompatibilityVersion` attribute in the Web.config file (which sets the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property) to the earlier version number. Because the SupportsDisabledAttribute property always returns `true` when the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property is lower than 4.0, this causes Web controls to render HTML for disabled controls as they did in the earlier version. If you want an upgraded Web site to render HTML using the algorithm introduced in ASP.NET 4, you can change or remove the `controlRenderingCompatibilityVersion` attribute. For more information, see the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property.      ## Setting a Disabled Appearance By Using CSS    If the SupportsDisabledAttribute property of a control is `false` and the control is disabled, ASP.NET sets the `class` attribute of the rendered HTML element to the value of the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName> property. The default value of the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName> property is \"aspNetDisabled\".       To provide a disabled appearance for disabled controls, you must define a CSS rule for the class that is represented by the value of the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName> property.       The HTML element that is rendered for a control might have more than one value in its `class` attribute if there is a value in its <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property. For more information, see the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"In derived classes, this property indicates how ASP.NET should render HTML for a control when the control is disabled.","pos":[0,118]},{"content":"Disabling ASP.NET Web Controls    When the &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt; property of an ASP.NET control is set to <ph id=\"ph1\">`false`</ph> (that is, when the control is disabled), the intent is that ASP.NET should render the control in the page, but display it in a disabled state (typically dimmed).","pos":[127,435],"source":"      ## Disabling ASP.NET Web Controls    When the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property of an ASP.NET control is set to `false` (that is, when the control is disabled), the intent is that ASP.NET should render the control in the page, but display it in a disabled state (typically dimmed)."},{"content":"If a parent control is disabled, children of that control are also displayed as disabled.","pos":[436,525]},{"content":"In that case, the child control's &lt;xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A&gt; property is set to <ph id=\"ph1\">`false`</ph>, even though its &lt;xref:System.Web.UI.WebControls.WebControl.Enabled%2A&gt; property might be set to <ph id=\"ph2\">`true`</ph>.","pos":[526,748],"source":" In that case, the child control's <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> property is set to `false`, even though its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property might be set to `true`."},{"content":"In ASP.NET 3.5 and earlier versions, when a control's &lt;xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A&gt; property is <ph id=\"ph1\">`false`</ph>, ASP.NET sets the <ph id=\"ph2\">`disabled`</ph> attribute to \"disabled\" in the HTML element that it renders for the control.","pos":[755,991],"source":"       In ASP.NET 3.5 and earlier versions, when a control's <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> property is `false`, ASP.NET sets the `disabled` attribute to \"disabled\" in the HTML element that it renders for the control."},{"content":"However, the HTML 4.01 standard allows the <ph id=\"ph1\">`disabled`</ph> attribute only on certain elements that are used for user input.","pos":[992,1110],"source":" However, the HTML 4.01 standard allows the `disabled` attribute only on certain elements that are used for user input."},{"content":"For example, the <ph id=\"ph1\">`disabled`</ph> attribute is allowed for <ph id=\"ph2\">`input`</ph> elements, but not for <ph id=\"ph3\">`span`</ph> elements.","pos":[1111,1210],"source":" For example, the `disabled` attribute is allowed for `input` elements, but not for `span` elements."},{"content":"Most browsers support a default disabled appearance for display-only elements that have <ph id=\"ph1\">`disabled`</ph> attributes.","pos":[1217,1327],"source":"       Most browsers support a default disabled appearance for display-only elements that have `disabled` attributes."},{"content":"However, in order to comply with HTML standards, by default ASP.NET 4 omits invalid attributes.","pos":[1328,1423]},{"content":"How the SupportsDisabledAttribute Property is Used    If the SupportsDisabledAttribute property is <ph id=\"ph1\">`true`</ph>, ASP.NET renders a <ph id=\"ph2\">`disabled`</ph> attribute when the control is disabled.","pos":[1432,1607],"source":"      ## How the SupportsDisabledAttribute Property is Used    If the SupportsDisabledAttribute property is `true`, ASP.NET renders a `disabled` attribute when the control is disabled."},{"content":"If this property is <ph id=\"ph1\">`false`</ph>, ASP.NET renders a <ph id=\"ph2\">`class`</ph> attribute when the control is disabled.","pos":[1608,1702],"source":" If this property is `false`, ASP.NET renders a `class` attribute when the control is disabled."},{"content":"Derived classes override this property to return <ph id=\"ph1\">`false`</ph> if all the following conditions are true:      -   The control renders an HTML element that does not support the <ph id=\"ph2\">`disabled`</ph> attribute.","pos":[1709,1900],"source":"       Derived classes override this property to return `false` if all the following conditions are true:      -   The control renders an HTML element that does not support the `disabled` attribute."},{"content":"-   The &lt;xref:System.Web.UI.Control.RenderingCompatibility%2A&gt; property indicates an ASP.NET version number lower than 4.0.","pos":[1906,2029],"source":"      -   The <xref:System.Web.UI.Control.RenderingCompatibility%2A> property indicates an ASP.NET version number lower than 4.0."},{"content":"The SupportsDisabledAttribute property does not necessarily indicate whether the HTML element that is rendered for a control supports (allows) the <ph id=\"ph1\">`disabled`</ph> attribute.","pos":[2036,2204],"source":"       The SupportsDisabledAttribute property does not necessarily indicate whether the HTML element that is rendered for a control supports (allows) the `disabled` attribute."},{"content":"If a control's &lt;xref:System.Web.UI.Control.RenderingCompatibility%2A&gt; property indicates an ASP.NET version number lower than 4.0, the value of the control's SupportsDisabledAttribute property might return <ph id=\"ph1\">`true`</ph> even if the rendered HTML does not support the <ph id=\"ph2\">`disabled`</ph> attribute.","pos":[2205,2486],"source":" If a control's <xref:System.Web.UI.Control.RenderingCompatibility%2A> property indicates an ASP.NET version number lower than 4.0, the value of the control's SupportsDisabledAttribute property might return `true` even if the rendered HTML does not support the `disabled` attribute."},{"content":"Backward Compatibility for Disabled Controls    When you use Visual Studio to upgrade a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the <ph id=\"ph1\">`controlRenderingCompatibilityVersion`</ph> attribute in the Web.config file (which sets the &lt;xref:System.Web.UI.Control.RenderingCompatibility%2A&gt; property) to the earlier version number.","pos":[2495,2853],"source":"      ## Backward Compatibility for Disabled Controls    When you use Visual Studio to upgrade a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the `controlRenderingCompatibilityVersion` attribute in the Web.config file (which sets the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property) to the earlier version number."},{"content":"Because the SupportsDisabledAttribute property always returns <ph id=\"ph1\">`true`</ph> when the &lt;xref:System.Web.UI.Control.RenderingCompatibility%2A&gt; property is lower than 4.0, this causes Web controls to render HTML for disabled controls as they did in the earlier version.","pos":[2854,3112],"source":" Because the SupportsDisabledAttribute property always returns `true` when the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property is lower than 4.0, this causes Web controls to render HTML for disabled controls as they did in the earlier version."},{"content":"If you want an upgraded Web site to render HTML using the algorithm introduced in ASP.NET 4, you can change or remove the <ph id=\"ph1\">`controlRenderingCompatibilityVersion`</ph> attribute.","pos":[3113,3284],"source":" If you want an upgraded Web site to render HTML using the algorithm introduced in ASP.NET 4, you can change or remove the `controlRenderingCompatibilityVersion` attribute."},{"content":"For more information, see the &lt;xref:System.Web.UI.Control.RenderingCompatibility%2A&gt; property.","pos":[3285,3379],"source":" For more information, see the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property."},{"content":"Setting a Disabled Appearance By Using CSS    If the SupportsDisabledAttribute property of a control is <ph id=\"ph1\">`false`</ph> and the control is disabled, ASP.NET sets the <ph id=\"ph2\">`class`</ph> attribute of the rendered HTML element to the value of the &lt;xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName&gt; property.","pos":[3388,3711],"source":"      ## Setting a Disabled Appearance By Using CSS    If the SupportsDisabledAttribute property of a control is `false` and the control is disabled, ASP.NET sets the `class` attribute of the rendered HTML element to the value of the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName> property."},{"content":"The default value of the &lt;xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName&gt; property is \"aspNetDisabled\".","pos":[3712,3855],"source":" The default value of the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName> property is \"aspNetDisabled\"."},{"content":"To provide a disabled appearance for disabled controls, you must define a CSS rule for the class that is represented by the value of the &lt;xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName&gt; property.","pos":[3862,4097],"source":"       To provide a disabled appearance for disabled controls, you must define a CSS rule for the class that is represented by the value of the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName> property."},{"content":"The HTML element that is rendered for a control might have more than one value in its <ph id=\"ph1\">`class`</ph> attribute if there is a value in its &lt;xref:System.Web.UI.WebControls.WebControl.CssClass%2A&gt; property.","pos":[4104,4300],"source":"       The HTML element that is rendered for a control might have more than one value in its `class` attribute if there is a value in its <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property."},{"content":"For more information, see the &lt;xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A&gt; property.","pos":[4301,4404],"source":" For more information, see the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> property."}]},{"pos":[90224,90292],"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[91002,91063],"content":"Gets an attribute of the Web control with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an attribute of the Web control with the specified name.","pos":[0,61]}]},{"pos":[91075,91325],"content":"The IAttributeAccessor.GetAttribute method is an explicit interface member implementation. It can be used only when the instance of the <xref:System.Web.UI.WebControls.WebControl> class is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IAttributeAccessor.GetAttribute method is an explicit interface member implementation. It can be used only when the instance of the <xref:System.Web.UI.WebControls.WebControl> class is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.","pos":[0,250],"nodes":[{"content":"The IAttributeAccessor.GetAttribute method is an explicit interface member implementation.","pos":[0,90]},{"content":"It can be used only when the instance of the &lt;xref:System.Web.UI.WebControls.WebControl&gt; class is cast to an &lt;xref:System.Web.UI.IAttributeAccessor&gt; interface.","pos":[91,250],"source":" It can be used only when the instance of the <xref:System.Web.UI.WebControls.WebControl> class is cast to an <xref:System.Web.UI.IAttributeAccessor> interface."}]}]},{"pos":[91479,91505],"content":"The name of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute.","pos":[0,26]}]},{"pos":[91563,91590],"content":"The value of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the attribute.","pos":[0,27]}]},{"pos":[92369,92438],"content":"Sets an attribute of the Web control to the specified name and value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets an attribute of the Web control to the specified name and value.","pos":[0,69]}]},{"pos":[92450,92700],"content":"The IAttributeAccessor.SetAttribute method is an explicit interface member implementation. It can be used only when the instance of the <xref:System.Web.UI.WebControls.WebControl> class is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IAttributeAccessor.SetAttribute method is an explicit interface member implementation. It can be used only when the instance of the <xref:System.Web.UI.WebControls.WebControl> class is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.","pos":[0,250],"nodes":[{"content":"The IAttributeAccessor.SetAttribute method is an explicit interface member implementation.","pos":[0,90]},{"content":"It can be used only when the instance of the &lt;xref:System.Web.UI.WebControls.WebControl&gt; class is cast to an &lt;xref:System.Web.UI.IAttributeAccessor&gt; interface.","pos":[91,250],"source":" It can be used only when the instance of the <xref:System.Web.UI.WebControls.WebControl> class is cast to an <xref:System.Web.UI.IAttributeAccessor> interface."}]}]},{"pos":[92866,92920],"content":"The name component of the attribute's name/value pair.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name component of the attribute's name/value pair.","pos":[0,54]}]},{"pos":[92982,93037],"content":"The value component of the attribute's name/value pair.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value component of the attribute's name/value pair.","pos":[0,55]}]},{"pos":[93516,93569],"content":"Gets or sets the tab index of the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the tab index of the Web server control.","pos":[0,53]}]},{"pos":[93582,94670],"content":"Use the TabIndex property to specify or determine the tab index of a Web server control on the Web Forms page. When you press the `Tab` key, the order in which the Web server controls receive focus is determined by the TabIndex property of each control. When a page is initially loaded, the first item that receives focus when the `Tab` key is pressed is the address bar. Next, the controls on the Web Forms page are tabbed to in ascending order, based on the value of the TabIndex property of each control, starting with the smallest positive, nonzero value. If multiple controls share the same tab index, the controls will receive focus in the order they are declared on the Web Forms page. Finally, controls that have a tab index of zero are tabbed to in the order they are declared.      > [!NOTE] >  Only controls with a nonzero tab index will render the `tabindex` attribute.       You can remove a Web Server control from the tab order by setting the TabIndex property to a negative value.      > [!NOTE] >  This property is supported only in Internet Explorer 4 and later.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the TabIndex property to specify or determine the tab index of a Web server control on the Web Forms page.","pos":[0,110]},{"content":"When you press the <ph id=\"ph1\">`Tab`</ph> key, the order in which the Web server controls receive focus is determined by the TabIndex property of each control.","pos":[111,253],"source":" When you press the `Tab` key, the order in which the Web server controls receive focus is determined by the TabIndex property of each control."},{"content":"When a page is initially loaded, the first item that receives focus when the <ph id=\"ph1\">`Tab`</ph> key is pressed is the address bar.","pos":[254,371],"source":" When a page is initially loaded, the first item that receives focus when the `Tab` key is pressed is the address bar."},{"content":"Next, the controls on the Web Forms page are tabbed to in ascending order, based on the value of the TabIndex property of each control, starting with the smallest positive, nonzero value.","pos":[372,559]},{"content":"If multiple controls share the same tab index, the controls will receive focus in the order they are declared on the Web Forms page.","pos":[560,692]},{"content":"Finally, controls that have a tab index of zero are tabbed to in the order they are declared.","pos":[693,786]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Only controls with a nonzero tab index will render the <ph id=\"ph2\">`tabindex`</ph> attribute.","pos":[792,881],"source":"      > [!NOTE] >  Only controls with a nonzero tab index will render the `tabindex` attribute."},{"content":"You can remove a Web Server control from the tab order by setting the TabIndex property to a negative value.","pos":[888,996]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property is supported only in Internet Explorer 4 and later.","pos":[1002,1080],"source":"      > [!NOTE] >  This property is supported only in Internet Explorer 4 and later."}]},{"pos":[95889,96047],"content":"The tab index of the Web server control. The default is <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>, which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tab index of the Web server control.","pos":[0,40]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that this property is not set.","pos":[41,158],"source":" The default is <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>, which indicates that this property is not set."}]},{"pos":[96235,96291],"content":"The specified tab index is not between -32768 and 32767.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified tab index is not between -32768 and 32767.","pos":[0,56]}]},{"pos":[96647,96814],"content":"Gets the <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> value that corresponds to this Web server control. This property is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriterTag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to this Web server control.","pos":[0,112],"source":"Gets the <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> value that corresponds to this Web server control."},{"content":"This property is used primarily by control developers.","pos":[113,167]}]},{"pos":[96826,97015],"content":"Use the TagKey property to determine the <xref:System.Web.UI.HtmlTextWriterTag> value that is associated with this Web server control. This property is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the TagKey property to determine the <xref:System.Web.UI.HtmlTextWriterTag> value that is associated with this Web server control. This property is used primarily by control developers.","pos":[0,189],"nodes":[{"content":"Use the TagKey property to determine the &lt;xref:System.Web.UI.HtmlTextWriterTag&gt; value that is associated with this Web server control.","pos":[0,134],"source":"Use the TagKey property to determine the <xref:System.Web.UI.HtmlTextWriterTag> value that is associated with this Web server control."},{"content":"This property is used primarily by control developers.","pos":[135,189]}]}]},{"pos":[97180,97263],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriterTag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> enumeration values."},{"pos":[97698,97786],"content":"Gets the name of the control tag. This property is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the control tag. This property is used primarily by control developers.","pos":[0,88],"nodes":[{"content":"Gets the name of the control tag.","pos":[0,33]},{"content":"This property is used primarily by control developers.","pos":[34,88]}]}]},{"pos":[97798,97959],"content":"Use the TagName property to determine the name of the control tag associated with this Web server control. This property is used primarily by control developers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the TagName property to determine the name of the control tag associated with this Web server control. This property is used primarily by control developers.","pos":[0,161],"nodes":[{"content":"Use the TagName property to determine the name of the control tag associated with this Web server control.","pos":[0,106]},{"content":"This property is used primarily by control developers.","pos":[107,161]}]}]},{"pos":[98082,98110],"content":"The name of the control tag.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the control tag.","pos":[0,28]}]},{"pos":[98546,98636],"content":"Gets or sets the text displayed when the mouse pointer hovers over the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text displayed when the mouse pointer hovers over the Web server control.","pos":[0,90]}]},{"pos":[98649,99242],"content":"Use the ToolTip property to specify the custom text that is displayed when the mouse pointer hovers over the Web server control.      > [!NOTE] >  This property is rendered for all browsers. However, only Microsoft Internet Explorer will display this property as a ToolTip. All other browsers will ignore this property.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the ToolTip property to specify the custom text that is displayed when the mouse pointer hovers over the Web server control.","pos":[0,128]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property is rendered for all browsers.","pos":[134,190],"source":"      > [!NOTE] >  This property is rendered for all browsers."},{"content":"However, only Microsoft Internet Explorer will display this property as a ToolTip.","pos":[191,273]},{"content":"All other browsers will ignore this property.","pos":[274,319]},{"content":"The value of this property, when set, can be saved automatically to a resource file by using a designer tool.","pos":[326,435]},{"content":"For more information, see &lt;xref:System.ComponentModel.LocalizableAttribute&gt; and <bpt id=\"p1\">[</bpt>Globalization and Localization<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[436,588],"source":" For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[100195,100340],"content":"The text displayed when the mouse pointer hovers over the Web server control. The default is &lt;xref:System.String?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text displayed when the mouse pointer hovers over the Web server control. The default is &lt;xref:System.String?displayProperty=fullName&gt;.","pos":[0,145],"nodes":[{"content":"The text displayed when the mouse pointer hovers over the Web server control.","pos":[0,77]},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[78,145],"source":" The default is &lt;xref:System.String?displayProperty=fullName&gt;."}]}]},{"pos":[100815,100956],"content":"Causes the control to track changes to its view state so they can be stored in the object's <xref:System.Web.UI.Control.ViewState*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes the control to track changes to its view state so they can be stored in the object's &lt;xref:System.Web.UI.Control.ViewState*&gt; property.","pos":[0,141],"source":"Causes the control to track changes to its view state so they can be stored in the object's <xref:System.Web.UI.Control.ViewState*> property."}]},{"pos":[100969,101267],"content":"The TrackViewState method is used primarily by control developers.       The TrackViewState marks the starting point at which to begin tracking and saving changes to the view state for the control. The TrackViewState method is called automatically by ASP.NET when a server control is initialized.","needQuote":false,"needEscape":true,"nodes":[{"content":"The TrackViewState method is used primarily by control developers.       The TrackViewState marks the starting point at which to begin tracking and saving changes to the view state for the control. The TrackViewState method is called automatically by ASP.NET when a server control is initialized.","pos":[0,296],"nodes":[{"content":"The TrackViewState method is used primarily by control developers.","pos":[0,66]},{"content":"The TrackViewState marks the starting point at which to begin tracking and saving changes to the view state for the control.","pos":[73,197]},{"content":"The TrackViewState method is called automatically by ASP.NET when a server control is initialized.","pos":[198,296]}]}]},{"pos":[101786,101835],"content":"Gets or sets the width of the Web server control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the width of the Web server control.","pos":[0,49]}]},{"pos":[101848,103397],"content":"Use the Width property to specify the width of the Web server control.      > [!NOTE] >  This property does not render for all controls in browsers earlier than Microsoft Internet Explorer version 4. Controls that do not render this property in earlier browsers include <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>, and any validation controls. The <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> and <xref:System.Web.UI.WebControls.DataList> also do not render this property in earlier browsers when their `RepeatLayout` property is set to `RepeatLayout.Flow`. Furthermore, only unit types of `Pixel` and `Percentage` are supported in earlier browsers.       Because this property is nonstandard HTML, Web server controls that display as a table, such as <xref:System.Web.UI.WebControls.Table> and <xref:System.Web.UI.WebControls.DataGrid>, do not support this property in browsers earlier than Microsoft Internet Explorer version 4.      > [!NOTE] >  To set the Width property declaratively to a unit type other than the default of `Pixel`, you must create a new unit type specific to the unit type you want. For example, to set a control's Width property to a percentage value of 100, you could do the following:   >    >  `myWebControl.width = Unit.Percentage(100);`   >    >  For more information on the unit types available for the Width property, see the <xref:System.Web.UI.WebControls.Unit> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Width property to specify the width of the Web server control.","pos":[0,70]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property does not render for all controls in browsers earlier than Microsoft Internet Explorer version 4.","pos":[76,199],"source":"      > [!NOTE] >  This property does not render for all controls in browsers earlier than Microsoft Internet Explorer version 4."},{"content":"Controls that do not render this property in earlier browsers include &lt;xref:System.Web.UI.WebControls.Label&gt;, &lt;xref:System.Web.UI.WebControls.HyperLink&gt;, &lt;xref:System.Web.UI.WebControls.LinkButton&gt;, and any validation controls.","pos":[200,427],"source":" Controls that do not render this property in earlier browsers include <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>, and any validation controls."},{"content":"The &lt;xref:System.Web.UI.WebControls.CheckBoxList&gt;, &lt;xref:System.Web.UI.WebControls.RadioButtonList&gt; and &lt;xref:System.Web.UI.WebControls.DataList&gt; also do not render this property in earlier browsers when their <ph id=\"ph1\">`RepeatLayout`</ph> property is set to <ph id=\"ph2\">`RepeatLayout.Flow`</ph>.","pos":[428,692],"source":" The <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> and <xref:System.Web.UI.WebControls.DataList> also do not render this property in earlier browsers when their `RepeatLayout` property is set to `RepeatLayout.Flow`."},{"content":"Furthermore, only unit types of <ph id=\"ph1\">`Pixel`</ph> and <ph id=\"ph2\">`Percentage`</ph> are supported in earlier browsers.","pos":[693,784],"source":" Furthermore, only unit types of `Pixel` and `Percentage` are supported in earlier browsers."},{"content":"Because this property is nonstandard HTML, Web server controls that display as a table, such as &lt;xref:System.Web.UI.WebControls.Table&gt; and &lt;xref:System.Web.UI.WebControls.DataGrid&gt;, do not support this property in browsers earlier than Microsoft Internet Explorer version 4.","pos":[791,1065],"source":"       Because this property is nonstandard HTML, Web server controls that display as a table, such as <xref:System.Web.UI.WebControls.Table> and <xref:System.Web.UI.WebControls.DataGrid>, do not support this property in browsers earlier than Microsoft Internet Explorer version 4."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To set the Width property declaratively to a unit type other than the default of <ph id=\"ph2\">`Pixel`</ph>, you must create a new unit type specific to the unit type you want.","pos":[1071,1241],"source":"      > [!NOTE] >  To set the Width property declaratively to a unit type other than the default of `Pixel`, you must create a new unit type specific to the unit type you want."},{"content":"For example, to set a control's Width property to a percentage value of 100, you could do the following:   &gt;    &gt;  <ph id=\"ph1\">`myWebControl.width = Unit.Percentage(100);`</ph>   &gt;    &gt;  For more information on the unit types available for the Width property, see the &lt;xref:System.Web.UI.WebControls.Unit&gt; class.","pos":[1242,1537],"source":" For example, to set a control's Width property to a percentage value of 100, you could do the following:   >    >  `myWebControl.width = Unit.Percentage(100);`   >    >  For more information on the unit types available for the Width property, see the <xref:System.Web.UI.WebControls.Unit> class."}]},{"pos":[104020,104183],"content":"A <xref href=\"System.Web.UI.WebControls.Unit\"></xref> that represents the width of the control. The default is <xref href=\"System.Web.UI.WebControls.Unit\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Unit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the width of the control.","pos":[0,95],"source":"A <xref href=\"System.Web.UI.WebControls.Unit\"></xref> that represents the width of the control."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Unit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[96,163],"source":" The default is <xref href=\"System.Web.UI.WebControls.Unit\"></xref>."}]},{"pos":[104348,104412],"content":"The width of the Web server control was set to a negative value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the Web server control was set to a negative value.","pos":[0,64]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.WebControl\n  id: WebControl\n  children:\n  - System.Web.UI.WebControls.WebControl.#ctor\n  - System.Web.UI.WebControls.WebControl.#ctor(System.String)\n  - System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)\n  - System.Web.UI.WebControls.WebControl.AccessKey\n  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.Attributes\n  - System.Web.UI.WebControls.WebControl.BackColor\n  - System.Web.UI.WebControls.WebControl.BorderColor\n  - System.Web.UI.WebControls.WebControl.BorderStyle\n  - System.Web.UI.WebControls.WebControl.BorderWidth\n  - System.Web.UI.WebControls.WebControl.ControlStyle\n  - System.Web.UI.WebControls.WebControl.ControlStyleCreated\n  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)\n  - System.Web.UI.WebControls.WebControl.CreateControlStyle\n  - System.Web.UI.WebControls.WebControl.CssClass\n  - System.Web.UI.WebControls.WebControl.DisabledCssClass\n  - System.Web.UI.WebControls.WebControl.Enabled\n  - System.Web.UI.WebControls.WebControl.EnableTheming\n  - System.Web.UI.WebControls.WebControl.Font\n  - System.Web.UI.WebControls.WebControl.ForeColor\n  - System.Web.UI.WebControls.WebControl.HasAttributes\n  - System.Web.UI.WebControls.WebControl.Height\n  - System.Web.UI.WebControls.WebControl.IsEnabled\n  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.SaveViewState\n  - System.Web.UI.WebControls.WebControl.SkinID\n  - System.Web.UI.WebControls.WebControl.Style\n  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  - System.Web.UI.WebControls.WebControl.TabIndex\n  - System.Web.UI.WebControls.WebControl.TagKey\n  - System.Web.UI.WebControls.WebControl.TagName\n  - System.Web.UI.WebControls.WebControl.ToolTip\n  - System.Web.UI.WebControls.WebControl.TrackViewState\n  - System.Web.UI.WebControls.WebControl.Width\n  langs:\n  - csharp\n  name: WebControl\n  nameWithType: WebControl\n  fullName: System.Web.UI.WebControls.WebControl\n  type: Class\n  summary: Serves as the base class that defines the methods, properties and events common to all controls in the <xref href=\"System.Web.UI.WebControls\"></xref> namespace.\n  remarks: \"The WebControl class provides the properties, methods, and events that are common to all Web server controls. You can control the appearance and behavior of a Web server control by setting properties defined in this class. For example, the background color and font color of a control are controlled by using the <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> and <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> properties, respectively. On controls that can display a border, you can control the border width, the border style, and the border color by setting the <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>, <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>, and <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> properties. The size of a Web server control can be specified by using the <xref:System.Web.UI.WebControls.WebControl.Height%2A> and <xref:System.Web.UI.WebControls.WebControl.Width%2A> properties.  \\n  \\n The behavior of the control can be specified by setting certain properties. You can enable and disable a control by setting the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property. The place of the control in the tab order is controlled by setting the <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> property. You can specify a ToolTip for the control by setting the <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> property.  \\n  \\n> [!NOTE]\\n>  Not all controls support every property defined in this class. For specific information about whether a property is supported, see the documentation for the specific control.  \\n  \\n> [!NOTE]\\n>  Some properties in this class render differently, depending on the browser. Some properties do not render at all, while others render, but have no effect. The <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object determines the way in which a Web server control renders. For browsers that support HTML 4.0, the <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> property will contain a regular <xref:System.Web.HttpBrowserCapabilities> object, and most properties will be rendered using HTML 4.0 style attributes. Browsers that are not known to support HTML 4.0 will use the <xref:System.Web.UI.Html32TextWriter> object. This will automatically map the style attributes to any relevant HTML 3.2 tag attributes. In some cases, such as with the <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> property, the style attributes will be converted into additional tags, such as `<font>` tags. In some cases, there will be no mapping performed. For specific information about how a property is rendered in different browsers, see the documentation for the specific property.  \\n  \\n For a list of initial property values for an instance of WebControl, see the <xref:System.Web.UI.WebControls.WebControl.%23ctor%2A> constructor.\"\n  example:\n  - >-\n    [!code-cs[WebControlAddAttributesToRender#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_324_1.cs)]\n     [!code-vb[WebControlAddAttributesToRender#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_324_1.vb)]\n  syntax:\n    content: >-\n      [System.Web.UI.ParseChildren(true)]\n\n      [System.Web.UI.PersistChildren(false)]\n\n      [System.Web.UI.Themeable(true)]\n\n      public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  implements:\n  - System.Web.UI.IAttributeAccessor\n  inheritedMembers:\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.Controls\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.CreateControlCollection\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String)\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnInit(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OnPreRender(System.EventArgs)\n  - System.Web.UI.Control.OnUnload(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.Control.Visible\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: WebControl()\n  nameWithType: WebControl.WebControl()\n  fullName: System.Web.UI.WebControls.WebControl.WebControl()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> class that represents a <xref uid=\"langword_csharp_Span\" name=\"Span\" href=\"\"></xref> HTML tag.\n  remarks: \"This constructor is used to initialize a new instance of the <xref:System.Web.UI.WebControls.WebControl> class that represents a `Span` HTML element.  \\n  \\n The following table shows the initial property value for an instance of <xref:System.Web.UI.WebControls.WebControl>.  \\n  \\n|Property|Initial Value|  \\n|--------------|-------------------|  \\n|`TagKey`|The <xref:System.Web.UI.HtmlTextWriterTag> enumeration value.|  \\n  \\n> [!NOTE]\\n>  This constructor is not called directly. Instead, it is often called by the constructor of a derived class to initialize the <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> property to the <xref:System.Web.UI.HtmlTextWriterTag> enumeration value.\"\n  syntax:\n    content: protected WebControl ();\n    parameters: []\n  overload: System.Web.UI.WebControls.WebControl.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: WebControl(String)\n  nameWithType: WebControl.WebControl(String)\n  fullName: System.Web.UI.WebControls.WebControl.WebControl(String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> class using the specified HTML tag.\n  remarks: \"Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.WebControl> class using the specified HTML tag.  \\n  \\n The following table shows initial property values for an instance of <xref:System.Web.UI.WebControls.WebControl>.  \\n  \\n|Property|Initial Value|  \\n|--------------|-------------------|  \\n|`TagKey`|The <xref:System.Web.UI.HtmlTextWriterTag> enumeration value.|  \\n|`TagName`|The value of the `tag` parameter.|  \\n  \\n> [!NOTE]\\n>  This constructor is not called directly. Instead, it is often called by the constructor of a derived class to initialize the <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> and <xref:System.Web.UI.WebControls.WebControl.TagName%2A> properties.\"\n  syntax:\n    content: protected WebControl (string tag);\n    parameters:\n    - id: tag\n      type: System.String\n      description: An HTML tag.\n  overload: System.Web.UI.WebControls.WebControl.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)\n  id: '#ctor(System.Web.UI.HtmlTextWriterTag)'\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: WebControl(HtmlTextWriterTag)\n  nameWithType: WebControl.WebControl(HtmlTextWriterTag)\n  fullName: System.Web.UI.WebControls.WebControl.WebControl(HtmlTextWriterTag)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> class using the specified HTML tag.\n  remarks: \"Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.WebControl> class using the specified <xref:System.Web.UI.HtmlTextWriterTag?displayProperty=fullName> value.  \\n  \\n The following table shows the initial property value for an instance of <xref:System.Web.UI.WebControls.WebControl>.  \\n  \\n|Property|Initial Value|  \\n|--------------|-------------------|  \\n|`TagKey`|The <xref:System.Web.UI.HtmlTextWriterTag> enumeration value specified by the `tag` parameter.|\"\n  example:\n  - \"The following example demonstrates how to use the constructor for the <xref:System.Web.UI.WebControls.WebControl> class to create a `TextArea` HTML element and display it on the Web Forms page.  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx file name extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Classic WebControl.WebControl Example#1](~/add/codesnippet/csharp/f14f48ff-56ff-441a-acce-_1.aspx)]\\n [!code-vb[Classic WebControl.WebControl Example#1](~/add/codesnippet/visualbasic/f14f48ff-56ff-441a-acce-_1.aspx)]\"\n  syntax:\n    content: public WebControl (System.Web.UI.HtmlTextWriterTag tag);\n    parameters:\n    - id: tag\n      type: System.Web.UI.HtmlTextWriterTag\n      description: One of the <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> values.\n  overload: System.Web.UI.WebControls.WebControl.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.AccessKey\n  id: AccessKey\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: AccessKey\n  nameWithType: WebControl.AccessKey\n  fullName: System.Web.UI.WebControls.WebControl.AccessKey\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the access key that allows you to quickly navigate to the Web server control.\n  remarks: \"Use the AccessKey property to specify the keyboard shortcut for the Web server control. This allows you to navigate quickly to the control by pressing the ALT key and the key for the specified character on the keyboard. For example, setting the access key of a control to the string `\\\"D\\\"` indicates that the user can navigate to the control by pressing ALT+D.  \\n  \\n Only a single character string is allowed for the AccessKey property. If you attempt to set this property to a value that is neither `null`, <xref:System.String>, nor a single character string, an exception is thrown.  \\n  \\n> [!NOTE]\\n>  This property is supported only in Internet Explorer 4.0 and later.\"\n  example:\n  - \"The following example illustrates how to set and use the AccessKey property of a <xref:System.Web.UI.WebControls.TextBox> control.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Classic WebControl.AccessKey Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_842_1.aspx)]\\n [!code-vb[Classic WebControl.AccessKey Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_842_1.aspx)]\"\n  syntax:\n    content: public virtual string AccessKey { get; set; }\n    return:\n      type: System.String\n      description: The access key for quick navigation to the Web server control. The default value is <xref:System.String>, which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.WebControl.AccessKey*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified access key is neither <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, <xref:System.String> nor a single character string.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: AddAttributesToRender(HtmlTextWriter)\n  nameWithType: WebControl.AddAttributesToRender(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.WebControl.AddAttributesToRender(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Adds HTML attributes and styles that need to be rendered to the specified <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref>. This method is used primarily by control developers.\n  remarks: \"To render attributes and styles for a Web Server control on the client, you typically call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> methods to insert each attribute and style individually to the <xref:System.Web.UI.HtmlTextWriter> output stream. To simplify the process, this method encapsulates all calls to the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName> and <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> methods for every attribute and style associated with the Web server control. All attributes and styles are inserted into the <xref:System.Web.UI.HtmlTextWriter> output stream in a single method call. This method is typically overridden by control developers in derived classes to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter> output stream for the class.  \\n  \\n> [!NOTE]\\n>  The AddAttributesToRender method cannot be used to insert client script. To use client script, see the <xref:System.Web.UI.ClientScriptManager> class.\"\n  example:\n  - \"The following example demonstrates how to create a class that derives from the <xref:System.Web.UI.WebControls.WebControl> class. The base implementation of the AddAttributesToRender method is overridden to add attributes appropriate to the derived class in the <xref:System.Web.UI.HtmlTextWriter> output stream.  \\n  \\n [!code-cs[WebControlAddAttributesToRender#1](~/add/codesnippet/csharp/d4294fb1-e347-43c5-b4eb-_1.cs)]\\n [!code-vb[WebControlAddAttributesToRender#1](~/add/codesnippet/visualbasic/d4294fb1-e347-43c5-b4eb-_1.vb)]\"\n  syntax:\n    content: protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client.\n  overload: System.Web.UI.WebControls.WebControl.AddAttributesToRender*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)\n  id: ApplyStyle(System.Web.UI.WebControls.Style)\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: ApplyStyle(Style)\n  nameWithType: WebControl.ApplyStyle(Style)\n  fullName: System.Web.UI.WebControls.WebControl.ApplyStyle(Style)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Copies any nonblank elements of the specified style to the Web control, overwriting any existing style elements of the control. This method is primarily used by control developers.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to use the ApplyStyle method to apply a style to a <xref:System.Web.UI.WebControls.DataGrid> control.  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[WebControlApplyStyle#1](~/add/codesnippet/csharp/7479ba8d-e90a-4a61-ae1c-_1.aspx)]\\n [!code-vb[WebControlApplyStyle#1](~/add/codesnippet/visualbasic/7479ba8d-e90a-4a61-ae1c-_1.aspx)]\"\n  syntax:\n    content: public void ApplyStyle (System.Web.UI.WebControls.Style s);\n    parameters:\n    - id: s\n      type: System.Web.UI.WebControls.Style\n      description: A <xref href=\"System.Web.UI.WebControls.Style\"></xref> that represents the style to be copied.\n  overload: System.Web.UI.WebControls.WebControl.ApplyStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.Attributes\n  id: Attributes\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: WebControl.Attributes\n  fullName: System.Web.UI.WebControls.WebControl.Attributes\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of arbitrary attributes (for rendering only) that do not correspond to properties on the control.\n  remarks: \"The Attributes collection contains a collection of all attributes declared in the opening tag of a Web server control. This allows you to programmatically control the attributes associated with a Web server control. You can add attributes to the collection or remove attributes from the collection.  \\n  \\n> [!NOTE]\\n>  This property is rendered with all attributes in the collection in the control’s opening tag, regardless of the browser settings. Not all browsers support every attribute that is rendered. The unsupported attributes are usually ignored by the browser.  \\n  \\n> [!NOTE]\\n>  You cannot add client-side script to a <xref:System.Web.UI.WebControls.WebControl> instance using the Attributes collection. To add client-side script, use the <xref:System.Web.UI.Page.ClientScript%2A> property on the <xref:System.Web.UI.Page> control.\"\n  example:\n  - \"The following example illustrates how the Attributes property of a <xref:System.Web.UI.WebControls.WebControl> can be used to run a JavaScript command when the <xref:System.Web.UI.WebControls.TextBox> control loses focus.  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[Classic WebControl.Attributes Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1256_1.aspx)]\\n [!code-cs[Classic WebControl.Attributes Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1256_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.AttributeCollection Attributes { get; }\n    return:\n      type: System.Web.UI.AttributeCollection\n      description: A <xref href=\"System.Web.UI.AttributeCollection\"></xref> of name and value pairs.\n  overload: System.Web.UI.WebControls.WebControl.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.BackColor\n  id: BackColor\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: BackColor\n  nameWithType: WebControl.BackColor\n  fullName: System.Web.UI.WebControls.WebControl.BackColor\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the background color of the Web server control.\n  remarks: \"Use the BackColor property to specify the background color of the Web server control. This property is set using a <xref:System.Drawing.Color?displayProperty=fullName> object.  \\n  \\n> [!NOTE]\\n>  This property will render for only certain controls. For example, <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, and <xref:System.Web.UI.WebControls.ValidationSummary> will render this property. It will also work for <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> and <xref:System.Web.UI.WebControls.DataList> if their `RepeatLayout` property is `RepeatLayout.Table`, not `RepeatLayout.Flow`.  \\n  \\n In general, only controls that render as a `<table>` tag can display a background color in HTML 3.2, whereas almost any control can in HTML 4.0.  \\n  \\n For controls that render as a `<span>` tag (including <xref:System.Web.UI.WebControls.Label>, all validation controls, and list controls with their `RepeatLayout` property set to `RepeatLayout.Flow`), this property will work in Microsoft Internet Explorer version 5 and later, but not in Microsoft Internet Explorer version 4.\"\n  example:\n  - \"The following example illustrates how to set the BackColor property of the <xref:System.Web.UI.WebControls.Table> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \\n  \\n [!code-vb[Classic WebControl.BackColor Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_15_1.aspx)]\\n [!code-cs[Classic WebControl.BackColor Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_15_1.aspx)]\"\n  syntax:\n    content: public virtual System.Drawing.Color BackColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control. The default is <xref href=\"System.Drawing.Color\"></xref>, which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.WebControl.BackColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.BorderColor\n  id: BorderColor\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: BorderColor\n  nameWithType: WebControl.BorderColor\n  fullName: System.Web.UI.WebControls.WebControl.BorderColor\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the border color of the Web control.\n  remarks: \"Use the BorderColor property to specify the border color of the Web Server control. This property is set using a <xref:System.Drawing.Color> object.  \\n  \\n> [!NOTE]\\n>  The BorderColor property will render only for certain controls. For example, the <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, and <xref:System.Web.UI.WebControls.ValidationSummary> controls will render this property. It will also work for the <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>, and <xref:System.Web.UI.WebControls.DataList> controls, if their `RepeatLayout` property is set to `RepeatLayout.Table`, not `RepeatLayout.Flow`. However, it is rendered as the `bordercolor` attribute, which is not part of the HTML 3.2 standard. The `bordercolor` attribute works for Microsoft Internet Explorer version 3.0 or later, but not most other browsers.  \\n  \\n When the BorderColor property is not set, the browser will use its default border color. Refer to your browser to determine its default color scheme.\"\n  example:\n  - \"The following example illustrates how to set the BorderColor property of the <xref:System.Web.UI.WebControls.Table> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \\n  \\n [!code-cs[Classic WebControl.BorderColor Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_211_1.aspx)]\\n [!code-vb[Classic WebControl.BorderColor Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_211_1.aspx)]  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_211_2.aspx)]\\n [!code-cs[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_211_2.aspx)]  \\n[!code-vb[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_211_3.aspx)]\\n[!code-cs[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_211_3.aspx)]\"\n  syntax:\n    content: public virtual System.Drawing.Color BorderColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the border color of the control. The default is <xref href=\"System.Drawing.Color\"></xref>, which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.WebControl.BorderColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.BorderStyle\n  id: BorderStyle\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: BorderStyle\n  nameWithType: WebControl.BorderStyle\n  fullName: System.Web.UI.WebControls.WebControl.BorderStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the border style of the Web server control.\n  remarks: \"Use the BorderStyle property to specify the border style for the Web server control. This property is set using one of the <xref:System.Web.UI.WebControls.BorderStyle> enumeration values. The following table lists the possible values.  \\n  \\n|Border Style|Description|  \\n|------------------|-----------------|  \\n|`NotSet`|The border style is not set.|  \\n|`None`|No border|  \\n|`Dotted`|A dotted line border.|  \\n|`Dashed`|A dashed line border.|  \\n|`Solid`|A solid line border.|  \\n|`Double`|A solid double line border.|  \\n|`Groove`|A grooved border for a sunken border appearance.|  \\n|`Ridge`|A ridged border for a raised border appearance.|  \\n|`Inset`|An inset border for a sunken control appearance.|  \\n|`Outset`|An outset border for a raised control appearance.|  \\n  \\n> [!NOTE]\\n>  This property will not render on browsers earlier than Microsoft Internet Explorer 4 for any Web server control. There is no equivalent to it in HTML 3.2.\"\n  example:\n  - \"The following example illustrates how to set the BorderStyle property of the <xref:System.Web.UI.WebControls.Table> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \\n  \\n [!code-cs[Classic WebControl.BorderStyle Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_769_1.aspx)]\\n [!code-vb[Classic WebControl.BorderStyle Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_769_1.aspx)]  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_769_2.aspx)]\\n [!code-cs[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_769_2.aspx)]  \\n[!code-vb[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_769_3.aspx)]\\n[!code-cs[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_769_3.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }\n    return:\n      type: System.Web.UI.WebControls.BorderStyle\n      description: One of the <xref href=\"System.Web.UI.WebControls.BorderStyle\"></xref> enumeration values. The default is <xref uid=\"langword_csharp_NotSet\" name=\"NotSet\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.BorderStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.BorderWidth\n  id: BorderWidth\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: BorderWidth\n  nameWithType: WebControl.BorderWidth\n  fullName: System.Web.UI.WebControls.WebControl.BorderWidth\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the border width of the Web server control.\n  remarks: \"Use the BorderWidth property to specify a border width for a control.  \\n  \\n> [!NOTE]\\n>  This property does not work with all Web server controls. It applies only to controls that display as a table, such as <xref:System.Web.UI.WebControls.Table> and <xref:System.Web.UI.WebControls.DataGrid>.  \\n  \\n This property is set with a <xref:System.Web.UI.WebControls.Unit> object. If the <xref:System.Web.UI.WebControls.Unit.Value%2A> property of the <xref:System.Web.UI.WebControls.Unit> contains a negative number, an exception is thrown.  \\n  \\n> [!NOTE]\\n>  The border width can be expressed only in pixels for browsers earlier than Microsoft Internet Explorer version 5. All unit types are supported in Microsoft Internet Explorer version 5 and later. Refer to the specific control for details.\"\n  example:\n  - \"The following example illustrates how to set the BorderWidth property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \\n  \\n [!code-cs[Classic WebControl.BorderWidth Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_555_1.aspx)]\\n [!code-vb[Classic WebControl.BorderWidth Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_555_1.aspx)]  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_555_2.aspx)]\\n [!code-cs[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_555_2.aspx)]  \\n[!code-vb[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_555_3.aspx)]\\n[!code-cs[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_555_3.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }\n    return:\n      type: System.Web.UI.WebControls.Unit\n      description: A <xref href=\"System.Web.UI.WebControls.Unit\"></xref> that represents the border width of a Web server control. The default value is <xref href=\"System.Web.UI.WebControls.Unit\"></xref>, which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.WebControl.BorderWidth*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified border width is a negative value.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.ControlStyle\n  id: ControlStyle\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: ControlStyle\n  nameWithType: WebControl.ControlStyle\n  fullName: System.Web.UI.WebControls.WebControl.ControlStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the style of the Web server control. This property is used primarily by control developers.\n  remarks: The ControlStyle property encapsulates all properties of the <xref:System.Web.UI.WebControls.WebControl> class that specify the appearance of the control, such as <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> and <xref:System.Web.UI.WebControls.WebControl.Font%2A>.\n  syntax:\n    content: public System.Web.UI.WebControls.Style ControlStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.Style\n      description: A <xref href=\"System.Web.UI.WebControls.Style\"></xref> that encapsulates the appearance properties of the Web server control.\n  overload: System.Web.UI.WebControls.WebControl.ControlStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.ControlStyleCreated\n  id: ControlStyleCreated\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: ControlStyleCreated\n  nameWithType: WebControl.ControlStyleCreated\n  fullName: System.Web.UI.WebControls.WebControl.ControlStyleCreated\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether a <xref href=\"System.Web.UI.WebControls.Style\"></xref> object has been created for the <xref:System.Web.UI.WebControls.WebControl.ControlStyle*> property. This property is primarily used by control developers.\n  syntax:\n    content: public bool ControlStyleCreated { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a <xref href=\"System.Web.UI.WebControls.Style\"></xref> object has been created for the <xref:System.Web.UI.WebControls.WebControl.ControlStyle*> property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.ControlStyleCreated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)\n  id: CopyBaseAttributes(System.Web.UI.WebControls.WebControl)\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: CopyBaseAttributes(WebControl)\n  nameWithType: WebControl.CopyBaseAttributes(WebControl)\n  fullName: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(WebControl)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Copies the properties not encapsulated by the <xref:System.Web.UI.WebControls.WebControl.Style*> object from the specified Web server control to the Web server control that this method is called from. This method is used primarily by control developers.\n  remarks: The CopyBaseAttributes method copies the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>, <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>, <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>, <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>, and <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> properties from the specified Web server control to the Web server control that this method is called from. This is commonly used in cases where a Web server control works by dynamically creating new controls while it is rendering and using the controls. This method is useful in this situation because it copies all properties of Web server controls not encapsulated by the <xref:System.Web.UI.WebControls.Style> object so they can be placed on the outermost control of a tag that is being rendered.\n  syntax:\n    content: public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);\n    parameters:\n    - id: controlSrc\n      type: System.Web.UI.WebControls.WebControl\n      description: A <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> that represents the source control with properties to be copied to the Web server control that this method is called from.\n  overload: System.Web.UI.WebControls.WebControl.CopyBaseAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>controlSrc</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.CreateControlStyle\n  id: CreateControlStyle\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: CreateControlStyle()\n  nameWithType: WebControl.CreateControlStyle()\n  fullName: System.Web.UI.WebControls.WebControl.CreateControlStyle()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates the style object that is used internally by the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> class to implement all style related properties. This method is used primarily by control developers.\n  remarks: \"The CreateControlStyle method is used to create the style object that is used internally to implement all style related properties. Derived classes can override this method to create a style that is appropriate to the class. This method is primarily used by control developers.  \\n  \\n **Note** Control developers should return a <xref:System.Web.UI.WebControls.Style> that derives from the <xref:System.Web.UI.WebControls.Style> that the base control returns. It cannot be assumed that the <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> is of a particular Style type since a derived control may return a different type.\"\n  syntax:\n    content: protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();\n    parameters: []\n    return:\n      type: System.Web.UI.WebControls.Style\n      description: A <xref href=\"System.Web.UI.WebControls.Style\"></xref> that is used to implement all style-related properties of the control.\n  overload: System.Web.UI.WebControls.WebControl.CreateControlStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.CssClass\n  id: CssClass\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: CssClass\n  nameWithType: WebControl.CssClass\n  fullName: System.Web.UI.WebControls.WebControl.CssClass\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the Cascading Style Sheet (CSS) class rendered by the Web server control on the client.\n  remarks: \"Use the CssClass property to specify the CSS class to render on the client for the Web Server control. This property will render on browsers for all controls. It will always be rendered as the class attribute, regardless of the browser.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n For example, suppose you have the following Web server control declaration:  \\n  \\n```  \\n<asp:TextBox id=\\\"TextBox1\\\" ForeColor=\\\"Red\\\" CssClass=\\\"class1\\\" />  \\n```  \\n  \\n The following HTML is rendered on the client for the previous Web server control declaration:  \\n  \\n```  \\n<input type=text class=\\\"class1\\\" style=\\\"ForeColor:red\\\">  \\n```  \\n  \\n If you use cascading style sheets (CSS) to customize the appearance of a control, use either inline styles or a separate CSS file, but not both. Using both inline styles and a separate CSS file could cause unexpected results.  \\n  \\n> [!NOTE]\\n>  On browsers that do not support CSS, setting the CssClass property will have no effect.\"\n  example:\n  - \"The following example illustrates how to use the CssClass property to change the style of a <xref:System.Web.UI.WebControls.HyperLink> control.  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-xml[Classic WebControl.CssClass Example#1](~/add/codesnippet/xml/p-system.web.ui.webcontr_267_1.xml)]\\n [!code-vb[Classic WebControl.CssClass Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_267_1.aspx)]\\n [!code-cs[Classic WebControl.CssClass Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_267_1.aspx)]\"\n  syntax:\n    content: public virtual string CssClass { get; set; }\n    return:\n      type: System.String\n      description: The CSS class rendered by the Web server control on the client. The default is <xref:System.String>.\n  overload: System.Web.UI.WebControls.WebControl.CssClass*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.DisabledCssClass\n  id: DisabledCssClass\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: DisabledCssClass\n  nameWithType: WebControl.DisabledCssClass\n  fullName: System.Web.UI.WebControls.WebControl.DisabledCssClass\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the CSS class to apply to the rendered HTML element when the control is disabled.\n  remarks: \"This property can be used to change the name that is rendered for the DisabledCssClass property of individual Web controls. By default, this property returns \\\"aspNetDisabled\\\".  \\n  \\n When <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> is overridden in a derived class to return `false`, the value of the DisabledCssClass property is rendered as the value of the `class` attribute of the HTML element for the control. In that case, if there is a value in the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property, both CSS classes will be applied to the rendered HTML element. The `class` attribute will consist of the value of the DisabledCssClass property followed by the value of the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property, separated by a space.  \\n  \\n This property is static, which means that you can set it only for the <xref:System.Web.UI.WebControls.WebControl> class. Whatever value you set it to is used for all controls in a Web application. You cannot specify different values for individual controls.  \\n  \\n If you want to use a class name different from the default value of \\\"aspNetDisabled\\\", you typically put the code to do that in the `Application_Start` method of the Global.asax file, as shown in the following example:  \\n  \\n```vb#  \\nPrivate Sub Application_Start(  \\n    ByVal sender As Object, ByVal e As EventArgs)  \\n    WebControl.DisabledCssClass = \\\"customDisabledClassName\\\"  \\nEnd Sub  \\n```  \\n  \\n```c#  \\nvoid Application_Start(object sender, EventArgs e)  \\n{  \\n    WebControl.DisabledCssClass = \\\"customDisabledClassName\\\";  \\n}  \\n```\"\n  example:\n  - \"The following example shows rendered HTML for a disabled <xref:System.Web.UI.WebControls.Label> control when the <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> property is `false`, when the DisabledCssClass property has its default value, and when the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property is empty.  \\n  \\n `<span id=\\\"Label1\\\" class=\\\"aspNetDisabled\\\">Test</span>`  \\n  \\n The following example shows rendered HTML under the same conditions except that the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property has the value \\\"SampleStyle\\\"`:`  \\n  \\n `<span id=\\\"Label1\\\" class=\\\"aspNetDisabled SampleStyle\\\">Test</span>`  \\n  \\n For more information, see the <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> property.\"\n  syntax:\n    content: public static string DisabledCssClass { get; set; }\n    return:\n      type: System.String\n      description: The CSS class that should be applied to the rendered HTML element when the control is disabled. The default value is \"aspNetDisabled\".\n  overload: System.Web.UI.WebControls.WebControl.DisabledCssClass*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.Enabled\n  id: Enabled\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: WebControl.Enabled\n  fullName: System.Web.UI.WebControls.WebControl.Enabled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the Web server control is enabled.\n  remarks: \"When the Enabled property of a control is set to `false`, the control typically appears dimmed. If the control is an input element, the browser prevents the user from clicking or typing in it. HTML elements that are rendered for a server control are marked as disabled by setting their `disabled` attribute or their CSS `class` attribute. For more information, see <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> and <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  \\n  \\n This property propagates down the control hierarchy. If you disable a container control, the child controls within that container are also disabled. For more information, see the <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> property.  \\n  \\n> [!NOTE]\\n>  In a custom composite control, this inheritance behavior does not apply to controls that have not yet created their child controls. You must either set the enabled state of the child controls when they are created, or override the Enabled property to call the <xref:System.Web.UI.Control.EnsureChildControls%2A> method.  \\n  \\n> [!NOTE]\\n>  Disabling a control only prevents interaction with the control by the user through the browser UI. It is possible for a user to craft a request that submits a postback that is processed by the page even if controls on the page are disabled. Before you process a postback request, check to make sure that the control is enabled and visible.  \\n  \\n Not all controls support this property. See the individual controls for details.  \\n  \\n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example illustrates how to enable and disable a <xref:System.Web.UI.WebControls.TextBox> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class, by setting its Enabled property programmatically.  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[Classic WebControl.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_515_1.aspx)]\\n [!code-cs[Classic WebControl.Enabled Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_515_1.aspx)]\"\n  syntax:\n    content: public virtual bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if control is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.EnableTheming\n  id: EnableTheming\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: EnableTheming\n  nameWithType: WebControl.EnableTheming\n  fullName: System.Web.UI.WebControls.WebControl.EnableTheming\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether themes apply to this control.\n  remarks: \"The EnableTheming property indicates whether themes are enabled for a specified control. When the EnableTheming property is `true`, the theme directory for the application is searched for control skins to apply. If no skin for the particular control exists in the theme directory, skins are not applied.  \\n  \\n When the EnableTheming property is `false`, the theme directory is not searched and the contents of the <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> property is not used.  \\n  \\n A control can override the EnableTheming value set by its parent control or the containing page. For example, if a parent control has the EnableTheming property set to `false`, you can selectively apply themes to child controls that are contained within the parent by setting the EnableTheming property to `true` on the individual child controls.  \\n  \\n Themes can be enabled at the page, container, or control level. When theming is disabled at the page or container level, themes are disabled for all controls that are contained by the page or container.\"\n  syntax:\n    content: public override bool EnableTheming { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use themes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.EnableTheming*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.Font\n  id: Font\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: Font\n  nameWithType: WebControl.Font\n  fullName: System.Web.UI.WebControls.WebControl.Font\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the font properties associated with the Web server control.\n  remarks: \"Use the Font property to specify the font properties of the Web Server control. This property includes subproperties that can be accessed declaratively in the form of `Property-Subproperty` (for example `Font-Bold`) or programmatically in the form of `Property.Subproperty` (for example `Font.Bold`).  \\n  \\n All but one subproperty will render in browsers prior to Microsoft Internet Explorer version 4 for all controls. They are: <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>, <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>, <xref:System.Web.UI.WebControls.FontInfo.Name%2A>, <xref:System.Web.UI.WebControls.FontInfo.Names%2A>, <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>, <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>, and <xref:System.Web.UI.WebControls.FontInfo.Size%2A> (but only named font sizes, such as `Small`, `Smaller`, and so on, will work).  \\n  \\n> [!NOTE]\\n>  Although these subproperties render in browsers prior to Microsoft Internet Explorer version 4, the HTML that is rendered is different than later browsers. Instead of rendering as style attributes, these subproperties are rendered as HTML elements, such as `<b>` and `<font>`.  \\n  \\n The one subproperty that will not render on earlier browsers for all controls is <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>.\"\n  example:\n  - \"The following example illustrates how to use the Font property to gather font information from a <xref:System.Web.UI.WebControls.Label> control.  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[Classic WebControl.Font Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_725_1.aspx)]\\n [!code-cs[Classic WebControl.Font Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_725_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.FontInfo Font { get; }\n    return:\n      type: System.Web.UI.WebControls.FontInfo\n      description: A <xref href=\"System.Web.UI.WebControls.FontInfo\"></xref> that represents the font properties of the Web server control.\n  overload: System.Web.UI.WebControls.WebControl.Font*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.ForeColor\n  id: ForeColor\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: ForeColor\n  nameWithType: WebControl.ForeColor\n  fullName: System.Web.UI.WebControls.WebControl.ForeColor\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the foreground color (typically the color of the text) of the Web server control.\n  remarks: \"Use the ForeColor property to specify the foreground color of the Web server control. The foreground color is usually the color of the text. This property will render on browsers earlier than Microsoft Internet Explorer version 4 for all controls, except the <xref:System.Web.UI.WebControls.Image>, <xref:System.Web.UI.WebControls.AdRotator>, <xref:System.Web.UI.WebControls.HyperLink> and <xref:System.Web.UI.WebControls.LinkButton>.  \\n  \\n> [!NOTE]\\n>  On browsers earlier than Microsoft Internet Explorer version 4, this property is rendered as `<font>` tags.\"\n  example:\n  - \"The following example illustrates how to set the ForeColor property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \\n  \\n [!code-cs[Classic WebControl.ForeColor Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_658_1.aspx)]\\n [!code-vb[Classic WebControl.ForeColor Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_658_1.aspx)]\"\n  syntax:\n    content: public virtual System.Drawing.Color ForeColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the foreground color of the control. The default is <xref href=\"System.Drawing.Color\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.ForeColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.HasAttributes\n  id: HasAttributes\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: HasAttributes\n  nameWithType: WebControl.HasAttributes\n  fullName: System.Web.UI.WebControls.WebControl.HasAttributes\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether the control has attributes set.\n  remarks: The HasAttributes property returns `true` when the <xref:System.Web.UI.WebControls.WebControl> instance has attribute name/value pairs. The attribute pairs can be set either in the  property or in the view state.\n  syntax:\n    content: public bool HasAttributes { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control has attributes set; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.HasAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.Height\n  id: Height\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: Height\n  nameWithType: WebControl.Height\n  fullName: System.Web.UI.WebControls.WebControl.Height\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the height of the Web server control.\n  remarks: \"Use the Height property to specify the height of the Web server control.  \\n  \\n> [!NOTE]\\n>  This property does not render for all controls in browsers earlier than Microsoft Internet Explorer version 4. Controls that do not render this property in earlier browsers include <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>, and any validation controls. The <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> and <xref:System.Web.UI.WebControls.DataList> also do not render this property in earlier browsers when their `RepeatLayout` property is set to `RepeatLayout.Flow`. Furthermore, only unit types of `Pixel` and `Percentage` are supported in earlier browsers.  \\n  \\n Because this property is nonstandard HTML, Web server controls that display as a table, such as <xref:System.Web.UI.WebControls.Table> and <xref:System.Web.UI.WebControls.DataGrid>, do not support this property in browsers earlier than Microsoft Internet Explorer version 4.  \\n  \\n> [!NOTE]\\n>  To set the Height property to a unit type other than the default of `Pixel`, you must create a new unit type specific to the unit type you want. For example, to set a control's Height property to a percentage value of 100, you could do the following:  \\n>   \\n>  `myWebControl.Width = Unit.Percentage(100);`  \\n>   \\n>  For more information on the unit types available for the Height property, see the <xref:System.Web.UI.WebControls.Unit> class.\"\n  example:\n  - \"The following example illustrates how to declaratively set the Height property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \\n  \\n [!code-cs[Classic WebControl.Height Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_740_1.aspx)]\\n [!code-vb[Classic WebControl.Height Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_740_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.Unit Height { get; set; }\n    return:\n      type: System.Web.UI.WebControls.Unit\n      description: A <xref href=\"System.Web.UI.WebControls.Unit\"></xref> that represents the height of the control. The default is <xref href=\"System.Web.UI.WebControls.Unit\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.Height*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The height was set to a negative value.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.IsEnabled\n  id: IsEnabled\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: IsEnabled\n  nameWithType: WebControl.IsEnabled\n  fullName: System.Web.UI.WebControls.WebControl.IsEnabled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether the control is enabled.\n  remarks: \"This is a read-only property. If you want to disable a control, you set its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property to `false`.  \\n  \\n If a control is not contained by another control, the value of the IsEnabled property is always the same as the value of the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property.  \\n  \\n The IsEnabled property has a value that is different from the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property if a control is a child of another control and if all the following circumstances are true:  \\n  \\n-   The value of the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property or the IsEnabled property of the parent control is `false`.  \\n  \\n-   The <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property of the child control is set to `true`.  \\n  \\n In this situation, the child control inherits the disabled state of the parent control. The IsEnabled property of the child control returns `false` to indicate that the control is disabled even though the child control was not explicitly disabled by setting its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property to `false`. The parent control itself might have its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property set to `true` but might inherit the disabled state from its parent, and so on.  \\n  \\n When ASP.NET renders HTML elements for a server control, it marks the elements as disabled by setting their `disabled` attribute or their CSS `class` attribute. For more information, see <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> and <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.\"\n  syntax:\n    content: protected bool IsEnabled { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.WebControls.WebControl\"></xref> object is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.IsEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)\n  id: LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: LoadViewState(Object)\n  nameWithType: WebControl.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.WebControl.LoadViewState(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Restores view-state information from a previous request that was saved with the <xref:System.Web.UI.WebControls.WebControl.SaveViewState*> method.\n  remarks: \"This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The LoadViewState method restores the view-state information that was saved during a previous <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> request. The <xref:System.Web.UI.WebControls.WebControl> class overrides the base <xref:System.Web.UI.Control.LoadViewState%2A> method to handle the <xref:System.Web.UI.Control.ViewState%2A>, <xref:System.Web.UI.WebControls.WebControl.Style%2A>, and <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> properties.\"\n  syntax:\n    content: protected override void LoadViewState (object savedState);\n    parameters:\n    - id: savedState\n      type: System.Object\n      description: An object that represents the control state to restore.\n  overload: System.Web.UI.WebControls.WebControl.LoadViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)\n  id: MergeStyle(System.Web.UI.WebControls.Style)\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: MergeStyle(Style)\n  nameWithType: WebControl.MergeStyle(Style)\n  fullName: System.Web.UI.WebControls.WebControl.MergeStyle(Style)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Copies any nonblank elements of the specified style to the Web control, but will not overwrite any existing style elements of the control. This method is used primarily by control developers.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to use the MergeStyle method to merge a style with the style of a <xref:System.Web.UI.WebControls.DataGrid> control.  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[WebControlMergeStyle#1](~/add/codesnippet/csharp/e45b1a42-f3d8-4239-ac7e-_1.aspx)]\\n [!code-vb[WebControlMergeStyle#1](~/add/codesnippet/visualbasic/e45b1a42-f3d8-4239-ac7e-_1.aspx)]\"\n  syntax:\n    content: public void MergeStyle (System.Web.UI.WebControls.Style s);\n    parameters:\n    - id: s\n      type: System.Web.UI.WebControls.Style\n      description: A <xref href=\"System.Web.UI.WebControls.Style\"></xref> that represents the style to be copied.\n  overload: System.Web.UI.WebControls.WebControl.MergeStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)\n  id: Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: Render(HtmlTextWriter)\n  nameWithType: WebControl.Render(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.WebControl.Render(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Renders the control to the specified HTML writer.\n  remarks: \"The Render method is used primarily by control developers.  \\n  \\n The Render method sends the Web control to the specified <xref:System.Web.UI.HtmlTextWriter> instance. Override this method to send your custom server control to the client.  \\n  \\n The Render method first calls the <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A> method, then the <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> method, and finally the <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> method to send the control to the client.\"\n  syntax:\n    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: The <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object that receives the control content.\n  overload: System.Web.UI.WebControls.WebControl.Render*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)\n  id: RenderBeginTag(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: RenderBeginTag(HtmlTextWriter)\n  nameWithType: WebControl.RenderBeginTag(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.WebControl.RenderBeginTag(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.\n  remarks: This is made public so other controls can render multiple controls in between the opening and closing tags of a Web server control.\n  syntax:\n    content: public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client.\n  overload: System.Web.UI.WebControls.WebControl.RenderBeginTag*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)\n  id: RenderContents(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: RenderContents(HtmlTextWriter)\n  nameWithType: WebControl.RenderContents(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.WebControl.RenderContents(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Renders the contents of the control to the specified writer. This method is used primarily by control developers.\n  remarks: \"Override the RenderContents method to render the contents of the control between the begin and end tags. The default implementation of this method renders any child controls.  \\n  \\n If your control has child controls, you must either call the base RenderContents method or call the <xref:System.Web.UI.Control.RenderChildren%2A> at the point where you want the child controls to be rendered to the text writer.\"\n  syntax:\n    content: protected virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client.\n  overload: System.Web.UI.WebControls.WebControl.RenderContents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)\n  id: RenderEndTag(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: RenderEndTag(HtmlTextWriter)\n  nameWithType: WebControl.RenderEndTag(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.WebControl.RenderEndTag(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.\n  remarks: This is made public so other controls can render multiple controls in between the opening and closing tags of a Web server control.\n  syntax:\n    content: public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: A <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client.\n  overload: System.Web.UI.WebControls.WebControl.RenderEndTag*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.SaveViewState\n  id: SaveViewState\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: SaveViewState()\n  nameWithType: WebControl.SaveViewState()\n  fullName: System.Web.UI.WebControls.WebControl.SaveViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Saves any state that was modified after the <xref:System.Web.UI.WebControls.Style.TrackViewState*> method was invoked.\n  remarks: \"The SaveViewState method is used primarily by control developers.  \\n  \\n View state is the cumulative values of the properties for a server control. These values are placed automatically in the <xref:System.Web.UI.Control.ViewState%2A> property for the server control, which is an instance of the <xref:System.Web.UI.StateBag> class. The <xref:System.Web.UI.Control.ViewState%2A> property value is then persisted to a string object after the save state stage of the life cycle for the server control. For more information, see [ASP.NET Page Life Cycle Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n When view state is saved, this string object is returned to the client as a variable that is stored in a hidden HTML `input` element. When you author custom server controls, you can improve efficiency by overriding the SaveViewState method and modifying the <xref:System.Web.UI.Control.ViewState%2A> property for your server control. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected override object SaveViewState ();\n    parameters: []\n    return:\n      type: System.Object\n      description: An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.SaveViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.SkinID\n  id: SkinID\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: SkinID\n  nameWithType: WebControl.SkinID\n  fullName: System.Web.UI.WebControls.WebControl.SkinID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the skin to apply to the control.\n  remarks: \"Skins available to a control are contained in one or more skin files in a theme directory. The SkinID property specifies which of these skins to apply to the control. A skin is specific to a particular control; you cannot share skin setting between controls of different types.  \\n  \\n If you do not set the SkinID property, a control uses the default skin if one is defined. For example, if a skin without an ID is defined for an <xref:System.Web.UI.WebControls.Image> control, then that skin applies to all <xref:System.Web.UI.WebControls.Image> controls that do not explicitly reference a skin by ID and that are not set to disable theming. If a skin with an ID is defined for an <xref:System.Web.UI.WebControls.Image> control, then that skin applies to only <xref:System.Web.UI.WebControls.Image> controls whose SkinID is set to that ID.  \\n  \\n If the skin files in a theme directory do not contain a skin with the specified SkinID, an <xref:System.ArgumentException> exception is thrown at runtime.\"\n  syntax:\n    content: public override string SkinID { get; set; }\n    return:\n      type: System.String\n      description: The name of the skin to apply to the control. The default is <xref:System.String>.\n  overload: System.Web.UI.WebControls.WebControl.SkinID*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The skin specified in the SkinID property does not exist in the theme.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.Style\n  id: Style\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: Style\n  nameWithType: WebControl.Style\n  fullName: System.Web.UI.WebControls.WebControl.Style\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a collection of text attributes that will be rendered as a style attribute on the outer tag of the Web server control.\n  remarks: \"Use the Style collection to manage the style attributes rendered in the outer tag of the Web server control. This property will render on all browsers for all controls.  \\n  \\n> [!NOTE]\\n>  Browsers that do not support style attributes will ignore the rendered HTML.  \\n  \\n Any style values set through the strongly typed style properties (for example, `BackColor=\\\"Red\\\"`) will automatically override a corresponding value in this collection.  \\n  \\n Values set in this collection are not automatically reflected by the strongly typed style properties.\"\n  example:\n  - \"The following example illustrates how to use the Style property to hide or display a <xref:System.Web.UI.WebControls.Label> control on a page.  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[Classic WebControl.Style Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1246_1.aspx)]\\n [!code-cs[Classic WebControl.Style Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1246_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.CssStyleCollection Style { get; }\n    return:\n      type: System.Web.UI.CssStyleCollection\n      description: A <xref href=\"System.Web.UI.CssStyleCollection\"></xref> that contains the HTML style attributes to render on the outer tag of the Web server control.\n  overload: System.Web.UI.WebControls.WebControl.Style*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute\n  id: SupportsDisabledAttribute\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: SupportsDisabledAttribute\n  nameWithType: WebControl.SupportsDisabledAttribute\n  fullName: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value that indicates whether the control should set the <xref uid=\"langword_csharp_disabled\" name=\"disabled\" href=\"\"></xref> attribute of the rendered HTML element to \"disabled\" when the control's <xref:System.Web.UI.WebControls.WebControl.IsEnabled*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  remarks: \"In derived classes, this property indicates how ASP.NET should render HTML for a control when the control is disabled.  \\n  \\n## Disabling ASP.NET Web Controls  \\n When the <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property of an ASP.NET control is set to `false` (that is, when the control is disabled), the intent is that ASP.NET should render the control in the page, but display it in a disabled state (typically dimmed). If a parent control is disabled, children of that control are also displayed as disabled. In that case, the child control's <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> property is set to `false`, even though its <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> property might be set to `true`.  \\n  \\n In ASP.NET 3.5 and earlier versions, when a control's <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> property is `false`, ASP.NET sets the `disabled` attribute to \\\"disabled\\\" in the HTML element that it renders for the control. However, the HTML 4.01 standard allows the `disabled` attribute only on certain elements that are used for user input. For example, the `disabled` attribute is allowed for `input` elements, but not for `span` elements.  \\n  \\n Most browsers support a default disabled appearance for display-only elements that have `disabled` attributes. However, in order to comply with HTML standards, by default ASP.NET 4 omits invalid attributes.  \\n  \\n## How the SupportsDisabledAttribute Property is Used  \\n If the SupportsDisabledAttribute property is `true`, ASP.NET renders a `disabled` attribute when the control is disabled. If this property is `false`, ASP.NET renders a `class` attribute when the control is disabled.  \\n  \\n Derived classes override this property to return `false` if all the following conditions are true:  \\n  \\n-   The control renders an HTML element that does not support the `disabled` attribute.  \\n  \\n-   The <xref:System.Web.UI.Control.RenderingCompatibility%2A> property indicates an ASP.NET version number lower than 4.0.  \\n  \\n The SupportsDisabledAttribute property does not necessarily indicate whether the HTML element that is rendered for a control supports (allows) the `disabled` attribute. If a control's <xref:System.Web.UI.Control.RenderingCompatibility%2A> property indicates an ASP.NET version number lower than 4.0, the value of the control's SupportsDisabledAttribute property might return `true` even if the rendered HTML does not support the `disabled` attribute.  \\n  \\n## Backward Compatibility for Disabled Controls  \\n When you use Visual Studio to upgrade a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the `controlRenderingCompatibilityVersion` attribute in the Web.config file (which sets the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property) to the earlier version number. Because the SupportsDisabledAttribute property always returns `true` when the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property is lower than 4.0, this causes Web controls to render HTML for disabled controls as they did in the earlier version. If you want an upgraded Web site to render HTML using the algorithm introduced in ASP.NET 4, you can change or remove the `controlRenderingCompatibilityVersion` attribute. For more information, see the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property.  \\n  \\n## Setting a Disabled Appearance By Using CSS  \\n If the SupportsDisabledAttribute property of a control is `false` and the control is disabled, ASP.NET sets the `class` attribute of the rendered HTML element to the value of the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName> property. The default value of the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName> property is \\\"aspNetDisabled\\\".  \\n  \\n To provide a disabled appearance for disabled controls, you must define a CSS rule for the class that is represented by the value of the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName> property.  \\n  \\n The HTML element that is rendered for a control might have more than one value in its `class` attribute if there is a value in its <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property. For more information, see the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> property.\"\n  example:\n  - \"The following example shows markup for a disabled <xref:System.Web.UI.WebControls.Label> control:  \\n  \\n `<asp:Label id=\\\"Label1\\\" runat=\\\"server\\\" Text=\\\"Test\\\" Enabled=\\\"false\\\"/>`  \\n  \\n In ASP.NET 3.5 and earlier versions, this markup renders the following HTML:  \\n  \\n `<span id=\\\"Label1\\\" disabled=\\\"disabled\\\">Test</span>`  \\n  \\n In ASP.NET 4, if the value of the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property is 4.0 or greater, and if the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> property is set to its default value, the same markup renders the following HTML:  \\n  \\n `<span id=\\\"Label1\\\" class=\\\"aspNetDisabled\\\">Test</span>`\"\n  syntax:\n    content: public virtual bool SupportsDisabledAttribute { get; }\n    return:\n      type: System.Boolean\n      description: Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  id: System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  isEii: true\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)\n  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)\n  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets an attribute of the Web control with the specified name.\n  remarks: The IAttributeAccessor.GetAttribute method is an explicit interface member implementation. It can be used only when the instance of the <xref:System.Web.UI.WebControls.WebControl> class is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.\n  syntax:\n    content: string IAttributeAccessor.GetAttribute (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the attribute.\n    return:\n      type: System.String\n      description: The value of the attribute.\n  overload: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  id: System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  isEii: true\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Sets an attribute of the Web control to the specified name and value.\n  remarks: The IAttributeAccessor.SetAttribute method is an explicit interface member implementation. It can be used only when the instance of the <xref:System.Web.UI.WebControls.WebControl> class is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.\n  syntax:\n    content: void IAttributeAccessor.SetAttribute (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name component of the attribute's name/value pair.\n    - id: value\n      type: System.String\n      description: The value component of the attribute's name/value pair.\n  overload: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.TabIndex\n  id: TabIndex\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: TabIndex\n  nameWithType: WebControl.TabIndex\n  fullName: System.Web.UI.WebControls.WebControl.TabIndex\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the tab index of the Web server control.\n  remarks: \"Use the TabIndex property to specify or determine the tab index of a Web server control on the Web Forms page. When you press the `Tab` key, the order in which the Web server controls receive focus is determined by the TabIndex property of each control. When a page is initially loaded, the first item that receives focus when the `Tab` key is pressed is the address bar. Next, the controls on the Web Forms page are tabbed to in ascending order, based on the value of the TabIndex property of each control, starting with the smallest positive, nonzero value. If multiple controls share the same tab index, the controls will receive focus in the order they are declared on the Web Forms page. Finally, controls that have a tab index of zero are tabbed to in the order they are declared.  \\n  \\n> [!NOTE]\\n>  Only controls with a nonzero tab index will render the `tabindex` attribute.  \\n  \\n You can remove a Web Server control from the tab order by setting the TabIndex property to a negative value.  \\n  \\n> [!NOTE]\\n>  This property is supported only in Internet Explorer 4 and later.\"\n  example:\n  - \"The following example illustrates how to use the TabIndex property of the <xref:System.Web.UI.WebControls.WebControl> to set the tab order of controls on the page.  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[Classic WebControl.TabIndex Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1094_1.aspx)]\\n [!code-cs[Classic WebControl.TabIndex Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1094_1.aspx)]\"\n  syntax:\n    content: public virtual short TabIndex { get; set; }\n    return:\n      type: System.Int16\n      description: The tab index of the Web server control. The default is <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>, which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.WebControl.TabIndex*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified tab index is not between -32768 and 32767.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.TagKey\n  id: TagKey\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: TagKey\n  nameWithType: WebControl.TagKey\n  fullName: System.Web.UI.WebControls.WebControl.TagKey\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> value that corresponds to this Web server control. This property is used primarily by control developers.\n  remarks: Use the TagKey property to determine the <xref:System.Web.UI.HtmlTextWriterTag> value that is associated with this Web server control. This property is used primarily by control developers.\n  syntax:\n    content: protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }\n    return:\n      type: System.Web.UI.HtmlTextWriterTag\n      description: One of the <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> enumeration values.\n  overload: System.Web.UI.WebControls.WebControl.TagKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.TagName\n  id: TagName\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: TagName\n  nameWithType: WebControl.TagName\n  fullName: System.Web.UI.WebControls.WebControl.TagName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the name of the control tag. This property is used primarily by control developers.\n  remarks: Use the TagName property to determine the name of the control tag associated with this Web server control. This property is used primarily by control developers.\n  syntax:\n    content: protected virtual string TagName { get; }\n    return:\n      type: System.String\n      description: The name of the control tag.\n  overload: System.Web.UI.WebControls.WebControl.TagName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.ToolTip\n  id: ToolTip\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: ToolTip\n  nameWithType: WebControl.ToolTip\n  fullName: System.Web.UI.WebControls.WebControl.ToolTip\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the text displayed when the mouse pointer hovers over the Web server control.\n  remarks: \"Use the ToolTip property to specify the custom text that is displayed when the mouse pointer hovers over the Web server control.  \\n  \\n> [!NOTE]\\n>  This property is rendered for all browsers. However, only Microsoft Internet Explorer will display this property as a ToolTip. All other browsers will ignore this property.  \\n  \\n The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example illustrates how to set the ToolTip property on the <xref:System.Web.UI.WebControls.Button> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \\n  \\n> [!NOTE]\\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Classic WebControl.ToolTip Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1206_1.aspx)]\\n [!code-vb[Classic WebControl.ToolTip Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1206_1.aspx)]\"\n  syntax:\n    content: public virtual string ToolTip { get; set; }\n    return:\n      type: System.String\n      description: The text displayed when the mouse pointer hovers over the Web server control. The default is &lt;xref:System.String?displayProperty=fullName&gt;.\n  overload: System.Web.UI.WebControls.WebControl.ToolTip*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.TrackViewState\n  id: TrackViewState\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: TrackViewState()\n  nameWithType: WebControl.TrackViewState()\n  fullName: System.Web.UI.WebControls.WebControl.TrackViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Causes the control to track changes to its view state so they can be stored in the object's <xref:System.Web.UI.Control.ViewState*> property.\n  remarks: \"The TrackViewState method is used primarily by control developers.  \\n  \\n The TrackViewState marks the starting point at which to begin tracking and saving changes to the view state for the control. The TrackViewState method is called automatically by ASP.NET when a server control is initialized.\"\n  syntax:\n    content: protected override void TrackViewState ();\n    parameters: []\n  overload: System.Web.UI.WebControls.WebControl.TrackViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebControl.Width\n  id: Width\n  parent: System.Web.UI.WebControls.WebControl\n  langs:\n  - csharp\n  name: Width\n  nameWithType: WebControl.Width\n  fullName: System.Web.UI.WebControls.WebControl.Width\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the width of the Web server control.\n  remarks: \"Use the Width property to specify the width of the Web server control.  \\n  \\n> [!NOTE]\\n>  This property does not render for all controls in browsers earlier than Microsoft Internet Explorer version 4. Controls that do not render this property in earlier browsers include <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>, and any validation controls. The <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> and <xref:System.Web.UI.WebControls.DataList> also do not render this property in earlier browsers when their `RepeatLayout` property is set to `RepeatLayout.Flow`. Furthermore, only unit types of `Pixel` and `Percentage` are supported in earlier browsers.  \\n  \\n Because this property is nonstandard HTML, Web server controls that display as a table, such as <xref:System.Web.UI.WebControls.Table> and <xref:System.Web.UI.WebControls.DataGrid>, do not support this property in browsers earlier than Microsoft Internet Explorer version 4.  \\n  \\n> [!NOTE]\\n>  To set the Width property declaratively to a unit type other than the default of `Pixel`, you must create a new unit type specific to the unit type you want. For example, to set a control's Width property to a percentage value of 100, you could do the following:  \\n>   \\n>  `myWebControl.width = Unit.Percentage(100);`  \\n>   \\n>  For more information on the unit types available for the Width property, see the <xref:System.Web.UI.WebControls.Unit> class.\"\n  example:\n  - \"The following example illustrates how to declaratively set the Width property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \\n  \\n [!code-cs[Classic WebControl.Width Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_671_1.aspx)]\\n [!code-vb[Classic WebControl.Width Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_671_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.Unit Width { get; set; }\n    return:\n      type: System.Web.UI.WebControls.Unit\n      description: A <xref href=\"System.Web.UI.WebControls.Unit\"></xref> that represents the width of the control. The default is <xref href=\"System.Web.UI.WebControls.Unit\"></xref>.\n  overload: System.Web.UI.WebControls.WebControl.Width*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The width of the Web server control was set to a negative value.\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.Control\n  isExternal: false\n  name: System.Web.UI.Control\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.UI.WebControls.WebControl.#ctor\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: WebControl()\n  nameWithType: WebControl.WebControl()\n  fullName: System.Web.UI.WebControls.WebControl.WebControl()\n- uid: System.Web.UI.WebControls.WebControl.#ctor(System.String)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: WebControl(String)\n  nameWithType: WebControl.WebControl(String)\n  fullName: System.Web.UI.WebControls.WebControl.WebControl(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: WebControl(HtmlTextWriterTag)\n  nameWithType: WebControl.WebControl(HtmlTextWriterTag)\n  fullName: System.Web.UI.WebControls.WebControl.WebControl(HtmlTextWriterTag)\n- uid: System.Web.UI.HtmlTextWriterTag\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriterTag\n  nameWithType: HtmlTextWriterTag\n  fullName: System.Web.UI.HtmlTextWriterTag\n- uid: System.Web.UI.WebControls.WebControl.AccessKey\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: AccessKey\n  nameWithType: WebControl.AccessKey\n  fullName: System.Web.UI.WebControls.WebControl.AccessKey\n- uid: System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: AddAttributesToRender(HtmlTextWriter)\n  nameWithType: WebControl.AddAttributesToRender(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.WebControl.AddAttributesToRender(HtmlTextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: ApplyStyle(Style)\n  nameWithType: WebControl.ApplyStyle(Style)\n  fullName: System.Web.UI.WebControls.WebControl.ApplyStyle(Style)\n- uid: System.Web.UI.WebControls.Style\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: Style\n  nameWithType: Style\n  fullName: System.Web.UI.WebControls.Style\n- uid: System.Web.UI.WebControls.WebControl.Attributes\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Attributes\n  nameWithType: WebControl.Attributes\n  fullName: System.Web.UI.WebControls.WebControl.Attributes\n- uid: System.Web.UI.AttributeCollection\n  parent: System.Web.UI\n  isExternal: false\n  name: AttributeCollection\n  nameWithType: AttributeCollection\n  fullName: System.Web.UI.AttributeCollection\n- uid: System.Web.UI.WebControls.WebControl.BackColor\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: BackColor\n  nameWithType: WebControl.BackColor\n  fullName: System.Web.UI.WebControls.WebControl.BackColor\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Web.UI.WebControls.WebControl.BorderColor\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: BorderColor\n  nameWithType: WebControl.BorderColor\n  fullName: System.Web.UI.WebControls.WebControl.BorderColor\n- uid: System.Web.UI.WebControls.WebControl.BorderStyle\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: BorderStyle\n  nameWithType: WebControl.BorderStyle\n  fullName: System.Web.UI.WebControls.WebControl.BorderStyle\n- uid: System.Web.UI.WebControls.BorderStyle\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: BorderStyle\n  nameWithType: BorderStyle\n  fullName: System.Web.UI.WebControls.BorderStyle\n- uid: System.Web.UI.WebControls.WebControl.BorderWidth\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: BorderWidth\n  nameWithType: WebControl.BorderWidth\n  fullName: System.Web.UI.WebControls.WebControl.BorderWidth\n- uid: System.Web.UI.WebControls.Unit\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: Unit\n  nameWithType: Unit\n  fullName: System.Web.UI.WebControls.Unit\n- uid: System.Web.UI.WebControls.WebControl.ControlStyle\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: ControlStyle\n  nameWithType: WebControl.ControlStyle\n  fullName: System.Web.UI.WebControls.WebControl.ControlStyle\n- uid: System.Web.UI.WebControls.WebControl.ControlStyleCreated\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: ControlStyleCreated\n  nameWithType: WebControl.ControlStyleCreated\n  fullName: System.Web.UI.WebControls.WebControl.ControlStyleCreated\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: CopyBaseAttributes(WebControl)\n  nameWithType: WebControl.CopyBaseAttributes(WebControl)\n  fullName: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(WebControl)\n- uid: System.Web.UI.WebControls.WebControl\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: WebControl\n  nameWithType: WebControl\n  fullName: System.Web.UI.WebControls.WebControl\n- uid: System.Web.UI.WebControls.WebControl.CreateControlStyle\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: CreateControlStyle()\n  nameWithType: WebControl.CreateControlStyle()\n  fullName: System.Web.UI.WebControls.WebControl.CreateControlStyle()\n- uid: System.Web.UI.WebControls.WebControl.CssClass\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: CssClass\n  nameWithType: WebControl.CssClass\n  fullName: System.Web.UI.WebControls.WebControl.CssClass\n- uid: System.Web.UI.WebControls.WebControl.DisabledCssClass\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: DisabledCssClass\n  nameWithType: WebControl.DisabledCssClass\n  fullName: System.Web.UI.WebControls.WebControl.DisabledCssClass\n- uid: System.Web.UI.WebControls.WebControl.Enabled\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Enabled\n  nameWithType: WebControl.Enabled\n  fullName: System.Web.UI.WebControls.WebControl.Enabled\n- uid: System.Web.UI.WebControls.WebControl.EnableTheming\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: EnableTheming\n  nameWithType: WebControl.EnableTheming\n  fullName: System.Web.UI.WebControls.WebControl.EnableTheming\n- uid: System.Web.UI.WebControls.WebControl.Font\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Font\n  nameWithType: WebControl.Font\n  fullName: System.Web.UI.WebControls.WebControl.Font\n- uid: System.Web.UI.WebControls.FontInfo\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: FontInfo\n  nameWithType: FontInfo\n  fullName: System.Web.UI.WebControls.FontInfo\n- uid: System.Web.UI.WebControls.WebControl.ForeColor\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: ForeColor\n  nameWithType: WebControl.ForeColor\n  fullName: System.Web.UI.WebControls.WebControl.ForeColor\n- uid: System.Web.UI.WebControls.WebControl.HasAttributes\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: HasAttributes\n  nameWithType: WebControl.HasAttributes\n  fullName: System.Web.UI.WebControls.WebControl.HasAttributes\n- uid: System.Web.UI.WebControls.WebControl.Height\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Height\n  nameWithType: WebControl.Height\n  fullName: System.Web.UI.WebControls.WebControl.Height\n- uid: System.Web.UI.WebControls.WebControl.IsEnabled\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: IsEnabled\n  nameWithType: WebControl.IsEnabled\n  fullName: System.Web.UI.WebControls.WebControl.IsEnabled\n- uid: System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: LoadViewState(Object)\n  nameWithType: WebControl.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.WebControl.LoadViewState(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: MergeStyle(Style)\n  nameWithType: WebControl.MergeStyle(Style)\n  fullName: System.Web.UI.WebControls.WebControl.MergeStyle(Style)\n- uid: System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Render(HtmlTextWriter)\n  nameWithType: WebControl.Render(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.WebControl.Render(HtmlTextWriter)\n- uid: System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: RenderBeginTag(HtmlTextWriter)\n  nameWithType: WebControl.RenderBeginTag(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.WebControl.RenderBeginTag(HtmlTextWriter)\n- uid: System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: RenderContents(HtmlTextWriter)\n  nameWithType: WebControl.RenderContents(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.WebControl.RenderContents(HtmlTextWriter)\n- uid: System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: RenderEndTag(HtmlTextWriter)\n  nameWithType: WebControl.RenderEndTag(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.WebControl.RenderEndTag(HtmlTextWriter)\n- uid: System.Web.UI.WebControls.WebControl.SaveViewState\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: SaveViewState()\n  nameWithType: WebControl.SaveViewState()\n  fullName: System.Web.UI.WebControls.WebControl.SaveViewState()\n- uid: System.Web.UI.WebControls.WebControl.SkinID\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: SkinID\n  nameWithType: WebControl.SkinID\n  fullName: System.Web.UI.WebControls.WebControl.SkinID\n- uid: System.Web.UI.WebControls.WebControl.Style\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Style\n  nameWithType: WebControl.Style\n  fullName: System.Web.UI.WebControls.WebControl.Style\n- uid: System.Web.UI.CssStyleCollection\n  parent: System.Web.UI\n  isExternal: false\n  name: CssStyleCollection\n  nameWithType: CssStyleCollection\n  fullName: System.Web.UI.CssStyleCollection\n- uid: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: SupportsDisabledAttribute\n  nameWithType: WebControl.SupportsDisabledAttribute\n  fullName: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute\n- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)\n  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)\n  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)\n- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n- uid: System.Web.UI.WebControls.WebControl.TabIndex\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: TabIndex\n  nameWithType: WebControl.TabIndex\n  fullName: System.Web.UI.WebControls.WebControl.TabIndex\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Web.UI.WebControls.WebControl.TagKey\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: TagKey\n  nameWithType: WebControl.TagKey\n  fullName: System.Web.UI.WebControls.WebControl.TagKey\n- uid: System.Web.UI.WebControls.WebControl.TagName\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: TagName\n  nameWithType: WebControl.TagName\n  fullName: System.Web.UI.WebControls.WebControl.TagName\n- uid: System.Web.UI.WebControls.WebControl.ToolTip\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: ToolTip\n  nameWithType: WebControl.ToolTip\n  fullName: System.Web.UI.WebControls.WebControl.ToolTip\n- uid: System.Web.UI.WebControls.WebControl.TrackViewState\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: TrackViewState()\n  nameWithType: WebControl.TrackViewState()\n  fullName: System.Web.UI.WebControls.WebControl.TrackViewState()\n- uid: System.Web.UI.WebControls.WebControl.Width\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Width\n  nameWithType: WebControl.Width\n  fullName: System.Web.UI.WebControls.WebControl.Width\n- uid: System.Web.UI.WebControls.WebControl.#ctor*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: WebControl\n  nameWithType: WebControl.WebControl\n- uid: System.Web.UI.WebControls.WebControl.AccessKey*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: AccessKey\n  nameWithType: WebControl.AccessKey\n- uid: System.Web.UI.WebControls.WebControl.AddAttributesToRender*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: AddAttributesToRender\n  nameWithType: WebControl.AddAttributesToRender\n- uid: System.Web.UI.WebControls.WebControl.ApplyStyle*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: ApplyStyle\n  nameWithType: WebControl.ApplyStyle\n- uid: System.Web.UI.WebControls.WebControl.Attributes*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Attributes\n  nameWithType: WebControl.Attributes\n- uid: System.Web.UI.WebControls.WebControl.BackColor*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: BackColor\n  nameWithType: WebControl.BackColor\n- uid: System.Web.UI.WebControls.WebControl.BorderColor*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: BorderColor\n  nameWithType: WebControl.BorderColor\n- uid: System.Web.UI.WebControls.WebControl.BorderStyle*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: BorderStyle\n  nameWithType: WebControl.BorderStyle\n- uid: System.Web.UI.WebControls.WebControl.BorderWidth*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: BorderWidth\n  nameWithType: WebControl.BorderWidth\n- uid: System.Web.UI.WebControls.WebControl.ControlStyle*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: ControlStyle\n  nameWithType: WebControl.ControlStyle\n- uid: System.Web.UI.WebControls.WebControl.ControlStyleCreated*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: ControlStyleCreated\n  nameWithType: WebControl.ControlStyleCreated\n- uid: System.Web.UI.WebControls.WebControl.CopyBaseAttributes*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: CopyBaseAttributes\n  nameWithType: WebControl.CopyBaseAttributes\n- uid: System.Web.UI.WebControls.WebControl.CreateControlStyle*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: CreateControlStyle\n  nameWithType: WebControl.CreateControlStyle\n- uid: System.Web.UI.WebControls.WebControl.CssClass*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: CssClass\n  nameWithType: WebControl.CssClass\n- uid: System.Web.UI.WebControls.WebControl.DisabledCssClass*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: DisabledCssClass\n  nameWithType: WebControl.DisabledCssClass\n- uid: System.Web.UI.WebControls.WebControl.Enabled*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Enabled\n  nameWithType: WebControl.Enabled\n- uid: System.Web.UI.WebControls.WebControl.EnableTheming*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: EnableTheming\n  nameWithType: WebControl.EnableTheming\n- uid: System.Web.UI.WebControls.WebControl.Font*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Font\n  nameWithType: WebControl.Font\n- uid: System.Web.UI.WebControls.WebControl.ForeColor*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: ForeColor\n  nameWithType: WebControl.ForeColor\n- uid: System.Web.UI.WebControls.WebControl.HasAttributes*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: HasAttributes\n  nameWithType: WebControl.HasAttributes\n- uid: System.Web.UI.WebControls.WebControl.Height*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Height\n  nameWithType: WebControl.Height\n- uid: System.Web.UI.WebControls.WebControl.IsEnabled*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: IsEnabled\n  nameWithType: WebControl.IsEnabled\n- uid: System.Web.UI.WebControls.WebControl.LoadViewState*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: LoadViewState\n  nameWithType: WebControl.LoadViewState\n- uid: System.Web.UI.WebControls.WebControl.MergeStyle*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: MergeStyle\n  nameWithType: WebControl.MergeStyle\n- uid: System.Web.UI.WebControls.WebControl.Render*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Render\n  nameWithType: WebControl.Render\n- uid: System.Web.UI.WebControls.WebControl.RenderBeginTag*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: RenderBeginTag\n  nameWithType: WebControl.RenderBeginTag\n- uid: System.Web.UI.WebControls.WebControl.RenderContents*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: RenderContents\n  nameWithType: WebControl.RenderContents\n- uid: System.Web.UI.WebControls.WebControl.RenderEndTag*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: RenderEndTag\n  nameWithType: WebControl.RenderEndTag\n- uid: System.Web.UI.WebControls.WebControl.SaveViewState*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: SaveViewState\n  nameWithType: WebControl.SaveViewState\n- uid: System.Web.UI.WebControls.WebControl.SkinID*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: SkinID\n  nameWithType: WebControl.SkinID\n- uid: System.Web.UI.WebControls.WebControl.Style*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Style\n  nameWithType: WebControl.Style\n- uid: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: SupportsDisabledAttribute\n  nameWithType: WebControl.SupportsDisabledAttribute\n- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: System.Web.UI.IAttributeAccessor.GetAttribute\n  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.GetAttribute\n- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: System.Web.UI.IAttributeAccessor.SetAttribute\n  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.SetAttribute\n- uid: System.Web.UI.WebControls.WebControl.TabIndex*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: TabIndex\n  nameWithType: WebControl.TabIndex\n- uid: System.Web.UI.WebControls.WebControl.TagKey*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: TagKey\n  nameWithType: WebControl.TagKey\n- uid: System.Web.UI.WebControls.WebControl.TagName*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: TagName\n  nameWithType: WebControl.TagName\n- uid: System.Web.UI.WebControls.WebControl.ToolTip*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: ToolTip\n  nameWithType: WebControl.ToolTip\n- uid: System.Web.UI.WebControls.WebControl.TrackViewState*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: TrackViewState\n  nameWithType: WebControl.TrackViewState\n- uid: System.Web.UI.WebControls.WebControl.Width*\n  parent: System.Web.UI.WebControls.WebControl\n  isExternal: false\n  name: Width\n  nameWithType: WebControl.Width\n"}