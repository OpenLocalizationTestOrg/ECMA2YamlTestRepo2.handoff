{"nodes":[{"pos":[497,548],"content":"Represents a document referenced by a symbol store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a document referenced by a symbol store.","pos":[0,51]}]},{"pos":[561,923],"content":"A document is defined by a URL and a document type GUID. Optionally, the document source can be stored in the symbol store.      > [!NOTE] >  This interface is the managed counterpart of the `ISymUnmanagedDocumentWriter` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.","needQuote":false,"needEscape":true,"nodes":[{"content":"A document is defined by a URL and a document type GUID.","pos":[0,56]},{"content":"Optionally, the document source can be stored in the symbol store.","pos":[57,123]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This interface is the managed counterpart of the <ph id=\"ph2\">`ISymUnmanagedDocumentWriter`</ph> interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.","pos":[129,359],"source":"      > [!NOTE] >  This interface is the managed counterpart of the `ISymUnmanagedDocumentWriter` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information."}]},{"pos":[2100,2126],"content":"Sets checksum information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets checksum information.","pos":[0,26]}]},{"pos":[2138,2173],"content":"Sets the checksum for the document.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the checksum for the document.","pos":[0,35]}]},{"pos":[2339,2378],"content":"The GUID representing the algorithm ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GUID representing the algorithm ID.","pos":[0,39]}]},{"pos":[2443,2456],"content":"The checksum.","needQuote":true,"needEscape":true,"nodes":[{"content":"The checksum.","pos":[0,13]}]},{"pos":[3036,3093],"content":"Stores the raw source for a document in the symbol store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stores the raw source for a document in the symbol store.","pos":[0,57]}]},{"pos":[3105,3208],"content":"An array of unsigned bytes is used instead of character data to accommodate a wider variety of sources.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of unsigned bytes is used instead of character data to accommodate a wider variety of sources.","pos":[0,103]}]},{"pos":[3349,3399],"content":"The document source represented as unsigned bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The document source represented as unsigned bytes.","pos":[0,50]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  id: ISymbolDocumentWriter\n  children:\n  - System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(System.Guid,System.Byte[])\n  - System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(System.Byte[])\n  langs:\n  - csharp\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  type: Interface\n  summary: Represents a document referenced by a symbol store.\n  remarks: \"A document is defined by a URL and a document type GUID. Optionally, the document source can be stored in the symbol store.  \\n  \\n> [!NOTE]\\n>  This interface is the managed counterpart of the `ISymUnmanagedDocumentWriter` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.\"\n  example:\n  - \"The following code example demonstrates how an ISymbolDocumentWriter can be obtained when calling <xref:System.Reflection.Emit.ModuleBuilder.DefineDocument%2A>.  \\n  \\n [!code-cs[ModuleBuilder_DefineDocument#1](~/add/codesnippet/csharp/t-system.diagnostics.sym_1_1.cs)]\\n [!code-cpp[ModuleBuilder_DefineDocument#1](~/add/codesnippet/cpp/t-system.diagnostics.sym_1_1.cpp)]\\n [!code-vb[ModuleBuilder_DefineDocument#1](~/add/codesnippet/visualbasic/t-system.diagnostics.sym_1_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISymbolDocumentWriter\n  implements: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(System.Guid,System.Byte[])\n  id: SetCheckSum(System.Guid,System.Byte[])\n  parent: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  langs:\n  - csharp\n  name: SetCheckSum(Guid,Byte[])\n  nameWithType: ISymbolDocumentWriter.SetCheckSum(Guid,Byte[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(Guid,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Sets checksum information.\n  remarks: Sets the checksum for the document.\n  syntax:\n    content: public void SetCheckSum (Guid algorithmId, byte[] checkSum);\n    parameters:\n    - id: algorithmId\n      type: System.Guid\n      description: The GUID representing the algorithm ID.\n    - id: checkSum\n      type: System.Byte[]\n      description: The checksum.\n  overload: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(System.Byte[])\n  id: SetSource(System.Byte[])\n  parent: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  langs:\n  - csharp\n  name: SetSource(Byte[])\n  nameWithType: ISymbolDocumentWriter.SetSource(Byte[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Stores the raw source for a document in the symbol store.\n  remarks: An array of unsigned bytes is used instead of character data to accommodate a wider variety of sources.\n  syntax:\n    content: public void SetSource (byte[] source);\n    parameters:\n    - id: source\n      type: System.Byte[]\n      description: The document source represented as unsigned bytes.\n  overload: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(System.Guid,System.Byte[])\n  parent: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  isExternal: false\n  name: SetCheckSum(Guid,Byte[])\n  nameWithType: ISymbolDocumentWriter.SetCheckSum(Guid,Byte[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(Guid,Byte[])\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(System.Byte[])\n  parent: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  isExternal: false\n  name: SetSource(Byte[])\n  nameWithType: ISymbolDocumentWriter.SetSource(Byte[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(Byte[])\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum*\n  parent: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  isExternal: false\n  name: SetCheckSum\n  nameWithType: ISymbolDocumentWriter.SetCheckSum\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource*\n  parent: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  isExternal: false\n  name: SetSource\n  nameWithType: ISymbolDocumentWriter.SetSource\n"}