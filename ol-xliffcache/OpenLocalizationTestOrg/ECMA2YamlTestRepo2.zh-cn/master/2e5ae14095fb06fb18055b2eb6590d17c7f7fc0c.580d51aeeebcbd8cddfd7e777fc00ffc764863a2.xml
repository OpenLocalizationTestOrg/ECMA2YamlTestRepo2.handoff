{"nodes":[{"pos":[630,743],"content":"Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.","pos":[0,113]}]},{"pos":[756,6867],"content":"Use of SemanticResultValue and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>. Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.      > [!NOTE] >  Values managed by SemanticResultValue objects are defined by <xref:System.Object> instances passed to their constructors. The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`. Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the SemanticResultValue.       The typical use of a SemanticResultValue instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object. If the associated component is used as part of a recognition operation, the SemanticResultValue is used to define a value in the semantics of the returned phrase.       There are two basic methods for associating a SemanticResultValue instance with a grammar element, depending on the constructor used to create the SemanticResultValue.      -   If only the value (specified by an instance of <xref:System.Object>) is used to construct a SemanticResultValue object, the SemanticResultValue is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.           For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word \"background\", a value of `true` is set in the recognized phrase semantics.          ```c#       GrammarBuilder backgroundGB=new GrammarBuilder(\"background\");       backgroundGB.Append(new SemanticResultValue(true));       ```           For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.      -   If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a SemanticResultValue value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.  If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.           The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>. If the recognition logic uses the word \"background\", the value `true` will be added to the recognized semantics.          ```c#       fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\"background\", true));       ```           For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.       To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all SemanticResultValue instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>. This is done by associating a semantic key with the SemanticResultValue.       Semantic keys can be explicitly attached to a SemanticResultValue, using a <xref:System.Speech.Recognition.SemanticResultKey> object.  SemanticResultValue instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.       After a SemanticResultValue has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.       The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.      ```c#   GrammarBuilder gb=new GrammarBuilder();   gb.Append(new SemanticResultValue(\"One\"));   gb.Append(new SemanticResultValue(\"Two\"));   ```       On the other hand, the code in the following example is permitted. Although it defines multiple instances of SemanticResultValue, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.      ```c#   Choices fgOrbgChoice = new Choices();   fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\"background\"));   fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\"foreground\"));   SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(\"BgOrFgText\", fgOrbgChoice);   ```       For more information about using SemanticResultValue and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use of SemanticResultValue and &lt;xref:System.Speech.Recognition.SemanticResultKey&gt; objects, in conjunction with &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; and &lt;xref:System.Speech.Recognition.Choices&gt;, is the easiest way to design a semantic structure for a &lt;xref:System.Speech.Recognition.Grammar&gt;.","pos":[0,302],"source":"Use of SemanticResultValue and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>."},{"content":"Semantic information for a phrase is accessed by obtaining an instance of &lt;xref:System.Speech.Recognition.SemanticValue&gt;, through the &lt;xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A&gt; property on &lt;xref:System.Speech.Recognition.RecognizedPhrase&gt;.","pos":[303,562],"source":" Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Values managed by SemanticResultValue objects are defined by &lt;xref:System.Object&gt; instances passed to their constructors.","pos":[568,702],"source":"      > [!NOTE] >  Values managed by SemanticResultValue objects are defined by <xref:System.Object> instances passed to their constructors."},{"content":"The underlying type of this &lt;xref:System.Object&gt; must be <ph id=\"ph1\">`bool`</ph>, <ph id=\"ph2\">`int`</ph>, <ph id=\"ph3\">`float`</ph>, or <ph id=\"ph4\">`string`</ph>.","pos":[703,796],"source":" The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`."},{"content":"Any other type will prevent construction of a &lt;xref:System.Speech.Recognition.Grammar&gt; instance with the SemanticResultValue.","pos":[797,922],"source":" Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the SemanticResultValue."},{"content":"The typical use of a SemanticResultValue instance associates the instance with a recognizable component of a &lt;xref:System.Speech.Recognition.Grammar&gt;, such as a phrase, a rule, or a &lt;xref:System.Speech.Recognition.Choices&gt; object.","pos":[929,1159],"source":"       The typical use of a SemanticResultValue instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object."},{"content":"If the associated component is used as part of a recognition operation, the SemanticResultValue is used to define a value in the semantics of the returned phrase.","pos":[1160,1322]},{"content":"There are two basic methods for associating a SemanticResultValue instance with a grammar element, depending on the constructor used to create the SemanticResultValue.","pos":[1329,1496]},{"content":"-   If only the value (specified by an instance of &lt;xref:System.Object&gt;) is used to construct a SemanticResultValue object, the SemanticResultValue is associated with the grammar component that preceded it, in addition to a &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; object.","pos":[1502,1781],"source":"      -   If only the value (specified by an instance of <xref:System.Object>) is used to construct a SemanticResultValue object, the SemanticResultValue is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object."},{"content":"For instance, in the code fragment below, if a &lt;xref:System.Speech.Recognition.Grammar&gt; constructed using this &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; instance recognizes the word \"background\", a value of <ph id=\"ph1\">`true`</ph> is set in the recognized phrase semantics.","pos":[1792,2054],"source":"           For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word \"background\", a value of `true` is set in the recognized phrase semantics."},{"content":"<ph id=\"ph1\">```c#       GrammarBuilder backgroundGB=new GrammarBuilder(\"background\");       backgroundGB.Append(new SemanticResultValue(true));       ```</ph>           For more information, see the description of &lt;xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29&gt;.","pos":[2064,2341],"source":"```c#       GrammarBuilder backgroundGB=new GrammarBuilder(\"background\");       backgroundGB.Append(new SemanticResultValue(true));       ```           For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>."},{"content":"-   If a string value phrase or specific &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; instance is used, together with a &lt;xref:System.Object&gt; that specifies a SemanticResultValue value, that value is automatically associated with the string value phrase or the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; instance.","pos":[2347,2667],"source":"      -   If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a SemanticResultValue value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance."},{"content":"If the phrase or &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.","pos":[2669,2849],"source":"  If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase."},{"content":"The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to &lt;xref:System.Speech.Recognition.GrammarBuilder.Append%2A&gt; and &lt;xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29&gt;.","pos":[2860,3128],"source":"           The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>."},{"content":"If the recognition logic uses the word \"background\", the value <ph id=\"ph1\">`true`</ph> will be added to the recognized semantics.","pos":[3129,3241],"source":" If the recognition logic uses the word \"background\", the value `true` will be added to the recognized semantics."},{"content":"<ph id=\"ph1\">```c#       fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\"background\", true));       ```</ph>           For more information, see the description of &lt;xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29&gt; and &lt;xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29&gt;.","pos":[3251,3630],"source":"```c#       fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\"background\", true));       ```           For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>."},{"content":"To be used by a &lt;xref:System.Speech.Recognition.Grammar&gt; in recognition, all SemanticResultValue instances must be associated with one of the &lt;xref:System.Speech.Recognition.SemanticValue&gt; objects used by that &lt;xref:System.Speech.Recognition.Grammar&gt;.","pos":[3637,3888],"source":"       To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all SemanticResultValue instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>."},{"content":"This is done by associating a semantic key with the SemanticResultValue.","pos":[3889,3961]},{"content":"Semantic keys can be explicitly attached to a SemanticResultValue, using a &lt;xref:System.Speech.Recognition.SemanticResultKey&gt; object.","pos":[3968,4101],"source":"       Semantic keys can be explicitly attached to a SemanticResultValue, using a <xref:System.Speech.Recognition.SemanticResultKey> object."},{"content":"SemanticResultValue instances not explicitly attached to a key are attached to the root key of the default &lt;xref:System.Speech.Recognition.SemanticValue&gt;.","pos":[4103,4257],"source":"  SemanticResultValue instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>."},{"content":"After a SemanticResultValue has been used to set the &lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;, whether it is tagged with the default root key or by any particular &lt;xref:System.Speech.Recognition.SemanticResultKey&gt;, that value must not be modified or an exception will occur during recognition operations.","pos":[4264,4583],"source":"       After a SemanticResultValue has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations."},{"content":"The following example will cause an exception because it sets and then modifies the root &lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt; of a &lt;xref:System.Speech.Recognition.Grammar&gt;.","pos":[4590,4781],"source":"       The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>."},{"content":"<ph id=\"ph1\">```c#   GrammarBuilder gb=new GrammarBuilder();   gb.Append(new SemanticResultValue(\"One\"));   gb.Append(new SemanticResultValue(\"Two\"));   ```</ph>       On the other hand, the code in the following example is permitted.","pos":[4787,5003],"source":"```c#   GrammarBuilder gb=new GrammarBuilder();   gb.Append(new SemanticResultValue(\"One\"));   gb.Append(new SemanticResultValue(\"Two\"));   ```       On the other hand, the code in the following example is permitted."},{"content":"Although it defines multiple instances of SemanticResultValue, they are included in a &lt;xref:System.Speech.Recognition.Choices&gt; object, and only one will ever be used to set the value of the key <ph id=\"ph1\">`bgOrfgText`</ph>.","pos":[5004,5211],"source":" Although it defines multiple instances of SemanticResultValue, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`."},{"content":"<ph id=\"ph1\">```c#   Choices fgOrbgChoice = new Choices();   fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\"background\"));   fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\"foreground\"));   SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(\"BgOrFgText\", fgOrbgChoice);   ```</ph>       For more information about using SemanticResultValue and &lt;xref:System.Speech.Recognition.SemanticResultKey&gt; objects, see <bpt id=\"p1\">[</bpt>Understanding SemanticResultValue and SemanticResultKey Objects<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c)</ept> and <bpt id=\"p2\">[</bpt>Using a SemanticResultKey to Extract a SemanticResultValue<ept id=\"p2\">](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa)</ept> in the <bpt id=\"p3\">[</bpt>System Speech Programming Guide for .NET Framework 4.0<ept id=\"p3\">](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043)</ept>.","pos":[5217,6040],"source":"```c#   Choices fgOrbgChoice = new Choices();   fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\"background\"));   fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\"foreground\"));   SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(\"BgOrFgText\", fgOrbgChoice);   ```       For more information about using SemanticResultValue and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043)."}]},{"pos":[10218,10356],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticResultValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and specifies a semantic value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> class and specifies a semantic value."},{"pos":[10369,11045],"content":"A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element. The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.       For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word \"background\", a value of `true` is set in the recognized phrase semantics.      ```c#   GrammarBuilder backgroundGB=new GrammarBuilder(\"background\");   backgroundGB.Append(new SemanticResultValue(true));   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">`SemanticResultValue`</ph> returned by this constructor is not associated with any particular grammar element.","pos":[0,107],"source":"A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element."},{"content":"The association must be made explicit by using the instance of <ph id=\"ph1\">`SemanticResultValue`</ph> in conjunction with &lt;xref:System.Speech.Recognition.GrammarBuilder&gt;.","pos":[108,261],"source":" The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>."},{"content":"For instance, in the code fragment below, if a &lt;xref:System.Speech.Recognition.Grammar&gt; constructed using this &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; instance recognizes the word \"background\", a value of <ph id=\"ph1\">`true`</ph> is set in the recognized phrase semantics.","pos":[268,530],"source":"       For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word \"background\", a value of `true` is set in the recognized phrase semantics."}]},{"pos":[13908,14267],"content":"The value managed by <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref>. Must be of type <xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"></xref>, <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>, <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref>, or <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value managed by <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticResultValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,88],"source":"The value managed by <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref>."},{"content":"Must be of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, or <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[89,359],"source":" Must be of type <xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"></xref>, <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>, <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref>, or <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref>."}]},{"pos":[14967,15182],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticResultValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and associates a semantic value with a <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.GrammarBuilder\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> class and associates a semantic value with a <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> object."},{"pos":[15195,16005],"content":"If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.       In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.      ```c#   myGb.Append(new SemanticResultValue(myChoice, true);   ```       As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the grammar element specified by &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; is used in the recognition logic, <ph id=\"ph1\">`value`</ph> will be set in the semantics of the recognized output.","pos":[0,180],"source":"If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output."},{"content":"In the code fragment below, if the recognition logic constructed with the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; instance (<ph id=\"ph1\">`myGb`</ph>) uses the &lt;xref:System.Speech.Recognition.Choices&gt; object (<ph id=\"ph2\">`myChoice`</ph>) to identify input, the value <ph id=\"ph3\">`true`</ph> is added to the recognized semantics.","pos":[187,470],"source":"       In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics."},{"content":"<ph id=\"ph1\">```c#   myGb.Append(new SemanticResultValue(myChoice, true);   ```</ph>       As &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; supports implicit conversion for &lt;xref:System.Speech.Recognition.Choices&gt;,  <ph id=\"ph2\">`SemanticResultValue`</ph>, and &lt;xref:System.Speech.Recognition.SemanticResultKey&gt;, this constructor can use those objects as well.","pos":[476,802],"source":"```c#   myGb.Append(new SemanticResultValue(myChoice, true);   ```       As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well."}]},{"pos":[18969,19015],"content":"A grammar component to be used in recognition.","needQuote":true,"needEscape":true,"nodes":[{"content":"A grammar component to be used in recognition.","pos":[0,46]}]},{"pos":[19077,19436],"content":"The value managed by <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref>. Must be of type <xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"></xref>, <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>, <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref>, or <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value managed by <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticResultValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,88],"source":"The value managed by <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref>."},{"content":"Must be of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, or <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[89,359],"source":" Must be of type <xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"></xref>, <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>, <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref>, or <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref>."}]},{"pos":[20058,20232],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticResultValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and associates a semantic value with a &lt;xref:System.String&gt; object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> class and associates a semantic value with a <xref:System.String> object."},{"pos":[20245,20723],"content":"If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.       In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string \"my mortgage\" to identify input, the value `true` will be added to the recognized semantics.      ```c#   myGb.Append(new SemanticResultValue(\"my mortgage\", true);   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"If the string specified by <ph id=\"ph1\">`phrase`</ph> is used in the recognition logic, <ph id=\"ph2\">`value`</ph> will be set in the semantics of the recognized output.","pos":[0,132],"source":"If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output."},{"content":"In the following code fragment, if the recognition logic constructed with the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; instance (<ph id=\"ph1\">`myGb`</ph>) uses the string \"my mortgage\" to identify input, the value <ph id=\"ph2\">`true`</ph> will be added to the recognized semantics.","pos":[139,391],"source":"       In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string \"my mortgage\" to identify input, the value `true` will be added to the recognized semantics."}]},{"pos":[23584,23619],"content":"A phrase to be used in recognition.","needQuote":true,"needEscape":true,"nodes":[{"content":"A phrase to be used in recognition.","pos":[0,35]}]},{"pos":[23681,24040],"content":"The value managed by <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref>. Must be of type <xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"></xref>, <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>, <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref>, or <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value managed by <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticResultValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,88],"source":"The value managed by <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref>."},{"content":"Must be of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, or <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[89,359],"source":" Must be of type <xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"></xref>, <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>, <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref>, or <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref>."}]},{"pos":[24571,24761],"content":"Returns an instance of <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.GrammarBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> constructed from the current <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SemanticResultValue\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> instance."},{"pos":[24773,25078],"content":"The use of ToGrammarBuilder is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).","needQuote":true,"needEscape":true,"nodes":[{"content":"The use of ToGrammarBuilder is equivalent to using the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; constructor that takes a &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; as an argument (&lt;xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29&gt;).","pos":[0,305],"source":"The use of ToGrammarBuilder is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>)."}]},{"pos":[27817,28007],"content":"Returns an instance of <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.GrammarBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> constructed from the current <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SemanticResultValue\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SemanticResultValue\n  id: SemanticResultValue\n  children:\n  - System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)\n  - System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)\n  - System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)\n  - System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder\n  langs:\n  - csharp\n  name: SemanticResultValue\n  nameWithType: SemanticResultValue\n  fullName: System.Speech.Recognition.SemanticResultValue\n  type: Class\n  summary: Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.\n  remarks: \"Use of SemanticResultValue and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>. Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.  \\n  \\n> [!NOTE]\\n>  Values managed by SemanticResultValue objects are defined by <xref:System.Object> instances passed to their constructors. The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`. Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the SemanticResultValue.  \\n  \\n The typical use of a SemanticResultValue instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object. If the associated component is used as part of a recognition operation, the SemanticResultValue is used to define a value in the semantics of the returned phrase.  \\n  \\n There are two basic methods for associating a SemanticResultValue instance with a grammar element, depending on the constructor used to create the SemanticResultValue.  \\n  \\n-   If only the value (specified by an instance of <xref:System.Object>) is used to construct a SemanticResultValue object, the SemanticResultValue is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.  \\n  \\n     For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word \\\"background\\\", a value of `true` is set in the recognized phrase semantics.  \\n  \\n    ```c#  \\n    GrammarBuilder backgroundGB=new GrammarBuilder(\\\"background\\\");  \\n    backgroundGB.Append(new SemanticResultValue(true));  \\n    ```  \\n  \\n     For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.  \\n  \\n-   If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a SemanticResultValue value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.  If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.  \\n  \\n     The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>. If the recognition logic uses the word \\\"background\\\", the value `true` will be added to the recognized semantics.  \\n  \\n    ```c#  \\n    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\\\"background\\\", true));  \\n    ```  \\n  \\n     For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.  \\n  \\n To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all SemanticResultValue instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>. This is done by associating a semantic key with the SemanticResultValue.  \\n  \\n Semantic keys can be explicitly attached to a SemanticResultValue, using a <xref:System.Speech.Recognition.SemanticResultKey> object.  SemanticResultValue instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.  \\n  \\n After a SemanticResultValue has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.  \\n  \\n The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.  \\n  \\n```c#  \\nGrammarBuilder gb=new GrammarBuilder();  \\ngb.Append(new SemanticResultValue(\\\"One\\\"));  \\ngb.Append(new SemanticResultValue(\\\"Two\\\"));  \\n```  \\n  \\n On the other hand, the code in the following example is permitted. Although it defines multiple instances of SemanticResultValue, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.  \\n  \\n```c#  \\nChoices fgOrbgChoice = new Choices();  \\nfgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\\\"background\\\"));  \\nfgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\\\"foreground\\\"));  \\nSemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(\\\"BgOrFgText\\\", fgOrbgChoice);  \\n```  \\n  \\n For more information about using SemanticResultValue and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043).\"\n  example:\n  - \"The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command \\\"Set/Change/Alter Foreground/Background … [color list]\\\".  SemanticResultValue and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.  The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.  \\n  \\n```  \\n  \\nprivate Grammar FgBgColorGrammar()   \\n{  \\n  Grammar grammar = null;  \\n  \\n  // Allow the command to begin with set, alter, change.  \\n  Choices introChoices = new Choices();  \\n  foreach (string introString in new string[] { \\\"Change\\\", \\\"Set\\\", \\\"Alter\\\" })   \\n  {  \\n    GrammarBuilder introGB = new GrammarBuilder(introString);  \\n    introChoices.Add(new SemanticResultValue(introGB, String.Format(\\\"Command: {0}\\\", introString)));  \\n  }    \\n  \\n  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  \\n  \\n  // Define the arguments for the command to select foreground or background   \\n  // and to change their color as semantic values.  \\n  Choices fgOrbgChoice = new Choices();  \\n  GrammarBuilder backgroundGB=new GrammarBuilder(\\\"background\\\");  \\n  backgroundGB.Append(new SemanticResultValue(true));  \\n  fgOrbgChoice.Add(backgroundGB);  \\n  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\\\"foreground\\\", false));  \\n  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(\\\"BgOrFgBool\\\", fgOrbgChoice);  \\n  Choices colorChoice = new Choices();  \\n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \\n  {  \\n  \\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      \\n    colorChoice.Add(  \\n        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  \\n  }  \\n  \\n  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  \\n  // semantic keys.  \\n  GrammarBuilder cmdArgs = new GrammarBuilder();  \\n  cmdArgs.Append(new SemanticResultKey(\\\"BgOrFgBool\\\", fgOrbgChoice));  \\n  cmdArgs.AppendWildcard();  \\n  cmdArgs.Append(new SemanticResultKey(\\\"colorStringList\\\", colorChoice));  \\n  \\n  GrammarBuilder cmds =   \\n      GrammarBuilder.Add(  \\n                       cmdIntro,  \\n                       new GrammarBuilder(new SemanticResultKey(\\\"Cmd Args\\\", cmdArgs)));  \\n  grammar = new Grammar(cmds);  \\n  grammar.Name = \\\"Tree [Set,change,alter] [foreground,background] * color\\\";  \\n  return grammar;  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{_tag.DebugSummary}\")]\n\n      public class SemanticResultValue\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Speech.Recognition.SemanticResultValue\n  langs:\n  - csharp\n  name: SemanticResultValue(Object)\n  nameWithType: SemanticResultValue.SemanticResultValue(Object)\n  fullName: System.Speech.Recognition.SemanticResultValue.SemanticResultValue(Object)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> class and specifies a semantic value.\n  remarks: \"A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element. The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.  \\n  \\n For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word \\\"background\\\", a value of `true` is set in the recognized phrase semantics.  \\n  \\n```c#  \\nGrammarBuilder backgroundGB=new GrammarBuilder(\\\"background\\\");  \\nbackgroundGB.Append(new SemanticResultValue(true));  \\n```\"\n  example:\n  - \"The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command \\\"Set/Change/Alter Foreground/Background … [color list]\\\". <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.  The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.  \\n  \\n```c#  \\n  \\nprivate Grammar FgBgColorGrammar()   \\n{  \\n  Grammar grammar = null;  \\n  \\n  // Allow the command to begin with set, alter, change.  \\n  Choices introChoices = new Choices();  \\n  foreach (string introString in new string[] { \\\"Change\\\", \\\"Set\\\", \\\"Alter\\\" })   \\n  {  \\n    GrammarBuilder introGB = new GrammarBuilder(introString);  \\n    introChoices.Add(  \\n                  new SemanticResultValue(introGB,  \\n                  String.Format(\\\"Command: {0}\\\", introString)));  \\n  }           \\n  \\n  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  \\n  \\n  // Define the arguments for the command to select foreground or background   \\n  // and to change their color as semantic values.  \\n  Choices fgOrbgChoice = new Choices();  \\n  GrammarBuilder backgroundGB=new GrammarBuilder(\\\"background\\\");  \\n  backgroundGB.Append(new SemanticResultValue(true));  \\n  fgOrbgChoice.Add(backgroundGB);  \\n  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\\\"foreground\\\", false));  \\n  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(\\\"BgOrFgBool\\\", fgOrbgChoice);  \\n  Choices colorChoice = new Choices();  \\n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \\n  {  \\n  \\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      \\n    colorChoice.Add(  \\n                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  \\n  }  \\n  \\n  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  \\n  // semantic keys.  \\n  GrammarBuilder cmdArgs = new GrammarBuilder();  \\n  cmdArgs.Append(new SemanticResultKey(\\\"BgOrFgBool\\\", fgOrbgChoice));  \\n  cmdArgs.AppendWildcard();  \\n  cmdArgs.Append(new SemanticResultKey(\\\"colorStringList\\\", colorChoice));  \\n  \\n  GrammarBuilder cmds =   \\n      GrammarBuilder.Add(  \\n        cmdIntro,   \\n        new GrammarBuilder(new SemanticResultKey(\\\"Cmd Args\\\", cmdArgs)));  \\n  grammar = new Grammar(cmds);  \\n  grammar.Name = \\\"Tree [Set,change,alter] [foreground,background] * color\\\";  \\n  return grammar;  \\n}  \\n```\"\n  syntax:\n    content: public SemanticResultValue (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value managed by <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref>. Must be of type <xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"></xref>, <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>, <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref>, or <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref>.\n  overload: System.Speech.Recognition.SemanticResultValue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)\n  id: '#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)'\n  parent: System.Speech.Recognition.SemanticResultValue\n  langs:\n  - csharp\n  name: SemanticResultValue(GrammarBuilder,Object)\n  nameWithType: SemanticResultValue.SemanticResultValue(GrammarBuilder,Object)\n  fullName: System.Speech.Recognition.SemanticResultValue.SemanticResultValue(GrammarBuilder,Object)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> class and associates a semantic value with a <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> object.\n  remarks: \"If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.  \\n  \\n In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.  \\n  \\n```c#  \\nmyGb.Append(new SemanticResultValue(myChoice, true);  \\n```  \\n  \\n As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.\"\n  example:\n  - \"The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command \\\"Set/Change/Alter Foreground/Background … [color list]\\\". <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.  The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.  \\n  \\n```c#  \\n  \\nprivate Grammar FgBgColorGrammar()   \\n{  \\n  Grammar grammar = null;  \\n  \\n  // Allow the command to begin with set, alter, change.  \\n  Choices introChoices = new Choices();  \\n  foreach (string introString in new string[] { \\\"Change\\\", \\\"Set\\\", \\\"Alter\\\" })   \\n  {  \\n    GrammarBuilder introGB = new GrammarBuilder(introString);  \\n    introChoices.Add(  \\n                  new SemanticResultValue(introGB,  \\n                  String.Format(\\\"Command: {0}\\\", introString)));  \\n  }           \\n  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  \\n  \\n  // Define the arguments for the command to select foreground or background   \\n  // and to change their color as semantic values.  \\n  Choices fgOrbgChoice = new Choices();  \\n  GrammarBuilder backgroundGB=new GrammarBuilder(\\\"background\\\");  \\n  backgroundGB.Append(new SemanticResultValue(true));  \\n  fgOrbgChoice.Add(backgroundGB);  \\n  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\\\"foreground\\\", false));  \\n  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(\\\"BgOrFgBool\\\", fgOrbgChoice);  \\n  Choices colorChoice = new Choices();  \\n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \\n  {  \\n  \\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      \\n    colorChoice.Add(  \\n              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  \\n    }  \\n  \\n  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  \\n  // semantic keys.  \\n  GrammarBuilder cmdArgs = new GrammarBuilder();  \\n  cmdArgs.Append(new SemanticResultKey(\\\"BgOrFgBool\\\", fgOrbgChoice));  \\n  cmdArgs.AppendWildcard();  \\n  cmdArgs.Append(new SemanticResultKey(\\\"colorStringList\\\", colorChoice));  \\n  \\n  GrammarBuilder cmds =   \\n      GrammarBuilder.Add(  \\n                      cmdIntro,  \\n                      new GrammarBuilder(new SemanticResultKey(\\\"Cmd Args\\\", cmdArgs)));  \\n  grammar = new Grammar(cmds);  \\n  grammar.Name = \\\"Tree [Set,change,alter] [foreground,background] * color\\\";  \\n  return grammar;  \\n}  \\n```\"\n  syntax:\n    content: public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);\n    parameters:\n    - id: builder\n      type: System.Speech.Recognition.GrammarBuilder\n      description: A grammar component to be used in recognition.\n    - id: value\n      type: System.Object\n      description: The value managed by <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref>. Must be of type <xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"></xref>, <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>, <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref>, or <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref>.\n  overload: System.Speech.Recognition.SemanticResultValue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)\n  id: '#ctor(System.String,System.Object)'\n  parent: System.Speech.Recognition.SemanticResultValue\n  langs:\n  - csharp\n  name: SemanticResultValue(String,Object)\n  nameWithType: SemanticResultValue.SemanticResultValue(String,Object)\n  fullName: System.Speech.Recognition.SemanticResultValue.SemanticResultValue(String,Object)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> class and associates a semantic value with a <xref:System.String> object.\n  remarks: \"If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.  \\n  \\n In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string \\\"my mortgage\\\" to identify input, the value `true` will be added to the recognized semantics.  \\n  \\n```c#  \\nmyGb.Append(new SemanticResultValue(\\\"my mortgage\\\", true);  \\n```\"\n  example:\n  - \"The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command \\\"Set/Change/Alter Foreground/Background … [color list]\\\". <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.  The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.  \\n  \\n```  \\nprivate Grammar FgBgColorGrammar()   \\n{  \\n  Grammar grammar = null;  \\n  \\n  // Allow command to begin with set, alter, change.  \\n  Choices introChoices = new Choices();  \\n  foreach (string introString in new string[] { \\\"Change\\\", \\\"Set\\\", \\\"Alter\\\" })   \\n  {  \\n    GrammarBuilder introGB = new GrammarBuilder(introString);  \\n    introChoices.Add(  \\n                  new SemanticResultValue(introGB,  \\n                  String.Format(\\\"Command: {0}\\\", introString)));  \\n  }  \\n  \\n  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  \\n  \\n  // Define the arguments for the command to select foreground or background   \\n  // and to change their color as semantic values.  \\n  Choices fgOrbgChoice = new Choices();  \\n  GrammarBuilder backgroundGB=new GrammarBuilder(\\\"background\\\");  \\n  backgroundGB.Append(new SemanticResultValue(true));  \\n  fgOrbgChoice.Add(backgroundGB);  \\n  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue(\\\"foreground\\\", false));  \\n  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey(\\\"BgOrFgBool\\\", fgOrbgChoice);  \\n  Choices colorChoice = new Choices();  \\n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \\n  {  \\n  \\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      \\n    colorChoice.Add(  \\n          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  \\n  }  \\n  \\n  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  \\n  // semantic keys.  \\n  GrammarBuilder cmdArgs = new GrammarBuilder();  \\n  cmdArgs.Append(new SemanticResultKey(\\\"BgOrFgBool\\\", fgOrbgChoice));  \\n  cmdArgs.AppendWildcard();  \\n  cmdArgs.Append(new SemanticResultKey(\\\"colorStringList\\\", colorChoice));  \\n  \\n  GrammarBuilder cmds =   \\n      GrammarBuilder.Add(cmdIntro,  \\n                         new GrammarBuilder(new SemanticResultKey(\\\"Cmd Args\\\", cmdArgs)));  \\n  grammar = new Grammar(cmds);  \\n  grammar.Name = \\\"Tree [Set,change,alter] [foreground,background] * color\\\";  \\n  return grammar;  \\n}  \\n  \\n```\"\n  syntax:\n    content: public SemanticResultValue (string phrase, object value);\n    parameters:\n    - id: phrase\n      type: System.String\n      description: A phrase to be used in recognition.\n    - id: value\n      type: System.Object\n      description: The value managed by <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref>. Must be of type <xref uid=\"langword_csharp_bool\" name=\"bool\" href=\"\"></xref>, <xref uid=\"langword_csharp_int\" name=\"int\" href=\"\"></xref>, <xref uid=\"langword_csharp_float\" name=\"float\" href=\"\"></xref>, or <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref>.\n  overload: System.Speech.Recognition.SemanticResultValue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder\n  id: ToGrammarBuilder\n  parent: System.Speech.Recognition.SemanticResultValue\n  langs:\n  - csharp\n  name: ToGrammarBuilder()\n  nameWithType: SemanticResultValue.ToGrammarBuilder()\n  fullName: System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> instance.\n  remarks: The use of ToGrammarBuilder is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).\n  example:\n  - \"The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.  \\n  \\n A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the [Add(GrammarBuilder\\\\[\\\\])](assetId:///M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])?qualifyHint=False&autoUpgrade=False) method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.  \\n  \\n A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.  \\n  \\n```c#  \\n  \\nprivate Grammar CreateGrammarBuilderRGBSemantics()   \\n{  \\n  \\n  // Create a set of choices, each a lookup from a color name to RBG.  \\n  // Choices constructors do not take a SemanticResultValue parameter, so  \\n  // cast SemanticResultValue to GrammarBuilder.  \\n  Choices colorChoice = new Choices();  \\n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \\n  {  \\n  \\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      \\n    SemanticResultValue colorValue =   \\n        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  \\n    colorChoice.Add(colorValue.ToGrammarBuilder());  \\n  }  \\n  \\n  SemanticResultKey choiceKey = new SemanticResultKey(\\\"rgb\\\", colorChoice);  \\n  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  \\n  \\n  // Create two intermediate grammars with an introductory phrase and the  \\n  // color choice.  \\n  GrammarBuilder makeBackgroundBuilder = \\\"Make background\\\";  \\n  makeBackgroundBuilder.Append(choiceBuilder);  \\n  \\n  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder(\\\"Configure background as\\\");  \\n  configureBackgroundBuilder.Append((new SemanticResultKey(\\\"rgb\\\", colorChoice)).ToGrammarBuilder());  \\n  \\n  // Create the final grammar, which recognizes either intermediate grammar.  \\n  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  \\n  grammar.Name = \\\"Set Background Color\\\";  \\n  \\n  return grammar;  \\n}  \\n  \\n```\"\n  syntax:\n    content: public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();\n    parameters: []\n    return:\n      type: System.Speech.Recognition.GrammarBuilder\n      description: Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> instance.\n  overload: System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)\n  parent: System.Speech.Recognition.SemanticResultValue\n  isExternal: false\n  name: SemanticResultValue(Object)\n  nameWithType: SemanticResultValue.SemanticResultValue(Object)\n  fullName: System.Speech.Recognition.SemanticResultValue.SemanticResultValue(Object)\n- uid: System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)\n  parent: System.Speech.Recognition.SemanticResultValue\n  isExternal: false\n  name: SemanticResultValue(GrammarBuilder,Object)\n  nameWithType: SemanticResultValue.SemanticResultValue(GrammarBuilder,Object)\n  fullName: System.Speech.Recognition.SemanticResultValue.SemanticResultValue(GrammarBuilder,Object)\n- uid: System.Speech.Recognition.GrammarBuilder\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: GrammarBuilder\n  nameWithType: GrammarBuilder\n  fullName: System.Speech.Recognition.GrammarBuilder\n- uid: System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)\n  parent: System.Speech.Recognition.SemanticResultValue\n  isExternal: false\n  name: SemanticResultValue(String,Object)\n  nameWithType: SemanticResultValue.SemanticResultValue(String,Object)\n  fullName: System.Speech.Recognition.SemanticResultValue.SemanticResultValue(String,Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder\n  parent: System.Speech.Recognition.SemanticResultValue\n  isExternal: false\n  name: ToGrammarBuilder()\n  nameWithType: SemanticResultValue.ToGrammarBuilder()\n  fullName: System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder()\n- uid: System.Speech.Recognition.SemanticResultValue.#ctor*\n  parent: System.Speech.Recognition.SemanticResultValue\n  isExternal: false\n  name: SemanticResultValue\n  nameWithType: SemanticResultValue.SemanticResultValue\n- uid: System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder*\n  parent: System.Speech.Recognition.SemanticResultValue\n  isExternal: false\n  name: ToGrammarBuilder\n  nameWithType: SemanticResultValue.ToGrammarBuilder\n"}