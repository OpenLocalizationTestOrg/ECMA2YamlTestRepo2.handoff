{"nodes":[{"pos":[656,842],"content":"The DsmlSoapConnection class is an abstract class that cannot be instantiated. It enables stateless and stateful protocols to be handled similarly by providing session-oriented features.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DsmlSoapConnection class is an abstract class that cannot be instantiated. It enables stateless and stateful protocols to be handled similarly by providing session-oriented features.","pos":[0,186],"nodes":[{"content":"The DsmlSoapConnection class is an abstract class that cannot be instantiated.","pos":[0,78]},{"content":"It enables stateless and stateful protocols to be handled similarly by providing session-oriented features.","pos":[79,186]}]}]},{"pos":[1995,2143],"content":"The DsmlSoapConnection constructor initializes a new instance of a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.Protocols.DsmlSoapConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"The DsmlSoapConnection constructor initializes a new instance of a <xref href=\"System.DirectoryServices.Protocols.DsmlSoapConnection\"></xref> class."},{"pos":[2790,2863],"content":"The BeginSession method instructs the DSML server to start a new session.","needQuote":true,"needEscape":true,"nodes":[{"content":"The BeginSession method instructs the DSML server to start a new session.","pos":[0,73]}]},{"pos":[2875,3063],"content":"The method will block while waiting for a response from the DSML server and will timeout according to the <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method will block while waiting for a response from the DSML server and will timeout according to the &lt;xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A&gt; property.","pos":[0,188],"source":"The method will block while waiting for a response from the DSML server and will timeout according to the <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> property."}]},{"pos":[3348,3404],"content":"Thrown when a session is already open on the connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown when a session is already open on the connection.","pos":[0,56]}]},{"pos":[3577,3673],"content":"Thrown when the XML returned from the Server in response to the BeginSession is not well-formed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown when the XML returned from the Server in response to the BeginSession is not well-formed.","pos":[0,96]}]},{"pos":[3766,3833],"content":"Thrown when there is a communications failure with the DSML server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown when there is a communications failure with the DSML server.","pos":[0,67]}]},{"pos":[4305,4461],"content":"The EndSession method ends the session with the DSML server and clears the <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The EndSession method ends the session with the DSML server and clears the &lt;xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId*&gt; property.","pos":[0,156],"source":"The EndSession method ends the session with the DSML server and clears the <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId*> property."}]},{"pos":[4474,4971],"content":"The method will block while waiting for a response from the DSML server and will timeout according to the <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> property.       If the DSML server terminates the session, a <xref:System.Net.WebException>       is thrown. If <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A> is still valid after the exception is thrown, the request never reached the server and the connection is still considered valid.","needQuote":false,"needEscape":true,"nodes":[{"content":"The method will block while waiting for a response from the DSML server and will timeout according to the <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> property.       If the DSML server terminates the session, a <xref:System.Net.WebException>       is thrown. If <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A> is still valid after the exception is thrown, the request never reached the server and the connection is still considered valid.","pos":[0,493],"nodes":[{"content":"The method will block while waiting for a response from the DSML server and will timeout according to the &lt;xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A&gt; property.","pos":[0,188],"source":"The method will block while waiting for a response from the DSML server and will timeout according to the <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> property."},{"content":"If the DSML server terminates the session, a &lt;xref:System.Net.WebException&gt;       is thrown.","pos":[195,287],"source":"       If the DSML server terminates the session, a <xref:System.Net.WebException>       is thrown."},{"content":"If &lt;xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A&gt; is still valid after the exception is thrown, the request never reached the server and the connection is still considered valid.","pos":[288,493],"source":" If <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A> is still valid after the exception is thrown, the request never reached the server and the connection is still considered valid."}]}]},{"pos":[5235,5300],"content":"Thrown when a communications failure occurs with the DSML server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown when a communications failure occurs with the DSML server.","pos":[0,65]}]},{"pos":[5411,5448],"content":"Thrown when there is no open session.","needQuote":true,"needEscape":true,"nodes":[{"content":"Thrown when there is no open session.","pos":[0,37]}]},{"pos":[5911,5965],"content":"The SessionId property contains the active session ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SessionId property contains the active session ID.","pos":[0,54]}]},{"pos":[5977,6018],"content":"A null value signifies no active session.","needQuote":true,"needEscape":true,"nodes":[{"content":"A null value signifies no active session.","pos":[0,41]}]},{"pos":[6141,6163],"content":"The active session ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The active session ID.","pos":[0,22]}]},{"pos":[6760,6846],"content":"The SoapRequestHeader property contains the SOAP Header attached to outgoing requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SoapRequestHeader property contains the SOAP Header attached to outgoing requests.","pos":[0,86]}]},{"pos":[6859,7220],"content":"The API uses <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A> and <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A> to track the lifetime of a session.       **Caution** Attaching an EndSession header to the SoapRequestHeader causes the API to become inconsistent with the connection and should be avoided.","needQuote":false,"needEscape":true,"nodes":[{"content":"The API uses &lt;xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A&gt; and &lt;xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A&gt; to track the lifetime of a session.","pos":[0,204],"source":"The API uses <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A> and <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A> to track the lifetime of a session."},{"content":"<bpt id=\"p1\">**</bpt>Caution<ept id=\"p1\">**</ept> Attaching an EndSession header to the SoapRequestHeader causes the API to become inconsistent with the connection and should be avoided.","pos":[211,359],"source":"**Caution** Attaching an EndSession header to the SoapRequestHeader causes the API to become inconsistent with the connection and should be avoided."}]},{"pos":[7365,7411],"content":"The SOAP Header attached to outgoing requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SOAP Header attached to outgoing requests.","pos":[0,46]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection\n  id: DsmlSoapConnection\n  children:\n  - System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor\n  - System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession\n  - System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession\n  - System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId\n  - System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader\n  langs:\n  - csharp\n  name: DsmlSoapConnection\n  nameWithType: DsmlSoapConnection\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection\n  type: Class\n  summary: The DsmlSoapConnection class is an abstract class that cannot be instantiated. It enables stateless and stateful protocols to be handled similarly by providing session-oriented features.\n  syntax:\n    content: 'public abstract class DsmlSoapConnection : System.DirectoryServices.Protocols.DirectoryConnection'\n  inheritance:\n  - System.Object\n  - System.DirectoryServices.Protocols.DirectoryConnection\n  implements: []\n  inheritedMembers:\n  - System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates\n  - System.DirectoryServices.Protocols.DirectoryConnection.Credential\n  - System.DirectoryServices.Protocols.DirectoryConnection.Directory\n  - System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)\n  - System.DirectoryServices.Protocols.DirectoryConnection.Timeout\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  langs:\n  - csharp\n  name: DsmlSoapConnection()\n  nameWithType: DsmlSoapConnection.DsmlSoapConnection()\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.DsmlSoapConnection()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The DsmlSoapConnection constructor initializes a new instance of a <xref href=\"System.DirectoryServices.Protocols.DsmlSoapConnection\"></xref> class.\n  syntax:\n    content: protected DsmlSoapConnection ();\n    parameters: []\n  overload: System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession\n  id: BeginSession\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  langs:\n  - csharp\n  name: BeginSession()\n  nameWithType: DsmlSoapConnection.BeginSession()\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The BeginSession method instructs the DSML server to start a new session.\n  remarks: The method will block while waiting for a response from the DSML server and will timeout according to the <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> property.\n  syntax:\n    content: public abstract void BeginSession ();\n    parameters: []\n  overload: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Thrown when a session is already open on the connection.\n  - type: System.DirectoryServices.Protocols.DsmlInvalidDocumentException\n    commentId: T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException\n    description: Thrown when the XML returned from the Server in response to the BeginSession is not well-formed.\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: Thrown when there is a communications failure with the DSML server.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession\n  id: EndSession\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  langs:\n  - csharp\n  name: EndSession()\n  nameWithType: DsmlSoapConnection.EndSession()\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The EndSession method ends the session with the DSML server and clears the <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId*> property.\n  remarks: \"The method will block while waiting for a response from the DSML server and will timeout according to the <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> property.  \\n  \\n If the DSML server terminates the session, a <xref:System.Net.WebException>  \\n  \\n is thrown. If <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A> is still valid after the exception is thrown, the request never reached the server and the connection is still considered valid.\"\n  syntax:\n    content: public abstract void EndSession ();\n    parameters: []\n  overload: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession*\n  exceptions:\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: Thrown when a communications failure occurs with the DSML server.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Thrown when there is no open session.\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId\n  id: SessionId\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  langs:\n  - csharp\n  name: SessionId\n  nameWithType: DsmlSoapConnection.SessionId\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The SessionId property contains the active session ID.\n  remarks: A null value signifies no active session.\n  syntax:\n    content: public abstract string SessionId { get; }\n    return:\n      type: System.String\n      description: The active session ID.\n  overload: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader\n  id: SoapRequestHeader\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  langs:\n  - csharp\n  name: SoapRequestHeader\n  nameWithType: DsmlSoapConnection.SoapRequestHeader\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The SoapRequestHeader property contains the SOAP Header attached to outgoing requests.\n  remarks: \"The API uses <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A> and <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A> to track the lifetime of a session.  \\n  \\n **Caution** Attaching an EndSession header to the SoapRequestHeader causes the API to become inconsistent with the connection and should be avoided.\"\n  syntax:\n    content: public System.Xml.XmlNode SoapRequestHeader { get; set; }\n    return:\n      type: System.Xml.XmlNode\n      description: The SOAP Header attached to outgoing requests.\n  overload: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.DirectoryServices.Protocols.DirectoryConnection\n  isExternal: false\n  name: System.DirectoryServices.Protocols.DirectoryConnection\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.DirectoryServices.Protocols.DsmlInvalidDocumentException\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: DsmlInvalidDocumentException\n  nameWithType: DsmlInvalidDocumentException\n  fullName: System.DirectoryServices.Protocols.DsmlInvalidDocumentException\n- uid: System.Net.WebException\n  isExternal: true\n  name: System.Net.WebException\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  isExternal: false\n  name: DsmlSoapConnection()\n  nameWithType: DsmlSoapConnection.DsmlSoapConnection()\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.DsmlSoapConnection()\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  isExternal: false\n  name: BeginSession()\n  nameWithType: DsmlSoapConnection.BeginSession()\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession()\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  isExternal: false\n  name: EndSession()\n  nameWithType: DsmlSoapConnection.EndSession()\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession()\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  isExternal: false\n  name: SessionId\n  nameWithType: DsmlSoapConnection.SessionId\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  isExternal: false\n  name: SoapRequestHeader\n  nameWithType: DsmlSoapConnection.SoapRequestHeader\n  fullName: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  nameWithType: XmlNode\n  fullName: System.Xml.XmlNode\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor*\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  isExternal: false\n  name: DsmlSoapConnection\n  nameWithType: DsmlSoapConnection.DsmlSoapConnection\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession*\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  isExternal: false\n  name: BeginSession\n  nameWithType: DsmlSoapConnection.BeginSession\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession*\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  isExternal: false\n  name: EndSession\n  nameWithType: DsmlSoapConnection.EndSession\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId*\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  isExternal: false\n  name: SessionId\n  nameWithType: DsmlSoapConnection.SessionId\n- uid: System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader*\n  parent: System.DirectoryServices.Protocols.DsmlSoapConnection\n  isExternal: false\n  name: SoapRequestHeader\n  nameWithType: DsmlSoapConnection.SoapRequestHeader\n"}