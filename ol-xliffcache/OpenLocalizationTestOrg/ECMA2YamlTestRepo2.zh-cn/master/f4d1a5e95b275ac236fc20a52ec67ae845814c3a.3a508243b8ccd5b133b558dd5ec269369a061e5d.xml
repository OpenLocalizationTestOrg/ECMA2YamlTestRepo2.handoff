{"nodes":[{"pos":[699,763],"content":"Provides Web-application view-state-related-failure information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides Web-application view-state-related-failure information.","pos":[0,64]}]},{"pos":[776,1841],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.       ASP.NET raises events of type WebViewStateFailureAuditEvent when a view-state failure occurs. This failure indicates either an attempt to tamper with view state or its reuse from another machine with a different key. The related audit event code is <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>.      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers.","needQuote":false,"needEscape":true,"nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The &lt;xref:System.Web.Management?displayProperty=fullName&gt; namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,319],"source":" The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[320,403]},{"content":"ASP.NET raises events of type WebViewStateFailureAuditEvent when a view-state failure occurs.","pos":[410,503]},{"content":"This failure indicates either an attempt to tamper with view state or its reuse from another machine with a different key.","pos":[504,626]},{"content":"The related audit event code is &lt;xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure&gt;.","pos":[627,731],"source":" The related audit event code is <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id=\"ph2\">`healthMonitoring`</ph> configuration section.","pos":[737,959],"source":"      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[960,1060]}]},{"pos":[5931,6056],"content":"Initializes the <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebViewStateFailureAuditEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the supplied parameters.","needQuote":true,"needEscape":true,"source":"Initializes the <xref href=\"System.Web.Management.WebViewStateFailureAuditEvent\"></xref> class using the supplied parameters."},{"pos":[6068,6353],"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.WebViewStateFailureAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.WebViewStateFailureAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.","pos":[0,285],"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system.","pos":[0,76]},{"content":"You will never use it to instantiate a &lt;xref:System.Web.Management.WebViewStateFailureAuditEvent&gt; object, but you can call this constructor when implementing your own event type that inherits from this class.","pos":[77,285],"source":" You will never use it to instantiate a <xref:System.Web.Management.WebViewStateFailureAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class."}]}]},{"pos":[6602,6624],"content":"The event description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event description.","pos":[0,22]}]},{"pos":[6692,6735],"content":"The object that is the source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that is the source of the event.","pos":[0,43]}]},{"pos":[6800,6980],"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The code associated with the event.","pos":[0,35]},{"content":"When you implement a custom event, the event code must be greater than <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,180],"source":" When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>."}]},{"pos":[7074,7154],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ViewStateException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> caused by the failure.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.ViewStateException\"></xref> caused by the failure."},{"pos":[8044,8187],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebViewStateFailureAuditEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the supplied parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Management.WebViewStateFailureAuditEvent\"></xref> class using the supplied parameters."},{"pos":[8199,8484],"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.WebViewStateFailureAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.WebViewStateFailureAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.","pos":[0,285],"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system.","pos":[0,76]},{"content":"You will never use it to instantiate a &lt;xref:System.Web.Management.WebViewStateFailureAuditEvent&gt; object, but you can call this constructor when implementing your own event type that inherits from this class.","pos":[77,285],"source":" You will never use it to instantiate a <xref:System.Web.Management.WebViewStateFailureAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class."}]}]},{"pos":[8754,8776],"content":"The event description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event description.","pos":[0,22]}]},{"pos":[8844,8887],"content":"The object that is the source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that is the source of the event.","pos":[0,43]}]},{"pos":[8952,9132],"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The code associated with the event.","pos":[0,35]},{"content":"When you implement a custom event, the event code must be greater than <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,180],"source":" When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>."}]},{"pos":[9203,9323],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventCodes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that specifies the detailed identifier for the event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value that specifies the detailed identifier for the event."},{"pos":[9417,9497],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ViewStateException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> caused by the failure.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.ViewStateException\"></xref> caused by the failure."},{"pos":[10061,10102],"content":"Gets the exception caused by the failure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the exception caused by the failure.","pos":[0,41]}]},{"pos":[10114,10267],"content":"The <xref:System.Web.UI.ViewStateException> indicates either an attempt to tamper with view state or its reuse from another machine with a different key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.UI.ViewStateException&gt; indicates either an attempt to tamper with view state or its reuse from another machine with a different key.","pos":[0,153],"source":"The <xref:System.Web.UI.ViewStateException> indicates either an attempt to tamper with view state or its reuse from another machine with a different key."}]},{"pos":[10435,10515],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ViewStateException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> caused by the failure.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.ViewStateException\"></xref> caused by the failure."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.WebViewStateFailureAuditEvent\n  id: WebViewStateFailureAuditEvent\n  children:\n  - System.Web.Management.WebViewStateFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Web.UI.ViewStateException)\n  - System.Web.Management.WebViewStateFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Web.UI.ViewStateException)\n  - System.Web.Management.WebViewStateFailureAuditEvent.ViewStateException\n  langs:\n  - csharp\n  name: WebViewStateFailureAuditEvent\n  nameWithType: WebViewStateFailureAuditEvent\n  fullName: System.Web.Management.WebViewStateFailureAuditEvent\n  type: Class\n  summary: Provides Web-application view-state-related-failure information.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n ASP.NET raises events of type WebViewStateFailureAuditEvent when a view-state failure occurs. This failure indicates either an attempt to tamper with view state or its reuse from another machine with a different key. The related audit event code is <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>.  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers.\"\n  example:\n  - \"The following is an excerpt of a configuration file showing how to configure the <xref:System.Web.Management.EventLogWebEventProvider> to capture view-state failures. For completeness we are showing the setup for the `provider` and `eventMappings` sections. They are already set by default. The only thing you need to do is to provide the setup for the `rules` section. Refer to `healthMonitoring` for more information.  \\n  \\n To generate a view-state error, enter a URL in your browser with the following query string:  \\n  \\n```  \\n?__VIEWSTATEFIELDCOUNT=1&__VIEWSTATE=bogus  \\n```  \\n  \\n The Windows Application Eventlog will capture a view-state failure, if you enter the following configuration settings.  \\n  \\n```  \\n<healthMonitoring  \\n  enabled=\\\"true\\\"  \\n  heartBeatInterval=\\\"0\\\">  \\n  <providers>  \\n    // Configure the provider to process   \\n    // the health events.  \\n    <add name=\\\"EventLogProvider\\\"  \\n       type=\\\"System.Web.Management.EventLogWebEventProvider,  \\n       System.Web,Version=2.0.3600.0,Culture=neutral,  \\n       PublicKeyToken=b03f5f7f11d50a3a\\\"/>  \\n  </providers>  \\n  \\n  <eventMappings>  \\n    <clear />  \\n    // Configure the WebFailureAuditEvent   \\n    // object to handle the Viewstate failures.   \\n    <add name=\\\"Failure Audits\\\"  \\n      type=\\\"System.Web.Management.WebFailureAuditEvent,  \\n      System.Web,Version=2.0.3600.0,Culture=neutral,  \\n      PublicKeyToken=b03f5f7f11d50a3a\\\" />  \\n  </eventMappings>  \\n  \\n  <rules>  \\n    <clear/>  \\n    // Configure the connection between the   \\n    // application lifetime event object   \\n    // and the provider that must process it.  \\n      <add name=\\\"Viewstate Failure Events \\\"  \\n        eventName=\\\"Failure Events\\\"  \\n        provider=\\\"EventLogProvider\\\"  \\n        profile=\\\"Default\\\"  \\n        minInterval=\\\"00:01:00\\\" />  \\n  </rules>  \\n</healthMonitoring>  \\n```\"\n  syntax:\n    content: 'public class WebViewStateFailureAuditEvent : System.Web.Management.WebFailureAuditEvent'\n  inheritance:\n  - System.Object\n  - System.Web.Management.WebBaseEvent\n  - System.Web.Management.WebManagementEvent\n  - System.Web.Management.WebAuditEvent\n  - System.Web.Management.WebFailureAuditEvent\n  implements: []\n  inheritedMembers:\n  - System.Web.Management.WebAuditEvent.RequestInformation\n  - System.Web.Management.WebBaseEvent.ApplicationInformation\n  - System.Web.Management.WebBaseEvent.EventCode\n  - System.Web.Management.WebBaseEvent.EventDetailCode\n  - System.Web.Management.WebBaseEvent.EventID\n  - System.Web.Management.WebBaseEvent.EventOccurrence\n  - System.Web.Management.WebBaseEvent.EventSequence\n  - System.Web.Management.WebBaseEvent.EventSource\n  - System.Web.Management.WebBaseEvent.EventTime\n  - System.Web.Management.WebBaseEvent.EventTimeUtc\n  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)\n  - System.Web.Management.WebBaseEvent.Message\n  - System.Web.Management.WebBaseEvent.Raise\n  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)\n  - System.Web.Management.WebBaseEvent.ToString\n  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)\n  - System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters\n  - System.Web.Management.WebManagementEvent.ProcessInformation\n  platform:\n  - net462\n- uid: System.Web.Management.WebViewStateFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Web.UI.ViewStateException)\n  id: '#ctor(System.String,System.Object,System.Int32,System.Web.UI.ViewStateException)'\n  parent: System.Web.Management.WebViewStateFailureAuditEvent\n  langs:\n  - csharp\n  name: WebViewStateFailureAuditEvent(String,Object,Int32,ViewStateException)\n  nameWithType: WebViewStateFailureAuditEvent.WebViewStateFailureAuditEvent(String,Object,Int32,ViewStateException)\n  fullName: System.Web.Management.WebViewStateFailureAuditEvent.WebViewStateFailureAuditEvent(String,Object,Int32,ViewStateException)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes the <xref href=\"System.Web.Management.WebViewStateFailureAuditEvent\"></xref> class using the supplied parameters.\n  remarks: This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.WebViewStateFailureAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.\n  syntax:\n    content: protected WebViewStateFailureAuditEvent (string message, object eventSource, int eventCode, System.Web.UI.ViewStateException viewStateException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The event description.\n    - id: eventSource\n      type: System.Object\n      description: The object that is the source of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.\n    - id: viewStateException\n      type: System.Web.UI.ViewStateException\n      description: The <xref href=\"System.Web.UI.ViewStateException\"></xref> caused by the failure.\n  overload: System.Web.Management.WebViewStateFailureAuditEvent.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebViewStateFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Web.UI.ViewStateException)\n  id: '#ctor(System.String,System.Object,System.Int32,System.Int32,System.Web.UI.ViewStateException)'\n  parent: System.Web.Management.WebViewStateFailureAuditEvent\n  langs:\n  - csharp\n  name: WebViewStateFailureAuditEvent(String,Object,Int32,Int32,ViewStateException)\n  nameWithType: WebViewStateFailureAuditEvent.WebViewStateFailureAuditEvent(String,Object,Int32,Int32,ViewStateException)\n  fullName: System.Web.Management.WebViewStateFailureAuditEvent.WebViewStateFailureAuditEvent(String,Object,Int32,Int32,ViewStateException)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WebViewStateFailureAuditEvent\"></xref> class using the supplied parameters.\n  remarks: This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.WebViewStateFailureAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.\n  syntax:\n    content: protected WebViewStateFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, System.Web.UI.ViewStateException viewStateException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The event description.\n    - id: eventSource\n      type: System.Object\n      description: The object that is the source of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.\n    - id: eventDetailCode\n      type: System.Int32\n      description: The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value that specifies the detailed identifier for the event.\n    - id: viewStateException\n      type: System.Web.UI.ViewStateException\n      description: The <xref href=\"System.Web.UI.ViewStateException\"></xref> caused by the failure.\n  overload: System.Web.Management.WebViewStateFailureAuditEvent.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebViewStateFailureAuditEvent.ViewStateException\n  id: ViewStateException\n  parent: System.Web.Management.WebViewStateFailureAuditEvent\n  langs:\n  - csharp\n  name: ViewStateException\n  nameWithType: WebViewStateFailureAuditEvent.ViewStateException\n  fullName: System.Web.Management.WebViewStateFailureAuditEvent.ViewStateException\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the exception caused by the failure.\n  remarks: The <xref:System.Web.UI.ViewStateException> indicates either an attempt to tamper with view state or its reuse from another machine with a different key.\n  syntax:\n    content: public System.Web.UI.ViewStateException ViewStateException { get; }\n    return:\n      type: System.Web.UI.ViewStateException\n      description: The <xref href=\"System.Web.UI.ViewStateException\"></xref> caused by the failure.\n  overload: System.Web.Management.WebViewStateFailureAuditEvent.ViewStateException*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Management.WebFailureAuditEvent\n  isExternal: false\n  name: System.Web.Management.WebFailureAuditEvent\n- uid: System.Web.Management.WebViewStateFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Web.UI.ViewStateException)\n  parent: System.Web.Management.WebViewStateFailureAuditEvent\n  isExternal: false\n  name: WebViewStateFailureAuditEvent(String,Object,Int32,ViewStateException)\n  nameWithType: WebViewStateFailureAuditEvent.WebViewStateFailureAuditEvent(String,Object,Int32,ViewStateException)\n  fullName: System.Web.Management.WebViewStateFailureAuditEvent.WebViewStateFailureAuditEvent(String,Object,Int32,ViewStateException)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.ViewStateException\n  parent: System.Web.UI\n  isExternal: false\n  name: ViewStateException\n  nameWithType: ViewStateException\n  fullName: System.Web.UI.ViewStateException\n- uid: System.Web.Management.WebViewStateFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Web.UI.ViewStateException)\n  parent: System.Web.Management.WebViewStateFailureAuditEvent\n  isExternal: false\n  name: WebViewStateFailureAuditEvent(String,Object,Int32,Int32,ViewStateException)\n  nameWithType: WebViewStateFailureAuditEvent.WebViewStateFailureAuditEvent(String,Object,Int32,Int32,ViewStateException)\n  fullName: System.Web.Management.WebViewStateFailureAuditEvent.WebViewStateFailureAuditEvent(String,Object,Int32,Int32,ViewStateException)\n- uid: System.Web.Management.WebViewStateFailureAuditEvent.ViewStateException\n  parent: System.Web.Management.WebViewStateFailureAuditEvent\n  isExternal: false\n  name: ViewStateException\n  nameWithType: WebViewStateFailureAuditEvent.ViewStateException\n  fullName: System.Web.Management.WebViewStateFailureAuditEvent.ViewStateException\n- uid: System.Web.Management.WebViewStateFailureAuditEvent.#ctor*\n  parent: System.Web.Management.WebViewStateFailureAuditEvent\n  isExternal: false\n  name: WebViewStateFailureAuditEvent\n  nameWithType: WebViewStateFailureAuditEvent.WebViewStateFailureAuditEvent\n- uid: System.Web.Management.WebViewStateFailureAuditEvent.ViewStateException*\n  parent: System.Web.Management.WebViewStateFailureAuditEvent\n  isExternal: false\n  name: ViewStateException\n  nameWithType: WebViewStateFailureAuditEvent.ViewStateException\n"}