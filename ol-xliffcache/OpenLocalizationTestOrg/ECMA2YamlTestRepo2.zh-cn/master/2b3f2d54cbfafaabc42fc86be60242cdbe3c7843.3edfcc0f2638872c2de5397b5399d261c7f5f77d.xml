{"nodes":[{"pos":[628,694],"content":"Provides helper methods for operations that match string patterns.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides helper methods for operations that match string patterns.","pos":[0,66]}]},{"pos":[1368,1469],"content":"Creates a search pattern string where the specified text can have other text before and following it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a search pattern string where the specified text can have other text before and following it.","pos":[0,101]}]},{"pos":[1643,1695],"content":"The string to insert into the search pattern string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to insert into the search pattern string.","pos":[0,52]}]},{"pos":[1756,1807],"content":"The character to use to escape wildcard characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character to use to escape wildcard characters.","pos":[0,51]}]},{"pos":[1865,1966],"content":"A search pattern string that contains the specified string and the '%' character before and after it.","needQuote":true,"needEscape":true,"nodes":[{"content":"A search pattern string that contains the specified string and the '%' character before and after it.","pos":[0,101]}]},{"pos":[2606,2714],"content":"Creates a search pattern string where the specified text can have other text before it but not following it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a search pattern string where the specified text can have other text before it but not following it.","pos":[0,108]}]},{"pos":[2888,2940],"content":"The string to insert into the search pattern string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to insert into the search pattern string.","pos":[0,52]}]},{"pos":[3001,3052],"content":"The character to use to escape wildcard characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character to use to escape wildcard characters.","pos":[0,51]}]},{"pos":[3110,3199],"content":"A search pattern string that contains the '%' character followed by the specified string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A search pattern string that contains the '%' character followed by the specified string.","pos":[0,89]}]},{"pos":[3849,3953],"content":"Creates a search pattern string where the specified text can have other text after it but not before it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a search pattern string where the specified text can have other text after it but not before it.","pos":[0,104]}]},{"pos":[4129,4181],"content":"The string to insert into the search pattern string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to insert into the search pattern string.","pos":[0,52]}]},{"pos":[4242,4293],"content":"The character to use to escape wildcard characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character to use to escape wildcard characters.","pos":[0,51]}]},{"pos":[4351,4440],"content":"A search pattern string that contains the specified string followed by the '%' character.","needQuote":true,"needEscape":true,"nodes":[{"content":"A search pattern string that contains the specified string followed by the '%' character.","pos":[0,89]}]},{"pos":[5072,5382],"content":"Translates a search pattern for the <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operator to a search pattern for the <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_LIKE\" name=\"LIKE\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> operator.","needQuote":true,"needEscape":true,"source":"Translates a search pattern for the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> operator to a search pattern for the [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] <xref uid=\"langword_csharp_LIKE\" name=\"LIKE\" href=\"\"></xref> operator."},{"pos":[5560,5840],"content":"The <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> search pattern to translate to a <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_LIKE\" name=\"LIKE\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> search pattern.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> search pattern to translate to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] <xref uid=\"langword_csharp_LIKE\" name=\"LIKE\" href=\"\"></xref> search pattern."},{"pos":[5901,5986],"content":"The character to use to escape special SQL characters or the escape character itself.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character to use to escape special SQL characters or the escape character itself.","pos":[0,85]}]},{"pos":[6044,6355],"content":"A search pattern for the <ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_LIKE\" name=\"LIKE\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operator that corresponds to the specified <ph id=\"ph2\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> search pattern.","needQuote":true,"needEscape":true,"source":"A search pattern for the [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] <xref uid=\"langword_csharp_LIKE\" name=\"LIKE\" href=\"\"></xref> operator that corresponds to the specified [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> search pattern."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.SqlClient.SqlHelpers\n  id: SqlHelpers\n  children:\n  - System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)\n  - System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)\n  - System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)\n  - System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)\n  langs:\n  - csharp\n  name: SqlHelpers\n  nameWithType: SqlHelpers\n  fullName: System.Data.Linq.SqlClient.SqlHelpers\n  type: Class\n  summary: Provides helper methods for operations that match string patterns.\n  syntax:\n    content: public static class SqlHelpers\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)\n  id: GetStringContainsPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  langs:\n  - csharp\n  name: GetStringContainsPattern(String,Char)\n  nameWithType: SqlHelpers.GetStringContainsPattern(String,Char)\n  fullName: System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(String,Char)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient\n  summary: Creates a search pattern string where the specified text can have other text before and following it.\n  syntax:\n    content: public static string GetStringContainsPattern (string text, char escape);\n    parameters:\n    - id: text\n      type: System.String\n      description: The string to insert into the search pattern string.\n    - id: escape\n      type: System.Char\n      description: The character to use to escape wildcard characters.\n    return:\n      type: System.String\n      description: A search pattern string that contains the specified string and the '%' character before and after it.\n  overload: System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)\n  id: GetStringEndsWithPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  langs:\n  - csharp\n  name: GetStringEndsWithPattern(String,Char)\n  nameWithType: SqlHelpers.GetStringEndsWithPattern(String,Char)\n  fullName: System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(String,Char)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient\n  summary: Creates a search pattern string where the specified text can have other text before it but not following it.\n  syntax:\n    content: public static string GetStringEndsWithPattern (string text, char escape);\n    parameters:\n    - id: text\n      type: System.String\n      description: The string to insert into the search pattern string.\n    - id: escape\n      type: System.Char\n      description: The character to use to escape wildcard characters.\n    return:\n      type: System.String\n      description: A search pattern string that contains the '%' character followed by the specified string.\n  overload: System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)\n  id: GetStringStartsWithPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  langs:\n  - csharp\n  name: GetStringStartsWithPattern(String,Char)\n  nameWithType: SqlHelpers.GetStringStartsWithPattern(String,Char)\n  fullName: System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(String,Char)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient\n  summary: Creates a search pattern string where the specified text can have other text after it but not before it.\n  syntax:\n    content: public static string GetStringStartsWithPattern (string text, char escape);\n    parameters:\n    - id: text\n      type: System.String\n      description: The string to insert into the search pattern string.\n    - id: escape\n      type: System.Char\n      description: The character to use to escape wildcard characters.\n    return:\n      type: System.String\n      description: A search pattern string that contains the specified string followed by the '%' character.\n  overload: System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)\n  id: TranslateVBLikePattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  langs:\n  - csharp\n  name: TranslateVBLikePattern(String,Char)\n  nameWithType: SqlHelpers.TranslateVBLikePattern(String,Char)\n  fullName: System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(String,Char)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient\n  summary: Translates a search pattern for the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> operator to a search pattern for the [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] <xref uid=\"langword_csharp_LIKE\" name=\"LIKE\" href=\"\"></xref> operator.\n  syntax:\n    content: public static string TranslateVBLikePattern (string pattern, char escape);\n    parameters:\n    - id: pattern\n      type: System.String\n      description: The [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> search pattern to translate to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] <xref uid=\"langword_csharp_LIKE\" name=\"LIKE\" href=\"\"></xref> search pattern.\n    - id: escape\n      type: System.Char\n      description: The character to use to escape special SQL characters or the escape character itself.\n    return:\n      type: System.String\n      description: A search pattern for the [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] <xref uid=\"langword_csharp_LIKE\" name=\"LIKE\" href=\"\"></xref> operator that corresponds to the specified [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> search pattern.\n  overload: System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringContainsPattern(String,Char)\n  nameWithType: SqlHelpers.GetStringContainsPattern(String,Char)\n  fullName: System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(String,Char)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Char\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringEndsWithPattern(String,Char)\n  nameWithType: SqlHelpers.GetStringEndsWithPattern(String,Char)\n  fullName: System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(String,Char)\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringStartsWithPattern(String,Char)\n  nameWithType: SqlHelpers.GetStringStartsWithPattern(String,Char)\n  fullName: System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(String,Char)\n- uid: System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: TranslateVBLikePattern(String,Char)\n  nameWithType: SqlHelpers.TranslateVBLikePattern(String,Char)\n  fullName: System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(String,Char)\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern*\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringContainsPattern\n  nameWithType: SqlHelpers.GetStringContainsPattern\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern*\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringEndsWithPattern\n  nameWithType: SqlHelpers.GetStringEndsWithPattern\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern*\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringStartsWithPattern\n  nameWithType: SqlHelpers.GetStringStartsWithPattern\n- uid: System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern*\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: TranslateVBLikePattern\n  nameWithType: SqlHelpers.TranslateVBLikePattern\n"}