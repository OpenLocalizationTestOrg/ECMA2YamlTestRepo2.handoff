{"nodes":[{"pos":[928,987],"content":"Defines the bit mask and shift for a specific pixel formats","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the bit mask and shift for a specific pixel formats","pos":[0,59]}]},{"pos":[1542,1613],"content":"Determines whether the specified object is equal to the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified object is equal to the current object.","pos":[0,71]}]},{"pos":[1754,1812],"content":"The <xref:System.Object> to compare with the current mask.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to compare with the current mask.","pos":[0,58],"source":"The <xref:System.Object> to compare with the current mask."}]},{"pos":[1871,2108],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.PixelFormatChannelMask\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is equal to <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Media.PixelFormatChannelMask\"></xref> is equal to <code>obj</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[2896,2951],"content":"Determines if two pixel format channel masks are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines if two pixel format channel masks are equal.","pos":[0,55]}]},{"pos":[3210,3236],"content":"The first mask to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first mask to compare.","pos":[0,26]}]},{"pos":[3328,3355],"content":"The second mask to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second mask to compare.","pos":[0,27]}]},{"pos":[3414,3573],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the masks are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the masks are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4073,4108],"content":"Retrieves a hash code for the mask.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a hash code for the mask.","pos":[0,35]}]},{"pos":[4243,4262],"content":"A mask's hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A mask's hash code.","pos":[0,19]}]},{"pos":[4728,4813],"content":"Gets the bitmask for a color channel. The value will never be greater then 0xffffffff","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the bitmask for a color channel. The value will never be greater then 0xffffffff","pos":[0,85],"nodes":[{"content":"Gets the bitmask for a color channel.","pos":[0,37]},{"content":"The value will never be greater then 0xffffffff","pos":[38,85]}]}]},{"pos":[4826,4926],"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_Mask\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    You cannot use this property in XAML.","needQuote":false,"needEscape":true,"source":"<a name=\"xamlTextUsage_Mask\"></a>    ## XAML Text Usage    You cannot use this property in XAML."},{"pos":[5100,5132],"content":"The bitmask for a color channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"The bitmask for a color channel.","pos":[0,32]}]},{"pos":[5945,6046],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.PixelFormatChannelMask\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Media.PixelFormatChannelMask\"></xref> instances for equality."},{"pos":[6310,6336],"content":"The first mask to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first mask to compare.","pos":[0,26]}]},{"pos":[6428,6455],"content":"The second mask to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second mask to compare.","pos":[0,27]}]},{"pos":[6514,6677],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two masks are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two masks are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7507,7610],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.PixelFormatChannelMask\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for inequality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Media.PixelFormatChannelMask\"></xref> instances for inequality."},{"pos":[7876,7902],"content":"The first mask to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first mask to compare.","pos":[0,26]}]},{"pos":[7994,8021],"content":"The second mask to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second mask to compare.","pos":[0,27]}]},{"pos":[8080,8314],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.PixelFormatChannelMask\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are not equal; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.PixelFormatChannelMask\"></xref> objects are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.PixelFormatChannelMask\n  id: PixelFormatChannelMask\n  children:\n  - System.Windows.Media.PixelFormatChannelMask.Equals(System.Object)\n  - System.Windows.Media.PixelFormatChannelMask.Equals(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  - System.Windows.Media.PixelFormatChannelMask.GetHashCode\n  - System.Windows.Media.PixelFormatChannelMask.Mask\n  - System.Windows.Media.PixelFormatChannelMask.op_Equality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  - System.Windows.Media.PixelFormatChannelMask.op_Inequality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  langs:\n  - csharp\n  name: PixelFormatChannelMask\n  nameWithType: PixelFormatChannelMask\n  fullName: System.Windows.Media.PixelFormatChannelMask\n  type: Struct\n  summary: Defines the bit mask and shift for a specific pixel formats\n  syntax:\n    content: public struct PixelFormatChannelMask\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.Media.PixelFormatChannelMask.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: PixelFormatChannelMask.Equals(Object)\n  fullName: System.Windows.Media.PixelFormatChannelMask.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Determines whether the specified object is equal to the current object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref:System.Object> to compare with the current mask.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Media.PixelFormatChannelMask\"></xref> is equal to <code>obj</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.PixelFormatChannelMask.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.PixelFormatChannelMask.Equals(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  id: Equals(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Determines if two pixel format channel masks are equal.\n  syntax:\n    content: public static bool Equals (System.Windows.Media.PixelFormatChannelMask left, System.Windows.Media.PixelFormatChannelMask right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: The first mask to compare.\n    - id: right\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: The second mask to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the masks are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.PixelFormatChannelMask.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.PixelFormatChannelMask.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: PixelFormatChannelMask.GetHashCode()\n  fullName: System.Windows.Media.PixelFormatChannelMask.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Retrieves a hash code for the mask.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A mask's hash code.\n  overload: System.Windows.Media.PixelFormatChannelMask.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.PixelFormatChannelMask.Mask\n  id: Mask\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: Mask\n  nameWithType: PixelFormatChannelMask.Mask\n  fullName: System.Windows.Media.PixelFormatChannelMask.Mask\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the bitmask for a color channel. The value will never be greater then 0xffffffff\n  remarks: \"<a name=\\\"xamlTextUsage_Mask\\\"></a>   \\n## XAML Text Usage  \\n You cannot use this property in XAML.\"\n  syntax:\n    content: public System.Collections.Generic.IList<byte> Mask { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Byte}\n      description: The bitmask for a color channel.\n  overload: System.Windows.Media.PixelFormatChannelMask.Mask*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.PixelFormatChannelMask.op_Equality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  id: op_Equality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Compares two <xref href=\"System.Windows.Media.PixelFormatChannelMask\"></xref> instances for equality.\n  syntax:\n    content: public static bool op_Equality (System.Windows.Media.PixelFormatChannelMask left, System.Windows.Media.PixelFormatChannelMask right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: The first mask to compare.\n    - id: right\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: The second mask to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two masks are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.PixelFormatChannelMask.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.PixelFormatChannelMask.op_Inequality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  id: op_Inequality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Compares two <xref href=\"System.Windows.Media.PixelFormatChannelMask\"></xref> instances for inequality.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Media.PixelFormatChannelMask left, System.Windows.Media.PixelFormatChannelMask right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: The first mask to compare.\n    - id: right\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: The second mask to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Media.PixelFormatChannelMask\"></xref> objects are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.PixelFormatChannelMask.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Media.PixelFormatChannelMask.Equals(System.Object)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PixelFormatChannelMask.Equals(Object)\n  fullName: System.Windows.Media.PixelFormatChannelMask.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.PixelFormatChannelMask.Equals(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n- uid: System.Windows.Media.PixelFormatChannelMask\n  parent: System.Windows.Media\n  isExternal: false\n  name: PixelFormatChannelMask\n  nameWithType: PixelFormatChannelMask\n  fullName: System.Windows.Media.PixelFormatChannelMask\n- uid: System.Windows.Media.PixelFormatChannelMask.GetHashCode\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PixelFormatChannelMask.GetHashCode()\n  fullName: System.Windows.Media.PixelFormatChannelMask.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PixelFormatChannelMask.Mask\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: Mask\n  nameWithType: PixelFormatChannelMask.Mask\n  fullName: System.Windows.Media.PixelFormatChannelMask.Mask\n- uid: System.Collections.Generic.IList{System.Byte}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<Byte>\n  nameWithType: IList<Byte>\n  fullName: System.Collections.Generic.IList<System.Byte>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Byte>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.PixelFormatChannelMask.op_Equality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n- uid: System.Windows.Media.PixelFormatChannelMask.op_Inequality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n- uid: System.Windows.Media.PixelFormatChannelMask.Equals*\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: Equals\n  nameWithType: PixelFormatChannelMask.Equals\n- uid: System.Windows.Media.PixelFormatChannelMask.GetHashCode*\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: GetHashCode\n  nameWithType: PixelFormatChannelMask.GetHashCode\n- uid: System.Windows.Media.PixelFormatChannelMask.Mask*\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: Mask\n  nameWithType: PixelFormatChannelMask.Mask\n- uid: System.Windows.Media.PixelFormatChannelMask.op_Equality*\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: op_Equality\n  nameWithType: PixelFormatChannelMask.op_Equality\n- uid: System.Windows.Media.PixelFormatChannelMask.op_Inequality*\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: op_Inequality\n  nameWithType: PixelFormatChannelMask.op_Inequality\n"}