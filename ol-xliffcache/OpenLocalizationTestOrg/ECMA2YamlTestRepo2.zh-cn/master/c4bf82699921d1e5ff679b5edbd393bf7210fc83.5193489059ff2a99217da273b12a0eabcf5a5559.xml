{"nodes":[{"pos":[840,946],"content":"The ActiveDirectoryPartition class is an abstract class that represents a directory partition in a domain.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ActiveDirectoryPartition class is an abstract class that represents a directory partition in a domain.","pos":[0,106]}]},{"pos":[1674,1801],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\"></xref> class."},{"pos":[2479,2552],"content":"Releases all managed and unmanaged resources that are held by the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases all managed and unmanaged resources that are held by the object.","pos":[0,73]}]},{"pos":[3270,3375],"content":"Releases the managed resources that are used by the object and, optionally, releases unmanaged resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases the managed resources that are used by the object and, optionally, releases unmanaged resources.","pos":[0,105]}]},{"pos":[3387,3523],"content":"The `disposing` parameter only affects the release of the managed resources. The unmanaged resources are always released by this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`disposing`</ph> parameter only affects the release of the managed resources.","pos":[0,76],"source":"The `disposing` parameter only affects the release of the managed resources."},{"content":"The unmanaged resources are always released by this method.","pos":[77,136]}]},{"pos":[3678,3977],"content":"A <xref:System.Boolean> value that determines if the managed resources should be released. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources are released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only the unmanaged resources are released.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that determines if the managed resources should be released.","pos":[0,90],"source":"A <xref:System.Boolean> value that determines if the managed resources should be released."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the managed resources are released; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if only the unmanaged resources are released.","pos":[91,299],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources are released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only the unmanaged resources are released."}]},{"pos":[4626,4746],"content":"Retrieves a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the directory partition.","needQuote":true,"needEscape":true,"source":"Retrieves a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the directory partition."},{"pos":[4950,5068],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the directory partition.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the directory partition."},{"pos":[5658,5682],"content":"Gets the partition name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the partition name.","pos":[0,24]}]},{"pos":[5791,5847],"content":"A <xref:System.String> that contains the partition name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the partition name.","pos":[0,56],"source":"A <xref:System.String> that contains the partition name."}]},{"pos":[6448,6517],"content":"Retrieves a string representation of the current directory partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a string representation of the current directory partition.","pos":[0,69]}]},{"pos":[6653,6720],"content":"Returns a string representation of the current directory partition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string representation of the current directory partition.","pos":[0,67]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  id: ActiveDirectoryPartition\n  children:\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString\n  langs:\n  - csharp\n  name: ActiveDirectoryPartition\n  nameWithType: ActiveDirectoryPartition\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  type: Class\n  summary: The ActiveDirectoryPartition class is an abstract class that represents a directory partition in a domain.\n  syntax:\n    content: 'public abstract class ActiveDirectoryPartition : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: ActiveDirectoryPartition()\n  nameWithType: ActiveDirectoryPartition.ActiveDirectoryPartition()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ActiveDirectoryPartition()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\"></xref> class.\n  syntax:\n    content: protected ActiveDirectoryPartition ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose\n  id: Dispose\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ActiveDirectoryPartition.Dispose()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Releases all managed and unmanaged resources that are held by the object.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ActiveDirectoryPartition.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Releases the managed resources that are used by the object and, optionally, releases unmanaged resources.\n  remarks: The `disposing` parameter only affects the release of the managed resources. The unmanaged resources are always released by this method.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that determines if the managed resources should be released. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the managed resources are released; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only the unmanaged resources are released.\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry\n  id: GetDirectoryEntry\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: GetDirectoryEntry()\n  nameWithType: ActiveDirectoryPartition.GetDirectoryEntry()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the directory partition.\n  syntax:\n    content: public abstract System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: Returns a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the directory partition.\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  id: Name\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ActiveDirectoryPartition.Name\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the partition name.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the partition name.\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString\n  id: ToString\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ActiveDirectoryPartition.ToString()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves a string representation of the current directory partition.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Returns a string representation of the current directory partition.\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: ActiveDirectoryPartition()\n  nameWithType: ActiveDirectoryPartition.ActiveDirectoryPartition()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ActiveDirectoryPartition()\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Dispose()\n  nameWithType: ActiveDirectoryPartition.Dispose()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose()\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ActiveDirectoryPartition.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: GetDirectoryEntry()\n  nameWithType: ActiveDirectoryPartition.GetDirectoryEntry()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry()\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Name\n  nameWithType: ActiveDirectoryPartition.Name\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: ToString()\n  nameWithType: ActiveDirectoryPartition.ToString()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString()\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: ActiveDirectoryPartition\n  nameWithType: ActiveDirectoryPartition.ActiveDirectoryPartition\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Dispose\n  nameWithType: ActiveDirectoryPartition.Dispose\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: GetDirectoryEntry\n  nameWithType: ActiveDirectoryPartition.GetDirectoryEntry\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Name\n  nameWithType: ActiveDirectoryPartition.Name\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: ToString\n  nameWithType: ActiveDirectoryPartition.ToString\n"}