{"nodes":[{"pos":[1445,1525],"content":"Runs a set of child activities at the same time. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Runs a set of child activities at the same time. This class cannot be inherited.","pos":[0,80],"nodes":[{"content":"Runs a set of child activities at the same time.","pos":[0,48]},{"content":"This class cannot be inherited.","pos":[49,80]}]}]},{"pos":[1538,2579],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The order in which child activities are run is non-deterministic.       The ParallelActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the ParallelActivity can contain other activities. The <xref:System.Workflow.Activities.SequenceActivity> activity is the only activity that can be the child of a ParallelActivity.       Only one activity can run at a time.       The ParallelActivity only finishes when all children are complete.       The ParallelActivity is especially useful when there are one or more blocking activities, such as the <xref:System.Workflow.Activities.DelayActivity> activity, in one or more of the branches. In this scenario, the ParallelActivity actually switches to a different branch when the <xref:System.Workflow.Activities.DelayActivity> is blocked. If there are no blocking activities in any one of the ParallelActivity branches then the activity uses a non-deterministic sequence.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       The order in which child activities are run is non-deterministic.","pos":[0,153],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The order in which child activities are run is non-deterministic."},{"content":"The ParallelActivity is a &lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;, which means the ParallelActivity can contain other activities.","pos":[160,305],"source":"       The ParallelActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the ParallelActivity can contain other activities."},{"content":"The &lt;xref:System.Workflow.Activities.SequenceActivity&gt; activity is the only activity that can be the child of a ParallelActivity.","pos":[306,435],"source":" The <xref:System.Workflow.Activities.SequenceActivity> activity is the only activity that can be the child of a ParallelActivity."},{"content":"Only one activity can run at a time.","pos":[442,478]},{"content":"The ParallelActivity only finishes when all children are complete.","pos":[485,551]},{"content":"The ParallelActivity is especially useful when there are one or more blocking activities, such as the &lt;xref:System.Workflow.Activities.DelayActivity&gt; activity, in one or more of the branches.","pos":[558,749],"source":"       The ParallelActivity is especially useful when there are one or more blocking activities, such as the <xref:System.Workflow.Activities.DelayActivity> activity, in one or more of the branches."},{"content":"In this scenario, the ParallelActivity actually switches to a different branch when the &lt;xref:System.Workflow.Activities.DelayActivity&gt; is blocked.","pos":[750,897],"source":" In this scenario, the ParallelActivity actually switches to a different branch when the <xref:System.Workflow.Activities.DelayActivity> is blocked."},{"content":"If there are no blocking activities in any one of the ParallelActivity branches then the activity uses a non-deterministic sequence.","pos":[898,1030]}]},{"pos":[11802,11907],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ParallelActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ParallelActivity\"></xref> class."},{"pos":[13418,13554],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ParallelActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ParallelActivity\"></xref> class using the name of the activity."},{"pos":[13693,13731],"content":"The user-defined name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]},{"pos":[14700,14712],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14811,14823],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15799,15811],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15910,15922],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17083,17095],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17191,17203],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18404,18416],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18514,18526],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19299,19311],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20353,20365],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21847,21859],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21974,21986],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.ParallelActivity\n  id: ParallelActivity\n  children:\n  - System.Workflow.Activities.ParallelActivity.#ctor\n  - System.Workflow.Activities.ParallelActivity.#ctor(System.String)\n  - System.Workflow.Activities.ParallelActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ParallelActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.ParallelActivity.OnClosed(System.IServiceProvider)\n  - System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  langs:\n  - csharp\n  name: ParallelActivity\n  nameWithType: ParallelActivity\n  fullName: System.Workflow.Activities.ParallelActivity\n  type: Class\n  summary: Runs a set of child activities at the same time. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n The order in which child activities are run is non-deterministic.  \\n  \\n The ParallelActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the ParallelActivity can contain other activities. The <xref:System.Workflow.Activities.SequenceActivity> activity is the only activity that can be the child of a ParallelActivity.  \\n  \\n Only one activity can run at a time.  \\n  \\n The ParallelActivity only finishes when all children are complete.  \\n  \\n The ParallelActivity is especially useful when there are one or more blocking activities, such as the <xref:System.Workflow.Activities.DelayActivity> activity, in one or more of the branches. In this scenario, the ParallelActivity actually switches to a different branch when the <xref:System.Workflow.Activities.DelayActivity> is blocked. If there are no blocking activities in any one of the ParallelActivity branches then the activity uses a non-deterministic sequence.\"\n  example:\n  - \"The following code example shows how to create a new instance of the ParallelActivity class, add the ParallelActivity class to the <xref:System.Workflow.Activities.WhileActivity> class, and add two <xref:System.Workflow.Activities.SequenceActivity> classes to the ParallelActivity class.  This code example is part of the WhileAndParallel SDK sample from the WhileAndParallelWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using While and Parallel](http://msdn.microsoft.com/en-us/776a25cc-6aed-4754-b680-996213831b84).  \\n  \\n [!code-cs[wf_samples#276](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#276)]\\n [!code-vb[wf_samples#276](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#276)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ParallelDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.Activities.ParallelToolboxItem))]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ParallelActivity), \"Resources.Parallel.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ParallelValidator))]\n\n      [System.Workflow.Runtime.DebugEngine.WorkflowDebuggerStepping(System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption.Concurrent)]\n\n      public sealed class ParallelActivity : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  implements:\n  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  inheritedMembers:\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ParallelActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.ParallelActivity\n  langs:\n  - csharp\n  name: ParallelActivity()\n  nameWithType: ParallelActivity.ParallelActivity()\n  fullName: System.Workflow.Activities.ParallelActivity.ParallelActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.ParallelActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.ParallelActivity> class, add the <xref:System.Workflow.Activities.ParallelActivity> class to the <xref:System.Workflow.Activities.WhileActivity> class, and add two <xref:System.Workflow.Activities.SequenceActivity> classes to the <xref:System.Workflow.Activities.ParallelActivity> class.  This code example is part of the WhileAndParallel SDK Sample from the WhileAndParallelWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using While and Parallel](http://msdn.microsoft.com/en-us/776a25cc-6aed-4754-b680-996213831b84).  \\n  \\n [!code-cs[wf_samples#276](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#276)]\\n [!code-vb[wf_samples#276](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#276)]\"\n  syntax:\n    content: public ParallelActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.ParallelActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ParallelActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.ParallelActivity\n  langs:\n  - csharp\n  name: ParallelActivity(String)\n  nameWithType: ParallelActivity.ParallelActivity(String)\n  fullName: System.Workflow.Activities.ParallelActivity.ParallelActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.ParallelActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public ParallelActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.ParallelActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ParallelActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ParallelActivity\n  langs:\n  - csharp\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: ParallelActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ParallelActivity.Cancel(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.ParallelActivity.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ParallelActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ParallelActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ParallelActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ParallelActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.ParallelActivity.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ParallelActivity\n  langs:\n  - csharp\n  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  nameWithType: ParallelActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    - id: addedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: To be added.\n  overload: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ParallelActivity\n  langs:\n  - csharp\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: ParallelActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext rootExecutionContext, System.Workflow.ComponentModel.Activity removedActivity);\n    parameters:\n    - id: rootExecutionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    - id: removedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: To be added.\n  overload: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ParallelActivity.OnClosed(System.IServiceProvider)\n  id: OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.ParallelActivity\n  langs:\n  - csharp\n  name: OnClosed(IServiceProvider)\n  nameWithType: ParallelActivity.OnClosed(IServiceProvider)\n  fullName: System.Workflow.Activities.ParallelActivity.OnClosed(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnClosed (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: To be added.\n  overload: System.Workflow.Activities.ParallelActivity.OnClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ParallelActivity\n  langs:\n  - csharp\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: ParallelActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n  overload: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  isEii: true\n  parent: System.Workflow.Activities.ParallelActivity\n  langs:\n  - csharp\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  nameWithType: ParallelActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  fullName: System.Workflow.Activities.ParallelActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: void IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: To be added.\n    - id: e\n      type: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n      description: To be added.\n  overload: System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.CompositeActivity\n- uid: System.Workflow.Activities.ParallelActivity.#ctor\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: ParallelActivity()\n  nameWithType: ParallelActivity.ParallelActivity()\n  fullName: System.Workflow.Activities.ParallelActivity.ParallelActivity()\n- uid: System.Workflow.Activities.ParallelActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: ParallelActivity(String)\n  nameWithType: ParallelActivity.ParallelActivity(String)\n  fullName: System.Workflow.Activities.ParallelActivity.ParallelActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.ParallelActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: ParallelActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ParallelActivity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.ParallelActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ParallelActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ParallelActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  nameWithType: ParallelActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  nameWithType: ParallelActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n  fullName: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)\n- uid: System.Workflow.Activities.ParallelActivity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: ParallelActivity.OnClosed(IServiceProvider)\n  fullName: System.Workflow.Activities.ParallelActivity.OnClosed(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: ParallelActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  nameWithType: ParallelActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n  fullName: System.Workflow.Activities.ParallelActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatusChangedEventArgs\n  nameWithType: ActivityExecutionStatusChangedEventArgs\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n- uid: System.Workflow.Activities.ParallelActivity.#ctor*\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: ParallelActivity\n  nameWithType: ParallelActivity.ParallelActivity\n- uid: System.Workflow.Activities.ParallelActivity.Cancel*\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: ParallelActivity.Cancel\n- uid: System.Workflow.Activities.ParallelActivity.Execute*\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: Execute\n  nameWithType: ParallelActivity.Execute\n- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd*\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: OnActivityChangeAdd\n  nameWithType: ParallelActivity.OnActivityChangeAdd\n- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove*\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: OnActivityChangeRemove\n  nameWithType: ParallelActivity.OnActivityChangeRemove\n- uid: System.Workflow.Activities.ParallelActivity.OnClosed*\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: OnClosed\n  nameWithType: ParallelActivity.OnClosed\n- uid: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted*\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted\n  nameWithType: ParallelActivity.OnWorkflowChangesCompleted\n- uid: System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*\n  parent: System.Workflow.Activities.ParallelActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n  nameWithType: ParallelActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n"}