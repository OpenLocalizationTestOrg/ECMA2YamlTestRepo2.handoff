{"nodes":[{"pos":[540,640],"content":"Defines the instance of of a peer node used by an application participating in a specific peer mesh.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the instance of of a peer node used by an application participating in a specific peer mesh.","pos":[0,100]}]},{"pos":[653,1570],"content":"A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel.       If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings.       If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding.","needQuote":false,"needEscape":true,"nodes":[{"content":"A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel.       If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings.       If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding.","pos":[0,913],"nodes":[{"content":"A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the &lt;xref:System.ServiceModel.EndpointAddress&gt; supplied to the binding for each channel.","pos":[0,200],"source":"A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel."},{"content":"If two or more peer channels defined for a peer node are created with separate bindings, then the &lt;xref:System.ServiceModel.NetPeerTcpBinding.Port%2A&gt;, &lt;xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A&gt;, and &lt;xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A&gt; properties must be identical on all bindings.","pos":[207,530],"source":"       If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings."},{"content":"If a subsequent channel binding is created after the first one for the same peer node instance, then the &lt;xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A&gt; property on this and subsequent bindings must be less than or equal to the value of &lt;xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A&gt; property as set on the first channel binding.","pos":[537,913],"source":"       If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding."}]}]},{"pos":[2112,2232],"content":"Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.","pos":[0,120]}]},{"pos":[2245,2379],"content":"\"Online\" indicates that a peer node has available neighbor nodes. \"Offline\" indicates that a peer node has no available neighbors.","needQuote":false,"needEscape":true,"nodes":[{"content":"\"Online\" indicates that a peer node has available neighbor nodes. \"Offline\" indicates that a peer node has no available neighbors.","pos":[0,130],"nodes":[{"content":"\"Online\" indicates that a peer node has available neighbor nodes.","pos":[0,65]},{"content":"\"Offline\" indicates that a peer node has no available neighbors.","pos":[66,130]}]}]},{"pos":[2492,2655],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the peer node is online; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the peer node is online; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3146,3220],"content":"Gets and sets a custom filter for messages received over the peer channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets and sets a custom filter for messages received over the peer channel.","pos":[0,74]}]},{"pos":[3232,3349],"content":"The message filter must be a derived type and should be recast to that type to use any custom features defined on it.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message filter must be a derived type and should be recast to that type to use any custom features defined on it.","pos":[0,117]}]},{"pos":[3560,3668],"content":"<bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.PeerMessagePropagationFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains a custom message filter.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.ServiceModel.PeerMessagePropagationFilter\"></xref> that contains a custom message filter."},{"pos":[3860,3893],"content":"No channel is open for listening.","needQuote":true,"needEscape":true,"nodes":[{"content":"No channel is open for listening.","pos":[0,33]}]},{"pos":[4228,4287],"content":"Signals when the peer node goes offline from the peer mesh.","needQuote":true,"needEscape":true,"nodes":[{"content":"Signals when the peer node goes offline from the peer mesh.","pos":[0,59]}]},{"pos":[4299,4387],"content":"An offline peer node has no neighbor nodes within the peer mesh to which it can connect.","needQuote":true,"needEscape":true,"nodes":[{"content":"An offline peer node has no neighbor nodes within the peer mesh to which it can connect.","pos":[0,88]}]},{"pos":[4509,4521],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4868,4927],"content":"Signals when a peer node comes online within the peer mesh.","needQuote":true,"needEscape":true,"nodes":[{"content":"Signals when a peer node comes online within the peer mesh.","pos":[0,59]}]},{"pos":[4939,5036],"content":"An online peer node has at least one neighbor node within the peer mesh to which it is connected.","needQuote":true,"needEscape":true,"nodes":[{"content":"An online peer node has at least one neighbor node within the peer mesh to which it is connected.","pos":[0,97]}]},{"pos":[5157,5169],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5509,5567],"content":"Gets the network port on which the peer node is listening.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the network port on which the peer node is listening.","pos":[0,58]}]},{"pos":[5672,5760],"content":"<xref:System.Int32> that specifies the network port on which the peer node is listening.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Int32&gt; that specifies the network port on which the peer node is listening.","pos":[0,88],"source":"<xref:System.Int32> that specifies the network port on which the peer node is listening."}]},{"pos":[5932,5965],"content":"No channel is open for listening.","needQuote":true,"needEscape":true,"nodes":[{"content":"No channel is open for listening.","pos":[0,33]}]},{"pos":[6357,6401],"content":"Refreshes the connection with the peer mesh.","needQuote":true,"needEscape":true,"nodes":[{"content":"Refreshes the connection with the peer mesh.","pos":[0,44]}]},{"pos":[6662,6695],"content":"No channel is open for listening.","needQuote":true,"needEscape":true,"nodes":[{"content":"No channel is open for listening.","pos":[0,33]}]},{"pos":[6788,6820],"content":"The refresh operation timed out.","needQuote":true,"needEscape":true,"nodes":[{"content":"The refresh operation timed out.","pos":[0,32]}]},{"pos":[6951,7003],"content":"A network error occurred during the refresh attempt.","needQuote":true,"needEscape":true,"nodes":[{"content":"A network error occurred during the refresh attempt.","pos":[0,52]}]},{"pos":[7160,7210],"content":"The connection aborted during the refresh attempt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection aborted during the refresh attempt.","pos":[0,50]}]},{"pos":[7367,7417],"content":"The connection faulted during the refresh attempt.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection faulted during the refresh attempt.","pos":[0,50]}]},{"pos":[7764,7812],"content":"Provides a string representation of a peer node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a string representation of a peer node.","pos":[0,48]}]},{"pos":[7948,8072],"content":"<xref:System.String> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.String&gt; value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.","pos":[0,124],"source":"<xref:System.String> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.PeerNode\n  id: PeerNode\n  children:\n  - System.ServiceModel.PeerNode.IsOnline\n  - System.ServiceModel.PeerNode.MessagePropagationFilter\n  - System.ServiceModel.PeerNode.Offline\n  - System.ServiceModel.PeerNode.Online\n  - System.ServiceModel.PeerNode.Port\n  - System.ServiceModel.PeerNode.RefreshConnection\n  - System.ServiceModel.PeerNode.ToString\n  langs:\n  - csharp\n  name: PeerNode\n  nameWithType: PeerNode\n  fullName: System.ServiceModel.PeerNode\n  type: Class\n  summary: Defines the instance of of a peer node used by an application participating in a specific peer mesh.\n  remarks: \"A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel.  \\n  \\n If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings.  \\n  \\n If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding.\"\n  syntax:\n    content: 'public sealed class PeerNode : System.ServiceModel.IOnlineStatus'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ServiceModel.IOnlineStatus\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.PeerNode.IsOnline\n  id: IsOnline\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: IsOnline\n  nameWithType: PeerNode.IsOnline\n  fullName: System.ServiceModel.PeerNode.IsOnline\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.\n  remarks: \"\\\"Online\\\" indicates that a peer node has available neighbor nodes. \\\"Offline\\\" indicates that a peer node has no available neighbors.\"\n  syntax:\n    content: public bool IsOnline { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the peer node is online; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.PeerNode.IsOnline*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.PeerNode.MessagePropagationFilter\n  id: MessagePropagationFilter\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: MessagePropagationFilter\n  nameWithType: PeerNode.MessagePropagationFilter\n  fullName: System.ServiceModel.PeerNode.MessagePropagationFilter\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets and sets a custom filter for messages received over the peer channel.\n  remarks: The message filter must be a derived type and should be recast to that type to use any custom features defined on it.\n  syntax:\n    content: public System.ServiceModel.PeerMessagePropagationFilter MessagePropagationFilter { get; set; }\n    return:\n      type: System.ServiceModel.PeerMessagePropagationFilter\n      description: <xref href=\"System.ServiceModel.PeerMessagePropagationFilter\"></xref> that contains a custom message filter.\n  overload: System.ServiceModel.PeerNode.MessagePropagationFilter*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No channel is open for listening.\n  platform:\n  - net462\n- uid: System.ServiceModel.PeerNode.Offline\n  id: Offline\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: Offline\n  nameWithType: PeerNode.Offline\n  fullName: System.ServiceModel.PeerNode.Offline\n  type: Event\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Signals when the peer node goes offline from the peer mesh.\n  remarks: An offline peer node has no neighbor nodes within the peer mesh to which it can connect.\n  syntax:\n    content: public event EventHandler Offline;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.PeerNode.Online\n  id: Online\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: Online\n  nameWithType: PeerNode.Online\n  fullName: System.ServiceModel.PeerNode.Online\n  type: Event\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Signals when a peer node comes online within the peer mesh.\n  remarks: An online peer node has at least one neighbor node within the peer mesh to which it is connected.\n  syntax:\n    content: public event EventHandler Online;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.PeerNode.Port\n  id: Port\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: Port\n  nameWithType: PeerNode.Port\n  fullName: System.ServiceModel.PeerNode.Port\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the network port on which the peer node is listening.\n  syntax:\n    content: public int Port { get; }\n    return:\n      type: System.Int32\n      description: <xref:System.Int32> that specifies the network port on which the peer node is listening.\n  overload: System.ServiceModel.PeerNode.Port*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No channel is open for listening.\n  platform:\n  - net462\n- uid: System.ServiceModel.PeerNode.RefreshConnection\n  id: RefreshConnection\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: RefreshConnection()\n  nameWithType: PeerNode.RefreshConnection()\n  fullName: System.ServiceModel.PeerNode.RefreshConnection()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Refreshes the connection with the peer mesh.\n  syntax:\n    content: public void RefreshConnection ();\n    parameters: []\n  overload: System.ServiceModel.PeerNode.RefreshConnection*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No channel is open for listening.\n  - type: System.TimeoutException\n    commentId: T:System.TimeoutException\n    description: The refresh operation timed out.\n  - type: System.ServiceModel.CommunicationException\n    commentId: T:System.ServiceModel.CommunicationException\n    description: A network error occurred during the refresh attempt.\n  - type: System.ServiceModel.CommunicationObjectAbortedException\n    commentId: T:System.ServiceModel.CommunicationObjectAbortedException\n    description: The connection aborted during the refresh attempt.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The connection faulted during the refresh attempt.\n  platform:\n  - net462\n- uid: System.ServiceModel.PeerNode.ToString\n  id: ToString\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: PeerNode.ToString()\n  fullName: System.ServiceModel.PeerNode.ToString()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Provides a string representation of a peer node.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: <xref:System.String> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.\n  overload: System.ServiceModel.PeerNode.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.TimeoutException\n  isExternal: true\n  name: System.TimeoutException\n- uid: System.ServiceModel.CommunicationException\n  isExternal: true\n  name: System.ServiceModel.CommunicationException\n- uid: System.ServiceModel.CommunicationObjectAbortedException\n  isExternal: true\n  name: System.ServiceModel.CommunicationObjectAbortedException\n- uid: System.ServiceModel.CommunicationObjectFaultedException\n  isExternal: true\n  name: System.ServiceModel.CommunicationObjectFaultedException\n- uid: System.ServiceModel.PeerNode.IsOnline\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: IsOnline\n  nameWithType: PeerNode.IsOnline\n  fullName: System.ServiceModel.PeerNode.IsOnline\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.PeerNode.MessagePropagationFilter\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: MessagePropagationFilter\n  nameWithType: PeerNode.MessagePropagationFilter\n  fullName: System.ServiceModel.PeerNode.MessagePropagationFilter\n- uid: System.ServiceModel.PeerMessagePropagationFilter\n  parent: System.ServiceModel\n  isExternal: false\n  name: PeerMessagePropagationFilter\n  nameWithType: PeerMessagePropagationFilter\n  fullName: System.ServiceModel.PeerMessagePropagationFilter\n- uid: System.ServiceModel.PeerNode.Offline\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: Offline\n  nameWithType: PeerNode.Offline\n  fullName: System.ServiceModel.PeerNode.Offline\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ServiceModel.PeerNode.Online\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: Online\n  nameWithType: PeerNode.Online\n  fullName: System.ServiceModel.PeerNode.Online\n- uid: System.ServiceModel.PeerNode.Port\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: Port\n  nameWithType: PeerNode.Port\n  fullName: System.ServiceModel.PeerNode.Port\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.PeerNode.RefreshConnection\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: RefreshConnection()\n  nameWithType: PeerNode.RefreshConnection()\n  fullName: System.ServiceModel.PeerNode.RefreshConnection()\n- uid: System.ServiceModel.PeerNode.ToString\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: ToString()\n  nameWithType: PeerNode.ToString()\n  fullName: System.ServiceModel.PeerNode.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.PeerNode.IsOnline*\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: IsOnline\n  nameWithType: PeerNode.IsOnline\n- uid: System.ServiceModel.PeerNode.MessagePropagationFilter*\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: MessagePropagationFilter\n  nameWithType: PeerNode.MessagePropagationFilter\n- uid: System.ServiceModel.PeerNode.Port*\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: Port\n  nameWithType: PeerNode.Port\n- uid: System.ServiceModel.PeerNode.RefreshConnection*\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: RefreshConnection\n  nameWithType: PeerNode.RefreshConnection\n- uid: System.ServiceModel.PeerNode.ToString*\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: ToString\n  nameWithType: PeerNode.ToString\n"}