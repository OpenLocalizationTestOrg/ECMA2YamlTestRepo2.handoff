{"nodes":[{"pos":[1472,1543],"content":"Enables sections of a page to be partially rendered without a postback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables sections of a page to be partially rendered without a postback.","pos":[0,71]}]},{"pos":[1556,8016],"content":"In this topic:      -   [Introduction](#introduction)      -   [Refreshing UpdatePanel Content](#refreshing_updatepanel_content)      -   [UpdatePanel Usage](#updatepanel_usage)      -   [Applying Styles](#applying_styles)      -   [Declarative Syntax](#declarative_syntax)      <a name=\"introduction\"></a>    ## Introduction    UpdatePanel controls are a central part of AJAX functionality in ASP.NET. They are used with the <xref:System.Web.UI.ScriptManager> control to enable partial-page rendering. Partial-page rendering reduces the need for synchronous postbacks and complete page updates when only part of the page has to be updated. Partial-page rendering improves the user experience because it reduces the screen flicker that occurs during a full-page postback and improves Web page interactivity.      <a name=\"refreshing_updatepanel_content\"></a>    ## Refreshing UpdatePanel Content    When partial-page rendering is enabled, a control can perform a postback that updates the whole page or an asynchronous postback that updates the content of one or more UpdatePanel controls. Whether a control causes an asynchronous postback and updates an UpdatePanel control depends on the following:      -   If the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property of the UpdatePanel control is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, the UpdatePanel control's content is updated on every postback that originates from the page. This includes asynchronous postbacks from controls that are inside other UpdatePanel controls and postbacks from controls that are not inside UpdatePanel controls.      -   If the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, the UpdatePanel control's content is updated in the following circumstances:          -   When you call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the UpdatePanel control explicitly.          -   When the UpdatePanel control is nested inside another UpdatePanel control, and the parent panel is updated.          -   When a postback is caused by a control that is defined as a trigger by using the `Triggers` property of the UpdatePanel control. In this scenario, the control explicitly triggers an update of the panel content. The control can be either inside or outside the UpdatePanel control that the trigger is associated with.          -   When the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` and a child control of the UpdatePanel control causes a postback. Child controls of nested UpdatePanel controls do not cause an update to the outer UpdatePanel control unless they are explicitly defined as triggers.       The combination of setting the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property to `false` and the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property to <xref:System.Web.UI.UpdatePanelUpdateMode> is not allowed and will throw an exception.       When the UpdatePanel control performs an asynchronous post, it adds a custom HTTP header. Some proxies remove this custom HTTP header. If this occurs, the server handles the request as a regular postback, which causes a client error. To resolve this issue, insert a custom form field when you perform asynchronous posts. Then check the header or the custom form field in server code.      <a name=\"updatepanel_usage\"></a>    ## UpdatePanel Usage    You can use multiple UpdatePanel controls to update different page regions independently. When the page that contains one or more UpdatePanel controls is first rendered, all the content of all UpdatePanel controls are rendered and sent to the browser. On subsequent asynchronous postbacks, the content of each UpdatePanel control might not be updated depending on the panel settings and on client or server logic for individual panels.       You can also use UpdatePanel controls in the following scenarios:      -   In user controls.      -   On master and content pages.      -   Nested inside other UpdatePanel controls.      -   Inside templated controls such as the <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.Repeater> controls.       UpdatePanel controls can be added declaratively or programmatically.       You can add an UpdatePanel control programmatically, but you cannot add triggers programmatically. To create trigger-like behavior, you can register a control on the page as an asynchronous postback control. You do this by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control. You can then create an event handler that runs in response to the asynchronous postback, and in the handler, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the UpdatePanel control.      <a name=\"applying_styles\"></a>    ## Applying Styles    The UpdatePanel control accepts expando attributes. This lets you set a CSS class for the HTMLelements that the controls render. For example, you might create the markup shown in the following example:      ```   <asp:UpdatePanel runat=\"server\" class=\"myStyle\">   </asp:UpdatePanel>    ```       The markup in the previous example renders HTML similar to the following when the page runs:      ```   <div id=\"ctl00_MainContent_UpdatePanel1\" class=\"MyStyle\">   </div>   ```      <a name=\"declarative_syntax\"></a>    ## Declarative Syntax      ```   <asp:UpdatePanel       ChildrenAsTriggers=\"True|False\"       EnableTheming=\"True|False\"       EnableViewState=\"True|False\"       ID=\"string\"       OnDataBinding=\"DataBinding event handler\"       OnDisposed=\"Disposed event handler\"       OnInit=\"Init event handler\"       OnLoad=\"Load event handler\"       OnPreRender=\"PreRender event handler\"       OnUnload=\"Unload event handler\"       RenderMode=\"Block|Inline\"       runat=\"server\"       SkinID=\"string\"       UpdateMode=\"Always|Conditional\"       Visible=\"True|False\"   >       <ContentTemplate>           <!-- child controls -->       </ContentTemplate>       <Triggers>           <asp:AsyncPostBackTrigger                ControlID=\"string\"               EventName=\"string\"           />           <asp:PostBackTrigger                ControlID=\"string\"           />       </Triggers>   </asp:UpdatePanel>   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"In this topic:      -   <bpt id=\"p1\">[</bpt>Introduction<ept id=\"p1\">](#introduction)</ept><ph id=\"ph1\">      -   </ph><bpt id=\"p2\">[</bpt>Refreshing UpdatePanel Content<ept id=\"p2\">](#refreshing_updatepanel_content)</ept><ph id=\"ph2\">      -   </ph><bpt id=\"p3\">[</bpt>UpdatePanel Usage<ept id=\"p3\">](#updatepanel_usage)</ept><ph id=\"ph3\">      -   </ph><bpt id=\"p4\">[</bpt>Applying Styles<ept id=\"p4\">](#applying_styles)</ept><ph id=\"ph4\">      -   </ph><bpt id=\"p5\">[</bpt>Declarative Syntax<ept id=\"p5\">](#declarative_syntax)</ept>      <bpt id=\"p6\">&lt;a name=\"introduction\"&gt;</bpt><ept id=\"p6\">&lt;/a&gt;</ept>    ## Introduction    UpdatePanel controls are a central part of AJAX functionality in ASP.NET.","pos":[0,402],"source":"In this topic:      -   [Introduction](#introduction)      -   [Refreshing UpdatePanel Content](#refreshing_updatepanel_content)      -   [UpdatePanel Usage](#updatepanel_usage)      -   [Applying Styles](#applying_styles)      -   [Declarative Syntax](#declarative_syntax)      <a name=\"introduction\"></a>    ## Introduction    UpdatePanel controls are a central part of AJAX functionality in ASP.NET."},{"content":"They are used with the &lt;xref:System.Web.UI.ScriptManager&gt; control to enable partial-page rendering.","pos":[403,502],"source":" They are used with the <xref:System.Web.UI.ScriptManager> control to enable partial-page rendering."},{"content":"Partial-page rendering reduces the need for synchronous postbacks and complete page updates when only part of the page has to be updated.","pos":[503,640]},{"content":"Partial-page rendering improves the user experience because it reduces the screen flicker that occurs during a full-page postback and improves Web page interactivity.","pos":[641,807]},{"content":"<bpt id=\"p1\">&lt;a name=\"refreshing_updatepanel_content\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Refreshing UpdatePanel Content    When partial-page rendering is enabled, a control can perform a postback that updates the whole page or an asynchronous postback that updates the content of one or more UpdatePanel controls.","pos":[813,1089],"source":"<a name=\"refreshing_updatepanel_content\"></a>    ## Refreshing UpdatePanel Content    When partial-page rendering is enabled, a control can perform a postback that updates the whole page or an asynchronous postback that updates the content of one or more UpdatePanel controls."},{"content":"Whether a control causes an asynchronous postback and updates an UpdatePanel control depends on the following:      -   If the &lt;xref:System.Web.UI.UpdatePanel.UpdateMode%2A&gt; property of the UpdatePanel control is set to &lt;xref:System.Web.UI.UpdatePanelUpdateMode&gt;, the UpdatePanel control's content is updated on every postback that originates from the page.","pos":[1090,1447],"source":" Whether a control causes an asynchronous postback and updates an UpdatePanel control depends on the following:      -   If the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property of the UpdatePanel control is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, the UpdatePanel control's content is updated on every postback that originates from the page."},{"content":"This includes asynchronous postbacks from controls that are inside other UpdatePanel controls and postbacks from controls that are not inside UpdatePanel controls.","pos":[1448,1611]},{"content":"-   If the &lt;xref:System.Web.UI.UpdatePanel.UpdateMode%2A&gt; property is set to &lt;xref:System.Web.UI.UpdatePanelUpdateMode&gt;, the UpdatePanel control's content is updated in the following circumstances:          -   When you call the &lt;xref:System.Web.UI.UpdatePanel.Update%2A&gt; method of the UpdatePanel control explicitly.","pos":[1617,1934],"source":"      -   If the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, the UpdatePanel control's content is updated in the following circumstances:          -   When you call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the UpdatePanel control explicitly."},{"content":"-   When the UpdatePanel control is nested inside another UpdatePanel control, and the parent panel is updated.","pos":[1944,2055]},{"content":"-   When a postback is caused by a control that is defined as a trigger by using the <ph id=\"ph1\">`Triggers`</ph> property of the UpdatePanel control.","pos":[2065,2197],"source":"          -   When a postback is caused by a control that is defined as a trigger by using the `Triggers` property of the UpdatePanel control."},{"content":"In this scenario, the control explicitly triggers an update of the panel content.","pos":[2198,2279]},{"content":"The control can be either inside or outside the UpdatePanel control that the trigger is associated with.","pos":[2280,2384]},{"content":"-   When the &lt;xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A&gt; property is set to <ph id=\"ph1\">`true`</ph> and a child control of the UpdatePanel control causes a postback.","pos":[2394,2553],"source":"          -   When the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` and a child control of the UpdatePanel control causes a postback."},{"content":"Child controls of nested UpdatePanel controls do not cause an update to the outer UpdatePanel control unless they are explicitly defined as triggers.","pos":[2554,2703]},{"content":"The combination of setting the &lt;xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A&gt; property to <ph id=\"ph1\">`false`</ph> and the &lt;xref:System.Web.UI.UpdatePanel.UpdateMode%2A&gt; property to &lt;xref:System.Web.UI.UpdatePanelUpdateMode&gt; is not allowed and will throw an exception.","pos":[2710,2969],"source":"       The combination of setting the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property to `false` and the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property to <xref:System.Web.UI.UpdatePanelUpdateMode> is not allowed and will throw an exception."},{"content":"When the UpdatePanel control performs an asynchronous post, it adds a custom HTTP header.","pos":[2976,3065]},{"content":"Some proxies remove this custom HTTP header.","pos":[3066,3110]},{"content":"If this occurs, the server handles the request as a regular postback, which causes a client error.","pos":[3111,3209]},{"content":"To resolve this issue, insert a custom form field when you perform asynchronous posts.","pos":[3210,3296]},{"content":"Then check the header or the custom form field in server code.","pos":[3297,3359]},{"content":"<bpt id=\"p1\">&lt;a name=\"updatepanel_usage\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## UpdatePanel Usage    You can use multiple UpdatePanel controls to update different page regions independently.","pos":[3365,3514],"source":"<a name=\"updatepanel_usage\"></a>    ## UpdatePanel Usage    You can use multiple UpdatePanel controls to update different page regions independently."},{"content":"When the page that contains one or more UpdatePanel controls is first rendered, all the content of all UpdatePanel controls are rendered and sent to the browser.","pos":[3515,3676]},{"content":"On subsequent asynchronous postbacks, the content of each UpdatePanel control might not be updated depending on the panel settings and on client or server logic for individual panels.","pos":[3677,3860]},{"content":"You can also use UpdatePanel controls in the following scenarios:      -   In user controls.","pos":[3867,3959]},{"content":"-   On master and content pages.","pos":[3965,3997]},{"content":"-   Nested inside other UpdatePanel controls.","pos":[4003,4048]},{"content":"-   Inside templated controls such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; or &lt;xref:System.Web.UI.WebControls.Repeater&gt; controls.","pos":[4054,4192],"source":"      -   Inside templated controls such as the <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.Repeater> controls."},{"content":"UpdatePanel controls can be added declaratively or programmatically.","pos":[4199,4267]},{"content":"You can add an UpdatePanel control programmatically, but you cannot add triggers programmatically.","pos":[4274,4372]},{"content":"To create trigger-like behavior, you can register a control on the page as an asynchronous postback control.","pos":[4373,4481]},{"content":"You do this by calling the &lt;xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A&gt; method of the &lt;xref:System.Web.UI.ScriptManager&gt; control.","pos":[4482,4633],"source":" You do this by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control."},{"content":"You can then create an event handler that runs in response to the asynchronous postback, and in the handler, call the &lt;xref:System.Web.UI.UpdatePanel.Update%2A&gt; method of the UpdatePanel control.","pos":[4634,4829],"source":" You can then create an event handler that runs in response to the asynchronous postback, and in the handler, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the UpdatePanel control."},{"content":"<bpt id=\"p1\">&lt;a name=\"applying_styles\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Applying Styles    The UpdatePanel control accepts expando attributes.","pos":[4835,4942],"source":"<a name=\"applying_styles\"></a>    ## Applying Styles    The UpdatePanel control accepts expando attributes."},{"content":"This lets you set a CSS class for the HTMLelements that the controls render.","pos":[4943,5019]},{"content":"For example, you might create the markup shown in the following example:      <ph id=\"ph1\">```   &lt;asp:UpdatePanel runat=\"server\" class=\"myStyle\"&gt;   &lt;/asp:UpdatePanel&gt;    ```</ph>       The markup in the previous example renders HTML similar to the following when the page runs:      <ph id=\"ph2\">```   &lt;div id=\"ctl00_MainContent_UpdatePanel1\" class=\"MyStyle\"&gt;   &lt;/div&gt;   ```</ph>      <bpt id=\"p1\">&lt;a name=\"declarative_syntax\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Declarative Syntax      <ph id=\"ph3\">```   &lt;asp:UpdatePanel       ChildrenAsTriggers=\"True|False\"       EnableTheming=\"True|False\"       EnableViewState=\"True|False\"       ID=\"string\"       OnDataBinding=\"DataBinding event handler\"       OnDisposed=\"Disposed event handler\"       OnInit=\"Init event handler\"       OnLoad=\"Load event handler\"       OnPreRender=\"PreRender event handler\"       OnUnload=\"Unload event handler\"       RenderMode=\"Block|Inline\"       runat=\"server\"       SkinID=\"string\"       UpdateMode=\"Always|Conditional\"       Visible=\"True|False\"   &gt;       &lt;ContentTemplate&gt;           &lt;!-- child controls --&gt;       &lt;/ContentTemplate&gt;       &lt;Triggers&gt;           &lt;asp:AsyncPostBackTrigger                ControlID=\"string\"               EventName=\"string\"           /&gt;           &lt;asp:PostBackTrigger                ControlID=\"string\"           /&gt;       &lt;/Triggers&gt;   &lt;/asp:UpdatePanel&gt;   ```</ph>","pos":[5020,6302],"source":" For example, you might create the markup shown in the following example:      ```   <asp:UpdatePanel runat=\"server\" class=\"myStyle\">   </asp:UpdatePanel>    ```       The markup in the previous example renders HTML similar to the following when the page runs:      ```   <div id=\"ctl00_MainContent_UpdatePanel1\" class=\"MyStyle\">   </div>   ```      <a name=\"declarative_syntax\"></a>    ## Declarative Syntax      ```   <asp:UpdatePanel       ChildrenAsTriggers=\"True|False\"       EnableTheming=\"True|False\"       EnableViewState=\"True|False\"       ID=\"string\"       OnDataBinding=\"DataBinding event handler\"       OnDisposed=\"Disposed event handler\"       OnInit=\"Init event handler\"       OnLoad=\"Load event handler\"       OnPreRender=\"PreRender event handler\"       OnUnload=\"Unload event handler\"       RenderMode=\"Block|Inline\"       runat=\"server\"       SkinID=\"string\"       UpdateMode=\"Always|Conditional\"       Visible=\"True|False\"   >       <ContentTemplate>           <!-- child controls -->       </ContentTemplate>       <Triggers>           <asp:AsyncPostBackTrigger                ControlID=\"string\"               EventName=\"string\"           />           <asp:PostBackTrigger                ControlID=\"string\"           />       </Triggers>   </asp:UpdatePanel>   ```"}]},{"pos":[17526,17613],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> class."},{"pos":[17625,18005],"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.UpdatePanel> class. To dynamically add an <xref:System.Web.UI.UpdatePanel> control to a page, create a new <xref:System.Web.UI.UpdatePanel> instance and then add child controls to the control object that is exposed by the instance's <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.UpdatePanel> class. To dynamically add an <xref:System.Web.UI.UpdatePanel> control to a page, create a new <xref:System.Web.UI.UpdatePanel> instance and then add child controls to the control object that is exposed by the instance's <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.","pos":[0,380],"nodes":[{"content":"Use this constructor to initialize a new instance of the &lt;xref:System.Web.UI.UpdatePanel&gt; class.","pos":[0,96],"source":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.UpdatePanel> class."},{"content":"To dynamically add an &lt;xref:System.Web.UI.UpdatePanel&gt; control to a page, create a new &lt;xref:System.Web.UI.UpdatePanel&gt; instance and then add child controls to the control object that is exposed by the instance's &lt;xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A&gt; property.","pos":[97,380],"source":" To dynamically add an <xref:System.Web.UI.UpdatePanel> control to a page, create a new <xref:System.Web.UI.UpdatePanel> instance and then add child controls to the control object that is exposed by the instance's <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property."}]}]},{"pos":[19088,19209],"content":"Gets the cascading style sheet (CSS) attributes collection of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets the cascading style sheet (CSS) attributes collection of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"pos":[19221,19387],"content":"The Attributes property contains a collection of CSS style attributes that can be used in the enclosing <ph id=\"ph1\">`div`</ph> element of the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","needQuote":true,"needEscape":true,"source":"The Attributes property contains a collection of CSS style attributes that can be used in the enclosing `div` element of the <xref:System.Web.UI.UpdatePanel> control."},{"pos":[19549,19611],"content":"The names of the CSS style rules in the attributes collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The names of the CSS style rules in the attributes collection.","pos":[0,62]}]},{"pos":[20061,20233],"content":"Gets or sets a value that indicates whether postbacks from immediate child controls of an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control update the panel's content.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether postbacks from immediate child controls of an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control update the panel's content."},{"pos":[20246,21500],"content":"Set the ChildrenAsTriggers property to `true` if you want postbacks from immediate child controls of the <xref:System.Web.UI.UpdatePanel> control to cause an update of the panel's content. Child controls of nested <xref:System.Web.UI.UpdatePanel> controls will not cause an update of the parent <xref:System.Web.UI.UpdatePanel> control's content unless you call the <xref:System.Web.UI.UpdatePanel.Update%2A> method explicitly or you define the child controls as triggers.      > [!NOTE] >  When the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is set to <xref:System.Web.UI.UpdatePanelUpdateMode> and the ChildrenAsTriggers property is set to `false`, an <xref:System.InvalidOperationException> exception is thrown during the <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> method. This combination of properties is not allowed for the <xref:System.Web.UI.UpdatePanel> control.       A scenario where you might set ChildrenAsTriggers to `false` is when you have two <xref:System.Web.UI.UpdatePanel> controls and you want a postback from the first panel to update the content of the second panel but not update its own content. For example, the first panel might be a list of products to buy and the second panel might be a shopping cart.","needQuote":false,"needEscape":true,"nodes":[{"content":"Set the ChildrenAsTriggers property to <ph id=\"ph1\">`true`</ph> if you want postbacks from immediate child controls of the &lt;xref:System.Web.UI.UpdatePanel&gt; control to cause an update of the panel's content.","pos":[0,188],"source":"Set the ChildrenAsTriggers property to `true` if you want postbacks from immediate child controls of the <xref:System.Web.UI.UpdatePanel> control to cause an update of the panel's content."},{"content":"Child controls of nested &lt;xref:System.Web.UI.UpdatePanel&gt; controls will not cause an update of the parent &lt;xref:System.Web.UI.UpdatePanel&gt; control's content unless you call the &lt;xref:System.Web.UI.UpdatePanel.Update%2A&gt; method explicitly or you define the child controls as triggers.","pos":[189,472],"source":" Child controls of nested <xref:System.Web.UI.UpdatePanel> controls will not cause an update of the parent <xref:System.Web.UI.UpdatePanel> control's content unless you call the <xref:System.Web.UI.UpdatePanel.Update%2A> method explicitly or you define the child controls as triggers."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When the &lt;xref:System.Web.UI.UpdatePanel.UpdateMode%2A&gt; property is set to &lt;xref:System.Web.UI.UpdatePanelUpdateMode&gt; and the ChildrenAsTriggers property is set to <ph id=\"ph2\">`false`</ph>, an &lt;xref:System.InvalidOperationException&gt; exception is thrown during the &lt;xref:System.Web.UI.UpdatePanel.OnPreRender%2A&gt; method.","pos":[478,793],"source":"      > [!NOTE] >  When the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is set to <xref:System.Web.UI.UpdatePanelUpdateMode> and the ChildrenAsTriggers property is set to `false`, an <xref:System.InvalidOperationException> exception is thrown during the <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> method."},{"content":"This combination of properties is not allowed for the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[794,889],"source":" This combination of properties is not allowed for the <xref:System.Web.UI.UpdatePanel> control."},{"content":"A scenario where you might set ChildrenAsTriggers to <ph id=\"ph1\">`false`</ph> is when you have two &lt;xref:System.Web.UI.UpdatePanel&gt; controls and you want a postback from the first panel to update the content of the second panel but not update its own content.","pos":[896,1138],"source":"       A scenario where you might set ChildrenAsTriggers to `false` is when you have two <xref:System.Web.UI.UpdatePanel> controls and you want a postback from the first panel to update the content of the second panel but not update its own content."},{"content":"For example, the first panel might be a list of products to buy and the second panel might be a shopping cart.","pos":[1139,1249]}]},{"pos":[21628,21973],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if postbacks from immediate child controls of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control update the panel's content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if postbacks from immediate child controls of the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control update the panel's content; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,268],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if postbacks from immediate child controls of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control update the panel's content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[269,345],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[22416,22529],"content":"Gets or sets the template that defines the content of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the template that defines the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"pos":[22542,23697],"content":"The ContentTemplate property contains the content that appears inside an <xref:System.Web.UI.UpdatePanel> control when it is rendered. You can create the template's content declaratively or programmatically. The content template of an <xref:System.Web.UI.UpdatePanel> control is a single-instance template. Therefore, the properties of the controls it contains can be accessed directly on the page without using the <xref:System.Web.UI.Page.FindControl%2A> method. For more information, see the <xref:System.Web.UI.TemplateInstanceAttribute> class overview.       To add items to the <xref:System.Web.UI.UpdatePanel> control declaratively, add an `<ContentTemplate>` element between the opening and closing tags of the <xref:System.Web.UI.UpdatePanel> control. Inside the `<ContentTemplate>` element tags, declare other controls and HTML elements.       To add items to the <xref:System.Web.UI.UpdatePanel> control dynamically, use the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property, which enables you to add child controls without having to create a custom template that implements the <xref:System.Web.UI.ITemplate> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ContentTemplate property contains the content that appears inside an &lt;xref:System.Web.UI.UpdatePanel&gt; control when it is rendered.","pos":[0,134],"source":"The ContentTemplate property contains the content that appears inside an <xref:System.Web.UI.UpdatePanel> control when it is rendered."},{"content":"You can create the template's content declaratively or programmatically.","pos":[135,207]},{"content":"The content template of an &lt;xref:System.Web.UI.UpdatePanel&gt; control is a single-instance template.","pos":[208,306],"source":" The content template of an <xref:System.Web.UI.UpdatePanel> control is a single-instance template."},{"content":"Therefore, the properties of the controls it contains can be accessed directly on the page without using the &lt;xref:System.Web.UI.Page.FindControl%2A&gt; method.","pos":[307,464],"source":" Therefore, the properties of the controls it contains can be accessed directly on the page without using the <xref:System.Web.UI.Page.FindControl%2A> method."},{"content":"For more information, see the &lt;xref:System.Web.UI.TemplateInstanceAttribute&gt; class overview.","pos":[465,557],"source":" For more information, see the <xref:System.Web.UI.TemplateInstanceAttribute> class overview."},{"content":"To add items to the &lt;xref:System.Web.UI.UpdatePanel&gt; control declaratively, add an <ph id=\"ph1\">`&lt;ContentTemplate&gt;`</ph> element between the opening and closing tags of the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[564,760],"source":"       To add items to the <xref:System.Web.UI.UpdatePanel> control declaratively, add an `<ContentTemplate>` element between the opening and closing tags of the <xref:System.Web.UI.UpdatePanel> control."},{"content":"Inside the <ph id=\"ph1\">`&lt;ContentTemplate&gt;`</ph> element tags, declare other controls and HTML elements.","pos":[761,847],"source":" Inside the `<ContentTemplate>` element tags, declare other controls and HTML elements."},{"content":"To add items to the &lt;xref:System.Web.UI.UpdatePanel&gt; control dynamically, use the &lt;xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A&gt; property, which enables you to add child controls without having to create a custom template that implements the &lt;xref:System.Web.UI.ITemplate&gt; interface.","pos":[854,1151],"source":"       To add items to the <xref:System.Web.UI.UpdatePanel> control dynamically, use the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property, which enables you to add child controls without having to create a custom template that implements the <xref:System.Web.UI.ITemplate> interface."}]},{"pos":[23850,24071],"content":"An <xref href=\"System.Web.UI.ITemplate\"></xref> instance that defines the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ITemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that defines the content of the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","pos":[0,144],"source":"An <xref href=\"System.Web.UI.ITemplate\"></xref> instance that defines the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[145,221],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[24251,24445],"content":"The ContentTemplate property of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is set after an instance of the template is created or after the content template container is created.","needQuote":true,"needEscape":true,"source":"The ContentTemplate property of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control is set after an instance of the template is created or after the content template container is created."},{"pos":[24858,24933],"content":"Gets a control object to which you can programmatically add child controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a control object to which you can programmatically add child controls.","pos":[0,75]}]},{"pos":[24945,25431],"content":"The ContentTemplateContainer property enables you to programmatically add child controls to the <xref:System.Web.UI.UpdatePanel> control without having to define a custom template that inherits from the <xref:System.Web.UI.ITemplate> interface. If you are adding content to the <xref:System.Web.UI.UpdatePanel> control declaratively or through a designer, you should add content to the <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> property by using a `<ContentTemplate>` element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ContentTemplateContainer property enables you to programmatically add child controls to the &lt;xref:System.Web.UI.UpdatePanel&gt; control without having to define a custom template that inherits from the &lt;xref:System.Web.UI.ITemplate&gt; interface.","pos":[0,244],"source":"The ContentTemplateContainer property enables you to programmatically add child controls to the <xref:System.Web.UI.UpdatePanel> control without having to define a custom template that inherits from the <xref:System.Web.UI.ITemplate> interface."},{"content":"If you are adding content to the &lt;xref:System.Web.UI.UpdatePanel&gt; control declaratively or through a designer, you should add content to the &lt;xref:System.Web.UI.UpdatePanel.ContentTemplate%2A&gt; property by using a <ph id=\"ph1\">`&lt;ContentTemplate&gt;`</ph> element.","pos":[245,486],"source":" If you are adding content to the <xref:System.Web.UI.UpdatePanel> control declaratively or through a designer, you should add content to the <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> property by using a `<ContentTemplate>` element."}]},{"pos":[26131,26270],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that defines the content of the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.Control\"></xref> object that defines the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"pos":[26684,26849],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the child controls for the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.UI.ControlCollection\"></xref> object that contains the child controls for the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"pos":[26861,27327],"content":"The Controls property is overridden from the base <xref:System.Web.UI.Control> class and sealed to prevent additional derivation. To add controls to the <xref:System.Web.UI.UpdatePanel> control declaratively, create a `<ContentTemplate>` element inside the <xref:System.Web.UI.UpdatePanel> control markup. To add controls to the <xref:System.Web.UI.UpdatePanel> control programmatically, use the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Controls property is overridden from the base &lt;xref:System.Web.UI.Control&gt; class and sealed to prevent additional derivation.","pos":[0,129],"source":"The Controls property is overridden from the base <xref:System.Web.UI.Control> class and sealed to prevent additional derivation."},{"content":"To add controls to the &lt;xref:System.Web.UI.UpdatePanel&gt; control declaratively, create a <ph id=\"ph1\">`&lt;ContentTemplate&gt;`</ph> element inside the &lt;xref:System.Web.UI.UpdatePanel&gt; control markup.","pos":[130,305],"source":" To add controls to the <xref:System.Web.UI.UpdatePanel> control declaratively, create a `<ContentTemplate>` element inside the <xref:System.Web.UI.UpdatePanel> control markup."},{"content":"To add controls to the &lt;xref:System.Web.UI.UpdatePanel&gt; control programmatically, use the &lt;xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A&gt; property.","pos":[306,466],"source":" To add controls to the <xref:System.Web.UI.UpdatePanel> control programmatically, use the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property."}]},{"pos":[27499,27595],"content":"The collection of child controls for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"The collection of child controls for the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"pos":[27768,28287],"content":"The &lt;xref:System.Web.UI.ControlCollection.Add<bpt id=\"p1\">*</bpt>&gt;, &lt;xref:System.Web.UI.ControlCollection.AddAt<ept id=\"p1\">*</ept>&gt;, &lt;xref:System.Web.UI.ControlCollection.Clear<bpt id=\"p2\">*</bpt>&gt;, &lt;xref:System.Web.UI.ControlCollection.Remove<ept id=\"p2\">*</ept>&gt;, or &lt;xref:System.Web.UI.ControlCollection.RemoveAt<bpt id=\"p3\">*</bpt>&gt; method of the <bpt id=\"p4\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> class has been called. To change the content of the <bpt id=\"p5\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> control, modify the child controls of the &lt;xref:System.Web.UI.UpdatePanel.ContentTemplateContainer<ept id=\"p3\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.ControlCollection.Add*>, <xref:System.Web.UI.ControlCollection.AddAt*>, <xref:System.Web.UI.ControlCollection.Clear*>, <xref:System.Web.UI.ControlCollection.Remove*>, or <xref:System.Web.UI.ControlCollection.RemoveAt*> method of the <xref href=\"System.Web.UI.ControlCollection\"></xref> class has been called. To change the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, modify the child controls of the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer*> property."},{"pos":[28734,28919],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that acts as a container for child controls that define the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control's content.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Web.UI.Control\"></xref> object that acts as a container for child controls that define the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control's content."},{"pos":[28931,29283],"content":"This method is intended for use by control developers who want to extend the <xref:System.Web.UI.UpdatePanel> control. For example, in derived classes, you can provide a different root control that acts as a container for your <xref:System.Web.UI.UpdatePanel> control's content. The default implementation returns a <xref:System.Web.UI.Control> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is intended for use by control developers who want to extend the <xref:System.Web.UI.UpdatePanel> control. For example, in derived classes, you can provide a different root control that acts as a container for your <xref:System.Web.UI.UpdatePanel> control's content. The default implementation returns a <xref:System.Web.UI.Control> object.","pos":[0,352],"nodes":[{"content":"This method is intended for use by control developers who want to extend the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[0,118],"source":"This method is intended for use by control developers who want to extend the <xref:System.Web.UI.UpdatePanel> control."},{"content":"For example, in derived classes, you can provide a different root control that acts as a container for your &lt;xref:System.Web.UI.UpdatePanel&gt; control's content.","pos":[119,278],"source":" For example, in derived classes, you can provide a different root control that acts as a container for your <xref:System.Web.UI.UpdatePanel> control's content."},{"content":"The default implementation returns a &lt;xref:System.Web.UI.Control&gt; object.","pos":[279,352],"source":" The default implementation returns a <xref:System.Web.UI.Control> object."}]}]},{"pos":[30917,31045],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> container for the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control's content.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.Control\"></xref> container for the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control's content."},{"pos":[31544,31664],"content":"Returns the collection of all controls that are contained in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Returns the collection of all controls that are contained in the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"pos":[31677,32586],"content":"The CreateControlCollection method is used by control developers.       Because this method is protected and sealed, it is visible to classes that inherit from the <xref:System.Web.UI.UpdatePanel> class, but it cannot be overridden. This method overrides the base implementation to return a specialized <xref:System.Web.UI.ControlCollection> object that throws an <xref:System.InvalidOperationException> when the <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, or <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method of the <xref:System.Web.UI.ControlCollection> class is invoked. To change the content of the <xref:System.Web.UI.UpdatePanel> control, modify the child controls of the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CreateControlCollection method is used by control developers.       Because this method is protected and sealed, it is visible to classes that inherit from the <xref:System.Web.UI.UpdatePanel> class, but it cannot be overridden. This method overrides the base implementation to return a specialized <xref:System.Web.UI.ControlCollection> object that throws an <xref:System.InvalidOperationException> when the <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, or <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method of the <xref:System.Web.UI.ControlCollection> class is invoked. To change the content of the <xref:System.Web.UI.UpdatePanel> control, modify the child controls of the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.","pos":[0,907],"nodes":[{"content":"The CreateControlCollection method is used by control developers.","pos":[0,65]},{"content":"Because this method is protected and sealed, it is visible to classes that inherit from the &lt;xref:System.Web.UI.UpdatePanel&gt; class, but it cannot be overridden.","pos":[72,232],"source":"       Because this method is protected and sealed, it is visible to classes that inherit from the <xref:System.Web.UI.UpdatePanel> class, but it cannot be overridden."},{"content":"This method overrides the base implementation to return a specialized &lt;xref:System.Web.UI.ControlCollection&gt; object that throws an &lt;xref:System.InvalidOperationException&gt; when the &lt;xref:System.Web.UI.ControlCollection.Add%2A&gt;, &lt;xref:System.Web.UI.ControlCollection.AddAt%2A&gt;, &lt;xref:System.Web.UI.ControlCollection.Clear%2A&gt;, &lt;xref:System.Web.UI.ControlCollection.Remove%2A&gt;, or &lt;xref:System.Web.UI.ControlCollection.RemoveAt%2A&gt; method of the &lt;xref:System.Web.UI.ControlCollection&gt; class is invoked.","pos":[233,732],"source":" This method overrides the base implementation to return a specialized <xref:System.Web.UI.ControlCollection> object that throws an <xref:System.InvalidOperationException> when the <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, or <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method of the <xref:System.Web.UI.ControlCollection> class is invoked."},{"content":"To change the content of the &lt;xref:System.Web.UI.UpdatePanel&gt; control, modify the child controls of the &lt;xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A&gt; property.","pos":[733,907],"source":" To change the content of the <xref:System.Web.UI.UpdatePanel> control, modify the child controls of the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property."}]}]},{"pos":[32791,32969],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ControlCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that consists of all controls that define the content of the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.ControlCollection\"></xref> object that consists of all controls that define the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"pos":[33396,33523],"content":"Initializes the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control trigger collection if partial-page rendering is enabled.","needQuote":true,"needEscape":true,"source":"Initializes the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control trigger collection if partial-page rendering is enabled."},{"pos":[33535,34126],"content":"If partial-page rendering is not enabled, the triggers that are defined in the <xref:System.Web.UI.UpdatePanel.Triggers%2A> property are not initialized because they have no effect. The <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property of the <xref:System.Web.UI.ScriptManager> control gets or sets a value that indicates whether partial-page rendering is enabled. The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property of the <xref:System.Web.UI.ScriptManager> control gets or sets a value that indicates whether partial-page rendering is supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"If partial-page rendering is not enabled, the triggers that are defined in the <xref:System.Web.UI.UpdatePanel.Triggers%2A> property are not initialized because they have no effect. The <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property of the <xref:System.Web.UI.ScriptManager> control gets or sets a value that indicates whether partial-page rendering is enabled. The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property of the <xref:System.Web.UI.ScriptManager> control gets or sets a value that indicates whether partial-page rendering is supported.","pos":[0,591],"nodes":[{"content":"If partial-page rendering is not enabled, the triggers that are defined in the &lt;xref:System.Web.UI.UpdatePanel.Triggers%2A&gt; property are not initialized because they have no effect.","pos":[0,181],"source":"If partial-page rendering is not enabled, the triggers that are defined in the <xref:System.Web.UI.UpdatePanel.Triggers%2A> property are not initialized because they have no effect."},{"content":"The &lt;xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A&gt; property of the &lt;xref:System.Web.UI.ScriptManager&gt; control gets or sets a value that indicates whether partial-page rendering is enabled.","pos":[182,384],"source":" The <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property of the <xref:System.Web.UI.ScriptManager> control gets or sets a value that indicates whether partial-page rendering is enabled."},{"content":"The &lt;xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A&gt; property of the &lt;xref:System.Web.UI.ScriptManager&gt; control gets or sets a value that indicates whether partial-page rendering is supported.","pos":[385,591],"source":" The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property of the <xref:System.Web.UI.ScriptManager> control gets or sets a value that indicates whether partial-page rendering is supported."}]}]},{"pos":[34666,34818],"content":"Gets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is being updated as a result of an asynchronous postback.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control is being updated as a result of an asynchronous postback."},{"pos":[34830,35216],"content":"The IsInPartialRendering property is intended for use by control developers who want to know when an <xref:System.Web.UI.UpdatePanel> control is being updated as a result of an asynchronous postback. In page development scenarios, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property to determine whether a page is processing as a result of an asynchronous postback.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IsInPartialRendering property is intended for use by control developers who want to know when an <xref:System.Web.UI.UpdatePanel> control is being updated as a result of an asynchronous postback. In page development scenarios, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property to determine whether a page is processing as a result of an asynchronous postback.","pos":[0,386],"nodes":[{"content":"The IsInPartialRendering property is intended for use by control developers who want to know when an &lt;xref:System.Web.UI.UpdatePanel&gt; control is being updated as a result of an asynchronous postback.","pos":[0,199],"source":"The IsInPartialRendering property is intended for use by control developers who want to know when an <xref:System.Web.UI.UpdatePanel> control is being updated as a result of an asynchronous postback."},{"content":"In page development scenarios, use the &lt;xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A&gt; property to determine whether a page is processing as a result of an asynchronous postback.","pos":[200,386],"source":" In page development scenarios, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property to determine whether a page is processing as a result of an asynchronous postback."}]}]},{"pos":[35340,35603],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control is being updated as a result of an asynchronous postback; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current <xref href=\"System.Web.UI.UpdatePanel\"></xref> control is being updated as a result of an asynchronous postback; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[36070,36135],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control.Init\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Control.Init\"></xref> event."},{"pos":[36148,36430],"content":"The <xref:System.Web.UI.UpdatePanel> control's <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> property is instantiated during the OnInit method.       The OnInit method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.Web.UI.UpdatePanel> control's <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> property is instantiated during the OnInit method.       The OnInit method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.","pos":[0,280],"nodes":[{"content":"The &lt;xref:System.Web.UI.UpdatePanel&gt; control's &lt;xref:System.Web.UI.UpdatePanel.ContentTemplate%2A&gt; property is instantiated during the OnInit method.","pos":[0,149],"source":"The <xref:System.Web.UI.UpdatePanel> control's <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> property is instantiated during the OnInit method."},{"content":"The OnInit method is used by control developers to extend the functionality of the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[156,280],"source":"       The OnInit method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control."}]}]},{"pos":[36577,36640],"content":"An <xref:System.EventArgs> object that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; object that contains the event data.","pos":[0,63],"source":"An <xref:System.EventArgs> object that contains the event data."}]},{"pos":[36811,36993],"content":"The &lt;xref:System.Web.UI.UpdatePanel.ContentTemplate<bpt id=\"p1\">*</bpt>&gt; property is being defined when the &lt;xref:System.Web.UI.UpdatePanel.ContentTemplateContainer<ept id=\"p1\">*</ept>&gt; property has already been created.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.UpdatePanel.ContentTemplate*> property is being defined when the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer*> property has already been created."},{"pos":[37383,37622],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control.Load\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event for the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control and invokes the &lt;xref:System.Web.UI.UpdatePanel.Initialize*&gt; method when partial-page rendering is not enabled.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Control.Load\"></xref> event for the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control and invokes the <xref:System.Web.UI.UpdatePanel.Initialize*> method when partial-page rendering is not enabled."},{"pos":[37768,37831],"content":"An <xref:System.EventArgs> object that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; object that contains the event data.","pos":[0,63],"source":"An <xref:System.EventArgs> object that contains the event data."}]},{"pos":[38309,38379],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control.PreRender\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."},{"pos":[38391,38520],"content":"The OnPreRender method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnPreRender method is used by control developers to extend the functionality of the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[0,129],"source":"The OnPreRender method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control."}]},{"pos":[38671,38734],"content":"An <xref:System.EventArgs> object that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; object that contains the event data.","pos":[0,63],"source":"An <xref:System.EventArgs> object that contains the event data."}]},{"pos":[38910,39179],"content":"The &lt;xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers<bpt id=\"p1\">*</bpt>&gt; property is set to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and the &lt;xref:System.Web.UI.UpdatePanel.UpdateMode<ept id=\"p1\">*</ept>&gt; property is set to <bpt id=\"p3\">&lt;xref href=\"System.Web.UI.UpdatePanelUpdateMode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, and the <xref:System.Web.UI.UpdatePanel.UpdateMode*> property is set to <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref>."},{"pos":[39579,39651],"content":"Raises the base <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control.Unload\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the base <xref href=\"System.Web.UI.Control.Unload\"></xref> event."},{"pos":[39663,39788],"content":"The OnUnload method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnUnload method is used by control developers to extend the functionality of the &lt;xref:System.Web.UI.UpdatePanel&gt; control","pos":[0,125],"source":"The OnUnload method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control"}]},{"pos":[39936,39995],"content":"An <xref:System.EventArgs> object that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; object that contains event data.","pos":[0,59],"source":"An <xref:System.EventArgs> object that contains event data."}]},{"pos":[40489,40543],"content":"Raises the <xref:System.Web.UI.Control.Render*> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the &lt;xref:System.Web.UI.Control.Render*&gt; event.","pos":[0,54],"source":"Raises the <xref:System.Web.UI.Control.Render*> event."}]},{"pos":[40556,41062],"content":"The Render method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.       The Render method writes the rendered content of the <xref:System.Web.UI.UpdatePanel> control to the browser by using the supplied <xref:System.Web.UI.HtmlTextWriter> object. When you override the Render method in a derived class, make sure to call the Render method of the base class so that the child controls of the <xref:System.Web.UI.UpdatePanel> control are rendered.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Render method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.       The Render method writes the rendered content of the <xref:System.Web.UI.UpdatePanel> control to the browser by using the supplied <xref:System.Web.UI.HtmlTextWriter> object. When you override the Render method in a derived class, make sure to call the Render method of the base class so that the child controls of the <xref:System.Web.UI.UpdatePanel> control are rendered.","pos":[0,504],"nodes":[{"content":"The Render method is used by control developers to extend the functionality of the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[0,124],"source":"The Render method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control."},{"content":"The Render method writes the rendered content of the &lt;xref:System.Web.UI.UpdatePanel&gt; control to the browser by using the supplied &lt;xref:System.Web.UI.HtmlTextWriter&gt; object.","pos":[131,305],"source":"       The Render method writes the rendered content of the <xref:System.Web.UI.UpdatePanel> control to the browser by using the supplied <xref:System.Web.UI.HtmlTextWriter> object."},{"content":"When you override the Render method in a derived class, make sure to call the Render method of the base class so that the child controls of the &lt;xref:System.Web.UI.UpdatePanel&gt; control are rendered.","pos":[306,504],"source":" When you override the Render method in a derived class, make sure to call the Render method of the base class so that the child controls of the <xref:System.Web.UI.UpdatePanel> control are rendered."}]}]},{"pos":[41250,41371],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the output stream for rendering HTML content.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object that represents the output stream for rendering HTML content."},{"pos":[41903,41935],"content":"Raises the RenderChildren event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the RenderChildren event.","pos":[0,32]}]},{"pos":[41948,42486],"content":"The RenderChildren method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.       The RenderChildren method writes the rendered content of the <xref:System.Web.UI.UpdatePanel> control to the browser by using the supplied <xref:System.Web.UI.HtmlTextWriter> object. When you override the RenderChildren method in a derived class, make sure to call the RenderChildren method of the base class so that the child controls of the <xref:System.Web.UI.UpdatePanel> control are rendered.","needQuote":false,"needEscape":true,"nodes":[{"content":"The RenderChildren method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.       The RenderChildren method writes the rendered content of the <xref:System.Web.UI.UpdatePanel> control to the browser by using the supplied <xref:System.Web.UI.HtmlTextWriter> object. When you override the RenderChildren method in a derived class, make sure to call the RenderChildren method of the base class so that the child controls of the <xref:System.Web.UI.UpdatePanel> control are rendered.","pos":[0,536],"nodes":[{"content":"The RenderChildren method is used by control developers to extend the functionality of the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[0,132],"source":"The RenderChildren method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control."},{"content":"The RenderChildren method writes the rendered content of the &lt;xref:System.Web.UI.UpdatePanel&gt; control to the browser by using the supplied &lt;xref:System.Web.UI.HtmlTextWriter&gt; object.","pos":[139,321],"source":"       The RenderChildren method writes the rendered content of the <xref:System.Web.UI.UpdatePanel> control to the browser by using the supplied <xref:System.Web.UI.HtmlTextWriter> object."},{"content":"When you override the RenderChildren method in a derived class, make sure to call the RenderChildren method of the base class so that the child controls of the &lt;xref:System.Web.UI.UpdatePanel&gt; control are rendered.","pos":[322,536],"source":" When you override the RenderChildren method in a derived class, make sure to call the RenderChildren method of the base class so that the child controls of the <xref:System.Web.UI.UpdatePanel> control are rendered."}]}]},{"pos":[42682,42803],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the output stream for rendering HTML content.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object that represents the output stream for rendering HTML content."},{"pos":[43217,43515],"content":"Gets or sets a value that indicates whether an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control's content is enclosed in an HTML <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;div&amp;gt;\" name=\"&amp;lt;div&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_&amp;lt;span&amp;gt;\" name=\"&amp;lt;span&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control's content is enclosed in an HTML <xref uid=\"langword_csharp_&lt;div&gt;\" name=\"&lt;div&gt;\" href=\"\"></xref> or <xref uid=\"langword_csharp_&lt;span&gt;\" name=\"&lt;span&gt;\" href=\"\"></xref> element."},{"pos":[43527,43839],"content":"If the RenderMode property is set to <xref:System.Web.UI.UpdatePanelRenderMode>, the content of an <xref:System.Web.UI.UpdatePanel> control is rendered inside an HTML `<span>` element. If the RenderMode property is set to <xref:System.Web.UI.UpdatePanelRenderMode>, it is rendered inside an HTML `<div>` element.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the RenderMode property is set to &lt;xref:System.Web.UI.UpdatePanelRenderMode&gt;, the content of an &lt;xref:System.Web.UI.UpdatePanel&gt; control is rendered inside an HTML <ph id=\"ph1\">`&lt;span&gt;`</ph> element.","pos":[0,184],"source":"If the RenderMode property is set to <xref:System.Web.UI.UpdatePanelRenderMode>, the content of an <xref:System.Web.UI.UpdatePanel> control is rendered inside an HTML `<span>` element."},{"content":"If the RenderMode property is set to &lt;xref:System.Web.UI.UpdatePanelRenderMode&gt;, it is rendered inside an HTML <ph id=\"ph1\">`&lt;div&gt;`</ph> element.","pos":[185,312],"source":" If the RenderMode property is set to <xref:System.Web.UI.UpdatePanelRenderMode>, it is rendered inside an HTML `<div>` element."}]},{"pos":[44646,44933],"content":"One of the <xref href=\"System.Web.UI.UpdatePanelRenderMode\"></xref> values. The default is <xref href=\"System.Web.UI.UpdatePanelRenderMode\"></xref> so that the content of the panel is enclosed in an HTML <xref uid=\"langword_csharp_&lt;div&gt;\" name=\"&lt;div&gt;\" href=\"\"></xref> element.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanelRenderMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,75],"source":"One of the <xref href=\"System.Web.UI.UpdatePanelRenderMode\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanelRenderMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> so that the content of the panel is enclosed in an HTML <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;div&amp;gt;\" name=\"&amp;lt;div&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element.","pos":[76,287],"source":" The default is <xref href=\"System.Web.UI.UpdatePanelRenderMode\"></xref> so that the content of the panel is enclosed in an HTML <xref uid=\"langword_csharp_&lt;div&gt;\" name=\"&lt;div&gt;\" href=\"\"></xref> element."}]},{"pos":[45363,45489],"content":"Gets a value that indicates whether the content of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control will be updated.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control will be updated."},{"pos":[45502,46036],"content":"By default, the RequiresUpdate property returns `true` if the <xref:System.Web.UI.UpdatePanel.Update%2A> method was explicitly called or if the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>.       This property is intended for use by control developers who want to extend the <xref:System.Web.UI.UpdatePanel> control. For example, in derived classes, you might provide additional logic to determine whether an <xref:System.Web.UI.UpdatePanel> control should be updated.","needQuote":false,"needEscape":true,"nodes":[{"content":"By default, the RequiresUpdate property returns <ph id=\"ph1\">`true`</ph> if the &lt;xref:System.Web.UI.UpdatePanel.Update%2A&gt; method was explicitly called or if the &lt;xref:System.Web.UI.UpdatePanel.UpdateMode%2A&gt; property is set to &lt;xref:System.Web.UI.UpdatePanelUpdateMode&gt;.","pos":[0,253],"source":"By default, the RequiresUpdate property returns `true` if the <xref:System.Web.UI.UpdatePanel.Update%2A> method was explicitly called or if the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>."},{"content":"This property is intended for use by control developers who want to extend the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[260,380],"source":"       This property is intended for use by control developers who want to extend the <xref:System.Web.UI.UpdatePanel> control."},{"content":"For example, in derived classes, you might provide additional logic to determine whether an &lt;xref:System.Web.UI.UpdatePanel&gt; control should be updated.","pos":[381,532],"source":" For example, in derived classes, you might provide additional logic to determine whether an <xref:System.Web.UI.UpdatePanel> control should be updated."}]},{"pos":[46166,46390],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control's content will be updated; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control's content will be updated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[47045,47109],"content":"Returns an attribute of a Web control by using a specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an attribute of a Web control by using a specified name.","pos":[0,64]}]},{"pos":[47121,47316],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.UpdatePanel> instance is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.UpdatePanel> instance is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.","pos":[0,195],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.UpdatePanel&gt; instance is cast to an &lt;xref:System.Web.UI.IAttributeAccessor&gt; interface.","pos":[60,195],"source":" It can be used only when the <xref:System.Web.UI.UpdatePanel> instance is cast to an <xref:System.Web.UI.IAttributeAccessor> interface."}]}]},{"pos":[47468,47494],"content":"The name of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute.","pos":[0,26]}]},{"pos":[47552,47579],"content":"The value of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the attribute.","pos":[0,27]}]},{"pos":[48314,48364],"content":"Sets the value of the specified control attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the specified control attribute.","pos":[0,50]}]},{"pos":[48376,48571],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.UpdatePanel> instance is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.UpdatePanel> instance is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.","pos":[0,195],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.UpdatePanel&gt; instance is cast to an &lt;xref:System.Web.UI.IAttributeAccessor&gt; interface.","pos":[60,195],"source":" It can be used only when the <xref:System.Web.UI.UpdatePanel> instance is cast to an <xref:System.Web.UI.IAttributeAccessor> interface."}]}]},{"pos":[48735,48768],"content":"The name of the attribute to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute to set.","pos":[0,33]}]},{"pos":[48830,48864],"content":"The value of the attribute to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the attribute to set.","pos":[0,34]}]},{"pos":[49299,49609],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanelTriggerCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.AsyncPostBackTrigger\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Web.UI.PostBackTrigger\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> objects that were registered declaratively for the <bpt id=\"p4\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.Web.UI.UpdatePanelTriggerCollection\"></xref> object that contains <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> and <xref href=\"System.Web.UI.PostBackTrigger\"></xref> objects that were registered declaratively for the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"pos":[49622,50316],"content":"The Triggers property gets a collection of all the triggers that have been defined for the <xref:System.Web.UI.UpdatePanel> control. (You can define triggers declaratively by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by using the `<Triggers>` element of the <xref:System.Web.UI.UpdatePanel> control.) The collection includes <xref:System.Web.UI.AsyncPostBackTrigger> and <xref:System.Web.UI.PostBackTrigger> objects.       Declarative triggers that are defined in the Triggers collection are not tracked in view state.       When a control that is a naming container is used as a trigger, all its child controls that cause postback behave as triggers.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Triggers property gets a collection of all the triggers that have been defined for the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[0,132],"source":"The Triggers property gets a collection of all the triggers that have been defined for the <xref:System.Web.UI.UpdatePanel> control."},{"content":"(You can define triggers declaratively by using the <bpt id=\"p1\">**</bpt>UpdatePanelTrigger Collection Editor<ept id=\"p1\">**</ept> dialog box in the designer or by using the <ph id=\"ph1\">`&lt;Triggers&gt;`</ph> element of the &lt;xref:System.Web.UI.UpdatePanel&gt; control.) The collection includes &lt;xref:System.Web.UI.AsyncPostBackTrigger&gt; and &lt;xref:System.Web.UI.PostBackTrigger&gt; objects.","pos":[133,455],"source":" (You can define triggers declaratively by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by using the `<Triggers>` element of the <xref:System.Web.UI.UpdatePanel> control.) The collection includes <xref:System.Web.UI.AsyncPostBackTrigger> and <xref:System.Web.UI.PostBackTrigger> objects."},{"content":"Declarative triggers that are defined in the Triggers collection are not tracked in view state.","pos":[462,557]},{"content":"When a control that is a naming container is used as a trigger, all its child controls that cause postback behave as triggers.","pos":[564,690]}]},{"pos":[50495,50638],"content":"A collection of objects of type <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.AsyncPostBackTrigger\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.PostBackTrigger\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of objects of type <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> and <xref href=\"System.Web.UI.PostBackTrigger\"></xref>."},{"pos":[51030,51123],"content":"Causes an update of the content of an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Causes an update of the content of an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"pos":[51136,52266],"content":"If the page is enabled for partial-page rendering, when you invoke the Update method, the <xref:System.Web.UI.UpdatePanel> control's content is updated in the browser. Call the Update method if you have server code that must execute to determine whether an <xref:System.Web.UI.UpdatePanel> control should be updated. If you plan to use the Update method, set the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property to <xref:System.Web.UI.UpdatePanelUpdateMode>. If you want the decision to update the panel in server logic, make sure that the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `false` and that no explicit triggers are defined for the panel.       In a typical page development scenario, if you define triggers or if the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true` for the <xref:System.Web.UI.UpdatePanel> control, the Update method is automatically called during the page life cycle.       If the <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> property is not defined for the <xref:System.Web.UI.UpdatePanel> control, no updates of the panel will occur.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the page is enabled for partial-page rendering, when you invoke the Update method, the &lt;xref:System.Web.UI.UpdatePanel&gt; control's content is updated in the browser.","pos":[0,167],"source":"If the page is enabled for partial-page rendering, when you invoke the Update method, the <xref:System.Web.UI.UpdatePanel> control's content is updated in the browser."},{"content":"Call the Update method if you have server code that must execute to determine whether an &lt;xref:System.Web.UI.UpdatePanel&gt; control should be updated.","pos":[168,316],"source":" Call the Update method if you have server code that must execute to determine whether an <xref:System.Web.UI.UpdatePanel> control should be updated."},{"content":"If you plan to use the Update method, set the &lt;xref:System.Web.UI.UpdatePanel.UpdateMode%2A&gt; property to &lt;xref:System.Web.UI.UpdatePanelUpdateMode&gt;.","pos":[317,465],"source":" If you plan to use the Update method, set the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property to <xref:System.Web.UI.UpdatePanelUpdateMode>."},{"content":"If you want the decision to update the panel in server logic, make sure that the &lt;xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A&gt; property is <ph id=\"ph1\">`false`</ph> and that no explicit triggers are defined for the panel.","pos":[466,678],"source":" If you want the decision to update the panel in server logic, make sure that the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `false` and that no explicit triggers are defined for the panel."},{"content":"In a typical page development scenario, if you define triggers or if the &lt;xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A&gt; property is <ph id=\"ph1\">`true`</ph> for the &lt;xref:System.Web.UI.UpdatePanel&gt; control, the Update method is automatically called during the page life cycle.","pos":[685,951],"source":"       In a typical page development scenario, if you define triggers or if the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true` for the <xref:System.Web.UI.UpdatePanel> control, the Update method is automatically called during the page life cycle."},{"content":"If the &lt;xref:System.Web.UI.UpdatePanel.ContentTemplate%2A&gt; property is not defined for the &lt;xref:System.Web.UI.UpdatePanel&gt; control, no updates of the panel will occur.","pos":[958,1126],"source":"       If the <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> property is not defined for the <xref:System.Web.UI.UpdatePanel> control, no updates of the panel will occur."}]},{"pos":[53528,53648],"content":"Gets or sets a value that indicates when an <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control's content is updated.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates when an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control's content is updated."},{"pos":[53661,55883],"content":"When an <xref:System.Web.UI.UpdatePanel> control is not inside another <xref:System.Web.UI.UpdatePanel> control, the panel is updated according to the settings of the UpdateMode and <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> properties, together with the collection of triggers. When an <xref:System.Web.UI.UpdatePanel> control is inside another <xref:System.Web.UI.UpdatePanel> control, the child panel is automatically updated when the parent panel is updated.       The content of an <xref:System.Web.UI.UpdatePanel> control is updated in the following circumstances:      -   If the UpdateMode property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, the <xref:System.Web.UI.UpdatePanel> control's content is updated on every postback that originates from anywhere on the page. This includes asynchronous postbacks from controls that are inside other <xref:System.Web.UI.UpdatePanel> controls and postbacks from controls that are not inside <xref:System.Web.UI.UpdatePanel> controls.      -   If the <xref:System.Web.UI.UpdatePanel> control is nested inside another <xref:System.Web.UI.UpdatePanel> control and the parent update panel is updated.      -   If the UpdateMode property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, and one of the following conditions occurs:          -   You call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control explicitly.          -   The postback is caused by a control that is defined as a trigger by using the <xref:System.Web.UI.UpdatePanel.Triggers%2A> property of the <xref:System.Web.UI.UpdatePanel> control. In this scenario, the control explicitly triggers an update of the panel content. The control can be either inside or outside the <xref:System.Web.UI.UpdatePanel> control that defines the trigger.          -   The <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` and a child control of the <xref:System.Web.UI.UpdatePanel> control causes a postback. A child control of a nested <xref:System.Web.UI.UpdatePanel> control does not cause an update to the outer <xref:System.Web.UI.UpdatePanel> control unless it is explicitly defined as a trigger.","needQuote":false,"needEscape":true,"nodes":[{"content":"When an &lt;xref:System.Web.UI.UpdatePanel&gt; control is not inside another &lt;xref:System.Web.UI.UpdatePanel&gt; control, the panel is updated according to the settings of the UpdateMode and &lt;xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A&gt; properties, together with the collection of triggers.","pos":[0,290],"source":"When an <xref:System.Web.UI.UpdatePanel> control is not inside another <xref:System.Web.UI.UpdatePanel> control, the panel is updated according to the settings of the UpdateMode and <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> properties, together with the collection of triggers."},{"content":"When an &lt;xref:System.Web.UI.UpdatePanel&gt; control is inside another &lt;xref:System.Web.UI.UpdatePanel&gt; control, the child panel is automatically updated when the parent panel is updated.","pos":[291,474],"source":" When an <xref:System.Web.UI.UpdatePanel> control is inside another <xref:System.Web.UI.UpdatePanel> control, the child panel is automatically updated when the parent panel is updated."},{"content":"The content of an &lt;xref:System.Web.UI.UpdatePanel&gt; control is updated in the following circumstances:      -   If the UpdateMode property is set to &lt;xref:System.Web.UI.UpdatePanelUpdateMode&gt;, the &lt;xref:System.Web.UI.UpdatePanel&gt; control's content is updated on every postback that originates from anywhere on the page.","pos":[481,799],"source":"       The content of an <xref:System.Web.UI.UpdatePanel> control is updated in the following circumstances:      -   If the UpdateMode property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, the <xref:System.Web.UI.UpdatePanel> control's content is updated on every postback that originates from anywhere on the page."},{"content":"This includes asynchronous postbacks from controls that are inside other &lt;xref:System.Web.UI.UpdatePanel&gt; controls and postbacks from controls that are not inside &lt;xref:System.Web.UI.UpdatePanel&gt; controls.","pos":[800,1005],"source":" This includes asynchronous postbacks from controls that are inside other <xref:System.Web.UI.UpdatePanel> controls and postbacks from controls that are not inside <xref:System.Web.UI.UpdatePanel> controls."},{"content":"-   If the &lt;xref:System.Web.UI.UpdatePanel&gt; control is nested inside another &lt;xref:System.Web.UI.UpdatePanel&gt; control and the parent update panel is updated.","pos":[1011,1168],"source":"      -   If the <xref:System.Web.UI.UpdatePanel> control is nested inside another <xref:System.Web.UI.UpdatePanel> control and the parent update panel is updated."},{"content":"-   If the UpdateMode property is set to &lt;xref:System.Web.UI.UpdatePanelUpdateMode&gt;, and one of the following conditions occurs:          -   You call the &lt;xref:System.Web.UI.UpdatePanel.Update%2A&gt; method of the &lt;xref:System.Web.UI.UpdatePanel&gt; control explicitly.","pos":[1174,1438],"source":"      -   If the UpdateMode property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, and one of the following conditions occurs:          -   You call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control explicitly."},{"content":"-   The postback is caused by a control that is defined as a trigger by using the &lt;xref:System.Web.UI.UpdatePanel.Triggers%2A&gt; property of the &lt;xref:System.Web.UI.UpdatePanel&gt; control.","pos":[1448,1632],"source":"          -   The postback is caused by a control that is defined as a trigger by using the <xref:System.Web.UI.UpdatePanel.Triggers%2A> property of the <xref:System.Web.UI.UpdatePanel> control."},{"content":"In this scenario, the control explicitly triggers an update of the panel content.","pos":[1633,1714]},{"content":"The control can be either inside or outside the &lt;xref:System.Web.UI.UpdatePanel&gt; control that defines the trigger.","pos":[1715,1829],"source":" The control can be either inside or outside the <xref:System.Web.UI.UpdatePanel> control that defines the trigger."},{"content":"-   The &lt;xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A&gt; property is set to <ph id=\"ph1\">`true`</ph> and a child control of the &lt;xref:System.Web.UI.UpdatePanel&gt; control causes a postback.","pos":[1839,2014],"source":"          -   The <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` and a child control of the <xref:System.Web.UI.UpdatePanel> control causes a postback."},{"content":"A child control of a nested &lt;xref:System.Web.UI.UpdatePanel&gt; control does not cause an update to the outer &lt;xref:System.Web.UI.UpdatePanel&gt; control unless it is explicitly defined as a trigger.","pos":[2015,2208],"source":" A child control of a nested <xref:System.Web.UI.UpdatePanel> control does not cause an update to the outer <xref:System.Web.UI.UpdatePanel> control unless it is explicitly defined as a trigger."}]},{"pos":[57191,57339],"content":"One of the <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref> values. The default is <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanelUpdateMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,75],"source":"One of the <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanelUpdateMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[76,148],"source":" The default is <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref>."}]},{"pos":[57518,57619],"content":"The specified type is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.UpdatePanelUpdateMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The specified type is not one of the <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref> values."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.UpdatePanel\n  id: UpdatePanel\n  children:\n  - System.Web.UI.UpdatePanel.#ctor\n  - System.Web.UI.UpdatePanel.Attributes\n  - System.Web.UI.UpdatePanel.ChildrenAsTriggers\n  - System.Web.UI.UpdatePanel.ContentTemplate\n  - System.Web.UI.UpdatePanel.ContentTemplateContainer\n  - System.Web.UI.UpdatePanel.Controls\n  - System.Web.UI.UpdatePanel.CreateContentTemplateContainer\n  - System.Web.UI.UpdatePanel.CreateControlCollection\n  - System.Web.UI.UpdatePanel.Initialize\n  - System.Web.UI.UpdatePanel.IsInPartialRendering\n  - System.Web.UI.UpdatePanel.OnInit(System.EventArgs)\n  - System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)\n  - System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)\n  - System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)\n  - System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.UpdatePanel.RenderMode\n  - System.Web.UI.UpdatePanel.RequiresUpdate\n  - System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  - System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  - System.Web.UI.UpdatePanel.Triggers\n  - System.Web.UI.UpdatePanel.Update\n  - System.Web.UI.UpdatePanel.UpdateMode\n  langs:\n  - csharp\n  name: UpdatePanel\n  nameWithType: UpdatePanel\n  fullName: System.Web.UI.UpdatePanel\n  type: Class\n  summary: Enables sections of a page to be partially rendered without a postback.\n  remarks: \"In this topic:  \\n  \\n-   [Introduction](#introduction)  \\n  \\n-   [Refreshing UpdatePanel Content](#refreshing_updatepanel_content)  \\n  \\n-   [UpdatePanel Usage](#updatepanel_usage)  \\n  \\n-   [Applying Styles](#applying_styles)  \\n  \\n-   [Declarative Syntax](#declarative_syntax)  \\n  \\n<a name=\\\"introduction\\\"></a>   \\n## Introduction  \\n UpdatePanel controls are a central part of AJAX functionality in ASP.NET. They are used with the <xref:System.Web.UI.ScriptManager> control to enable partial-page rendering. Partial-page rendering reduces the need for synchronous postbacks and complete page updates when only part of the page has to be updated. Partial-page rendering improves the user experience because it reduces the screen flicker that occurs during a full-page postback and improves Web page interactivity.  \\n  \\n<a name=\\\"refreshing_updatepanel_content\\\"></a>   \\n## Refreshing UpdatePanel Content  \\n When partial-page rendering is enabled, a control can perform a postback that updates the whole page or an asynchronous postback that updates the content of one or more UpdatePanel controls. Whether a control causes an asynchronous postback and updates an UpdatePanel control depends on the following:  \\n  \\n-   If the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property of the UpdatePanel control is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, the UpdatePanel control's content is updated on every postback that originates from the page. This includes asynchronous postbacks from controls that are inside other UpdatePanel controls and postbacks from controls that are not inside UpdatePanel controls.  \\n  \\n-   If the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, the UpdatePanel control's content is updated in the following circumstances:  \\n  \\n    -   When you call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the UpdatePanel control explicitly.  \\n  \\n    -   When the UpdatePanel control is nested inside another UpdatePanel control, and the parent panel is updated.  \\n  \\n    -   When a postback is caused by a control that is defined as a trigger by using the `Triggers` property of the UpdatePanel control. In this scenario, the control explicitly triggers an update of the panel content. The control can be either inside or outside the UpdatePanel control that the trigger is associated with.  \\n  \\n    -   When the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` and a child control of the UpdatePanel control causes a postback. Child controls of nested UpdatePanel controls do not cause an update to the outer UpdatePanel control unless they are explicitly defined as triggers.  \\n  \\n The combination of setting the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property to `false` and the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property to <xref:System.Web.UI.UpdatePanelUpdateMode> is not allowed and will throw an exception.  \\n  \\n When the UpdatePanel control performs an asynchronous post, it adds a custom HTTP header. Some proxies remove this custom HTTP header. If this occurs, the server handles the request as a regular postback, which causes a client error. To resolve this issue, insert a custom form field when you perform asynchronous posts. Then check the header or the custom form field in server code.  \\n  \\n<a name=\\\"updatepanel_usage\\\"></a>   \\n## UpdatePanel Usage  \\n You can use multiple UpdatePanel controls to update different page regions independently. When the page that contains one or more UpdatePanel controls is first rendered, all the content of all UpdatePanel controls are rendered and sent to the browser. On subsequent asynchronous postbacks, the content of each UpdatePanel control might not be updated depending on the panel settings and on client or server logic for individual panels.  \\n  \\n You can also use UpdatePanel controls in the following scenarios:  \\n  \\n-   In user controls.  \\n  \\n-   On master and content pages.  \\n  \\n-   Nested inside other UpdatePanel controls.  \\n  \\n-   Inside templated controls such as the <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.Repeater> controls.  \\n  \\n UpdatePanel controls can be added declaratively or programmatically.  \\n  \\n You can add an UpdatePanel control programmatically, but you cannot add triggers programmatically. To create trigger-like behavior, you can register a control on the page as an asynchronous postback control. You do this by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control. You can then create an event handler that runs in response to the asynchronous postback, and in the handler, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the UpdatePanel control.  \\n  \\n<a name=\\\"applying_styles\\\"></a>   \\n## Applying Styles  \\n The UpdatePanel control accepts expando attributes. This lets you set a CSS class for the HTMLelements that the controls render. For example, you might create the markup shown in the following example:  \\n  \\n```  \\n<asp:UpdatePanel runat=\\\"server\\\" class=\\\"myStyle\\\">  \\n</asp:UpdatePanel>   \\n```  \\n  \\n The markup in the previous example renders HTML similar to the following when the page runs:  \\n  \\n```  \\n<div id=\\\"ctl00_MainContent_UpdatePanel1\\\" class=\\\"MyStyle\\\">  \\n</div>  \\n```  \\n  \\n<a name=\\\"declarative_syntax\\\"></a>   \\n## Declarative Syntax  \\n  \\n```  \\n<asp:UpdatePanel  \\n    ChildrenAsTriggers=\\\"True|False\\\"  \\n    EnableTheming=\\\"True|False\\\"  \\n    EnableViewState=\\\"True|False\\\"  \\n    ID=\\\"string\\\"  \\n    OnDataBinding=\\\"DataBinding event handler\\\"  \\n    OnDisposed=\\\"Disposed event handler\\\"  \\n    OnInit=\\\"Init event handler\\\"  \\n    OnLoad=\\\"Load event handler\\\"  \\n    OnPreRender=\\\"PreRender event handler\\\"  \\n    OnUnload=\\\"Unload event handler\\\"  \\n    RenderMode=\\\"Block|Inline\\\"  \\n    runat=\\\"server\\\"  \\n    SkinID=\\\"string\\\"  \\n    UpdateMode=\\\"Always|Conditional\\\"  \\n    Visible=\\\"True|False\\\"  \\n>  \\n    <ContentTemplate>  \\n        <!-- child controls -->  \\n    </ContentTemplate>  \\n    <Triggers>  \\n        <asp:AsyncPostBackTrigger   \\n            ControlID=\\\"string\\\"  \\n            EventName=\\\"string\\\"  \\n        />  \\n        <asp:PostBackTrigger   \\n            ControlID=\\\"string\\\"  \\n        />  \\n    </Triggers>  \\n</asp:UpdatePanel>  \\n```\"\n  example:\n  - \"The following examples show different uses of the UpdatePanel control.  \\n  \\n **Controls Inside an UpdatePanel Control**  \\n  \\n The following example shows how to put controls inside an UpdatePanel control to reduce screen flicker when you post to the server. In this example, a <xref:System.Web.UI.WebControls.Calendar> and a <xref:System.Web.UI.WebControls.DropDownList> control are inside an UpdatePanel control. By default, the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is <xref:System.Web.UI.UpdatePanelUpdateMode> and the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true`. Therefore, child controls of the panel cause an asynchronous postback.  \\n  \\n [!code-vb[System.Web.UI.UpdatePanel#1](~/add/codesnippet/visualbasic/t-system.web.ui.updatepa_0_1.aspx)]\\n [!code-cs[System.Web.UI.UpdatePanel#1](~/add/codesnippet/csharp/t-system.web.ui.updatepa_0_1.aspx)]  \\n  \\n **Master/Detail Scenario with UpdatePanel Controls**  \\n  \\n In the following example, an UpdatePanel control is used in a master/detail scenario that shows orders and order details from the Northwind database. One UpdatePanel control contains the <xref:System.Web.UI.WebControls.GridView> control that displays a list of orders. A second UpdatePanel control contains a <xref:System.Web.UI.WebControls.DetailsView> control that displays the details of one order. When you select an order from the first table, details for that order are displayed in the second table. The second table is updated asynchronously based on the selection in the first table. The sorting and paging operations in the orders summary table also cause partial updates.  \\n  \\n [!code-cs[System.Web.UI.UpdatePanel#2](~/add/codesnippet/csharp/t-system.web.ui.updatepa_0_2.aspx)]\\n [!code-vb[System.Web.UI.UpdatePanel#2](~/add/codesnippet/visualbasic/t-system.web.ui.updatepa_0_2.aspx)]  \\n  \\n If you put a <xref:System.Web.UI.WebControls.GridView> control inside an UpdatePanel control, setting the <xref:System.Web.UI.WebControls.GridView> control's <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> property to `true` is not supported. However, because the UpdatePanel control supports asynchronous postbacks, any postbacks that change the <xref:System.Web.UI.WebControls.GridView> control inside an UpdatePanel control cause the same behavior as sorting and paging callbacks.  \\n  \\n **Using an UpdatePanel Control in a Template**  \\n  \\n In the following example, an UpdatePanel control is used in the item template of a <xref:System.Web.UI.WebControls.GridView> control. UpdatePanel controls in each data row are generated automatically. Each row's UpdatePanel control contains a <xref:System.Web.UI.WebControls.Label> control to display the quantity of the item in that row and a <xref:System.Web.UI.WebControls.Button> control to decrease and increase the quantity.  \\n  \\n [!code-cs[System.Web.UI.UpdatePanel#3](~/add/codesnippet/csharp/t-system.web.ui.updatepa_0_3.aspx)]\\n [!code-vb[System.Web.UI.UpdatePanel#3](~/add/codesnippet/visualbasic/t-system.web.ui.updatepa_0_3.aspx)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultProperty(\"Triggers\")]\n\n      [System.ComponentModel.Designer(\"System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\")]\n\n      [System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), \"System.Web.Resources.UpdatePanel.bmp\")]\n\n      [System.Web.UI.ParseChildren(true)]\n\n      [System.Web.UI.PersistChildren(false)]\n\n      public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  implements:\n  - System.Web.UI.IAttributeAccessor\n  inheritedMembers:\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableTheming\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String)\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SaveViewState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.SkinID\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.TrackViewState\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.Control.Visible\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: UpdatePanel()\n  nameWithType: UpdatePanel.UpdatePanel()\n  fullName: System.Web.UI.UpdatePanel.UpdatePanel()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> class.\n  remarks: Use this constructor to initialize a new instance of the <xref:System.Web.UI.UpdatePanel> class. To dynamically add an <xref:System.Web.UI.UpdatePanel> control to a page, create a new <xref:System.Web.UI.UpdatePanel> instance and then add child controls to the control object that is exposed by the instance's <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.\n  example:\n  - \"The following example shows how to dynamically create an <xref:System.Web.UI.UpdatePanel> control and add it to a page. When you click the button inside the <xref:System.Web.UI.UpdatePanel> control, the message is refreshed with the date and time. Child controls are added by using the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.  \\n  \\n [!code-cs[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/csharp/m-system.web.ui.updatepa_1_1.aspx)]\\n [!code-vb[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_1_1.aspx)]\"\n  syntax:\n    content: public UpdatePanel ();\n    parameters: []\n  overload: System.Web.UI.UpdatePanel.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.Attributes\n  id: Attributes\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: UpdatePanel.Attributes\n  fullName: System.Web.UI.UpdatePanel.Attributes\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets the cascading style sheet (CSS) attributes collection of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  remarks: The Attributes property contains a collection of CSS style attributes that can be used in the enclosing `div` element of the <xref:System.Web.UI.UpdatePanel> control.\n  syntax:\n    content: public System.Web.UI.AttributeCollection Attributes { get; }\n    return:\n      type: System.Web.UI.AttributeCollection\n      description: The names of the CSS style rules in the attributes collection.\n  overload: System.Web.UI.UpdatePanel.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.ChildrenAsTriggers\n  id: ChildrenAsTriggers\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: ChildrenAsTriggers\n  nameWithType: UpdatePanel.ChildrenAsTriggers\n  fullName: System.Web.UI.UpdatePanel.ChildrenAsTriggers\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether postbacks from immediate child controls of an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control update the panel's content.\n  remarks: \"Set the ChildrenAsTriggers property to `true` if you want postbacks from immediate child controls of the <xref:System.Web.UI.UpdatePanel> control to cause an update of the panel's content. Child controls of nested <xref:System.Web.UI.UpdatePanel> controls will not cause an update of the parent <xref:System.Web.UI.UpdatePanel> control's content unless you call the <xref:System.Web.UI.UpdatePanel.Update%2A> method explicitly or you define the child controls as triggers.  \\n  \\n> [!NOTE]\\n>  When the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is set to <xref:System.Web.UI.UpdatePanelUpdateMode> and the ChildrenAsTriggers property is set to `false`, an <xref:System.InvalidOperationException> exception is thrown during the <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> method. This combination of properties is not allowed for the <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n A scenario where you might set ChildrenAsTriggers to `false` is when you have two <xref:System.Web.UI.UpdatePanel> controls and you want a postback from the first panel to update the content of the second panel but not update its own content. For example, the first panel might be a list of products to buy and the second panel might be a shopping cart.\"\n  syntax:\n    content: public bool ChildrenAsTriggers { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if postbacks from immediate child controls of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control update the panel's content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.UpdatePanel.ChildrenAsTriggers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.ContentTemplate\n  id: ContentTemplate\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: ContentTemplate\n  nameWithType: UpdatePanel.ContentTemplate\n  fullName: System.Web.UI.UpdatePanel.ContentTemplate\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the template that defines the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  remarks: \"The ContentTemplate property contains the content that appears inside an <xref:System.Web.UI.UpdatePanel> control when it is rendered. You can create the template's content declaratively or programmatically. The content template of an <xref:System.Web.UI.UpdatePanel> control is a single-instance template. Therefore, the properties of the controls it contains can be accessed directly on the page without using the <xref:System.Web.UI.Page.FindControl%2A> method. For more information, see the <xref:System.Web.UI.TemplateInstanceAttribute> class overview.  \\n  \\n To add items to the <xref:System.Web.UI.UpdatePanel> control declaratively, add an `<ContentTemplate>` element between the opening and closing tags of the <xref:System.Web.UI.UpdatePanel> control. Inside the `<ContentTemplate>` element tags, declare other controls and HTML elements.  \\n  \\n To add items to the <xref:System.Web.UI.UpdatePanel> control dynamically, use the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property, which enables you to add child controls without having to create a custom template that implements the <xref:System.Web.UI.ITemplate> interface.\"\n  syntax:\n    content: public System.Web.UI.ITemplate ContentTemplate { get; set; }\n    return:\n      type: System.Web.UI.ITemplate\n      description: An <xref href=\"System.Web.UI.ITemplate\"></xref> instance that defines the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.UI.UpdatePanel.ContentTemplate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The ContentTemplate property of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control is set after an instance of the template is created or after the content template container is created.\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.ContentTemplateContainer\n  id: ContentTemplateContainer\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: ContentTemplateContainer\n  nameWithType: UpdatePanel.ContentTemplateContainer\n  fullName: System.Web.UI.UpdatePanel.ContentTemplateContainer\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a control object to which you can programmatically add child controls.\n  remarks: The ContentTemplateContainer property enables you to programmatically add child controls to the <xref:System.Web.UI.UpdatePanel> control without having to define a custom template that inherits from the <xref:System.Web.UI.ITemplate> interface. If you are adding content to the <xref:System.Web.UI.UpdatePanel> control declaratively or through a designer, you should add content to the <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> property by using a `<ContentTemplate>` element.\n  example:\n  - \"The following example shows how to programmatically specify the ContentTemplateContainer property of an <xref:System.Web.UI.UpdatePanel> control. The <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control is set when `Button1` is clicked.  \\n  \\n [!code-cs[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/csharp/p-system.web.ui.updatepa_2_1.aspx)]\\n [!code-vb[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/visualbasic/p-system.web.ui.updatepa_2_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.Control ContentTemplateContainer { get; }\n    return:\n      type: System.Web.UI.Control\n      description: A <xref href=\"System.Web.UI.Control\"></xref> object that defines the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  overload: System.Web.UI.UpdatePanel.ContentTemplateContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.Controls\n  id: Controls\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: Controls\n  nameWithType: UpdatePanel.Controls\n  fullName: System.Web.UI.UpdatePanel.Controls\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.UI.ControlCollection\"></xref> object that contains the child controls for the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  remarks: The Controls property is overridden from the base <xref:System.Web.UI.Control> class and sealed to prevent additional derivation. To add controls to the <xref:System.Web.UI.UpdatePanel> control declaratively, create a `<ContentTemplate>` element inside the <xref:System.Web.UI.UpdatePanel> control markup. To add controls to the <xref:System.Web.UI.UpdatePanel> control programmatically, use the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.\n  syntax:\n    content: public override sealed System.Web.UI.ControlCollection Controls { get; }\n    return:\n      type: System.Web.UI.ControlCollection\n      description: The collection of child controls for the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  overload: System.Web.UI.UpdatePanel.Controls*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Web.UI.ControlCollection.Add*>, <xref:System.Web.UI.ControlCollection.AddAt*>, <xref:System.Web.UI.ControlCollection.Clear*>, <xref:System.Web.UI.ControlCollection.Remove*>, or <xref:System.Web.UI.ControlCollection.RemoveAt*> method of the <xref href=\"System.Web.UI.ControlCollection\"></xref> class has been called. To change the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, modify the child controls of the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer*> property.\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.CreateContentTemplateContainer\n  id: CreateContentTemplateContainer\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: CreateContentTemplateContainer()\n  nameWithType: UpdatePanel.CreateContentTemplateContainer()\n  fullName: System.Web.UI.UpdatePanel.CreateContentTemplateContainer()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Creates a <xref href=\"System.Web.UI.Control\"></xref> object that acts as a container for child controls that define the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control's content.\n  remarks: This method is intended for use by control developers who want to extend the <xref:System.Web.UI.UpdatePanel> control. For example, in derived classes, you can provide a different root control that acts as a container for your <xref:System.Web.UI.UpdatePanel> control's content. The default implementation returns a <xref:System.Web.UI.Control> object.\n  example:\n  - \"The following example shows how to override the CreateContentTemplateContainer method in a custom <xref:System.Web.UI.UpdatePanel> control to always render the `<fieldset>` and `<legend>` elements for the panel's content. The custom <xref:System.Web.UI.UpdatePanel> control defines a public property named `GroupingText` that is a string literal inside the `<legend>` element.  \\n  \\n A custom <xref:System.Web.UI.UpdatePanel> control named `CustomUpdatePanel` derives from <xref:System.Web.UI.UpdatePanel> and overrides the CreateContentTemplateContainer method. Put the `CustomUpdatePanel` class source code in the Web site's App_Code folder.  \\n  \\n [!code-cs[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/add/codesnippet/csharp/m-system.web.ui.updatepa_2_1.cs)]\\n [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_2_1.vb)]  \\n  \\n The custom <xref:System.Web.UI.UpdatePanel> control is used on the page just as the <xref:System.Web.UI.UpdatePanel> control is. The following example shows a page that contains the custom <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n [!code-cs[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/add/codesnippet/csharp/m-system.web.ui.updatepa_2_2.aspx)]\\n [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_2_2.aspx)]\"\n  syntax:\n    content: protected virtual System.Web.UI.Control CreateContentTemplateContainer ();\n    parameters: []\n    return:\n      type: System.Web.UI.Control\n      description: A <xref href=\"System.Web.UI.Control\"></xref> container for the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control's content.\n  overload: System.Web.UI.UpdatePanel.CreateContentTemplateContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.CreateControlCollection\n  id: CreateControlCollection\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: CreateControlCollection()\n  nameWithType: UpdatePanel.CreateControlCollection()\n  fullName: System.Web.UI.UpdatePanel.CreateControlCollection()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Returns the collection of all controls that are contained in the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  remarks: \"The CreateControlCollection method is used by control developers.  \\n  \\n Because this method is protected and sealed, it is visible to classes that inherit from the <xref:System.Web.UI.UpdatePanel> class, but it cannot be overridden. This method overrides the base implementation to return a specialized <xref:System.Web.UI.ControlCollection> object that throws an <xref:System.InvalidOperationException> when the <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, or <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method of the <xref:System.Web.UI.ControlCollection> class is invoked. To change the content of the <xref:System.Web.UI.UpdatePanel> control, modify the child controls of the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.\"\n  syntax:\n    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();\n    parameters: []\n    return:\n      type: System.Web.UI.ControlCollection\n      description: A <xref href=\"System.Web.UI.ControlCollection\"></xref> object that consists of all controls that define the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  overload: System.Web.UI.UpdatePanel.CreateControlCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.Initialize\n  id: Initialize\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: UpdatePanel.Initialize()\n  fullName: System.Web.UI.UpdatePanel.Initialize()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control trigger collection if partial-page rendering is enabled.\n  remarks: If partial-page rendering is not enabled, the triggers that are defined in the <xref:System.Web.UI.UpdatePanel.Triggers%2A> property are not initialized because they have no effect. The <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property of the <xref:System.Web.UI.ScriptManager> control gets or sets a value that indicates whether partial-page rendering is enabled. The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property of the <xref:System.Web.UI.ScriptManager> control gets or sets a value that indicates whether partial-page rendering is supported.\n  syntax:\n    content: protected virtual void Initialize ();\n    parameters: []\n  overload: System.Web.UI.UpdatePanel.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.IsInPartialRendering\n  id: IsInPartialRendering\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: IsInPartialRendering\n  nameWithType: UpdatePanel.IsInPartialRendering\n  fullName: System.Web.UI.UpdatePanel.IsInPartialRendering\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a value that indicates whether the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control is being updated as a result of an asynchronous postback.\n  remarks: The IsInPartialRendering property is intended for use by control developers who want to know when an <xref:System.Web.UI.UpdatePanel> control is being updated as a result of an asynchronous postback. In page development scenarios, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property to determine whether a page is processing as a result of an asynchronous postback.\n  syntax:\n    content: public bool IsInPartialRendering { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current <xref href=\"System.Web.UI.UpdatePanel\"></xref> control is being updated as a result of an asynchronous postback; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.UpdatePanel.IsInPartialRendering*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.OnInit(System.EventArgs)\n  id: OnInit(System.EventArgs)\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: OnInit(EventArgs)\n  nameWithType: UpdatePanel.OnInit(EventArgs)\n  fullName: System.Web.UI.UpdatePanel.OnInit(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Control.Init\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.UpdatePanel> control's <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> property is instantiated during the OnInit method.  \\n  \\n The OnInit method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.\"\n  syntax:\n    content: protected override void OnInit (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> object that contains the event data.\n  overload: System.Web.UI.UpdatePanel.OnInit*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Web.UI.UpdatePanel.ContentTemplate*> property is being defined when the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer*> property has already been created.\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)\n  id: OnLoad(System.EventArgs)\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: OnLoad(EventArgs)\n  nameWithType: UpdatePanel.OnLoad(EventArgs)\n  fullName: System.Web.UI.UpdatePanel.OnLoad(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Control.Load\"></xref> event for the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control and invokes the <xref:System.Web.UI.UpdatePanel.Initialize*> method when partial-page rendering is not enabled.\n  syntax:\n    content: protected override void OnLoad (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> object that contains the event data.\n  overload: System.Web.UI.UpdatePanel.OnLoad*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)\n  id: OnPreRender(System.EventArgs)\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: OnPreRender(EventArgs)\n  nameWithType: UpdatePanel.OnPreRender(EventArgs)\n  fullName: System.Web.UI.UpdatePanel.OnPreRender(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event.\n  remarks: The OnPreRender method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.\n  syntax:\n    content: protected override void OnPreRender (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> object that contains the event data.\n  overload: System.Web.UI.UpdatePanel.OnPreRender*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, and the <xref:System.Web.UI.UpdatePanel.UpdateMode*> property is set to <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)\n  id: OnUnload(System.EventArgs)\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: OnUnload(EventArgs)\n  nameWithType: UpdatePanel.OnUnload(EventArgs)\n  fullName: System.Web.UI.UpdatePanel.OnUnload(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the base <xref href=\"System.Web.UI.Control.Unload\"></xref> event.\n  remarks: The OnUnload method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control\n  syntax:\n    content: protected override void OnUnload (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> object that contains event data.\n  overload: System.Web.UI.UpdatePanel.OnUnload*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)\n  id: Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: Render(HtmlTextWriter)\n  nameWithType: UpdatePanel.Render(HtmlTextWriter)\n  fullName: System.Web.UI.UpdatePanel.Render(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the <xref:System.Web.UI.Control.Render*> event.\n  remarks: \"The Render method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n The Render method writes the rendered content of the <xref:System.Web.UI.UpdatePanel> control to the browser by using the supplied <xref:System.Web.UI.HtmlTextWriter> object. When you override the Render method in a derived class, make sure to call the Render method of the base class so that the child controls of the <xref:System.Web.UI.UpdatePanel> control are rendered.\"\n  syntax:\n    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object that represents the output stream for rendering HTML content.\n  overload: System.Web.UI.UpdatePanel.Render*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)\n  id: RenderChildren(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: RenderChildren(HtmlTextWriter)\n  nameWithType: UpdatePanel.RenderChildren(HtmlTextWriter)\n  fullName: System.Web.UI.UpdatePanel.RenderChildren(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the RenderChildren event.\n  remarks: \"The RenderChildren method is used by control developers to extend the functionality of the <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n The RenderChildren method writes the rendered content of the <xref:System.Web.UI.UpdatePanel> control to the browser by using the supplied <xref:System.Web.UI.HtmlTextWriter> object. When you override the RenderChildren method in a derived class, make sure to call the RenderChildren method of the base class so that the child controls of the <xref:System.Web.UI.UpdatePanel> control are rendered.\"\n  syntax:\n    content: protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object that represents the output stream for rendering HTML content.\n  overload: System.Web.UI.UpdatePanel.RenderChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.RenderMode\n  id: RenderMode\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: RenderMode\n  nameWithType: UpdatePanel.RenderMode\n  fullName: System.Web.UI.UpdatePanel.RenderMode\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control's content is enclosed in an HTML <xref uid=\"langword_csharp_&lt;div&gt;\" name=\"&lt;div&gt;\" href=\"\"></xref> or <xref uid=\"langword_csharp_&lt;span&gt;\" name=\"&lt;span&gt;\" href=\"\"></xref> element.\n  remarks: If the RenderMode property is set to <xref:System.Web.UI.UpdatePanelRenderMode>, the content of an <xref:System.Web.UI.UpdatePanel> control is rendered inside an HTML `<span>` element. If the RenderMode property is set to <xref:System.Web.UI.UpdatePanelRenderMode>, it is rendered inside an HTML `<div>` element.\n  example:\n  - \"The following example shows how to set the RenderMode property declaratively. The <xref:System.Web.UI.UpdatePanel> control named `UpdatePanel1` is rendered in an HTML `<span>` element. If the RenderMode property were set to <xref:System.Web.UI.UpdatePanelRenderMode>, the resulting paragraph would appear disjointed because of the way in which the HTML `<div>` element is rendered.  \\n  \\n [!code-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.updatepa_1_1.aspx)]\\n [!code-cs[System.Web.UI.UpdatePanel.RenderMode#1](~/add/codesnippet/csharp/p-system.web.ui.updatepa_1_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }\n    return:\n      type: System.Web.UI.UpdatePanelRenderMode\n      description: One of the <xref href=\"System.Web.UI.UpdatePanelRenderMode\"></xref> values. The default is <xref href=\"System.Web.UI.UpdatePanelRenderMode\"></xref> so that the content of the panel is enclosed in an HTML <xref uid=\"langword_csharp_&lt;div&gt;\" name=\"&lt;div&gt;\" href=\"\"></xref> element.\n  overload: System.Web.UI.UpdatePanel.RenderMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.RequiresUpdate\n  id: RequiresUpdate\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: RequiresUpdate\n  nameWithType: UpdatePanel.RequiresUpdate\n  fullName: System.Web.UI.UpdatePanel.RequiresUpdate\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a value that indicates whether the content of the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control will be updated.\n  remarks: \"By default, the RequiresUpdate property returns `true` if the <xref:System.Web.UI.UpdatePanel.Update%2A> method was explicitly called or if the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>.  \\n  \\n This property is intended for use by control developers who want to extend the <xref:System.Web.UI.UpdatePanel> control. For example, in derived classes, you might provide additional logic to determine whether an <xref:System.Web.UI.UpdatePanel> control should be updated.\"\n  syntax:\n    content: protected virtual bool RequiresUpdate { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control's content will be updated; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.UpdatePanel.RequiresUpdate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  id: System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  isEii: true\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)\n  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)\n  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Returns an attribute of a Web control by using a specified name.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.UpdatePanel> instance is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.\n  syntax:\n    content: string IAttributeAccessor.GetAttribute (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The name of the attribute.\n    return:\n      type: System.String\n      description: The value of the attribute.\n  overload: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  id: System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  isEii: true\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Sets the value of the specified control attribute.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.UpdatePanel> instance is cast to an <xref:System.Web.UI.IAttributeAccessor> interface.\n  syntax:\n    content: void IAttributeAccessor.SetAttribute (string key, string value);\n    parameters:\n    - id: key\n      type: System.String\n      description: The name of the attribute to set.\n    - id: value\n      type: System.String\n      description: The value of the attribute to set.\n  overload: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.Triggers\n  id: Triggers\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: Triggers\n  nameWithType: UpdatePanel.Triggers\n  fullName: System.Web.UI.UpdatePanel.Triggers\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets an <xref href=\"System.Web.UI.UpdatePanelTriggerCollection\"></xref> object that contains <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> and <xref href=\"System.Web.UI.PostBackTrigger\"></xref> objects that were registered declaratively for the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  remarks: \"The Triggers property gets a collection of all the triggers that have been defined for the <xref:System.Web.UI.UpdatePanel> control. (You can define triggers declaratively by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by using the `<Triggers>` element of the <xref:System.Web.UI.UpdatePanel> control.) The collection includes <xref:System.Web.UI.AsyncPostBackTrigger> and <xref:System.Web.UI.PostBackTrigger> objects.  \\n  \\n Declarative triggers that are defined in the Triggers collection are not tracked in view state.  \\n  \\n When a control that is a naming container is used as a trigger, all its child controls that cause postback behave as triggers.\"\n  syntax:\n    content: public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }\n    return:\n      type: System.Web.UI.UpdatePanelTriggerCollection\n      description: A collection of objects of type <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> and <xref href=\"System.Web.UI.PostBackTrigger\"></xref>.\n  overload: System.Web.UI.UpdatePanel.Triggers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.Update\n  id: Update\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: Update()\n  nameWithType: UpdatePanel.Update()\n  fullName: System.Web.UI.UpdatePanel.Update()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Causes an update of the content of an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  remarks: \"If the page is enabled for partial-page rendering, when you invoke the Update method, the <xref:System.Web.UI.UpdatePanel> control's content is updated in the browser. Call the Update method if you have server code that must execute to determine whether an <xref:System.Web.UI.UpdatePanel> control should be updated. If you plan to use the Update method, set the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property to <xref:System.Web.UI.UpdatePanelUpdateMode>. If you want the decision to update the panel in server logic, make sure that the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `false` and that no explicit triggers are defined for the panel.  \\n  \\n In a typical page development scenario, if you define triggers or if the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true` for the <xref:System.Web.UI.UpdatePanel> control, the Update method is automatically called during the page life cycle.  \\n  \\n If the <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> property is not defined for the <xref:System.Web.UI.UpdatePanel> control, no updates of the panel will occur.\"\n  example:\n  - \"The following example uses the Update method to update the content of an <xref:System.Web.UI.UpdatePanel> control when more than five seconds have elapsed since the last update.  \\n  \\n [!code-cs[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/csharp/m-system.web.ui.updatepa_0_1.aspx)]\\n [!code-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_0_1.aspx)]\"\n  syntax:\n    content: public void Update ();\n    parameters: []\n  overload: System.Web.UI.UpdatePanel.Update*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref:System.Web.UI.UpdatePanel.UpdateMode*> property is set to <xref href=\\\"System.Web.UI.UpdatePanelUpdateMode\\\"></xref>.  \\n  \\n \\\\- or –  \\n  \\n The Update method is called during or after the page's <xref:System.Web.UI.Page.Render*> event.\"\n  platform:\n  - net462\n- uid: System.Web.UI.UpdatePanel.UpdateMode\n  id: UpdateMode\n  parent: System.Web.UI.UpdatePanel\n  langs:\n  - csharp\n  name: UpdateMode\n  nameWithType: UpdatePanel.UpdateMode\n  fullName: System.Web.UI.UpdatePanel.UpdateMode\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates when an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control's content is updated.\n  remarks: \"When an <xref:System.Web.UI.UpdatePanel> control is not inside another <xref:System.Web.UI.UpdatePanel> control, the panel is updated according to the settings of the UpdateMode and <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> properties, together with the collection of triggers. When an <xref:System.Web.UI.UpdatePanel> control is inside another <xref:System.Web.UI.UpdatePanel> control, the child panel is automatically updated when the parent panel is updated.  \\n  \\n The content of an <xref:System.Web.UI.UpdatePanel> control is updated in the following circumstances:  \\n  \\n-   If the UpdateMode property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, the <xref:System.Web.UI.UpdatePanel> control's content is updated on every postback that originates from anywhere on the page. This includes asynchronous postbacks from controls that are inside other <xref:System.Web.UI.UpdatePanel> controls and postbacks from controls that are not inside <xref:System.Web.UI.UpdatePanel> controls.  \\n  \\n-   If the <xref:System.Web.UI.UpdatePanel> control is nested inside another <xref:System.Web.UI.UpdatePanel> control and the parent update panel is updated.  \\n  \\n-   If the UpdateMode property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>, and one of the following conditions occurs:  \\n  \\n    -   You call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control explicitly.  \\n  \\n    -   The postback is caused by a control that is defined as a trigger by using the <xref:System.Web.UI.UpdatePanel.Triggers%2A> property of the <xref:System.Web.UI.UpdatePanel> control. In this scenario, the control explicitly triggers an update of the panel content. The control can be either inside or outside the <xref:System.Web.UI.UpdatePanel> control that defines the trigger.  \\n  \\n    -   The <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` and a child control of the <xref:System.Web.UI.UpdatePanel> control causes a postback. A child control of a nested <xref:System.Web.UI.UpdatePanel> control does not cause an update to the outer <xref:System.Web.UI.UpdatePanel> control unless it is explicitly defined as a trigger.\"\n  example:\n  - \"The following example shows how to use the UpdateMode property. The example declares two <xref:System.Web.UI.UpdatePanel> controls. In the first panel, the UpdateMode property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>. In the second panel, UpdateMode is set to <xref:System.Web.UI.UpdatePanelUpdateMode>. A button outside both panels is registered as an asynchronous postback control by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control. In the button's `Click` event handler, the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the first panel is called if more than five seconds have elapsed since its last update. In this scenario, the panel’s content is updated only if the last panel refresh was more than five seconds ago. The content of the second panel is always updated.  \\n  \\n [!code-cs[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/csharp/p-system.web.ui.updatepa_0_1.aspx)]\\n [!code-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.updatepa_0_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }\n    return:\n      type: System.Web.UI.UpdatePanelUpdateMode\n      description: One of the <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref> values. The default is <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref>.\n  overload: System.Web.UI.UpdatePanel.UpdateMode*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified type is not one of the <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref> values.\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.Control\n  isExternal: false\n  name: System.Web.UI.Control\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Web.UI.UpdatePanel.#ctor\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: UpdatePanel()\n  nameWithType: UpdatePanel.UpdatePanel()\n  fullName: System.Web.UI.UpdatePanel.UpdatePanel()\n- uid: System.Web.UI.UpdatePanel.Attributes\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Attributes\n  nameWithType: UpdatePanel.Attributes\n  fullName: System.Web.UI.UpdatePanel.Attributes\n- uid: System.Web.UI.AttributeCollection\n  parent: System.Web.UI\n  isExternal: false\n  name: AttributeCollection\n  nameWithType: AttributeCollection\n  fullName: System.Web.UI.AttributeCollection\n- uid: System.Web.UI.UpdatePanel.ChildrenAsTriggers\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: ChildrenAsTriggers\n  nameWithType: UpdatePanel.ChildrenAsTriggers\n  fullName: System.Web.UI.UpdatePanel.ChildrenAsTriggers\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.UpdatePanel.ContentTemplate\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: ContentTemplate\n  nameWithType: UpdatePanel.ContentTemplate\n  fullName: System.Web.UI.UpdatePanel.ContentTemplate\n- uid: System.Web.UI.ITemplate\n  parent: System.Web.UI\n  isExternal: false\n  name: ITemplate\n  nameWithType: ITemplate\n  fullName: System.Web.UI.ITemplate\n- uid: System.Web.UI.UpdatePanel.ContentTemplateContainer\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: ContentTemplateContainer\n  nameWithType: UpdatePanel.ContentTemplateContainer\n  fullName: System.Web.UI.UpdatePanel.ContentTemplateContainer\n- uid: System.Web.UI.UpdatePanel.Controls\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Controls\n  nameWithType: UpdatePanel.Controls\n  fullName: System.Web.UI.UpdatePanel.Controls\n- uid: System.Web.UI.ControlCollection\n  parent: System.Web.UI\n  isExternal: false\n  name: ControlCollection\n  nameWithType: ControlCollection\n  fullName: System.Web.UI.ControlCollection\n- uid: System.Web.UI.UpdatePanel.CreateContentTemplateContainer\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: CreateContentTemplateContainer()\n  nameWithType: UpdatePanel.CreateContentTemplateContainer()\n  fullName: System.Web.UI.UpdatePanel.CreateContentTemplateContainer()\n- uid: System.Web.UI.UpdatePanel.CreateControlCollection\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: CreateControlCollection()\n  nameWithType: UpdatePanel.CreateControlCollection()\n  fullName: System.Web.UI.UpdatePanel.CreateControlCollection()\n- uid: System.Web.UI.UpdatePanel.Initialize\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Initialize()\n  nameWithType: UpdatePanel.Initialize()\n  fullName: System.Web.UI.UpdatePanel.Initialize()\n- uid: System.Web.UI.UpdatePanel.IsInPartialRendering\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: IsInPartialRendering\n  nameWithType: UpdatePanel.IsInPartialRendering\n  fullName: System.Web.UI.UpdatePanel.IsInPartialRendering\n- uid: System.Web.UI.UpdatePanel.OnInit(System.EventArgs)\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: OnInit(EventArgs)\n  nameWithType: UpdatePanel.OnInit(EventArgs)\n  fullName: System.Web.UI.UpdatePanel.OnInit(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: OnLoad(EventArgs)\n  nameWithType: UpdatePanel.OnLoad(EventArgs)\n  fullName: System.Web.UI.UpdatePanel.OnLoad(EventArgs)\n- uid: System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: OnPreRender(EventArgs)\n  nameWithType: UpdatePanel.OnPreRender(EventArgs)\n  fullName: System.Web.UI.UpdatePanel.OnPreRender(EventArgs)\n- uid: System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: OnUnload(EventArgs)\n  nameWithType: UpdatePanel.OnUnload(EventArgs)\n  fullName: System.Web.UI.UpdatePanel.OnUnload(EventArgs)\n- uid: System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Render(HtmlTextWriter)\n  nameWithType: UpdatePanel.Render(HtmlTextWriter)\n  fullName: System.Web.UI.UpdatePanel.Render(HtmlTextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: RenderChildren(HtmlTextWriter)\n  nameWithType: UpdatePanel.RenderChildren(HtmlTextWriter)\n  fullName: System.Web.UI.UpdatePanel.RenderChildren(HtmlTextWriter)\n- uid: System.Web.UI.UpdatePanel.RenderMode\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: RenderMode\n  nameWithType: UpdatePanel.RenderMode\n  fullName: System.Web.UI.UpdatePanel.RenderMode\n- uid: System.Web.UI.UpdatePanelRenderMode\n  parent: System.Web.UI\n  isExternal: false\n  name: UpdatePanelRenderMode\n  nameWithType: UpdatePanelRenderMode\n  fullName: System.Web.UI.UpdatePanelRenderMode\n- uid: System.Web.UI.UpdatePanel.RequiresUpdate\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: RequiresUpdate\n  nameWithType: UpdatePanel.RequiresUpdate\n  fullName: System.Web.UI.UpdatePanel.RequiresUpdate\n- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)\n  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)\n  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)\n- uid: System.Web.UI.UpdatePanel.Triggers\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Triggers\n  nameWithType: UpdatePanel.Triggers\n  fullName: System.Web.UI.UpdatePanel.Triggers\n- uid: System.Web.UI.UpdatePanelTriggerCollection\n  parent: System.Web.UI\n  isExternal: false\n  name: UpdatePanelTriggerCollection\n  nameWithType: UpdatePanelTriggerCollection\n  fullName: System.Web.UI.UpdatePanelTriggerCollection\n- uid: System.Web.UI.UpdatePanel.Update\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Update()\n  nameWithType: UpdatePanel.Update()\n  fullName: System.Web.UI.UpdatePanel.Update()\n- uid: System.Web.UI.UpdatePanel.UpdateMode\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: UpdateMode\n  nameWithType: UpdatePanel.UpdateMode\n  fullName: System.Web.UI.UpdatePanel.UpdateMode\n- uid: System.Web.UI.UpdatePanelUpdateMode\n  parent: System.Web.UI\n  isExternal: false\n  name: UpdatePanelUpdateMode\n  nameWithType: UpdatePanelUpdateMode\n  fullName: System.Web.UI.UpdatePanelUpdateMode\n- uid: System.Web.UI.UpdatePanel.#ctor*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: UpdatePanel\n  nameWithType: UpdatePanel.UpdatePanel\n- uid: System.Web.UI.UpdatePanel.Attributes*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Attributes\n  nameWithType: UpdatePanel.Attributes\n- uid: System.Web.UI.UpdatePanel.ChildrenAsTriggers*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: ChildrenAsTriggers\n  nameWithType: UpdatePanel.ChildrenAsTriggers\n- uid: System.Web.UI.UpdatePanel.ContentTemplate*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: ContentTemplate\n  nameWithType: UpdatePanel.ContentTemplate\n- uid: System.Web.UI.UpdatePanel.ContentTemplateContainer*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: ContentTemplateContainer\n  nameWithType: UpdatePanel.ContentTemplateContainer\n- uid: System.Web.UI.UpdatePanel.Controls*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Controls\n  nameWithType: UpdatePanel.Controls\n- uid: System.Web.UI.UpdatePanel.CreateContentTemplateContainer*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: CreateContentTemplateContainer\n  nameWithType: UpdatePanel.CreateContentTemplateContainer\n- uid: System.Web.UI.UpdatePanel.CreateControlCollection*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: CreateControlCollection\n  nameWithType: UpdatePanel.CreateControlCollection\n- uid: System.Web.UI.UpdatePanel.Initialize*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Initialize\n  nameWithType: UpdatePanel.Initialize\n- uid: System.Web.UI.UpdatePanel.IsInPartialRendering*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: IsInPartialRendering\n  nameWithType: UpdatePanel.IsInPartialRendering\n- uid: System.Web.UI.UpdatePanel.OnInit*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: OnInit\n  nameWithType: UpdatePanel.OnInit\n- uid: System.Web.UI.UpdatePanel.OnLoad*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: OnLoad\n  nameWithType: UpdatePanel.OnLoad\n- uid: System.Web.UI.UpdatePanel.OnPreRender*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: OnPreRender\n  nameWithType: UpdatePanel.OnPreRender\n- uid: System.Web.UI.UpdatePanel.OnUnload*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: OnUnload\n  nameWithType: UpdatePanel.OnUnload\n- uid: System.Web.UI.UpdatePanel.Render*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Render\n  nameWithType: UpdatePanel.Render\n- uid: System.Web.UI.UpdatePanel.RenderChildren*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: RenderChildren\n  nameWithType: UpdatePanel.RenderChildren\n- uid: System.Web.UI.UpdatePanel.RenderMode*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: RenderMode\n  nameWithType: UpdatePanel.RenderMode\n- uid: System.Web.UI.UpdatePanel.RequiresUpdate*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: RequiresUpdate\n  nameWithType: UpdatePanel.RequiresUpdate\n- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: System.Web.UI.IAttributeAccessor.GetAttribute\n  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute\n- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: System.Web.UI.IAttributeAccessor.SetAttribute\n  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute\n- uid: System.Web.UI.UpdatePanel.Triggers*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Triggers\n  nameWithType: UpdatePanel.Triggers\n- uid: System.Web.UI.UpdatePanel.Update*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: Update\n  nameWithType: UpdatePanel.Update\n- uid: System.Web.UI.UpdatePanel.UpdateMode*\n  parent: System.Web.UI.UpdatePanel\n  isExternal: false\n  name: UpdateMode\n  nameWithType: UpdatePanel.UpdateMode\n"}