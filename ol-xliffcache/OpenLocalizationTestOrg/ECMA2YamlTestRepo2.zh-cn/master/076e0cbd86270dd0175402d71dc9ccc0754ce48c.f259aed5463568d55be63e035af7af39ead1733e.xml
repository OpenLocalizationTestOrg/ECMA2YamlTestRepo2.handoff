{"nodes":[{"pos":[567,687],"content":"Provides a Cryptography Next Generation (CNG) implementation of the Secure Hash Algorithm (SHA) for 512-bit hash values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a Cryptography Next Generation (CNG) implementation of the Secure Hash Algorithm (SHA) for 512-bit hash values.","pos":[0,120]}]},{"pos":[699,826],"content":"This algorithm is for hashing only and does not provide any encryption or decryption. It uses the BCrypt (BestCrypt) layer CNG.","needQuote":true,"needEscape":true,"nodes":[{"content":"This algorithm is for hashing only and does not provide any encryption or decryption. It uses the BCrypt (BestCrypt) layer CNG.","pos":[0,127],"nodes":[{"content":"This algorithm is for hashing only and does not provide any encryption or decryption.","pos":[0,85]},{"content":"It uses the BCrypt (BestCrypt) layer CNG.","pos":[86,127]}]}]},{"pos":[2708,2808],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SHA512Cng\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.SHA512Cng\"></xref> class."},{"pos":[3517,3529],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4284,4296],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4359,4371],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4433,4445],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5035,5047],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5515,5582],"content":"Initializes, or re-initializes, the instance of the hash algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes, or re-initializes, the instance of the hash algorithm.","pos":[0,67]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.SHA512Cng\n  id: SHA512Cng\n  children:\n  - System.Security.Cryptography.SHA512Cng.#ctor\n  - System.Security.Cryptography.SHA512Cng.Dispose(System.Boolean)\n  - System.Security.Cryptography.SHA512Cng.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA512Cng.HashFinal\n  - System.Security.Cryptography.SHA512Cng.Initialize\n  langs:\n  - csharp\n  name: SHA512Cng\n  nameWithType: SHA512Cng\n  fullName: System.Security.Cryptography.SHA512Cng\n  type: Class\n  summary: Provides a Cryptography Next Generation (CNG) implementation of the Secure Hash Algorithm (SHA) for 512-bit hash values.\n  remarks: This algorithm is for hashing only and does not provide any encryption or decryption. It uses the BCrypt (BestCrypt) layer CNG.\n  syntax:\n    content: 'public sealed class SHA512Cng : System.Security.Cryptography.SHA512'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  - System.Security.Cryptography.SHA512\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA512.Create\n  - System.Security.Cryptography.SHA512.Create(System.String)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA512Cng.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.SHA512Cng\n  langs:\n  - csharp\n  name: SHA512Cng()\n  nameWithType: SHA512Cng.SHA512Cng()\n  fullName: System.Security.Cryptography.SHA512Cng.SHA512Cng()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.SHA512Cng\"></xref> class.\n  syntax:\n    content: public SHA512Cng ();\n    parameters: []\n  overload: System.Security.Cryptography.SHA512Cng.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA512Cng.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SHA512Cng\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SHA512Cng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.SHA512Cng.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Security.Cryptography.SHA512Cng.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA512Cng.HashCore(System.Byte[],System.Int32,System.Int32)\n  id: HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA512Cng\n  langs:\n  - csharp\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: SHA512Cng.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.SHA512Cng.HashCore(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void HashCore (byte[] array, int ibStart, int cbSize);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: To be added.\n    - id: ibStart\n      type: System.Int32\n      description: To be added.\n    - id: cbSize\n      type: System.Int32\n      description: To be added.\n  overload: System.Security.Cryptography.SHA512Cng.HashCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA512Cng.HashFinal\n  id: HashFinal\n  parent: System.Security.Cryptography.SHA512Cng\n  langs:\n  - csharp\n  name: HashFinal()\n  nameWithType: SHA512Cng.HashFinal()\n  fullName: System.Security.Cryptography.SHA512Cng.HashFinal()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashFinal ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: To be added.\n  overload: System.Security.Cryptography.SHA512Cng.HashFinal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA512Cng.Initialize\n  id: Initialize\n  parent: System.Security.Cryptography.SHA512Cng\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: SHA512Cng.Initialize()\n  fullName: System.Security.Cryptography.SHA512Cng.Initialize()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes, or re-initializes, the instance of the hash algorithm.\n  syntax:\n    content: public override void Initialize ();\n    parameters: []\n  overload: System.Security.Cryptography.SHA512Cng.Initialize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.SHA512\n  isExternal: false\n  name: System.Security.Cryptography.SHA512\n- uid: System.Security.Cryptography.SHA512Cng.#ctor\n  parent: System.Security.Cryptography.SHA512Cng\n  isExternal: false\n  name: SHA512Cng()\n  nameWithType: SHA512Cng.SHA512Cng()\n  fullName: System.Security.Cryptography.SHA512Cng.SHA512Cng()\n- uid: System.Security.Cryptography.SHA512Cng.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SHA512Cng\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SHA512Cng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.SHA512Cng.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.SHA512Cng.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA512Cng\n  isExternal: false\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: SHA512Cng.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.SHA512Cng.HashCore(Byte[],Int32,Int32)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.SHA512Cng.HashFinal\n  parent: System.Security.Cryptography.SHA512Cng\n  isExternal: false\n  name: HashFinal()\n  nameWithType: SHA512Cng.HashFinal()\n  fullName: System.Security.Cryptography.SHA512Cng.HashFinal()\n- uid: System.Security.Cryptography.SHA512Cng.Initialize\n  parent: System.Security.Cryptography.SHA512Cng\n  isExternal: false\n  name: Initialize()\n  nameWithType: SHA512Cng.Initialize()\n  fullName: System.Security.Cryptography.SHA512Cng.Initialize()\n- uid: System.Security.Cryptography.SHA512Cng.#ctor*\n  parent: System.Security.Cryptography.SHA512Cng\n  isExternal: false\n  name: SHA512Cng\n  nameWithType: SHA512Cng.SHA512Cng\n- uid: System.Security.Cryptography.SHA512Cng.Dispose*\n  parent: System.Security.Cryptography.SHA512Cng\n  isExternal: false\n  name: Dispose\n  nameWithType: SHA512Cng.Dispose\n- uid: System.Security.Cryptography.SHA512Cng.HashCore*\n  parent: System.Security.Cryptography.SHA512Cng\n  isExternal: false\n  name: HashCore\n  nameWithType: SHA512Cng.HashCore\n- uid: System.Security.Cryptography.SHA512Cng.HashFinal*\n  parent: System.Security.Cryptography.SHA512Cng\n  isExternal: false\n  name: HashFinal\n  nameWithType: SHA512Cng.HashFinal\n- uid: System.Security.Cryptography.SHA512Cng.Initialize*\n  parent: System.Security.Cryptography.SHA512Cng\n  isExternal: false\n  name: Initialize\n  nameWithType: SHA512Cng.Initialize\n"}