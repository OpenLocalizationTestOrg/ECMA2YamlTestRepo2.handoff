{"nodes":[{"pos":[1219,1362],"content":"Defines configuration settings that are used to support the role management infrastructure of Web applications. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines configuration settings that are used to support the role management infrastructure of Web applications. This class cannot be inherited.","pos":[0,143],"nodes":[{"content":"Defines configuration settings that are used to support the role management infrastructure of Web applications.","pos":[0,111]},{"content":"This class cannot be inherited.","pos":[112,143]}]}]},{"pos":[1374,1523],"content":"The RoleManagerSection class provides a way to programmatically access and modify the content of the <ph id=\"ph1\">`roleManager`</ph> section of the configuration file.","needQuote":true,"needEscape":true,"source":"The RoleManagerSection class provides a way to programmatically access and modify the content of the `roleManager` section of the configuration file."},{"pos":[7621,7752],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.RoleManagerSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using default settings.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.RoleManagerSection\"></xref> class by using default settings."},{"pos":[7765,9271],"content":"The RoleManagerSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.RoleManagerSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.       The following table shows the default settings that are used for the RoleManagerSection constructor.      |Property|Default value|   |--------------|-------------------|   |<xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>|`false`|   |<xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>|`false`|   |<xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|\".ASPXROLES\"|   |<xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|\"/\"|   |<xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>|`All`|   |<xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>|`false`|   |<xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>|`true`|   |<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|30, in minutes|   |<xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>|`false`|   |<xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|\"AspNetSqlRoleProvider\"|   |<xref:System.Web.Configuration.RoleManagerSection.Domain%2A>|An empty string (\"\")|   |<xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|","needQuote":false,"needEscape":true,"nodes":[{"content":"The RoleManagerSection constructor is not intended to be used directly from your code.","pos":[0,86]},{"content":"It is called by the ASP.NET configuration system.","pos":[87,136]},{"content":"You obtain an instance of the &lt;xref:System.Web.Configuration.RoleManagerSection&gt; class by using the &lt;xref:System.Configuration.Configuration.GetSection%2A&gt; method.","pos":[137,300],"source":" You obtain an instance of the <xref:System.Web.Configuration.RoleManagerSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method."},{"content":"The following table shows the default settings that are used for the RoleManagerSection constructor.","pos":[307,407]},{"content":"|Property|Default value|   |--------------|-------------------|   |&lt;xref:System.Web.Configuration.RoleManagerSection.Enabled%2A&gt;|<ph id=\"ph1\">`false`</ph>|   |&lt;xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A&gt;|<ph id=\"ph2\">`false`</ph>|   |&lt;xref:System.Web.Configuration.RoleManagerSection.CookieName%2A&gt;|\".ASPXROLES\"|   |&lt;xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A&gt;|\"/\"|   |&lt;xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A&gt;|<ph id=\"ph3\">`All`</ph>|   |&lt;xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A&gt;|<ph id=\"ph4\">`false`</ph>|   |&lt;xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A&gt;|<ph id=\"ph5\">`true`</ph>|   |&lt;xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A&gt;|30, in minutes|   |&lt;xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A&gt;|<ph id=\"ph6\">`false`</ph>|   |&lt;xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A&gt;|\"AspNetSqlRoleProvider\"|   |&lt;xref:System.Web.Configuration.RoleManagerSection.Domain%2A&gt;|An empty string (\"\")|   |&lt;xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A&gt;|25|","pos":[413,1481],"source":"      |Property|Default value|   |--------------|-------------------|   |<xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>|`false`|   |<xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>|`false`|   |<xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|\".ASPXROLES\"|   |<xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|\"/\"|   |<xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>|`All`|   |<xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>|`false`|   |<xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>|`true`|   |<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|30, in minutes|   |<xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>|`false`|   |<xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|\"AspNetSqlRoleProvider\"|   |<xref:System.Web.Configuration.RoleManagerSection.Domain%2A>|An empty string (\"\")|   |<xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|"}]},{"pos":[9868,9956],"content":"Gets or sets a value indicating whether the current user's roles are cached in a cookie.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the current user's roles are cached in a cookie.","pos":[0,88]}]},{"pos":[9969,10986],"content":"The CacheRolesInCookie property returns a Boolean value indicating whether cookie storage for role names is enabled.       When the CacheRolesInCookie property is set to `true` in the configuration file, role information for each user is stored in a cookie on the client. When role management checks to determine whether a user is in a particular role, the roles cookie is checked before calling the role provider to check the list of roles at the data source. The cookie is dynamically updated on the client to cache the most recently validated role names.       You can improve the reliability of the role names that are cached in a cookie by specifying a <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property when you configure the `roleManager` section of the configuration file. The default <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property is `All`, which encrypts role names in the cookie and validates that the cookie contents have not been altered.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CacheRolesInCookie property returns a Boolean value indicating whether cookie storage for role names is enabled.","pos":[0,116]},{"content":"When the CacheRolesInCookie property is set to <ph id=\"ph1\">`true`</ph> in the configuration file, role information for each user is stored in a cookie on the client.","pos":[123,271],"source":"       When the CacheRolesInCookie property is set to `true` in the configuration file, role information for each user is stored in a cookie on the client."},{"content":"When role management checks to determine whether a user is in a particular role, the roles cookie is checked before calling the role provider to check the list of roles at the data source.","pos":[272,460]},{"content":"The cookie is dynamically updated on the client to cache the most recently validated role names.","pos":[461,557]},{"content":"You can improve the reliability of the role names that are cached in a cookie by specifying a &lt;xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A&gt; property when you configure the <ph id=\"ph1\">`roleManager`</ph> section of the configuration file.","pos":[564,809],"source":"       You can improve the reliability of the role names that are cached in a cookie by specifying a <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property when you configure the `roleManager` section of the configuration file."},{"content":"The default &lt;xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A&gt; property is <ph id=\"ph1\">`All`</ph>, which encrypts role names in the cookie and validates that the cookie contents have not been altered.","pos":[810,1013],"source":" The default <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property is `All`, which encrypts role names in the cookie and validates that the cookie contents have not been altered."}]},{"pos":[11587,11853],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current user's roles are cached in a cookie; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current user's roles are cached in a cookie; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,187],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current user's roles are cached in a cookie; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[188,266],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[12350,12419],"content":"Gets or sets the name of the cookie that is used to cache role names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the cookie that is used to cache role names.","pos":[0,69]}]},{"pos":[12431,12830],"content":"The CookieName property returns the name of the cookie that is used to cache role names. You can specify the name of the cookie where roles are cached for your application by setting the `cookieName` attribute in the Web.config file for your ASP.NET application. This is useful when you want to uniquely identify a cookie for your application or when a cookie is shared across multiple applications.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CookieName property returns the name of the cookie that is used to cache role names.","pos":[0,88]},{"content":"You can specify the name of the cookie where roles are cached for your application by setting the <ph id=\"ph1\">`cookieName`</ph> attribute in the Web.config file for your ASP.NET application.","pos":[89,262],"source":" You can specify the name of the cookie where roles are cached for your application by setting the `cookieName` attribute in the Web.config file for your ASP.NET application."},{"content":"This is useful when you want to uniquely identify a cookie for your application or when a cookie is shared across multiple applications.","pos":[263,399]}]},{"pos":[13415,13492],"content":"The name of the cookie used to cache role names. The default is \".ASPXROLES\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the cookie used to cache role names. The default is \".ASPXROLES\".","pos":[0,77],"nodes":[{"content":"The name of the cookie used to cache role names.","pos":[0,48]},{"content":"The default is \".ASPXROLES\".","pos":[49,77]}]}]},{"pos":[13981,14058],"content":"Gets or sets the virtual path of the cookie that is used to cache role names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the virtual path of the cookie that is used to cache role names.","pos":[0,77]}]},{"pos":[14070,14374],"content":"You can specify the path of the cookie where role names are cached for your application by setting the `cookiePath` attribute in the Web.config file for your ASP.NET application. The CookiePath property returns the value of the `cookiePath` attribute from the Web.config file. The path is case sensitive.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can specify the path of the cookie where role names are cached for your application by setting the <ph id=\"ph1\">`cookiePath`</ph> attribute in the Web.config file for your ASP.NET application.","pos":[0,178],"source":"You can specify the path of the cookie where role names are cached for your application by setting the `cookiePath` attribute in the Web.config file for your ASP.NET application."},{"content":"The CookiePath property returns the value of the <ph id=\"ph1\">`cookiePath`</ph> attribute from the Web.config file.","pos":[179,276],"source":" The CookiePath property returns the value of the `cookiePath` attribute from the Web.config file."},{"content":"The path is case sensitive.","pos":[277,304]}]},{"pos":[14959,15027],"content":"The path of the cookie used to store role names. The default is \"/\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The path of the cookie used to store role names. The default is \"/\".","pos":[0,68],"nodes":[{"content":"The path of the cookie used to store role names.","pos":[0,48]},{"content":"The default is \"/\".","pos":[49,68]}]}]},{"pos":[15546,15638],"content":"Gets or sets the type of security that is used to protect the cookie that caches role names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of security that is used to protect the cookie that caches role names.","pos":[0,92]}]},{"pos":[15650,16397],"content":"The CookieProtection property describes how information in a cookie is securely stored. You can specify the security type of the cookie where roles are cached for your application by setting the `cookieProtection` attribute in the Web.config file for your ASP.NET application. The `cookieProtection` attribute takes a <xref:System.Web.Security.CookieProtection> enumeration value of `All`, `Encryption`, `None`, or `Validation`. The default is `All`. Be sure to use the default value for the CookieProtection property if you want both data validation and encryption to help protect the cookie. To improve the protection of your cookie, you can also set the <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> property to `true`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CookieProtection property describes how information in a cookie is securely stored.","pos":[0,87]},{"content":"You can specify the security type of the cookie where roles are cached for your application by setting the <ph id=\"ph1\">`cookieProtection`</ph> attribute in the Web.config file for your ASP.NET application.","pos":[88,276],"source":" You can specify the security type of the cookie where roles are cached for your application by setting the `cookieProtection` attribute in the Web.config file for your ASP.NET application."},{"content":"The <ph id=\"ph1\">`cookieProtection`</ph> attribute takes a &lt;xref:System.Web.Security.CookieProtection&gt; enumeration value of <ph id=\"ph2\">`All`</ph>, <ph id=\"ph3\">`Encryption`</ph>, <ph id=\"ph4\">`None`</ph>, or <ph id=\"ph5\">`Validation`</ph>.","pos":[277,428],"source":" The `cookieProtection` attribute takes a <xref:System.Web.Security.CookieProtection> enumeration value of `All`, `Encryption`, `None`, or `Validation`."},{"content":"The default is <ph id=\"ph1\">`All`</ph>.","pos":[429,450],"source":" The default is `All`."},{"content":"Be sure to use the default value for the CookieProtection property if you want both data validation and encryption to help protect the cookie.","pos":[451,593]},{"content":"To improve the protection of your cookie, you can also set the &lt;xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[594,747],"source":" To improve the protection of your cookie, you can also set the <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> property to `true`."}]},{"pos":[17047,17205],"content":"The type of security protection used within the cookie where role names are cached. The default is <xref uid=\"langword_csharp_All\" name=\"All\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of security protection used within the cookie where role names are cached.","pos":[0,83]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_All\" name=\"All\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[84,158],"source":" The default is <xref uid=\"langword_csharp_All\" name=\"All\" href=\"\"></xref>."}]},{"pos":[17730,17901],"content":"Gets or sets a value indicating whether the cookie that is used to cache role names requires a Secure Sockets Layer (SSL) connection in order to be returned to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the cookie that is used to cache role names requires a Secure Sockets Layer (SSL) connection in order to be returned to the server.","pos":[0,171]}]},{"pos":[17913,18095],"content":"You can specify whether SSL is required to return the role names cookie to the server by setting the <ph id=\"ph1\">`cookieRequireSSL`</ph> attribute in the Web.config file for your ASP.NET application.","needQuote":true,"needEscape":true,"source":"You can specify whether SSL is required to return the role names cookie to the server by setting the `cookieRequireSSL` attribute in the Web.config file for your ASP.NET application."},{"pos":[18691,19009],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an SSL connection is needed in order to return to the server the cookie where role names are cached; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an SSL connection is needed in order to return to the server the cookie where role names are cached; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,239],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an SSL connection is needed in order to return to the server the cookie where role names are cached; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[240,318],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[19569,19680],"content":"Gets or sets a value indicating whether the cookie that is used to cache role names will be reset periodically.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the cookie that is used to cache role names will be reset periodically.","pos":[0,111]}]},{"pos":[19692,20370],"content":"You can specify whether the cookie that is used to cache role names is periodically reset or expired at a fixed point in time by using the `cookieSlidingExpiration` attribute in the Web.config file for your ASP.NET application. If `true`, the cookie expiration is initially set to the current date and time plus the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property, in minutes. While the user continues to actively use the ASP.NET application, the expiration date and time of the cookie is automatically refreshed, if there is less than half of the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> remaining. The default is `true`.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can specify whether the cookie that is used to cache role names is periodically reset or expired at a fixed point in time by using the <ph id=\"ph1\">`cookieSlidingExpiration`</ph> attribute in the Web.config file for your ASP.NET application.","pos":[0,227],"source":"You can specify whether the cookie that is used to cache role names is periodically reset or expired at a fixed point in time by using the `cookieSlidingExpiration` attribute in the Web.config file for your ASP.NET application."},{"content":"If <ph id=\"ph1\">`true`</ph>, the cookie expiration is initially set to the current date and time plus the &lt;xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A&gt; property, in minutes.","pos":[228,405],"source":" If `true`, the cookie expiration is initially set to the current date and time plus the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property, in minutes."},{"content":"While the user continues to actively use the ASP.NET application, the expiration date and time of the cookie is automatically refreshed, if there is less than half of the &lt;xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A&gt; remaining.","pos":[406,655],"source":" While the user continues to actively use the ASP.NET application, the expiration date and time of the cookie is automatically refreshed, if there is less than half of the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> remaining."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[656,678],"source":" The default is `true`."}]},{"pos":[20980,21270],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the role names cookie expiration date and time will be reset periodically; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the role names cookie expiration date and time will be reset periodically; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,213],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the role names cookie expiration date and time will be reset periodically; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[214,290],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[21787,21881],"content":"Gets or sets the number of minutes before the cookie that is used to cache role names expires.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of minutes before the cookie that is used to cache role names expires.","pos":[0,94]}]},{"pos":[21893,22175],"content":"The CookieTimeout property sets a value specifying the number of minutes before the role names cookie expires. The default is 30 minutes. If the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property is `false`, the CookieTimeout property is ignored.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CookieTimeout property sets a value specifying the number of minutes before the role names cookie expires.","pos":[0,110]},{"content":"The default is 30 minutes.","pos":[111,137]},{"content":"If the &lt;xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A&gt; property is <ph id=\"ph1\">`false`</ph>, the CookieTimeout property is ignored.","pos":[138,282],"source":" If the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property is `false`, the CookieTimeout property is ignored."}]},{"pos":[22770,22907],"content":"A <xref:System.TimeSpan> that is the number of minutes before the cookie used to cache role names expires. The default is 30, in minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that is the number of minutes before the cookie used to cache role names expires. The default is 30, in minutes.","pos":[0,137],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that is the number of minutes before the cookie used to cache role names expires.","pos":[0,106],"source":"A <xref:System.TimeSpan> that is the number of minutes before the cookie used to cache role names expires."},{"content":"The default is 30, in minutes.","pos":[107,137]}]}]},{"pos":[23459,23551],"content":"Indicates whether a session-based cookie or a persistent cookie is used to cache role names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether a session-based cookie or a persistent cookie is used to cache role names.","pos":[0,92]}]},{"pos":[23563,23952],"content":"The CreatePersistentCookie property indicates whether or not the cookie that is used to cache role names should be a session-based cookie, which means that the cookie is lost when the browser is closed, or a persistent cookie, which means that the cookie is available across browser sessions. The default is `false`, which indicates that a session-based cookie is used to cache role names.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CreatePersistentCookie property indicates whether or not the cookie that is used to cache role names should be a session-based cookie, which means that the cookie is lost when the browser is closed, or a persistent cookie, which means that the cookie is available across browser sessions.","pos":[0,292]},{"content":"The default is <ph id=\"ph1\">`false`</ph>, which indicates that a session-based cookie is used to cache role names.","pos":[293,389],"source":" The default is `false`, which indicates that a session-based cookie is used to cache role names."}]},{"pos":[24560,24840],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the role names cookie persistent across browser sessions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to make the role names cookie persistent across browser sessions; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,201],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the role names cookie persistent across browser sessions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[202,280],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[25366,25441],"content":"Gets or sets the name of the default provider that is used to manage roles.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the default provider that is used to manage roles.","pos":[0,75]}]},{"pos":[25453,25666],"content":"The DefaultProvider property must match a named value in the `providers` subsection of the `roleManager` section of a configuration file. An empty string (\"\") is not a valid value for the DefaultProvider property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DefaultProvider property must match a named value in the <ph id=\"ph1\">`providers`</ph> subsection of the <ph id=\"ph2\">`roleManager`</ph> section of a configuration file.","pos":[0,137],"source":"The DefaultProvider property must match a named value in the `providers` subsection of the `roleManager` section of a configuration file."},{"content":"An empty string (\"\") is not a valid value for the DefaultProvider property.","pos":[138,213]}]},{"pos":[26325,26457],"content":"The name of a provider in the <xref:System.Web.Configuration.RoleManagerSection.Providers*>. The default is \"AspNetSqlRoleProvider\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of a provider in the <xref:System.Web.Configuration.RoleManagerSection.Providers*>. The default is \"AspNetSqlRoleProvider\".","pos":[0,132],"nodes":[{"content":"The name of a provider in the &lt;xref:System.Web.Configuration.RoleManagerSection.Providers*&gt;.","pos":[0,92],"source":"The name of a provider in the <xref:System.Web.Configuration.RoleManagerSection.Providers*>."},{"content":"The default is \"AspNetSqlRoleProvider\".","pos":[93,132]}]}]},{"pos":[26931,27035],"content":"Gets or sets the name of the domain that is associated with the cookie that is used to cache role names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the domain that is associated with the cookie that is used to cache role names.","pos":[0,104]}]},{"pos":[27047,27452],"content":"The Domain property is set in the configuration for an ASP.NET application by using the `domain` attribute of the `roleManager` configuration element. If no value is specified in the configuration for the `domain` attribute, the Domain property returns `null` and the role names cookie domain defaults to the behavior of the <xref:System.Web.HttpCookie.Domain%2A> property. The default is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Domain property is set in the configuration for an ASP.NET application by using the <ph id=\"ph1\">`domain`</ph> attribute of the <ph id=\"ph2\">`roleManager`</ph> configuration element.","pos":[0,150],"source":"The Domain property is set in the configuration for an ASP.NET application by using the `domain` attribute of the `roleManager` configuration element."},{"content":"If no value is specified in the configuration for the <ph id=\"ph1\">`domain`</ph> attribute, the Domain property returns <ph id=\"ph2\">`null`</ph> and the role names cookie domain defaults to the behavior of the &lt;xref:System.Web.HttpCookie.Domain%2A&gt; property.","pos":[151,373],"source":" If no value is specified in the configuration for the `domain` attribute, the Domain property returns `null` and the role names cookie domain defaults to the behavior of the <xref:System.Web.HttpCookie.Domain%2A> property."},{"content":"The default is an empty string.","pos":[374,405]}]},{"pos":[27568,27759],"content":"The <xref:System.Web.HttpCookie.Domain*> of the cookie used to cache role names. The default is an empty string (<xref uid=\"langword_csharp_&quot;&quot;\" name=\"&quot;&quot;\" href=\"\"></xref>).","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.HttpCookie.Domain*&gt; of the cookie used to cache role names.","pos":[0,80],"source":"The <xref:System.Web.HttpCookie.Domain*> of the cookie used to cache role names."},{"content":"The default is an empty string (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;quot;&amp;quot;\" name=\"&amp;quot;&amp;quot;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>).","pos":[81,191],"source":" The default is an empty string (<xref uid=\"langword_csharp_&quot;&quot;\" name=\"&quot;&quot;\" href=\"\"></xref>)."}]},{"pos":[28229,28316],"content":"Gets or sets a value indicating whether the ASP.NET role management feature is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the ASP.NET role management feature is enabled.","pos":[0,87]}]},{"pos":[28328,28463],"content":"The Enabled property returns a Boolean value indicating whether or not the ASP.NET role management feature can be accessed at run time.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Enabled property returns a Boolean value indicating whether or not the ASP.NET role management feature can be accessed at run time.","pos":[0,135]}]},{"pos":[29043,29308],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ASP.NET role management feature is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the ASP.NET role management feature is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,186],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ASP.NET role management feature is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,265],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[29824,29904],"content":"Gets or sets the maximum number of roles that ASP.NET caches in the role cookie.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of roles that ASP.NET caches in the role cookie.","pos":[0,80]}]},{"pos":[29916,30098],"content":"The <xref:System.Web.Security.Roles.MaxCachedResults%2A> property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie. The default is 25.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Web.Security.Roles.MaxCachedResults%2A> property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie. The default is 25.","pos":[0,182],"nodes":[{"content":"The &lt;xref:System.Web.Security.Roles.MaxCachedResults%2A&gt; property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie.","pos":[0,163],"source":"The <xref:System.Web.Security.Roles.MaxCachedResults%2A> property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie."},{"content":"The default is 25.","pos":[164,182]}]}]},{"pos":[30220,30320],"content":"A value indicating the maximum number of roles ASP.NET caches in the role cookie. The default is 25.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value indicating the maximum number of roles ASP.NET caches in the role cookie. The default is 25.","pos":[0,100],"nodes":[{"content":"A value indicating the maximum number of roles ASP.NET caches in the role cookie.","pos":[0,81]},{"content":"The default is 25.","pos":[82,100]}]}]},{"pos":[31015,31027],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31511,31665],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ProviderSettingsCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object of <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ProviderSettings\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> elements.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> object of <xref href=\"System.Configuration.ProviderSettings\"></xref> elements."},{"pos":[31678,32037],"content":"Role management providers are components that provide access to the types of roles for a site. You can specify role management providers in the `providers` subsection of the `roleManager` section of a configuration file.       The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property specifies the provider that is used by default.","needQuote":false,"needEscape":true,"nodes":[{"content":"Role management providers are components that provide access to the types of roles for a site.","pos":[0,94]},{"content":"You can specify role management providers in the <ph id=\"ph1\">`providers`</ph> subsection of the <ph id=\"ph2\">`roleManager`</ph> section of a configuration file.","pos":[95,220],"source":" You can specify role management providers in the `providers` subsection of the `roleManager` section of a configuration file."},{"content":"The &lt;xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A&gt; property specifies the provider that is used by default.","pos":[227,357],"source":"       The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property specifies the provider that is used by default."}]},{"pos":[32693,33018],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ProviderSettingsCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the providers settings defined within the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_providers\" name=\"providers\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> subsection of the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_roleManager\" name=\"roleManager\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> section of the configuration file.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> that contains the providers settings defined within the <xref uid=\"langword_csharp_providers\" name=\"providers\" href=\"\"></xref> subsection of the <xref uid=\"langword_csharp_roleManager\" name=\"roleManager\" href=\"\"></xref> section of the configuration file."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.RoleManagerSection\n  id: RoleManagerSection\n  children:\n  - System.Web.Configuration.RoleManagerSection.#ctor\n  - System.Web.Configuration.RoleManagerSection.CacheRolesInCookie\n  - System.Web.Configuration.RoleManagerSection.CookieName\n  - System.Web.Configuration.RoleManagerSection.CookiePath\n  - System.Web.Configuration.RoleManagerSection.CookieProtection\n  - System.Web.Configuration.RoleManagerSection.CookieRequireSSL\n  - System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration\n  - System.Web.Configuration.RoleManagerSection.CookieTimeout\n  - System.Web.Configuration.RoleManagerSection.CreatePersistentCookie\n  - System.Web.Configuration.RoleManagerSection.DefaultProvider\n  - System.Web.Configuration.RoleManagerSection.Domain\n  - System.Web.Configuration.RoleManagerSection.Enabled\n  - System.Web.Configuration.RoleManagerSection.MaxCachedResults\n  - System.Web.Configuration.RoleManagerSection.Properties\n  - System.Web.Configuration.RoleManagerSection.Providers\n  langs:\n  - csharp\n  name: RoleManagerSection\n  nameWithType: RoleManagerSection\n  fullName: System.Web.Configuration.RoleManagerSection\n  type: Class\n  summary: Defines configuration settings that are used to support the role management infrastructure of Web applications. This class cannot be inherited.\n  remarks: The RoleManagerSection class provides a way to programmatically access and modify the content of the `roleManager` section of the configuration file.\n  example:\n  - \"This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the RoleManagerSection class. The second demonstrates how to use the RoleManagerSection type.  \\n  \\n The following configuration file example shows how to declaratively specify values for several properties of the RoleManagerSection class.  \\n  \\n```  \\n<system.web>  \\n  <roleManager   \\n    enabled=\\\"false\\\"   \\n    cacheRolesInCookie=\\\"false\\\"   \\n    cookieName=\\\".ASPXROLES\\\" cookieTimeout=\\\"30\\\"  \\n    cookiePath=\\\"/\\\" cookieRequireSSL=\\\"false\\\"  \\n    cookieSlidingExpiration=\\\"true\\\" createPersistentCookie=\\\"false\\\"  \\n    cookieProtection=\\\"All\\\"   \\n    defaultProvider=\\\"AspNetSqlRoleProvider\\\"  \\n    maxCachedResults=\\\"25\\\"  >  \\n    <providers>  \\n      <add   \\n        name=\\\"AspNetSqlRoleProvider\\\"  \\n        connectionStringName=\\\"LocalSqlServer\\\"   \\n        applicationName=\\\"/\\\"  \\n        type=\\\"System.Web.Security.SqlRoleProvider, System.Web,  \\n          Version=2.0.3600.0, Culture=neutral,  \\n          PublicKeyToken=b03f5f7f11d50a3a\\\" />  \\n      <add   \\n        name=\\\"AspNetWindowsTokenRoleProvider\\\"   \\n        applicationName=\\\"/\\\"  \\n        type=\\\"System.Web.Security.WindowsTokenRoleProvider, System.Web,   \\n          Version=2.0.3600.0, Culture=neutral,   \\n          PublicKeyToken=b03f5f7f11d50a3a\\\" />  \\n    </providers>  \\n  </roleManager>  \\n</system.web>  \\n```  \\n  \\n The following code example demonstrates how to use the RoleManagerSection type.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_91_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#1](~/add/codesnippet/csharp/t-system.web.configurati_91_1.cs)]\"\n  syntax:\n    content: 'public sealed class RoleManagerSection : System.Configuration.ConfigurationSection'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationSection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  - System.Configuration.ConfigurationSection.GetRuntimeObject\n  - System.Configuration.ConfigurationSection.IsModified\n  - System.Configuration.ConfigurationSection.ResetModified\n  - System.Configuration.ConfigurationSection.SectionInformation\n  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.#ctor\n  id: '#ctor'\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: RoleManagerSection()\n  nameWithType: RoleManagerSection.RoleManagerSection()\n  fullName: System.Web.Configuration.RoleManagerSection.RoleManagerSection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.RoleManagerSection\"></xref> class by using default settings.\n  remarks: \"The RoleManagerSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.RoleManagerSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.  \\n  \\n The following table shows the default settings that are used for the RoleManagerSection constructor.  \\n  \\n|Property|Default value|  \\n|--------------|-------------------|  \\n|<xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>|`false`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>|`false`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|\\\".ASPXROLES\\\"|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|\\\"/\\\"|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>|`All`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>|`false`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>|`true`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|30, in minutes|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>|`false`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|\\\"AspNetSqlRoleProvider\\\"|  \\n|<xref:System.Web.Configuration.RoleManagerSection.Domain%2A>|An empty string (\\\"\\\")|  \\n|<xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|\"\n  syntax:\n    content: public RoleManagerSection ();\n    parameters: []\n  overload: System.Web.Configuration.RoleManagerSection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie\n  id: CacheRolesInCookie\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CacheRolesInCookie\n  nameWithType: RoleManagerSection.CacheRolesInCookie\n  fullName: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the current user's roles are cached in a cookie.\n  remarks: \"The CacheRolesInCookie property returns a Boolean value indicating whether cookie storage for role names is enabled.  \\n  \\n When the CacheRolesInCookie property is set to `true` in the configuration file, role information for each user is stored in a cookie on the client. When role management checks to determine whether a user is in a particular role, the roles cookie is checked before calling the role provider to check the list of roles at the data source. The cookie is dynamically updated on the client to cache the most recently validated role names.  \\n  \\n You can improve the reliability of the role names that are cached in a cookie by specifying a <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property when you configure the `roleManager` section of the configuration file. The default <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property is `All`, which encrypts role names in the cookie and validates that the cookie contents have not been altered.\"\n  example:\n  - \"The following code example demonstrates how to use the CacheRolesInCookie property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_254_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#2](~/add/codesnippet/csharp/p-system.web.configurati_254_1.cs)]\"\n  syntax:\n    content: public bool CacheRolesInCookie { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current user's roles are cached in a cookie; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.CookieName\n  id: CookieName\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookieName\n  nameWithType: RoleManagerSection.CookieName\n  fullName: System.Web.Configuration.RoleManagerSection.CookieName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the name of the cookie that is used to cache role names.\n  remarks: The CookieName property returns the name of the cookie that is used to cache role names. You can specify the name of the cookie where roles are cached for your application by setting the `cookieName` attribute in the Web.config file for your ASP.NET application. This is useful when you want to uniquely identify a cookie for your application or when a cookie is shared across multiple applications.\n  example:\n  - \"The following code example demonstrates how to use the CookieName property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_120_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#3](~/add/codesnippet/csharp/p-system.web.configurati_120_1.cs)]\"\n  syntax:\n    content: public string CookieName { get; set; }\n    return:\n      type: System.String\n      description: The name of the cookie used to cache role names. The default is \".ASPXROLES\".\n  overload: System.Web.Configuration.RoleManagerSection.CookieName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.CookiePath\n  id: CookiePath\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookiePath\n  nameWithType: RoleManagerSection.CookiePath\n  fullName: System.Web.Configuration.RoleManagerSection.CookiePath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the virtual path of the cookie that is used to cache role names.\n  remarks: You can specify the path of the cookie where role names are cached for your application by setting the `cookiePath` attribute in the Web.config file for your ASP.NET application. The CookiePath property returns the value of the `cookiePath` attribute from the Web.config file. The path is case sensitive.\n  example:\n  - \"The following code example demonstrates how to use the CookiePath property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_217_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#4](~/add/codesnippet/csharp/p-system.web.configurati_217_1.cs)]\"\n  syntax:\n    content: public string CookiePath { get; set; }\n    return:\n      type: System.String\n      description: The path of the cookie used to store role names. The default is \"/\".\n  overload: System.Web.Configuration.RoleManagerSection.CookiePath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.CookieProtection\n  id: CookieProtection\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookieProtection\n  nameWithType: RoleManagerSection.CookieProtection\n  fullName: System.Web.Configuration.RoleManagerSection.CookieProtection\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the type of security that is used to protect the cookie that caches role names.\n  remarks: The CookieProtection property describes how information in a cookie is securely stored. You can specify the security type of the cookie where roles are cached for your application by setting the `cookieProtection` attribute in the Web.config file for your ASP.NET application. The `cookieProtection` attribute takes a <xref:System.Web.Security.CookieProtection> enumeration value of `All`, `Encryption`, `None`, or `Validation`. The default is `All`. Be sure to use the default value for the CookieProtection property if you want both data validation and encryption to help protect the cookie. To improve the protection of your cookie, you can also set the <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> property to `true`.\n  example:\n  - \"The following code example demonstrates how to use the CookieProtection property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_134_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#5](~/add/codesnippet/csharp/p-system.web.configurati_134_1.cs)]\"\n  syntax:\n    content: public System.Web.Security.CookieProtection CookieProtection { get; set; }\n    return:\n      type: System.Web.Security.CookieProtection\n      description: The type of security protection used within the cookie where role names are cached. The default is <xref uid=\"langword_csharp_All\" name=\"All\" href=\"\"></xref>.\n  overload: System.Web.Configuration.RoleManagerSection.CookieProtection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL\n  id: CookieRequireSSL\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookieRequireSSL\n  nameWithType: RoleManagerSection.CookieRequireSSL\n  fullName: System.Web.Configuration.RoleManagerSection.CookieRequireSSL\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the cookie that is used to cache role names requires a Secure Sockets Layer (SSL) connection in order to be returned to the server.\n  remarks: You can specify whether SSL is required to return the role names cookie to the server by setting the `cookieRequireSSL` attribute in the Web.config file for your ASP.NET application.\n  example:\n  - \"The following code example demonstrates how to use the CookieRequireSSL property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_311_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#6](~/add/codesnippet/csharp/p-system.web.configurati_311_1.cs)]\"\n  syntax:\n    content: public bool CookieRequireSSL { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an SSL connection is needed in order to return to the server the cookie where role names are cached; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Configuration.RoleManagerSection.CookieRequireSSL*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration\n  id: CookieSlidingExpiration\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookieSlidingExpiration\n  nameWithType: RoleManagerSection.CookieSlidingExpiration\n  fullName: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the cookie that is used to cache role names will be reset periodically.\n  remarks: You can specify whether the cookie that is used to cache role names is periodically reset or expired at a fixed point in time by using the `cookieSlidingExpiration` attribute in the Web.config file for your ASP.NET application. If `true`, the cookie expiration is initially set to the current date and time plus the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property, in minutes. While the user continues to actively use the ASP.NET application, the expiration date and time of the cookie is automatically refreshed, if there is less than half of the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> remaining. The default is `true`.\n  example:\n  - \"The following code example demonstrates how to use the CookieSlidingExpiration property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_403_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#7](~/add/codesnippet/csharp/p-system.web.configurati_403_1.cs)]\"\n  syntax:\n    content: public bool CookieSlidingExpiration { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the role names cookie expiration date and time will be reset periodically; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout\n  id: CookieTimeout\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookieTimeout\n  nameWithType: RoleManagerSection.CookieTimeout\n  fullName: System.Web.Configuration.RoleManagerSection.CookieTimeout\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the number of minutes before the cookie that is used to cache role names expires.\n  remarks: The CookieTimeout property sets a value specifying the number of minutes before the role names cookie expires. The default is 30 minutes. If the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property is `false`, the CookieTimeout property is ignored.\n  example:\n  - \"The following code example demonstrates how to use the CookieTimeout property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#8](~/add/codesnippet/visualbasic/p-system.web.configurati_267_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#8](~/add/codesnippet/csharp/p-system.web.configurati_267_1.cs)]\"\n  syntax:\n    content: public TimeSpan CookieTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that is the number of minutes before the cookie used to cache role names expires. The default is 30, in minutes.\n  overload: System.Web.Configuration.RoleManagerSection.CookieTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie\n  id: CreatePersistentCookie\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CreatePersistentCookie\n  nameWithType: RoleManagerSection.CreatePersistentCookie\n  fullName: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Indicates whether a session-based cookie or a persistent cookie is used to cache role names.\n  remarks: The CreatePersistentCookie property indicates whether or not the cookie that is used to cache role names should be a session-based cookie, which means that the cookie is lost when the browser is closed, or a persistent cookie, which means that the cookie is available across browser sessions. The default is `false`, which indicates that a session-based cookie is used to cache role names.\n  example:\n  - \"The following code example demonstrates how to use the CreatePersistentCookie property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#9](~/add/codesnippet/visualbasic/p-system.web.configurati_216_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#9](~/add/codesnippet/csharp/p-system.web.configurati_216_1.cs)]\"\n  syntax:\n    content: public bool CreatePersistentCookie { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the role names cookie persistent across browser sessions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider\n  id: DefaultProvider\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: DefaultProvider\n  nameWithType: RoleManagerSection.DefaultProvider\n  fullName: System.Web.Configuration.RoleManagerSection.DefaultProvider\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the name of the default provider that is used to manage roles.\n  remarks: The DefaultProvider property must match a named value in the `providers` subsection of the `roleManager` section of a configuration file. An empty string (\"\") is not a valid value for the DefaultProvider property.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_283_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#10](~/add/codesnippet/csharp/p-system.web.configurati_283_1.cs)]\"\n  syntax:\n    content: public string DefaultProvider { get; set; }\n    return:\n      type: System.String\n      description: The name of a provider in the <xref:System.Web.Configuration.RoleManagerSection.Providers*>. The default is \"AspNetSqlRoleProvider\".\n  overload: System.Web.Configuration.RoleManagerSection.DefaultProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.Domain\n  id: Domain\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: Domain\n  nameWithType: RoleManagerSection.Domain\n  fullName: System.Web.Configuration.RoleManagerSection.Domain\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the name of the domain that is associated with the cookie that is used to cache role names.\n  remarks: The Domain property is set in the configuration for an ASP.NET application by using the `domain` attribute of the `roleManager` configuration element. If no value is specified in the configuration for the `domain` attribute, the Domain property returns `null` and the role names cookie domain defaults to the behavior of the <xref:System.Web.HttpCookie.Domain%2A> property. The default is an empty string.\n  syntax:\n    content: public string Domain { get; set; }\n    return:\n      type: System.String\n      description: The <xref:System.Web.HttpCookie.Domain*> of the cookie used to cache role names. The default is an empty string (<xref uid=\"langword_csharp_&quot;&quot;\" name=\"&quot;&quot;\" href=\"\"></xref>).\n  overload: System.Web.Configuration.RoleManagerSection.Domain*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.Enabled\n  id: Enabled\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: RoleManagerSection.Enabled\n  fullName: System.Web.Configuration.RoleManagerSection.Enabled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the ASP.NET role management feature is enabled.\n  remarks: The Enabled property returns a Boolean value indicating whether or not the ASP.NET role management feature can be accessed at run time.\n  example:\n  - \"The following code example demonstrates how to use the Enabled property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#12](~/add/codesnippet/visualbasic/p-system.web.configurati_156_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#12](~/add/codesnippet/csharp/p-system.web.configurati_156_1.cs)]\"\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ASP.NET role management feature is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Configuration.RoleManagerSection.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults\n  id: MaxCachedResults\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: MaxCachedResults\n  nameWithType: RoleManagerSection.MaxCachedResults\n  fullName: System.Web.Configuration.RoleManagerSection.MaxCachedResults\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the maximum number of roles that ASP.NET caches in the role cookie.\n  remarks: The <xref:System.Web.Security.Roles.MaxCachedResults%2A> property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie. The default is 25.\n  syntax:\n    content: public int MaxCachedResults { get; set; }\n    return:\n      type: System.Int32\n      description: A value indicating the maximum number of roles ASP.NET caches in the role cookie. The default is 25.\n  overload: System.Web.Configuration.RoleManagerSection.MaxCachedResults*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.Properties\n  id: Properties\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: RoleManagerSection.Properties\n  fullName: System.Web.Configuration.RoleManagerSection.Properties\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Web.Configuration.RoleManagerSection.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.RoleManagerSection.Providers\n  id: Providers\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: Providers\n  nameWithType: RoleManagerSection.Providers\n  fullName: System.Web.Configuration.RoleManagerSection.Providers\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets a <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> object of <xref href=\"System.Configuration.ProviderSettings\"></xref> elements.\n  remarks: \"Role management providers are components that provide access to the types of roles for a site. You can specify role management providers in the `providers` subsection of the `roleManager` section of a configuration file.  \\n  \\n The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property specifies the provider that is used by default.\"\n  example:\n  - \"The following code example demonstrates how to use the Providers property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-vb[System.Web.Configuration.RoleManagerSection#13](~/add/codesnippet/visualbasic/p-system.web.configurati_354_1.vb)]\\n [!code-cs[System.Web.Configuration.RoleManagerSection#13](~/add/codesnippet/csharp/p-system.web.configurati_354_1.cs)]\"\n  syntax:\n    content: public System.Configuration.ProviderSettingsCollection Providers { get; }\n    return:\n      type: System.Configuration.ProviderSettingsCollection\n      description: A <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> that contains the providers settings defined within the <xref uid=\"langword_csharp_providers\" name=\"providers\" href=\"\"></xref> subsection of the <xref uid=\"langword_csharp_roleManager\" name=\"roleManager\" href=\"\"></xref> section of the configuration file.\n  overload: System.Web.Configuration.RoleManagerSection.Providers*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: System.Configuration.ConfigurationSection\n- uid: System.Web.Configuration.RoleManagerSection.#ctor\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: RoleManagerSection()\n  nameWithType: RoleManagerSection.RoleManagerSection()\n  fullName: System.Web.Configuration.RoleManagerSection.RoleManagerSection()\n- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CacheRolesInCookie\n  nameWithType: RoleManagerSection.CacheRolesInCookie\n  fullName: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Configuration.RoleManagerSection.CookieName\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieName\n  nameWithType: RoleManagerSection.CookieName\n  fullName: System.Web.Configuration.RoleManagerSection.CookieName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Configuration.RoleManagerSection.CookiePath\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookiePath\n  nameWithType: RoleManagerSection.CookiePath\n  fullName: System.Web.Configuration.RoleManagerSection.CookiePath\n- uid: System.Web.Configuration.RoleManagerSection.CookieProtection\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieProtection\n  nameWithType: RoleManagerSection.CookieProtection\n  fullName: System.Web.Configuration.RoleManagerSection.CookieProtection\n- uid: System.Web.Security.CookieProtection\n  parent: System.Web.Security\n  isExternal: false\n  name: CookieProtection\n  nameWithType: CookieProtection\n  fullName: System.Web.Security.CookieProtection\n- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieRequireSSL\n  nameWithType: RoleManagerSection.CookieRequireSSL\n  fullName: System.Web.Configuration.RoleManagerSection.CookieRequireSSL\n- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieSlidingExpiration\n  nameWithType: RoleManagerSection.CookieSlidingExpiration\n  fullName: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration\n- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieTimeout\n  nameWithType: RoleManagerSection.CookieTimeout\n  fullName: System.Web.Configuration.RoleManagerSection.CookieTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CreatePersistentCookie\n  nameWithType: RoleManagerSection.CreatePersistentCookie\n  fullName: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie\n- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: DefaultProvider\n  nameWithType: RoleManagerSection.DefaultProvider\n  fullName: System.Web.Configuration.RoleManagerSection.DefaultProvider\n- uid: System.Web.Configuration.RoleManagerSection.Domain\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Domain\n  nameWithType: RoleManagerSection.Domain\n  fullName: System.Web.Configuration.RoleManagerSection.Domain\n- uid: System.Web.Configuration.RoleManagerSection.Enabled\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Enabled\n  nameWithType: RoleManagerSection.Enabled\n  fullName: System.Web.Configuration.RoleManagerSection.Enabled\n- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: MaxCachedResults\n  nameWithType: RoleManagerSection.MaxCachedResults\n  fullName: System.Web.Configuration.RoleManagerSection.MaxCachedResults\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Configuration.RoleManagerSection.Properties\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Properties\n  nameWithType: RoleManagerSection.Properties\n  fullName: System.Web.Configuration.RoleManagerSection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Web.Configuration.RoleManagerSection.Providers\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Providers\n  nameWithType: RoleManagerSection.Providers\n  fullName: System.Web.Configuration.RoleManagerSection.Providers\n- uid: System.Configuration.ProviderSettingsCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ProviderSettingsCollection\n  nameWithType: ProviderSettingsCollection\n  fullName: System.Configuration.ProviderSettingsCollection\n- uid: System.Web.Configuration.RoleManagerSection.#ctor*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: RoleManagerSection\n  nameWithType: RoleManagerSection.RoleManagerSection\n- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CacheRolesInCookie\n  nameWithType: RoleManagerSection.CacheRolesInCookie\n- uid: System.Web.Configuration.RoleManagerSection.CookieName*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieName\n  nameWithType: RoleManagerSection.CookieName\n- uid: System.Web.Configuration.RoleManagerSection.CookiePath*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookiePath\n  nameWithType: RoleManagerSection.CookiePath\n- uid: System.Web.Configuration.RoleManagerSection.CookieProtection*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieProtection\n  nameWithType: RoleManagerSection.CookieProtection\n- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieRequireSSL\n  nameWithType: RoleManagerSection.CookieRequireSSL\n- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieSlidingExpiration\n  nameWithType: RoleManagerSection.CookieSlidingExpiration\n- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieTimeout\n  nameWithType: RoleManagerSection.CookieTimeout\n- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CreatePersistentCookie\n  nameWithType: RoleManagerSection.CreatePersistentCookie\n- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: DefaultProvider\n  nameWithType: RoleManagerSection.DefaultProvider\n- uid: System.Web.Configuration.RoleManagerSection.Domain*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Domain\n  nameWithType: RoleManagerSection.Domain\n- uid: System.Web.Configuration.RoleManagerSection.Enabled*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Enabled\n  nameWithType: RoleManagerSection.Enabled\n- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: MaxCachedResults\n  nameWithType: RoleManagerSection.MaxCachedResults\n- uid: System.Web.Configuration.RoleManagerSection.Properties*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Properties\n  nameWithType: RoleManagerSection.Properties\n- uid: System.Web.Configuration.RoleManagerSection.Providers*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Providers\n  nameWithType: RoleManagerSection.Providers\n"}