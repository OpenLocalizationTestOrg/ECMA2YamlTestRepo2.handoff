{"nodes":[{"pos":[1190,1302],"content":"Represents a secure client session for user activation, license binding, and other rights management operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a secure client session for user activation, license binding, and other rights management operations.","pos":[0,112]}]},{"pos":[1314,1435],"content":"As with other <xref:System.Security.RightsManagement> types, SecureEnvironment is only usable in full trust applications.","needQuote":true,"needEscape":true,"nodes":[{"content":"As with other &lt;xref:System.Security.RightsManagement&gt; types, SecureEnvironment is only usable in full trust applications.","pos":[0,121],"source":"As with other <xref:System.Security.RightsManagement> types, SecureEnvironment is only usable in full trust applications."}]},{"pos":[2528,2660],"content":"Gets the ApplicationManifest specified when the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> was created.","needQuote":true,"needEscape":true,"source":"Gets the ApplicationManifest specified when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created."},{"pos":[3155,3362],"content":"The application manifest specified to the &lt;xref:System.Security.RightsManagement.SecureEnvironment.Create*&gt; method when the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is created.","needQuote":true,"needEscape":true,"source":"The application manifest specified to the <xref:System.Security.RightsManagement.SecureEnvironment.Create*> method when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> is created."},{"pos":[4054,4136],"content":"Creates a secure client session for a specified user with a given rights manifest.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a secure client session for a specified user with a given rights manifest.","pos":[0,82]}]},{"pos":[4148,4480],"content":"This Create method is intended for use with users that are already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  Use the alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method for users that are not yet activated.","needQuote":true,"needEscape":true,"nodes":[{"content":"This Create method is intended for use with users that are already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  Use the alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method for users that are not yet activated.","pos":[0,332],"nodes":[{"content":"This Create method is intended for use with users that are already activated, such as provided in the list returned from &lt;xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A&gt;.","pos":[0,200],"source":"This Create method is intended for use with users that are already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>."},{"content":"Use the alternate &lt;xref:System.Security.RightsManagement.SecureEnvironment.Create%2A&gt; method for users that are not yet activated.","pos":[202,332],"source":"  Use the alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method for users that are not yet activated."}]}]},{"pos":[5121,5153],"content":"The application rights manifest.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application rights manifest.","pos":[0,32]}]},{"pos":[5245,5314],"content":"The user or user-group for granting access to rights managed content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user or user-group for granting access to rights managed content.","pos":[0,69]}]},{"pos":[5409,5505],"content":"A secure client session for activation, license binding, and other rights management operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"A secure client session for activation, license binding, and other rights management operations.","pos":[0,96]}]},{"pos":[6380,6601],"content":"Creates a secure client session given an application rights manifest, <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.AuthenticationType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, and <bpt id=\"p2\">&lt;xref href=\"System.Security.RightsManagement.UserActivationMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a secure client session given an application rights manifest, <xref href=\"System.Security.RightsManagement.AuthenticationType\"></xref>, and <xref href=\"System.Security.RightsManagement.UserActivationMode\"></xref>."},{"pos":[6614,7083],"content":"This Create method is intended for new users that are not yet activated.       Activating a new user includes a roundtrip server transaction to obtain the User Certificate and Client License Certificate.       The alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method can be used if a user is already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This Create method is intended for new users that are not yet activated.       Activating a new user includes a roundtrip server transaction to obtain the User Certificate and Client License Certificate.       The alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method can be used if a user is already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.","pos":[0,465],"nodes":[{"content":"This Create method is intended for new users that are not yet activated.","pos":[0,72]},{"content":"Activating a new user includes a roundtrip server transaction to obtain the User Certificate and Client License Certificate.","pos":[79,203]},{"content":"The alternate &lt;xref:System.Security.RightsManagement.SecureEnvironment.Create%2A&gt; method can be used if a user is already activated, such as provided in the list returned from &lt;xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A&gt;.","pos":[210,465],"source":"       The alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method can be used if a user is already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>."}]}]},{"pos":[7814,7846],"content":"The application rights manifest.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application rights manifest.","pos":[0,32]}]},{"pos":[7955,7984],"content":"The method of authentication.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method of authentication.","pos":[0,29]}]},{"pos":[8097,8145],"content":"The type of the user rights account certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the user rights account certificate.","pos":[0,48]}]},{"pos":[8240,8336],"content":"A secure client session for activation, license binding, and other rights management operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"A secure client session for activation, license binding, and other rights management operations.","pos":[0,96]}]},{"pos":[8846,8953],"content":"Releases all resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>."},{"pos":[8966,9775],"content":"The application should call Dispose when finished with the <xref:System.Security.RightsManagement.SecureEnvironment>.  After Dispose is called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> are reclaimed by the garbage collector.  For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call Dispose before the last reference to the <xref:System.Security.RightsManagement.SecureEnvironment> is released.  If Dispose is not called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> will not be freed until the garbage collector calls the instance's <xref:System.Object.Finalize%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The application should call Dispose when finished with the &lt;xref:System.Security.RightsManagement.SecureEnvironment&gt;.","pos":[0,117],"source":"The application should call Dispose when finished with the <xref:System.Security.RightsManagement.SecureEnvironment>."},{"content":"After Dispose is called, resources allocated to the &lt;xref:System.Security.RightsManagement.SecureEnvironment&gt; are reclaimed by the garbage collector.","pos":[119,268],"source":"  After Dispose is called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> are reclaimed by the garbage collector."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[270,444],"source":"  For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Always call Dispose before the last reference to the &lt;xref:System.Security.RightsManagement.SecureEnvironment&gt; is released.","pos":[450,586],"source":"      > [!NOTE] >  Always call Dispose before the last reference to the <xref:System.Security.RightsManagement.SecureEnvironment> is released."},{"content":"If Dispose is not called, resources allocated to the &lt;xref:System.Security.RightsManagement.SecureEnvironment&gt; will not be freed until the garbage collector calls the instance's &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[588,806],"source":"  If Dispose is not called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> will not be freed until the garbage collector calls the instance's <xref:System.Object.Finalize%2A> method."}]},{"pos":[10406,10569],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> and optionally releases the managed resources."},{"pos":[10582,11235],"content":"This method is called by the public <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> method and the <xref:System.Object.Finalize%2A> method. <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> invokes the protected Dispose method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.SecureEnvironment> references. This method invokes the `Dispose()` method of each referenced object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the public &lt;xref:System.Security.RightsManagement.SecureEnvironment.Dispose&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[0,157],"source":"This method is called by the public <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> method and the <xref:System.Object.Finalize%2A> method."},{"content":"&lt;xref:System.Security.RightsManagement.SecureEnvironment.Dispose&gt; invokes the protected Dispose method with the <ph id=\"ph1\">`disposing`</ph> parameter set to <ph id=\"ph2\">`true`</ph>.","pos":[158,306],"source":" <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> invokes the protected Dispose method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id=\"ph1\">`Dispose`</ph> with <ph id=\"ph2\">`disposing`</ph> set to <ph id=\"ph3\">`false`</ph>.","pos":[307,390],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.RightsManagement.SecureEnvironment&gt; references.","pos":[397,581],"source":"       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.SecureEnvironment> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[582,651],"source":" This method invokes the `Dispose()` method of each referenced object."}]},{"pos":[11391,11600],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[12161,12199],"content":"Returns a list of the activated users.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of the activated users.","pos":[0,38]}]},{"pos":[12513,12553],"content":"A list of the currently activated users.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of the currently activated users.","pos":[0,40]}]},{"pos":[13239,13326],"content":"Indicates whether a given user has been activated for accessing rights managed content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether a given user has been activated for accessing rights managed content.","pos":[0,87]}]},{"pos":[13992,14061],"content":"The user or user-group for granting access to rights managed content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user or user-group for granting access to rights managed content.","pos":[0,69]}]},{"pos":[14120,14343],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the given <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">user</ph><ept id=\"p2\">&lt;/code&gt;</ept> has been activated for accessing rights managed content; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the given <code>user</code> has been activated for accessing rights managed content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15047,15099],"content":"Removes the license activation for a specified user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the license activation for a specified user.","pos":[0,52]}]},{"pos":[15111,15215],"content":"The user authentication must be performed either with Windows authentication or Passport authentication.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user authentication must be performed either with Windows authentication or Passport authentication.","pos":[0,104]}]},{"pos":[15438,15484],"content":"The user to remove the license activation for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user to remove the license activation for.","pos":[0,46]}]},{"pos":[15685,15781],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">user</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>user</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15896,16007],"content":"The given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">user</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not authenticated with either Windows authentication or Passport authentication.","needQuote":true,"needEscape":true,"source":"The given <code>user</code> is not authenticated with either Windows authentication or Passport authentication."},{"pos":[16410,16541],"content":"Gets the user or user-group specified when the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> was created.","needQuote":true,"needEscape":true,"source":"Gets the user or user-group specified when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created."},{"pos":[17076,17282],"content":"The user or user-group specified to the &lt;xref:System.Security.RightsManagement.SecureEnvironment.Create*&gt; method when the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> was created.","needQuote":true,"needEscape":true,"source":"The user or user-group specified to the <xref:System.Security.RightsManagement.SecureEnvironment.Create*> method when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.RightsManagement.SecureEnvironment\n  id: SecureEnvironment\n  children:\n  - System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\n  - System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\n  - System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)\n  - System.Security.RightsManagement.SecureEnvironment.Dispose\n  - System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)\n  - System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers\n  - System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)\n  - System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)\n  - System.Security.RightsManagement.SecureEnvironment.User\n  langs:\n  - csharp\n  name: SecureEnvironment\n  nameWithType: SecureEnvironment\n  fullName: System.Security.RightsManagement.SecureEnvironment\n  type: Class\n  summary: Represents a secure client session for user activation, license binding, and other rights management operations.\n  remarks: As with other <xref:System.Security.RightsManagement> types, SecureEnvironment is only usable in full trust applications.\n  example:\n  - \"The following example shows use of the SecureEnvironment class  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubsecenv)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubsecenv)]\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public class SecureEnvironment : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\n  id: ApplicationManifest\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: ApplicationManifest\n  nameWithType: SecureEnvironment.ApplicationManifest\n  fullName: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the ApplicationManifest specified when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created.\n  remarks: ''\n  example:\n  - \"The following example shows use of the ApplicationManifest method.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubsecenv)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubsecenv)]\"\n  syntax:\n    content: public string ApplicationManifest { get; }\n    return:\n      type: System.String\n      description: The application manifest specified to the <xref:System.Security.RightsManagement.SecureEnvironment.Create*> method when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> is created.\n  overload: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\n  id: Create(System.String,System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: Create(String,ContentUser)\n  nameWithType: SecureEnvironment.Create(String,ContentUser)\n  fullName: System.Security.RightsManagement.SecureEnvironment.Create(String,ContentUser)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Creates a secure client session for a specified user with a given rights manifest.\n  remarks: This Create method is intended for use with users that are already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  Use the alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method for users that are not yet activated.\n  example:\n  - \"The following example shows how to use this method to create a secure environment.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubsecenv)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubsecenv)]\"\n  syntax:\n    content: public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.ContentUser user);\n    parameters:\n    - id: applicationManifest\n      type: System.String\n      description: The application rights manifest.\n    - id: user\n      type: System.Security.RightsManagement.ContentUser\n      description: The user or user-group for granting access to rights managed content.\n    return:\n      type: System.Security.RightsManagement.SecureEnvironment\n      description: A secure client session for activation, license binding, and other rights management operations.\n  overload: System.Security.RightsManagement.SecureEnvironment.Create*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)\n  id: Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: Create(String,AuthenticationType,UserActivationMode)\n  nameWithType: SecureEnvironment.Create(String,AuthenticationType,UserActivationMode)\n  fullName: System.Security.RightsManagement.SecureEnvironment.Create(String,AuthenticationType,UserActivationMode)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Creates a secure client session given an application rights manifest, <xref href=\"System.Security.RightsManagement.AuthenticationType\"></xref>, and <xref href=\"System.Security.RightsManagement.UserActivationMode\"></xref>.\n  remarks: \"This Create method is intended for new users that are not yet activated.  \\n  \\n Activating a new user includes a roundtrip server transaction to obtain the User Certificate and Client License Certificate.  \\n  \\n The alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method can be used if a user is already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.\"\n  example:\n  - \"The following example shows how to use this method to create a secure environment.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubsecenv)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubsecenv)]\"\n  syntax:\n    content: public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.AuthenticationType authentication, System.Security.RightsManagement.UserActivationMode userActivationMode);\n    parameters:\n    - id: applicationManifest\n      type: System.String\n      description: The application rights manifest.\n    - id: authentication\n      type: System.Security.RightsManagement.AuthenticationType\n      description: The method of authentication.\n    - id: userActivationMode\n      type: System.Security.RightsManagement.UserActivationMode\n      description: The type of the user rights account certificate.\n    return:\n      type: System.Security.RightsManagement.SecureEnvironment\n      description: A secure client session for activation, license binding, and other rights management operations.\n  overload: System.Security.RightsManagement.SecureEnvironment.Create*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.SecureEnvironment.Dispose\n  id: Dispose\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SecureEnvironment.Dispose()\n  fullName: System.Security.RightsManagement.SecureEnvironment.Dispose()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Releases all resources used by the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.\n  remarks: \"The application should call Dispose when finished with the <xref:System.Security.RightsManagement.SecureEnvironment>.  After Dispose is called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> are reclaimed by the garbage collector.  For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  Always call Dispose before the last reference to the <xref:System.Security.RightsManagement.SecureEnvironment> is released.  If Dispose is not called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> will not be freed until the garbage collector calls the instance's <xref:System.Object.Finalize%2A> method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.RightsManagement.SecureEnvironment.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SecureEnvironment.Dispose(Boolean)\n  fullName: System.Security.RightsManagement.SecureEnvironment.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> method and the <xref:System.Object.Finalize%2A> method. <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> invokes the protected Dispose method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.SecureEnvironment> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.Security.RightsManagement.SecureEnvironment.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers\n  id: GetActivatedUsers\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: GetActivatedUsers()\n  nameWithType: SecureEnvironment.GetActivatedUsers()\n  fullName: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns a list of the activated users.\n  syntax:\n    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentUser> GetActivatedUsers ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentUser}\n      description: A list of the currently activated users.\n  overload: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)\n  id: IsUserActivated(System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: IsUserActivated(ContentUser)\n  nameWithType: SecureEnvironment.IsUserActivated(ContentUser)\n  fullName: System.Security.RightsManagement.SecureEnvironment.IsUserActivated(ContentUser)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Indicates whether a given user has been activated for accessing rights managed content.\n  remarks: ''\n  example:\n  - \"The following example shows use of the IsUserActivated method to determine if given user has been authorized to access rights managed content.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubsecenv)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubsecenv)]\"\n  syntax:\n    content: public static bool IsUserActivated (System.Security.RightsManagement.ContentUser user);\n    parameters:\n    - id: user\n      type: System.Security.RightsManagement.ContentUser\n      description: The user or user-group for granting access to rights managed content.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the given <code>user</code> has been activated for accessing rights managed content; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.RightsManagement.SecureEnvironment.IsUserActivated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)\n  id: RemoveActivatedUser(System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: RemoveActivatedUser(ContentUser)\n  nameWithType: SecureEnvironment.RemoveActivatedUser(ContentUser)\n  fullName: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(ContentUser)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Removes the license activation for a specified user.\n  remarks: The user authentication must be performed either with Windows authentication or Passport authentication.\n  syntax:\n    content: public static void RemoveActivatedUser (System.Security.RightsManagement.ContentUser user);\n    parameters:\n    - id: user\n      type: System.Security.RightsManagement.ContentUser\n      description: The user to remove the license activation for.\n  overload: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>user</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The given <code>user</code> is not authenticated with either Windows authentication or Passport authentication.\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.SecureEnvironment.User\n  id: User\n  parent: System.Security.RightsManagement.SecureEnvironment\n  langs:\n  - csharp\n  name: User\n  nameWithType: SecureEnvironment.User\n  fullName: System.Security.RightsManagement.SecureEnvironment.User\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the user or user-group specified when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created.\n  remarks: ''\n  example:\n  - \"The following example shows use of the User property  \\n  \\n [!code-vb[RightsManagedPackageViewer#RmPkgViewSecEnv](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewsecenv)]\\n [!code-cs[RightsManagedPackageViewer#RmPkgViewSecEnv](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewsecenv)]\"\n  syntax:\n    content: public System.Security.RightsManagement.ContentUser User { get; }\n    return:\n      type: System.Security.RightsManagement.ContentUser\n      description: The user or user-group specified to the <xref:System.Security.RightsManagement.SecureEnvironment.Create*> method when the <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref> was created.\n  overload: System.Security.RightsManagement.SecureEnvironment.User*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: ApplicationManifest\n  nameWithType: SecureEnvironment.ApplicationManifest\n  fullName: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Create(String,ContentUser)\n  nameWithType: SecureEnvironment.Create(String,ContentUser)\n  fullName: System.Security.RightsManagement.SecureEnvironment.Create(String,ContentUser)\n- uid: System.Security.RightsManagement.SecureEnvironment\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: SecureEnvironment\n  nameWithType: SecureEnvironment\n  fullName: System.Security.RightsManagement.SecureEnvironment\n- uid: System.Security.RightsManagement.ContentUser\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: ContentUser\n  nameWithType: ContentUser\n  fullName: System.Security.RightsManagement.ContentUser\n- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Create(String,AuthenticationType,UserActivationMode)\n  nameWithType: SecureEnvironment.Create(String,AuthenticationType,UserActivationMode)\n  fullName: System.Security.RightsManagement.SecureEnvironment.Create(String,AuthenticationType,UserActivationMode)\n- uid: System.Security.RightsManagement.AuthenticationType\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: AuthenticationType\n  fullName: System.Security.RightsManagement.AuthenticationType\n- uid: System.Security.RightsManagement.UserActivationMode\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: UserActivationMode\n  nameWithType: UserActivationMode\n  fullName: System.Security.RightsManagement.UserActivationMode\n- uid: System.Security.RightsManagement.SecureEnvironment.Dispose\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Dispose()\n  nameWithType: SecureEnvironment.Dispose()\n  fullName: System.Security.RightsManagement.SecureEnvironment.Dispose()\n- uid: System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SecureEnvironment.Dispose(Boolean)\n  fullName: System.Security.RightsManagement.SecureEnvironment.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: GetActivatedUsers()\n  nameWithType: SecureEnvironment.GetActivatedUsers()\n  fullName: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentUser}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ContentUser>\n  nameWithType: ReadOnlyCollection<ContentUser>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentUser>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Security.RightsManagement.ContentUser>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.RightsManagement.ContentUser\n    name: ContentUser\n    nameWithType: ContentUser\n    fullName: ContentUser\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: IsUserActivated(ContentUser)\n  nameWithType: SecureEnvironment.IsUserActivated(ContentUser)\n  fullName: System.Security.RightsManagement.SecureEnvironment.IsUserActivated(ContentUser)\n- uid: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: RemoveActivatedUser(ContentUser)\n  nameWithType: SecureEnvironment.RemoveActivatedUser(ContentUser)\n  fullName: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(ContentUser)\n- uid: System.Security.RightsManagement.SecureEnvironment.User\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: User\n  nameWithType: SecureEnvironment.User\n  fullName: System.Security.RightsManagement.SecureEnvironment.User\n- uid: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: ApplicationManifest\n  nameWithType: SecureEnvironment.ApplicationManifest\n- uid: System.Security.RightsManagement.SecureEnvironment.Create*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Create\n  nameWithType: SecureEnvironment.Create\n- uid: System.Security.RightsManagement.SecureEnvironment.Dispose*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: Dispose\n  nameWithType: SecureEnvironment.Dispose\n- uid: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: GetActivatedUsers\n  nameWithType: SecureEnvironment.GetActivatedUsers\n- uid: System.Security.RightsManagement.SecureEnvironment.IsUserActivated*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: IsUserActivated\n  nameWithType: SecureEnvironment.IsUserActivated\n- uid: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: RemoveActivatedUser\n  nameWithType: SecureEnvironment.RemoveActivatedUser\n- uid: System.Security.RightsManagement.SecureEnvironment.User*\n  parent: System.Security.RightsManagement.SecureEnvironment\n  isExternal: false\n  name: User\n  nameWithType: SecureEnvironment.User\n"}