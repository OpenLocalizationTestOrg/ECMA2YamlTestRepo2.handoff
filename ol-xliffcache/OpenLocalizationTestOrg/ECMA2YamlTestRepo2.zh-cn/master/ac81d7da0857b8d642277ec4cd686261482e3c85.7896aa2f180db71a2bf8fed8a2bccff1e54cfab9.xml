{"nodes":[{"pos":[547,729],"content":"Associates a key string with <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticResultValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values to define <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Associates a key string with <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> values to define <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects."},{"pos":[742,2287],"content":"The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.       Using SemanticResultKey objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.       You can use <xref:System.Speech.Recognition.SemanticResultValue> and SemanticResultKey objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar. To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.       For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and SemanticResultKey objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043).","needQuote":false,"needEscape":true,"nodes":[{"content":"The basic unit of semantic expression in System.Speech is the &lt;xref:System.Speech.Recognition.SemanticValue&gt;, which is a key/value pair.","pos":[0,136],"source":"The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair."},{"content":"Using SemanticResultKey objects, you tag &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; instances contained in &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; objects and strings so that the values may readily be accessed from &lt;xref:System.Speech.Recognition.SemanticValue&gt; instances on recognition.","pos":[143,448],"source":"       Using SemanticResultKey objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition."},{"content":"You can use &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; and SemanticResultKey objects, in conjunction with &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; and &lt;xref:System.Speech.Recognition.Choices&gt; objects, to define the semantic structure for a speech recognition grammar.","pos":[455,739],"source":"       You can use <xref:System.Speech.Recognition.SemanticResultValue> and SemanticResultKey objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar."},{"content":"To access the semantic information in a recognition result, obtain an instance of &lt;xref:System.Speech.Recognition.SemanticValue&gt; through the &lt;xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A&gt; property on &lt;xref:System.Speech.Recognition.RecognizedPhrase&gt;.","pos":[740,1006],"source":" To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>."},{"content":"For more information about using &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; and SemanticResultKey objects, see <bpt id=\"p1\">[</bpt>Understanding SemanticResultValue and SemanticResultKey Objects<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c)</ept> and <bpt id=\"p2\">[</bpt>Using a SemanticResultKey to Extract a SemanticResultValue<ept id=\"p2\">](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa)</ept> in the <bpt id=\"p3\">[</bpt>System Speech Programming Guide for .NET Framework 4.0<ept id=\"p3\">](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043)</ept>.","pos":[1013,1539],"source":"       For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and SemanticResultKey objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043)."}]},{"pos":[5201,5353],"content":"Assigns a semantic key to one or more <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.GrammarBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects used to create a speech recognition grammar.","needQuote":true,"needEscape":true,"source":"Assigns a semantic key to one or more <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> objects used to create a speech recognition grammar."},{"pos":[5366,8679],"content":"Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well. For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.       When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential. For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized.      ```c#   SemanticResultKey stringTest=new SemanticResultKey(       \"stringTest\", new GrammarBuilder[] {       new GrammarBuilder(\"the\"),       new GrammarBuilder(\"quick\"),       new GrammarBuilder(\"brown\"),       new GrammarBuilder(\"fox\")});   ```       The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.       The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.       If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.       If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.       There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter. If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result. This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.       Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.","needQuote":false,"needEscape":true,"nodes":[{"content":"Because of implicit conversions, the <ph id=\"ph1\">`builders`</ph> argument supports &lt;xref:System.Speech.Recognition.SemanticResultValue&gt;, &lt;xref:System.Speech.Recognition.SemanticResultKey&gt;, &lt;xref:System.Speech.Recognition.Choices&gt;, and &lt;xref:System.String&gt; objects as well.","pos":[0,255],"source":"Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well."},{"content":"For more information on implicit conversions, see &lt;xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A&gt;.","pos":[256,369],"source":" For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>."},{"content":"When performing a recognition operation, the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; objects provided in the <ph id=\"ph1\">`builders`</ph> argument are treated as sequential.","pos":[376,539],"source":"       When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential."},{"content":"For example, if the following &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; is used to construct a &lt;xref:System.Speech.Recognition.Grammar&gt;, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized.","pos":[540,794],"source":" For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized."},{"content":"<ph id=\"ph1\">```c#   SemanticResultKey stringTest=new SemanticResultKey(       \"stringTest\", new GrammarBuilder[] {       new GrammarBuilder(\"the\"),       new GrammarBuilder(\"quick\"),       new GrammarBuilder(\"brown\"),       new GrammarBuilder(\"fox\")});   ```</ph>       The <ph id=\"ph2\">`semanticResultKey`</ph> argument contains the tag used to access the &lt;xref:System.Speech.Recognition.SemanticValue&gt; which might be returned.","pos":[800,1193],"source":"```c#   SemanticResultKey stringTest=new SemanticResultKey(       \"stringTest\", new GrammarBuilder[] {       new GrammarBuilder(\"the\"),       new GrammarBuilder(\"quick\"),       new GrammarBuilder(\"brown\"),       new GrammarBuilder(\"fox\")});   ```       The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned."},{"content":"The &lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt; of the &lt;xref:System.Speech.Recognition.SemanticValue&gt; is determined by the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; instances provided by the <ph id=\"ph1\">`builders`</ph> parameter.","pos":[1200,1430],"source":"       The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter."},{"content":"If the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; objects contain no defining instances of &lt;xref:System.Speech.Recognition.SemanticResultValue&gt;, the value of the &lt;xref:System.Speech.Recognition.SemanticValue&gt; is <ph id=\"ph1\">`null`</ph>.","pos":[1437,1661],"source":"       If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`."},{"content":"If the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; objects provided in the <ph id=\"ph1\">`builders`</ph> parameter provide an untagged (not associated with a &lt;xref:System.Speech.Recognition.SemanticResultKey&gt; object) &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; instance that is used by the recognition logic, that instance of &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; will define the &lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt; property of the &lt;xref:System.Speech.Recognition.SemanticValue&gt; that is produced.","pos":[1668,2193],"source":"       If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced."},{"content":"There should be one, and only one, untagged &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; instance in the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; objects specified by the <ph id=\"ph1\">`builders`</ph> parameter.","pos":[2200,2407],"source":"       There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter."},{"content":"If multiple instances of untagged &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; are associated with the &lt;xref:System.Speech.Recognition.SemanticResultKey&gt;, each will attempt to the set the value of the &lt;xref:System.Speech.Recognition.SemanticValue&gt; produced in the recognition result.","pos":[2408,2699],"source":" If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result."},{"content":"This is not permitted, and the recognizer will generate an exception when it attempts to use a &lt;xref:System.Speech.Recognition.Grammar&gt; created using such a &lt;xref:System.Speech.Recognition.SemanticResultKey&gt; instance.","pos":[2700,2917],"source":" This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance."},{"content":"Instances of &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; contained in the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; objects specified by the <ph id=\"ph1\">`builders`</ph> parameter and already associated with another &lt;xref:System.Speech.Recognition.SemanticResultKey&gt; have no effect on the current &lt;xref:System.Speech.Recognition.SemanticResultKey&gt; instance.","pos":[2924,3278],"source":"       Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance."}]},{"pos":[11196,11444],"content":"The tag to be used as a semantic key to access the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance associated with the <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.GrammarBuilder\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects specified by the <ph id=\"ph1\">`builders`</ph> argument.","needQuote":true,"needEscape":true,"source":"The tag to be used as a semantic key to access the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance associated with the <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> objects specified by the `builders` argument."},{"pos":[11538,11723],"content":"An array of grammar components that will be associated with a <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object accessible with the tag defined in <ph id=\"ph1\">`semanticResultKey`</ph>.","needQuote":true,"needEscape":true,"source":"An array of grammar components that will be associated with a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object accessible with the tag defined in `semanticResultKey`."},{"pos":[12339,12452],"content":"Assigns a semantic key to one or more <xref:System.String> instances used to create a speech recognition grammar.","needQuote":true,"needEscape":true,"nodes":[{"content":"Assigns a semantic key to one or more &lt;xref:System.String&gt; instances used to create a speech recognition grammar.","pos":[0,113],"source":"Assigns a semantic key to one or more <xref:System.String> instances used to create a speech recognition grammar."}]},{"pos":[12465,13905],"content":"When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential. For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized.      ```c#   SemanticResultKey stringTest=new SemanticResultKey(\"stringTest\",                                    new string[] {                                                  \"the\",                                                  \"quick\",                                                  \"brown\",                                                  \"fox\"});   ```       The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.       If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition. In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be \"the quick brown fox\".","needQuote":false,"needEscape":true,"nodes":[{"content":"When performing a recognition operation, the &lt;xref:System.String&gt; objects used in the <ph id=\"ph1\">`phrases`</ph> parameter are treated as sequential.","pos":[0,132],"source":"When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential."},{"content":"For example, if the following &lt;xref:System.Speech.Recognition.SemanticResultValue&gt; is used to construct a &lt;xref:System.Speech.Recognition.Grammar&gt;, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized.","pos":[133,387],"source":" For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \"the quick brown fox\" in sequence to be recognized."},{"content":"<ph id=\"ph1\">```c#   SemanticResultKey stringTest=new SemanticResultKey(\"stringTest\",                                    new string[] {                                                  \"the\",                                                  \"quick\",                                                  \"brown\",                                                  \"fox\"});   ```</ph>       The <ph id=\"ph2\">`semanticResultKey`</ph> argument determines the key used to access the &lt;xref:System.Speech.Recognition.SemanticValue&gt; which might be returned.","pos":[393,900],"source":"```c#   SemanticResultKey stringTest=new SemanticResultKey(\"stringTest\",                                    new string[] {                                                  \"the\",                                                  \"quick\",                                                  \"brown\",                                                  \"fox\"});   ```       The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned."},{"content":"If you construct a &lt;xref:System.Speech.Recognition.Grammar&gt; using a &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; object that contains a semantic key with an array of string objects,  the &lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt; of the &lt;xref:System.Speech.Recognition.SemanticValue&gt; produced by a recognition operation  will be the string used in recognition.","pos":[907,1283],"source":"       If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition."},{"content":"In the preceding example, this means that &lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt; would be \"the quick brown fox\".","pos":[1284,1413],"source":" In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be \"the quick brown fox\"."}]},{"pos":[15566,15750],"content":"The tag to be used access the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance associated with the &lt;xref:System.String&gt;objects specified by the <ph id=\"ph1\">`phrases`</ph> argument.","needQuote":true,"needEscape":true,"source":"The tag to be used access the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance associated with the <xref:System.String>objects specified by the `phrases` argument."},{"pos":[15816,16031],"content":"One or more &lt;xref:System.String&gt; objects, whose concatenated text will be associated with a <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object accessible with the tag defined in <ph id=\"ph1\">`semanticResultKey`</ph>.","needQuote":true,"needEscape":true,"source":"One or more <xref:System.String> objects, whose concatenated text will be associated with a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object accessible with the tag defined in `semanticResultKey`."},{"pos":[16552,16740],"content":"Returns an instance of <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.GrammarBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> constructed from the current <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SemanticResultKey\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultKey\"></xref> instance."},{"pos":[16752,17108],"content":"The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).","needQuote":true,"needEscape":true,"nodes":[{"content":"The use of &lt;xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A&gt; is equivalent to using the &lt;xref:System.Speech.Recognition.GrammarBuilder&gt; constructor which takes &lt;xref:System.Speech.Recognition.SemanticResultKey&gt; as an argument (&lt;xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29&gt;).","pos":[0,356],"source":"The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>)."}]},{"pos":[19820,20008],"content":"Returns an instance of <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.GrammarBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> constructed from the current <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SemanticResultKey\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultKey\"></xref> instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SemanticResultKey\n  id: SemanticResultKey\n  children:\n  - System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])\n  - System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])\n  - System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder\n  langs:\n  - csharp\n  name: SemanticResultKey\n  nameWithType: SemanticResultKey\n  fullName: System.Speech.Recognition.SemanticResultKey\n  type: Class\n  summary: Associates a key string with <xref href=\"System.Speech.Recognition.SemanticResultValue\"></xref> values to define <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects.\n  remarks: \"The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.  \\n  \\n Using SemanticResultKey objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.  \\n  \\n You can use <xref:System.Speech.Recognition.SemanticResultValue> and SemanticResultKey objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar. To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.  \\n  \\n For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and SemanticResultKey objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/en-us/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/en-us/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/en-us/610116c7-3817-40ff-857b-5d41e8511043).\"\n  example:\n  - \"The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form \\\"My password is …\\\", where the actual input is matched with a wildcard.  \\n  \\n The wildcard is tagged with a semantic key, and the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag to verify that a password input has occurred.  \\n  \\n```c#  \\nprivate void pwdGrammar()   \\n{  \\n  GrammarBuilder pwdBuilder = new GrammarBuilder(\\\"My Password is\\\");  \\n  GrammarBuilder wildcardBuilder = new GrammarBuilder();  \\n  wildcardBuilder.AppendWildcard();  \\n  SemanticResultKey wildcardKey= new SemanticResultKey(\\\"Password\\\", wildcardBuilder);  \\n  pwdBuilder+=wildcardKey;  \\n  Grammar grammar = new Grammar(pwdBuilder);  \\n  grammar.Name = \\\"Password input\\\";  \\n  \\n  grammar.SpeechRecognized += delegate(object sender, SpeechRecognizedEventArgs eventArgs)   \\n  {  \\n    SemanticValue semantics = eventArgs.Result.Semantics;  \\n    RecognitionResult result=eventArgs.Result;  \\n  \\n    if (!semantics.ContainsKey(\\\"Password\\\"))   \\n    {  \\n      SpeechUI.SendTextFeedback(eventArgs.Result, \\\"No Password Provided\\\", false);  \\n    }  \\n    else   \\n    {  \\n      RecognizedAudio pwdAudio = result.GetAudioForWordRange(result.Words[3], result.Words[result.Words.Count - 1]);  \\n      MemoryStream pwdMemoryStream = new MemoryStream();  \\n      pwdAudio.WriteToAudioStream(pwdMemoryStream);  \\n      if (!IsValidPwd(pwdMemoryStream))   \\n      {  \\n        string badPwd = System.IO.Path.GetTempPath() + \\\"BadPwd\\\" + (new Random()).Next().ToString() + \\\".wav\\\";  \\n        FileStream waveStream = new FileStream(badPwd, FileMode.Create);  \\n        pwdAudio.WriteToWaveStream(waveStream);  \\n        waveStream.Flush();  \\n        waveStream.Close();  \\n        SpeechUI.SendTextFeedback(eventArgs.Result, \\\"Invalid Password\\\", false);  \\n  \\n      }  \\n    }  \\n  };  \\n  grammar.Enabled = true;  \\n  _recognizer.LoadGrammar(grammar);  \\n  UpdateGrammarTree(_grammarTreeView, _recognizer);  \\n  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{_semanticKey.DebugSummary}\")]\n\n      public class SemanticResultKey\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])\n  id: '#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])'\n  parent: System.Speech.Recognition.SemanticResultKey\n  langs:\n  - csharp\n  name: SemanticResultKey(String,GrammarBuilder[])\n  nameWithType: SemanticResultKey.SemanticResultKey(String,GrammarBuilder[])\n  fullName: System.Speech.Recognition.SemanticResultKey.SemanticResultKey(String,GrammarBuilder[])\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Assigns a semantic key to one or more <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> objects used to create a speech recognition grammar.\n  remarks: \"Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well. For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.  \\n  \\n When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential. For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \\\"the quick brown fox\\\" in sequence to be recognized.  \\n  \\n```c#  \\nSemanticResultKey stringTest=new SemanticResultKey(  \\n    \\\"stringTest\\\", new GrammarBuilder[] {  \\n    new GrammarBuilder(\\\"the\\\"),  \\n    new GrammarBuilder(\\\"quick\\\"),  \\n    new GrammarBuilder(\\\"brown\\\"),  \\n    new GrammarBuilder(\\\"fox\\\")});  \\n```  \\n  \\n The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.  \\n  \\n The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.  \\n  \\n If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.  \\n  \\n If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.  \\n  \\n There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter. If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result. This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.  \\n  \\n Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.\"\n  example:\n  - \"The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form \\\"My password is …\\\", where the actual input is matched with a wildcard.  \\n  \\n The wildcard is tagged by a <xref:System.Speech.Recognition.SpeechRecognizer> whose key value is \\\"Password\\\". The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag, obtains the audio input of the password, and verifies the password.  \\n  \\n```c#  \\nprivate void pwdGrammar()   \\n{  \\n  GrammarBuilder pwdBuilder = new GrammarBuilder(\\\"My Password is\\\");  \\n  GrammarBuilder wildcardBuilder = new GrammarBuilder();  \\n  wildcardBuilder.AppendWildcard();  \\n  SemanticResultKey wildcardKey= new SemanticResultKey(\\\"Password\\\", wildcardBuilder);  \\n  pwdBuilder+=wildcardKey;  \\n  Grammar grammar = new Grammar(pwdBuilder);  \\n  grammar.Name = \\\"Password input\\\";  \\n  \\n  grammar.SpeechRecognized +=   \\n    delegate(object sender, SpeechRecognizedEventArgs eventArgs)   \\n    {  \\n      SemanticValue semantics = eventArgs.Result.Semantics;  \\n      RecognitionResult result=eventArgs.Result;  \\n  \\n      if (!semantics.ContainsKey(\\\"Password\\\"))   \\n      {  \\n        SpeechUI.SendTextFeedback(eventArgs.Result, \\\"No Password Provided\\\", false);  \\n      }  \\n      else   \\n      {  \\n        RecognizedAudio pwdAudio = result.GetAudioForWordRange(  \\n                  result.Words[3],  \\n                  result.Words[result.Words.Count - 1]);  \\n                  MemoryStream pwdMemoryStream = new MemoryStream();  \\n                  pwdAudio.WriteToAudioStream(pwdMemoryStream);  \\n        if (!IsValidPwd(pwdMemoryStream))   \\n        {  \\n          string badPwd = System.IO.Path.GetTempPath() + \\\"BadPwd\\\" + (new Random()).Next().ToString() + \\\".wav\\\";  \\n          FileStream waveStream = new FileStream(badPwd, FileMode.Create);    \\n          pwdAudio.WriteToWaveStream(waveStream);  \\n          waveStream.Flush();  \\n          waveStream.Close();  \\n          SpeechUI.SendTextFeedback(eventArgs.Result, \\\"Invalid Password\\\", false);      \\n        }  \\n      }  \\n    };  \\n  \\n  grammar.Enabled = true;  \\n  _recognizer.LoadGrammar(grammar);  \\n  UpdateGrammarTree(_grammarTreeView, _recognizer);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public SemanticResultKey (string semanticResultKey, System.Speech.Recognition.GrammarBuilder[] builders);\n    parameters:\n    - id: semanticResultKey\n      type: System.String\n      description: The tag to be used as a semantic key to access the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance associated with the <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> objects specified by the `builders` argument.\n    - id: builders\n      type: System.Speech.Recognition.GrammarBuilder[]\n      description: An array of grammar components that will be associated with a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object accessible with the tag defined in `semanticResultKey`.\n  overload: System.Speech.Recognition.SemanticResultKey.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])\n  id: '#ctor(System.String,System.String[])'\n  parent: System.Speech.Recognition.SemanticResultKey\n  langs:\n  - csharp\n  name: SemanticResultKey(String,String[])\n  nameWithType: SemanticResultKey.SemanticResultKey(String,String[])\n  fullName: System.Speech.Recognition.SemanticResultKey.SemanticResultKey(String,String[])\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Assigns a semantic key to one or more <xref:System.String> instances used to create a speech recognition grammar.\n  remarks: \"When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential. For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words \\\"the quick brown fox\\\" in sequence to be recognized.  \\n  \\n```c#  \\nSemanticResultKey stringTest=new SemanticResultKey(\\\"stringTest\\\",   \\n                                new string[] {  \\n                                               \\\"the\\\",  \\n                                               \\\"quick\\\",  \\n                                               \\\"brown\\\",  \\n                                               \\\"fox\\\"});  \\n```  \\n  \\n The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.  \\n  \\n If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition. In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be \\\"the quick brown fox\\\".\"\n  example:\n  - \"The following example creates a <xref:System.Speech.Recognition.Grammar> from a <xref:System.Speech.Recognition.GrammarBuilder> object that uses a <xref:System.Speech.Recognition.SemanticResultKey>, which is defined by an array of <xref:System.String> objects.  \\n  \\n A recognition engine using the <xref:System.Speech.Recognition.Grammar> created will recognize the phrase \\\"color red green blue zero\\\". The semantics of the <xref:System.Speech.Recognition.RecognizedPhrase> returned by recognition will contain a <xref:System.Speech.Recognition.SemanticValue> with a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of \\\"red green blue\\\". You can access the <xref:System.Speech.Recognition.SemanticValue> using the \\\"code\\\" tag.  \\n  \\n Because of the `SemanticResultValue(\\\"zero\\\", 5)` appended to the <xref:System.Speech.Recognition.GrammarBuilder>, the root <xref:System.Speech.Recognition.SemanticValue> object in the <xref:System.Speech.Recognition.RecognizedPhrase> will have a value of 5.  \\n  \\n```c#  \\nprivate void keyTest()   \\n{  \\n  // Say \\\"color red green blue zero\\\"  \\n  GrammarBuilder gb = new GrammarBuilder(\\\"color\\\") +  \\n                        new SemanticResultKey(\\\"code\\\",   \\n                          (new string[] {\\\"red\\\", \\\"green\\\", \\\"blue\\\"})) +  \\n                        new SemanticResultValue(\\\"zero\\\", 5);  \\n  Grammar g = new Grammar(gb);  \\n  g.Name = \\\"keyTest\\\";  \\n  _recognizer.LoadGrammar(g);  \\n}  \\n```\"\n  syntax:\n    content: public SemanticResultKey (string semanticResultKey, string[] phrases);\n    parameters:\n    - id: semanticResultKey\n      type: System.String\n      description: The tag to be used access the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance associated with the <xref:System.String>objects specified by the `phrases` argument.\n    - id: phrases\n      type: System.String[]\n      description: One or more <xref:System.String> objects, whose concatenated text will be associated with a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object accessible with the tag defined in `semanticResultKey`.\n  overload: System.Speech.Recognition.SemanticResultKey.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder\n  id: ToGrammarBuilder\n  parent: System.Speech.Recognition.SemanticResultKey\n  langs:\n  - csharp\n  name: ToGrammarBuilder()\n  nameWithType: SemanticResultKey.ToGrammarBuilder()\n  fullName: System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultKey\"></xref> instance.\n  remarks: The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).\n  example:\n  - \"The following example creates a <xref:System.Speech.Recognition.Grammar> object that supports commands to change the background color.  \\n  \\n A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the [Add(GrammarBuilder\\\\[\\\\])](assetId:///M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])?qualifyHint=False&autoUpgrade=False) method with <xref:System.Speech.Recognition.GrammarBuilder> instances. The <xref:System.Speech.Recognition.GrammarBuilder> instances are obtained through the ToGrammarBuilder method on the <xref:System.Speech.Recognition.SemanticResultValue> objects created from color strings.  \\n  \\n A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling ToGrammarBuilder on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in `colorChoice`.  \\n  \\n```c#  \\n  \\nprivate Grammar CreateGrammarBuilderRGBSemantics()   \\n{  \\n  \\n  // Create a set of choices, each a lookup from a color name to RGB.  \\n  // Choices constructors do not take SemanticResultValue parameters, so cast   \\n  // the SemanticResultValue to GrammarBuilder.  \\n  Choices colorChoice = new Choices();  \\n  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   \\n  {  \\n    SemanticResultValue colorValue=new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  \\n  \\n    // Use implicit conversion of SemanticResultValue to GrammarBuilder.  \\n    colorChoice.Add(colorValue.ToGrammarBuilder());      \\n  }  \\n  SemanticResultKey choiceKey = new SemanticResultKey(\\\"rgb\\\", colorChoice);  \\n  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  \\n  \\n  // Create two intermediate grammars with introductory phrase and the color choice.  \\n  GrammarBuilder makeBackgroundBuilder = \\\"Make background\\\";  \\n  makeBackgroundBuilder.Append(choiceBuilder);  \\n  \\n  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder(\\\"Configure background as\\\");  \\n  configureBackgroundBuilder.Append((new SemanticResultKey(\\\"rgb\\\", colorChoice)).ToGrammarBuilder());  \\n  \\n  // Create the Grammar object, which recognizes either intermediate grammar.  \\n  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] {makeBackgroundBuilder, configureBackgroundBuilder}));  \\n  grammar.Name = \\\"Make Background /Configure background as\\\";  \\n  \\n  return grammar;  \\n}  \\n  \\n```\"\n  syntax:\n    content: public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();\n    parameters: []\n    return:\n      type: System.Speech.Recognition.GrammarBuilder\n      description: Returns an instance of <xref href=\"System.Speech.Recognition.GrammarBuilder\"></xref> constructed from the current <xref href=\"System.Speech.Recognition.SemanticResultKey\"></xref> instance.\n  overload: System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])\n  parent: System.Speech.Recognition.SemanticResultKey\n  isExternal: false\n  name: SemanticResultKey(String,GrammarBuilder[])\n  nameWithType: SemanticResultKey.SemanticResultKey(String,GrammarBuilder[])\n  fullName: System.Speech.Recognition.SemanticResultKey.SemanticResultKey(String,GrammarBuilder[])\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Speech.Recognition.GrammarBuilder[]\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: GrammarBuilder\n  nameWithType: GrammarBuilder\n  fullName: System.Speech.Recognition.GrammarBuilder[]\n  spec.csharp:\n  - uid: System.Speech.Recognition.GrammarBuilder\n    name: GrammarBuilder\n    nameWithType: GrammarBuilder\n    fullName: GrammarBuilder[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])\n  parent: System.Speech.Recognition.SemanticResultKey\n  isExternal: false\n  name: SemanticResultKey(String,String[])\n  nameWithType: SemanticResultKey.SemanticResultKey(String,String[])\n  fullName: System.Speech.Recognition.SemanticResultKey.SemanticResultKey(String,String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder\n  parent: System.Speech.Recognition.SemanticResultKey\n  isExternal: false\n  name: ToGrammarBuilder()\n  nameWithType: SemanticResultKey.ToGrammarBuilder()\n  fullName: System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder()\n- uid: System.Speech.Recognition.GrammarBuilder\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: GrammarBuilder\n  nameWithType: GrammarBuilder\n  fullName: System.Speech.Recognition.GrammarBuilder\n- uid: System.Speech.Recognition.SemanticResultKey.#ctor*\n  parent: System.Speech.Recognition.SemanticResultKey\n  isExternal: false\n  name: SemanticResultKey\n  nameWithType: SemanticResultKey.SemanticResultKey\n- uid: System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder*\n  parent: System.Speech.Recognition.SemanticResultKey\n  isExternal: false\n  name: ToGrammarBuilder\n  nameWithType: SemanticResultKey.ToGrammarBuilder\n"}