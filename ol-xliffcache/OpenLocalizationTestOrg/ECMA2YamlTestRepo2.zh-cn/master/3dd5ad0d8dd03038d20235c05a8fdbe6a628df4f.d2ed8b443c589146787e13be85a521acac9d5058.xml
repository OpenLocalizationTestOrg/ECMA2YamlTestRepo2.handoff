{"nodes":[{"pos":[1803,1901],"content":"Authenticates a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token.","needQuote":true,"needEscape":true,"source":"Authenticates a <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token."},{"pos":[1913,2043],"content":"Use the SamlSecurityTokenAuthenticator class to authenticate <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the SamlSecurityTokenAuthenticator class to authenticate &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security tokens.","pos":[0,130],"source":"Use the SamlSecurityTokenAuthenticator class to authenticate <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens."}]},{"pos":[3377,3542],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified set of authenticators.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> class using the specified set of authenticators."},{"pos":[3898,4174],"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id=\"ph2\">&amp;gt;</ph> of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the authenticators to authenticate the issuer's <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> security tokens.","needQuote":true,"needEscape":true,"source":"An &lt;xref:System.Collections.Generic.IList%601&gt; of <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> that contains the authenticators to authenticate the issuer's <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> security tokens."},{"pos":[5163,5408],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified set of authenticators and the maximum allowable difference between the sender's and receiver's clocks.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> class using the specified set of authenticators and the maximum allowable difference between the sender's and receiver's clocks."},{"pos":[5787,6063],"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id=\"ph2\">&amp;gt;</ph> of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the authenticators to authenticate the issuer's <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> security tokens.","needQuote":true,"needEscape":true,"source":"An &lt;xref:System.Collections.Generic.IList%601&gt; of <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> that contains the authenticators to authenticate the issuer's <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> security tokens."},{"pos":[6134,6251],"content":"A <xref:System.TimeSpan> that represents the maximum allowable difference between the sender's and receiver's clocks.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that represents the maximum allowable difference between the sender's and receiver's clocks.","pos":[0,117],"source":"A <xref:System.TimeSpan> that represents the maximum allowable difference between the sender's and receiver's clocks."}]},{"pos":[6880,7147],"content":"Gets the set of target URIs for which the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token can be targeted for to be considered valid by this <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the set of target URIs for which the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token can be targeted for to be considered valid by this <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> instance."},{"pos":[7160,8372],"content":"Use the AllowedAudienceUris property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to <xref:System.IdentityModel.Selectors.AudienceUriMode> or <xref:System.IdentityModel.Selectors.AudienceUriMode>.      -   Specify the set of valid URIs, by adding the URIs to the AllowedAudienceUris collection.      -   Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the AllowedAudienceUris property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to <xref:System.IdentityModel.Selectors.AudienceUriMode> or <xref:System.IdentityModel.Selectors.AudienceUriMode>.      -   Specify the set of valid URIs, by adding the URIs to the AllowedAudienceUris collection.      -   Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.","pos":[0,1206],"nodes":[{"content":"Use the AllowedAudienceUris property in a federated application that utilizes a security token service (STS) that issues &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security tokens.","pos":[0,190],"source":"Use the AllowedAudienceUris property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens."},{"content":"When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a &lt;xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&gt; to the security token.","pos":[191,417],"source":" When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token."},{"content":"That allows the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt; for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A&gt; property to &lt;xref:System.IdentityModel.Selectors.AudienceUriMode&gt; or &lt;xref:System.IdentityModel.Selectors.AudienceUriMode&gt;.","pos":[418,903],"source":" That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to <xref:System.IdentityModel.Selectors.AudienceUriMode> or <xref:System.IdentityModel.Selectors.AudienceUriMode>."},{"content":"-   Specify the set of valid URIs, by adding the URIs to the AllowedAudienceUris collection.","pos":[909,1001]},{"content":"-   Optionally, override the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A&gt; method to specify the validation algorithm to use for the allowed URI.","pos":[1007,1206],"source":"      -   Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI."}]}]},{"pos":[8565,8853],"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id=\"ph2\">&amp;gt;</ph> of type &lt;xref:System.String&gt; that contains the target URIs for which the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token can be targeted for to be considered valid by this security token authenticator.","needQuote":true,"needEscape":true,"source":"An &lt;xref:System.Collections.Generic.IList%601&gt; of type <xref:System.String> that contains the target URIs for which the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token can be targeted for to be considered valid by this security token authenticator."},{"pos":[9476,9773],"content":"Gets or sets an <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.AudienceUriMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies whether the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> security token's <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> should be validated.","needQuote":true,"needEscape":true,"source":"Gets or sets an <xref href=\"System.IdentityModel.Selectors.AudienceUriMode\"></xref> that specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated."},{"pos":[9786,11681],"content":"Use the AudienceUriMode property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the AudienceUriMode property to <xref:System.IdentityModel.Selectors.AudienceUriMode> or <xref:System.IdentityModel.Selectors.AudienceUriMode>.      -   Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection.      > [!NOTE] >  When the AudienceUriMode property is set to <xref:System.IdentityModel.Selectors.AudienceUriMode>, an incoming non-endorsing <xref:System.IdentityModel.Tokens.SamlSecurityToken> must contain a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> and the <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences%2A> collection must contain a URI that matches one of the valid URIs specified in the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection. A non-endorsing or bearer token is a security token that is included in the message and not used to sign any part of the message.      -   Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the AudienceUriMode property in a federated application that utilizes a security token service (STS) that issues &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security tokens.","pos":[0,186],"source":"Use the AudienceUriMode property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens."},{"content":"When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a &lt;xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&gt; to the security token.","pos":[187,413],"source":" When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token."},{"content":"That allows the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt; for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the AudienceUriMode property to &lt;xref:System.IdentityModel.Selectors.AudienceUriMode&gt; or &lt;xref:System.IdentityModel.Selectors.AudienceUriMode&gt;.","pos":[414,827],"source":" That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the AudienceUriMode property to <xref:System.IdentityModel.Selectors.AudienceUriMode> or <xref:System.IdentityModel.Selectors.AudienceUriMode>."},{"content":"-   Specify the set of valid URIs, by adding the URIs to the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A&gt; collection.","pos":[833,997],"source":"      -   Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When the AudienceUriMode property is set to &lt;xref:System.IdentityModel.Selectors.AudienceUriMode&gt;, an incoming non-endorsing &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; must contain a &lt;xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&gt; and the &lt;xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences%2A&gt; collection must contain a URI that matches one of the valid URIs specified in the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A&gt; collection.","pos":[1003,1551],"source":"      > [!NOTE] >  When the AudienceUriMode property is set to <xref:System.IdentityModel.Selectors.AudienceUriMode>, an incoming non-endorsing <xref:System.IdentityModel.Tokens.SamlSecurityToken> must contain a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> and the <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences%2A> collection must contain a URI that matches one of the valid URIs specified in the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection."},{"content":"A non-endorsing or bearer token is a security token that is included in the message and not used to sign any part of the message.","pos":[1552,1681]},{"content":"-   Optionally, override the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A&gt; method to specify the validation algorithm to use for the allowed URI.","pos":[1687,1886],"source":"      -   Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI."}]},{"pos":[11880,12164],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.AudienceUriMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies whether the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> security token's <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> should be validated.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.IdentityModel.Selectors.AudienceUriMode\"></xref> that specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated."},{"pos":[12937,13056],"content":"Gets a value that indicates whether the specified security token can be validated by this security token authenticator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified security token can be validated by this security token authenticator.","pos":[0,119]}]},{"pos":[13068,13264],"content":"The CanValidateTokenCore method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CanValidateTokenCore method does not authenticate the security token; that is performed by the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method.","pos":[0,196],"source":"The CanValidateTokenCore method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A> method."}]},{"pos":[13489,13572],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be validated.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."},{"pos":[13631,13878],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">token</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a <bpt id=\"p3\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> security token; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when <code>token</code> is a <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14671,14983],"content":"Resolves the identity associated with the specified key identifier using the supporting security authenticators provided when the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance was created and returns it as a <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Claims.ClaimSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Resolves the identity associated with the specified key identifier using the supporting security authenticators provided when the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> instance was created and returns it as a <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref>."},{"pos":[15263,15359],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get the identity of.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> to get the identity of."},{"pos":[15440,15561],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Claims.ClaimSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the specified key identifier.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that represents the identity of the specified key identifier."},{"pos":[16309,16618],"content":"Resolves the identity associated with the specified security token using the supporting token authenticators provided when the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance was created and returns it as a <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Claims.ClaimSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Resolves the identity associated with the specified security token using the supporting token authenticators provided when the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> instance was created and returns it as a <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref>."},{"pos":[16866,16956],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get the identity of.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to get the identity of."},{"pos":[17037,17158],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Claims.ClaimSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the identity of the specified security token.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that represents the identity of the specified security token."},{"pos":[17946,18250],"content":"Resolves the identity associated with the specified key identifier using the supporting security token authenticators provided when the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance was created and returns it as an &lt;xref:System.Security.Principal.IIdentity&gt;.","needQuote":true,"needEscape":true,"source":"Resolves the identity associated with the specified key identifier using the supporting security token authenticators provided when the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> instance was created and returns it as an <xref:System.Security.Principal.IIdentity>."},{"pos":[18262,18369],"content":"<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens are cached using their key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security tokens are cached using their key identifier.","pos":[0,107],"source":"<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens are cached using their key identifier."}]},{"pos":[18648,18744],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get the identity of.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> to get the identity of."},{"pos":[18824,18931],"content":"An <xref:System.Security.Principal.IIdentity> that represents the identity of the specified key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Security.Principal.IIdentity&gt; that represents the identity of the specified key identifier.","pos":[0,107],"source":"An <xref:System.Security.Principal.IIdentity> that represents the identity of the specified key identifier."}]},{"pos":[19679,19983],"content":"Resolves the identity associated with the specified security token using the supporting security token authenticators provided when the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance was created and returns it as an &lt;xref:System.Security.Principal.IIdentity&gt;.","needQuote":true,"needEscape":true,"source":"Resolves the identity associated with the specified security token using the supporting security token authenticators provided when the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> instance was created and returns it as an <xref:System.Security.Principal.IIdentity>."},{"pos":[20230,20320],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get the identity of.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to get the identity of."},{"pos":[20400,20507],"content":"An <xref:System.Security.Principal.IIdentity> that represents the identity of the specified security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Security.Principal.IIdentity&gt; that represents the identity of the specified security token.","pos":[0,107],"source":"An <xref:System.Security.Principal.IIdentity> that represents the identity of the specified security token."}]},{"pos":[21410,21545],"content":"Validates that the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token was intended for this Web service.","needQuote":true,"needEscape":true,"source":"Validates that the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token was intended for this Web service."},{"pos":[21557,21937],"content":"The ValidateAudienceRestriction method is called by the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A> method when the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property is set to <xref:System.IdentityModel.Selectors.AudienceUriMode> or <xref:System.IdentityModel.Selectors.AudienceUriMode>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ValidateAudienceRestriction method is called by the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method when the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A&gt; property is set to &lt;xref:System.IdentityModel.Selectors.AudienceUriMode&gt; or &lt;xref:System.IdentityModel.Selectors.AudienceUriMode&gt;.","pos":[0,380],"source":"The ValidateAudienceRestriction method is called by the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A> method when the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property is set to <xref:System.IdentityModel.Selectors.AudienceUriMode> or <xref:System.IdentityModel.Selectors.AudienceUriMode>."}]},{"pos":[22252,22490],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the set of target Web services for which the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> security token is intended.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> that specifies the set of target Web services for which the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token is intended."},{"pos":[22549,22950],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences<bpt id=\"p2\">*</bpt>&gt; property of the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">audienceRestrictionCondition</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter is in the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris<ept id=\"p2\">*</ept>&gt; collection; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences*> property of the <code>audienceRestrictionCondition</code> parameter is in the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris*> collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23720,23832],"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","pos":[0,112]}]},{"pos":[24149,24232],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be validated.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."},{"pos":[24376,24622],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the set of authorization policies that result from the security token authentication.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies that result from the security token authentication."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  id: SamlSecurityTokenAuthenticator\n  children:\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)\n  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: SamlSecurityTokenAuthenticator\n  nameWithType: SamlSecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  type: Class\n  summary: Authenticates a <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token.\n  remarks: Use the SamlSecurityTokenAuthenticator class to authenticate <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens.\n  syntax:\n    content: 'public class SamlSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})\n  id: '#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})'\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)\n  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> class using the specified set of authenticators.\n  syntax:\n    content: public SamlSecurityTokenAuthenticator (System.Collections.Generic.IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator> supportingAuthenticators);\n    parameters:\n    - id: supportingAuthenticators\n      type: System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator}\n      description: An &lt;xref:System.Collections.Generic.IList%601&gt; of <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> that contains the authenticators to authenticate the issuer's <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> security tokens.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)\n  id: '#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)'\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)\n  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> class using the specified set of authenticators and the maximum allowable difference between the sender's and receiver's clocks.\n  syntax:\n    content: public SamlSecurityTokenAuthenticator (System.Collections.Generic.IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator> supportingAuthenticators, TimeSpan maxClockSkew);\n    parameters:\n    - id: supportingAuthenticators\n      type: System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator}\n      description: An &lt;xref:System.Collections.Generic.IList%601&gt; of <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> that contains the authenticators to authenticate the issuer's <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> security tokens.\n    - id: maxClockSkew\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that represents the maximum allowable difference between the sender's and receiver's clocks.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris\n  id: AllowedAudienceUris\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: AllowedAudienceUris\n  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets the set of target URIs for which the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token can be targeted for to be considered valid by this <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> instance.\n  remarks: \"Use the AllowedAudienceUris property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:  \\n  \\n-   Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to <xref:System.IdentityModel.Selectors.AudienceUriMode> or <xref:System.IdentityModel.Selectors.AudienceUriMode>.  \\n  \\n-   Specify the set of valid URIs, by adding the URIs to the AllowedAudienceUris collection.  \\n  \\n-   Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.\"\n  syntax:\n    content: public System.Collections.Generic.IList<string> AllowedAudienceUris { get; }\n    return:\n      type: System.Collections.Generic.IList{System.String}\n      description: An &lt;xref:System.Collections.Generic.IList%601&gt; of type <xref:System.String> that contains the target URIs for which the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token can be targeted for to be considered valid by this security token authenticator.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode\n  id: AudienceUriMode\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: AudienceUriMode\n  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets or sets an <xref href=\"System.IdentityModel.Selectors.AudienceUriMode\"></xref> that specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated.\n  remarks: \"Use the AudienceUriMode property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:  \\n  \\n-   Set the AudienceUriMode property to <xref:System.IdentityModel.Selectors.AudienceUriMode> or <xref:System.IdentityModel.Selectors.AudienceUriMode>.  \\n  \\n-   Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection.  \\n  \\n> [!NOTE]\\n>  When the AudienceUriMode property is set to <xref:System.IdentityModel.Selectors.AudienceUriMode>, an incoming non-endorsing <xref:System.IdentityModel.Tokens.SamlSecurityToken> must contain a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> and the <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences%2A> collection must contain a URI that matches one of the valid URIs specified in the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection. A non-endorsing or bearer token is a security token that is included in the message and not used to sign any part of the message.  \\n  \\n-   Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.\"\n  syntax:\n    content: public System.IdentityModel.Selectors.AudienceUriMode AudienceUriMode { get; set; }\n    return:\n      type: System.IdentityModel.Selectors.AudienceUriMode\n      description: An <xref href=\"System.IdentityModel.Selectors.AudienceUriMode\"></xref> that specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value that indicates whether the specified security token can be validated by this security token authenticator.\n  remarks: The CanValidateTokenCore method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A> method.\n  syntax:\n    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when <code>token</code> is a <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  id: ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ResolveClaimSet(SecurityKeyIdentifier)\n  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Resolves the identity associated with the specified key identifier using the supporting security authenticators provided when the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> instance was created and returns it as a <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref>.\n  syntax:\n    content: public virtual System.IdentityModel.Claims.ClaimSet ResolveClaimSet (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> to get the identity of.\n    return:\n      type: System.IdentityModel.Claims.ClaimSet\n      description: A <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that represents the identity of the specified key identifier.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)\n  id: ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ResolveClaimSet(SecurityToken)\n  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Resolves the identity associated with the specified security token using the supporting token authenticators provided when the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> instance was created and returns it as a <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref>.\n  syntax:\n    content: public virtual System.IdentityModel.Claims.ClaimSet ResolveClaimSet (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to get the identity of.\n    return:\n      type: System.IdentityModel.Claims.ClaimSet\n      description: A <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that represents the identity of the specified security token.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  id: ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ResolveIdentity(SecurityKeyIdentifier)\n  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Resolves the identity associated with the specified key identifier using the supporting security token authenticators provided when the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> instance was created and returns it as an <xref:System.Security.Principal.IIdentity>.\n  remarks: <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens are cached using their key identifier.\n  syntax:\n    content: public virtual System.Security.Principal.IIdentity ResolveIdentity (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> to get the identity of.\n    return:\n      type: System.Security.Principal.IIdentity\n      description: An <xref:System.Security.Principal.IIdentity> that represents the identity of the specified key identifier.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)\n  id: ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ResolveIdentity(SecurityToken)\n  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Resolves the identity associated with the specified security token using the supporting security token authenticators provided when the <xref href=\"System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\"></xref> instance was created and returns it as an <xref:System.Security.Principal.IIdentity>.\n  syntax:\n    content: public virtual System.Security.Principal.IIdentity ResolveIdentity (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to get the identity of.\n    return:\n      type: System.Security.Principal.IIdentity\n      description: An <xref:System.Security.Principal.IIdentity> that represents the identity of the specified security token.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)\n  id: ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateAudienceRestriction(SamlAudienceRestrictionCondition)\n  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Validates that the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token was intended for this Web service.\n  remarks: The ValidateAudienceRestriction method is called by the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A> method when the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property is set to <xref:System.IdentityModel.Selectors.AudienceUriMode> or <xref:System.IdentityModel.Selectors.AudienceUriMode>.\n  syntax:\n    content: protected virtual bool ValidateAudienceRestriction (System.IdentityModel.Tokens.SamlAudienceRestrictionCondition audienceRestrictionCondition);\n    parameters:\n    - id: audienceRestrictionCondition\n      type: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> that specifies the set of target Web services for which the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token is intended.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences*> property of the <code>audienceRestrictionCondition</code> parameter is in the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris*> collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates the specified security token and returns the set of authorization policies for the security token.\n  syntax:\n    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies that result from the security token authentication.\n  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)\n  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)\n- uid: System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<SecurityTokenAuthenticator>\n  nameWithType: IList<SecurityTokenAuthenticator>\n  fullName: System.Collections.Generic.IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n    name: SecurityTokenAuthenticator\n    nameWithType: SecurityTokenAuthenticator\n    fullName: SecurityTokenAuthenticator\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)\n  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: AllowedAudienceUris\n  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris\n- uid: System.Collections.Generic.IList{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<String>\n  nameWithType: IList<String>\n  fullName: System.Collections.Generic.IList<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: AudienceUriMode\n  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode\n- uid: System.IdentityModel.Selectors.AudienceUriMode\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: AudienceUriMode\n  nameWithType: AudienceUriMode\n  fullName: System.IdentityModel.Selectors.AudienceUriMode\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: ResolveClaimSet(SecurityKeyIdentifier)\n  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)\n- uid: System.IdentityModel.Claims.ClaimSet\n  parent: System.IdentityModel.Claims\n  isExternal: false\n  name: ClaimSet\n  nameWithType: ClaimSet\n  fullName: System.IdentityModel.Claims.ClaimSet\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: ResolveClaimSet(SecurityToken)\n  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: ResolveIdentity(SecurityKeyIdentifier)\n  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)\n- uid: System.Security.Principal.IIdentity\n  parent: System.Security.Principal\n  isExternal: true\n  name: IIdentity\n  nameWithType: IIdentity\n  fullName: System.Security.Principal.IIdentity\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: ResolveIdentity(SecurityToken)\n  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateAudienceRestriction(SamlAudienceRestrictionCondition)\n  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)\n- uid: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlAudienceRestrictionCondition\n  nameWithType: SamlAudienceRestrictionCondition\n  fullName: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<IAuthorizationPolicy>\n  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: SamlSecurityTokenAuthenticator\n  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris*\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: AllowedAudienceUris\n  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode*\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: AudienceUriMode\n  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore*\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore\n  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: ResolveClaimSet\n  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: ResolveIdentity\n  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction*\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateAudienceRestriction\n  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction\n- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore*\n  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore\n  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCore\n"}