{"nodes":[{"pos":[878,960],"content":"Provides access to instances of the Visual Basic code generator and code compiler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to instances of the Visual Basic code generator and code compiler.","pos":[0,82]}]},{"pos":[973,1444],"content":"This class provides methods that can be used to retrieve instances of the Visual Basic <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations.      > [!NOTE] >  This class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.","needQuote":false,"needEscape":true,"nodes":[{"content":"This class provides methods that can be used to retrieve instances of the Visual Basic &lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt; and &lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt; implementations.","pos":[0,198],"source":"This class provides methods that can be used to retrieve instances of the Visual Basic <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This class contains a link demand and an inheritance demand at the class level that applies to all members.","pos":[204,324],"source":"      > [!NOTE] >  This class contains a link demand and an inheritance demand at the class level that applies to all members."},{"content":"A &lt;xref:System.Security.SecurityException&gt; is thrown when either the immediate caller or the derived class does not have full-trust permission.","pos":[325,468],"source":" A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission."}]},{"pos":[5934,6032],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.VBCodeProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.VBCodeProvider\"></xref> class."},{"pos":[6774,6912],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.VBCodeProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified provider options.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.VBCodeProvider\"></xref> class by using the specified provider options."},{"pos":[6924,7337],"content":"The value for `providerOptions` is obtained from the  element in the configuration file. You can identify the version of the <xref:Microsoft.VisualBasic.VBCodeProvider> you want to use by specifying the `<providerOption>` element, supplying \"CompilerVersion\" as the option name, and supplying the version number (for example, \"v3.5\") as the option value. You must precede the version number with a lower case \"v\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The value for <ph id=\"ph1\">`providerOptions`</ph> is obtained from the  element in the configuration file.","pos":[0,88],"source":"The value for `providerOptions` is obtained from the  element in the configuration file."},{"content":"You can identify the version of the &lt;xref:Microsoft.VisualBasic.VBCodeProvider&gt; you want to use by specifying the <ph id=\"ph1\">`&lt;providerOption&gt;`</ph> element, supplying \"CompilerVersion\" as the option name, and supplying the version number (for example, \"v3.5\") as the option value.","pos":[89,354],"source":" You can identify the version of the <xref:Microsoft.VisualBasic.VBCodeProvider> you want to use by specifying the `<providerOption>` element, supplying \"CompilerVersion\" as the option name, and supplying the version number (for example, \"v3.5\") as the option value."},{"content":"You must precede the version number with a lower case \"v\".","pos":[355,413]}]},{"pos":[8667,8795],"content":"A &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains the provider options from the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id=\"ph2\">&amp;gt;</ph> object that contains the provider options from the configuration file.","pos":[0,128],"source":"A &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains the provider options from the configuration file."}]},{"pos":[8968,9061],"content":"<ph id=\"ph1\">&lt;code&gt;providerOptions&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>providerOptions</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9457,9508],"content":"Gets an instance of the Visual Basic code compiler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an instance of the Visual Basic code compiler.","pos":[0,51]}]},{"pos":[9705,9811],"content":"An instance of the Visual Basic <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.ICodeCompiler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation.","needQuote":true,"needEscape":true,"source":"An instance of the Visual Basic <xref href=\"System.CodeDom.Compiler.ICodeCompiler\"></xref> implementation."},{"pos":[10294,10346],"content":"Gets an instance of the Visual Basic code generator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an instance of the Visual Basic code generator.","pos":[0,52]}]},{"pos":[10546,10653],"content":"An instance of the Visual Basic <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.ICodeGenerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation.","needQuote":true,"needEscape":true,"source":"An instance of the Visual Basic <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> implementation."},{"pos":[11123,11191],"content":"Gets the file name extension to use when creating source code files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the file name extension to use when creating source code files.","pos":[0,68]}]},{"pos":[11203,11294],"content":"This file name extension is usually the extension used by the language's source code files.","needQuote":true,"needEscape":true,"nodes":[{"content":"This file name extension is usually the extension used by the language's source code files.","pos":[0,91]}]},{"pos":[11421,11484],"content":"The file name extension to use for generated source code files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file name extension to use for generated source code files.","pos":[0,63]}]},{"pos":[12333,12438],"content":"Generates code for the specified class member using the specified text writer and code generator options.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates code for the specified class member using the specified text writer and code generator options.","pos":[0,105]}]},{"pos":[12450,12709],"content":"Members are generated differently depending on their context. For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.  This implementation generates code for a member in the class context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Members are generated differently depending on their context. For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.  This implementation generates code for a member in the class context.","pos":[0,259],"nodes":[{"content":"Members are generated differently depending on their context.","pos":[0,61]},{"content":"For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.","pos":[62,188]},{"content":"This implementation generates code for a member in the class context.","pos":[190,259]}]}]},{"pos":[13567,13641],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to generate code for.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeMember\"></xref> to generate code for."},{"pos":[13711,13755],"content":"The <xref:System.IO.TextWriter> to write to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IO.TextWriter&gt; to write to.","pos":[0,44],"source":"The <xref:System.IO.TextWriter> to write to."}]},{"pos":[13850,13952],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use when generating the code.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> to use when generating the code."},{"pos":[14466,14563],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified type of object.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type of object."},{"pos":[14575,14685],"content":"A derived class can override this method to provide specific types of type converters for specific data types.","needQuote":true,"needEscape":true,"nodes":[{"content":"A derived class can override this method to provide specific types of type converters for specific data types.","pos":[0,110]}]},{"pos":[14861,14913],"content":"The type of object to retrieve a type converter for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object to retrieve a type converter for.","pos":[0,52]}]},{"pos":[14993,15075],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified type.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type."},{"pos":[15552,15588],"content":"Gets a language features identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a language features identifier.","pos":[0,36]}]},{"pos":[15776,15887],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.Compiler.LanguageOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates special features of the language.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.Compiler.LanguageOptions\"></xref> that indicates special features of the language."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.VBCodeProvider\n  id: VBCodeProvider\n  children:\n  - Microsoft.VisualBasic.VBCodeProvider.#ctor\n  - Microsoft.VisualBasic.VBCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})\n  - Microsoft.VisualBasic.VBCodeProvider.CreateCompiler\n  - Microsoft.VisualBasic.VBCodeProvider.CreateGenerator\n  - Microsoft.VisualBasic.VBCodeProvider.FileExtension\n  - Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - Microsoft.VisualBasic.VBCodeProvider.GetConverter(System.Type)\n  - Microsoft.VisualBasic.VBCodeProvider.LanguageOptions\n  langs:\n  - csharp\n  name: VBCodeProvider\n  nameWithType: VBCodeProvider\n  fullName: Microsoft.VisualBasic.VBCodeProvider\n  type: Class\n  summary: Provides access to instances of the Visual Basic code generator and code compiler.\n  remarks: \"This class provides methods that can be used to retrieve instances of the Visual Basic <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations.  \\n  \\n> [!NOTE]\\n>  This class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.\"\n  example:\n  - \"The following example uses either the C# or Visual Basic code provider to compile a source file. The example checks the input file extension and uses the corresponding <xref:Microsoft.CSharp.CSharpCodeProvider> or VBCodeProvider for compilation.  The input file is compiled into an executable file, and any compilation errors are displayed to the console.  \\n  \\n [!code-cs[CodeDom_CodeProviders#2](~/add/codesnippet/csharp/t-microsoft.visualbasic._24_1.cs)]\\n [!code-vb[CodeDom_CodeProviders#2](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._24_1.vb)]\"\n  syntax:\n    content: 'public class VBCodeProvider : System.CodeDom.Compiler.CodeDomProvider'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.CodeDom.Compiler.CodeDomProvider\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])\n  - System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  - System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])\n  - System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateParser\n  - System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})\n  - System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  - System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo\n  - System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)\n  - System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)\n  - System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)\n  - System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.VBCodeProvider.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  langs:\n  - csharp\n  name: VBCodeProvider()\n  nameWithType: VBCodeProvider.VBCodeProvider()\n  fullName: Microsoft.VisualBasic.VBCodeProvider.VBCodeProvider()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: Microsoft.VisualBasic\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.VBCodeProvider\"></xref> class.\n  syntax:\n    content: public VBCodeProvider ();\n    parameters: []\n  overload: Microsoft.VisualBasic.VBCodeProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.VBCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})\n  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String})'\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  langs:\n  - csharp\n  name: VBCodeProvider(IDictionary<String,String>)\n  nameWithType: VBCodeProvider.VBCodeProvider(IDictionary<String,String>)\n  fullName: Microsoft.VisualBasic.VBCodeProvider.VBCodeProvider(IDictionary<String,String>)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: Microsoft.VisualBasic\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.VBCodeProvider\"></xref> class by using the specified provider options.\n  remarks: The value for `providerOptions` is obtained from the  element in the configuration file. You can identify the version of the <xref:Microsoft.VisualBasic.VBCodeProvider> you want to use by specifying the `<providerOption>` element, supplying \"CompilerVersion\" as the option name, and supplying the version number (for example, \"v3.5\") as the option value. You must precede the version number with a lower case \"v\".\n  example:\n  - \"The following configuration file example demonstrates how to specify that version 3.5 of the Visual Basic code provider should be used.  \\n  \\n```  \\n<configuration>  \\n  <system.codedom>  \\n    <compilers>  \\n      <!-- zero or more compiler elements -->  \\n      <compiler  \\n          language=\\\"vb;VisualBasic\\\"  \\n          extension=\\\".vb\\\"  \\n          type=\\\"Microsoft.VisualBasic.VBCodeProvider, System,   \\n          Version=2.0.3600.0, Culture=neutral,   \\n          PublicKeyToken=b77a5c561934e089\\\"  \\n          compilerOptions=\\\"/optimize\\\"  \\n          warningLevel=\\\"1\\\" >  \\n          <providerOption  \\n            name=\\\"CompilerVersion\\\"  \\n            value=\\\"v3.5\\\" />  \\n        </compiler>  \\n    </compilers>  \\n  </system.codedom>  \\n</configuration>  \\n```  \\n  \\n The following example shows how to specify the compiler version when creating a new instance of the <xref:Microsoft.VisualBasic.VBCodeProvider> class.  \\n  \\n [!code-vb[VBProvider.ProviderOptions#1](~/add/codesnippet/visualbasic/776bc268-344f-4d28-97a9-_1.vb)]\"\n  syntax:\n    content: public VBCodeProvider (System.Collections.Generic.IDictionary<string,string> providerOptions);\n    parameters:\n    - id: providerOptions\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A &lt;xref:System.Collections.Generic.IDictionary%602&gt; object that contains the provider options from the configuration file.\n  overload: Microsoft.VisualBasic.VBCodeProvider.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>providerOptions</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.VBCodeProvider.CreateCompiler\n  id: CreateCompiler\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  langs:\n  - csharp\n  name: CreateCompiler()\n  nameWithType: VBCodeProvider.CreateCompiler()\n  fullName: Microsoft.VisualBasic.VBCodeProvider.CreateCompiler()\n  type: Method\n  assemblies:\n  - System\n  namespace: Microsoft.VisualBasic\n  summary: Gets an instance of the Visual Basic code compiler.\n  syntax:\n    content: public override System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();\n    parameters: []\n    return:\n      type: System.CodeDom.Compiler.ICodeCompiler\n      description: An instance of the Visual Basic <xref href=\"System.CodeDom.Compiler.ICodeCompiler\"></xref> implementation.\n  overload: Microsoft.VisualBasic.VBCodeProvider.CreateCompiler*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.VBCodeProvider.CreateGenerator\n  id: CreateGenerator\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  langs:\n  - csharp\n  name: CreateGenerator()\n  nameWithType: VBCodeProvider.CreateGenerator()\n  fullName: Microsoft.VisualBasic.VBCodeProvider.CreateGenerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: Microsoft.VisualBasic\n  summary: Gets an instance of the Visual Basic code generator.\n  syntax:\n    content: public override System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();\n    parameters: []\n    return:\n      type: System.CodeDom.Compiler.ICodeGenerator\n      description: An instance of the Visual Basic <xref href=\"System.CodeDom.Compiler.ICodeGenerator\"></xref> implementation.\n  overload: Microsoft.VisualBasic.VBCodeProvider.CreateGenerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.VBCodeProvider.FileExtension\n  id: FileExtension\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  langs:\n  - csharp\n  name: FileExtension\n  nameWithType: VBCodeProvider.FileExtension\n  fullName: Microsoft.VisualBasic.VBCodeProvider.FileExtension\n  type: Property\n  assemblies:\n  - System\n  namespace: Microsoft.VisualBasic\n  summary: Gets the file name extension to use when creating source code files.\n  remarks: This file name extension is usually the extension used by the language's source code files.\n  syntax:\n    content: public override string FileExtension { get; }\n    return:\n      type: System.String\n      description: The file name extension to use for generated source code files.\n  overload: Microsoft.VisualBasic.VBCodeProvider.FileExtension*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  id: GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  langs:\n  - csharp\n  name: GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n  nameWithType: VBCodeProvider.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n  fullName: Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n  type: Method\n  assemblies:\n  - System\n  namespace: Microsoft.VisualBasic\n  summary: Generates code for the specified class member using the specified text writer and code generator options.\n  remarks: Members are generated differently depending on their context. For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.  This implementation generates code for a member in the class context.\n  example:\n  - \"The following code example shows the use of the GenerateCodeFromMember method to create a code fragment to be used in a CodeDOM graph. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method of the <xref:System.CodeDom.Compiler.CodeDomProvider> class.  \\n  \\n [!code-cs[CodeDom_GenerateCodeFromMember#3](~/add/codesnippet/csharp/4f6b321f-7b1a-44e9-82f1-_1.cs)]\\n [!code-vb[CodeDom_GenerateCodeFromMember#3](~/add/codesnippet/visualbasic/4f6b321f-7b1a-44e9-82f1-_1.vb)]\"\n  syntax:\n    content: public override void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);\n    parameters:\n    - id: member\n      type: System.CodeDom.CodeTypeMember\n      description: A <xref href=\"System.CodeDom.CodeTypeMember\"></xref> to generate code for.\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> to write to.\n    - id: options\n      type: System.CodeDom.Compiler.CodeGeneratorOptions\n      description: The <xref href=\"System.CodeDom.Compiler.CodeGeneratorOptions\"></xref> to use when generating the code.\n  overload: Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.VBCodeProvider.GetConverter(System.Type)\n  id: GetConverter(System.Type)\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  langs:\n  - csharp\n  name: GetConverter(Type)\n  nameWithType: VBCodeProvider.GetConverter(Type)\n  fullName: Microsoft.VisualBasic.VBCodeProvider.GetConverter(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: Microsoft.VisualBasic\n  summary: Gets a <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type of object.\n  remarks: A derived class can override this method to provide specific types of type converters for specific data types.\n  syntax:\n    content: public override System.ComponentModel.TypeConverter GetConverter (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of object to retrieve a type converter for.\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: A <xref href=\"System.ComponentModel.TypeConverter\"></xref> for the specified type.\n  overload: Microsoft.VisualBasic.VBCodeProvider.GetConverter*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.VBCodeProvider.LanguageOptions\n  id: LanguageOptions\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  langs:\n  - csharp\n  name: LanguageOptions\n  nameWithType: VBCodeProvider.LanguageOptions\n  fullName: Microsoft.VisualBasic.VBCodeProvider.LanguageOptions\n  type: Property\n  assemblies:\n  - System\n  namespace: Microsoft.VisualBasic\n  summary: Gets a language features identifier.\n  syntax:\n    content: public override System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }\n    return:\n      type: System.CodeDom.Compiler.LanguageOptions\n      description: A <xref href=\"System.CodeDom.Compiler.LanguageOptions\"></xref> that indicates special features of the language.\n  overload: Microsoft.VisualBasic.VBCodeProvider.LanguageOptions*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.Compiler.CodeDomProvider\n  isExternal: false\n  name: System.CodeDom.Compiler.CodeDomProvider\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: Microsoft.VisualBasic.VBCodeProvider.#ctor\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: VBCodeProvider()\n  nameWithType: VBCodeProvider.VBCodeProvider()\n  fullName: Microsoft.VisualBasic.VBCodeProvider.VBCodeProvider()\n- uid: Microsoft.VisualBasic.VBCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: VBCodeProvider(IDictionary<String,String>)\n  nameWithType: VBCodeProvider.VBCodeProvider(IDictionary<String,String>)\n  fullName: Microsoft.VisualBasic.VBCodeProvider.VBCodeProvider(IDictionary<String,String>)\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualBasic.VBCodeProvider.CreateCompiler\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: CreateCompiler()\n  nameWithType: VBCodeProvider.CreateCompiler()\n  fullName: Microsoft.VisualBasic.VBCodeProvider.CreateCompiler()\n- uid: System.CodeDom.Compiler.ICodeCompiler\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: ICodeCompiler\n  nameWithType: ICodeCompiler\n  fullName: System.CodeDom.Compiler.ICodeCompiler\n- uid: Microsoft.VisualBasic.VBCodeProvider.CreateGenerator\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: CreateGenerator()\n  nameWithType: VBCodeProvider.CreateGenerator()\n  fullName: Microsoft.VisualBasic.VBCodeProvider.CreateGenerator()\n- uid: System.CodeDom.Compiler.ICodeGenerator\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: ICodeGenerator\n  nameWithType: ICodeGenerator\n  fullName: System.CodeDom.Compiler.ICodeGenerator\n- uid: Microsoft.VisualBasic.VBCodeProvider.FileExtension\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: FileExtension\n  nameWithType: VBCodeProvider.FileExtension\n  fullName: Microsoft.VisualBasic.VBCodeProvider.FileExtension\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n  nameWithType: VBCodeProvider.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n  fullName: Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)\n- uid: System.CodeDom.CodeTypeMember\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeMember\n  nameWithType: CodeTypeMember\n  fullName: System.CodeDom.CodeTypeMember\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: true\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.CodeDom.Compiler.CodeGeneratorOptions\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CodeGeneratorOptions\n  nameWithType: CodeGeneratorOptions\n  fullName: System.CodeDom.Compiler.CodeGeneratorOptions\n- uid: Microsoft.VisualBasic.VBCodeProvider.GetConverter(System.Type)\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: GetConverter(Type)\n  nameWithType: VBCodeProvider.GetConverter(Type)\n  fullName: Microsoft.VisualBasic.VBCodeProvider.GetConverter(Type)\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: Microsoft.VisualBasic.VBCodeProvider.LanguageOptions\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: LanguageOptions\n  nameWithType: VBCodeProvider.LanguageOptions\n  fullName: Microsoft.VisualBasic.VBCodeProvider.LanguageOptions\n- uid: System.CodeDom.Compiler.LanguageOptions\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: LanguageOptions\n  nameWithType: LanguageOptions\n  fullName: System.CodeDom.Compiler.LanguageOptions\n- uid: Microsoft.VisualBasic.VBCodeProvider.#ctor*\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: VBCodeProvider\n  nameWithType: VBCodeProvider.VBCodeProvider\n- uid: Microsoft.VisualBasic.VBCodeProvider.CreateCompiler*\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: CreateCompiler\n  nameWithType: VBCodeProvider.CreateCompiler\n- uid: Microsoft.VisualBasic.VBCodeProvider.CreateGenerator*\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: CreateGenerator\n  nameWithType: VBCodeProvider.CreateGenerator\n- uid: Microsoft.VisualBasic.VBCodeProvider.FileExtension*\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: FileExtension\n  nameWithType: VBCodeProvider.FileExtension\n- uid: Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember*\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: GenerateCodeFromMember\n  nameWithType: VBCodeProvider.GenerateCodeFromMember\n- uid: Microsoft.VisualBasic.VBCodeProvider.GetConverter*\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: GetConverter\n  nameWithType: VBCodeProvider.GetConverter\n- uid: Microsoft.VisualBasic.VBCodeProvider.LanguageOptions*\n  parent: Microsoft.VisualBasic.VBCodeProvider\n  isExternal: false\n  name: LanguageOptions\n  nameWithType: VBCodeProvider.LanguageOptions\n"}