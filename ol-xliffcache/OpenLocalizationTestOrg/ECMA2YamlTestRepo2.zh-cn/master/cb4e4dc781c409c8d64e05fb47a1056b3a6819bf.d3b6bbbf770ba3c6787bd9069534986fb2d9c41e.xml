{"nodes":[{"pos":[1081,1239],"content":"Represents a configuration element that contains a collection of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Represents a configuration element that contains a collection of <xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointElement\"></xref> objects."},{"pos":[1252,2866],"content":"The BackupEndpointCollection contains an ordered collection of endpoints that a message will be transmitted to in the event of a communications exception when sending to the primary endpoint.       If a send to the primary endpoint contained in <xref:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName%2A> fails with a communications exception, the Routing Service will attempt to send the message to the first endpoint contained in the **BackupEndpointCollection**. If this also fails with a communications exception, the Routing Service will attempt to send the message to the next endpoint contained in the collection until the send attempt succeeds, returns a failure other than a communication exception, or all endpoints in the collection have returned a failure.       In the following example, if a send to the primary endpoint named “Destination” returns a communication exception, the service will attempt to send the message to the “alternateServiceQueue”. If this attempt also returns a communication exception, the Routing Service will attempt to send the message to the next endpoint in the collection.      ```xml   <filterTables>        <filterTable name=\"filterTable1\">             <add filterName=\"MatchAllFilter1\" endpointName=\"Destination\" backupList=\"backupEndpointList\"/>        </filterTable>   </filterTables>   <backupLists>        <backupList name=\"backupEndpointList\">             <add endpointName=\"backupServiceQueue\" />             <add endpointName=\"alternateServiceQueue\" />        </backupList>   </backupLists>      ```","needQuote":false,"needEscape":true,"nodes":[{"content":"The BackupEndpointCollection contains an ordered collection of endpoints that a message will be transmitted to in the event of a communications exception when sending to the primary endpoint.","pos":[0,191]},{"content":"If a send to the primary endpoint contained in &lt;xref:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName%2A&gt; fails with a communications exception, the Routing Service will attempt to send the message to the first endpoint contained in the <bpt id=\"p1\">**</bpt>BackupEndpointCollection<ept id=\"p1\">**</ept>.","pos":[198,494],"source":"       If a send to the primary endpoint contained in <xref:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName%2A> fails with a communications exception, the Routing Service will attempt to send the message to the first endpoint contained in the **BackupEndpointCollection**."},{"content":"If this also fails with a communications exception, the Routing Service will attempt to send the message to the next endpoint contained in the collection until the send attempt succeeds, returns a failure other than a communication exception, or all endpoints in the collection have returned a failure.","pos":[495,797]},{"content":"In the following example, if a send to the primary endpoint named “Destination” returns a communication exception, the service will attempt to send the message to the “alternateServiceQueue”.","pos":[804,995]},{"content":"If this attempt also returns a communication exception, the Routing Service will attempt to send the message to the next endpoint in the collection.","pos":[996,1144]}]},{"pos":[9081,9205],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointCollection\"></xref> class."},{"pos":[10061,10175],"content":"Adds a new <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the collection.","needQuote":true,"needEscape":true,"source":"Adds a new <xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointElement\"></xref> to the collection."},{"pos":[10419,10459],"content":"The backup endpoint element to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The backup endpoint element to be added.","pos":[0,40]}]},{"pos":[11052,11093],"content":"Removes all elements from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all elements from the collection.","pos":[0,41]}]},{"pos":[11807,11884],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Configuration.ConfigurationElement\"></xref>."},{"pos":[12094,12122],"content":"A new configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new configuration element.","pos":[0,28]}]},{"pos":[12914,12975],"content":"Gets the element key for the specified configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the element key for the specified configuration element.","pos":[0,61]}]},{"pos":[13199,13247],"content":"The configuration element to return the key for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration element to return the key for.","pos":[0,48]}]},{"pos":[13305,13353],"content":"The key for the specified configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key for the specified configuration element.","pos":[0,48]}]},{"pos":[13947,14040],"content":"Gets or sets the name used to identify this collection of elements in the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name used to identify this collection of elements in the configuration file.","pos":[0,93]}]},{"pos":[14154,14181],"content":"The name of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the collection.","pos":[0,27]}]},{"pos":[14973,15110],"content":"Removes the first occurrence of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the collection.","needQuote":true,"needEscape":true,"source":"Removes the first occurrence of <xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointElement\"></xref> from the collection."},{"pos":[15357,15406],"content":"The backup element to remove from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The backup element to remove from the collection.","pos":[0,49]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  id: BackupEndpointCollection\n  children:\n  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor\n  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)\n  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear\n  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement\n  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name\n  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)\n  langs:\n  - csharp\n  name: BackupEndpointCollection\n  nameWithType: BackupEndpointCollection\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  type: Class\n  summary: Represents a configuration element that contains a collection of <xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointElement\"></xref> objects.\n  remarks: \"The BackupEndpointCollection contains an ordered collection of endpoints that a message will be transmitted to in the event of a communications exception when sending to the primary endpoint.  \\n  \\n If a send to the primary endpoint contained in <xref:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName%2A> fails with a communications exception, the Routing Service will attempt to send the message to the first endpoint contained in the **BackupEndpointCollection**. If this also fails with a communications exception, the Routing Service will attempt to send the message to the next endpoint contained in the collection until the send attempt succeeds, returns a failure other than a communication exception, or all endpoints in the collection have returned a failure.  \\n  \\n In the following example, if a send to the primary endpoint named “Destination” returns a communication exception, the service will attempt to send the message to the “alternateServiceQueue”. If this attempt also returns a communication exception, the Routing Service will attempt to send the message to the next endpoint in the collection.  \\n  \\n```xml  \\n<filterTables>  \\n     <filterTable name=\\\"filterTable1\\\">  \\n          <add filterName=\\\"MatchAllFilter1\\\" endpointName=\\\"Destination\\\" backupList=\\\"backupEndpointList\\\"/>  \\n     </filterTable>  \\n</filterTables>  \\n<backupLists>  \\n     <backupList name=\\\"backupEndpointList\\\">  \\n          <add endpointName=\\\"backupServiceQueue\\\" />  \\n          <add endpointName=\\\"alternateServiceQueue\\\" />  \\n     </backupList>  \\n</backupLists>  \\n  \\n```\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Routing.Configuration.BackupEndpointElement))]\n\n      public class BackupEndpointCollection : System.Configuration.ConfigurationElementCollection\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationElementCollection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Properties\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.AddElementName\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseClear\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys\n  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ClearElementName\n  - System.Configuration.ConfigurationElementCollection.CollectionType\n  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)\n  - System.Configuration.ConfigurationElementCollection.Count\n  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)\n  - System.Configuration.ConfigurationElementCollection.ElementName\n  - System.Configuration.ConfigurationElementCollection.EmitClear\n  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)\n  - System.Configuration.ConfigurationElementCollection.GetEnumerator\n  - System.Configuration.ConfigurationElementCollection.GetHashCode\n  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)\n  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.IsModified\n  - System.Configuration.ConfigurationElementCollection.IsReadOnly\n  - System.Configuration.ConfigurationElementCollection.IsSynchronized\n  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElementCollection.RemoveElementName\n  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.ResetModified\n  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.SetReadOnly\n  - System.Configuration.ConfigurationElementCollection.SyncRoot\n  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate\n  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  langs:\n  - csharp\n  name: BackupEndpointCollection()\n  nameWithType: BackupEndpointCollection.BackupEndpointCollection()\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BackupEndpointCollection()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Creates a new instance of the <xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointCollection\"></xref> class.\n  syntax:\n    content: public BackupEndpointCollection ();\n    parameters: []\n  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)\n  id: Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  langs:\n  - csharp\n  name: Add(BackupEndpointElement)\n  nameWithType: BackupEndpointCollection.Add(BackupEndpointElement)\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(BackupEndpointElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Adds a new <xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointElement\"></xref> to the collection.\n  syntax:\n    content: public void Add (System.ServiceModel.Routing.Configuration.BackupEndpointElement element);\n    parameters:\n    - id: element\n      type: System.ServiceModel.Routing.Configuration.BackupEndpointElement\n      description: The backup endpoint element to be added.\n  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear\n  id: Clear\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: BackupEndpointCollection.Clear()\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Removes all elements from the collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement\n  id: CreateNewElement\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  langs:\n  - csharp\n  name: CreateNewElement()\n  nameWithType: BackupEndpointCollection.CreateNewElement()\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Creates a new <xref href=\"System.Configuration.ConfigurationElement\"></xref>.\n  syntax:\n    content: protected override System.Configuration.ConfigurationElement CreateNewElement ();\n    parameters: []\n    return:\n      type: System.Configuration.ConfigurationElement\n      description: A new configuration element.\n  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  id: GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  langs:\n  - csharp\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: BackupEndpointCollection.GetElementKey(ConfigurationElement)\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets the element key for the specified configuration element.\n  syntax:\n    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.Configuration.ConfigurationElement\n      description: The configuration element to return the key for.\n    return:\n      type: System.Object\n      description: The key for the specified configuration element.\n  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name\n  id: Name\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  langs:\n  - csharp\n  name: Name\n  nameWithType: BackupEndpointCollection.Name\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the name used to identify this collection of elements in the configuration file.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the collection.\n  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)\n  id: Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  langs:\n  - csharp\n  name: Remove(BackupEndpointElement)\n  nameWithType: BackupEndpointCollection.Remove(BackupEndpointElement)\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(BackupEndpointElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Removes the first occurrence of <xref href=\"System.ServiceModel.Routing.Configuration.BackupEndpointElement\"></xref> from the collection.\n  syntax:\n    content: public void Remove (System.ServiceModel.Routing.Configuration.BackupEndpointElement element);\n    parameters:\n    - id: element\n      type: System.ServiceModel.Routing.Configuration.BackupEndpointElement\n      description: The backup element to remove from the collection.\n  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: System.Configuration.ConfigurationElementCollection\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: BackupEndpointCollection()\n  nameWithType: BackupEndpointCollection.BackupEndpointCollection()\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BackupEndpointCollection()\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: Add(BackupEndpointElement)\n  nameWithType: BackupEndpointCollection.Add(BackupEndpointElement)\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(BackupEndpointElement)\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointElement\n  parent: System.ServiceModel.Routing.Configuration\n  isExternal: false\n  name: BackupEndpointElement\n  nameWithType: BackupEndpointElement\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointElement\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: BackupEndpointCollection.Clear()\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear()\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: CreateNewElement()\n  nameWithType: BackupEndpointCollection.CreateNewElement()\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement()\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: BackupEndpointCollection.GetElementKey(ConfigurationElement)\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(ConfigurationElement)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: Name\n  nameWithType: BackupEndpointCollection.Name\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: Remove(BackupEndpointElement)\n  nameWithType: BackupEndpointCollection.Remove(BackupEndpointElement)\n  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(BackupEndpointElement)\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor*\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: BackupEndpointCollection\n  nameWithType: BackupEndpointCollection.BackupEndpointCollection\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add*\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: Add\n  nameWithType: BackupEndpointCollection.Add\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear*\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: Clear\n  nameWithType: BackupEndpointCollection.Clear\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement*\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: CreateNewElement\n  nameWithType: BackupEndpointCollection.CreateNewElement\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey*\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: GetElementKey\n  nameWithType: BackupEndpointCollection.GetElementKey\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name*\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: Name\n  nameWithType: BackupEndpointCollection.Name\n- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove*\n  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection\n  isExternal: false\n  name: Remove\n  nameWithType: BackupEndpointCollection.Remove\n"}