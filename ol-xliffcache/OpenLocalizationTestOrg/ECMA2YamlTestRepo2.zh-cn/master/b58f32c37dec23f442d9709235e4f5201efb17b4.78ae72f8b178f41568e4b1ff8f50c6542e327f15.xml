{"nodes":[{"pos":[618,736],"content":"Defines methods for resolving scope. This interface is implemented by all objects that take part in a scope hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines methods for resolving scope. This interface is implemented by all objects that take part in a scope hierarchy.","pos":[0,118],"nodes":[{"content":"Defines methods for resolving scope.","pos":[0,36]},{"content":"This interface is implemented by all objects that take part in a scope hierarchy.","pos":[37,118]}]}]},{"pos":[1244,1436],"content":"When implemented in a class, gets the current default scope. Either the contained object of a <xref uid=\"langword_csharp_with\" name=\"with\" href=\"\"></xref> statement scope, or the global scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, gets the current default scope.","pos":[0,60]},{"content":"Either the contained object of a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_with\" name=\"with\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> statement scope, or the global scope.","pos":[61,192],"source":" Either the contained object of a <xref uid=\"langword_csharp_with\" name=\"with\" href=\"\"></xref> statement scope, or the global scope."}]},{"pos":[1575,1601],"content":"The current default scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current default scope.","pos":[0,26]}]},{"pos":[2153,2335],"content":"When implemented in a class, returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","pos":[0,182],"nodes":[{"content":"When implemented in a class, returns a field that has the specified name by searching the scope hierarchy.","pos":[0,106]},{"content":"This method searches only the scope that is specified by the lexical level.","pos":[107,182]}]}]},{"pos":[2347,2628],"content":"This method applies to fields that cannot be resolved at compile time. This happens when an `eval` expression refers to a field in the outer scope. Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method applies to fields that cannot be resolved at compile time.","pos":[0,70]},{"content":"This happens when an <ph id=\"ph1\">`eval`</ph> expression refers to a field in the outer scope.","pos":[71,147],"source":" This happens when an `eval` expression refers to a field in the outer scope."},{"content":"Because the <ph id=\"ph1\">`eval`</ph> expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.","pos":[148,281],"source":" Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field."}]},{"pos":[2801,2837],"content":"The name of the field to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the field to search for.","pos":[0,36]}]},{"pos":[2901,2929],"content":"The lexical level to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The lexical level to search.","pos":[0,28]}]},{"pos":[3001,3073],"content":"A <xref:System.Reflection.FieldInfo> object that has the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Reflection.FieldInfo&gt; object that has the specified name.","pos":[0,72],"source":"A <xref:System.Reflection.FieldInfo> object that has the specified name."}]},{"pos":[3551,3718],"content":"When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.","pos":[0,167]}]},{"pos":[3890,3907],"content":"The global scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The global scope.","pos":[0,17]}]},{"pos":[4434,4578],"content":"When implemented in a class, gets the local declaration of a field that has the specified name. This is used at compile time for error checking.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, gets the local declaration of a field that has the specified name. This is used at compile time for error checking.","pos":[0,144],"nodes":[{"content":"When implemented in a class, gets the local declaration of a field that has the specified name.","pos":[0,95]},{"content":"This is used at compile time for error checking.","pos":[96,144]}]}]},{"pos":[4742,4764],"content":"The name of the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the field.","pos":[0,22]}]},{"pos":[4836,4871],"content":"The local declaration of the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local declaration of the field.","pos":[0,35]}]},{"pos":[5446,5623],"content":"When implemented in a class, gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","pos":[0,177],"nodes":[{"content":"When implemented in a class, gets the value of the specified member by searching the scope hierarchy.","pos":[0,101]},{"content":"This method searches only the scope that is specified by the lexical level.","pos":[102,177]}]}]},{"pos":[5635,5920],"content":"This method applies to members that cannot be resolved at compile time. This occurs when an `eval` expression refers to a member in the outer scope. Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method applies to members that cannot be resolved at compile time.","pos":[0,71]},{"content":"This occurs when an <ph id=\"ph1\">`eval`</ph> expression refers to a member in the outer scope.","pos":[72,148],"source":" This occurs when an `eval` expression refers to a member in the outer scope."},{"content":"Because the <ph id=\"ph1\">`eval`</ph> expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.","pos":[149,285],"source":" Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member."}]},{"pos":[6078,6115],"content":"The name of the member to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to search for.","pos":[0,37]}]},{"pos":[6179,6207],"content":"The lexical level to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The lexical level to search.","pos":[0,28]}]},{"pos":[6265,6307],"content":"The value of the member <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value of the member <code>name</code>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.IActivationObject\n  id: IActivationObject\n  children:\n  - Microsoft.JScript.IActivationObject.GetDefaultThisObject\n  - Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)\n  - Microsoft.JScript.IActivationObject.GetGlobalScope\n  - Microsoft.JScript.IActivationObject.GetLocalField(System.String)\n  - Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)\n  langs:\n  - csharp\n  name: IActivationObject\n  nameWithType: IActivationObject\n  fullName: Microsoft.JScript.IActivationObject\n  type: Interface\n  summary: Defines methods for resolving scope. This interface is implemented by all objects that take part in a scope hierarchy.\n  syntax:\n    content: public interface IActivationObject\n  implements: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IActivationObject.GetDefaultThisObject\n  id: GetDefaultThisObject\n  parent: Microsoft.JScript.IActivationObject\n  langs:\n  - csharp\n  name: GetDefaultThisObject()\n  nameWithType: IActivationObject.GetDefaultThisObject()\n  fullName: Microsoft.JScript.IActivationObject.GetDefaultThisObject()\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, gets the current default scope. Either the contained object of a <xref uid=\"langword_csharp_with\" name=\"with\" href=\"\"></xref> statement scope, or the global scope.\n  syntax:\n    content: public object GetDefaultThisObject ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The current default scope.\n  overload: Microsoft.JScript.IActivationObject.GetDefaultThisObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)\n  id: GetField(System.String,System.Int32)\n  parent: Microsoft.JScript.IActivationObject\n  langs:\n  - csharp\n  name: GetField(String,Int32)\n  nameWithType: IActivationObject.GetField(String,Int32)\n  fullName: Microsoft.JScript.IActivationObject.GetField(String,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.\n  remarks: This method applies to fields that cannot be resolved at compile time. This happens when an `eval` expression refers to a field in the outer scope. Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.\n  syntax:\n    content: public System.Reflection.FieldInfo GetField (string name, int lexLevel);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the field to search for.\n    - id: lexLevel\n      type: System.Int32\n      description: The lexical level to search.\n    return:\n      type: System.Reflection.FieldInfo\n      description: A <xref:System.Reflection.FieldInfo> object that has the specified name.\n  overload: Microsoft.JScript.IActivationObject.GetField*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IActivationObject.GetGlobalScope\n  id: GetGlobalScope\n  parent: Microsoft.JScript.IActivationObject\n  langs:\n  - csharp\n  name: GetGlobalScope()\n  nameWithType: IActivationObject.GetGlobalScope()\n  fullName: Microsoft.JScript.IActivationObject.GetGlobalScope()\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.\n  syntax:\n    content: public Microsoft.JScript.GlobalScope GetGlobalScope ();\n    parameters: []\n    return:\n      type: Microsoft.JScript.GlobalScope\n      description: The global scope.\n  overload: Microsoft.JScript.IActivationObject.GetGlobalScope*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IActivationObject.GetLocalField(System.String)\n  id: GetLocalField(System.String)\n  parent: Microsoft.JScript.IActivationObject\n  langs:\n  - csharp\n  name: GetLocalField(String)\n  nameWithType: IActivationObject.GetLocalField(String)\n  fullName: Microsoft.JScript.IActivationObject.GetLocalField(String)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, gets the local declaration of a field that has the specified name. This is used at compile time for error checking.\n  syntax:\n    content: public System.Reflection.FieldInfo GetLocalField (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the field.\n    return:\n      type: System.Reflection.FieldInfo\n      description: The local declaration of the field.\n  overload: Microsoft.JScript.IActivationObject.GetLocalField*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)\n  id: GetMemberValue(System.String,System.Int32)\n  parent: Microsoft.JScript.IActivationObject\n  langs:\n  - csharp\n  name: GetMemberValue(String,Int32)\n  nameWithType: IActivationObject.GetMemberValue(String,Int32)\n  fullName: Microsoft.JScript.IActivationObject.GetMemberValue(String,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.\n  remarks: This method applies to members that cannot be resolved at compile time. This occurs when an `eval` expression refers to a member in the outer scope. Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.\n  syntax:\n    content: public object GetMemberValue (string name, int lexlevel);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to search for.\n    - id: lexlevel\n      type: System.Int32\n      description: The lexical level to search.\n    return:\n      type: System.Object\n      description: The value of the member <code>name</code>.\n  overload: Microsoft.JScript.IActivationObject.GetMemberValue*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.JScript.IActivationObject.GetDefaultThisObject\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetDefaultThisObject()\n  nameWithType: IActivationObject.GetDefaultThisObject()\n  fullName: Microsoft.JScript.IActivationObject.GetDefaultThisObject()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetField(String,Int32)\n  nameWithType: IActivationObject.GetField(String,Int32)\n  fullName: Microsoft.JScript.IActivationObject.GetField(String,Int32)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: true\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.JScript.IActivationObject.GetGlobalScope\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetGlobalScope()\n  nameWithType: IActivationObject.GetGlobalScope()\n  fullName: Microsoft.JScript.IActivationObject.GetGlobalScope()\n- uid: Microsoft.JScript.GlobalScope\n  parent: Microsoft.JScript\n  isExternal: false\n  name: GlobalScope\n  nameWithType: GlobalScope\n  fullName: Microsoft.JScript.GlobalScope\n- uid: Microsoft.JScript.IActivationObject.GetLocalField(System.String)\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetLocalField(String)\n  nameWithType: IActivationObject.GetLocalField(String)\n  fullName: Microsoft.JScript.IActivationObject.GetLocalField(String)\n- uid: Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetMemberValue(String,Int32)\n  nameWithType: IActivationObject.GetMemberValue(String,Int32)\n  fullName: Microsoft.JScript.IActivationObject.GetMemberValue(String,Int32)\n- uid: Microsoft.JScript.IActivationObject.GetDefaultThisObject*\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetDefaultThisObject\n  nameWithType: IActivationObject.GetDefaultThisObject\n- uid: Microsoft.JScript.IActivationObject.GetField*\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetField\n  nameWithType: IActivationObject.GetField\n- uid: Microsoft.JScript.IActivationObject.GetGlobalScope*\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetGlobalScope\n  nameWithType: IActivationObject.GetGlobalScope\n- uid: Microsoft.JScript.IActivationObject.GetLocalField*\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetLocalField\n  nameWithType: IActivationObject.GetLocalField\n- uid: Microsoft.JScript.IActivationObject.GetMemberValue*\n  parent: Microsoft.JScript.IActivationObject\n  isExternal: false\n  name: GetMemberValue\n  nameWithType: IActivationObject.GetMemberValue\n"}