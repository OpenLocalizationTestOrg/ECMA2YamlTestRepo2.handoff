{"nodes":[{"pos":[6267,6279],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6311,6323],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7362,7374],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8352,8364],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8427,8439],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8511,8523],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8585,8597],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8661,8673],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9568,9580],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9643,9655],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9724,9736],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9794,9806],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11415,11427],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12709,12721],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12793,12805],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12867,12879],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12943,12955],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14309,14321],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14387,14399],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14471,14483],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14545,14557],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14621,14633],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15655,15667],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16682,16694],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17764,17776],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18916,18928],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18994,19006],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19901,19913],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21206,21218],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21290,21302],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21364,21376],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21440,21452],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22834,22846],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22912,22924],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22996,23008],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23070,23082],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23146,23158],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24240,24252],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24333,24345],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25370,25382],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26509,26521],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26602,26614],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27814,27826],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27892,27904],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27985,27997],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28902,28914],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29873,29885],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31073,31085],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31147,31159],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31223,31235],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32246,32258],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34274,34286],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35140,35152],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37081,37093],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37155,37167],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37231,37243],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38427,38439],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38511,38523],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38585,38597],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38661,38673],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39778,39790],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39852,39864],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39928,39940],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41117,41129],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41201,41213],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41275,41287],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41351,41363],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43168,43180],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44192,44204],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45213,45225],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47015,47027],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47976,47988],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48939,48951],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49930,49942],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50900,50912],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51852,51864],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52848,52860],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53825,53837],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54727,54739],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55856,55868],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1\n  id: ClientBase`1.ChannelBase`1\n  children:\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.`1imeSpan)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.`1imeSpan)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.`1imeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.`1imeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.`1imeSpan)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.`1imeSpan)\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId\n  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions\n  langs:\n  - csharp\n  name: ClientBase<TChannel>+ChannelBase<T>\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>\n  type: Class\n  syntax:\n    content: 'protected class ClientBase<TChannel>.ChannelBase<T> : IDisposable, System.ServiceModel.Channels.IOutputChannel, System.ServiceModel.Channels.IRequestChannel, System.ServiceModel.IClientChannel, System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel> where TChannel : class where T : class'\n    typeParameters:\n    - id: TChannel\n      description: To be added.\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  - System.ServiceModel.Channels.IOutputChannel\n  - System.ServiceModel.Channels.IRequestChannel\n  - System.ServiceModel.IClientChannel\n  - System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})\n  id: '#ctor(System.ServiceModel.ClientBase{`1})'\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: ClientBase(ClientBase<T>)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.ClientBase(ClientBase<T>)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.ClientBase(ClientBase<T>)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: protected ChannelBase (System.ServiceModel.ClientBase<T> client);\n    parameters:\n    - id: client\n      type: System.ServiceModel.ClientBase{T}\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)\n  id: BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: BeginInvoke(String,Object[],AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.BeginInvoke(String,Object[],AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.BeginInvoke(String,Object[],AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: protected IAsyncResult BeginInvoke (string methodName, object[] args, AsyncCallback callback, object state);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: To be added.\n    - id: args\n      type: System.Object[]\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)\n  id: EndInvoke(System.String,System.Object[],System.IAsyncResult)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: EndInvoke(String,Object[],IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.EndInvoke(String,Object[],IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.EndInvoke(String,Object[],IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: protected object EndInvoke (string methodName, object[] args, IAsyncResult result);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: To be added.\n    - id: args\n      type: System.Object[]\n      description: To be added.\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.IDisposable.Dispose()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.IDisposable.Dispose()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1\n  id: System#ServiceModel#Channels#IChannel#GetProperty``1\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IChannel.GetProperty()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: 'TProperty IChannel.GetProperty<TProperty> () where TProperty : class;'\n    parameters: []\n    return:\n      type: TProperty\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty<TProperty>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  id: System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: IAsyncResult IOutputChannel.BeginSend (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)\n  id: System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: IAsyncResult IOutputChannel.BeginSend (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)\n  id: System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void IOutputChannel.EndSend (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress\n  id: System#ServiceModel#Channels#IOutputChannel#RemoteAddress\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IOutputChannel.RemoteAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.EndpointAddress System.ServiceModel.Channels.IOutputChannel.RemoteAddress { get; }\n    return:\n      type: System.ServiceModel.EndpointAddress\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)\n  id: System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IOutputChannel.Send(Message)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void IOutputChannel.Send (System.ServiceModel.Channels.Message message);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.`1imeSpan)\n  id: System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.`1imeSpan)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void IOutputChannel.Send (System.ServiceModel.Channels.Message message, TimeSpan timeout);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via\n  id: System#ServiceModel#Channels#IOutputChannel#Via\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IOutputChannel.Via\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: Uri System.ServiceModel.Channels.IOutputChannel.Via { get; }\n    return:\n      type: System.Uri\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  id: System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: IAsyncResult IRequestChannel.BeginRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)\n  id: System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: IAsyncResult IRequestChannel.BeginRequest (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)\n  id: System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.Channels.Message IRequestChannel.EndRequest (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n    return:\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress\n  id: System#ServiceModel#Channels#IRequestChannel#RemoteAddress\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IRequestChannel.RemoteAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.EndpointAddress System.ServiceModel.Channels.IRequestChannel.RemoteAddress { get; }\n    return:\n      type: System.ServiceModel.EndpointAddress\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)\n  id: System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IRequestChannel.Request(Message)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.Channels.Message IRequestChannel.Request (System.ServiceModel.Channels.Message message);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    return:\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.`1imeSpan)\n  id: System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.`1imeSpan)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.Channels.Message IRequestChannel.Request (System.ServiceModel.Channels.Message message, TimeSpan timeout);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via\n  id: System#ServiceModel#Channels#IRequestChannel#Via\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.Channels.IRequestChannel.Via\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: Uri System.ServiceModel.Channels.IRequestChannel.Via { get; }\n    return:\n      type: System.Uri\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI\n  id: System#ServiceModel#IClientChannel#AllowInitializationUI\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IClientChannel.AllowInitializationUI\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: bool System.ServiceModel.IClientChannel.AllowInitializationUI { get; set; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\n  id: System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: IAsyncResult IClientChannel.BeginDisplayInitializationUI (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization\n  id: System#ServiceModel#IClientChannel#DidInteractiveInitialization\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IClientChannel.DidInteractiveInitialization\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: bool System.ServiceModel.IClientChannel.DidInteractiveInitialization { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI\n  id: System#ServiceModel#IClientChannel#DisplayInitializationUI\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IClientChannel.DisplayInitializationUI()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void IClientChannel.DisplayInitializationUI ();\n    parameters: []\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)\n  id: System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void IClientChannel.EndDisplayInitializationUI (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via\n  id: System#ServiceModel#IClientChannel#Via\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IClientChannel.Via\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.Via\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.Via\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: Uri System.ServiceModel.IClientChannel.Via { get; }\n    return:\n      type: System.Uri\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort\n  id: System#ServiceModel#ICommunicationObject#Abort\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.Abort()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void ICommunicationObject.Abort ();\n    parameters: []\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)\n  id: System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: IAsyncResult ICommunicationObject.BeginClose (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.`1imeSpan,System.AsyncCallback,System.Object)\n  id: System#ServiceModel#ICommunicationObject#BeginClose(System.`1imeSpan,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: IAsyncResult ICommunicationObject.BeginClose (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)\n  id: System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: IAsyncResult ICommunicationObject.BeginOpen (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.`1imeSpan,System.AsyncCallback,System.Object)\n  id: System#ServiceModel#ICommunicationObject#BeginOpen(System.`1imeSpan,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: IAsyncResult ICommunicationObject.BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close\n  id: System#ServiceModel#ICommunicationObject#Close\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.Close()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void ICommunicationObject.Close ();\n    parameters: []\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.`1imeSpan)\n  id: System#ServiceModel#ICommunicationObject#Close(System.`1imeSpan)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.Close(TimeSpan)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close(TimeSpan)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void ICommunicationObject.Close (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)\n  id: System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void ICommunicationObject.EndClose (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)\n  id: System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void ICommunicationObject.EndOpen (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open\n  id: System#ServiceModel#ICommunicationObject#Open\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.Open()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void ICommunicationObject.Open ();\n    parameters: []\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.`1imeSpan)\n  id: System#ServiceModel#ICommunicationObject#Open(System.`1imeSpan)\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.Open(TimeSpan)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open(TimeSpan)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: void ICommunicationObject.Open (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State\n  id: System#ServiceModel#ICommunicationObject#State\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.ICommunicationObject.State\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.State\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.State\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.CommunicationState System.ServiceModel.ICommunicationObject.State { get; }\n    return:\n      type: System.ServiceModel.CommunicationState\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching\n  id: System#ServiceModel#IContextChannel#AllowOutputBatching\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IContextChannel.AllowOutputBatching\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: bool System.ServiceModel.IContextChannel.AllowOutputBatching { get; set; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession\n  id: System#ServiceModel#IContextChannel#InputSession\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IContextChannel.InputSession\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.Channels.IInputSession System.ServiceModel.IContextChannel.InputSession { get; }\n    return:\n      type: System.ServiceModel.Channels.IInputSession\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress\n  id: System#ServiceModel#IContextChannel#LocalAddress\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IContextChannel.LocalAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.EndpointAddress System.ServiceModel.IContextChannel.LocalAddress { get; }\n    return:\n      type: System.ServiceModel.EndpointAddress\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout\n  id: System#ServiceModel#IContextChannel#OperationTimeout\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IContextChannel.OperationTimeout\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: TimeSpan System.ServiceModel.IContextChannel.OperationTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession\n  id: System#ServiceModel#IContextChannel#OutputSession\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IContextChannel.OutputSession\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.Channels.IOutputSession System.ServiceModel.IContextChannel.OutputSession { get; }\n    return:\n      type: System.ServiceModel.Channels.IOutputSession\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress\n  id: System#ServiceModel#IContextChannel#RemoteAddress\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IContextChannel.RemoteAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.EndpointAddress System.ServiceModel.IContextChannel.RemoteAddress { get; }\n    return:\n      type: System.ServiceModel.EndpointAddress\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId\n  id: System#ServiceModel#IContextChannel#SessionId\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IContextChannel.SessionId\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: string System.ServiceModel.IContextChannel.SessionId { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions\n  id: System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions\n  isEii: true\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  langs:\n  - csharp\n  name: System.ServiceModel.IExtensibleObject\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IExtensibleObject\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IExtensibleObject\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: System.ServiceModel.IExtensionCollection<System.ServiceModel.IContextChannel> System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions { get; }\n    return:\n      type: System.ServiceModel.IExtensionCollection{System.ServiceModel.IContextChannel}\n      description: To be added.\n  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject<System#ServiceModel#IContextChannel>#Extensions*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: ClientBase(ClientBase<T>)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.ClientBase(ClientBase<T>)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.ClientBase(ClientBase<T>)\n- uid: System.ServiceModel.ClientBase{T}\n  parent: System.ServiceModel\n  isExternal: true\n  name: ClientBase<T>\n  nameWithType: ClientBase<T>\n  fullName: System.ServiceModel.ClientBase<T>\n  spec.csharp:\n  - uid: System.ServiceModel.ClientBase`1\n    name: ClientBase\n    nameWithType: ClientBase\n    fullName: ClientBase<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: BeginInvoke(String,Object[],AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.BeginInvoke(String,Object[],AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.BeginInvoke(String,Object[],AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: EndInvoke(String,Object[],IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.EndInvoke(String,Object[],IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.EndInvoke(String,Object[],IAsyncResult)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.IDisposable.Dispose()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.IDisposable.Dispose()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.IDisposable.Dispose()\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IChannel.GetProperty()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty()\n- uid: TProperty\n  isExternal: true\n  name: TProperty\n  nameWithType: TProperty\n  fullName: TProperty\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.RemoteAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: true\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.Send(Message)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.`1imeSpan)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.Via\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.RemoteAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.Request(Message)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.`1imeSpan)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.Via\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.AllowInitializationUI\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.DidInteractiveInitialization\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.DisplayInitializationUI()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI()\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.Via\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.Via\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.Via\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.Abort()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort()\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.`1imeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.`1imeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.Close()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close()\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.`1imeSpan)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.Close(TimeSpan)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close(TimeSpan)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.Open()\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open()\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open()\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.`1imeSpan)\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.Open(TimeSpan)\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open(TimeSpan)\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.State\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.State\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.State\n- uid: System.ServiceModel.CommunicationState\n  parent: System.ServiceModel\n  isExternal: true\n  name: CommunicationState\n  nameWithType: CommunicationState\n  fullName: System.ServiceModel.CommunicationState\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.AllowOutputBatching\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.InputSession\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession\n- uid: System.ServiceModel.Channels.IInputSession\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: IInputSession\n  nameWithType: IInputSession\n  fullName: System.ServiceModel.Channels.IInputSession\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.LocalAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.OperationTimeout\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.OutputSession\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession\n- uid: System.ServiceModel.Channels.IOutputSession\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: IOutputSession\n  nameWithType: IOutputSession\n  fullName: System.ServiceModel.Channels.IOutputSession\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.RemoteAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.SessionId\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IExtensibleObject\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IExtensibleObject\n  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IExtensibleObject\n- uid: System.ServiceModel.IExtensionCollection{System.ServiceModel.IContextChannel}\n  parent: System.ServiceModel\n  isExternal: true\n  name: IExtensionCollection<IContextChannel>\n  nameWithType: IExtensionCollection<IContextChannel>\n  fullName: System.ServiceModel.IExtensionCollection<System.ServiceModel.IContextChannel>\n  spec.csharp:\n  - uid: System.ServiceModel.IExtensionCollection`1\n    name: IExtensionCollection\n    nameWithType: IExtensionCollection\n    fullName: IExtensionCollection<System.ServiceModel.IContextChannel>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.IContextChannel\n    name: IContextChannel\n    nameWithType: IContextChannel\n    fullName: IContextChannel\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: ClientBase<TChannel>+ChannelBase<T>\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.ClientBase<TChannel>+ChannelBase<T>\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: BeginInvoke\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.BeginInvoke\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: EndInvoke\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.EndInvoke\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.IDisposable.Dispose\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty<TProperty>*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IChannel.GetProperty<TProperty>\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty<TProperty>\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.BeginSend\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.EndSend\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.RemoteAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.Send\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IOutputChannel.Via\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.BeginRequest\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.EndRequest\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.RemoteAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.Request\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.Channels.IRequestChannel.Via\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.AllowInitializationUI\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.DidInteractiveInitialization\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.DisplayInitializationUI\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.EndDisplayInitializationUI\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IClientChannel.Via\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.Via\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.Abort\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.BeginClose\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.BeginOpen\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.Close\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.EndClose\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.EndOpen\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.Open\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.ICommunicationObject.State\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.State\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.AllowOutputBatching\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.InputSession\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.LocalAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.OperationTimeout\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.OutputSession\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.RemoteAddress\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IContextChannel.SessionId\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId\n- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject<System#ServiceModel#IContextChannel>#Extensions*\n  parent: System.ServiceModel.ClientBase`1.ChannelBase`1\n  isExternal: false\n  name: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions\n  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions\n"}