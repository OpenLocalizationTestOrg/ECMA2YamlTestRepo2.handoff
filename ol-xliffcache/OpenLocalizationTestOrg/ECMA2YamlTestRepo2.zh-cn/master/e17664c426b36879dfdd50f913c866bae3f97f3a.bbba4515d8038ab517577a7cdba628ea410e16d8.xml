{"nodes":[{"pos":[1062,1193],"content":"Represents a security token resolver that can wrap multiple token resolvers and resolve tokens across all of the wrapped resolvers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a security token resolver that can wrap multiple token resolvers and resolve tokens across all of the wrapped resolvers.","pos":[0,131]}]},{"pos":[1205,1752],"content":"A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause. The AggregateTokenResolver wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects. The token resolvers to be wrapped are specified in the constructor. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause. The AggregateTokenResolver wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects. The token resolvers to be wrapped are specified in the constructor. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver.","pos":[0,547],"nodes":[{"content":"A &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver&gt; object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.","pos":[0,194],"source":"A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause."},{"content":"The AggregateTokenResolver wraps several &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver&gt; objects.","pos":[195,304],"source":" The AggregateTokenResolver wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects."},{"content":"The token resolvers to be wrapped are specified in the constructor.","pos":[305,372]},{"content":"The &lt;xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A&gt; property returns the collection of token resolvers that are wrapped by the aggregate resolver.","pos":[373,547],"source":" The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver."}]}]},{"pos":[3968,4127],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.AggregateTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified list of token resolvers.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AggregateTokenResolver\"></xref> class by using the specified list of token resolvers."},{"pos":[4139,4286],"content":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property is initialized with the specified list of token resolvers.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A&gt; property is initialized with the specified list of token resolvers.","pos":[0,147],"source":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property is initialized with the specified list of token resolvers."}]},{"pos":[4616,4686],"content":"A list of the security token resolvers to be wrapped by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of the security token resolvers to be wrapped by this instance.","pos":[0,70]}]},{"pos":[4873,4965],"content":"<ph id=\"ph1\">&lt;code&gt;tokenResolvers&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>tokenResolvers</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5427,5495],"content":"Gets the security token resolvers that are wrapped by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the security token resolvers that are wrapped by this instance.","pos":[0,68]}]},{"pos":[5801,5892],"content":"A read-only collection that contains the token resolvers that are wrapped by this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A read-only collection that contains the token resolvers that are wrapped by this instance.","pos":[0,91]}]},{"pos":[6822,6909],"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause.","pos":[0,87]}]},{"pos":[6921,7154],"content":"The TryResolveSecurityKeyCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"The TryResolveSecurityKeyCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A&gt; methods.","pos":[0,233],"source":"The TryResolveSecurityKeyCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods."}]},{"pos":[7489,7539],"content":"The key identifier clause to retrieve the key for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to retrieve the key for.","pos":[0,50]}]},{"pos":[7625,7766],"content":"When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.","pos":[0,141],"nodes":[{"content":"When this method returns, contains the key that is referenced in the specified key identifier clause.","pos":[0,101]},{"content":"This parameter is passed uninitialized.","pos":[102,141]}]}]},{"pos":[7825,8029],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a key can be retrieved for the specified key identifier clause; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a key can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8236,8333],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9117,9259],"content":"Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.","pos":[0,142]}]},{"pos":[9271,9486],"content":"The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"The TryResolveTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt; methods.","pos":[0,215],"source":"The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods."}]},{"pos":[9795,9849],"content":"The security key identifier to retrieve the token for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security key identifier to retrieve the token for.","pos":[0,54]}]},{"pos":[9939,10067],"content":"When this method returns, contains a token that represents the specified key identifier. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a token that represents the specified key identifier. This parameter is passed uninitialized.","pos":[0,128],"nodes":[{"content":"When this method returns, contains a token that represents the specified key identifier.","pos":[0,88]},{"content":"This parameter is passed uninitialized.","pos":[89,128]}]}]},{"pos":[10126,10325],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a token can be retrieved for the specified key identifier; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a token can be retrieved for the specified key identifier; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10526,10617],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifier&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifier</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11431,11519],"content":"Attempts to resolve the security token that matches the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to resolve the security token that matches the specified key identifier clause.","pos":[0,88]}]},{"pos":[11531,11746],"content":"The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"The TryResolveTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt; methods.","pos":[0,215],"source":"The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods."}]},{"pos":[12079,12136],"content":"The key identifier clause to create a security token for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to create a security token for.","pos":[0,57]}]},{"pos":[12226,12370],"content":"When this method returns, contains a security token that represents the specified key identifier clause. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a security token that represents the specified key identifier clause. This parameter is passed uninitialized.","pos":[0,144],"nodes":[{"content":"When this method returns, contains a security token that represents the specified key identifier clause.","pos":[0,104]},{"content":"This parameter is passed uninitialized.","pos":[105,144]}]}]},{"pos":[12429,12644],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a security token can be retrieved for the specified key identifier clause; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a security token can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12845,12942],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver\n  id: AggregateTokenResolver\n  children:\n  - System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})\n  - System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers\n  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  langs:\n  - csharp\n  name: AggregateTokenResolver\n  nameWithType: AggregateTokenResolver\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver\n  type: Class\n  summary: Represents a security token resolver that can wrap multiple token resolvers and resolve tokens across all of the wrapped resolvers.\n  remarks: A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause. The AggregateTokenResolver wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects. The token resolvers to be wrapped are specified in the constructor. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver.\n  syntax:\n    content: 'public class AggregateTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenResolver\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})'\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  langs:\n  - csharp\n  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AggregateTokenResolver\"></xref> class by using the specified list of token resolvers.\n  remarks: The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property is initialized with the specified list of token resolvers.\n  syntax:\n    content: public AggregateTokenResolver (System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver> tokenResolvers);\n    parameters:\n    - id: tokenResolvers\n      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}\n      description: A list of the security token resolvers to be wrapped by this instance.\n  overload: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>tokenResolvers</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers\n  id: TokenResolvers\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  langs:\n  - csharp\n  name: TokenResolvers\n  nameWithType: AggregateTokenResolver.TokenResolvers\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the security token resolvers that are wrapped by this instance.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver> TokenResolvers { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}\n      description: A read-only collection that contains the token resolvers that are wrapped by this instance.\n  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  langs:\n  - csharp\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Attempts to retrieve the key that is referenced in the specified key identifier clause.\n  remarks: The TryResolveSecurityKeyCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.\n  syntax:\n    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to retrieve the key for.\n    - id: key\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a key can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.\n  remarks: The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The security key identifier to retrieve the token for.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains a token that represents the specified key identifier. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a token can be retrieved for the specified key identifier; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifier</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Attempts to resolve the security token that matches the specified key identifier clause.\n  remarks: The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to create a security token for.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains a security token that represents the specified key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a security token can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<SecurityTokenResolver>\n  nameWithType: IEnumerable<SecurityTokenResolver>\n  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Selectors.SecurityTokenResolver\n    name: SecurityTokenResolver\n    nameWithType: SecurityTokenResolver\n    fullName: SecurityTokenResolver\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TokenResolvers\n  nameWithType: AggregateTokenResolver.TokenResolvers\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<SecurityTokenResolver>\n  nameWithType: ReadOnlyCollection<SecurityTokenResolver>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Selectors.SecurityTokenResolver\n    name: SecurityTokenResolver\n    nameWithType: SecurityTokenResolver\n    fullName: SecurityTokenResolver\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: AggregateTokenResolver\n  nameWithType: AggregateTokenResolver.AggregateTokenResolver\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TokenResolvers\n  nameWithType: AggregateTokenResolver.TokenResolvers\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore\n  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore\n  nameWithType: AggregateTokenResolver.TryResolveTokenCore\n"}