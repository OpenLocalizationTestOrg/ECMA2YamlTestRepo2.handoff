{"nodes":[{"pos":[1043,1162],"content":"Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.","pos":[0,119]}]},{"pos":[1175,2025],"content":"An array of RegexCompilationInfo objects is passed to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method to provide information about each regular expression to be included in the assembly. Each compiled regular expression that is included in the assembly is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The properties of the RegexCompilationInfo type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.       You can instantiate a RegexCompilationInfo object by calling its overloaded class constructor.","needQuote":false,"needEscape":true,"nodes":[{"content":"An array of RegexCompilationInfo objects is passed to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method to provide information about each regular expression to be included in the assembly. Each compiled regular expression that is included in the assembly is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The properties of the RegexCompilationInfo type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.       You can instantiate a RegexCompilationInfo object by calling its overloaded class constructor.","pos":[0,848],"nodes":[{"content":"An array of RegexCompilationInfo objects is passed to the &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method to provide information about each regular expression to be included in the assembly.","pos":[0,214],"source":"An array of RegexCompilationInfo objects is passed to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method to provide information about each regular expression to be included in the assembly."},{"content":"Each compiled regular expression that is included in the assembly is represented as a class derived from &lt;xref:System.Text.RegularExpressions.Regex&gt;.","pos":[215,364],"source":" Each compiled regular expression that is included in the assembly is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>."},{"content":"The properties of the RegexCompilationInfo type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.","pos":[365,747]},{"content":"You can instantiate a RegexCompilationInfo object by calling its overloaded class constructor.","pos":[754,848]}]}]},{"pos":[2946,3142],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Text.RegularExpressions.RegexCompilationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that contains information about a regular expression to be included in an assembly.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Text.RegularExpressions.RegexCompilationInfo\"></xref> class that contains information about a regular expression to be included in an assembly."},{"pos":[3155,4097],"content":"Each parameter of the RegexCompilationInfo constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class. Because all properties are read/write, their values can also be assigned directly.       The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions. Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of `options`.       If `ispublic` is `true`, the compiled regular expression class is given public accessibility. That is, it can be instantiated from code that executes in any assembly. If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility. That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Each parameter of the RegexCompilationInfo constructor directly corresponds to a property of the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class.","pos":[0,162],"source":"Each parameter of the RegexCompilationInfo constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class."},{"content":"Because all properties are read/write, their values can also be assigned directly.","pos":[163,245]},{"content":"The &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method generates an assembly that contains compiled regular expressions.","pos":[252,393],"source":"       The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions."},{"content":"Therefore, you should not specify &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; as one of the values of <ph id=\"ph1\">`options`</ph>.","pos":[394,513],"source":" Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of `options`."},{"content":"If <ph id=\"ph1\">`ispublic`</ph> is <ph id=\"ph2\">`true`</ph>, the compiled regular expression class is given public accessibility.","pos":[520,613],"source":"       If `ispublic` is `true`, the compiled regular expression class is given public accessibility."},{"content":"That is, it can be instantiated from code that executes in any assembly.","pos":[614,686]},{"content":"If <ph id=\"ph1\">`ispublic`</ph> is <ph id=\"ph2\">`false`</ph>, the compiled regular expression class is given <ph id=\"ph3\">`internal`</ph> (in C#) or <ph id=\"ph4\">`Friend`</ph> (in Visual Basic) accessibility.","pos":[687,823],"source":" If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility."},{"content":"That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.","pos":[824,938]}]},{"pos":[5467,5501],"content":"The regular expression to compile.","needQuote":true,"needEscape":true,"nodes":[{"content":"The regular expression to compile.","pos":[0,34]}]},{"pos":[5595,5671],"content":"The regular expression options to use when compiling the regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The regular expression options to use when compiling the regular expression.","pos":[0,76]}]},{"pos":[5732,5801],"content":"The name of the type that represents the compiled regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type that represents the compiled regular expression.","pos":[0,69]}]},{"pos":[5871,5915],"content":"The namespace to which the new type belongs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace to which the new type belongs.","pos":[0,44]}]},{"pos":[5981,6174],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to make the compiled regular expression publicly visible; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the compiled regular expression publicly visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6354,6427],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>name</code> is &lt;xref:System.String?displayProperty=fullName&gt;."},{"pos":[6531,6851],"content":"<code>pattern</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>fullnamespace</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;pattern&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"<code>pattern</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[92,185],"source":"       -or-       <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;fullnamespace&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[192,294],"source":"       -or-       <code>fullnamespace</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[7701,7929],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Text.RegularExpressions.RegexCompilationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that contains information about a regular expression with a specified time-out value to be included in an assembly.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Text.RegularExpressions.RegexCompilationInfo\"></xref> class that contains information about a regular expression with a specified time-out value to be included in an assembly."},{"pos":[7942,9928],"content":"Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class. Because all properties are read/write, their values can also be assigned directly.       The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions. Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of `options`.       If `ispublic` is `true`, the compiled regular expression class is given public accessibility. That is, it can be instantiated from code that executes in any assembly. If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility. That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.       The `matchTimeout` parameter defines the default time-out interval for the compiled regular expression. This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check. For additional information about the time-out value, see the <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property.      > [!IMPORTANT] >  We recommend that you always set a default time-out value for a compiled regular expression. Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to this constructor overload.","needQuote":false,"needEscape":true,"nodes":[{"content":"Each parameter of the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt; constructor directly corresponds to a property of the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class.","pos":[0,322],"source":"Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class."},{"content":"Because all properties are read/write, their values can also be assigned directly.","pos":[323,405]},{"content":"The &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method generates an assembly that contains compiled regular expressions.","pos":[412,553],"source":"       The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions."},{"content":"Therefore, you should not specify &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; as one of the values of <ph id=\"ph1\">`options`</ph>.","pos":[554,673],"source":" Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of `options`."},{"content":"If <ph id=\"ph1\">`ispublic`</ph> is <ph id=\"ph2\">`true`</ph>, the compiled regular expression class is given public accessibility.","pos":[680,773],"source":"       If `ispublic` is `true`, the compiled regular expression class is given public accessibility."},{"content":"That is, it can be instantiated from code that executes in any assembly.","pos":[774,846]},{"content":"If <ph id=\"ph1\">`ispublic`</ph> is <ph id=\"ph2\">`false`</ph>, the compiled regular expression class is given <ph id=\"ph3\">`internal`</ph> (in C#) or <ph id=\"ph4\">`Friend`</ph> (in Visual Basic) accessibility.","pos":[847,983],"source":" If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility."},{"content":"That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.","pos":[984,1098]},{"content":"The <ph id=\"ph1\">`matchTimeout`</ph> parameter defines the default time-out interval for the compiled regular expression.","pos":[1105,1208],"source":"       The `matchTimeout` parameter defines the default time-out interval for the compiled regular expression."},{"content":"This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt; exception during its next timing check.","pos":[1209,1523],"source":" This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check."},{"content":"For additional information about the time-out value, see the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt; property.","pos":[1524,1669],"source":" For additional information about the time-out value, see the <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  We recommend that you always set a default time-out value for a compiled regular expression.","pos":[1675,1785],"source":"      > [!IMPORTANT] >  We recommend that you always set a default time-out value for a compiled regular expression."},{"content":"Consumers of your regular expression library can override that time-out value by passing a &lt;xref:System.TimeSpan&gt; value that represents the new time-out interval to this constructor overload.","pos":[1786,1977],"source":" Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to this constructor overload."}]},{"pos":[11707,11741],"content":"The regular expression to compile.","needQuote":true,"needEscape":true,"nodes":[{"content":"The regular expression to compile.","pos":[0,34]}]},{"pos":[11835,11911],"content":"The regular expression options to use when compiling the regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The regular expression options to use when compiling the regular expression.","pos":[0,76]}]},{"pos":[11972,12041],"content":"The name of the type that represents the compiled regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type that represents the compiled regular expression.","pos":[0,69]}]},{"pos":[12111,12155],"content":"The namespace to which the new type belongs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace to which the new type belongs.","pos":[0,44]}]},{"pos":[12221,12414],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to make the compiled regular expression publicly visible; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the compiled regular expression publicly visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12485,12542],"content":"The default time-out interval for the regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default time-out interval for the regular expression.","pos":[0,57]}]},{"pos":[12722,12795],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>name</code> is &lt;xref:System.String?displayProperty=fullName&gt;."},{"pos":[12899,13219],"content":"<code>pattern</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>fullnamespace</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;pattern&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"<code>pattern</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[92,185],"source":"       -or-       <code>name</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;fullnamespace&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[192,294],"source":"       -or-       <code>fullnamespace</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[13335,13418],"content":"<ph id=\"ph1\">&lt;code&gt;matchTimeout&lt;/code&gt;</ph> is negative, zero, or greater than approximately 24 days.","needQuote":true,"needEscape":true,"source":"<code>matchTimeout</code> is negative, zero, or greater than approximately 24 days."},{"pos":[13840,13938],"content":"Gets or sets a value that indicates whether the compiled regular expression has public visibility.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the compiled regular expression has public visibility.","pos":[0,98]}]},{"pos":[13950,14448],"content":"If the IsPublic property is `false`, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class. However, because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of `false`.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the IsPublic property is <ph id=\"ph1\">`false`</ph>, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class.","pos":[0,189],"source":"If the IsPublic property is `false`, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class."},{"content":"However, because the &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName&gt; method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of <ph id=\"ph1\">`false`</ph>.","pos":[190,498],"source":" However, because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of `false`."}]},{"pos":[14565,14749],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the regular expression has public visibility; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the regular expression has public visibility; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15282,15346],"content":"Gets or sets the regular expression's default time-out interval.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the regular expression's default time-out interval.","pos":[0,64]}]},{"pos":[15359,17171],"content":"The MatchTimeout property defines the default time-out interval for the compiled regular expression. This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.      > [!IMPORTANT] >  We recommend that you always set a default time-out value for a compiled regular expression. Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to the compiled regular expression's class constructor.       You can assign a default time-out value to a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object in any of the following ways:      -   By calling the <xref:System.AppDomain.SetData%2A?displayProperty=fullName> method and providing the string representation of a <xref:System.TimeSpan> value for the \"REGEX_DEFAULT_MATCH_TIMEOUT\" property.      -   By calling the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> constructor and providing a value for the `matchTimeout` parameter.      -   By setting the value of this property.       To set a reasonable time-out interval, consider the following factors:      -   The length and complexity of the regular expression pattern. Longer and more complex regular expressions require more time than shorter and simpler ones.      -   The expected machine load. Processing takes more time on systems with high CPU and memory utilization.","needQuote":false,"needEscape":true,"nodes":[{"content":"The MatchTimeout property defines the default time-out interval for the compiled regular expression.","pos":[0,100]},{"content":"This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt; exception during its next timing check.","pos":[101,408],"source":" This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  We recommend that you always set a default time-out value for a compiled regular expression.","pos":[414,524],"source":"      > [!IMPORTANT] >  We recommend that you always set a default time-out value for a compiled regular expression."},{"content":"Consumers of your regular expression library can override that time-out value by passing a &lt;xref:System.TimeSpan&gt; value that represents the new time-out interval to the compiled regular expression's class constructor.","pos":[525,742],"source":" Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to the compiled regular expression's class constructor."},{"content":"You can assign a default time-out value to a &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; object in any of the following ways:      -   By calling the &lt;xref:System.AppDomain.SetData%2A?displayProperty=fullName&gt; method and providing the string representation of a &lt;xref:System.TimeSpan&gt; value for the \"REGEX_DEFAULT_MATCH_TIMEOUT\" property.","pos":[749,1102],"source":"       You can assign a default time-out value to a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object in any of the following ways:      -   By calling the <xref:System.AppDomain.SetData%2A?displayProperty=fullName> method and providing the string representation of a <xref:System.TimeSpan> value for the \"REGEX_DEFAULT_MATCH_TIMEOUT\" property."},{"content":"-   By calling the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt; constructor and providing a value for the <ph id=\"ph1\">`matchTimeout`</ph> parameter.","pos":[1108,1393],"source":"      -   By calling the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> constructor and providing a value for the `matchTimeout` parameter."},{"content":"-   By setting the value of this property.","pos":[1399,1441]},{"content":"To set a reasonable time-out interval, consider the following factors:      -   The length and complexity of the regular expression pattern.","pos":[1448,1588]},{"content":"Longer and more complex regular expressions require more time than shorter and simpler ones.","pos":[1589,1681]},{"content":"-   The expected machine load.","pos":[1687,1717]},{"content":"Processing takes more time on systems with high CPU and memory utilization.","pos":[1718,1793]}]},{"pos":[18801,19093],"content":"The default maximum time interval that can elapse in a pattern-matching operation before a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> is thrown, or &lt;xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName&gt; if time-outs are disabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default maximum time interval that can elapse in a pattern-matching operation before a &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt; is thrown, or <ph id=\"ph1\">&amp;lt;</ph>xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> if time-outs are disabled.","pos":[0,292],"source":"The default maximum time interval that can elapse in a pattern-matching operation before a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> is thrown, or &lt;xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName&gt; if time-outs are disabled."}]},{"pos":[19590,19672],"content":"Gets or sets the name of the type that represents the compiled regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the type that represents the compiled regular expression.","pos":[0,82]}]},{"pos":[19684,20106],"content":"The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The Name property defines the class name of the regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and Name properties together define its fully qualified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The Name property defines the class name of the regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and Name properties together define its fully qualified name.","pos":[0,422],"nodes":[{"content":"The &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class is used to define a compiled regular expression, which is represented as a class derived from &lt;xref:System.Text.RegularExpressions.Regex&gt;.","pos":[0,207],"source":"The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>."},{"content":"The Name property defines the class name of the regular expression type, and the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt; and Name properties together define its fully qualified name.","pos":[208,422],"source":" The Name property defines the class name of the regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and Name properties together define its fully qualified name."}]}]},{"pos":[20220,20245],"content":"The name of the new type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the new type.","pos":[0,25]}]},{"pos":[20432,20524],"content":"The value for this property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value for this property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20619,20666],"content":"The value for this property is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value for this property is an empty string.","pos":[0,47]}]},{"pos":[21093,21150],"content":"Gets or sets the namespace to which the new type belongs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the namespace to which the new type belongs.","pos":[0,57]}]},{"pos":[21162,21608],"content":"The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The Namespace property defines the namespace that contains the compiled regular expression type, and the Namespace and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The Namespace property defines the namespace that contains the compiled regular expression type, and the Namespace and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.","pos":[0,446],"nodes":[{"content":"The &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class is used to define a compiled regular expression, which is represented as a class derived from &lt;xref:System.Text.RegularExpressions.Regex&gt;.","pos":[0,207],"source":"The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>."},{"content":"The Namespace property defines the namespace that contains the compiled regular expression type, and the Namespace and &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt; properties together define its fully qualified name.","pos":[208,446],"source":" The Namespace property defines the namespace that contains the compiled regular expression type, and the Namespace and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name."}]}]},{"pos":[21727,21757],"content":"The namespace of the new type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the new type.","pos":[0,30]}]},{"pos":[21949,22041],"content":"The value for this property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value for this property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22458,22528],"content":"Gets or sets the options to use when compiling the regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the options to use when compiling the regular expression.","pos":[0,70]}]},{"pos":[22540,22901],"content":"The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions. Therefore, you do not have to specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of this property. If it is present, the <xref:System.Text.RegularExpressions.RegexOptions> option is ignored.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions. Therefore, you do not have to specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of this property. If it is present, the <xref:System.Text.RegularExpressions.RegexOptions> option is ignored.","pos":[0,361],"nodes":[{"content":"The &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method generates an assembly that contains compiled regular expressions.","pos":[0,141],"source":"The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions."},{"content":"Therefore, you do not have to specify &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; as one of the values of this property.","pos":[142,269],"source":" Therefore, you do not have to specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of this property."},{"content":"If it is present, the &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; option is ignored.","pos":[270,361],"source":" If it is present, the <xref:System.Text.RegularExpressions.RegexOptions> option is ignored."}]}]},{"pos":[23085,23133],"content":"A bitwise combination of the enumeration values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the enumeration values.","pos":[0,48]}]},{"pos":[23640,23687],"content":"Gets or sets the regular expression to compile.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the regular expression to compile.","pos":[0,47]}]},{"pos":[23699,23988],"content":"The Pattern property can contain any valid regular expression. If the value of the Pattern property is not a syntactically correct regular expression pattern, the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method throws an <xref:System.ArgumentException>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Pattern property can contain any valid regular expression. If the value of the Pattern property is not a syntactically correct regular expression pattern, the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method throws an <xref:System.ArgumentException>.","pos":[0,289],"nodes":[{"content":"The Pattern property can contain any valid regular expression.","pos":[0,62]},{"content":"If the value of the Pattern property is not a syntactically correct regular expression pattern, the call to the &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method throws an &lt;xref:System.ArgumentException&gt;.","pos":[63,289],"source":" If the value of the Pattern property is not a syntactically correct regular expression pattern, the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method throws an <xref:System.ArgumentException>."}]}]},{"pos":[24105,24139],"content":"The regular expression to compile.","needQuote":true,"needEscape":true,"nodes":[{"content":"The regular expression to compile.","pos":[0,34]}]},{"pos":[24329,24421],"content":"The value for this property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value for this property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.RegularExpressions.RegexCompilationInfo\n  id: RegexCompilationInfo\n  children:\n  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)\n  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)\n  - System.Text.RegularExpressions.RegexCompilationInfo.IsPublic\n  - System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout\n  - System.Text.RegularExpressions.RegexCompilationInfo.Name\n  - System.Text.RegularExpressions.RegexCompilationInfo.Namespace\n  - System.Text.RegularExpressions.RegexCompilationInfo.Options\n  - System.Text.RegularExpressions.RegexCompilationInfo.Pattern\n  langs:\n  - csharp\n  name: RegexCompilationInfo\n  nameWithType: RegexCompilationInfo\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo\n  type: Class\n  summary: Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.\n  remarks: \"An array of RegexCompilationInfo objects is passed to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method to provide information about each regular expression to be included in the assembly. Each compiled regular expression that is included in the assembly is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The properties of the RegexCompilationInfo type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.  \\n  \\n You can instantiate a RegexCompilationInfo object by calling its overloaded class constructor.\"\n  syntax:\n    content: public class RegexCompilationInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)\n  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)'\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  langs:\n  - csharp\n  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)\n  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Text.RegularExpressions\n  summary: Initializes a new instance of the <xref href=\"System.Text.RegularExpressions.RegexCompilationInfo\"></xref> class that contains information about a regular expression to be included in an assembly.\n  remarks: \"Each parameter of the RegexCompilationInfo constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class. Because all properties are read/write, their values can also be assigned directly.  \\n  \\n The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions. Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of `options`.  \\n  \\n If `ispublic` is `true`, the compiled regular expression class is given public accessibility. That is, it can be instantiated from code that executes in any assembly. If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility. That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.\"\n  example:\n  - \"The following example creates and uses a compiled regular expression in two steps.  \\n  \\n In the first step, compile and execute the following code example. The RegexCompilationInfo constructor in the code example defines a compiled regular expression. The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.  \\n  \\n [!code-cs[sys.txt.rgxCompInfo#1](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_1.cs)]\\n [!code-vb[sys.txt.rgxCompInfo#1](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_1.vb)]  \\n  \\n In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file. The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.  \\n  \\n [!code-vb[sys.txt.rgxCompInfo#2](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_2.vb)]\\n [!code-cs[sys.txt.rgxCompInfo#2](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_2.cs)]\"\n  syntax:\n    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);\n    parameters:\n    - id: pattern\n      type: System.String\n      description: The regular expression to compile.\n    - id: options\n      type: System.Text.RegularExpressions.RegexOptions\n      description: The regular expression options to use when compiling the regular expression.\n    - id: name\n      type: System.String\n      description: The name of the type that represents the compiled regular expression.\n    - id: fullnamespace\n      type: System.String\n      description: The namespace to which the new type belongs.\n    - id: ispublic\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the compiled regular expression publicly visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> is &lt;xref:System.String?displayProperty=fullName&gt;.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>pattern</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>name</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>fullnamespace</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)\n  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)'\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  langs:\n  - csharp\n  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)\n  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Text.RegularExpressions\n  summary: Initializes a new instance of the <xref href=\"System.Text.RegularExpressions.RegexCompilationInfo\"></xref> class that contains information about a regular expression with a specified time-out value to be included in an assembly.\n  remarks: \"Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class. Because all properties are read/write, their values can also be assigned directly.  \\n  \\n The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions. Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of `options`.  \\n  \\n If `ispublic` is `true`, the compiled regular expression class is given public accessibility. That is, it can be instantiated from code that executes in any assembly. If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility. That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.  \\n  \\n The `matchTimeout` parameter defines the default time-out interval for the compiled regular expression. This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check. For additional information about the time-out value, see the <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  We recommend that you always set a default time-out value for a compiled regular expression. Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to this constructor overload.\"\n  example:\n  - \"The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \\n  \\n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_1.cs)]\\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_1.vb)]  \\n  \\n The regular expression pattern `(\\\\w)\\\\1+` is defined as shown in the following table.  \\n  \\n|Pattern|Description|  \\n|-------------|-----------------|  \\n|`(\\\\w)`|Match any word character and assign it to the first capturing group.|  \\n|`\\\\1+`|Match one or more occurrences of the value of the first captured group.|  \\n  \\n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \\n  \\n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_2.cs)]\\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_2.vb)]\"\n  syntax:\n    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);\n    parameters:\n    - id: pattern\n      type: System.String\n      description: The regular expression to compile.\n    - id: options\n      type: System.Text.RegularExpressions.RegexOptions\n      description: The regular expression options to use when compiling the regular expression.\n    - id: name\n      type: System.String\n      description: The name of the type that represents the compiled regular expression.\n    - id: fullnamespace\n      type: System.String\n      description: The namespace to which the new type belongs.\n    - id: ispublic\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the compiled regular expression publicly visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: matchTimeout\n      type: System.TimeSpan\n      description: The default time-out interval for the regular expression.\n  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> is &lt;xref:System.String?displayProperty=fullName&gt;.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>pattern</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>name</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>fullnamespace</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>matchTimeout</code> is negative, zero, or greater than approximately 24 days.\n  platform:\n  - net462\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic\n  id: IsPublic\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  langs:\n  - csharp\n  name: IsPublic\n  nameWithType: RegexCompilationInfo.IsPublic\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Text.RegularExpressions\n  summary: Gets or sets a value that indicates whether the compiled regular expression has public visibility.\n  remarks: If the IsPublic property is `false`, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class. However, because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of `false`.\n  syntax:\n    content: public bool IsPublic { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the regular expression has public visibility; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout\n  id: MatchTimeout\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  langs:\n  - csharp\n  name: MatchTimeout\n  nameWithType: RegexCompilationInfo.MatchTimeout\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Text.RegularExpressions\n  summary: Gets or sets the regular expression's default time-out interval.\n  remarks: \"The MatchTimeout property defines the default time-out interval for the compiled regular expression. This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.  \\n  \\n> [!IMPORTANT]\\n>  We recommend that you always set a default time-out value for a compiled regular expression. Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to the compiled regular expression's class constructor.  \\n  \\n You can assign a default time-out value to a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object in any of the following ways:  \\n  \\n-   By calling the <xref:System.AppDomain.SetData%2A?displayProperty=fullName> method and providing the string representation of a <xref:System.TimeSpan> value for the \\\"REGEX_DEFAULT_MATCH_TIMEOUT\\\" property.  \\n  \\n-   By calling the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> constructor and providing a value for the `matchTimeout` parameter.  \\n  \\n-   By setting the value of this property.  \\n  \\n To set a reasonable time-out interval, consider the following factors:  \\n  \\n-   The length and complexity of the regular expression pattern. Longer and more complex regular expressions require more time than shorter and simpler ones.  \\n  \\n-   The expected machine load. Processing takes more time on systems with high CPU and memory utilization.\"\n  example:\n  - \"The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \\n  \\n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/p-system.text.regularexp_1.cs)]\\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/p-system.text.regularexp_1.vb)]  \\n  \\n The regular expression pattern `(\\\\w)\\\\1+` is defined as shown in the following table.  \\n  \\n|Pattern|Description|  \\n|-------------|-----------------|  \\n|`(\\\\w)`|Match any word character and assign it to the first capturing group.|  \\n|`\\\\1+`|Match one or more occurrences of the value of the first captured group.|  \\n  \\n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \\n  \\n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/p-system.text.regularexp_2.cs)]\\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/p-system.text.regularexp_2.vb)]\"\n  syntax:\n    content: public TimeSpan MatchTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The default maximum time interval that can elapse in a pattern-matching operation before a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> is thrown, or &lt;xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName&gt; if time-outs are disabled.\n  overload: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name\n  id: Name\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: RegexCompilationInfo.Name\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Text.RegularExpressions\n  summary: Gets or sets the name of the type that represents the compiled regular expression.\n  remarks: The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The Name property defines the class name of the regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and Name properties together define its fully qualified name.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the new type.\n  overload: System.Text.RegularExpressions.RegexCompilationInfo.Name*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value for this property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value for this property is an empty string.\n  platform:\n  - net462\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace\n  id: Namespace\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: RegexCompilationInfo.Namespace\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Text.RegularExpressions\n  summary: Gets or sets the namespace to which the new type belongs.\n  remarks: The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The Namespace property defines the namespace that contains the compiled regular expression type, and the Namespace and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.\n  syntax:\n    content: public string Namespace { get; set; }\n    return:\n      type: System.String\n      description: The namespace of the new type.\n  overload: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value for this property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options\n  id: Options\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  langs:\n  - csharp\n  name: Options\n  nameWithType: RegexCompilationInfo.Options\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Text.RegularExpressions\n  summary: Gets or sets the options to use when compiling the regular expression.\n  remarks: The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions. Therefore, you do not have to specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of this property. If it is present, the <xref:System.Text.RegularExpressions.RegexOptions> option is ignored.\n  syntax:\n    content: public System.Text.RegularExpressions.RegexOptions Options { get; set; }\n    return:\n      type: System.Text.RegularExpressions.RegexOptions\n      description: A bitwise combination of the enumeration values.\n  overload: System.Text.RegularExpressions.RegexCompilationInfo.Options*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern\n  id: Pattern\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  langs:\n  - csharp\n  name: Pattern\n  nameWithType: RegexCompilationInfo.Pattern\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Text.RegularExpressions\n  summary: Gets or sets the regular expression to compile.\n  remarks: The Pattern property can contain any valid regular expression. If the value of the Pattern property is not a syntactically correct regular expression pattern, the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method throws an <xref:System.ArgumentException>.\n  syntax:\n    content: public string Pattern { get; set; }\n    return:\n      type: System.String\n      description: The regular expression to compile.\n  overload: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value for this property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)\n  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.RegularExpressions.RegexOptions\n  parent: System.Text.RegularExpressions\n  isExternal: true\n  name: RegexOptions\n  nameWithType: RegexOptions\n  fullName: System.Text.RegularExpressions.RegexOptions\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)\n  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: RegexCompilationInfo.IsPublic\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: MatchTimeout\n  nameWithType: RegexCompilationInfo.MatchTimeout\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: Name\n  nameWithType: RegexCompilationInfo.Name\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: Namespace\n  nameWithType: RegexCompilationInfo.Namespace\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: Options\n  nameWithType: RegexCompilationInfo.Options\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: Pattern\n  nameWithType: RegexCompilationInfo.Pattern\n  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: RegexCompilationInfo\n  nameWithType: RegexCompilationInfo.RegexCompilationInfo\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: RegexCompilationInfo.IsPublic\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: MatchTimeout\n  nameWithType: RegexCompilationInfo.MatchTimeout\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name*\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: Name\n  nameWithType: RegexCompilationInfo.Name\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: Namespace\n  nameWithType: RegexCompilationInfo.Namespace\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options*\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: Options\n  nameWithType: RegexCompilationInfo.Options\n- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*\n  parent: System.Text.RegularExpressions.RegexCompilationInfo\n  isExternal: false\n  name: Pattern\n  nameWithType: RegexCompilationInfo.Pattern\n"}