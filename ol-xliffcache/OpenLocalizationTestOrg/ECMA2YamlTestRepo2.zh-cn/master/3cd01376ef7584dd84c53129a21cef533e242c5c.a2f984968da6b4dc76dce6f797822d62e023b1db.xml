{"nodes":[{"pos":[1131,1255],"content":"Specifies the values that define or are used in <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object permissions.","needQuote":true,"needEscape":true,"source":"Specifies the values that define or are used in <xref href=\"System.Net.PeerToPeer.Collaboration\"></xref> object permissions."},{"pos":[1268,1688],"content":"The default <xref:System.Security.Permissions> allow all local and Intranet zone applications to access collaboration services, and no permission is granted for Internet zone applications. In other words, if the default permissions are not changed, all link-local and site-local applications have access to Peer-To-Peer collaboration services, but global applications have no access.       This class is not derivable.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default <xref:System.Security.Permissions> allow all local and Intranet zone applications to access collaboration services, and no permission is granted for Internet zone applications. In other words, if the default permissions are not changed, all link-local and site-local applications have access to Peer-To-Peer collaboration services, but global applications have no access.       This class is not derivable.","pos":[0,418],"nodes":[{"content":"The default &lt;xref:System.Security.Permissions&gt; allow all local and Intranet zone applications to access collaboration services, and no permission is granted for Internet zone applications.","pos":[0,188],"source":"The default <xref:System.Security.Permissions> allow all local and Intranet zone applications to access collaboration services, and no permission is granted for Internet zone applications."},{"content":"In other words, if the default permissions are not changed, all link-local and site-local applications have access to Peer-To-Peer collaboration services, but global applications have no access.","pos":[189,383]},{"content":"This class is not derivable.","pos":[390,418]}]}]},{"pos":[3264,3520],"content":"Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref>. The initial <xref href=\"System.Security.Permissions.PermissionState\"></xref> for this instance is passed when the constructor is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,119],"source":"Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref>."},{"content":"The initial <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this instance is passed when the constructor is called.","pos":[120,256],"source":" The initial <xref href=\"System.Security.Permissions.PermissionState\"></xref> for this instance is passed when the constructor is called."}]},{"pos":[3533,3997],"content":"Instances of this type either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.       If state is <xref:System.Security.Permissions.PermissionState>, the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance passes all demands. If state contains any other value, the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance fails all demands.","needQuote":false,"needEscape":true,"nodes":[{"content":"Instances of this type either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.       If state is <xref:System.Security.Permissions.PermissionState>, the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance passes all demands. If state contains any other value, the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance fails all demands.","pos":[0,462],"nodes":[{"content":"Instances of this type either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.","pos":[0,150]},{"content":"If state is &lt;xref:System.Security.Permissions.PermissionState&gt;, the &lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&gt; instance passes all demands.","pos":[157,324],"source":"       If state is <xref:System.Security.Permissions.PermissionState>, the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance passes all demands."},{"content":"If state contains any other value, the &lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&gt; instance fails all demands.","pos":[325,462],"source":" If state contains any other value, the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance fails all demands."}]}]},{"pos":[4217,4319],"content":"One of the values in the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"One of the values in the <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration."},{"pos":[4877,5004],"content":"Creates and returns a copy of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns a copy of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref>."},{"pos":[5016,5171],"content":"A copy of a <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance grants the same access to resources as the original permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of a &lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&gt; instance grants the same access to resources as the original permission.","pos":[0,155],"source":"A copy of a <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance grants the same access to resources as the original permission."}]},{"pos":[5338,5494],"content":"A &lt;xref:System.Object&gt; that contains a copy of the current instance of <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Object> that contains a copy of the current instance of <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref>."},{"pos":[6177,6239],"content":"Represents the XML object model for encoding security objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the XML object model for encoding security objects.","pos":[0,62]}]},{"pos":[6252,6461],"content":"This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.       This class cannot be inherited.","needQuote":false,"needEscape":true,"nodes":[{"content":"This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.       This class cannot be inherited.","pos":[0,207],"nodes":[{"content":"This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.","pos":[0,169]},{"content":"This class cannot be inherited.","pos":[176,207]}]}]},{"pos":[6643,6697],"content":"The XML encoding to use to reconstruct the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the permission.","pos":[0,54]}]},{"pos":[6892,7069],"content":"-   The parameter is not a valid permission element.      -   The parameter does not contain a valid type or class.      -   The parameter's version number is not supported.","needQuote":false,"needEscape":true,"nodes":[{"content":"The parameter is not a valid permission element.      -   The parameter does not contain a valid type or class.      -   The parameter's version number is not supported.","pos":[4,173],"nodes":[{"content":"The parameter is not a valid permission element.","pos":[0,48]},{"content":"-   The parameter does not contain a valid type or class.","pos":[54,111]},{"content":"-   The parameter's version number is not supported.","pos":[117,169]}]}]},{"pos":[7173,7348],"content":"The parameter is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The parameter is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[7922,8129],"content":"Creates and returns a permission that is the intersection of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p2\">&lt;/code&gt;</ept> permission.","needQuote":true,"needEscape":true,"source":"Creates and returns a permission that is the intersection of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and the specified <code>target</code> permission."},{"pos":[8142,8773],"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.       The following statements are required to be `true` for all implementations of the Intersect method. X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (`Nothing` in Visual Basic).      -   X.Intersect(X) returns a value equal to X.      -   X.Intersect(Y) returns the same value as Y.Intersect(X).      -   X.Intersect(a `null` reference) returns a `null` reference.","needQuote":false,"needEscape":true,"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common.","pos":[0,118]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[119,198]},{"content":"The following statements are required to be <ph id=\"ph1\">`true`</ph> for all implementations of the Intersect method.","pos":[205,304],"source":"       The following statements are required to be `true` for all implementations of the Intersect method."},{"content":"X and Y represent &lt;xref:System.Security.IPermission&gt; object references that are not a <ph id=\"ph1\">`null`</ph> reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","pos":[305,436],"source":" X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (`Nothing` in Visual Basic)."},{"content":"-   X.Intersect(X) returns a value equal to X.      -   X.Intersect(Y) returns the same value as Y.Intersect(X).","pos":[442,554]},{"content":"-   X.Intersect(a <ph id=\"ph1\">`null`</ph> reference) returns a <ph id=\"ph2\">`null`</ph> reference.","pos":[560,623],"source":"      -   X.Intersect(a `null` reference) returns a `null` reference."}]},{"pos":[8982,9089],"content":"Permission to Intersect with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Permission to Intersect with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"Permission to Intersect with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[9161,9571],"content":"A new permission that represents the intersection of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and the specified <code>target</code> permission. This new permission is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the intersection of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p2\">&lt;/code&gt;</ept> permission.","pos":[0,199],"source":"A new permission that represents the intersection of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and the specified <code>target</code> permission."},{"content":"This new permission is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic) if the intersection is empty.","pos":[200,410],"source":" This new permission is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if the intersection is empty."}]},{"pos":[9767,10020],"content":"The target parameter is not a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic) and is not an instance of the same class as the current permission.","needQuote":true,"needEscape":true,"source":"The target parameter is not a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) and is not an instance of the same class as the current permission."},{"pos":[10599,10775],"content":"Determines whether the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is a subset of the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p2\">&lt;/code&gt;</ept> permission.","needQuote":true,"needEscape":true,"source":"Determines whether the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> is a subset of the specified <code>target</code> permission."},{"pos":[12507,12637],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]},{"pos":[12696,12972],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current <bpt id=\"p2\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is a subset of the specified permission; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13169,13344],"content":"The parameter is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The parameter is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[13852,14000],"content":"Returns a value specifying whether the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is unrestricted.","needQuote":true,"needEscape":true,"source":"Returns a value specifying whether the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> is unrestricted."},{"pos":[14012,14110],"content":"An unrestricted permission represents access to any and all resources protected by the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"An unrestricted permission represents access to any and all resources protected by the permission.","pos":[0,98]}]},{"pos":[14242,14420],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is unrestricted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the current permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14992,15130],"content":"Creates an XML encoding of the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and its current state.","needQuote":true,"needEscape":true,"source":"Creates an XML encoding of the <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and its current state."},{"pos":[15142,15255],"content":"In general, permission class methods are used by the infrastructure and are not intended for use in applications.","needQuote":true,"needEscape":true,"nodes":[{"content":"In general, permission class methods are used by the infrastructure and are not intended for use in applications.","pos":[0,113]}]},{"pos":[15431,15498],"content":"An XML encoding of the permission, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]},{"pos":[16152,16340],"content":"Creates a permission that is the union of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p2\">&lt;/code&gt;</ept> permission.","needQuote":true,"needEscape":true,"source":"Creates a permission that is the union of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and the specified <code>target</code> permission."},{"pos":[16353,17140],"content":"The result of a call to Union is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> and the specified permission. Any demand that passes either permission passes their union.       The following statements are required to be `true` for all implementations of the Union method. X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).      -   X.Union(X) returns an object that has the same value as X.      -   X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).      -   X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.","needQuote":false,"needEscape":true,"nodes":[{"content":"The result of a call to Union is a permission that represents all the operations represented by both the current &lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&gt; and the specified permission.","pos":[0,213],"source":"The result of a call to Union is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> and the specified permission."},{"content":"Any demand that passes either permission passes their union.","pos":[214,274]},{"content":"The following statements are required to be <ph id=\"ph1\">`true`</ph> for all implementations of the Union method.","pos":[281,376],"source":"       The following statements are required to be `true` for all implementations of the Union method."},{"content":"X and Y represent &lt;xref:System.Security.IPermission&gt; objects that are not a <ph id=\"ph1\">`null`</ph> reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","pos":[377,498],"source":" X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic)."},{"content":"-   X.Union(X) returns an object that has the same value as X.      -   X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).","pos":[504,666]},{"content":"-   X.Union(a <ph id=\"ph1\">`null`</ph> reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic)) returns an object that has the same value as X.","pos":[672,779],"source":"      -   X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X."}]},{"pos":[17345,17452],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[17524,17696],"content":"A new permission that represents the Union of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the specified permission.","needQuote":true,"needEscape":true,"source":"A new permission that represents the Union of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and the specified permission."},{"pos":[17888,18063],"content":"The parameter is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The parameter is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  id: PeerCollaborationPermission\n  children:\n  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy\n  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)\n  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)\n  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted\n  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml\n  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: PeerCollaborationPermission\n  nameWithType: PeerCollaborationPermission\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  type: Class\n  summary: Specifies the values that define or are used in <xref href=\"System.Net.PeerToPeer.Collaboration\"></xref> object permissions.\n  remarks: \"The default <xref:System.Security.Permissions> allow all local and Intranet zone applications to access collaboration services, and no permission is granted for Internet zone applications. In other words, if the default permissions are not changed, all link-local and site-local applications have access to Peer-To-Peer collaboration services, but global applications have no access.  \\n  \\n This class is not derivable.\"\n  syntax:\n    content: 'public sealed class PeerCollaborationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  langs:\n  - csharp\n  name: PeerCollaborationPermission(PermissionState)\n  nameWithType: PeerCollaborationPermission.PeerCollaborationPermission(PermissionState)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.PeerCollaborationPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer.Collaboration\n  summary: Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref>. The initial <xref href=\"System.Security.Permissions.PermissionState\"></xref> for this instance is passed when the constructor is called.\n  remarks: \"Instances of this type either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.  \\n  \\n If state is <xref:System.Security.Permissions.PermissionState>, the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance passes all demands. If state contains any other value, the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance fails all demands.\"\n  syntax:\n    content: public PeerCollaborationPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the values in the <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration.\n  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy\n  id: Copy\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: PeerCollaborationPermission.Copy()\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer.Collaboration\n  summary: Creates and returns a copy of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref>.\n  remarks: A copy of a <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> instance grants the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A <xref:System.Object> that contains a copy of the current instance of <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref>.\n  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: PeerCollaborationPermission.FromXml(SecurityElement)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer.Collaboration\n  summary: Represents the XML object model for encoding security objects.\n  remarks: \"This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.  \\n  \\n This class cannot be inherited.\"\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement e);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the permission.\n  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"-   The parameter is not a valid permission element.  \\n  \\n-   The parameter does not contain a valid type or class.  \\n  \\n-   The parameter's version number is not supported.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The parameter is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: PeerCollaborationPermission.Intersect(IPermission)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer.Collaboration\n  summary: Creates and returns a permission that is the intersection of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and the specified <code>target</code> permission.\n  remarks: \"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.  \\n  \\n The following statements are required to be `true` for all implementations of the Intersect method. X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (`Nothing` in Visual Basic).  \\n  \\n-   X.Intersect(X) returns a value equal to X.  \\n  \\n-   X.Intersect(Y) returns the same value as Y.Intersect(X).  \\n  \\n-   X.Intersect(a `null` reference) returns a `null` reference.\"\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Permission to Intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and the specified <code>target</code> permission. This new permission is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if the intersection is empty.\n  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The target parameter is not a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) and is not an instance of the same class as the current permission.\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: PeerCollaborationPermission.IsSubsetOf(IPermission)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer.Collaboration\n  summary: Determines whether the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> is a subset of the specified <code>target</code> permission.\n  remarks: \"The current <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to \\\"*C:\\\\example.txt*\\\" is a subset of a permission that represents access to \\\"*C:\\\\\\\\*\\\". If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.  \\n  \\n The following statements are required to be `true` for all implementations of the IsSubsetOf method. X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).  \\n  \\n-   X.IsSubsetOf(X) returns `true`.  \\n  \\n-   X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.  \\n  \\n-   If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.  \\n  \\n If X represents an empty [IPermission](http://go.microsoft.com/fwlink?LinkID=98303) object with a permission state of None and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`. If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> of two empty permissions is an empty permission.\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The parameter is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: PeerCollaborationPermission.IsUnrestricted()\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer.Collaboration\n  summary: Returns a value specifying whether the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> is unrestricted.\n  remarks: An unrestricted permission represents access to any and all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the current permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml\n  id: ToXml\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: PeerCollaborationPermission.ToXml()\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer.Collaboration\n  summary: Creates an XML encoding of the <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and its current state.\n  remarks: In general, permission class methods are used by the infrastructure and are not intended for use in applications.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: PeerCollaborationPermission.Union(IPermission)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer.Collaboration\n  summary: Creates a permission that is the union of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and the specified <code>target</code> permission.\n  remarks: \"The result of a call to Union is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> and the specified permission. Any demand that passes either permission passes their union.  \\n  \\n The following statements are required to be `true` for all implementations of the Union method. X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).  \\n  \\n-   X.Union(X) returns an object that has the same value as X.  \\n  \\n-   X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).  \\n  \\n-   X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.\"\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the Union of the current <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> and the specified permission.\n  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The parameter is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: PeerCollaborationPermission(PermissionState)\n  nameWithType: PeerCollaborationPermission.PeerCollaborationPermission(PermissionState)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.PeerCollaborationPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: PeerCollaborationPermission.Copy()\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: PeerCollaborationPermission.FromXml(SecurityElement)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: PeerCollaborationPermission.Intersect(IPermission)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(IPermission)\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: PeerCollaborationPermission.IsSubsetOf(IPermission)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: PeerCollaborationPermission.IsUnrestricted()\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted()\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: PeerCollaborationPermission.ToXml()\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml()\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: PeerCollaborationPermission.Union(IPermission)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(IPermission)\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor*\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: PeerCollaborationPermission\n  nameWithType: PeerCollaborationPermission.PeerCollaborationPermission\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy*\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: Copy\n  nameWithType: PeerCollaborationPermission.Copy\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml*\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: PeerCollaborationPermission.FromXml\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect*\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: PeerCollaborationPermission.Intersect\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf*\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: PeerCollaborationPermission.IsSubsetOf\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted*\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: PeerCollaborationPermission.IsUnrestricted\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml*\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: PeerCollaborationPermission.ToXml\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union*\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\n  isExternal: false\n  name: Union\n  nameWithType: PeerCollaborationPermission.Union\n"}