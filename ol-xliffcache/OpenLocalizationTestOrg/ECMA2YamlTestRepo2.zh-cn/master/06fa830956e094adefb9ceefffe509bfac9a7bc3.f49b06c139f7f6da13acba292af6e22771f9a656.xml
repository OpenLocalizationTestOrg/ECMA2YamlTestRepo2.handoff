{"nodes":[{"pos":[1017,1326],"content":"Maintains the registration of all access keys and the handling of interop keyboard commands between <ph id=\"ph1\">[!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)]</ph>, <ph id=\"ph2\">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>, and <ph id=\"ph3\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"Maintains the registration of all access keys and the handling of interop keyboard commands between [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)], [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)], and [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]."},{"pos":[1339,1950],"content":"An AccessKeyManager object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>.       The AccessKeyManager is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys.       When the registered access key is pressed, the AccessKeyManager calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element.       An element can be associated with any number of access keys.","needQuote":false,"needEscape":true,"nodes":[{"content":"An AccessKeyManager object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>.       The AccessKeyManager is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys.       When the registered access key is pressed, the AccessKeyManager calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element.       An element can be associated with any number of access keys.","pos":[0,605],"nodes":[{"content":"An AccessKeyManager object is created on demand with one per &lt;xref:System.Windows.Threading.Dispatcher&gt;.","pos":[0,104],"source":"An AccessKeyManager object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>."},{"content":"The AccessKeyManager is attached as an event handler for &lt;xref:System.Windows.Input.InputManager.PostProcessInput&gt; and exposes methods to &lt;xref:System.Windows.Input.AccessKeyManager.Register%2A&gt; and &lt;xref:System.Windows.Input.AccessKeyManager.Unregister%2A&gt; access keys.","pos":[111,381],"source":"       The AccessKeyManager is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys."},{"content":"When the registered access key is pressed, the AccessKeyManager calls the &lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt; method on the target element.","pos":[388,538],"source":"       When the registered access key is pressed, the AccessKeyManager calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element."},{"content":"An element can be associated with any number of access keys.","pos":[545,605]}]}]},{"pos":[2522,2612],"content":"Identifies the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> routed event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; routed event.","pos":[0,90],"source":"Identifies the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> routed event."}]},{"pos":[2779,2791],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3579,3679],"content":"Adds a handler for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a handler for the &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; attached event.","pos":[0,100],"source":"Adds a handler for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event."}]},{"pos":[3948,4079],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that listens to this event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."},{"pos":[4179,4209],"content":"The event handler to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event handler to be added.","pos":[0,30]}]},{"pos":[4816,4907],"content":"Indicates whether the specified key is registered as an access keys in the specified scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the specified key is registered as an access keys in the specified scope.","pos":[0,91]}]},{"pos":[5071,5114],"content":"The presentation source to query for <ph id=\"ph1\">`key`</ph>.","needQuote":true,"needEscape":true,"source":"The presentation source to query for `key`."},{"pos":[5174,5191],"content":"The key to query.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to query.","pos":[0,17]}]},{"pos":[5250,5411],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key is registered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6036,6229],"content":"Processes the specified access keys as if a <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event for the key was passed to the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Input.AccessKeyManager\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Processes the specified access keys as if a <xref href=\"System.Windows.UIElement.KeyDown\"></xref> event for the key was passed to the <xref href=\"System.Windows.Input.AccessKeyManager\"></xref>."},{"pos":[6405,6434],"content":"The scope for the access key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scope for the access key.","pos":[0,29]}]},{"pos":[6494,6509],"content":"The access key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access key.","pos":[0,15]}]},{"pos":[6577,6617],"content":"Indicates if <ph id=\"ph1\">`key`</ph> has multiple matches.","needQuote":true,"needEscape":true,"source":"Indicates if `key` has multiple matches."},{"pos":[6676,6846],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there are more keys that match; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are more keys that match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7453,7517],"content":"Associates the specified access keys with the specified element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Associates the specified access keys with the specified element.","pos":[0,64]}]},{"pos":[7530,7714],"content":"When the access keys is pressed, the  <xref:System.Windows.UIElement.OnAccessKey%2A> method of `element` is called.       An element can be associated with any number of access keys.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the access keys is pressed, the  &lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt; method of <ph id=\"ph1\">`element`</ph> is called.","pos":[0,115],"source":"When the access keys is pressed, the  <xref:System.Windows.UIElement.OnAccessKey%2A> method of `element` is called."},{"content":"An element can be associated with any number of access keys.","pos":[122,182]}]},{"pos":[7894,7909],"content":"The access key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access key.","pos":[0,15]}]},{"pos":[7988,8024],"content":"The element to associate <ph id=\"ph1\">`key`</ph> with.","needQuote":true,"needEscape":true,"source":"The element to associate `key` with."},{"pos":[8887,9011],"content":"Removes the specified <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> event handler from the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; event handler from the specified object.","pos":[0,124],"source":"Removes the specified <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> event handler from the specified object."}]},{"pos":[9283,9414],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that listens to this event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."},{"pos":[9514,9546],"content":"The event handler to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event handler to be removed.","pos":[0,32]}]},{"pos":[10182,10249],"content":"Disassociates the specified access keys from the specified element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disassociates the specified access keys from the specified element.","pos":[0,67]}]},{"pos":[10430,10445],"content":"The access key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access key.","pos":[0,15]}]},{"pos":[10524,10569],"content":"The element from which to disassociate <ph id=\"ph1\">`key`</ph>.","needQuote":true,"needEscape":true,"source":"The element from which to disassociate `key`."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.AccessKeyManager\n  id: AccessKeyManager\n  children:\n  - System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent\n  - System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  - System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)\n  - System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)\n  - System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)\n  - System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  - System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)\n  langs:\n  - csharp\n  name: AccessKeyManager\n  nameWithType: AccessKeyManager\n  fullName: System.Windows.Input.AccessKeyManager\n  type: Class\n  summary: Maintains the registration of all access keys and the handling of interop keyboard commands between [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)], [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)], and [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)].\n  remarks: \"An AccessKeyManager object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>.  \\n  \\n The AccessKeyManager is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys.  \\n  \\n When the registered access key is pressed, the AccessKeyManager calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element.  \\n  \\n An element can be associated with any number of access keys.\"\n  syntax:\n    content: public sealed class AccessKeyManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent\n  id: AccessKeyPressedEvent\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: AccessKeyPressedEvent\n  nameWithType: AccessKeyManager.AccessKeyPressedEvent\n  fullName: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  id: AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n  fullName: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event.\n  syntax:\n    content: public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.AccessKeyPressedEventHandler\n      description: The event handler to be added.\n  overload: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)\n  id: IsKeyRegistered(System.Object,System.String)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: IsKeyRegistered(Object,String)\n  nameWithType: AccessKeyManager.IsKeyRegistered(Object,String)\n  fullName: System.Windows.Input.AccessKeyManager.IsKeyRegistered(Object,String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Indicates whether the specified key is registered as an access keys in the specified scope.\n  syntax:\n    content: public static bool IsKeyRegistered (object scope, string key);\n    parameters:\n    - id: scope\n      type: System.Object\n      description: The presentation source to query for `key`.\n    - id: key\n      type: System.String\n      description: The key to query.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key is registered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.AccessKeyManager.IsKeyRegistered*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)\n  id: ProcessKey(System.Object,System.String,System.Boolean)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: ProcessKey(Object,String,Boolean)\n  nameWithType: AccessKeyManager.ProcessKey(Object,String,Boolean)\n  fullName: System.Windows.Input.AccessKeyManager.ProcessKey(Object,String,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Processes the specified access keys as if a <xref href=\"System.Windows.UIElement.KeyDown\"></xref> event for the key was passed to the <xref href=\"System.Windows.Input.AccessKeyManager\"></xref>.\n  syntax:\n    content: public static bool ProcessKey (object scope, string key, bool isMultiple);\n    parameters:\n    - id: scope\n      type: System.Object\n      description: The scope for the access key.\n    - id: key\n      type: System.String\n      description: The access key.\n    - id: isMultiple\n      type: System.Boolean\n      description: Indicates if `key` has multiple matches.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are more keys that match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.AccessKeyManager.ProcessKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)\n  id: Register(System.String,System.Windows.IInputElement)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: Register(String,IInputElement)\n  nameWithType: AccessKeyManager.Register(String,IInputElement)\n  fullName: System.Windows.Input.AccessKeyManager.Register(String,IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Associates the specified access keys with the specified element.\n  remarks: \"When the access keys is pressed, the  <xref:System.Windows.UIElement.OnAccessKey%2A> method of `element` is called.  \\n  \\n An element can be associated with any number of access keys.\"\n  syntax:\n    content: public static void Register (string key, System.Windows.IInputElement element);\n    parameters:\n    - id: key\n      type: System.String\n      description: The access key.\n    - id: element\n      type: System.Windows.IInputElement\n      description: The element to associate `key` with.\n  overload: System.Windows.Input.AccessKeyManager.Register*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  id: RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n  fullName: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes the specified <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> event handler from the specified object.\n  syntax:\n    content: public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.AccessKeyPressedEventHandler\n      description: The event handler to be removed.\n  overload: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)\n  id: Unregister(System.String,System.Windows.IInputElement)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: Unregister(String,IInputElement)\n  nameWithType: AccessKeyManager.Unregister(String,IInputElement)\n  fullName: System.Windows.Input.AccessKeyManager.Unregister(String,IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Disassociates the specified access keys from the specified element.\n  syntax:\n    content: public static void Unregister (string key, System.Windows.IInputElement element);\n    parameters:\n    - id: key\n      type: System.String\n      description: The access key.\n    - id: element\n      type: System.Windows.IInputElement\n      description: The element from which to disassociate `key`.\n  overload: System.Windows.Input.AccessKeyManager.Unregister*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: AccessKeyPressedEvent\n  nameWithType: AccessKeyManager.AccessKeyPressedEvent\n  fullName: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n  fullName: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Input.AccessKeyPressedEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: AccessKeyPressedEventHandler\n  nameWithType: AccessKeyPressedEventHandler\n  fullName: System.Windows.Input.AccessKeyPressedEventHandler\n- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: IsKeyRegistered(Object,String)\n  nameWithType: AccessKeyManager.IsKeyRegistered(Object,String)\n  fullName: System.Windows.Input.AccessKeyManager.IsKeyRegistered(Object,String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: ProcessKey(Object,String,Boolean)\n  nameWithType: AccessKeyManager.ProcessKey(Object,String,Boolean)\n  fullName: System.Windows.Input.AccessKeyManager.ProcessKey(Object,String,Boolean)\n- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: Register(String,IInputElement)\n  nameWithType: AccessKeyManager.Register(String,IInputElement)\n  fullName: System.Windows.Input.AccessKeyManager.Register(String,IInputElement)\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n  fullName: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)\n- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: Unregister(String,IInputElement)\n  nameWithType: AccessKeyManager.Unregister(String,IInputElement)\n  fullName: System.Windows.Input.AccessKeyManager.Unregister(String,IInputElement)\n- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: AddAccessKeyPressedHandler\n  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler\n- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: IsKeyRegistered\n  nameWithType: AccessKeyManager.IsKeyRegistered\n- uid: System.Windows.Input.AccessKeyManager.ProcessKey*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: ProcessKey\n  nameWithType: AccessKeyManager.ProcessKey\n- uid: System.Windows.Input.AccessKeyManager.Register*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: Register\n  nameWithType: AccessKeyManager.Register\n- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: RemoveAccessKeyPressedHandler\n  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler\n- uid: System.Windows.Input.AccessKeyManager.Unregister*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: Unregister\n  nameWithType: AccessKeyManager.Unregister\n"}