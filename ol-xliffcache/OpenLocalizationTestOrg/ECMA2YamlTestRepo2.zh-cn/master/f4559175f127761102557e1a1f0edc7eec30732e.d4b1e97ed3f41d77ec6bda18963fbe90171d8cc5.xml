{"nodes":[{"pos":[1187,1278],"content":"Represents a digital signature that is applied to a set of package parts and relationships.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a digital signature that is applied to a set of package parts and relationships.","pos":[0,91]}]},{"pos":[1291,2247],"content":"A PackageDigitalSignature object is immutable and cannot be altered after it is created.       For security, a PackageDigitalSignature can be associated with parts within a <xref:System.IO.Packaging.Package>. A PackageDigitalSignature incorporates an X.509 certificate that provides two features:      -   Identifies and authenticates the originator of the part.      -   Validates that the part has not been modified.       The digital signature does not preclude a part from being modified, but a validation check against the signature fails if the part has changed in any way. The application can then take appropriate action—for example, it can prevent the part from opening or it can notify the user that the part has been modified and is not secure.       For more information about package digital signatures, see the MSDN article [Digital Signing Framework of the Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkId=74494).","needQuote":false,"needEscape":true,"nodes":[{"content":"A PackageDigitalSignature object is immutable and cannot be altered after it is created.","pos":[0,88]},{"content":"For security, a PackageDigitalSignature can be associated with parts within a &lt;xref:System.IO.Packaging.Package&gt;.","pos":[95,208],"source":"       For security, a PackageDigitalSignature can be associated with parts within a <xref:System.IO.Packaging.Package>."},{"content":"A PackageDigitalSignature incorporates an X.509 certificate that provides two features:      -   Identifies and authenticates the originator of the part.","pos":[209,362]},{"content":"-   Validates that the part has not been modified.","pos":[368,418]},{"content":"The digital signature does not preclude a part from being modified, but a validation check against the signature fails if the part has changed in any way.","pos":[425,579]},{"content":"The application can then take appropriate action—for example, it can prevent the part from opening or it can notify the user that the part has been modified and is not secure.","pos":[580,755]},{"content":"For more information about package digital signatures, see the MSDN article <bpt id=\"p1\">[</bpt>Digital Signing Framework of the Open Packaging Conventions<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=74494)</ept>.","pos":[762,946],"source":"       For more information about package digital signatures, see the MSDN article [Digital Signing Framework of the Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkId=74494)."}]},{"pos":[2866,2910],"content":"Gets the X.509 certificate embedding option.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the X.509 certificate embedding option.","pos":[0,44]}]},{"pos":[2923,3821],"content":"X.509 certificates used to validate a package may be stored in one of three locations:      |||   |-|-|   |<xref:System.IO.Packaging.CertificateEmbeddingOption>|In its own certificate <xref:System.IO.Packaging.PackagePart> in the package.<br /><br /> The X.509 certificate can be obtained through the <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> property.|   |<xref:System.IO.Packaging.CertificateEmbeddingOption>|Within the content of the <xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A> in the package.<br /><br /> The X.509 certificate can be obtained through the <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> property.|   |<xref:System.IO.Packaging.CertificateEmbeddingOption>|External to the package in a location known by both the application that creates the signature and the application that later uses the signature for validation.|","needQuote":false,"needEscape":true,"nodes":[{"content":"X.509 certificates used to validate a package may be stored in one of three locations:      |||   |-|-|   |&lt;xref:System.IO.Packaging.CertificateEmbeddingOption&gt;|In its own certificate &lt;xref:System.IO.Packaging.PackagePart&gt; in the package.","pos":[0,238],"source":"X.509 certificates used to validate a package may be stored in one of three locations:      |||   |-|-|   |<xref:System.IO.Packaging.CertificateEmbeddingOption>|In its own certificate <xref:System.IO.Packaging.PackagePart> in the package."},{"content":"The X.509 certificate can be obtained through the &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A&gt; property.|   |&lt;xref:System.IO.Packaging.CertificateEmbeddingOption&gt;|Within the content of the &lt;xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A&gt; in the package.","pos":[251,539],"source":"The X.509 certificate can be obtained through the <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> property.|   |<xref:System.IO.Packaging.CertificateEmbeddingOption>|Within the content of the <xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A> in the package."},{"content":"The X.509 certificate can be obtained through the &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A&gt; property.|   |&lt;xref:System.IO.Packaging.CertificateEmbeddingOption&gt;|External to the package in a location known by both the application that creates the signature and the application that later uses the signature for validation.|","pos":[552,892],"source":"The X.509 certificate can be obtained through the <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> property.|   |<xref:System.IO.Packaging.CertificateEmbeddingOption>|External to the package in a location known by both the application that creates the signature and the application that later uses the signature for validation.|"}]},{"pos":[4026,4164],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.CertificateEmbeddingOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the option for the digital signature.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.IO.Packaging.CertificateEmbeddingOption\"></xref> values that specifies the option for the digital signature."},{"pos":[4373,4464],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[4956,5086],"content":"Returns an ordered list of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.Transform\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operations applied to a given part.","needQuote":true,"needEscape":true,"source":"Returns an ordered list of the <xref href=\"System.Security.Cryptography.Xml.Transform\"></xref> operations applied to a given part."},{"pos":[5271,5386],"content":"The &lt;xref:System.Uri&gt; of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.PackagePart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return the transform list for.","needQuote":true,"needEscape":true,"source":"The <xref:System.Uri> of the <xref href=\"System.IO.Packaging.PackagePart\"></xref> to return the transform list for."},{"pos":[5477,5811],"content":"An ordered list of URI strings, such as <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, that represents the canonical XML transformations applied to the part with the given <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">partName</ph><ept id=\"p3\">&lt;/code&gt;</ept> URI.","needQuote":true,"needEscape":true,"source":"An ordered list of URI strings, such as <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl\"></xref> or <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\"></xref>, that represents the canonical XML transformations applied to the part with the given <code>partName</code> URI."},{"pos":[6014,6105],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[6505,6544],"content":"Gets or sets the XML digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the XML digital signature.","pos":[0,39]}]},{"pos":[6556,6766],"content":"Signature provides access to the foundation class that performs type-specific signature cryptographic functions and serialization to and from the <xref:System.IO.Packaging.PackagePart> that hosts the signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Signature provides access to the foundation class that performs type-specific signature cryptographic functions and serialization to and from the &lt;xref:System.IO.Packaging.PackagePart&gt; that hosts the signature.","pos":[0,210],"source":"Signature provides access to the foundation class that performs type-specific signature cryptographic functions and serialization to and from the <xref:System.IO.Packaging.PackagePart> that hosts the signature."}]},{"pos":[6950,6976],"content":"The XML digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML digital signature.","pos":[0,26]}]},{"pos":[7168,7207],"content":"The digital Signature has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital Signature has been deleted.","pos":[0,39]}]},{"pos":[7627,7717],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.PackagePart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the signature.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.IO.Packaging.PackagePart\"></xref> that contains the signature."},{"pos":[7729,7817],"content":"The signature's package part is frequently accessed when the signature is countersigned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The signature's package part is frequently accessed when the signature is countersigned.","pos":[0,88]}]},{"pos":[7978,8023],"content":"The package part that contains the signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"The package part that contains the signature.","pos":[0,45]}]},{"pos":[8219,8310],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[8730,8845],"content":"Gets the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> string that identifies the signature type.","needQuote":true,"needEscape":true,"source":"Gets the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] string that identifies the signature type."},{"pos":[8963,9175],"content":"A [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] string that identifies the signature type. The default is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> string that identifies the signature type.","pos":[0,108],"source":"A [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] string that identifies the signature type."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[109,212],"source":" The default is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\"></xref>."}]},{"pos":[9371,9462],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[9887,9986],"content":"Gets the encrypted hash value of the <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the encrypted hash value of the &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt;.","pos":[0,99],"source":"Gets the encrypted hash value of the <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>."}]},{"pos":[10105,10226],"content":"A byte array that contains the encrypted hash value of the <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains the encrypted hash value of the &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt;.","pos":[0,121],"source":"A byte array that contains the encrypted hash value of the <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>."}]},{"pos":[10423,10514],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[10924,11040],"content":"Gets a collection of all the <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.PackagePart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects signed with the signature.","needQuote":true,"needEscape":true,"source":"Gets a collection of all the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects signed with the signature."},{"pos":[11252,11327],"content":"A collection that contains all the package parts signed with the signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that contains all the package parts signed with the signature.","pos":[0,75]}]},{"pos":[11521,11612],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[12102,12231],"content":"Gets the list of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.PackageRelationship\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parts that have been signed with the signature.","needQuote":true,"needEscape":true,"source":"Gets the list of the <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> parts that have been signed with the signature."},{"pos":[12540,12664],"content":"The list of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.PackageRelationship\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parts that have been signed with the signature.","needQuote":true,"needEscape":true,"source":"The list of the <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> parts that have been signed with the signature."},{"pos":[12874,12965],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[13350,13391],"content":"Gets the X.509 certificate of the signer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the X.509 certificate of the signer.","pos":[0,41]}]},{"pos":[13404,13965],"content":"Signer returns the X.509 certificate of the signer when the digital certificate is stored within the package (that is, when <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> is <xref:System.IO.Packaging.CertificateEmbeddingOption> or <xref:System.IO.Packaging.CertificateEmbeddingOption>).       Signer returns `null` when the X.509 certificate is not stored in the package (that is, when <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> is <xref:System.IO.Packaging.CertificateEmbeddingOption>).","needQuote":false,"needEscape":true,"nodes":[{"content":"Signer returns the X.509 certificate of the signer when the digital certificate is stored within the package (that is, when &lt;xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A&gt; is &lt;xref:System.IO.Packaging.CertificateEmbeddingOption&gt; or &lt;xref:System.IO.Packaging.CertificateEmbeddingOption&gt;).","pos":[0,320],"source":"Signer returns the X.509 certificate of the signer when the digital certificate is stored within the package (that is, when <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> is <xref:System.IO.Packaging.CertificateEmbeddingOption> or <xref:System.IO.Packaging.CertificateEmbeddingOption>)."},{"content":"Signer returns <ph id=\"ph1\">`null`</ph> when the X.509 certificate is not stored in the package (that is, when &lt;xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A&gt; is &lt;xref:System.IO.Packaging.CertificateEmbeddingOption&gt;).","pos":[327,559],"source":"       Signer returns `null` when the X.509 certificate is not stored in the package (that is, when <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> is <xref:System.IO.Packaging.CertificateEmbeddingOption>)."}]},{"pos":[14180,14372],"content":"The digital certificate of the signer, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the certificate is not stored in the <bpt id=\"p2\">&lt;xref href=\"System.IO.Packaging.Package\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The digital certificate of the signer, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the certificate is not stored in the <xref href=\"System.IO.Packaging.Package\"></xref>."},{"pos":[14561,14652],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[15062,15116],"content":"Gets the date and time that the signature was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the date and time that the signature was created.","pos":[0,54]}]},{"pos":[15129,15721],"content":"The <xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A> property specifies the format of the date.  The format of the SigningTime string is based on the <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=fullName> property in effect when the signature was created.       SigningTime is based on the system time of the computer where the signing took place.       SigningTime is not a \"secure TimeStamp\" and is not from trusted Time Stamp Authority.  A secure TimeStamp must be obtained and applied through a trusted Time Stamp Authority.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A> property specifies the format of the date.  The format of the SigningTime string is based on the <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=fullName> property in effect when the signature was created.       SigningTime is based on the system time of the computer where the signing took place.       SigningTime is not a \"secure TimeStamp\" and is not from trusted Time Stamp Authority.  A secure TimeStamp must be obtained and applied through a trusted Time Stamp Authority.","pos":[0,586],"nodes":[{"content":"The &lt;xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A&gt; property specifies the format of the date.","pos":[0,111],"source":"The <xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A> property specifies the format of the date."},{"content":"The format of the SigningTime string is based on the &lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=fullName&gt; property in effect when the signature was created.","pos":[113,313],"source":"  The format of the SigningTime string is based on the <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=fullName> property in effect when the signature was created."},{"content":"SigningTime is based on the system time of the computer where the signing took place.","pos":[320,405]},{"content":"SigningTime is not a \"secure TimeStamp\" and is not from trusted Time Stamp Authority.","pos":[412,497]},{"content":"A secure TimeStamp must be obtained and applied through a trusted Time Stamp Authority.","pos":[499,586]}]}]},{"pos":[15842,15891],"content":"The date and time that the signature was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The date and time that the signature was created.","pos":[0,49]}]},{"pos":[16085,16176],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[16581,16707],"content":"Gets the format of the date and time returned by the <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the format of the date and time returned by the &lt;xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*&gt; property.","pos":[0,126],"source":"Gets the format of the date and time returned by the <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*> property."}]},{"pos":[16720,17871],"content":"Date/time formats follow the syntax of the W3C [Date and Time Formats](http://go.microsoft.com/fwlink/?LinkId=84446) note.  The components shown in the following table must use the syntax and punctuation shown.      |TimeFormat|Description|Example|   |----------------|-----------------|-------------|   |YYYY|Year|2005|   |YYYY-MM|Year and month|2005-07|   |YYYY-MM-DD|Complete date|2005-07-28|   |YYYY-MM-DDThh:mmTZD|Complete date plus hours and minutes|2005-07-28T19:20-01:00|   |YYYY-MM-DDThh:mm:ssTZD|Complete date plus hours, minutes, and seconds|2005-07-28T19:20:45-01:00|   |YYYY-MM-DDThh:mm:ss.sTZD|Complete date plus hours, minutes, and seconds with a decimal fraction|2005-07-28T19:20:45.75-01:00|       where:      |||   |-|-|   |YYYY|four-digit year (for example 2006)|   |MM|two-digit month (01=January)|   |DD|two-digit day of month (01 through 31)|   |Thh|two-digit hour (00 through 23, 24-hour time)|   |mm|two digits of minutes (00 through 59)|   |ss|two digits of seconds (00 through 59)|   |s|one or more digits representing a decimal fraction of a second|   |TZD|time zone designator (Z or +hh:mm or -hh:mm)|","needQuote":false,"needEscape":true,"nodes":[{"content":"Date/time formats follow the syntax of the W3C <bpt id=\"p1\">[</bpt>Date and Time Formats<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=84446)</ept> note.","pos":[0,122],"source":"Date/time formats follow the syntax of the W3C [Date and Time Formats](http://go.microsoft.com/fwlink/?LinkId=84446) note."},{"content":"The components shown in the following table must use the syntax and punctuation shown.","pos":[124,210]},{"content":"|TimeFormat|Description|Example|   |----------------|-----------------|-------------|   |YYYY|Year|2005|   |YYYY-MM|Year and month|2005-07|   |YYYY-MM-DD|Complete date|2005-07-28|   |YYYY-MM-DDThh:mmTZD|Complete date plus hours and minutes|2005-07-28T19:20-01:00|   |YYYY-MM-DDThh:mm:ssTZD|Complete date plus hours, minutes, and seconds|2005-07-28T19:20:45-01:00|   |YYYY-MM-DDThh:mm:ss.sTZD|Complete date plus hours, minutes, and seconds with a decimal fraction|2005-07-28T19:20:45.75-01:00|       where:      |||   |-|-|   |YYYY|four-digit year (for example 2006)|   |MM|two-digit month (01=January)|   |DD|two-digit day of month (01 through 31)|   |Thh|two-digit hour (00 through 23, 24-hour time)|   |mm|two digits of minutes (00 through 59)|   |ss|two digits of seconds (00 through 59)|   |s|one or more digits representing a decimal fraction of a second|   |TZD|time zone designator (Z or +hh:mm or -hh:mm)|","pos":[216,1129]}]},{"pos":[17987,18108],"content":"The format of the date and time returned by the <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The format of the date and time returned by the &lt;xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*&gt; property.","pos":[0,121],"source":"The format of the date and time returned by the <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*> property."}]},{"pos":[18301,18392],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[18781,18841],"content":"Verifies the digital signature against an X.509 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies the digital signature against an X.509 certificate.","pos":[0,60]}]},{"pos":[18853,18975],"content":"This method verifies the signature against an embedded X.509 certificate stored in the <xref:System.IO.Packaging.Package>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method verifies the signature against an embedded X.509 certificate stored in the &lt;xref:System.IO.Packaging.Package&gt;.","pos":[0,122],"source":"This method verifies the signature against an embedded X.509 certificate stored in the <xref:System.IO.Packaging.Package>."}]},{"pos":[19145,19339],"content":"<bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.VerifyResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the verification succeeded; otherwise, one of the <bpt id=\"p2\">&lt;xref href=\"System.IO.Packaging.VerifyResult\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values that identifies a problem.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.IO.Packaging.VerifyResult\"></xref> if the verification succeeded; otherwise, one of the <xref href=\"System.IO.Packaging.VerifyResult\"></xref> values that identifies a problem."},{"pos":[19528,19619],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]},{"pos":[20179,20244],"content":"Verifies the digital signature against a given X.509 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies the digital signature against a given X.509 certificate.","pos":[0,65]}]},{"pos":[20537,20608],"content":"The signer's X.509 certificate to verify the digital signature against.","needQuote":true,"needEscape":true,"nodes":[{"content":"The signer's X.509 certificate to verify the digital signature against.","pos":[0,71]}]},{"pos":[20685,20879],"content":"<bpt id=\"p1\">&lt;xref href=\"System.IO.Packaging.VerifyResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the verification succeeded; otherwise, one of the <bpt id=\"p2\">&lt;xref href=\"System.IO.Packaging.VerifyResult\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values that identifies a problem.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.IO.Packaging.VerifyResult\"></xref> if the verification succeeded; otherwise, one of the <xref href=\"System.IO.Packaging.VerifyResult\"></xref> values that identifies a problem."},{"pos":[21068,21159],"content":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital &lt;xref:System.IO.Packaging.PackageDigitalSignature.Signature*&gt; has been deleted.","pos":[0,91],"source":"The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Packaging.PackageDigitalSignature\n  id: PackageDigitalSignature\n  children:\n  - System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption\n  - System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)\n  - System.IO.Packaging.PackageDigitalSignature.Signature\n  - System.IO.Packaging.PackageDigitalSignature.SignaturePart\n  - System.IO.Packaging.PackageDigitalSignature.SignatureType\n  - System.IO.Packaging.PackageDigitalSignature.SignatureValue\n  - System.IO.Packaging.PackageDigitalSignature.SignedParts\n  - System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors\n  - System.IO.Packaging.PackageDigitalSignature.Signer\n  - System.IO.Packaging.PackageDigitalSignature.SigningTime\n  - System.IO.Packaging.PackageDigitalSignature.TimeFormat\n  - System.IO.Packaging.PackageDigitalSignature.Verify\n  - System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)\n  langs:\n  - csharp\n  name: PackageDigitalSignature\n  nameWithType: PackageDigitalSignature\n  fullName: System.IO.Packaging.PackageDigitalSignature\n  type: Class\n  summary: Represents a digital signature that is applied to a set of package parts and relationships.\n  remarks: \"A PackageDigitalSignature object is immutable and cannot be altered after it is created.  \\n  \\n For security, a PackageDigitalSignature can be associated with parts within a <xref:System.IO.Packaging.Package>. A PackageDigitalSignature incorporates an X.509 certificate that provides two features:  \\n  \\n-   Identifies and authenticates the originator of the part.  \\n  \\n-   Validates that the part has not been modified.  \\n  \\n The digital signature does not preclude a part from being modified, but a validation check against the signature fails if the part has changed in any way. The application can then take appropriate action—for example, it can prevent the part from opening or it can notify the user that the part has been modified and is not secure.  \\n  \\n For more information about package digital signatures, see the MSDN article [Digital Signing Framework of the Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkId=74494).\"\n  syntax:\n    content: public class PackageDigitalSignature\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption\n  id: CertificateEmbeddingOption\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: CertificateEmbeddingOption\n  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption\n  fullName: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets the X.509 certificate embedding option.\n  remarks: \"X.509 certificates used to validate a package may be stored in one of three locations:  \\n  \\n|||  \\n|-|-|  \\n|<xref:System.IO.Packaging.CertificateEmbeddingOption>|In its own certificate <xref:System.IO.Packaging.PackagePart> in the package.<br /><br /> The X.509 certificate can be obtained through the <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> property.|  \\n|<xref:System.IO.Packaging.CertificateEmbeddingOption>|Within the content of the <xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A> in the package.<br /><br /> The X.509 certificate can be obtained through the <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> property.|  \\n|<xref:System.IO.Packaging.CertificateEmbeddingOption>|External to the package in a location known by both the application that creates the signature and the application that later uses the signature for validation.|\"\n  syntax:\n    content: public System.IO.Packaging.CertificateEmbeddingOption CertificateEmbeddingOption { get; }\n    return:\n      type: System.IO.Packaging.CertificateEmbeddingOption\n      description: One of the <xref href=\"System.IO.Packaging.CertificateEmbeddingOption\"></xref> values that specifies the option for the digital signature.\n  overload: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)\n  id: GetPartTransformList(System.Uri)\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: GetPartTransformList(Uri)\n  nameWithType: PackageDigitalSignature.GetPartTransformList(Uri)\n  fullName: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(Uri)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Returns an ordered list of the <xref href=\"System.Security.Cryptography.Xml.Transform\"></xref> operations applied to a given part.\n  syntax:\n    content: public System.Collections.Generic.List<string> GetPartTransformList (Uri partName);\n    parameters:\n    - id: partName\n      type: System.Uri\n      description: The <xref:System.Uri> of the <xref href=\"System.IO.Packaging.PackagePart\"></xref> to return the transform list for.\n    return:\n      type: System.Collections.Generic.List{System.String}\n      description: An ordered list of URI strings, such as <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl\"></xref> or <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\"></xref>, that represents the canonical XML transformations applied to the part with the given <code>partName</code> URI.\n  overload: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.Signature\n  id: Signature\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: Signature\n  nameWithType: PackageDigitalSignature.Signature\n  fullName: System.IO.Packaging.PackageDigitalSignature.Signature\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets or sets the XML digital signature.\n  remarks: Signature provides access to the foundation class that performs type-specific signature cryptographic functions and serialization to and from the <xref:System.IO.Packaging.PackagePart> that hosts the signature.\n  syntax:\n    content: public System.Security.Cryptography.Xml.Signature Signature { get; set; }\n    return:\n      type: System.Security.Cryptography.Xml.Signature\n      description: The XML digital signature.\n  overload: System.IO.Packaging.PackageDigitalSignature.Signature*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital Signature has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart\n  id: SignaturePart\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: SignaturePart\n  nameWithType: PackageDigitalSignature.SignaturePart\n  fullName: System.IO.Packaging.PackageDigitalSignature.SignaturePart\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets the <xref href=\"System.IO.Packaging.PackagePart\"></xref> that contains the signature.\n  remarks: The signature's package part is frequently accessed when the signature is countersigned.\n  syntax:\n    content: public System.IO.Packaging.PackagePart SignaturePart { get; }\n    return:\n      type: System.IO.Packaging.PackagePart\n      description: The package part that contains the signature.\n  overload: System.IO.Packaging.PackageDigitalSignature.SignaturePart*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType\n  id: SignatureType\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: SignatureType\n  nameWithType: PackageDigitalSignature.SignatureType\n  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureType\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] string that identifies the signature type.\n  syntax:\n    content: public string SignatureType { get; }\n    return:\n      type: System.String\n      description: A [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] string that identifies the signature type. The default is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\"></xref>.\n  overload: System.IO.Packaging.PackageDigitalSignature.SignatureType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue\n  id: SignatureValue\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: SignatureValue\n  nameWithType: PackageDigitalSignature.SignatureValue\n  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureValue\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets the encrypted hash value of the <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>.\n  syntax:\n    content: public byte[] SignatureValue { get; }\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the encrypted hash value of the <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>.\n  overload: System.IO.Packaging.PackageDigitalSignature.SignatureValue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts\n  id: SignedParts\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: SignedParts\n  nameWithType: PackageDigitalSignature.SignedParts\n  fullName: System.IO.Packaging.PackageDigitalSignature.SignedParts\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets a collection of all the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects signed with the signature.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<Uri> SignedParts { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}\n      description: A collection that contains all the package parts signed with the signature.\n  overload: System.IO.Packaging.PackageDigitalSignature.SignedParts*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors\n  id: SignedRelationshipSelectors\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: SignedRelationshipSelectors\n  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors\n  fullName: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets the list of the <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> parts that have been signed with the signature.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector> SignedRelationshipSelectors { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageRelationshipSelector}\n      description: The list of the <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> parts that have been signed with the signature.\n  overload: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.Signer\n  id: Signer\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: Signer\n  nameWithType: PackageDigitalSignature.Signer\n  fullName: System.IO.Packaging.PackageDigitalSignature.Signer\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets the X.509 certificate of the signer.\n  remarks: \"Signer returns the X.509 certificate of the signer when the digital certificate is stored within the package (that is, when <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> is <xref:System.IO.Packaging.CertificateEmbeddingOption> or <xref:System.IO.Packaging.CertificateEmbeddingOption>).  \\n  \\n Signer returns `null` when the X.509 certificate is not stored in the package (that is, when <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> is <xref:System.IO.Packaging.CertificateEmbeddingOption>).\"\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate Signer { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The digital certificate of the signer, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the certificate is not stored in the <xref href=\"System.IO.Packaging.Package\"></xref>.\n  overload: System.IO.Packaging.PackageDigitalSignature.Signer*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime\n  id: SigningTime\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: SigningTime\n  nameWithType: PackageDigitalSignature.SigningTime\n  fullName: System.IO.Packaging.PackageDigitalSignature.SigningTime\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets the date and time that the signature was created.\n  remarks: \"The <xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A> property specifies the format of the date.  The format of the SigningTime string is based on the <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=fullName> property in effect when the signature was created.  \\n  \\n SigningTime is based on the system time of the computer where the signing took place.  \\n  \\n SigningTime is not a \\\"secure TimeStamp\\\" and is not from trusted Time Stamp Authority.  A secure TimeStamp must be obtained and applied through a trusted Time Stamp Authority.\"\n  syntax:\n    content: public DateTime SigningTime { get; }\n    return:\n      type: System.DateTime\n      description: The date and time that the signature was created.\n  overload: System.IO.Packaging.PackageDigitalSignature.SigningTime*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat\n  id: TimeFormat\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: TimeFormat\n  nameWithType: PackageDigitalSignature.TimeFormat\n  fullName: System.IO.Packaging.PackageDigitalSignature.TimeFormat\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets the format of the date and time returned by the <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*> property.\n  remarks: \"Date/time formats follow the syntax of the W3C [Date and Time Formats](http://go.microsoft.com/fwlink/?LinkId=84446) note.  The components shown in the following table must use the syntax and punctuation shown.  \\n  \\n|TimeFormat|Description|Example|  \\n|----------------|-----------------|-------------|  \\n|YYYY|Year|2005|  \\n|YYYY-MM|Year and month|2005-07|  \\n|YYYY-MM-DD|Complete date|2005-07-28|  \\n|YYYY-MM-DDThh:mmTZD|Complete date plus hours and minutes|2005-07-28T19:20-01:00|  \\n|YYYY-MM-DDThh:mm:ssTZD|Complete date plus hours, minutes, and seconds|2005-07-28T19:20:45-01:00|  \\n|YYYY-MM-DDThh:mm:ss.sTZD|Complete date plus hours, minutes, and seconds with a decimal fraction|2005-07-28T19:20:45.75-01:00|  \\n  \\n where:  \\n  \\n|||  \\n|-|-|  \\n|YYYY|four-digit year (for example 2006)|  \\n|MM|two-digit month (01=January)|  \\n|DD|two-digit day of month (01 through 31)|  \\n|Thh|two-digit hour (00 through 23, 24-hour time)|  \\n|mm|two digits of minutes (00 through 59)|  \\n|ss|two digits of seconds (00 through 59)|  \\n|s|one or more digits representing a decimal fraction of a second|  \\n|TZD|time zone designator (Z or +hh:mm or -hh:mm)|\"\n  syntax:\n    content: public string TimeFormat { get; }\n    return:\n      type: System.String\n      description: The format of the date and time returned by the <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*> property.\n  overload: System.IO.Packaging.PackageDigitalSignature.TimeFormat*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.Verify\n  id: Verify\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: Verify()\n  nameWithType: PackageDigitalSignature.Verify()\n  fullName: System.IO.Packaging.PackageDigitalSignature.Verify()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Verifies the digital signature against an X.509 certificate.\n  remarks: This method verifies the signature against an embedded X.509 certificate stored in the <xref:System.IO.Packaging.Package>.\n  syntax:\n    content: public System.IO.Packaging.VerifyResult Verify ();\n    parameters: []\n    return:\n      type: System.IO.Packaging.VerifyResult\n      description: <xref href=\"System.IO.Packaging.VerifyResult\"></xref> if the verification succeeded; otherwise, one of the <xref href=\"System.IO.Packaging.VerifyResult\"></xref> values that identifies a problem.\n  overload: System.IO.Packaging.PackageDigitalSignature.Verify*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\n- uid: System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: Verify(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.IO.Packaging.PackageDigitalSignature\n  langs:\n  - csharp\n  name: Verify(X509Certificate)\n  nameWithType: PackageDigitalSignature.Verify(X509Certificate)\n  fullName: System.IO.Packaging.PackageDigitalSignature.Verify(X509Certificate)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Verifies the digital signature against a given X.509 certificate.\n  syntax:\n    content: public System.IO.Packaging.VerifyResult Verify (System.Security.Cryptography.X509Certificates.X509Certificate signingCertificate);\n    parameters:\n    - id: signingCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The signer's X.509 certificate to verify the digital signature against.\n    return:\n      type: System.IO.Packaging.VerifyResult\n      description: <xref href=\"System.IO.Packaging.VerifyResult\"></xref> if the verification succeeded; otherwise, one of the <xref href=\"System.IO.Packaging.VerifyResult\"></xref> values that identifies a problem.\n  overload: System.IO.Packaging.PackageDigitalSignature.Verify*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: CertificateEmbeddingOption\n  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption\n  fullName: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption\n- uid: System.IO.Packaging.CertificateEmbeddingOption\n  parent: System.IO.Packaging\n  isExternal: false\n  name: CertificateEmbeddingOption\n  nameWithType: CertificateEmbeddingOption\n  fullName: System.IO.Packaging.CertificateEmbeddingOption\n- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: GetPartTransformList(Uri)\n  nameWithType: PackageDigitalSignature.GetPartTransformList(Uri)\n  fullName: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(Uri)\n- uid: System.Collections.Generic.List{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: List<String>\n  nameWithType: List<String>\n  fullName: System.Collections.Generic.List<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: List<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.IO.Packaging.PackageDigitalSignature.Signature\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: Signature\n  nameWithType: PackageDigitalSignature.Signature\n  fullName: System.IO.Packaging.PackageDigitalSignature.Signature\n- uid: System.Security.Cryptography.Xml.Signature\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: Signature\n  nameWithType: Signature\n  fullName: System.Security.Cryptography.Xml.Signature\n- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SignaturePart\n  nameWithType: PackageDigitalSignature.SignaturePart\n  fullName: System.IO.Packaging.PackageDigitalSignature.SignaturePart\n- uid: System.IO.Packaging.PackagePart\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackagePart\n  nameWithType: PackagePart\n  fullName: System.IO.Packaging.PackagePart\n- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SignatureType\n  nameWithType: PackageDigitalSignature.SignatureType\n  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SignatureValue\n  nameWithType: PackageDigitalSignature.SignatureValue\n  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureValue\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SignedParts\n  nameWithType: PackageDigitalSignature.SignedParts\n  fullName: System.IO.Packaging.PackageDigitalSignature.SignedParts\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<Uri>\n  nameWithType: ReadOnlyCollection<Uri>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Uri>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Uri>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SignedRelationshipSelectors\n  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors\n  fullName: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageRelationshipSelector}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<PackageRelationshipSelector>\n  nameWithType: ReadOnlyCollection<PackageRelationshipSelector>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IO.Packaging.PackageRelationshipSelector\n    name: PackageRelationshipSelector\n    nameWithType: PackageRelationshipSelector\n    fullName: PackageRelationshipSelector\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.Packaging.PackageDigitalSignature.Signer\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: Signer\n  nameWithType: PackageDigitalSignature.Signer\n  fullName: System.IO.Packaging.PackageDigitalSignature.Signer\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SigningTime\n  nameWithType: PackageDigitalSignature.SigningTime\n  fullName: System.IO.Packaging.PackageDigitalSignature.SigningTime\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: TimeFormat\n  nameWithType: PackageDigitalSignature.TimeFormat\n  fullName: System.IO.Packaging.PackageDigitalSignature.TimeFormat\n- uid: System.IO.Packaging.PackageDigitalSignature.Verify\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: Verify()\n  nameWithType: PackageDigitalSignature.Verify()\n  fullName: System.IO.Packaging.PackageDigitalSignature.Verify()\n- uid: System.IO.Packaging.VerifyResult\n  parent: System.IO.Packaging\n  isExternal: false\n  name: VerifyResult\n  nameWithType: VerifyResult\n  fullName: System.IO.Packaging.VerifyResult\n- uid: System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: Verify(X509Certificate)\n  nameWithType: PackageDigitalSignature.Verify(X509Certificate)\n  fullName: System.IO.Packaging.PackageDigitalSignature.Verify(X509Certificate)\n- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: CertificateEmbeddingOption\n  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption\n- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: GetPartTransformList\n  nameWithType: PackageDigitalSignature.GetPartTransformList\n- uid: System.IO.Packaging.PackageDigitalSignature.Signature*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: Signature\n  nameWithType: PackageDigitalSignature.Signature\n- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SignaturePart\n  nameWithType: PackageDigitalSignature.SignaturePart\n- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SignatureType\n  nameWithType: PackageDigitalSignature.SignatureType\n- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SignatureValue\n  nameWithType: PackageDigitalSignature.SignatureValue\n- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SignedParts\n  nameWithType: PackageDigitalSignature.SignedParts\n- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SignedRelationshipSelectors\n  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors\n- uid: System.IO.Packaging.PackageDigitalSignature.Signer*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: Signer\n  nameWithType: PackageDigitalSignature.Signer\n- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: SigningTime\n  nameWithType: PackageDigitalSignature.SigningTime\n- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: TimeFormat\n  nameWithType: PackageDigitalSignature.TimeFormat\n- uid: System.IO.Packaging.PackageDigitalSignature.Verify*\n  parent: System.IO.Packaging.PackageDigitalSignature\n  isExternal: false\n  name: Verify\n  nameWithType: PackageDigitalSignature.Verify\n"}