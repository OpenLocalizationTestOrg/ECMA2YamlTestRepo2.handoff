{"nodes":[{"pos":[425,536],"content":"An in-memory collection of hash tables that allows the rapid lookup of designer elements by <xref:System.Type>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An in-memory collection of hash tables that allows the rapid lookup of designer elements by &lt;xref:System.Type&gt;.","pos":[0,111],"source":"An in-memory collection of hash tables that allows the rapid lookup of designer elements by <xref:System.Type>."}]},{"pos":[548,900],"content":"The metadata store contains custom attribute metadata, such as the association between designers and types. Custom attributes can be defined in an <xref:System.Activities.Presentation.Metadata.AttributeTable> and added to the metadata store. After the attributes are added, they will appear in calls made to <xref:System.ComponentModel.TypeDescriptor>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata store contains custom attribute metadata, such as the association between designers and types. Custom attributes can be defined in an <xref:System.Activities.Presentation.Metadata.AttributeTable> and added to the metadata store. After the attributes are added, they will appear in calls made to <xref:System.ComponentModel.TypeDescriptor>.","pos":[0,352],"nodes":[{"content":"The metadata store contains custom attribute metadata, such as the association between designers and types.","pos":[0,107]},{"content":"Custom attributes can be defined in an &lt;xref:System.Activities.Presentation.Metadata.AttributeTable&gt; and added to the metadata store.","pos":[108,241],"source":" Custom attributes can be defined in an <xref:System.Activities.Presentation.Metadata.AttributeTable> and added to the metadata store."},{"content":"After the attributes are added, they will appear in calls made to &lt;xref:System.ComponentModel.TypeDescriptor&gt;.","pos":[242,352],"source":" After the attributes are added, they will appear in calls made to <xref:System.ComponentModel.TypeDescriptor>."}]}]},{"pos":[2811,2910],"content":"Adds the given table to the current <bpt id=\"p1\">&lt;xref href=\"System.AppDomain\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object’s attribute store.","needQuote":true,"needEscape":true,"source":"Adds the given table to the current <xref href=\"System.AppDomain\"></xref> object’s attribute store."},{"pos":[2922,3187],"content":"After the table is added, calls to <xref:System.ComponentModel.TypeDescriptor> will use attributes defined in the newly added table. Multiple tables can be added to the attribute store. In the case of conflicts, attributes in the most recently added table are used.","needQuote":true,"needEscape":true,"nodes":[{"content":"After the table is added, calls to <xref:System.ComponentModel.TypeDescriptor> will use attributes defined in the newly added table. Multiple tables can be added to the attribute store. In the case of conflicts, attributes in the most recently added table are used.","pos":[0,265],"nodes":[{"content":"After the table is added, calls to &lt;xref:System.ComponentModel.TypeDescriptor&gt; will use attributes defined in the newly added table.","pos":[0,132],"source":"After the table is added, calls to <xref:System.ComponentModel.TypeDescriptor> will use attributes defined in the newly added table."},{"content":"Multiple tables can be added to the attribute store.","pos":[133,185]},{"content":"In the case of conflicts, attributes in the most recently added table are used.","pos":[186,265]}]}]},{"pos":[3564,3581],"content":"The table to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The table to add.","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Metadata.MetadataStore\n  id: MetadataStore\n  children:\n  - System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable(System.Activities.Presentation.Metadata.AttributeTable)\n  langs:\n  - csharp\n  name: MetadataStore\n  nameWithType: MetadataStore\n  fullName: System.Activities.Presentation.Metadata.MetadataStore\n  type: Class\n  summary: An in-memory collection of hash tables that allows the rapid lookup of designer elements by <xref:System.Type>.\n  remarks: The metadata store contains custom attribute metadata, such as the association between designers and types. Custom attributes can be defined in an <xref:System.Activities.Presentation.Metadata.AttributeTable> and added to the metadata store. After the attributes are added, they will appear in calls made to <xref:System.ComponentModel.TypeDescriptor>.\n  example:\n  - \"The following code example shows how to associate the `AcitivityDesigner1` custom activity designer with a custom activity. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] how to create custom activity designers, see [How to: Create a Custom Activity Designer](~/add/includes/ajax-current-ext-md.md).  \\n  \\n```  \\ninternal class Metadata : IRegisterMetadata  \\n{  \\n    private AttributeTable attributes;  \\n  \\n    // Called by the designer to register any design-time metadata.  \\n    public void Register()  \\n    {  \\n        AttributeTableBuilder builder = new AttributeTableBuilder();  \\n  \\n        // Add the custom attributes to associate the ActivityDesigner1 custom designer  \\n        // with the custom activity MyActivity.  \\n        builder.AddCustomAttributes(  \\n            typeof(MyActivity),  \\n            new DesignerAttribute(typeof(ActivityDesigner1)));  \\n        MetadataStore.AddAttributeTable(builder.CreateTable());  \\n  \\n    }  \\n}  \\n```  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public static class MetadataStore\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable(System.Activities.Presentation.Metadata.AttributeTable)\n  id: AddAttributeTable(System.Activities.Presentation.Metadata.AttributeTable)\n  parent: System.Activities.Presentation.Metadata.MetadataStore\n  langs:\n  - csharp\n  name: AddAttributeTable(AttributeTable)\n  nameWithType: MetadataStore.AddAttributeTable(AttributeTable)\n  fullName: System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable(AttributeTable)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the given table to the current <xref href=\"System.AppDomain\"></xref> object’s attribute store.\n  remarks: After the table is added, calls to <xref:System.ComponentModel.TypeDescriptor> will use attributes defined in the newly added table. Multiple tables can be added to the attribute store. In the case of conflicts, attributes in the most recently added table are used.\n  example:\n  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'\n  syntax:\n    content: public static void AddAttributeTable (System.Activities.Presentation.Metadata.AttributeTable table);\n    parameters:\n    - id: table\n      type: System.Activities.Presentation.Metadata.AttributeTable\n      description: The table to add.\n  overload: System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable(System.Activities.Presentation.Metadata.AttributeTable)\n  parent: System.Activities.Presentation.Metadata.MetadataStore\n  isExternal: false\n  name: AddAttributeTable(AttributeTable)\n  nameWithType: MetadataStore.AddAttributeTable(AttributeTable)\n  fullName: System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable(AttributeTable)\n- uid: System.Activities.Presentation.Metadata.AttributeTable\n  parent: System.Activities.Presentation.Metadata\n  isExternal: false\n  name: AttributeTable\n  nameWithType: AttributeTable\n  fullName: System.Activities.Presentation.Metadata.AttributeTable\n- uid: System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable*\n  parent: System.Activities.Presentation.Metadata.MetadataStore\n  isExternal: false\n  name: AddAttributeTable\n  nameWithType: MetadataStore.AddAttributeTable\n"}