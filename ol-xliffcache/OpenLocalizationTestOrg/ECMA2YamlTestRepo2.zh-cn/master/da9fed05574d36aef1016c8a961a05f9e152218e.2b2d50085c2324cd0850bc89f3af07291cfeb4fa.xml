{"nodes":[{"pos":[2162,2174],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6467,6479],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6584,6596],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8058,8070],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8208,8220],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8325,8337],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9508,9520],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9625,9637],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11127,11139],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11277,11289],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11394,11406],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12571,12583],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12688,12700],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14162,14174],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14312,14324],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14429,14441],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15612,15624],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15729,15741],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17231,17243],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17381,17393],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17498,17510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18978,18990],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19095,19107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1\n  id: PartBuilder`1\n  children:\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})\n  langs:\n  - csharp\n  name: PartBuilder<T>\n  nameWithType: PartBuilder<T>\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>\n  type: Class\n  syntax:\n    content: 'public class PartBuilder<T> : System.ComponentModel.Composition.Registration.PartBuilder'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.ComponentModel.Composition.Registration.PartBuilder\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  id: ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ExportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: To be added.\n    - id: exportConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  id: ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ExportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty<TContract>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: To be added.\n    - id: exportConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty<TContract>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  id: ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ImportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  id: ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: To be added.\n    - id: importConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ImportBuilder}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  id: ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ImportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty<TContract>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  id: ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: To be added.\n    - id: importConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ImportBuilder}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty<TContract>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})\n  id: SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n  nameWithType: PartBuilder<T>.SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> SelectConstructor (System.Linq.Expressions.Expression<Func<System.ComponentModel.Composition.Registration.ParameterImportBuilder,T>> constructorFilter);\n    parameters:\n    - id: constructorFilter\n      type: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,T}}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: System.ComponentModel.Composition.Registration.PartBuilder\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1\n  parent: System.ComponentModel.Composition.Registration\n  isExternal: false\n  name: PartBuilder<T>\n  nameWithType: PartBuilder<T>\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>\n- uid: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<T,Object>>\n  nameWithType: Expression<Func<T,Object>>\n  fullName: System.Linq.Expressions.Expression<System.Func<T,System.Object>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<T,System.Object>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<T,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n- uid: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n  parent: System\n  isExternal: true\n  name: Action<ExportBuilder>\n  nameWithType: Action<ExportBuilder>\n  fullName: System.Action<System.ComponentModel.Composition.Registration.ExportBuilder>\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: Action<System.ComponentModel.Composition.Registration.ExportBuilder>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Registration.ExportBuilder\n    name: ExportBuilder\n    nameWithType: ExportBuilder\n    fullName: ExportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>,Action<ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n- uid: System.Action{System.ComponentModel.Composition.Registration.ImportBuilder}\n  parent: System\n  isExternal: true\n  name: Action<ImportBuilder>\n  nameWithType: Action<ImportBuilder>\n  fullName: System.Action<System.ComponentModel.Composition.Registration.ImportBuilder>\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: Action<System.ComponentModel.Composition.Registration.ImportBuilder>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Registration.ImportBuilder\n    name: ImportBuilder\n    nameWithType: ImportBuilder\n    fullName: ImportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>,Action<ImportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n  nameWithType: PartBuilder<T>.SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n- uid: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,T}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<ParameterImportBuilder,T>>\n  nameWithType: Expression<Func<ParameterImportBuilder,T>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.ComponentModel.Composition.Registration.ParameterImportBuilder,T>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<System.ComponentModel.Composition.Registration.ParameterImportBuilder,T>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.ComponentModel.Composition.Registration.ParameterImportBuilder,T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Registration.ParameterImportBuilder\n    name: ParameterImportBuilder\n    nameWithType: ParameterImportBuilder\n    fullName: ParameterImportBuilder\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty\n  nameWithType: PartBuilder<T>.ExportProperty\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty<TContract>*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty<TContract>\n  nameWithType: PartBuilder<T>.ExportProperty<TContract>\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty\n  nameWithType: PartBuilder<T>.ImportProperty\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty<TContract>*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty<TContract>\n  nameWithType: PartBuilder<T>.ImportProperty<TContract>\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: SelectConstructor\n  nameWithType: PartBuilder<T>.SelectConstructor\n"}