{"nodes":[{"pos":[850,930],"content":"Converts an <xref:System.Windows.Input.ICommand> object to and from other types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts an &lt;xref:System.Windows.Input.ICommand&gt; object to and from other types.","pos":[0,80],"source":"Converts an <xref:System.Windows.Input.ICommand> object to and from other types."}]},{"pos":[943,1149],"content":"The CommandConverter class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.      <a name=\"xamlTextUsage_CommandConverter\"></a>    ## XAML Text Usage","needQuote":false,"needEscape":true,"nodes":[{"content":"The CommandConverter class only converts an instance of &lt;xref:System.Windows.Input.ICommand&gt; to and from a &lt;xref:System.String&gt;.","pos":[0,128],"source":"The CommandConverter class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_CommandConverter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","pos":[134,201],"source":"<a name=\"xamlTextUsage_CommandConverter\"></a>    ## XAML Text Usage"}]},{"pos":[5011,5110],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.CommandConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.CommandConverter\"></xref> class."},{"pos":[5866,6018],"content":"Determines whether an object of the specified type can be converted to an instance of <xref:System.Windows.Input.ICommand>, using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether an object of the specified type can be converted to an instance of &lt;xref:System.Windows.Input.ICommand&gt;, using the specified context.","pos":[0,152],"source":"Determines whether an object of the specified type can be converted to an instance of <xref:System.Windows.Input.ICommand>, using the specified context."}]},{"pos":[6261,6369],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[6434,6474],"content":"The type being evaluated for conversion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type being evaluated for conversion.","pos":[0,40]}]},{"pos":[6533,6728],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceType</ph><ept id=\"p2\">&lt;/code&gt;</ept> is of type &lt;xref:System.String&gt;; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sourceType</code> is of type <xref:System.String>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7413,7552],"content":"Determines whether an instance of <xref:System.Windows.Input.ICommand> can be converted to the specified type, using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether an instance of &lt;xref:System.Windows.Input.ICommand&gt; can be converted to the specified type, using the specified context.","pos":[0,139],"source":"Determines whether an instance of <xref:System.Windows.Input.ICommand> can be converted to the specified type, using the specified context."}]},{"pos":[7798,7906],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[7976,8016],"content":"The type being evaluated for conversion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type being evaluated for conversion.","pos":[0,40]}]},{"pos":[8075,8275],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationType</ph><ept id=\"p2\">&lt;/code&gt;</ept> is of type &lt;xref:System.String&gt;; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>destinationType</code> is of type <xref:System.String>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9065,9178],"content":"Attempts to convert the specified object to an <xref:System.Windows.Input.ICommand>, using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to convert the specified object to an &lt;xref:System.Windows.Input.ICommand&gt;, using the specified context.","pos":[0,113],"source":"Attempts to convert the specified object to an <xref:System.Windows.Input.ICommand>, using the specified context."}]},{"pos":[9190,9465],"content":"The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>. Also, the command must be an existing command, or must be assigned to a public static property or public static field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>. Also, the command must be an existing command, or must be assigned to a public static property or public static field.","pos":[0,275],"nodes":[{"content":"The &lt;xref:System.Windows.Input.CommandConverter&gt; class only converts an instance of &lt;xref:System.Windows.Input.ICommand&gt; to and from a &lt;xref:System.String&gt;.","pos":[0,156],"source":"The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>."},{"content":"Also, the command must be an existing command, or must be assigned to a public static property or public static field.","pos":[157,275]}]}]},{"pos":[9747,9855],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[9938,9967],"content":"Culture specific information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Culture specific information.","pos":[0,29]}]},{"pos":[10030,10052],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[10110,10238],"content":"The converted object, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an empty string.","needQuote":true,"needEscape":true,"source":"The converted object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>source</code> is an empty string."},{"pos":[10418,10458],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> cannot be converted.","needQuote":true,"needEscape":true,"source":"<code>source</code> cannot be converted."},{"pos":[11196,11307],"content":"Attempts to convert an <xref:System.Windows.Input.ICommand> to the specified type, using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to convert an &lt;xref:System.Windows.Input.ICommand&gt; to the specified type, using the specified context.","pos":[0,111],"source":"Attempts to convert an <xref:System.Windows.Input.ICommand> to the specified type, using the specified context."}]},{"pos":[11319,11527],"content":"The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>. Only existing (noncustom) commands can be returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>. Only existing (noncustom) commands can be returned.","pos":[0,208],"nodes":[{"content":"The &lt;xref:System.Windows.Input.CommandConverter&gt; class only converts an instance of &lt;xref:System.Windows.Input.ICommand&gt; to and from a &lt;xref:System.String&gt;.","pos":[0,156],"source":"The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>."},{"content":"Only existing (noncustom) commands can be returned.","pos":[157,208]}]}]},{"pos":[11828,11936],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[12019,12048],"content":"Culture specific information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Culture specific information.","pos":[0,29]}]},{"pos":[12110,12132],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[12202,12236],"content":"The type to convert the object to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert the object to.","pos":[0,34]}]},{"pos":[12294,12335],"content":"The converted object, or an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted object, or an empty string.","pos":[0,41]}]},{"pos":[12513,12606],"content":"<ph id=\"ph1\">&lt;code&gt;destinationType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>destinationType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12709,12748],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> cannot be converted.","needQuote":true,"needEscape":true,"source":"<code>value</code> cannot be converted."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.CommandConverter\n  id: CommandConverter\n  children:\n  - System.Windows.Input.CommandConverter.#ctor\n  - System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: CommandConverter\n  nameWithType: CommandConverter\n  fullName: System.Windows.Input.CommandConverter\n  type: Class\n  summary: Converts an <xref:System.Windows.Input.ICommand> object to and from other types.\n  remarks: \"The CommandConverter class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.  \\n  \\n<a name=\\\"xamlTextUsage_CommandConverter\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: 'public sealed class CommandConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Windows.Input.CommandConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Input.CommandConverter\n  langs:\n  - csharp\n  name: CommandConverter()\n  nameWithType: CommandConverter.CommandConverter()\n  fullName: System.Windows.Input.CommandConverter.CommandConverter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.CommandConverter\"></xref> class.\n  syntax:\n    content: public CommandConverter ();\n    parameters: []\n  overload: System.Windows.Input.CommandConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.CommandConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: CommandConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Input.CommandConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Input\n  summary: Determines whether an object of the specified type can be converted to an instance of <xref:System.Windows.Input.ICommand>, using the specified context.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: sourceType\n      type: System.Type\n      description: The type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sourceType</code> is of type <xref:System.String>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.CommandConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.CommandConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: CommandConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Input.CommandConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Input\n  summary: Determines whether an instance of <xref:System.Windows.Input.ICommand> can be converted to the specified type, using the specified context.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: destinationType\n      type: System.Type\n      description: The type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>destinationType</code> is of type <xref:System.String>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.CommandConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Input.CommandConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: CommandConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Input.CommandConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Input\n  summary: Attempts to convert the specified object to an <xref:System.Windows.Input.ICommand>, using the specified context.\n  remarks: The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>. Also, the command must be an existing command, or must be assigned to a public static property or public static field.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Culture specific information.\n    - id: source\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: The converted object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>source</code> is an empty string.\n  overload: System.Windows.Input.CommandConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>source</code> cannot be converted.\n  platform:\n  - net462\n- uid: System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Input.CommandConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: CommandConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Input.CommandConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Input\n  summary: Attempts to convert an <xref:System.Windows.Input.ICommand> to the specified type, using the specified context.\n  remarks: The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>. Only existing (noncustom) commands can be returned.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Culture specific information.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the object to.\n    return:\n      type: System.Object\n      description: The converted object, or an empty string.\n  overload: System.Windows.Input.CommandConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>value</code> cannot be converted.\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.Input.CommandConverter.#ctor\n  parent: System.Windows.Input.CommandConverter\n  isExternal: false\n  name: CommandConverter()\n  nameWithType: CommandConverter.CommandConverter()\n  fullName: System.Windows.Input.CommandConverter.CommandConverter()\n- uid: System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.CommandConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: CommandConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Input.CommandConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.CommandConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: CommandConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Input.CommandConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Input.CommandConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: CommandConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Input.CommandConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Input.CommandConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: CommandConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Input.CommandConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Windows.Input.CommandConverter.#ctor*\n  parent: System.Windows.Input.CommandConverter\n  isExternal: false\n  name: CommandConverter\n  nameWithType: CommandConverter.CommandConverter\n- uid: System.Windows.Input.CommandConverter.CanConvertFrom*\n  parent: System.Windows.Input.CommandConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: CommandConverter.CanConvertFrom\n- uid: System.Windows.Input.CommandConverter.CanConvertTo*\n  parent: System.Windows.Input.CommandConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: CommandConverter.CanConvertTo\n- uid: System.Windows.Input.CommandConverter.ConvertFrom*\n  parent: System.Windows.Input.CommandConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: CommandConverter.ConvertFrom\n- uid: System.Windows.Input.CommandConverter.ConvertTo*\n  parent: System.Windows.Input.CommandConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: CommandConverter.ConvertTo\n"}