{"nodes":[{"pos":[1064,1128],"content":"Represents an association relationship between two entity types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an association relationship between two entity types.","pos":[0,64]}]},{"pos":[1676,1778],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaAssociation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> class."},{"pos":[2335,2413],"content":"Gets whether the object should be deleted when the association is set to null.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the object should be deleted when the association is set to null.","pos":[0,78]}]},{"pos":[2538,2661],"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the object is deleted when the association is set to null.","needQuote":true,"needEscape":true,"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the object is deleted when the association is set to null."},{"pos":[3143,3187],"content":"Gets the behavior when the child is deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the behavior when the child is deleted.","pos":[0,44]}]},{"pos":[3199,3257],"content":"Examples of rules are \"CASCADE\", \"SET NULL\", and so forth.","needQuote":true,"needEscape":true,"nodes":[{"content":"Examples of rules are \"CASCADE\", \"SET NULL\", and so forth.","pos":[0,58]}]},{"pos":[3381,3515],"content":"The string representing the rule, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no action is specified on delete.","needQuote":true,"needEscape":true,"source":"The string representing the rule, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no action is specified on delete."},{"pos":[4005,4060],"content":"Gets whether the other type is the parent of this type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the other type is the parent of this type.","pos":[0,55]}]},{"pos":[4185,4299],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is the other type is the parent of this type.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is the other type is the parent of this type."},{"pos":[4761,4828],"content":"Gets whether the association represents a one-to-many relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the association represents a one-to-many relationship.","pos":[0,67]}]},{"pos":[4947,5073],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the association represents a one-to-many relationship.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the association represents a one-to-many relationship."},{"pos":[5549,5590],"content":"Gets whether the association can be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the association can be null.","pos":[0,41]}]},{"pos":[5713,5813],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the association can be null.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the association can be null."},{"pos":[6283,6322],"content":"Gets whether the association is unique.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the association is unique.","pos":[0,39]}]},{"pos":[6334,6398],"content":"This property indicates a uniqueness constraint in the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property indicates a uniqueness constraint in the database.","pos":[0,64]}]},{"pos":[6519,6617],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the association is unique.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the association is unique."},{"pos":[7085,7172],"content":"Gets a list of members that represents the values on the other side of the association.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of members that represents the values on the other side of the association.","pos":[0,87]}]},{"pos":[7455,7533],"content":"Returns a collection representing values on the other side of the association.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection representing values on the other side of the association.","pos":[0,78]}]},{"pos":[8061,8173],"content":"Gets whether the <xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*> forms the identity of the other type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the &lt;xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*&gt; forms the identity of the other type.","pos":[0,112],"source":"Gets whether the <xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*> forms the identity of the other type."}]},{"pos":[8306,8483],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*&gt; forms the identity (primary key) of the other type.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*> forms the identity (primary key) of the other type."},{"pos":[8978,9072],"content":"Gets the member on the other side of this association that represents the reverse association.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the member on the other side of this association that represents the reverse association.","pos":[0,94]}]},{"pos":[9084,9107],"content":"This value can be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"This value can be null.","pos":[0,23]}]},{"pos":[9291,9320],"content":"The member on the other side.","needQuote":true,"needEscape":true,"nodes":[{"content":"The member on the other side.","pos":[0,29]}]},{"pos":[9796,9847],"content":"Gets the type on the other side of the association.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type on the other side of the association.","pos":[0,51]}]},{"pos":[10017,10026],"content":"The type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type.","pos":[0,9]}]},{"pos":[10490,10569],"content":"Gets a list of members representing the values on this side of the association.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of members representing the values on this side of the association.","pos":[0,79]}]},{"pos":[10851,10864],"content":"A collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection.","pos":[0,13]}]},{"pos":[11386,11488],"content":"Gets whether <xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*> forms the identity of this type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether &lt;xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*&gt; forms the identity of this type.","pos":[0,102],"source":"Gets whether <xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*> forms the identity of this type."}]},{"pos":[11620,11793],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if &lt;xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*&gt; forms the identity (primary key) of the association.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*> forms the identity (primary key) of the association."},{"pos":[12282,12343],"content":"Gets the member on this side that represents the association.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the member on this side that represents the association.","pos":[0,61]}]},{"pos":[12526,12537],"content":"The member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The member.","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.MetaAssociation\n  id: MetaAssociation\n  children:\n  - System.Data.Linq.Mapping.MetaAssociation.#ctor\n  - System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull\n  - System.Data.Linq.Mapping.MetaAssociation.DeleteRule\n  - System.Data.Linq.Mapping.MetaAssociation.IsForeignKey\n  - System.Data.Linq.Mapping.MetaAssociation.IsMany\n  - System.Data.Linq.Mapping.MetaAssociation.IsNullable\n  - System.Data.Linq.Mapping.MetaAssociation.IsUnique\n  - System.Data.Linq.Mapping.MetaAssociation.OtherKey\n  - System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey\n  - System.Data.Linq.Mapping.MetaAssociation.OtherMember\n  - System.Data.Linq.Mapping.MetaAssociation.OtherType\n  - System.Data.Linq.Mapping.MetaAssociation.ThisKey\n  - System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey\n  - System.Data.Linq.Mapping.MetaAssociation.ThisMember\n  langs:\n  - csharp\n  name: MetaAssociation\n  nameWithType: MetaAssociation\n  fullName: System.Data.Linq.Mapping.MetaAssociation\n  type: Class\n  summary: Represents an association relationship between two entity types.\n  syntax:\n    content: public abstract class MetaAssociation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: MetaAssociation()\n  nameWithType: MetaAssociation.MetaAssociation()\n  fullName: System.Data.Linq.Mapping.MetaAssociation.MetaAssociation()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> class.\n  syntax:\n    content: protected MetaAssociation ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.MetaAssociation.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull\n  id: DeleteOnNull\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: DeleteOnNull\n  nameWithType: MetaAssociation.DeleteOnNull\n  fullName: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the object should be deleted when the association is set to null.\n  syntax:\n    content: public abstract bool DeleteOnNull { get; }\n    return:\n      type: System.Boolean\n      description: If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the object is deleted when the association is set to null.\n  overload: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteRule\n  id: DeleteRule\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: DeleteRule\n  nameWithType: MetaAssociation.DeleteRule\n  fullName: System.Data.Linq.Mapping.MetaAssociation.DeleteRule\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the behavior when the child is deleted.\n  remarks: Examples of rules are \"CASCADE\", \"SET NULL\", and so forth.\n  syntax:\n    content: public abstract string DeleteRule { get; }\n    return:\n      type: System.String\n      description: The string representing the rule, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no action is specified on delete.\n  overload: System.Data.Linq.Mapping.MetaAssociation.DeleteRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey\n  id: IsForeignKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: IsForeignKey\n  nameWithType: MetaAssociation.IsForeignKey\n  fullName: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the other type is the parent of this type.\n  syntax:\n    content: public abstract bool IsForeignKey { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is the other type is the parent of this type.\n  overload: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsMany\n  id: IsMany\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: IsMany\n  nameWithType: MetaAssociation.IsMany\n  fullName: System.Data.Linq.Mapping.MetaAssociation.IsMany\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the association represents a one-to-many relationship.\n  syntax:\n    content: public abstract bool IsMany { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the association represents a one-to-many relationship.\n  overload: System.Data.Linq.Mapping.MetaAssociation.IsMany*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsNullable\n  id: IsNullable\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: IsNullable\n  nameWithType: MetaAssociation.IsNullable\n  fullName: System.Data.Linq.Mapping.MetaAssociation.IsNullable\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the association can be null.\n  syntax:\n    content: public abstract bool IsNullable { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the association can be null.\n  overload: System.Data.Linq.Mapping.MetaAssociation.IsNullable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsUnique\n  id: IsUnique\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: IsUnique\n  nameWithType: MetaAssociation.IsUnique\n  fullName: System.Data.Linq.Mapping.MetaAssociation.IsUnique\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the association is unique.\n  remarks: This property indicates a uniqueness constraint in the database.\n  syntax:\n    content: public abstract bool IsUnique { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the association is unique.\n  overload: System.Data.Linq.Mapping.MetaAssociation.IsUnique*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKey\n  id: OtherKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: OtherKey\n  nameWithType: MetaAssociation.OtherKey\n  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a list of members that represents the values on the other side of the association.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> OtherKey { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}\n      description: Returns a collection representing values on the other side of the association.\n  overload: System.Data.Linq.Mapping.MetaAssociation.OtherKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey\n  id: OtherKeyIsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: OtherKeyIsPrimaryKey\n  nameWithType: MetaAssociation.OtherKeyIsPrimaryKey\n  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the <xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*> forms the identity of the other type.\n  syntax:\n    content: public abstract bool OtherKeyIsPrimaryKey { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*> forms the identity (primary key) of the other type.\n  overload: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherMember\n  id: OtherMember\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: OtherMember\n  nameWithType: MetaAssociation.OtherMember\n  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherMember\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the member on the other side of this association that represents the reverse association.\n  remarks: This value can be null.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaDataMember OtherMember { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaDataMember\n      description: The member on the other side.\n  overload: System.Data.Linq.Mapping.MetaAssociation.OtherMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherType\n  id: OtherType\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: OtherType\n  nameWithType: MetaAssociation.OtherType\n  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the type on the other side of the association.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType OtherType { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: The type.\n  overload: System.Data.Linq.Mapping.MetaAssociation.OtherType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKey\n  id: ThisKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: ThisKey\n  nameWithType: MetaAssociation.ThisKey\n  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a list of members representing the values on this side of the association.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> ThisKey { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}\n      description: A collection.\n  overload: System.Data.Linq.Mapping.MetaAssociation.ThisKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey\n  id: ThisKeyIsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: ThisKeyIsPrimaryKey\n  nameWithType: MetaAssociation.ThisKeyIsPrimaryKey\n  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether <xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*> forms the identity of this type.\n  syntax:\n    content: public abstract bool ThisKeyIsPrimaryKey { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*> forms the identity (primary key) of the association.\n  overload: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisMember\n  id: ThisMember\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  langs:\n  - csharp\n  name: ThisMember\n  nameWithType: MetaAssociation.ThisMember\n  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisMember\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the member on this side that represents the association.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaDataMember ThisMember { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaDataMember\n      description: The member.\n  overload: System.Data.Linq.Mapping.MetaAssociation.ThisMember*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.Mapping.MetaAssociation.#ctor\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: MetaAssociation()\n  nameWithType: MetaAssociation.MetaAssociation()\n  fullName: System.Data.Linq.Mapping.MetaAssociation.MetaAssociation()\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: DeleteOnNull\n  nameWithType: MetaAssociation.DeleteOnNull\n  fullName: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteRule\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: DeleteRule\n  nameWithType: MetaAssociation.DeleteRule\n  fullName: System.Data.Linq.Mapping.MetaAssociation.DeleteRule\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsForeignKey\n  nameWithType: MetaAssociation.IsForeignKey\n  fullName: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsMany\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsMany\n  nameWithType: MetaAssociation.IsMany\n  fullName: System.Data.Linq.Mapping.MetaAssociation.IsMany\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsNullable\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsNullable\n  nameWithType: MetaAssociation.IsNullable\n  fullName: System.Data.Linq.Mapping.MetaAssociation.IsNullable\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsUnique\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsUnique\n  nameWithType: MetaAssociation.IsUnique\n  fullName: System.Data.Linq.Mapping.MetaAssociation.IsUnique\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherKey\n  nameWithType: MetaAssociation.OtherKey\n  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherKey\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<MetaDataMember>\n  nameWithType: ReadOnlyCollection<MetaDataMember>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.Mapping.MetaDataMember\n    name: MetaDataMember\n    nameWithType: MetaDataMember\n    fullName: MetaDataMember\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherKeyIsPrimaryKey\n  nameWithType: MetaAssociation.OtherKeyIsPrimaryKey\n  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherMember\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherMember\n  nameWithType: MetaAssociation.OtherMember\n  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherMember\n- uid: System.Data.Linq.Mapping.MetaDataMember\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaDataMember\n  nameWithType: MetaDataMember\n  fullName: System.Data.Linq.Mapping.MetaDataMember\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherType\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherType\n  nameWithType: MetaAssociation.OtherType\n  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherType\n- uid: System.Data.Linq.Mapping.MetaType\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaType\n  nameWithType: MetaType\n  fullName: System.Data.Linq.Mapping.MetaType\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisKey\n  nameWithType: MetaAssociation.ThisKey\n  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisKeyIsPrimaryKey\n  nameWithType: MetaAssociation.ThisKeyIsPrimaryKey\n  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisMember\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisMember\n  nameWithType: MetaAssociation.ThisMember\n  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisMember\n- uid: System.Data.Linq.Mapping.MetaAssociation.#ctor*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: MetaAssociation\n  nameWithType: MetaAssociation.MetaAssociation\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: DeleteOnNull\n  nameWithType: MetaAssociation.DeleteOnNull\n- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteRule*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: DeleteRule\n  nameWithType: MetaAssociation.DeleteRule\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsForeignKey\n  nameWithType: MetaAssociation.IsForeignKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsMany*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsMany\n  nameWithType: MetaAssociation.IsMany\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsNullable*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsNullable\n  nameWithType: MetaAssociation.IsNullable\n- uid: System.Data.Linq.Mapping.MetaAssociation.IsUnique*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: IsUnique\n  nameWithType: MetaAssociation.IsUnique\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKey*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherKey\n  nameWithType: MetaAssociation.OtherKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherKeyIsPrimaryKey\n  nameWithType: MetaAssociation.OtherKeyIsPrimaryKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherMember*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherMember\n  nameWithType: MetaAssociation.OtherMember\n- uid: System.Data.Linq.Mapping.MetaAssociation.OtherType*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: OtherType\n  nameWithType: MetaAssociation.OtherType\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKey*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisKey\n  nameWithType: MetaAssociation.ThisKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisKeyIsPrimaryKey\n  nameWithType: MetaAssociation.ThisKeyIsPrimaryKey\n- uid: System.Data.Linq.Mapping.MetaAssociation.ThisMember*\n  parent: System.Data.Linq.Mapping.MetaAssociation\n  isExternal: false\n  name: ThisMember\n  nameWithType: MetaAssociation.ThisMember\n"}