{"nodes":[{"pos":[2027,2039],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2072,2084],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2117,2129],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2162,2174],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2207,2219],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2252,2264],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2297,2309],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2342,2354],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2387,2399],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2433,2445],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2479,2491],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2525,2537],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2571,2583],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2617,2629],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2663,2675],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2709,2721],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2759,2771],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5865,5877],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6649,6661],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7434,7446],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8219,8231],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9004,9016],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9789,9801],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10574,10586],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11359,11371],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12136,12148],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12912,12924],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13688,13700],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14464,14476],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15240,15252],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16016,16028],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16792,16804],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17568,17580],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18531,18543],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19338,19350],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20652,20664],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20750,20762],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.InvokeFunc`17\n  id: InvokeFunc`17\n  children:\n  - System.Activities.Expressions.InvokeFunc`17.#ctor\n  - System.Activities.Expressions.InvokeFunc`17.Argument1\n  - System.Activities.Expressions.InvokeFunc`17.Argument10\n  - System.Activities.Expressions.InvokeFunc`17.Argument11\n  - System.Activities.Expressions.InvokeFunc`17.Argument12\n  - System.Activities.Expressions.InvokeFunc`17.Argument13\n  - System.Activities.Expressions.InvokeFunc`17.Argument14\n  - System.Activities.Expressions.InvokeFunc`17.Argument15\n  - System.Activities.Expressions.InvokeFunc`17.Argument16\n  - System.Activities.Expressions.InvokeFunc`17.Argument2\n  - System.Activities.Expressions.InvokeFunc`17.Argument3\n  - System.Activities.Expressions.InvokeFunc`17.Argument4\n  - System.Activities.Expressions.InvokeFunc`17.Argument5\n  - System.Activities.Expressions.InvokeFunc`17.Argument6\n  - System.Activities.Expressions.InvokeFunc`17.Argument7\n  - System.Activities.Expressions.InvokeFunc`17.Argument8\n  - System.Activities.Expressions.InvokeFunc`17.Argument9\n  - System.Activities.Expressions.InvokeFunc`17.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Expressions.InvokeFunc`17.Func\n  - System.Activities.Expressions.InvokeFunc`17.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  langs:\n  - csharp\n  name: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>\n  type: Class\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Func\")]\n\n      public sealed class InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult> : System.Activities.NativeActivity<TResult>\n    typeParameters:\n    - id: T1\n      description: To be added.\n    - id: T2\n      description: To be added.\n    - id: T3\n      description: To be added.\n    - id: T4\n      description: To be added.\n    - id: T5\n      description: To be added.\n    - id: T6\n      description: To be added.\n    - id: T7\n      description: To be added.\n    - id: T8\n      description: To be added.\n    - id: T9\n      description: To be added.\n    - id: T10\n      description: To be added.\n    - id: T11\n      description: To be added.\n    - id: T12\n      description: To be added.\n    - id: T13\n      description: To be added.\n    - id: T14\n      description: To be added.\n    - id: T15\n      description: To be added.\n    - id: T16\n      description: To be added.\n    - id: TResult\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.NativeActivity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.NativeActivity`1.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity`1.CanInduceIdle\n  - System.Activities.NativeActivity`1.Implementation\n  - System.Activities.NativeActivity`1.ImplementationVersion\n  - System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: InvokeFunc()\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.InvokeFunc()\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.InvokeFunc()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public InvokeFunc ();\n    parameters: []\n  overload: System.Activities.Expressions.InvokeFunc`17.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument1\n  id: Argument1\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument1\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument1\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument1\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T1> Argument1 { get; set; }\n    return:\n      type: System.Activities.InArgument{T1}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument1*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument10\n  id: Argument10\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument10\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument10\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument10\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T10> Argument10 { get; set; }\n    return:\n      type: System.Activities.InArgument{T10}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument10*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument11\n  id: Argument11\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument11\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument11\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument11\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T11> Argument11 { get; set; }\n    return:\n      type: System.Activities.InArgument{T11}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument11*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument12\n  id: Argument12\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument12\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument12\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument12\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T12> Argument12 { get; set; }\n    return:\n      type: System.Activities.InArgument{T12}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument12*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument13\n  id: Argument13\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument13\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument13\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument13\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T13> Argument13 { get; set; }\n    return:\n      type: System.Activities.InArgument{T13}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument13*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument14\n  id: Argument14\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument14\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument14\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument14\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T14> Argument14 { get; set; }\n    return:\n      type: System.Activities.InArgument{T14}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument14*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument15\n  id: Argument15\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument15\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument15\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument15\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T15> Argument15 { get; set; }\n    return:\n      type: System.Activities.InArgument{T15}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument15*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument16\n  id: Argument16\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument16\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument16\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument16\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T16> Argument16 { get; set; }\n    return:\n      type: System.Activities.InArgument{T16}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument16*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument2\n  id: Argument2\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument2\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument2\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument2\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T2> Argument2 { get; set; }\n    return:\n      type: System.Activities.InArgument{T2}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument2*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument3\n  id: Argument3\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument3\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument3\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument3\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T3> Argument3 { get; set; }\n    return:\n      type: System.Activities.InArgument{T3}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument3*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument4\n  id: Argument4\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument4\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument4\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument4\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T4> Argument4 { get; set; }\n    return:\n      type: System.Activities.InArgument{T4}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument4*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument5\n  id: Argument5\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument5\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument5\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument5\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T5> Argument5 { get; set; }\n    return:\n      type: System.Activities.InArgument{T5}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument5*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument6\n  id: Argument6\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument6\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument6\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument6\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T6> Argument6 { get; set; }\n    return:\n      type: System.Activities.InArgument{T6}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument6*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument7\n  id: Argument7\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument7\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument7\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument7\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T7> Argument7 { get; set; }\n    return:\n      type: System.Activities.InArgument{T7}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument7*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument8\n  id: Argument8\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument8\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument8\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument8\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T8> Argument8 { get; set; }\n    return:\n      type: System.Activities.InArgument{T8}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument8*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument9\n  id: Argument9\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Argument9\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument9\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument9\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.InArgument<T9> Argument9 { get; set; }\n    return:\n      type: System.Activities.InArgument{T9}\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Argument9*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Execute(NativeActivityContext)\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.Func\n  id: Func\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: Func\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Func\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Func\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.ActivityFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult> Func { get; set; }\n    return:\n      type: System.Activities.ActivityFunc`17\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.Func*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.InvokeFunc`17.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Expressions.InvokeFunc`17\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: To be added.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: To be added.\n  overload: System.Activities.Expressions.InvokeFunc`17.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.NativeActivity`1\n  isExternal: false\n  name: System.Activities.NativeActivity<TResult>\n- uid: System.Activities.Expressions.InvokeFunc`17.#ctor\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: InvokeFunc()\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.InvokeFunc()\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.InvokeFunc()\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument1\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument1\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument1\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument1\n- uid: System.Activities.InArgument{T1}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T1>\n  nameWithType: InArgument<T1>\n  fullName: System.Activities.InArgument<T1>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T1>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T1\n    name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument10\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument10\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument10\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument10\n- uid: System.Activities.InArgument{T10}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T10>\n  nameWithType: InArgument<T10>\n  fullName: System.Activities.InArgument<T10>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T10>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T10\n    name: T10\n    nameWithType: T10\n    fullName: T10\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument11\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument11\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument11\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument11\n- uid: System.Activities.InArgument{T11}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T11>\n  nameWithType: InArgument<T11>\n  fullName: System.Activities.InArgument<T11>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T11>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T11\n    name: T11\n    nameWithType: T11\n    fullName: T11\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument12\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument12\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument12\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument12\n- uid: System.Activities.InArgument{T12}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T12>\n  nameWithType: InArgument<T12>\n  fullName: System.Activities.InArgument<T12>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T12>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T12\n    name: T12\n    nameWithType: T12\n    fullName: T12\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument13\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument13\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument13\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument13\n- uid: System.Activities.InArgument{T13}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T13>\n  nameWithType: InArgument<T13>\n  fullName: System.Activities.InArgument<T13>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T13>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T13\n    name: T13\n    nameWithType: T13\n    fullName: T13\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument14\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument14\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument14\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument14\n- uid: System.Activities.InArgument{T14}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T14>\n  nameWithType: InArgument<T14>\n  fullName: System.Activities.InArgument<T14>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T14>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T14\n    name: T14\n    nameWithType: T14\n    fullName: T14\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument15\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument15\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument15\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument15\n- uid: System.Activities.InArgument{T15}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T15>\n  nameWithType: InArgument<T15>\n  fullName: System.Activities.InArgument<T15>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T15>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T15\n    name: T15\n    nameWithType: T15\n    fullName: T15\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument16\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument16\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument16\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument16\n- uid: System.Activities.InArgument{T16}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T16>\n  nameWithType: InArgument<T16>\n  fullName: System.Activities.InArgument<T16>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T16>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T16\n    name: T16\n    nameWithType: T16\n    fullName: T16\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument2\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument2\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument2\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument2\n- uid: System.Activities.InArgument{T2}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T2>\n  nameWithType: InArgument<T2>\n  fullName: System.Activities.InArgument<T2>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T2>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T2\n    name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument3\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument3\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument3\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument3\n- uid: System.Activities.InArgument{T3}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T3>\n  nameWithType: InArgument<T3>\n  fullName: System.Activities.InArgument<T3>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T3>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T3\n    name: T3\n    nameWithType: T3\n    fullName: T3\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument4\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument4\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument4\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument4\n- uid: System.Activities.InArgument{T4}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T4>\n  nameWithType: InArgument<T4>\n  fullName: System.Activities.InArgument<T4>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T4>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T4\n    name: T4\n    nameWithType: T4\n    fullName: T4\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument5\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument5\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument5\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument5\n- uid: System.Activities.InArgument{T5}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T5>\n  nameWithType: InArgument<T5>\n  fullName: System.Activities.InArgument<T5>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T5>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T5\n    name: T5\n    nameWithType: T5\n    fullName: T5\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument6\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument6\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument6\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument6\n- uid: System.Activities.InArgument{T6}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T6>\n  nameWithType: InArgument<T6>\n  fullName: System.Activities.InArgument<T6>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T6>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T6\n    name: T6\n    nameWithType: T6\n    fullName: T6\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument7\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument7\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument7\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument7\n- uid: System.Activities.InArgument{T7}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T7>\n  nameWithType: InArgument<T7>\n  fullName: System.Activities.InArgument<T7>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T7>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T7\n    name: T7\n    nameWithType: T7\n    fullName: T7\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument8\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument8\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument8\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument8\n- uid: System.Activities.InArgument{T8}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T8>\n  nameWithType: InArgument<T8>\n  fullName: System.Activities.InArgument<T8>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T8>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T8\n    name: T8\n    nameWithType: T8\n    fullName: T8\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument9\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument9\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument9\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument9\n- uid: System.Activities.InArgument{T9}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T9>\n  nameWithType: InArgument<T9>\n  fullName: System.Activities.InArgument<T9>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<T9>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T9\n    name: T9\n    nameWithType: T9\n    fullName: T9\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeFunc`17.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Execute(NativeActivityContext)\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Expressions.InvokeFunc`17.Func\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Func\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Func\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Func\n- uid: System.Activities.ActivityFunc`17\n  parent: System.Activities\n  isExternal: false\n  name: ActivityFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>\n  nameWithType: ActivityFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>\n  fullName: System.Activities.ActivityFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>\n- uid: System.Activities.Expressions.InvokeFunc`17.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Expressions.InvokeFunc`17.#ctor*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument1*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument1\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument1\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument10*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument10\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument10\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument11*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument11\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument11\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument12*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument12\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument12\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument13*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument13\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument13\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument14*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument14\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument14\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument15*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument15\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument15\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument16*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument16\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument16\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument2*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument2\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument2\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument3*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument3\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument3\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument4*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument4\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument4\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument5*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument5\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument5\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument6*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument6\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument6\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument7*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument7\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument7\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument8*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument8\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument8\n- uid: System.Activities.Expressions.InvokeFunc`17.Argument9*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Argument9\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Argument9\n- uid: System.Activities.Expressions.InvokeFunc`17.Execute*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Execute\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Execute\n- uid: System.Activities.Expressions.InvokeFunc`17.Func*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: Func\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.Func\n- uid: System.Activities.Expressions.InvokeFunc`17.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Expressions.InvokeFunc`17\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult>.OnCreateDynamicUpdateMap\n"}