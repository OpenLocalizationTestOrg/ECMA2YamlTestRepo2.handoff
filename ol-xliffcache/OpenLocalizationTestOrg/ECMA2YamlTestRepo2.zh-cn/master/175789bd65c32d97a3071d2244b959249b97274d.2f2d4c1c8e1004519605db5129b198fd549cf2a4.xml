{"nodes":[{"pos":[2766,2827],"content":"Implements the basic functionality common to button controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the basic functionality common to button controls.","pos":[0,61]}]},{"pos":[2840,3945],"content":"You do not typically inherit from ButtonBase. To create your own button class, inherit from the <xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, or <xref:System.Windows.Forms.RadioButton> class.       To have the derived button control display an image, set the <xref:System.Windows.Forms.ButtonBase.Image%2A> property or the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties. The image can be aligned on the button control by setting the <xref:System.Windows.Forms.ButtonBase.ImageAlign%2A> property. Likewise, to align the <xref:System.Windows.Forms.Control.Text%2A> displayed on the button control, set the <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property.       The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control. If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName>, the user's operating system determines the appearance of the control.","needQuote":false,"needEscape":true,"nodes":[{"content":"You do not typically inherit from ButtonBase. To create your own button class, inherit from the <xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, or <xref:System.Windows.Forms.RadioButton> class.       To have the derived button control display an image, set the <xref:System.Windows.Forms.ButtonBase.Image%2A> property or the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties. The image can be aligned on the button control by setting the <xref:System.Windows.Forms.ButtonBase.ImageAlign%2A> property. Likewise, to align the <xref:System.Windows.Forms.Control.Text%2A> displayed on the button control, set the <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property.       The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control. If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName>, the user's operating system determines the appearance of the control.","pos":[0,1101],"nodes":[{"content":"You do not typically inherit from ButtonBase.","pos":[0,45]},{"content":"To create your own button class, inherit from the &lt;xref:System.Windows.Forms.Button&gt;, &lt;xref:System.Windows.Forms.CheckBox&gt;, or &lt;xref:System.Windows.Forms.RadioButton&gt; class.","pos":[46,219],"source":" To create your own button class, inherit from the <xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, or <xref:System.Windows.Forms.RadioButton> class."},{"content":"To have the derived button control display an image, set the &lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt; property or the &lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt; and &lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt; properties.","pos":[226,471],"source":"       To have the derived button control display an image, set the <xref:System.Windows.Forms.ButtonBase.Image%2A> property or the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties."},{"content":"The image can be aligned on the button control by setting the &lt;xref:System.Windows.Forms.ButtonBase.ImageAlign%2A&gt; property.","pos":[472,596],"source":" The image can be aligned on the button control by setting the <xref:System.Windows.Forms.ButtonBase.ImageAlign%2A> property."},{"content":"Likewise, to align the &lt;xref:System.Windows.Forms.Control.Text%2A&gt; displayed on the button control, set the &lt;xref:System.Windows.Forms.ButtonBase.TextAlign%2A&gt; property.","pos":[597,766],"source":" Likewise, to align the <xref:System.Windows.Forms.Control.Text%2A> displayed on the button control, set the <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property."},{"content":"The &lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt; property determines the style and appearance of the control.","pos":[773,889],"source":"       The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control."},{"content":"If the &lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt; property is set to &lt;xref:System.Windows.Forms.FlatStyle?displayProperty=fullName&gt;, the user's operating system determines the appearance of the control.","pos":[890,1101],"source":" If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName>, the user's operating system determines the appearance of the control."}]}]},{"pos":[26299,26392],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.ButtonBase\"></xref> class."},{"pos":[26903,27096],"content":"Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge of the control, denoting that the control text extends beyond the specified length of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge of the control, denoting that the control text extends beyond the specified length of the control.","pos":[0,193]}]},{"pos":[27108,27442],"content":"Set AutoEllipsis to `true` to display text that extends beyond the width of the control when the user passes over the control with the mouse. You must set the control's `AutoSize` property to `false` if you want AutoEllipsis to be `true`. If `AutoSize` is `true`, the control will grow to fit the text and an ellipsis will not appear.","needQuote":true,"needEscape":true,"nodes":[{"content":"Set AutoEllipsis to <ph id=\"ph1\">`true`</ph> to display text that extends beyond the width of the control when the user passes over the control with the mouse.","pos":[0,141],"source":"Set AutoEllipsis to `true` to display text that extends beyond the width of the control when the user passes over the control with the mouse."},{"content":"You must set the control's <ph id=\"ph1\">`AutoSize`</ph> property to <ph id=\"ph2\">`false`</ph> if you want AutoEllipsis to be <ph id=\"ph3\">`true`</ph>.","pos":[142,238],"source":" You must set the control's `AutoSize` property to `false` if you want AutoEllipsis to be `true`."},{"content":"If <ph id=\"ph1\">`AutoSize`</ph> is <ph id=\"ph2\">`true`</ph>, the control will grow to fit the text and an ellipsis will not appear.","pos":[239,334],"source":" If `AutoSize` is `true`, the control will grow to fit the text and an ellipsis will not appear."}]},{"pos":[27563,27839],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the additional label text is to be indicated by an ellipsis; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the additional label text is to be indicated by an ellipsis; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,199],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the additional label text is to be indicated by an ellipsis; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[200,276],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[28270,28356],"content":"Gets or sets a value that indicates whether the control resizes based on its contents.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the control resizes based on its contents.","pos":[0,86]}]},{"pos":[28482,28754],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control automatically resizes based on its contents; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control automatically resizes based on its contents; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,195],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control automatically resizes based on its contents; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[196,272],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[29213,29308],"content":"Occurs when the value of the <xref:System.Windows.Forms.ButtonBase.AutoSize*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.Forms.ButtonBase.AutoSize*&gt; property changes.","pos":[0,95],"source":"Occurs when the value of the <xref:System.Windows.Forms.ButtonBase.AutoSize*> property changes."}]},{"pos":[29320,29437],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"pos":[30711,30723],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31101,31150],"content":"Gets or sets the background color of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the background color of the control.","pos":[0,49]}]},{"pos":[31299,31383],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value representing the background color.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Color\"></xref> value representing the background color."},{"pos":[31910,31961],"content":"Creates a new accessibility object for the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new accessibility object for the control.","pos":[0,51]}]},{"pos":[32174,32255],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the control.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> for the control."},{"pos":[32721,32794],"content":"Gets the required creation parameters when the control handle is created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the required creation parameters when the control handle is created.","pos":[0,73]}]},{"pos":[32970,33116],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CreateParams\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the required creation parameters when the handle to the control is created.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created."},{"pos":[33577,33651],"content":"Gets the default Input Method Editor (IME) mode supported by this control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default Input Method Editor (IME) mode supported by this control.","pos":[0,74]}]},{"pos":[33663,33844],"content":"As implemented in the &lt;xref:System.Windows.Forms.ButtonBase&gt; class, this property always returns the <ph id=\"ph1\">`Disable`</ph> value of &lt;xref:System.Windows.Forms.ImeMode?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"source":"As implemented in the <xref:System.Windows.Forms.ButtonBase> class, this property always returns the `Disable` value of <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>."},{"pos":[34012,34080],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ImeMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values."},{"pos":[34528,34565],"content":"Gets the default size of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default size of the control.","pos":[0,37]}]},{"pos":[34712,34780],"content":"The default <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the control.","needQuote":true,"needEscape":true,"source":"The default <xref href=\"System.Drawing.Size\"></xref> of the control."},{"pos":[35262,35406],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ButtonBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.Windows.Forms.ButtonBase\"></xref> and optionally releases the managed resources."},{"pos":[35419,35948],"content":"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. `Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ButtonBase> references. This method invokes the `Dispose` method of each referenced object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[0,101],"source":"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[102,205],"source":"`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id=\"ph1\">`Dispose`</ph> with <ph id=\"ph2\">`disposing`</ph> set to <ph id=\"ph3\">`false`</ph>.","pos":[206,289],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.Windows.Forms.ButtonBase&gt; references.","pos":[296,459],"source":"       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ButtonBase> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose`</ph> method of each referenced object.","pos":[460,527],"source":" This method invokes the `Dispose` method of each referenced object."}]},{"pos":[36105,36314],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[36770,36864],"content":"Gets the appearance of the border and the colors used to indicate check state and mouse state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the appearance of the border and the colors used to indicate check state and mouse state.","pos":[0,94]}]},{"pos":[36876,37047],"content":"Use the FlatAppearance property only with <xref:System.Windows.Forms.Button> controls whose <xref:System.Windows.Forms.FlatStyle> is <xref:System.Windows.Forms.FlatStyle>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the FlatAppearance property only with &lt;xref:System.Windows.Forms.Button&gt; controls whose &lt;xref:System.Windows.Forms.FlatStyle&gt; is &lt;xref:System.Windows.Forms.FlatStyle&gt;.","pos":[0,171],"source":"Use the FlatAppearance property only with <xref:System.Windows.Forms.Button> controls whose <xref:System.Windows.Forms.FlatStyle> is <xref:System.Windows.Forms.FlatStyle>."}]},{"pos":[37229,37310],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.FlatButtonAppearance\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.FlatButtonAppearance\"></xref> values."},{"pos":[37748,37809],"content":"Gets or sets the flat style appearance of the button control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the flat style appearance of the button control.","pos":[0,61]}]},{"pos":[37822,39058],"content":"When the FlatStyle property of the <xref:System.Windows.Forms.RadioButton> and <xref:System.Windows.Forms.CheckBox> classes is set to `System`, the control is drawn by the user's operating system and the check alignment is based upon the `CheckAlign` and <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property values. The `CheckAlign` property value is not changed, but the appearance of the control can be affected. The check box is horizontally aligned with either the left or right edge of the control (a left or center alignment appears left aligned, right remains unchanged), and vertically aligned the same as the descriptive text. For example, if you have a <xref:System.Windows.Forms.CheckBox> control with a `CheckAlign` property value of `ContentAlignment`. `MiddleCenter`, a <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property value of `ContentAlignment.TopRight`, and the FlatStyle property value is set to `System`, the check box alignment will appear to be `ContentAlignment.TopLeft` while the text alignment remains unchanged.      > [!NOTE] >  If the FlatStyle property is set to `FlatStyle.System`, any images assigned to the <xref:System.Windows.Forms.ButtonBase.Image%2A> property are not displayed.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the FlatStyle property of the &lt;xref:System.Windows.Forms.RadioButton&gt; and &lt;xref:System.Windows.Forms.CheckBox&gt; classes is set to <ph id=\"ph1\">`System`</ph>, the control is drawn by the user's operating system and the check alignment is based upon the <ph id=\"ph2\">`CheckAlign`</ph> and &lt;xref:System.Windows.Forms.ButtonBase.TextAlign%2A&gt; property values.","pos":[0,323],"source":"When the FlatStyle property of the <xref:System.Windows.Forms.RadioButton> and <xref:System.Windows.Forms.CheckBox> classes is set to `System`, the control is drawn by the user's operating system and the check alignment is based upon the `CheckAlign` and <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property values."},{"content":"The <ph id=\"ph1\">`CheckAlign`</ph> property value is not changed, but the appearance of the control can be affected.","pos":[324,422],"source":" The `CheckAlign` property value is not changed, but the appearance of the control can be affected."},{"content":"The check box is horizontally aligned with either the left or right edge of the control (a left or center alignment appears left aligned, right remains unchanged), and vertically aligned the same as the descriptive text.","pos":[423,643]},{"content":"For example, if you have a &lt;xref:System.Windows.Forms.CheckBox&gt; control with a <ph id=\"ph1\">`CheckAlign`</ph> property value of <ph id=\"ph2\">`ContentAlignment`</ph>.","pos":[644,773],"source":" For example, if you have a <xref:System.Windows.Forms.CheckBox> control with a `CheckAlign` property value of `ContentAlignment`."},{"content":"<ph id=\"ph1\">`MiddleCenter`</ph>, a &lt;xref:System.Windows.Forms.ButtonBase.TextAlign%2A&gt; property value of <ph id=\"ph2\">`ContentAlignment.TopRight`</ph>, and the FlatStyle property value is set to <ph id=\"ph3\">`System`</ph>, the check box alignment will appear to be <ph id=\"ph4\">`ContentAlignment.TopLeft`</ph> while the text alignment remains unchanged.","pos":[774,1056],"source":"`MiddleCenter`, a <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property value of `ContentAlignment.TopRight`, and the FlatStyle property value is set to `System`, the check box alignment will appear to be `ContentAlignment.TopLeft` while the text alignment remains unchanged."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the FlatStyle property is set to <ph id=\"ph2\">`FlatStyle.System`</ph>, any images assigned to the &lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt; property are not displayed.","pos":[1062,1233],"source":"      > [!NOTE] >  If the FlatStyle property is set to `FlatStyle.System`, any images assigned to the <xref:System.Windows.Forms.ButtonBase.Image%2A> property are not displayed."}]},{"pos":[39997,40158],"content":"One of the <xref href=\"System.Windows.Forms.FlatStyle\"></xref> values. The default value is <xref uid=\"langword_csharp_Standard\" name=\"Standard\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.FlatStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,70],"source":"One of the <xref href=\"System.Windows.Forms.FlatStyle\"></xref> values."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Standard\" name=\"Standard\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[71,161],"source":" The default value is <xref uid=\"langword_csharp_Standard\" name=\"Standard\" href=\"\"></xref>."}]},{"pos":[40374,40470],"content":"The value assigned is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.FlatStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The value assigned is not one of the <xref href=\"System.Windows.Forms.FlatStyle\"></xref> values."},{"pos":[40924,41000],"content":"Retrieves the size of a rectangular area into which a control can be fitted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the size of a rectangular area into which a control can be fitted.","pos":[0,76]}]},{"pos":[41012,41542],"content":"The behavior of GetPreferredSize differs by control. The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control. You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases. For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`. The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.","needQuote":true,"needEscape":true,"nodes":[{"content":"The behavior of GetPreferredSize differs by control.","pos":[0,52]},{"content":"The &lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt; might be unable to assign the returned size to the control.","pos":[53,168],"source":" The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control."},{"content":"You can return a size larger than the constraints indicated in the <ph id=\"ph1\">`proposedSize`</ph> parameter, but <ph id=\"ph2\">`proposedSize`</ph> should decrease as the constraint decreases.","pos":[169,325],"source":" You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases."},{"content":"For example, <ph id=\"ph1\">`GetPreferredSize(new Size(100, 0))`</ph> should not be wider than <ph id=\"ph2\">`GetPreferredSize(new Size(200, 0))`</ph>.","pos":[326,438],"source":" For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`."},{"content":"The exception is a <ph id=\"ph1\">`proposedSize`</ph> of 0 or <ph id=\"ph2\">`Size.Empty`</ph>, which are defined as unconstrained.","pos":[439,530],"source":" The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained."}]},{"pos":[41745,41781],"content":"The custom-sized area for a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The custom-sized area for a control.","pos":[0,36]}]},{"pos":[41845,41959],"content":"An ordered pair of type <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the width and height of a rectangle.","needQuote":true,"needEscape":true,"source":"An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle."},{"pos":[42379,42440],"content":"Gets or sets the image that is displayed on a button control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the image that is displayed on a button control.","pos":[0,61]}]},{"pos":[42453,42854],"content":"When the Image property is set, the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property will be set to `null`, and the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property will be set to its default, -1.      > [!NOTE] >  If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to `FlatStyle.System`, any images assigned to the Image property are not displayed.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the Image property is set, the &lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt; property will be set to <ph id=\"ph1\">`null`</ph>, and the &lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt; property will be set to its default, -1.","pos":[0,221],"source":"When the Image property is set, the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property will be set to `null`, and the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property will be set to its default, -1."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the &lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt; property is set to <ph id=\"ph2\">`FlatStyle.System`</ph>, any images assigned to the Image property are not displayed.","pos":[227,398],"source":"      > [!NOTE] >  If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to `FlatStyle.System`, any images assigned to the Image property are not displayed."}]},{"pos":[43769,43930],"content":"The <xref href=\"System.Drawing.Image\"></xref> displayed on the button control. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Image\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> displayed on the button control.","pos":[0,78],"source":"The <xref href=\"System.Drawing.Image\"></xref> displayed on the button control."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[79,161],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[44364,44426],"content":"Gets or sets the alignment of the image on the button control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the alignment of the image on the button control.","pos":[0,62]}]},{"pos":[45378,45548],"content":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values. The default value is <xref uid=\"langword_csharp_MiddleCenter\" name=\"MiddleCenter\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,71],"source":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MiddleCenter\" name=\"MiddleCenter\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[72,170],"source":" The default value is <xref uid=\"langword_csharp_MiddleCenter\" name=\"MiddleCenter\" href=\"\"></xref>."}]},{"pos":[45765,45862],"content":"The value assigned is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The value assigned is not one of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values."},{"pos":[46228,46313],"content":"Gets or sets the image list index value of the image displayed on the button control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the image list index value of the image displayed on the button control.","pos":[0,85]}]},{"pos":[46326,47699],"content":"When the ImageIndex or <xref:System.Windows.Forms.ButtonBase.ImageList%2A> properties are set, the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set to its default value, `null`.      > [!NOTE] >  If the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property value is changed to `null`, the ImageIndex property returns its default value, -1. However, the assigned ImageIndex value is retained internally and used when another <xref:System.Windows.Forms.ImageList> object is assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property. If the new <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property has an <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=fullName> property value that is less than or equal to the value assigned to the ImageIndex property minus one (to account for the collection being a zero-based index), the ImageIndex property value is adjusted to one less than the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> property value. For example, consider a button control whose <xref:System.Windows.Forms.ImageList> has three images and whose ImageIndex property is set to 2. If a new <xref:System.Windows.Forms.ImageList> that has only two images is assigned to the button, the ImageIndex value changes to 1.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the ImageIndex or &lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt; properties are set, the &lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt; property is set to its default value, <ph id=\"ph1\">`null`</ph>.","pos":[0,192],"source":"When the ImageIndex or <xref:System.Windows.Forms.ButtonBase.ImageList%2A> properties are set, the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set to its default value, `null`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the &lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt; property value is changed to <ph id=\"ph2\">`null`</ph>, the ImageIndex property returns its default value, -1.","pos":[198,361],"source":"      > [!NOTE] >  If the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property value is changed to `null`, the ImageIndex property returns its default value, -1."},{"content":"However, the assigned ImageIndex value is retained internally and used when another &lt;xref:System.Windows.Forms.ImageList&gt; object is assigned to the &lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt; property.","pos":[362,571],"source":" However, the assigned ImageIndex value is retained internally and used when another <xref:System.Windows.Forms.ImageList> object is assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property."},{"content":"If the new &lt;xref:System.Windows.Forms.ImageList&gt; assigned to the &lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt; property has an &lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=fullName&gt; property value that is less than or equal to the value assigned to the ImageIndex property minus one (to account for the collection being a zero-based index), the ImageIndex property value is adjusted to one less than the &lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A&gt; property value.","pos":[572,1093],"source":" If the new <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property has an <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=fullName> property value that is less than or equal to the value assigned to the ImageIndex property minus one (to account for the collection being a zero-based index), the ImageIndex property value is adjusted to one less than the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> property value."},{"content":"For example, consider a button control whose &lt;xref:System.Windows.Forms.ImageList&gt; has three images and whose ImageIndex property is set to 2.","pos":[1094,1236],"source":" For example, consider a button control whose <xref:System.Windows.Forms.ImageList> has three images and whose ImageIndex property is set to 2."},{"content":"If a new &lt;xref:System.Windows.Forms.ImageList&gt; that has only two images is assigned to the button, the ImageIndex value changes to 1.","pos":[1237,1370],"source":" If a new <xref:System.Windows.Forms.ImageList> that has only two images is assigned to the button, the ImageIndex value changes to 1."}]},{"pos":[48630,48763],"content":"A zero-based index, which represents the image position in an <xref href=\"System.Windows.Forms.ImageList\"></xref>. The default is -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"A zero-based index, which represents the image position in an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ImageList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,114],"source":"A zero-based index, which represents the image position in an <xref href=\"System.Windows.Forms.ImageList\"></xref>."},{"content":"The default is -1.","pos":[115,133]}]},{"pos":[48948,49015],"content":"The assigned value is less than the lower bounds of the ImageIndex.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assigned value is less than the lower bounds of the ImageIndex.","pos":[0,67]}]},{"pos":[49371,49472],"content":"Gets or sets the key accessor for the image in the <xref:System.Windows.Forms.ButtonBase.ImageList*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the key accessor for the image in the &lt;xref:System.Windows.Forms.ButtonBase.ImageList*&gt;.","pos":[0,101],"source":"Gets or sets the key accessor for the image in the <xref:System.Windows.Forms.ButtonBase.ImageList*>."}]},{"pos":[49484,49572],"content":"The ImageKey property specifies the image from the image list to display on the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ImageKey property specifies the image from the image list to display on the control.","pos":[0,88]}]},{"pos":[49690,49733],"content":"A string representing the key of the image.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representing the key of the image.","pos":[0,43]}]},{"pos":[50165,50324],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ImageList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Image\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> displayed on a button control.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.Forms.ImageList\"></xref> that contains the <xref href=\"System.Drawing.Image\"></xref> displayed on a button control."},{"pos":[50337,51822],"content":"When the ImageList or <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set, the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set `null`, which is its default value.      > [!NOTE] >  If the ImageList property value is changed to `null`, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property returns its default value, -1. However, the assigned <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value is retained internally and used when another <xref:System.Windows.Forms.ImageList> is assigned to the ImageList property. If the new <xref:System.Windows.Forms.ImageList> assigned to the ImageList property has an <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=fullName> property value that is less than or equal to the value assigned to the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property minus one (because the collection is a zero-based index), the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property value is adjusted to one less than the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> property value. For example, consider a button control whose <xref:System.Windows.Forms.ImageList> has three images and whose <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set to 2. If a new <xref:System.Windows.Forms.ImageList> that has only two images is assigned to the button, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value changes to 1.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the ImageList or &lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt; property is set, the &lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt; property is set <ph id=\"ph1\">`null`</ph>, which is its default value.","pos":[0,195],"source":"When the ImageList or <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set, the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set `null`, which is its default value."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the ImageList property value is changed to <ph id=\"ph2\">`null`</ph>, the &lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt; property returns its default value, -1.","pos":[201,364],"source":"      > [!NOTE] >  If the ImageList property value is changed to `null`, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property returns its default value, -1."},{"content":"However, the assigned &lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt; value is retained internally and used when another &lt;xref:System.Windows.Forms.ImageList&gt; is assigned to the ImageList property.","pos":[365,567],"source":" However, the assigned <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value is retained internally and used when another <xref:System.Windows.Forms.ImageList> is assigned to the ImageList property."},{"content":"If the new &lt;xref:System.Windows.Forms.ImageList&gt; assigned to the ImageList property has an &lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=fullName&gt; property value that is less than or equal to the value assigned to the &lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt; property minus one (because the collection is a zero-based index), the &lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt; property value is adjusted to one less than the &lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A&gt; property value.","pos":[568,1121],"source":" If the new <xref:System.Windows.Forms.ImageList> assigned to the ImageList property has an <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=fullName> property value that is less than or equal to the value assigned to the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property minus one (because the collection is a zero-based index), the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property value is adjusted to one less than the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> property value."},{"content":"For example, consider a button control whose &lt;xref:System.Windows.Forms.ImageList&gt; has three images and whose &lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt; property is set to 2.","pos":[1122,1306],"source":" For example, consider a button control whose <xref:System.Windows.Forms.ImageList> has three images and whose <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set to 2."},{"content":"If a new &lt;xref:System.Windows.Forms.ImageList&gt; that has only two images is assigned to the button, the &lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt; value changes to 1.","pos":[1307,1482],"source":" If a new <xref:System.Windows.Forms.ImageList> that has only two images is assigned to the button, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value changes to 1."}]},{"pos":[52794,52932],"content":"An <xref href=\"System.Windows.Forms.ImageList\"></xref>. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ImageList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,55],"source":"An <xref href=\"System.Windows.Forms.ImageList\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[56,138],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[53355,53475],"content":"Gets or sets the Input Method Editor (IME) mode supported by this control. This property is not relevant for this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the Input Method Editor (IME) mode supported by this control. This property is not relevant for this class.","pos":[0,120],"nodes":[{"content":"Gets or sets the Input Method Editor (IME) mode supported by this control.","pos":[0,74]},{"content":"This property is not relevant for this class.","pos":[75,120]}]}]},{"pos":[53487,53532],"content":"This property is not relevant for this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]},{"pos":[53686,53754],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ImeMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values."},{"pos":[54207,54334],"content":"Occurs when the <xref:System.Windows.Forms.ButtonBase.ImeMode*> property is changed. This event is not relevant for this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the <xref:System.Windows.Forms.ButtonBase.ImeMode*> property is changed. This event is not relevant for this class.","pos":[0,127],"nodes":[{"content":"Occurs when the &lt;xref:System.Windows.Forms.ButtonBase.ImeMode*&gt; property is changed.","pos":[0,84],"source":"Occurs when the <xref:System.Windows.Forms.ButtonBase.ImeMode*> property is changed."},{"content":"This event is not relevant for this class.","pos":[85,127]}]}]},{"pos":[54346,54388],"content":"This event is not relevant for this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event is not relevant for this class.","pos":[0,42]}]},{"pos":[54517,54529],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54907,54988],"content":"Gets or sets a value indicating whether the button control is the default button.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the button control is the default button.","pos":[0,81]}]},{"pos":[55001,55418],"content":"When the IsDefault property is set to `true`, the button is the default button for the <xref:System.Windows.Forms.Form>. This means that the button is clicked when the ENTER key is pressed if no other button or any other control that captures the ENTER key has focus.       To specify the default button of a form, set the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of the form to the desired button.","needQuote":false,"needEscape":true,"nodes":[{"content":"When the IsDefault property is set to <ph id=\"ph1\">`true`</ph>, the button is the default button for the &lt;xref:System.Windows.Forms.Form&gt;.","pos":[0,120],"source":"When the IsDefault property is set to `true`, the button is the default button for the <xref:System.Windows.Forms.Form>."},{"content":"This means that the button is clicked when the ENTER key is pressed if no other button or any other control that captures the ENTER key has focus.","pos":[121,267]},{"content":"To specify the default button of a form, set the &lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt; property of the form to the desired button.","pos":[274,415],"source":"       To specify the default button of a form, set the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of the form to the desired button."}]},{"pos":[55540,55720],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the button control is the default button; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the button control is the default button; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[56255,56337],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.EnabledChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event."},{"pos":[56493,56549],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[57061,57137],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.GotFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.GotFocus\"></xref> event."},{"pos":[57150,57491],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnGotFocus method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnGotFocus method also allows derived classes to handle the event without attaching a delegate.","pos":[165,264]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[265,339]}]},{"pos":[57642,57698],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[58242,58307],"content":"Raises the <xref:System.Windows.Forms.ButtonBase.OnKeyUp*> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the &lt;xref:System.Windows.Forms.ButtonBase.OnKeyUp*&gt; event.","pos":[0,65],"source":"Raises the <xref:System.Windows.Forms.ButtonBase.OnKeyUp*> event."}]},{"pos":[58320,58985],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnKeyDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.      > [!NOTE] >  Do not call OnKeyDown if the button is disabled (this includes calls to the base class's OnKeyDown method when you override OnKeyDown in a derived class). When disabling the button in an override of OnKeyDown, call the base class's OnKeyDown method before disabling the button, or do not call it at all.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnKeyDown method also allows derived classes to handle the event without attaching a delegate.","pos":[165,263]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[264,338]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not call OnKeyDown if the button is disabled (this includes calls to the base class's OnKeyDown method when you override OnKeyDown in a derived class).","pos":[344,511],"source":"      > [!NOTE] >  Do not call OnKeyDown if the button is disabled (this includes calls to the base class's OnKeyDown method when you override OnKeyDown in a derived class)."},{"content":"When disabling the button in an override of OnKeyDown, call the base class's OnKeyDown method before disabling the button, or do not call it at all.","pos":[512,660]}]},{"pos":[59186,59272],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.KeyEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data."},{"pos":[59805,59830],"content":"Raises the OnKeyUp event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the OnKeyUp event.","pos":[0,25]}]},{"pos":[59843,60181],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnKeyUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnKeyUp method also allows derived classes to handle the event without attaching a delegate.","pos":[165,261]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[262,336]}]},{"pos":[60380,60466],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.KeyEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data."},{"pos":[60974,61003],"content":"Raises the OnLostFocus event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the OnLostFocus event.","pos":[0,29]}]},{"pos":[61016,61358],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnLostFocus method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnLostFocus method also allows derived classes to handle the event without attaching a delegate.","pos":[165,265]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[266,340]}]},{"pos":[61510,61566],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[62131,62197],"content":"Raises the <xref:System.Windows.Forms.Control.OnMouseDown*> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the &lt;xref:System.Windows.Forms.Control.OnMouseDown*&gt; event.","pos":[0,66],"source":"Raises the <xref:System.Windows.Forms.Control.OnMouseDown*> event."}]},{"pos":[62210,62887],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnMouseDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.      > [!NOTE] >  Do not call OnMouseDown if the button is disabled (this includes calls to the base class's OnMouseDown method when you override OnMouseDown in a derived class). When disabling the button in an override of OnMouseDown, call the base class's OnMouseDown method before disabling the button, or do not call it at all.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnMouseDown method also allows derived classes to handle the event without attaching a delegate.","pos":[165,265]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[266,340]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not call OnMouseDown if the button is disabled (this includes calls to the base class's OnMouseDown method when you override OnMouseDown in a derived class).","pos":[346,519],"source":"      > [!NOTE] >  Do not call OnMouseDown if the button is disabled (this includes calls to the base class's OnMouseDown method when you override OnMouseDown in a derived class)."},{"content":"When disabling the button in an override of OnMouseDown, call the base class's OnMouseDown method before disabling the button, or do not call it at all.","pos":[520,672]}]},{"pos":[63094,63182],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."},{"pos":[63699,63766],"content":"Raises the <xref:System.Windows.Forms.Control.OnMouseEnter*> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the &lt;xref:System.Windows.Forms.Control.OnMouseEnter*&gt; event.","pos":[0,67],"source":"Raises the <xref:System.Windows.Forms.Control.OnMouseEnter*> event."}]},{"pos":[63779,64461],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnMouseEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.      > [!NOTE] >  Do not call OnMouseEnter if the button is disabled (this includes call to the base class's OnMouseEnter method when you override OnMouseEnter in a derived class). When disabling the button in an override of OnMouseEnter, call the base class's OnMouseEnter method before disabling the button, or do not call it at all.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnMouseEnter method also allows derived classes to handle the event without attaching a delegate.","pos":[165,266]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[267,341]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not call OnMouseEnter if the button is disabled (this includes call to the base class's OnMouseEnter method when you override OnMouseEnter in a derived class).","pos":[347,522],"source":"      > [!NOTE] >  Do not call OnMouseEnter if the button is disabled (this includes call to the base class's OnMouseEnter method when you override OnMouseEnter in a derived class)."},{"content":"When disabling the button in an override of OnMouseEnter, call the base class's OnMouseEnter method before disabling the button, or do not call it at all.","pos":[523,677]}]},{"pos":[64630,64686],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[65204,65271],"content":"Raises the <xref:System.Windows.Forms.Control.OnMouseLeave*> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the &lt;xref:System.Windows.Forms.Control.OnMouseLeave*&gt; event.","pos":[0,67],"source":"Raises the <xref:System.Windows.Forms.Control.OnMouseLeave*> event."}]},{"pos":[65284,65627],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnMouseLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnMouseLeave method also allows derived classes to handle the event without attaching a delegate.","pos":[165,266]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[267,341]}]},{"pos":[65796,65852],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[66418,66484],"content":"Raises the <xref:System.Windows.Forms.Control.OnMouseMove*> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the &lt;xref:System.Windows.Forms.Control.OnMouseMove*&gt; event.","pos":[0,66],"source":"Raises the <xref:System.Windows.Forms.Control.OnMouseMove*> event."}]},{"pos":[66497,67174],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnMouseMove method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.      > [!NOTE] >  Do not call OnMouseMove if the button is disabled (this includes calls to the base class's OnMouseMove method when you override OnMouseMove in a derived class). When disabling the button in an override of OnMouseMove, call the base class's OnMouseMove method before disabling the button, or do not call it at all.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnMouseMove method also allows derived classes to handle the event without attaching a delegate.","pos":[165,265]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[266,340]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not call OnMouseMove if the button is disabled (this includes calls to the base class's OnMouseMove method when you override OnMouseMove in a derived class).","pos":[346,519],"source":"      > [!NOTE] >  Do not call OnMouseMove if the button is disabled (this includes calls to the base class's OnMouseMove method when you override OnMouseMove in a derived class)."},{"content":"When disabling the button in an override of OnMouseMove, call the base class's OnMouseMove method before disabling the button, or do not call it at all.","pos":[520,672]}]},{"pos":[67381,67469],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."},{"pos":[68024,68051],"content":"Raises the OnMouseUp event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the OnMouseUp event.","pos":[0,27]}]},{"pos":[68064,68404],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnMouseUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnMouseUp method also allows derived classes to handle the event without attaching a delegate.","pos":[165,263]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[264,338]}]},{"pos":[68609,68697],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."},{"pos":[69240,69265],"content":"Raises the OnPaint event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises the OnPaint event.","pos":[0,25]}]},{"pos":[69278,69616],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnPaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,158],"source":" For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnPaint method also allows derived classes to handle the event without attaching a delegate.","pos":[165,261]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[262,336]}]},{"pos":[69819,69907],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.PaintEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data."},{"pos":[70435,70516],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.ParentChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.ParentChanged\"></xref> event."},{"pos":[70671,70727],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[71253,71332],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.TextChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event."},{"pos":[71485,71541],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[72080,72162],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.VisibleChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event."},{"pos":[72318,72381],"content":"An <xref:System.EventArgs> object that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; object that contains the event data.","pos":[0,63],"source":"An <xref:System.EventArgs> object that contains the event data."}]},{"pos":[72870,72987],"content":"Resets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Button\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control to the state before it is pressed and redraws it.","needQuote":true,"needEscape":true,"source":"Resets the <xref href=\"System.Windows.Forms.Button\"></xref> control to the state before it is pressed and redraws it."},{"pos":[73484,73535],"content":"Gets or sets the text associated with this control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text associated with this control.","pos":[0,51]}]},{"pos":[73658,73696],"content":"The text associated with this control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text associated with this control.","pos":[0,38]}]},{"pos":[74124,74185],"content":"Gets or sets the alignment of the text on the button control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the alignment of the text on the button control.","pos":[0,61]}]},{"pos":[75147,75311],"content":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values. The default is <xref uid=\"langword_csharp_MiddleCenter\" name=\"MiddleCenter\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,71],"source":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MiddleCenter\" name=\"MiddleCenter\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[72,164],"source":" The default is <xref uid=\"langword_csharp_MiddleCenter\" name=\"MiddleCenter\" href=\"\"></xref>."}]},{"pos":[75527,75624],"content":"The value assigned is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The value assigned is not one of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values."},{"pos":[76025,76092],"content":"Gets or sets the position of text and image relative to each other.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the position of text and image relative to each other.","pos":[0,67]}]},{"pos":[76276,76433],"content":"One of the values of <xref href=\"System.Windows.Forms.TextImageRelation\"></xref>. The default is <xref href=\"System.Windows.Forms.TextImageRelation\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the values of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TextImageRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,81],"source":"One of the values of <xref href=\"System.Windows.Forms.TextImageRelation\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TextImageRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[82,157],"source":" The default is <xref href=\"System.Windows.Forms.TextImageRelation\"></xref>."}]},{"pos":[76657,76752],"content":"The value is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.TextImageRelation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The value is not one of the <xref href=\"System.Windows.Forms.TextImageRelation\"></xref> values."},{"pos":[77198,77508],"content":"Gets or sets a value that determines whether to use the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class (<ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph>) or the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.TextRenderer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class (<ph id=\"ph2\">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph>) to render text.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that determines whether to use the <xref href=\"System.Drawing.Graphics\"></xref> class ([!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]) or the <xref href=\"System.Windows.Forms.TextRenderer\"></xref> class ([!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]) to render text."},{"pos":[77521,79540],"content":"The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/add/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/add/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class. In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/add/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/add/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`.       The [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts. In earlier versions of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering. [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]. In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application. To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true` for a specific control. To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=fullName> method with a parameter of `true`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`UseCompatibleTextRendering`</ph> property is intended to provide visual compatibility between Windows Forms controls that render text using the &lt;xref:System.Windows.Forms.TextRenderer&gt; class and <ph id=\"ph2\">[!INCLUDE[net_v10_short](~/add/includes/net-v10-short-md.md)]</ph> and <ph id=\"ph3\">[!INCLUDE[net_v11_short](~/add/includes/net-v11-short-md.md)]</ph> applications that perform custom text rendering using the &lt;xref:System.Drawing.Graphics&gt; class.","pos":[0,418],"source":"The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/add/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/add/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class."},{"content":"In most cases, if your application is not being upgraded from <ph id=\"ph1\">[!INCLUDE[net_v10_short](~/add/includes/net-v10-short-md.md)]</ph> or <ph id=\"ph2\">[!INCLUDE[net_v11_short](~/add/includes/net-v11-short-md.md)]</ph>, it is recommended that you leave <ph id=\"ph3\">`UseCompatibleTextRendering`</ph> set to the default value of <ph id=\"ph4\">`false`</ph>.","pos":[419,707],"source":" In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/add/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/add/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`."},{"content":"The <ph id=\"ph1\">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> based &lt;xref:System.Windows.Forms.TextRenderer&gt; class was introduced in the <ph id=\"ph2\">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> to improve performance, make text look better, and improve support for international fonts.","pos":[714,994],"source":"       The [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts."},{"content":"In earlier versions of the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>, the <ph id=\"ph2\">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> based &lt;xref:System.Drawing.Graphics&gt; class was used to perform all text rendering.","pos":[995,1229],"source":" In earlier versions of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> calculates character spacing and word wrapping differently from <ph id=\"ph2\">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph>.","pos":[1230,1410],"source":"[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]."},{"content":"In a Windows Forms application that uses the &lt;xref:System.Drawing.Graphics&gt; class to render text, this could cause the text for controls that use &lt;xref:System.Windows.Forms.TextRenderer&gt; to appear different from the other text in the application.","pos":[1411,1657],"source":" In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application."},{"content":"To resolve this incompatibility, you can set the <ph id=\"ph1\">`UseCompatibleTextRendering`</ph> property to <ph id=\"ph2\">`true`</ph> for a specific control.","pos":[1658,1778],"source":" To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true` for a specific control."},{"content":"To set <ph id=\"ph1\">`UseCompatibleTextRendering`</ph> to <ph id=\"ph2\">`true`</ph> for all supported controls in the application, call the &lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=fullName&gt; method with a parameter of <ph id=\"ph3\">`true`</ph>.","pos":[1779,2017],"source":" To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=fullName> method with a parameter of `true`."}]},{"pos":[79676,80057],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Drawing.Graphics\"></xref> class should be used to perform text rendering for compatibility with versions 1.0 and 1.1. of the .NET Framework; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class should be used to perform text rendering for compatibility with versions 1.0 and 1.1.","pos":[0,204],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Drawing.Graphics\"></xref> class should be used to perform text rendering for compatibility with versions 1.0 and 1.1."},{"content":"of the .NET Framework; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[205,302],"source":" of the .NET Framework; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[303,381],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[80517,80661],"content":"Gets or sets a value indicating whether the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the first character that is preceded by an ampersand (<ph id=\"ph1\">&amp;amp;</ph>) is used as the mnemonic key of the control.","pos":[0,144],"source":"Gets or sets a value indicating whether the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control."}]},{"pos":[80781,81101],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the first character that is preceded by an ampersand (<ph id=\"ph1\">&amp;amp;</ph>) is used as the mnemonic key of the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,243],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[244,320],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[81606,81704],"content":"Gets or sets a value that determines if the background is drawn using visual styles, if supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that determines if the background is drawn using visual styles, if supported.","pos":[0,98]}]},{"pos":[81716,82063],"content":"Visual styles are specifications for the appearance of controls. For example, visual styles can define the color, size, and font of controls, and they enable you to configure the visual interface to coordinate with your application interface. Additionally, they provide a mechanism for all Windows-based applications to have visual styles applied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Visual styles are specifications for the appearance of controls. For example, visual styles can define the color, size, and font of controls, and they enable you to configure the visual interface to coordinate with your application interface. Additionally, they provide a mechanism for all Windows-based applications to have visual styles applied.","pos":[0,347],"nodes":[{"content":"Visual styles are specifications for the appearance of controls.","pos":[0,64]},{"content":"For example, visual styles can define the color, size, and font of controls, and they enable you to configure the visual interface to coordinate with your application interface.","pos":[65,242]},{"content":"Additionally, they provide a mechanism for all Windows-based applications to have visual styles applied.","pos":[243,347]}]}]},{"pos":[82195,82378],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the background is drawn using visual styles; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the background is drawn using visual styles; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[82902,82929],"content":"Processes Windows messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes Windows messages.","pos":[0,27]}]},{"pos":[83111,83184],"content":"The Windows <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to process.","needQuote":true,"needEscape":true,"source":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.ButtonBase\n  id: ButtonBase\n  children:\n  - System.Windows.Forms.ButtonBase.#ctor\n  - System.Windows.Forms.ButtonBase.AutoEllipsis\n  - System.Windows.Forms.ButtonBase.AutoSize\n  - System.Windows.Forms.ButtonBase.AutoSizeChanged\n  - System.Windows.Forms.ButtonBase.BackColor\n  - System.Windows.Forms.ButtonBase.CreateAccessibilityInstance\n  - System.Windows.Forms.ButtonBase.CreateParams\n  - System.Windows.Forms.ButtonBase.DefaultImeMode\n  - System.Windows.Forms.ButtonBase.DefaultSize\n  - System.Windows.Forms.ButtonBase.Dispose(System.Boolean)\n  - System.Windows.Forms.ButtonBase.FlatAppearance\n  - System.Windows.Forms.ButtonBase.FlatStyle\n  - System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)\n  - System.Windows.Forms.ButtonBase.Image\n  - System.Windows.Forms.ButtonBase.ImageAlign\n  - System.Windows.Forms.ButtonBase.ImageIndex\n  - System.Windows.Forms.ButtonBase.ImageKey\n  - System.Windows.Forms.ButtonBase.ImageList\n  - System.Windows.Forms.ButtonBase.ImeMode\n  - System.Windows.Forms.ButtonBase.ImeModeChanged\n  - System.Windows.Forms.ButtonBase.IsDefault\n  - System.Windows.Forms.ButtonBase.OnEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.ButtonBase.OnParentChanged(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnTextChanged(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.OnVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.ButtonBase.ResetFlagsandPaint\n  - System.Windows.Forms.ButtonBase.Text\n  - System.Windows.Forms.ButtonBase.TextAlign\n  - System.Windows.Forms.ButtonBase.TextImageRelation\n  - System.Windows.Forms.ButtonBase.UseCompatibleTextRendering\n  - System.Windows.Forms.ButtonBase.UseMnemonic\n  - System.Windows.Forms.ButtonBase.UseVisualStyleBackColor\n  - System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message@)\n  langs:\n  - csharp\n  name: ButtonBase\n  nameWithType: ButtonBase\n  fullName: System.Windows.Forms.ButtonBase\n  type: Class\n  summary: Implements the basic functionality common to button controls.\n  remarks: \"You do not typically inherit from ButtonBase. To create your own button class, inherit from the <xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, or <xref:System.Windows.Forms.RadioButton> class.  \\n  \\n To have the derived button control display an image, set the <xref:System.Windows.Forms.ButtonBase.Image%2A> property or the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties. The image can be aligned on the button control by setting the <xref:System.Windows.Forms.ButtonBase.ImageAlign%2A> property. Likewise, to align the <xref:System.Windows.Forms.Control.Text%2A> displayed on the button control, set the <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property.  \\n  \\n The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control. If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName>, the user's operating system determines the appearance of the control.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(\"System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class ButtonBase : System.Windows.Forms.Control\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Windows.Forms.Control\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityObject\n  - System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  - System.Windows.Forms.Control.AccessibleDescription\n  - System.Windows.Forms.Control.AccessibleName\n  - System.Windows.Forms.Control.AccessibleRole\n  - System.Windows.Forms.Control.AllowDrop\n  - System.Windows.Forms.Control.Anchor\n  - System.Windows.Forms.Control.AutoScrollOffset\n  - System.Windows.Forms.Control.BackColorChanged\n  - System.Windows.Forms.Control.BackgroundImage\n  - System.Windows.Forms.Control.BackgroundImageChanged\n  - System.Windows.Forms.Control.BackgroundImageLayout\n  - System.Windows.Forms.Control.BackgroundImageLayoutChanged\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.BindingContext\n  - System.Windows.Forms.Control.BindingContextChanged\n  - System.Windows.Forms.Control.Bottom\n  - System.Windows.Forms.Control.Bounds\n  - System.Windows.Forms.Control.BringToFront\n  - System.Windows.Forms.Control.CanEnableIme\n  - System.Windows.Forms.Control.CanFocus\n  - System.Windows.Forms.Control.CanRaiseEvents\n  - System.Windows.Forms.Control.CanSelect\n  - System.Windows.Forms.Control.Capture\n  - System.Windows.Forms.Control.CausesValidation\n  - System.Windows.Forms.Control.CausesValidationChanged\n  - System.Windows.Forms.Control.ChangeUICues\n  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  - System.Windows.Forms.Control.Click\n  - System.Windows.Forms.Control.ClientRectangle\n  - System.Windows.Forms.Control.ClientSize\n  - System.Windows.Forms.Control.ClientSizeChanged\n  - System.Windows.Forms.Control.CompanyName\n  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  - System.Windows.Forms.Control.ContainsFocus\n  - System.Windows.Forms.Control.ContextMenu\n  - System.Windows.Forms.Control.ContextMenuChanged\n  - System.Windows.Forms.Control.ContextMenuStrip\n  - System.Windows.Forms.Control.ContextMenuStripChanged\n  - System.Windows.Forms.Control.ControlAdded\n  - System.Windows.Forms.Control.ControlRemoved\n  - System.Windows.Forms.Control.Controls\n  - System.Windows.Forms.Control.CreateControl\n  - System.Windows.Forms.Control.CreateControlsInstance\n  - System.Windows.Forms.Control.Created\n  - System.Windows.Forms.Control.CreateGraphics\n  - System.Windows.Forms.Control.CreateHandle\n  - System.Windows.Forms.Control.Cursor\n  - System.Windows.Forms.Control.CursorChanged\n  - System.Windows.Forms.Control.DataBindings\n  - System.Windows.Forms.Control.DefaultBackColor\n  - System.Windows.Forms.Control.DefaultCursor\n  - System.Windows.Forms.Control.DefaultFont\n  - System.Windows.Forms.Control.DefaultForeColor\n  - System.Windows.Forms.Control.DefaultMargin\n  - System.Windows.Forms.Control.DefaultMaximumSize\n  - System.Windows.Forms.Control.DefaultMinimumSize\n  - System.Windows.Forms.Control.DefaultPadding\n  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.DestroyHandle\n  - System.Windows.Forms.Control.DisplayRectangle\n  - System.Windows.Forms.Control.Disposing\n  - System.Windows.Forms.Control.Dock\n  - System.Windows.Forms.Control.DockChanged\n  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  - System.Windows.Forms.Control.DoubleBuffered\n  - System.Windows.Forms.Control.DoubleClick\n  - System.Windows.Forms.Control.DragDrop\n  - System.Windows.Forms.Control.DragEnter\n  - System.Windows.Forms.Control.DragLeave\n  - System.Windows.Forms.Control.DragOver\n  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Enabled\n  - System.Windows.Forms.Control.EnabledChanged\n  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  - System.Windows.Forms.Control.Enter\n  - System.Windows.Forms.Control.FindForm\n  - System.Windows.Forms.Control.Focus\n  - System.Windows.Forms.Control.Focused\n  - System.Windows.Forms.Control.Font\n  - System.Windows.Forms.Control.FontChanged\n  - System.Windows.Forms.Control.FontHeight\n  - System.Windows.Forms.Control.ForeColor\n  - System.Windows.Forms.Control.ForeColorChanged\n  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  - System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  - System.Windows.Forms.Control.GetAutoSizeMode\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  - System.Windows.Forms.Control.GetContainerControl\n  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  - System.Windows.Forms.Control.GetTopLevel\n  - System.Windows.Forms.Control.GiveFeedback\n  - System.Windows.Forms.Control.GotFocus\n  - System.Windows.Forms.Control.Handle\n  - System.Windows.Forms.Control.HandleCreated\n  - System.Windows.Forms.Control.HandleDestroyed\n  - System.Windows.Forms.Control.HasChildren\n  - System.Windows.Forms.Control.Height\n  - System.Windows.Forms.Control.HelpRequested\n  - System.Windows.Forms.Control.Hide\n  - System.Windows.Forms.Control.ImeModeBase\n  - System.Windows.Forms.Control.InitLayout\n  - System.Windows.Forms.Control.Invalidate\n  - System.Windows.Forms.Control.Invalidate(System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  - System.Windows.Forms.Control.Invalidated\n  - System.Windows.Forms.Control.Invoke(System.Delegate)\n  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokeRequired\n  - System.Windows.Forms.Control.IsAccessible\n  - System.Windows.Forms.Control.IsDisposed\n  - System.Windows.Forms.Control.IsHandleCreated\n  - System.Windows.Forms.Control.IsInputChar(System.Char)\n  - System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsMirrored\n  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  - System.Windows.Forms.Control.KeyDown\n  - System.Windows.Forms.Control.KeyPress\n  - System.Windows.Forms.Control.KeyUp\n  - System.Windows.Forms.Control.Layout\n  - System.Windows.Forms.Control.LayoutEngine\n  - System.Windows.Forms.Control.Leave\n  - System.Windows.Forms.Control.Left\n  - System.Windows.Forms.Control.Location\n  - System.Windows.Forms.Control.LocationChanged\n  - System.Windows.Forms.Control.LostFocus\n  - System.Windows.Forms.Control.Margin\n  - System.Windows.Forms.Control.MarginChanged\n  - System.Windows.Forms.Control.MaximumSize\n  - System.Windows.Forms.Control.MinimumSize\n  - System.Windows.Forms.Control.ModifierKeys\n  - System.Windows.Forms.Control.MouseButtons\n  - System.Windows.Forms.Control.MouseCaptureChanged\n  - System.Windows.Forms.Control.MouseClick\n  - System.Windows.Forms.Control.MouseDoubleClick\n  - System.Windows.Forms.Control.MouseDown\n  - System.Windows.Forms.Control.MouseEnter\n  - System.Windows.Forms.Control.MouseHover\n  - System.Windows.Forms.Control.MouseLeave\n  - System.Windows.Forms.Control.MouseMove\n  - System.Windows.Forms.Control.MousePosition\n  - System.Windows.Forms.Control.MouseUp\n  - System.Windows.Forms.Control.MouseWheel\n  - System.Windows.Forms.Control.Move\n  - System.Windows.Forms.Control.Name\n  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  - System.Windows.Forms.Control.OnClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnCreateControl\n  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnFontChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  - System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)\n  - System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)\n  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  - System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMove(System.EventArgs)\n  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnResize(System.EventArgs)\n  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.Control.Padding\n  - System.Windows.Forms.Control.PaddingChanged\n  - System.Windows.Forms.Control.Paint\n  - System.Windows.Forms.Control.Parent\n  - System.Windows.Forms.Control.ParentChanged\n  - System.Windows.Forms.Control.PerformLayout\n  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  - System.Windows.Forms.Control.PreferredSize\n  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreviewKeyDown\n  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)\n  - System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)\n  - System.Windows.Forms.Control.ProductName\n  - System.Windows.Forms.Control.ProductVersion\n  - System.Windows.Forms.Control.PropagatingImeMode\n  - System.Windows.Forms.Control.QueryAccessibilityHelp\n  - System.Windows.Forms.Control.QueryContinueDrag\n  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.RecreateHandle\n  - System.Windows.Forms.Control.RecreatingHandle\n  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.Refresh\n  - System.Windows.Forms.Control.Region\n  - System.Windows.Forms.Control.RegionChanged\n  - System.Windows.Forms.Control.RenderRightToLeft\n  - System.Windows.Forms.Control.ResetBackColor\n  - System.Windows.Forms.Control.ResetBindings\n  - System.Windows.Forms.Control.ResetCursor\n  - System.Windows.Forms.Control.ResetFont\n  - System.Windows.Forms.Control.ResetForeColor\n  - System.Windows.Forms.Control.ResetImeMode\n  - System.Windows.Forms.Control.ResetMouseEventArgs\n  - System.Windows.Forms.Control.ResetRightToLeft\n  - System.Windows.Forms.Control.ResetText\n  - System.Windows.Forms.Control.Resize\n  - System.Windows.Forms.Control.ResizeRedraw\n  - System.Windows.Forms.Control.ResumeLayout\n  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  - System.Windows.Forms.Control.Right\n  - System.Windows.Forms.Control.RightToLeft\n  - System.Windows.Forms.Control.RightToLeftChanged\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  - System.Windows.Forms.Control.Scale(System.Single)\n  - System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  - System.Windows.Forms.Control.ScaleChildren\n  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)\n  - System.Windows.Forms.Control.Select\n  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SendToBack\n  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)\n  - System.Windows.Forms.Control.Show\n  - System.Windows.Forms.Control.ShowFocusCues\n  - System.Windows.Forms.Control.ShowKeyboardCues\n  - System.Windows.Forms.Control.Site\n  - System.Windows.Forms.Control.Size\n  - System.Windows.Forms.Control.SizeChanged\n  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.StyleChanged\n  - System.Windows.Forms.Control.SuspendLayout\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.SystemColorsChanged\n  - System.Windows.Forms.Control.TabIndex\n  - System.Windows.Forms.Control.TabIndexChanged\n  - System.Windows.Forms.Control.TabStop\n  - System.Windows.Forms.Control.TabStopChanged\n  - System.Windows.Forms.Control.Tag\n  - System.Windows.Forms.Control.TextChanged\n  - System.Windows.Forms.Control.Top\n  - System.Windows.Forms.Control.TopLevelControl\n  - System.Windows.Forms.Control.Update\n  - System.Windows.Forms.Control.UpdateBounds\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateStyles\n  - System.Windows.Forms.Control.UpdateZOrder\n  - System.Windows.Forms.Control.UseWaitCursor\n  - System.Windows.Forms.Control.Validated\n  - System.Windows.Forms.Control.Validating\n  - System.Windows.Forms.Control.Visible\n  - System.Windows.Forms.Control.VisibleChanged\n  - System.Windows.Forms.Control.Width\n  - System.Windows.Forms.Control.WindowTarget\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: ButtonBase()\n  nameWithType: ButtonBase.ButtonBase()\n  fullName: System.Windows.Forms.ButtonBase.ButtonBase()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.ButtonBase\"></xref> class.\n  syntax:\n    content: protected ButtonBase ();\n    parameters: []\n  overload: System.Windows.Forms.ButtonBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.AutoEllipsis\n  id: AutoEllipsis\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: AutoEllipsis\n  nameWithType: ButtonBase.AutoEllipsis\n  fullName: System.Windows.Forms.ButtonBase.AutoEllipsis\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge of the control, denoting that the control text extends beyond the specified length of the control.\n  remarks: Set AutoEllipsis to `true` to display text that extends beyond the width of the control when the user passes over the control with the mouse. You must set the control's `AutoSize` property to `false` if you want AutoEllipsis to be `true`. If `AutoSize` is `true`, the control will grow to fit the text and an ellipsis will not appear.\n  syntax:\n    content: public bool AutoEllipsis { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the additional label text is to be indicated by an ellipsis; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.AutoEllipsis*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.AutoSize\n  id: AutoSize\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: AutoSize\n  nameWithType: ButtonBase.AutoSize\n  fullName: System.Windows.Forms.ButtonBase.AutoSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that indicates whether the control resizes based on its contents.\n  syntax:\n    content: public override bool AutoSize { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control automatically resizes based on its contents; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.AutoSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.AutoSizeChanged\n  id: AutoSizeChanged\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: AutoSizeChanged\n  nameWithType: ButtonBase.AutoSizeChanged\n  fullName: System.Windows.Forms.ButtonBase.AutoSizeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref:System.Windows.Forms.ButtonBase.AutoSize*> property changes.\n  remarks: For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AutoSizeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ButtonBase>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.CheckBox>. Then name the instance `ButtonBase1` and ensure that the event handler is associated with the AutoSizeChanged event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#136](~/add/codesnippet/csharp/e-system.windows.forms.b_10_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#136](~/add/codesnippet/visualbasic/e-system.windows.forms.b_10_1.vb)]\"\n  syntax:\n    content: public event EventHandler AutoSizeChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.BackColor\n  id: BackColor\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: BackColor\n  nameWithType: ButtonBase.BackColor\n  fullName: System.Windows.Forms.ButtonBase.BackColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the background color of the control.\n  syntax:\n    content: public override System.Drawing.Color BackColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> value representing the background color.\n  overload: System.Windows.Forms.ButtonBase.BackColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.CreateAccessibilityInstance\n  id: CreateAccessibilityInstance\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: CreateAccessibilityInstance()\n  nameWithType: ButtonBase.CreateAccessibilityInstance()\n  fullName: System.Windows.Forms.ButtonBase.CreateAccessibilityInstance()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new accessibility object for the control.\n  syntax:\n    content: protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: A new <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> for the control.\n  overload: System.Windows.Forms.ButtonBase.CreateAccessibilityInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.CreateParams\n  id: CreateParams\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: CreateParams\n  nameWithType: ButtonBase.CreateParams\n  fullName: System.Windows.Forms.ButtonBase.CreateParams\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the required creation parameters when the control handle is created.\n  syntax:\n    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }\n    return:\n      type: System.Windows.Forms.CreateParams\n      description: A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created.\n  overload: System.Windows.Forms.ButtonBase.CreateParams*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.DefaultImeMode\n  id: DefaultImeMode\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: DefaultImeMode\n  nameWithType: ButtonBase.DefaultImeMode\n  fullName: System.Windows.Forms.ButtonBase.DefaultImeMode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default Input Method Editor (IME) mode supported by this control.\n  remarks: As implemented in the <xref:System.Windows.Forms.ButtonBase> class, this property always returns the `Disable` value of <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>.\n  syntax:\n    content: protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }\n    return:\n      type: System.Windows.Forms.ImeMode\n      description: One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values.\n  overload: System.Windows.Forms.ButtonBase.DefaultImeMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.DefaultSize\n  id: DefaultSize\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: DefaultSize\n  nameWithType: ButtonBase.DefaultSize\n  fullName: System.Windows.Forms.ButtonBase.DefaultSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default size of the control.\n  syntax:\n    content: protected override System.Drawing.Size DefaultSize { get; }\n    return:\n      type: System.Drawing.Size\n      description: The default <xref href=\"System.Drawing.Size\"></xref> of the control.\n  overload: System.Windows.Forms.ButtonBase.DefaultSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ButtonBase.Dispose(Boolean)\n  fullName: System.Windows.Forms.ButtonBase.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Windows.Forms.ButtonBase\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. `Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ButtonBase> references. This method invokes the `Dispose` method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.Windows.Forms.ButtonBase.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.FlatAppearance\n  id: FlatAppearance\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: FlatAppearance\n  nameWithType: ButtonBase.FlatAppearance\n  fullName: System.Windows.Forms.ButtonBase.FlatAppearance\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the appearance of the border and the colors used to indicate check state and mouse state.\n  remarks: Use the FlatAppearance property only with <xref:System.Windows.Forms.Button> controls whose <xref:System.Windows.Forms.FlatStyle> is <xref:System.Windows.Forms.FlatStyle>.\n  syntax:\n    content: public System.Windows.Forms.FlatButtonAppearance FlatAppearance { get; }\n    return:\n      type: System.Windows.Forms.FlatButtonAppearance\n      description: One of the <xref href=\"System.Windows.Forms.FlatButtonAppearance\"></xref> values.\n  overload: System.Windows.Forms.ButtonBase.FlatAppearance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.FlatStyle\n  id: FlatStyle\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: FlatStyle\n  nameWithType: ButtonBase.FlatStyle\n  fullName: System.Windows.Forms.ButtonBase.FlatStyle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the flat style appearance of the button control.\n  remarks: \"When the FlatStyle property of the <xref:System.Windows.Forms.RadioButton> and <xref:System.Windows.Forms.CheckBox> classes is set to `System`, the control is drawn by the user's operating system and the check alignment is based upon the `CheckAlign` and <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property values. The `CheckAlign` property value is not changed, but the appearance of the control can be affected. The check box is horizontally aligned with either the left or right edge of the control (a left or center alignment appears left aligned, right remains unchanged), and vertically aligned the same as the descriptive text. For example, if you have a <xref:System.Windows.Forms.CheckBox> control with a `CheckAlign` property value of `ContentAlignment`. `MiddleCenter`, a <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property value of `ContentAlignment.TopRight`, and the FlatStyle property value is set to `System`, the check box alignment will appear to be `ContentAlignment.TopLeft` while the text alignment remains unchanged.  \\n  \\n> [!NOTE]\\n>  If the FlatStyle property is set to `FlatStyle.System`, any images assigned to the <xref:System.Windows.Forms.ButtonBase.Image%2A> property are not displayed.\"\n  example:\n  - \"The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties. The result will be a flat button with text on the left and an image on the right. This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\\\\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=fullName> namespace is included.  \\n  \\n [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_32_1.cpp)]\\n [!code-cs[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_32_1.cs)]\\n [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_32_1.vb)]\"\n  syntax:\n    content: public System.Windows.Forms.FlatStyle FlatStyle { get; set; }\n    return:\n      type: System.Windows.Forms.FlatStyle\n      description: One of the <xref href=\"System.Windows.Forms.FlatStyle\"></xref> values. The default value is <xref uid=\"langword_csharp_Standard\" name=\"Standard\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.FlatStyle*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value assigned is not one of the <xref href=\"System.Windows.Forms.FlatStyle\"></xref> values.\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)\n  id: GetPreferredSize(System.Drawing.Size)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: GetPreferredSize(Size)\n  nameWithType: ButtonBase.GetPreferredSize(Size)\n  fullName: System.Windows.Forms.ButtonBase.GetPreferredSize(Size)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the size of a rectangular area into which a control can be fitted.\n  remarks: The behavior of GetPreferredSize differs by control. The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control. You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases. For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`. The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.\n  syntax:\n    content: public override System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);\n    parameters:\n    - id: proposedSize\n      type: System.Drawing.Size\n      description: The custom-sized area for a control.\n    return:\n      type: System.Drawing.Size\n      description: An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle.\n  overload: System.Windows.Forms.ButtonBase.GetPreferredSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.Image\n  id: Image\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: Image\n  nameWithType: ButtonBase.Image\n  fullName: System.Windows.Forms.ButtonBase.Image\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the image that is displayed on a button control.\n  remarks: \"When the Image property is set, the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property will be set to `null`, and the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property will be set to its default, -1.  \\n  \\n> [!NOTE]\\n>  If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to `FlatStyle.System`, any images assigned to the Image property are not displayed.\"\n  example:\n  - \"The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties. The result will be a flat button with text on the left and an image on the right. This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\\\\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=fullName> namespace is included.  \\n  \\n [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_11_1.cpp)]\\n [!code-cs[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_11_1.cs)]\\n [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_11_1.vb)]\"\n  syntax:\n    content: public System.Drawing.Image Image { get; set; }\n    return:\n      type: System.Drawing.Image\n      description: The <xref href=\"System.Drawing.Image\"></xref> displayed on the button control. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.Image*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.ImageAlign\n  id: ImageAlign\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: ImageAlign\n  nameWithType: ButtonBase.ImageAlign\n  fullName: System.Windows.Forms.ButtonBase.ImageAlign\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the alignment of the image on the button control.\n  remarks: ''\n  example:\n  - \"The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties. The result will be a flat button with text on the left and an image on the right. This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\\\\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=fullName> namespace is included.  \\n  \\n [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_4_1.cpp)]\\n [!code-cs[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_4_1.cs)]\\n [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_4_1.vb)]\"\n  syntax:\n    content: public System.Drawing.ContentAlignment ImageAlign { get; set; }\n    return:\n      type: System.Drawing.ContentAlignment\n      description: One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values. The default value is <xref uid=\"langword_csharp_MiddleCenter\" name=\"MiddleCenter\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.ImageAlign*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value assigned is not one of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values.\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.ImageIndex\n  id: ImageIndex\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: ImageIndex\n  nameWithType: ButtonBase.ImageIndex\n  fullName: System.Windows.Forms.ButtonBase.ImageIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the image list index value of the image displayed on the button control.\n  remarks: \"When the ImageIndex or <xref:System.Windows.Forms.ButtonBase.ImageList%2A> properties are set, the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set to its default value, `null`.  \\n  \\n> [!NOTE]\\n>  If the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property value is changed to `null`, the ImageIndex property returns its default value, -1. However, the assigned ImageIndex value is retained internally and used when another <xref:System.Windows.Forms.ImageList> object is assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property. If the new <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property has an <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=fullName> property value that is less than or equal to the value assigned to the ImageIndex property minus one (to account for the collection being a zero-based index), the ImageIndex property value is adjusted to one less than the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> property value. For example, consider a button control whose <xref:System.Windows.Forms.ImageList> has three images and whose ImageIndex property is set to 2. If a new <xref:System.Windows.Forms.ImageList> that has only two images is assigned to the button, the ImageIndex value changes to 1.\"\n  example:\n  - \"The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and ImageIndex properties. This code requires that an <xref:System.Windows.Forms.ImageList> has been created and a minimum of one <xref:System.Drawing.Image> has been assigned to it. This code also requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\\\\Graphics` directory.  \\n  \\n [!code-cs[Classic ButtonBase.ImageIndex Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_31_1.cs)]\\n [!code-cpp[Classic ButtonBase.ImageIndex Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_31_1.cpp)]\\n [!code-vb[Classic ButtonBase.ImageIndex Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_31_1.vb)]\"\n  syntax:\n    content: public int ImageIndex { get; set; }\n    return:\n      type: System.Int32\n      description: A zero-based index, which represents the image position in an <xref href=\"System.Windows.Forms.ImageList\"></xref>. The default is -1.\n  overload: System.Windows.Forms.ButtonBase.ImageIndex*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The assigned value is less than the lower bounds of the ImageIndex.\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.ImageKey\n  id: ImageKey\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: ImageKey\n  nameWithType: ButtonBase.ImageKey\n  fullName: System.Windows.Forms.ButtonBase.ImageKey\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the key accessor for the image in the <xref:System.Windows.Forms.ButtonBase.ImageList*>.\n  remarks: The ImageKey property specifies the image from the image list to display on the control.\n  syntax:\n    content: public string ImageKey { get; set; }\n    return:\n      type: System.String\n      description: A string representing the key of the image.\n  overload: System.Windows.Forms.ButtonBase.ImageKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.ImageList\n  id: ImageList\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: ImageList\n  nameWithType: ButtonBase.ImageList\n  fullName: System.Windows.Forms.ButtonBase.ImageList\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the <xref href=\"System.Windows.Forms.ImageList\"></xref> that contains the <xref href=\"System.Drawing.Image\"></xref> displayed on a button control.\n  remarks: \"When the ImageList or <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set, the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set `null`, which is its default value.  \\n  \\n> [!NOTE]\\n>  If the ImageList property value is changed to `null`, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property returns its default value, -1. However, the assigned <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value is retained internally and used when another <xref:System.Windows.Forms.ImageList> is assigned to the ImageList property. If the new <xref:System.Windows.Forms.ImageList> assigned to the ImageList property has an <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=fullName> property value that is less than or equal to the value assigned to the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property minus one (because the collection is a zero-based index), the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property value is adjusted to one less than the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> property value. For example, consider a button control whose <xref:System.Windows.Forms.ImageList> has three images and whose <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set to 2. If a new <xref:System.Windows.Forms.ImageList> that has only two images is assigned to the button, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value changes to 1.\"\n  example:\n  - \"The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets the ImageList and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties. This code requires that an <xref:System.Windows.Forms.ImageList> has been created and a minimum of one <xref:System.Drawing.Image> has been assigned to it. This code also requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\\\\Graphics` directory.  \\n  \\n [!code-cs[Classic ButtonBase.ImageIndex Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_2_1.cs)]\\n [!code-cpp[Classic ButtonBase.ImageIndex Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_2_1.cpp)]\\n [!code-vb[Classic ButtonBase.ImageIndex Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_2_1.vb)]\"\n  syntax:\n    content: public System.Windows.Forms.ImageList ImageList { get; set; }\n    return:\n      type: System.Windows.Forms.ImageList\n      description: An <xref href=\"System.Windows.Forms.ImageList\"></xref>. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.ImageList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.ImeMode\n  id: ImeMode\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: ImeMode\n  nameWithType: ButtonBase.ImeMode\n  fullName: System.Windows.Forms.ButtonBase.ImeMode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the Input Method Editor (IME) mode supported by this control. This property is not relevant for this class.\n  remarks: This property is not relevant for this class.\n  syntax:\n    content: public System.Windows.Forms.ImeMode ImeMode { get; set; }\n    return:\n      type: System.Windows.Forms.ImeMode\n      description: One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values.\n  overload: System.Windows.Forms.ButtonBase.ImeMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.ImeModeChanged\n  id: ImeModeChanged\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: ImeModeChanged\n  nameWithType: ButtonBase.ImeModeChanged\n  fullName: System.Windows.Forms.ButtonBase.ImeModeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref:System.Windows.Forms.ButtonBase.ImeMode*> property is changed. This event is not relevant for this class.\n  remarks: This event is not relevant for this class.\n  syntax:\n    content: public event EventHandler ImeModeChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.IsDefault\n  id: IsDefault\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: IsDefault\n  nameWithType: ButtonBase.IsDefault\n  fullName: System.Windows.Forms.ButtonBase.IsDefault\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the button control is the default button.\n  remarks: \"When the IsDefault property is set to `true`, the button is the default button for the <xref:System.Windows.Forms.Form>. This means that the button is clicked when the ENTER key is pressed if no other button or any other control that captures the ENTER key has focus.  \\n  \\n To specify the default button of a form, set the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of the form to the desired button.\"\n  syntax:\n    content: protected bool IsDefault { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the button control is the default button; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.IsDefault*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnEnabledChanged(System.EventArgs)\n  id: OnEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnEnabledChanged(EventArgs)\n  nameWithType: ButtonBase.OnEnabledChanged(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnEnabledChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event.\n  syntax:\n    content: protected override void OnEnabledChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnEnabledChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)\n  id: OnGotFocus(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnGotFocus(EventArgs)\n  nameWithType: ButtonBase.OnGotFocus(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnGotFocus(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.GotFocus\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnGotFocus method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnGotFocus (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnGotFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  id: OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: ButtonBase.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnKeyDown(KeyEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref:System.Windows.Forms.ButtonBase.OnKeyUp*> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnKeyDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \\n  \\n> [!NOTE]\\n>  Do not call OnKeyDown if the button is disabled (this includes calls to the base class's OnKeyDown method when you override OnKeyDown in a derived class). When disabling the button in an override of OnKeyDown, call the base class's OnKeyDown method before disabling the button, or do not call it at all.\"\n  syntax:\n    content: protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs kevent);\n    parameters:\n    - id: kevent\n      type: System.Windows.Forms.KeyEventArgs\n      description: A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnKeyDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  id: OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: ButtonBase.OnKeyUp(KeyEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnKeyUp(KeyEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the OnKeyUp event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnKeyUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs kevent);\n    parameters:\n    - id: kevent\n      type: System.Windows.Forms.KeyEventArgs\n      description: A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnKeyUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)\n  id: OnLostFocus(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnLostFocus(EventArgs)\n  nameWithType: ButtonBase.OnLostFocus(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnLostFocus(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the OnLostFocus event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnLostFocus method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnLostFocus (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnLostFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnMouseDown(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseDown(MouseEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnMouseDown(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref:System.Windows.Forms.Control.OnMouseDown*> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnMouseDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \\n  \\n> [!NOTE]\\n>  Do not call OnMouseDown if the button is disabled (this includes calls to the base class's OnMouseDown method when you override OnMouseDown in a derived class). When disabling the button in an override of OnMouseDown, call the base class's OnMouseDown method before disabling the button, or do not call it at all.\"\n  syntax:\n    content: protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs mevent);\n    parameters:\n    - id: mevent\n      type: System.Windows.Forms.MouseEventArgs\n      description: A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnMouseDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)\n  id: OnMouseEnter(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnMouseEnter(EventArgs)\n  nameWithType: ButtonBase.OnMouseEnter(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnMouseEnter(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref:System.Windows.Forms.Control.OnMouseEnter*> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnMouseEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \\n  \\n> [!NOTE]\\n>  Do not call OnMouseEnter if the button is disabled (this includes call to the base class's OnMouseEnter method when you override OnMouseEnter in a derived class). When disabling the button in an override of OnMouseEnter, call the base class's OnMouseEnter method before disabling the button, or do not call it at all.\"\n  syntax:\n    content: protected override void OnMouseEnter (EventArgs eventargs);\n    parameters:\n    - id: eventargs\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnMouseEnter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)\n  id: OnMouseLeave(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnMouseLeave(EventArgs)\n  nameWithType: ButtonBase.OnMouseLeave(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnMouseLeave(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref:System.Windows.Forms.Control.OnMouseLeave*> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnMouseLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnMouseLeave (EventArgs eventargs);\n    parameters:\n    - id: eventargs\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnMouseLeave*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseMove(MouseEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnMouseMove(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref:System.Windows.Forms.Control.OnMouseMove*> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnMouseMove method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \\n  \\n> [!NOTE]\\n>  Do not call OnMouseMove if the button is disabled (this includes calls to the base class's OnMouseMove method when you override OnMouseMove in a derived class). When disabling the button in an override of OnMouseMove, call the base class's OnMouseMove method before disabling the button, or do not call it at all.\"\n  syntax:\n    content: protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs mevent);\n    parameters:\n    - id: mevent\n      type: System.Windows.Forms.MouseEventArgs\n      description: A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnMouseMove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnMouseUp(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseUp(MouseEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnMouseUp(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the OnMouseUp event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnMouseUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);\n    parameters:\n    - id: mevent\n      type: System.Windows.Forms.MouseEventArgs\n      description: A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnMouseUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)\n  id: OnPaint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnPaint(PaintEventArgs)\n  nameWithType: ButtonBase.OnPaint(PaintEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnPaint(PaintEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the OnPaint event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnPaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnPaint (System.Windows.Forms.PaintEventArgs pevent);\n    parameters:\n    - id: pevent\n      type: System.Windows.Forms.PaintEventArgs\n      description: A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnPaint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnParentChanged(System.EventArgs)\n  id: OnParentChanged(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnParentChanged(EventArgs)\n  nameWithType: ButtonBase.OnParentChanged(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnParentChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ParentChanged\"></xref> event.\n  syntax:\n    content: protected override void OnParentChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnParentChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnTextChanged(System.EventArgs)\n  id: OnTextChanged(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnTextChanged(EventArgs)\n  nameWithType: ButtonBase.OnTextChanged(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnTextChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event.\n  syntax:\n    content: protected override void OnTextChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnTextChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.OnVisibleChanged(System.EventArgs)\n  id: OnVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: OnVisibleChanged(EventArgs)\n  nameWithType: ButtonBase.OnVisibleChanged(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnVisibleChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event.\n  syntax:\n    content: protected override void OnVisibleChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> object that contains the event data.\n  overload: System.Windows.Forms.ButtonBase.OnVisibleChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.ResetFlagsandPaint\n  id: ResetFlagsandPaint\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: ResetFlagsandPaint()\n  nameWithType: ButtonBase.ResetFlagsandPaint()\n  fullName: System.Windows.Forms.ButtonBase.ResetFlagsandPaint()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets the <xref href=\"System.Windows.Forms.Button\"></xref> control to the state before it is pressed and redraws it.\n  syntax:\n    content: protected void ResetFlagsandPaint ();\n    parameters: []\n  overload: System.Windows.Forms.ButtonBase.ResetFlagsandPaint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.Text\n  id: Text\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: Text\n  nameWithType: ButtonBase.Text\n  fullName: System.Windows.Forms.ButtonBase.Text\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the text associated with this control.\n  syntax:\n    content: public override string Text { get; set; }\n    return:\n      type: System.String\n      description: The text associated with this control.\n  overload: System.Windows.Forms.ButtonBase.Text*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.TextAlign\n  id: TextAlign\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: TextAlign\n  nameWithType: ButtonBase.TextAlign\n  fullName: System.Windows.Forms.ButtonBase.TextAlign\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the alignment of the text on the button control.\n  remarks: ''\n  example:\n  - \"The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties. The result will be a flat button with text on the left and an image on the right. This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\\\\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=fullName> namespace is included.  \\n  \\n [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_25_1.cpp)]\\n [!code-cs[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_25_1.cs)]\\n [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_25_1.vb)]\"\n  syntax:\n    content: public virtual System.Drawing.ContentAlignment TextAlign { get; set; }\n    return:\n      type: System.Drawing.ContentAlignment\n      description: One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values. The default is <xref uid=\"langword_csharp_MiddleCenter\" name=\"MiddleCenter\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.TextAlign*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value assigned is not one of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values.\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.TextImageRelation\n  id: TextImageRelation\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: TextImageRelation\n  nameWithType: ButtonBase.TextImageRelation\n  fullName: System.Windows.Forms.ButtonBase.TextImageRelation\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the position of text and image relative to each other.\n  syntax:\n    content: public System.Windows.Forms.TextImageRelation TextImageRelation { get; set; }\n    return:\n      type: System.Windows.Forms.TextImageRelation\n      description: One of the values of <xref href=\"System.Windows.Forms.TextImageRelation\"></xref>. The default is <xref href=\"System.Windows.Forms.TextImageRelation\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.TextImageRelation*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value is not one of the <xref href=\"System.Windows.Forms.TextImageRelation\"></xref> values.\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.UseCompatibleTextRendering\n  id: UseCompatibleTextRendering\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: UseCompatibleTextRendering\n  nameWithType: ButtonBase.UseCompatibleTextRendering\n  fullName: System.Windows.Forms.ButtonBase.UseCompatibleTextRendering\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that determines whether to use the <xref href=\"System.Drawing.Graphics\"></xref> class ([!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]) or the <xref href=\"System.Windows.Forms.TextRenderer\"></xref> class ([!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]) to render text.\n  remarks: \"The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/add/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/add/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class. In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/add/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/add/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`.  \\n  \\n The [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts. In earlier versions of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering. [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]. In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application. To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true` for a specific control. To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=fullName> method with a parameter of `true`.\"\n  syntax:\n    content: public bool UseCompatibleTextRendering { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Drawing.Graphics\"></xref> class should be used to perform text rendering for compatibility with versions 1.0 and 1.1. of the .NET Framework; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.UseCompatibleTextRendering*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.UseMnemonic\n  id: UseMnemonic\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: UseMnemonic\n  nameWithType: ButtonBase.UseMnemonic\n  fullName: System.Windows.Forms.ButtonBase.UseMnemonic\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control.\n  syntax:\n    content: public bool UseMnemonic { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.UseMnemonic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.UseVisualStyleBackColor\n  id: UseVisualStyleBackColor\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: UseVisualStyleBackColor\n  nameWithType: ButtonBase.UseVisualStyleBackColor\n  fullName: System.Windows.Forms.ButtonBase.UseVisualStyleBackColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that determines if the background is drawn using visual styles, if supported.\n  remarks: Visual styles are specifications for the appearance of controls. For example, visual styles can define the color, size, and font of controls, and they enable you to configure the visual interface to coordinate with your application interface. Additionally, they provide a mechanism for all Windows-based applications to have visual styles applied.\n  syntax:\n    content: public bool UseVisualStyleBackColor { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the background is drawn using visual styles; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.ButtonBase.UseVisualStyleBackColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message@)\n  id: WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.ButtonBase\n  langs:\n  - csharp\n  name: WndProc(Message)\n  nameWithType: ButtonBase.WndProc(Message)\n  fullName: System.Windows.Forms.ButtonBase.WndProc(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes Windows messages.\n  syntax:\n    content: protected override void WndProc (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.\n  overload: System.Windows.Forms.ButtonBase.WndProc*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Forms.Control\n  isExternal: false\n  name: System.Windows.Forms.Control\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Windows.Forms.ButtonBase.#ctor\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ButtonBase()\n  nameWithType: ButtonBase.ButtonBase()\n  fullName: System.Windows.Forms.ButtonBase.ButtonBase()\n- uid: System.Windows.Forms.ButtonBase.AutoEllipsis\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: AutoEllipsis\n  nameWithType: ButtonBase.AutoEllipsis\n  fullName: System.Windows.Forms.ButtonBase.AutoEllipsis\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.ButtonBase.AutoSize\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: AutoSize\n  nameWithType: ButtonBase.AutoSize\n  fullName: System.Windows.Forms.ButtonBase.AutoSize\n- uid: System.Windows.Forms.ButtonBase.AutoSizeChanged\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: AutoSizeChanged\n  nameWithType: ButtonBase.AutoSizeChanged\n  fullName: System.Windows.Forms.ButtonBase.AutoSizeChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.ButtonBase.BackColor\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: BackColor\n  nameWithType: ButtonBase.BackColor\n  fullName: System.Windows.Forms.ButtonBase.BackColor\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Windows.Forms.ButtonBase.CreateAccessibilityInstance\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: CreateAccessibilityInstance()\n  nameWithType: ButtonBase.CreateAccessibilityInstance()\n  fullName: System.Windows.Forms.ButtonBase.CreateAccessibilityInstance()\n- uid: System.Windows.Forms.AccessibleObject\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AccessibleObject\n  nameWithType: AccessibleObject\n  fullName: System.Windows.Forms.AccessibleObject\n- uid: System.Windows.Forms.ButtonBase.CreateParams\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: CreateParams\n  nameWithType: ButtonBase.CreateParams\n  fullName: System.Windows.Forms.ButtonBase.CreateParams\n- uid: System.Windows.Forms.CreateParams\n  parent: System.Windows.Forms\n  isExternal: false\n  name: CreateParams\n  nameWithType: CreateParams\n  fullName: System.Windows.Forms.CreateParams\n- uid: System.Windows.Forms.ButtonBase.DefaultImeMode\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: DefaultImeMode\n  nameWithType: ButtonBase.DefaultImeMode\n  fullName: System.Windows.Forms.ButtonBase.DefaultImeMode\n- uid: System.Windows.Forms.ImeMode\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ImeMode\n  nameWithType: ImeMode\n  fullName: System.Windows.Forms.ImeMode\n- uid: System.Windows.Forms.ButtonBase.DefaultSize\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: DefaultSize\n  nameWithType: ButtonBase.DefaultSize\n  fullName: System.Windows.Forms.ButtonBase.DefaultSize\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Windows.Forms.ButtonBase.Dispose(System.Boolean)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ButtonBase.Dispose(Boolean)\n  fullName: System.Windows.Forms.ButtonBase.Dispose(Boolean)\n- uid: System.Windows.Forms.ButtonBase.FlatAppearance\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: FlatAppearance\n  nameWithType: ButtonBase.FlatAppearance\n  fullName: System.Windows.Forms.ButtonBase.FlatAppearance\n- uid: System.Windows.Forms.FlatButtonAppearance\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FlatButtonAppearance\n  nameWithType: FlatButtonAppearance\n  fullName: System.Windows.Forms.FlatButtonAppearance\n- uid: System.Windows.Forms.ButtonBase.FlatStyle\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: FlatStyle\n  nameWithType: ButtonBase.FlatStyle\n  fullName: System.Windows.Forms.ButtonBase.FlatStyle\n- uid: System.Windows.Forms.FlatStyle\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FlatStyle\n  nameWithType: FlatStyle\n  fullName: System.Windows.Forms.FlatStyle\n- uid: System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: GetPreferredSize(Size)\n  nameWithType: ButtonBase.GetPreferredSize(Size)\n  fullName: System.Windows.Forms.ButtonBase.GetPreferredSize(Size)\n- uid: System.Windows.Forms.ButtonBase.Image\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: Image\n  nameWithType: ButtonBase.Image\n  fullName: System.Windows.Forms.ButtonBase.Image\n- uid: System.Drawing.Image\n  parent: System.Drawing\n  isExternal: false\n  name: Image\n  nameWithType: Image\n  fullName: System.Drawing.Image\n- uid: System.Windows.Forms.ButtonBase.ImageAlign\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImageAlign\n  nameWithType: ButtonBase.ImageAlign\n  fullName: System.Windows.Forms.ButtonBase.ImageAlign\n- uid: System.Drawing.ContentAlignment\n  parent: System.Drawing\n  isExternal: false\n  name: ContentAlignment\n  nameWithType: ContentAlignment\n  fullName: System.Drawing.ContentAlignment\n- uid: System.Windows.Forms.ButtonBase.ImageIndex\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImageIndex\n  nameWithType: ButtonBase.ImageIndex\n  fullName: System.Windows.Forms.ButtonBase.ImageIndex\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.ButtonBase.ImageKey\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImageKey\n  nameWithType: ButtonBase.ImageKey\n  fullName: System.Windows.Forms.ButtonBase.ImageKey\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.ButtonBase.ImageList\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImageList\n  nameWithType: ButtonBase.ImageList\n  fullName: System.Windows.Forms.ButtonBase.ImageList\n- uid: System.Windows.Forms.ImageList\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ImageList\n  nameWithType: ImageList\n  fullName: System.Windows.Forms.ImageList\n- uid: System.Windows.Forms.ButtonBase.ImeMode\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImeMode\n  nameWithType: ButtonBase.ImeMode\n  fullName: System.Windows.Forms.ButtonBase.ImeMode\n- uid: System.Windows.Forms.ButtonBase.ImeModeChanged\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImeModeChanged\n  nameWithType: ButtonBase.ImeModeChanged\n  fullName: System.Windows.Forms.ButtonBase.ImeModeChanged\n- uid: System.Windows.Forms.ButtonBase.IsDefault\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: IsDefault\n  nameWithType: ButtonBase.IsDefault\n  fullName: System.Windows.Forms.ButtonBase.IsDefault\n- uid: System.Windows.Forms.ButtonBase.OnEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnEnabledChanged(EventArgs)\n  nameWithType: ButtonBase.OnEnabledChanged(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnEnabledChanged(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnGotFocus(EventArgs)\n  nameWithType: ButtonBase.OnGotFocus(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnGotFocus(EventArgs)\n- uid: System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: ButtonBase.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnKeyDown(KeyEventArgs)\n- uid: System.Windows.Forms.KeyEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: KeyEventArgs\n  nameWithType: KeyEventArgs\n  fullName: System.Windows.Forms.KeyEventArgs\n- uid: System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: ButtonBase.OnKeyUp(KeyEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnKeyUp(KeyEventArgs)\n- uid: System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnLostFocus(EventArgs)\n  nameWithType: ButtonBase.OnLostFocus(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnLostFocus(EventArgs)\n- uid: System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnMouseDown(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseDown(MouseEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnMouseDown(MouseEventArgs)\n- uid: System.Windows.Forms.MouseEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MouseEventArgs\n  nameWithType: MouseEventArgs\n  fullName: System.Windows.Forms.MouseEventArgs\n- uid: System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnMouseEnter(EventArgs)\n  nameWithType: ButtonBase.OnMouseEnter(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnMouseEnter(EventArgs)\n- uid: System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnMouseLeave(EventArgs)\n  nameWithType: ButtonBase.OnMouseLeave(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnMouseLeave(EventArgs)\n- uid: System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseMove(MouseEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnMouseMove(MouseEventArgs)\n- uid: System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnMouseUp(MouseEventArgs)\n  nameWithType: ButtonBase.OnMouseUp(MouseEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnMouseUp(MouseEventArgs)\n- uid: System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnPaint(PaintEventArgs)\n  nameWithType: ButtonBase.OnPaint(PaintEventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnPaint(PaintEventArgs)\n- uid: System.Windows.Forms.PaintEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: PaintEventArgs\n  nameWithType: PaintEventArgs\n  fullName: System.Windows.Forms.PaintEventArgs\n- uid: System.Windows.Forms.ButtonBase.OnParentChanged(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnParentChanged(EventArgs)\n  nameWithType: ButtonBase.OnParentChanged(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnParentChanged(EventArgs)\n- uid: System.Windows.Forms.ButtonBase.OnTextChanged(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnTextChanged(EventArgs)\n  nameWithType: ButtonBase.OnTextChanged(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnTextChanged(EventArgs)\n- uid: System.Windows.Forms.ButtonBase.OnVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnVisibleChanged(EventArgs)\n  nameWithType: ButtonBase.OnVisibleChanged(EventArgs)\n  fullName: System.Windows.Forms.ButtonBase.OnVisibleChanged(EventArgs)\n- uid: System.Windows.Forms.ButtonBase.ResetFlagsandPaint\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ResetFlagsandPaint()\n  nameWithType: ButtonBase.ResetFlagsandPaint()\n  fullName: System.Windows.Forms.ButtonBase.ResetFlagsandPaint()\n- uid: System.Windows.Forms.ButtonBase.Text\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: Text\n  nameWithType: ButtonBase.Text\n  fullName: System.Windows.Forms.ButtonBase.Text\n- uid: System.Windows.Forms.ButtonBase.TextAlign\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: TextAlign\n  nameWithType: ButtonBase.TextAlign\n  fullName: System.Windows.Forms.ButtonBase.TextAlign\n- uid: System.Windows.Forms.ButtonBase.TextImageRelation\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: TextImageRelation\n  nameWithType: ButtonBase.TextImageRelation\n  fullName: System.Windows.Forms.ButtonBase.TextImageRelation\n- uid: System.Windows.Forms.TextImageRelation\n  parent: System.Windows.Forms\n  isExternal: false\n  name: TextImageRelation\n  nameWithType: TextImageRelation\n  fullName: System.Windows.Forms.TextImageRelation\n- uid: System.Windows.Forms.ButtonBase.UseCompatibleTextRendering\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: UseCompatibleTextRendering\n  nameWithType: ButtonBase.UseCompatibleTextRendering\n  fullName: System.Windows.Forms.ButtonBase.UseCompatibleTextRendering\n- uid: System.Windows.Forms.ButtonBase.UseMnemonic\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: UseMnemonic\n  nameWithType: ButtonBase.UseMnemonic\n  fullName: System.Windows.Forms.ButtonBase.UseMnemonic\n- uid: System.Windows.Forms.ButtonBase.UseVisualStyleBackColor\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: UseVisualStyleBackColor\n  nameWithType: ButtonBase.UseVisualStyleBackColor\n  fullName: System.Windows.Forms.ButtonBase.UseVisualStyleBackColor\n- uid: System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: WndProc(Message)\n  nameWithType: ButtonBase.WndProc(Message)\n  fullName: System.Windows.Forms.ButtonBase.WndProc(Message)\n- uid: System.Windows.Forms.Message\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Windows.Forms.Message\n- uid: System.Windows.Forms.ButtonBase.#ctor*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ButtonBase\n  nameWithType: ButtonBase.ButtonBase\n- uid: System.Windows.Forms.ButtonBase.AutoEllipsis*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: AutoEllipsis\n  nameWithType: ButtonBase.AutoEllipsis\n- uid: System.Windows.Forms.ButtonBase.AutoSize*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: AutoSize\n  nameWithType: ButtonBase.AutoSize\n- uid: System.Windows.Forms.ButtonBase.BackColor*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: BackColor\n  nameWithType: ButtonBase.BackColor\n- uid: System.Windows.Forms.ButtonBase.CreateAccessibilityInstance*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: CreateAccessibilityInstance\n  nameWithType: ButtonBase.CreateAccessibilityInstance\n- uid: System.Windows.Forms.ButtonBase.CreateParams*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: CreateParams\n  nameWithType: ButtonBase.CreateParams\n- uid: System.Windows.Forms.ButtonBase.DefaultImeMode*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: DefaultImeMode\n  nameWithType: ButtonBase.DefaultImeMode\n- uid: System.Windows.Forms.ButtonBase.DefaultSize*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: DefaultSize\n  nameWithType: ButtonBase.DefaultSize\n- uid: System.Windows.Forms.ButtonBase.Dispose*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: Dispose\n  nameWithType: ButtonBase.Dispose\n- uid: System.Windows.Forms.ButtonBase.FlatAppearance*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: FlatAppearance\n  nameWithType: ButtonBase.FlatAppearance\n- uid: System.Windows.Forms.ButtonBase.FlatStyle*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: FlatStyle\n  nameWithType: ButtonBase.FlatStyle\n- uid: System.Windows.Forms.ButtonBase.GetPreferredSize*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: GetPreferredSize\n  nameWithType: ButtonBase.GetPreferredSize\n- uid: System.Windows.Forms.ButtonBase.Image*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: Image\n  nameWithType: ButtonBase.Image\n- uid: System.Windows.Forms.ButtonBase.ImageAlign*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImageAlign\n  nameWithType: ButtonBase.ImageAlign\n- uid: System.Windows.Forms.ButtonBase.ImageIndex*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImageIndex\n  nameWithType: ButtonBase.ImageIndex\n- uid: System.Windows.Forms.ButtonBase.ImageKey*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImageKey\n  nameWithType: ButtonBase.ImageKey\n- uid: System.Windows.Forms.ButtonBase.ImageList*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImageList\n  nameWithType: ButtonBase.ImageList\n- uid: System.Windows.Forms.ButtonBase.ImeMode*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ImeMode\n  nameWithType: ButtonBase.ImeMode\n- uid: System.Windows.Forms.ButtonBase.IsDefault*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: IsDefault\n  nameWithType: ButtonBase.IsDefault\n- uid: System.Windows.Forms.ButtonBase.OnEnabledChanged*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnEnabledChanged\n  nameWithType: ButtonBase.OnEnabledChanged\n- uid: System.Windows.Forms.ButtonBase.OnGotFocus*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnGotFocus\n  nameWithType: ButtonBase.OnGotFocus\n- uid: System.Windows.Forms.ButtonBase.OnKeyDown*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnKeyDown\n  nameWithType: ButtonBase.OnKeyDown\n- uid: System.Windows.Forms.ButtonBase.OnKeyUp*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnKeyUp\n  nameWithType: ButtonBase.OnKeyUp\n- uid: System.Windows.Forms.ButtonBase.OnLostFocus*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnLostFocus\n  nameWithType: ButtonBase.OnLostFocus\n- uid: System.Windows.Forms.ButtonBase.OnMouseDown*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnMouseDown\n  nameWithType: ButtonBase.OnMouseDown\n- uid: System.Windows.Forms.ButtonBase.OnMouseEnter*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnMouseEnter\n  nameWithType: ButtonBase.OnMouseEnter\n- uid: System.Windows.Forms.ButtonBase.OnMouseLeave*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnMouseLeave\n  nameWithType: ButtonBase.OnMouseLeave\n- uid: System.Windows.Forms.ButtonBase.OnMouseMove*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnMouseMove\n  nameWithType: ButtonBase.OnMouseMove\n- uid: System.Windows.Forms.ButtonBase.OnMouseUp*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnMouseUp\n  nameWithType: ButtonBase.OnMouseUp\n- uid: System.Windows.Forms.ButtonBase.OnPaint*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnPaint\n  nameWithType: ButtonBase.OnPaint\n- uid: System.Windows.Forms.ButtonBase.OnParentChanged*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnParentChanged\n  nameWithType: ButtonBase.OnParentChanged\n- uid: System.Windows.Forms.ButtonBase.OnTextChanged*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnTextChanged\n  nameWithType: ButtonBase.OnTextChanged\n- uid: System.Windows.Forms.ButtonBase.OnVisibleChanged*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: OnVisibleChanged\n  nameWithType: ButtonBase.OnVisibleChanged\n- uid: System.Windows.Forms.ButtonBase.ResetFlagsandPaint*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: ResetFlagsandPaint\n  nameWithType: ButtonBase.ResetFlagsandPaint\n- uid: System.Windows.Forms.ButtonBase.Text*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: Text\n  nameWithType: ButtonBase.Text\n- uid: System.Windows.Forms.ButtonBase.TextAlign*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: TextAlign\n  nameWithType: ButtonBase.TextAlign\n- uid: System.Windows.Forms.ButtonBase.TextImageRelation*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: TextImageRelation\n  nameWithType: ButtonBase.TextImageRelation\n- uid: System.Windows.Forms.ButtonBase.UseCompatibleTextRendering*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: UseCompatibleTextRendering\n  nameWithType: ButtonBase.UseCompatibleTextRendering\n- uid: System.Windows.Forms.ButtonBase.UseMnemonic*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: UseMnemonic\n  nameWithType: ButtonBase.UseMnemonic\n- uid: System.Windows.Forms.ButtonBase.UseVisualStyleBackColor*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: UseVisualStyleBackColor\n  nameWithType: ButtonBase.UseVisualStyleBackColor\n- uid: System.Windows.Forms.ButtonBase.WndProc*\n  parent: System.Windows.Forms.ButtonBase\n  isExternal: false\n  name: WndProc\n  nameWithType: ButtonBase.WndProc\n"}