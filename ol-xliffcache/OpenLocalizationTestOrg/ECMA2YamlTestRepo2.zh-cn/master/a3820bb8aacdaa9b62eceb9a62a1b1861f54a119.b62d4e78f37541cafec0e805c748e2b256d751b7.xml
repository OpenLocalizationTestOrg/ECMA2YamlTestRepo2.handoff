{"nodes":[{"pos":[2504,2601],"content":"Represents an ordered collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> child elements.","needQuote":true,"needEscape":true,"source":"Represents an ordered collection of <xref href=\"System.Windows.UIElement\"></xref> child elements."},{"pos":[2614,3146],"content":"The <xref:System.Windows.Controls.Panel> base class uses a UIElementCollection to represent its collection of child elements. Methods and properties defined by the UIElementCollection affect all objects derived from <xref:System.Windows.Controls.Panel> and define a common feature-set for the manipulation of <xref:System.Windows.Controls.Panel> child elements.       A UIElementCollection has affinity to its own context (class). You must access the collection from the context of the owning <xref:System.Windows.Controls.Panel>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.Windows.Controls.Panel> base class uses a UIElementCollection to represent its collection of child elements. Methods and properties defined by the UIElementCollection affect all objects derived from <xref:System.Windows.Controls.Panel> and define a common feature-set for the manipulation of <xref:System.Windows.Controls.Panel> child elements.       A UIElementCollection has affinity to its own context (class). You must access the collection from the context of the owning <xref:System.Windows.Controls.Panel>.","pos":[0,530],"nodes":[{"content":"The &lt;xref:System.Windows.Controls.Panel&gt; base class uses a UIElementCollection to represent its collection of child elements.","pos":[0,125],"source":"The <xref:System.Windows.Controls.Panel> base class uses a UIElementCollection to represent its collection of child elements."},{"content":"Methods and properties defined by the UIElementCollection affect all objects derived from &lt;xref:System.Windows.Controls.Panel&gt; and define a common feature-set for the manipulation of &lt;xref:System.Windows.Controls.Panel&gt; child elements.","pos":[126,361],"source":" Methods and properties defined by the UIElementCollection affect all objects derived from <xref:System.Windows.Controls.Panel> and define a common feature-set for the manipulation of <xref:System.Windows.Controls.Panel> child elements."},{"content":"A UIElementCollection has affinity to its own context (class).","pos":[368,430]},{"content":"You must access the collection from the context of the owning &lt;xref:System.Windows.Controls.Panel&gt;.","pos":[431,530],"source":" You must access the collection from the context of the owning <xref:System.Windows.Controls.Panel>."}]}]},{"pos":[4379,4484],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref> class."},{"pos":[4718,4793],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parent of the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> parent of the collection."},{"pos":[4881,4934],"content":"The logical parent of the elements in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The logical parent of the elements in the collection.","pos":[0,53]}]},{"pos":[5477,5576],"content":"Adds the specified element to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds the specified element to the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[6151,6208],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> to add."},{"pos":[6265,6305],"content":"The index position of the added element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position of the added element.","pos":[0,40]}]},{"pos":[6788,6910],"content":"Gets or sets the number of elements that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can contain.","needQuote":true,"needEscape":true,"source":"Gets or sets the number of elements that the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref> can contain."},{"pos":[7032,7088],"content":"The total number of elements the collection can contain.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of elements the collection can contain.","pos":[0,56]}]},{"pos":[7565,7658],"content":"Removes all elements from a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes all elements from a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[8756,8887],"content":"Clears the logical parent of an element when the element leaves a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Clears the logical parent of an element when the element leaves a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[9071,9159],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose logical parent is being cleared.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> whose logical parent is being cleared."},{"pos":[9740,9854],"content":"Determines whether a specified element is in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether a specified element is in the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[10443,10463],"content":"The element to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element to find.","pos":[0,20]}]},{"pos":[10522,10748],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is found in the collection; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.UIElement\"></xref> is found in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11317,11496],"content":"Copies a <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to an array, starting at a specified index position.","needQuote":true,"needEscape":true,"source":"Copies a <xref href=\"System.Windows.UIElement\"></xref> from a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref> to an array, starting at a specified index position."},{"pos":[11649,11694],"content":"An array into which the collection is copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array into which the collection is copied.","pos":[0,45]}]},{"pos":[11755,11810],"content":"The index position of the element where copying begins.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position of the element where copying begins.","pos":[0,55]}]},{"pos":[12423,12602],"content":"Copies a <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to an array, starting at a specified index position.","needQuote":true,"needEscape":true,"source":"Copies a <xref href=\"System.Windows.UIElement\"></xref> from a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref> to an array, starting at a specified index position."},{"pos":[12790,12856],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Windows.UIElement\"></xref> objects."},{"pos":[12917,12972],"content":"The index position of the element where copying begins.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position of the element where copying begins.","pos":[0,55]}]},{"pos":[13443,13496],"content":"Gets the actual number of elements in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the actual number of elements in the collection.","pos":[0,53]}]},{"pos":[13884,13932],"content":"The actual number of elements in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The actual number of elements in the collection.","pos":[0,48]}]},{"pos":[14446,14554],"content":"Returns an enumerator that can iterate the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns an enumerator that can iterate the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[14735,14821],"content":"An <xref:System.Collections.IEnumerator> that can list the members of this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that can list the members of this collection.","pos":[0,86],"source":"An <xref:System.Collections.IEnumerator> that can list the members of this collection."}]},{"pos":[15392,15512],"content":"Returns the index position of a specified element in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the index position of a specified element in a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[16238,16283],"content":"The element whose index position is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element whose index position is required.","pos":[0,45]}]},{"pos":[16340,16419],"content":"The index position of the element.  -1 if the element is not in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position of the element.  -1 if the element is not in the collection.","pos":[0,79],"nodes":[{"content":"The index position of the element.","pos":[0,34]},{"content":"-1 if the element is not in the collection.","pos":[36,79]}]}]},{"pos":[17023,17146],"content":"Inserts an element into a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index position.","needQuote":true,"needEscape":true,"source":"Inserts an element into a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref> at the specified index position."},{"pos":[17551,17607],"content":"The index position where you want to insert the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position where you want to insert the element.","pos":[0,56]}]},{"pos":[17682,17778],"content":"The element to insert into the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The element to insert into the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[18294,18422],"content":"Gets a value that indicates whether access to the <xref:System.Collections.ICollection> interface is synchronized (thread-safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether access to the &lt;xref:System.Collections.ICollection&gt; interface is synchronized (thread-safe).","pos":[0,128],"source":"Gets a value that indicates whether access to the <xref:System.Collections.ICollection> interface is synchronized (thread-safe)."}]},{"pos":[18548,18728],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the collection is synchronized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the collection is synchronized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19251,19426],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> stored at the zero-based index position of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.UIElement\"></xref> stored at the zero-based index position of the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[19835,19907],"content":"The index position of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The index position of the <xref href=\"System.Windows.UIElement\"></xref>."},{"pos":[19976,20069],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p2\">&lt;/code&gt;</ept> position.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.UIElement\"></xref> at the specified <code>index</code> position."},{"pos":[20626,20728],"content":"Removes the specified element from a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes the specified element from a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[20905,20947],"content":"The element to remove from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element to remove from the collection.","pos":[0,42]}]},{"pos":[21480,21561],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.Windows.UIElement\"></xref> at the specified index."},{"pos":[21936,22023],"content":"The index of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that you want to remove.","needQuote":true,"needEscape":true,"source":"The index of the <xref href=\"System.Windows.UIElement\"></xref> that you want to remove."},{"pos":[22617,22717],"content":"Removes a range of elements from a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes a range of elements from a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[22873,22928],"content":"The index position of the element where removal begins.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position of the element where removal begins.","pos":[0,55]}]},{"pos":[22989,23022],"content":"The number of elements to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements to remove.","pos":[0,33]}]},{"pos":[23636,23744],"content":"Sets the logical parent of an element in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.UIElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Sets the logical parent of an element in a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>."},{"pos":[23926,24004],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose logical parent is set.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.UIElement\"></xref> whose logical parent is set."},{"pos":[24500,24609],"content":"Gets an object that you can use to synchronize access to the <xref:System.Collections.ICollection> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that you can use to synchronize access to the &lt;xref:System.Collections.ICollection&gt; interface.","pos":[0,109],"source":"Gets an object that you can use to synchronize access to the <xref:System.Collections.ICollection> interface."}]},{"pos":[24730,24845],"content":"<xref:System.Object> that you can use to synchronize access to the <xref:System.Collections.ICollection> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Object&gt; that you can use to synchronize access to the &lt;xref:System.Collections.ICollection&gt; interface.","pos":[0,115],"source":"<xref:System.Object> that you can use to synchronize access to the <xref:System.Collections.ICollection> interface."}]},{"pos":[25499,25747],"content":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.Add*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,172],"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see &lt;xref:System.Collections.IList.Add*&gt;.","pos":[173,248],"source":" For a description of this member, see <xref:System.Collections.IList.Add*>."}]},{"pos":[25878,25896],"content":"The object to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to add.","pos":[0,18]}]},{"pos":[25953,26006],"content":"The position into which the new element was inserted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position into which the new element was inserted.","pos":[0,53]}]},{"pos":[26705,26958],"content":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.Contains*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,172],"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see &lt;xref:System.Collections.IList.Contains*&gt;.","pos":[173,253],"source":" For a description of this member, see <xref:System.Collections.IList.Contains*>."}]},{"pos":[27095,27128],"content":"The object to locate in the list.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to locate in the list.","pos":[0,33]}]},{"pos":[27187,27359],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object was found in the list; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object was found in the list; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28058,28310],"content":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.IndexOf*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,172],"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see &lt;xref:System.Collections.IList.IndexOf*&gt;.","pos":[173,252],"source":" For a description of this member, see <xref:System.Collections.IList.IndexOf*>."}]},{"pos":[28445,28478],"content":"The object to locate in the list.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to locate in the list.","pos":[0,33]}]},{"pos":[28535,28603],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","needQuote":true,"needEscape":true,"source":"The index of <code>value</code> if found in the list; otherwise, -1."},{"pos":[29340,29591],"content":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.Insert*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,172],"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see &lt;xref:System.Collections.IList.Insert*&gt;.","pos":[173,251],"source":" For a description of this member, see <xref:System.Collections.IList.Insert*>."}]},{"pos":[29736,29793],"content":"The zero-based index at which <ph id=\"ph1\">`value`</ph> should be inserted.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `value` should be inserted."},{"pos":[29855,29888],"content":"The object to insert to the list.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to insert to the list.","pos":[0,33]}]},{"pos":[30553,30809],"content":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.IsFixedSize*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,172],"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see &lt;xref:System.Collections.IList.IsFixedSize*&gt;.","pos":[173,256],"source":" For a description of this member, see <xref:System.Collections.IList.IsFixedSize*>."}]},{"pos":[30942,31107],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the list has a fixed size; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the list has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31772,32027],"content":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.IsReadOnly*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,172],"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see &lt;xref:System.Collections.IList.IsReadOnly*&gt;.","pos":[173,255],"source":" For a description of this member, see <xref:System.Collections.IList.IsReadOnly*>."}]},{"pos":[32159,32320],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the list is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the list is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33003,33252],"content":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.Item*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,172],"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see &lt;xref:System.Collections.IList.Item*&gt;.","pos":[173,249],"source":" For a description of this member, see <xref:System.Collections.IList.Item*>."}]},{"pos":[33414,33464],"content":"The zero-based index of the element to get or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the element to get or set.","pos":[0,50]}]},{"pos":[33522,33557],"content":"The element at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element at the specified index.","pos":[0,35]}]},{"pos":[34247,34498],"content":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.Remove*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,172],"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see &lt;xref:System.Collections.IList.Remove*&gt;.","pos":[173,251],"source":" For a description of this member, see <xref:System.Collections.IList.Remove*>."}]},{"pos":[34633,34668],"content":"The object to remove from the list.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to remove from the list.","pos":[0,35]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.UIElementCollection\n  id: UIElementCollection\n  children:\n  - System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)\n  - System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)\n  - System.Windows.Controls.UIElementCollection.Capacity\n  - System.Windows.Controls.UIElementCollection.Clear\n  - System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)\n  - System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)\n  - System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)\n  - System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)\n  - System.Windows.Controls.UIElementCollection.Count\n  - System.Windows.Controls.UIElementCollection.GetEnumerator\n  - System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)\n  - System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)\n  - System.Windows.Controls.UIElementCollection.IsSynchronized\n  - System.Windows.Controls.UIElementCollection.Item(System.Int32)\n  - System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)\n  - System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)\n  - System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)\n  - System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)\n  - System.Windows.Controls.UIElementCollection.SyncRoot\n  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly\n  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: UIElementCollection\n  nameWithType: UIElementCollection\n  fullName: System.Windows.Controls.UIElementCollection\n  type: Class\n  summary: Represents an ordered collection of <xref href=\"System.Windows.UIElement\"></xref> child elements.\n  remarks: \"The <xref:System.Windows.Controls.Panel> base class uses a UIElementCollection to represent its collection of child elements. Methods and properties defined by the UIElementCollection affect all objects derived from <xref:System.Windows.Controls.Panel> and define a common feature-set for the manipulation of <xref:System.Windows.Controls.Panel> child elements.  \\n  \\n A UIElementCollection has affinity to its own context (class). You must access the collection from the context of the owning <xref:System.Windows.Controls.Panel>.\"\n  example:\n  - \"The following example uses the <xref:System.Windows.Controls.UIElementCollection.Add%2A> method to add child content to a parent <xref:System.Windows.Controls.StackPanel>. You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type UIElementCollection.  \\n  \\n [!code-cs[UIElementCollection#1](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#1)]\"\n  syntax:\n    content: 'public class UIElementCollection : System.Collections.IList'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IList\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)\n  id: '#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)'\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: UIElementCollection(UIElement,FrameworkElement)\n  nameWithType: UIElementCollection.UIElementCollection(UIElement,FrameworkElement)\n  fullName: System.Windows.Controls.UIElementCollection.UIElementCollection(UIElement,FrameworkElement)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref> class.\n  syntax:\n    content: public UIElementCollection (System.Windows.UIElement visualParent, System.Windows.FrameworkElement logicalParent);\n    parameters:\n    - id: visualParent\n      type: System.Windows.UIElement\n      description: The <xref href=\"System.Windows.UIElement\"></xref> parent of the collection.\n    - id: logicalParent\n      type: System.Windows.FrameworkElement\n      description: The logical parent of the elements in the collection.\n  overload: System.Windows.Controls.UIElementCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)\n  id: Add(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: Add(UIElement)\n  nameWithType: UIElementCollection.Add(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.Add(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Adds the specified element to the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example uses the Add method to add child content to a parent <xref:System.Windows.Controls.StackPanel>. You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type <xref:System.Windows.Controls.UIElementCollection>.  \\n  \\n [!code-cs[UIElementCollection#1](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#1)]\"\n  syntax:\n    content: public virtual int Add (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The <xref href=\"System.Windows.UIElement\"></xref> to add.\n    return:\n      type: System.Int32\n      description: The index position of the added element.\n  overload: System.Windows.Controls.UIElementCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.Capacity\n  id: Capacity\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: Capacity\n  nameWithType: UIElementCollection.Capacity\n  fullName: System.Windows.Controls.UIElementCollection.Capacity\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the number of elements that the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref> can contain.\n  syntax:\n    content: public virtual int Capacity { get; set; }\n    return:\n      type: System.Int32\n      description: The total number of elements the collection can contain.\n  overload: System.Windows.Controls.UIElementCollection.Capacity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.Clear\n  id: Clear\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: UIElementCollection.Clear()\n  fullName: System.Windows.Controls.UIElementCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Removes all elements from a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example uses the Clear method to clear child content from a parent <xref:System.Windows.Controls.StackPanel>. You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type <xref:System.Windows.Controls.UIElementCollection>.  \\n  \\n [!code-cs[UIElementCollection#1](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#1)]\"\n  syntax:\n    content: public virtual void Clear ();\n    parameters: []\n  overload: System.Windows.Controls.UIElementCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)\n  id: ClearLogicalParent(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: ClearLogicalParent(UIElement)\n  nameWithType: UIElementCollection.ClearLogicalParent(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.ClearLogicalParent(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Clears the logical parent of an element when the element leaves a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  syntax:\n    content: protected void ClearLogicalParent (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The <xref href=\"System.Windows.UIElement\"></xref> whose logical parent is being cleared.\n  overload: System.Windows.Controls.UIElementCollection.ClearLogicalParent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)\n  id: Contains(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: Contains(UIElement)\n  nameWithType: UIElementCollection.Contains(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.Contains(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Determines whether a specified element is in the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example uses the Contains method to determine if a specific <xref:System.Windows.UIElement> exists within a <xref:System.Windows.Controls.UIElementCollection>.  \\n  \\n [!code-cs[UIElementCollection#10](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#10)]\\n [!code-vb[UIElementCollection#10](~/add/codesnippet/visualbasic/ElemCollMethodsVB/Pane1.xaml.vb#10)]\"\n  syntax:\n    content: public virtual bool Contains (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to find.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.UIElement\"></xref> is found in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.UIElementCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: UIElementCollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Controls.UIElementCollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Copies a <xref href=\"System.Windows.UIElement\"></xref> from a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref> to an array, starting at a specified index position.\n  syntax:\n    content: public virtual void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: An array into which the collection is copied.\n    - id: index\n      type: System.Int32\n      description: The index position of the element where copying begins.\n  overload: System.Windows.Controls.UIElementCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)\n  id: CopyTo(System.Windows.UIElement[],System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: CopyTo(UIElement[],Int32)\n  nameWithType: UIElementCollection.CopyTo(UIElement[],Int32)\n  fullName: System.Windows.Controls.UIElementCollection.CopyTo(UIElement[],Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Copies a <xref href=\"System.Windows.UIElement\"></xref> from a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref> to an array, starting at a specified index position.\n  syntax:\n    content: public virtual void CopyTo (System.Windows.UIElement[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.UIElement[]\n      description: An array of <xref href=\"System.Windows.UIElement\"></xref> objects.\n    - id: index\n      type: System.Int32\n      description: The index position of the element where copying begins.\n  overload: System.Windows.Controls.UIElementCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.Count\n  id: Count\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: UIElementCollection.Count\n  fullName: System.Windows.Controls.UIElementCollection.Count\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the actual number of elements in the collection.\n  remarks: ''\n  example:\n  - \"The following example uses the Count property to count the number of child elements in a <xref:System.Windows.Controls.UIElementCollection>.  \\n  \\n [!code-cs[UIElementCollection#12](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#12)]\"\n  syntax:\n    content: public virtual int Count { get; }\n    return:\n      type: System.Int32\n      description: The actual number of elements in the collection.\n  overload: System.Windows.Controls.UIElementCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: UIElementCollection.GetEnumerator()\n  fullName: System.Windows.Controls.UIElementCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns an enumerator that can iterate the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  syntax:\n    content: public virtual System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that can list the members of this collection.\n  overload: System.Windows.Controls.UIElementCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)\n  id: IndexOf(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: IndexOf(UIElement)\n  nameWithType: UIElementCollection.IndexOf(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.IndexOf(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the index position of a specified element in a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example finds the index position of a <xref:System.Windows.UIElement> within a <xref:System.Windows.Controls.UIElementCollection>.  \\n  \\n [!code-xml[UIElementCollectionIndexOf#1](~/add/codesnippet/xaml/UIElementCollection_IndexOf/Default.xaml#1)]  \\n  \\n ...  \\n  \\n [!code-vb[UIElementCollectionIndexOf#2](~/add/codesnippet/visualbasic/UIElementCollection_IndexOf_vb/default.xaml.vb#2)]\\n [!code-cs[UIElementCollectionIndexOf#2](~/add/codesnippet/csharp/UIElementCollection_IndexOf/default.xaml.cs#2)]\"\n  syntax:\n    content: public virtual int IndexOf (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element whose index position is required.\n    return:\n      type: System.Int32\n      description: The index position of the element.  -1 if the element is not in the collection.\n  overload: System.Windows.Controls.UIElementCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)\n  id: Insert(System.Int32,System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: Insert(Int32,UIElement)\n  nameWithType: UIElementCollection.Insert(Int32,UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.Insert(Int32,UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Inserts an element into a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref> at the specified index position.\n  remarks: ''\n  example:\n  - \"The following example uses the Insert method to insert child content at a specified index position.  \\n  \\n [!code-cs[UIElementCollection#5](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#5)]\"\n  syntax:\n    content: public virtual void Insert (int index, System.Windows.UIElement element);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index position where you want to insert the element.\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to insert into the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  overload: System.Windows.Controls.UIElementCollection.Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: UIElementCollection.IsSynchronized\n  fullName: System.Windows.Controls.UIElementCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a value that indicates whether access to the <xref:System.Collections.ICollection> interface is synchronized (thread-safe).\n  syntax:\n    content: public virtual bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the collection is synchronized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.UIElementCollection.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: UIElementCollection.Item(Int32)\n  fullName: System.Windows.Controls.UIElementCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the <xref href=\"System.Windows.UIElement\"></xref> stored at the zero-based index position of the <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example uses the Item property to identify the child element at a specified index position.  \\n  \\n [!code-cs[UIElementCollection#11](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#11)]\"\n  syntax:\n    content: public virtual System.Windows.UIElement this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index position of the <xref href=\"System.Windows.UIElement\"></xref>.\n    return:\n      type: System.Windows.UIElement\n      description: A <xref href=\"System.Windows.UIElement\"></xref> at the specified <code>index</code> position.\n  overload: System.Windows.Controls.UIElementCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)\n  id: Remove(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: Remove(UIElement)\n  nameWithType: UIElementCollection.Remove(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.Remove(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Removes the specified element from a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  syntax:\n    content: public virtual void Remove (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to remove from the collection.\n  overload: System.Windows.Controls.UIElementCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: UIElementCollection.RemoveAt(Int32)\n  fullName: System.Windows.Controls.UIElementCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Removes the <xref href=\"System.Windows.UIElement\"></xref> at the specified index.\n  remarks: ''\n  example:\n  - \"The following example uses the RemoveAt method to remove child content at a specified index position.  \\n  \\n [!code-cs[UIElementCollection#7](~/add/codesnippet/csharp/ElemCollMethods/Pane1.xaml.cs#7)]\"\n  syntax:\n    content: public virtual void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the <xref href=\"System.Windows.UIElement\"></xref> that you want to remove.\n  overload: System.Windows.Controls.UIElementCollection.RemoveAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)\n  id: RemoveRange(System.Int32,System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: RemoveRange(Int32,Int32)\n  nameWithType: UIElementCollection.RemoveRange(Int32,Int32)\n  fullName: System.Windows.Controls.UIElementCollection.RemoveRange(Int32,Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Removes a range of elements from a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  syntax:\n    content: public virtual void RemoveRange (int index, int count);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index position of the element where removal begins.\n    - id: count\n      type: System.Int32\n      description: The number of elements to remove.\n  overload: System.Windows.Controls.UIElementCollection.RemoveRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)\n  id: SetLogicalParent(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: SetLogicalParent(UIElement)\n  nameWithType: UIElementCollection.SetLogicalParent(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.SetLogicalParent(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the logical parent of an element in a <xref href=\"System.Windows.Controls.UIElementCollection\"></xref>.\n  syntax:\n    content: protected void SetLogicalParent (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The <xref href=\"System.Windows.UIElement\"></xref> whose logical parent is set.\n  overload: System.Windows.Controls.UIElementCollection.SetLogicalParent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: UIElementCollection.SyncRoot\n  fullName: System.Windows.Controls.UIElementCollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets an object that you can use to synchronize access to the <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: public virtual object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: <xref:System.Object> that you can use to synchronize access to the <xref:System.Collections.ICollection> interface.\n  overload: System.Windows.Controls.UIElementCollection.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: UIElementCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.Add*>.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to add.\n    return:\n      type: System.Int32\n      description: The position into which the new element was inserted.\n  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: UIElementCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.Contains*>.\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the list.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object was found in the list; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: UIElementCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.IndexOf*>.\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the list.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code> if found in the list; otherwise, -1.\n  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: UIElementCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.Insert*>.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `value` should be inserted.\n    - id: value\n      type: System.Object\n      description: The object to insert to the list.\n  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: UIElementCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.IsFixedSize*>.\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the list has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: UIElementCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.IsReadOnly*>.\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the list is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: UIElementCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.Item*>.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get or set.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Controls.UIElementCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: UIElementCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref:System.Collections.IList.Remove*>.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to remove from the list.\n  overload: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: UIElementCollection(UIElement,FrameworkElement)\n  nameWithType: UIElementCollection.UIElementCollection(UIElement,FrameworkElement)\n  fullName: System.Windows.Controls.UIElementCollection.UIElementCollection(UIElement,FrameworkElement)\n- uid: System.Windows.UIElement\n  parent: System.Windows\n  isExternal: false\n  name: UIElement\n  nameWithType: UIElement\n  fullName: System.Windows.UIElement\n- uid: System.Windows.FrameworkElement\n  parent: System.Windows\n  isExternal: false\n  name: FrameworkElement\n  nameWithType: FrameworkElement\n  fullName: System.Windows.FrameworkElement\n- uid: System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Add(UIElement)\n  nameWithType: UIElementCollection.Add(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.Add(UIElement)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Controls.UIElementCollection.Capacity\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Capacity\n  nameWithType: UIElementCollection.Capacity\n  fullName: System.Windows.Controls.UIElementCollection.Capacity\n- uid: System.Windows.Controls.UIElementCollection.Clear\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: UIElementCollection.Clear()\n  fullName: System.Windows.Controls.UIElementCollection.Clear()\n- uid: System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: ClearLogicalParent(UIElement)\n  nameWithType: UIElementCollection.ClearLogicalParent(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.ClearLogicalParent(UIElement)\n- uid: System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Contains(UIElement)\n  nameWithType: UIElementCollection.Contains(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.Contains(UIElement)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: UIElementCollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Controls.UIElementCollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: CopyTo(UIElement[],Int32)\n  nameWithType: UIElementCollection.CopyTo(UIElement[],Int32)\n  fullName: System.Windows.Controls.UIElementCollection.CopyTo(UIElement[],Int32)\n- uid: System.Windows.UIElement[]\n  parent: System.Windows\n  isExternal: false\n  name: UIElement\n  nameWithType: UIElement\n  fullName: System.Windows.UIElement[]\n  spec.csharp:\n  - uid: System.Windows.UIElement\n    name: UIElement\n    nameWithType: UIElement\n    fullName: UIElement[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Controls.UIElementCollection.Count\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Count\n  nameWithType: UIElementCollection.Count\n  fullName: System.Windows.Controls.UIElementCollection.Count\n- uid: System.Windows.Controls.UIElementCollection.GetEnumerator\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: UIElementCollection.GetEnumerator()\n  fullName: System.Windows.Controls.UIElementCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: IndexOf(UIElement)\n  nameWithType: UIElementCollection.IndexOf(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.IndexOf(UIElement)\n- uid: System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Insert(Int32,UIElement)\n  nameWithType: UIElementCollection.Insert(Int32,UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.Insert(Int32,UIElement)\n- uid: System.Windows.Controls.UIElementCollection.IsSynchronized\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: UIElementCollection.IsSynchronized\n  fullName: System.Windows.Controls.UIElementCollection.IsSynchronized\n- uid: System.Windows.Controls.UIElementCollection.Item(System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: UIElementCollection.Item(Int32)\n  fullName: System.Windows.Controls.UIElementCollection.Item(Int32)\n- uid: System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Remove(UIElement)\n  nameWithType: UIElementCollection.Remove(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.Remove(UIElement)\n- uid: System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: UIElementCollection.RemoveAt(Int32)\n  fullName: System.Windows.Controls.UIElementCollection.RemoveAt(Int32)\n- uid: System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: RemoveRange(Int32,Int32)\n  nameWithType: UIElementCollection.RemoveRange(Int32,Int32)\n  fullName: System.Windows.Controls.UIElementCollection.RemoveRange(Int32,Int32)\n- uid: System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: SetLogicalParent(UIElement)\n  nameWithType: UIElementCollection.SetLogicalParent(UIElement)\n  fullName: System.Windows.Controls.UIElementCollection.SetLogicalParent(UIElement)\n- uid: System.Windows.Controls.UIElementCollection.SyncRoot\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: UIElementCollection.SyncRoot\n  fullName: System.Windows.Controls.UIElementCollection.SyncRoot\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: UIElementCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Add(Object)\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: UIElementCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Contains(Object)\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: UIElementCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: UIElementCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: UIElementCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsFixedSize\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: UIElementCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.IsReadOnly\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: UIElementCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Item(Int32)\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: UIElementCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Controls.UIElementCollection.System.Collections.IList.Remove(Object)\n- uid: System.Windows.Controls.UIElementCollection.#ctor*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: UIElementCollection\n  nameWithType: UIElementCollection.UIElementCollection\n- uid: System.Windows.Controls.UIElementCollection.Add*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Add\n  nameWithType: UIElementCollection.Add\n- uid: System.Windows.Controls.UIElementCollection.Capacity*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Capacity\n  nameWithType: UIElementCollection.Capacity\n- uid: System.Windows.Controls.UIElementCollection.Clear*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Clear\n  nameWithType: UIElementCollection.Clear\n- uid: System.Windows.Controls.UIElementCollection.ClearLogicalParent*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: ClearLogicalParent\n  nameWithType: UIElementCollection.ClearLogicalParent\n- uid: System.Windows.Controls.UIElementCollection.Contains*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Contains\n  nameWithType: UIElementCollection.Contains\n- uid: System.Windows.Controls.UIElementCollection.CopyTo*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: UIElementCollection.CopyTo\n- uid: System.Windows.Controls.UIElementCollection.Count*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Count\n  nameWithType: UIElementCollection.Count\n- uid: System.Windows.Controls.UIElementCollection.GetEnumerator*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: UIElementCollection.GetEnumerator\n- uid: System.Windows.Controls.UIElementCollection.IndexOf*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: UIElementCollection.IndexOf\n- uid: System.Windows.Controls.UIElementCollection.Insert*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Insert\n  nameWithType: UIElementCollection.Insert\n- uid: System.Windows.Controls.UIElementCollection.IsSynchronized*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: UIElementCollection.IsSynchronized\n- uid: System.Windows.Controls.UIElementCollection.Item*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Item\n  nameWithType: UIElementCollection.Item\n- uid: System.Windows.Controls.UIElementCollection.Remove*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: Remove\n  nameWithType: UIElementCollection.Remove\n- uid: System.Windows.Controls.UIElementCollection.RemoveAt*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: UIElementCollection.RemoveAt\n- uid: System.Windows.Controls.UIElementCollection.RemoveRange*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: RemoveRange\n  nameWithType: UIElementCollection.RemoveRange\n- uid: System.Windows.Controls.UIElementCollection.SetLogicalParent*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: SetLogicalParent\n  nameWithType: UIElementCollection.SetLogicalParent\n- uid: System.Windows.Controls.UIElementCollection.SyncRoot*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: UIElementCollection.SyncRoot\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Add*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: UIElementCollection.System.Collections.IList.Add\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: UIElementCollection.System.Collections.IList.Contains\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: UIElementCollection.System.Collections.IList.IndexOf\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: UIElementCollection.System.Collections.IList.Insert\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: UIElementCollection.System.Collections.IList.IsFixedSize\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: UIElementCollection.System.Collections.IList.IsReadOnly\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Item*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: UIElementCollection.System.Collections.IList.Item\n- uid: System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove*\n  parent: System.Windows.Controls.UIElementCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: UIElementCollection.System.Collections.IList.Remove\n"}