{"nodes":[{"pos":[774,880],"content":"Exposes the &lt;xref:System.Reflection.ParameterInfo?displayProperty=fullName&gt; class to unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.ParameterInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> class to unmanaged code.","pos":[0,106],"source":"Exposes the &lt;xref:System.Reflection.ParameterInfo?displayProperty=fullName&gt; class to unmanaged code."}]},{"pos":[892,1003],"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,111]}]},{"pos":[2150,2217],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]},{"pos":[2229,2414],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[109,185],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]},{"pos":[2614,2656],"content":"Reserved for future use. Must be IID_NULL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]},{"pos":[2722,2753],"content":"An array of names to be mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of names to be mapped.","pos":[0,31]}]},{"pos":[2816,2852],"content":"The count of the names to be mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"The count of the names to be mapped.","pos":[0,36]}]},{"pos":[2913,2964],"content":"The locale context in which to interpret the names.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]},{"pos":[3029,3119],"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","pos":[0,90]}]},{"pos":[3774,3883],"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","pos":[0,109]}]},{"pos":[3895,4078],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[109,183],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]},{"pos":[4246,4277],"content":"The type information to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type information to return.","pos":[0,31]}]},{"pos":[4338,4385],"content":"The locale identifier for the type information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]},{"pos":[4449,4500],"content":"A pointer to the requested type information object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to the requested type information object.","pos":[0,51]}]},{"pos":[5082,5174],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]},{"pos":[5186,5374],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[109,188],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]},{"pos":[5526,5704],"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","pos":[0,178],"nodes":[{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.","pos":[0,138]},{"content":"This parameter is passed uninitialized.","pos":[139,178]}]}]},{"pos":[6569,6632],"content":"Provides access to properties and methods exposed by an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]},{"pos":[6644,6822],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[109,178],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]},{"pos":[7085,7111],"content":"An identifier of a member.","needQuote":true,"needEscape":true,"nodes":[{"content":"An identifier of a member.","pos":[0,26]}]},{"pos":[7170,7212],"content":"Reserved for future use. Must be IID_NULL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]},{"pos":[7273,7324],"content":"The locale context in which to interpret arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]},{"pos":[7386,7427],"content":"Flags describing the context of the call.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]},{"pos":[7495,7656],"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,161]}]},{"pos":[7723,7781],"content":"A pointer to the location where the result will be stored.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to the location where the result will be stored.","pos":[0,58]}]},{"pos":[7848,7909],"content":"A pointer to a structure that contains exception information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to a structure that contains exception information.","pos":[0,61]}]},{"pos":[7974,8024],"content":"The index of the first argument that has an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices._ParameterInfo\n  id: _ParameterInfo\n  children:\n  - System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount(System.UInt32@)\n  - System.Runtime.InteropServices._ParameterInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  langs:\n  - csharp\n  name: _ParameterInfo\n  nameWithType: _ParameterInfo\n  fullName: System.Runtime.InteropServices._ParameterInfo\n  type: Interface\n  summary: Exposes the &lt;xref:System.Reflection.ParameterInfo?displayProperty=fullName&gt; class to unmanaged code.\n  remarks: This interface is for access to managed classes from unmanaged code and should not be called from managed code.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"993634C4-E47A-32CC-BE08-85F567DC27D6\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.ParameterInfo))]\n\n      public interface _ParameterInfo\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._ParameterInfo\n  langs:\n  - csharp\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _ParameterInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: An array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: The count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: An array allocated by the caller that receives the identifiers corresponding to the names.\n  overload: System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._ParameterInfo\n  langs:\n  - csharp\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _ParameterInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the type information for an object, which can be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: A pointer to the requested type information object.\n  overload: System.Runtime.InteropServices._ParameterInfo.GetTypeInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount(System.UInt32@)\n  id: GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._ParameterInfo\n  langs:\n  - csharp\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _ParameterInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.\n  overload: System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._ParameterInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._ParameterInfo\n  langs:\n  - csharp\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _ParameterInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices._ParameterInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: An identifier of a member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: A pointer to the location where the result will be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: A pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Runtime.InteropServices._ParameterInfo.Invoke*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._ParameterInfo\n  isExternal: false\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _ParameterInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: true\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._ParameterInfo\n  isExternal: false\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _ParameterInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._ParameterInfo\n  isExternal: false\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _ParameterInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount(UInt32)\n- uid: System.Runtime.InteropServices._ParameterInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._ParameterInfo\n  isExternal: false\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _ParameterInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices._ParameterInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames*\n  parent: System.Runtime.InteropServices._ParameterInfo\n  isExternal: false\n  name: GetIDsOfNames\n  nameWithType: _ParameterInfo.GetIDsOfNames\n- uid: System.Runtime.InteropServices._ParameterInfo.GetTypeInfo*\n  parent: System.Runtime.InteropServices._ParameterInfo\n  isExternal: false\n  name: GetTypeInfo\n  nameWithType: _ParameterInfo.GetTypeInfo\n- uid: System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount*\n  parent: System.Runtime.InteropServices._ParameterInfo\n  isExternal: false\n  name: GetTypeInfoCount\n  nameWithType: _ParameterInfo.GetTypeInfoCount\n- uid: System.Runtime.InteropServices._ParameterInfo.Invoke*\n  parent: System.Runtime.InteropServices._ParameterInfo\n  isExternal: false\n  name: Invoke\n  nameWithType: _ParameterInfo.Invoke\n"}