{"nodes":[{"pos":[1636,1740],"content":"Provides an abstract base class that supports creation of multiple-page elements from a single document.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides an abstract base class that supports creation of multiple-page elements from a single document.","pos":[0,104]}]},{"pos":[1752,1987],"content":"If you need automatic background repagination in response to events such as changing the page size of a <xref:System.Windows.Documents.FlowDocument>, then use <xref:System.Windows.Documents.DynamicDocumentPaginator> as your base class.","needQuote":true,"needEscape":true,"nodes":[{"content":"If you need automatic background repagination in response to events such as changing the page size of a &lt;xref:System.Windows.Documents.FlowDocument&gt;, then use &lt;xref:System.Windows.Documents.DynamicDocumentPaginator&gt; as your base class.","pos":[0,235],"source":"If you need automatic background repagination in response to events such as changing the page size of a <xref:System.Windows.Documents.FlowDocument>, then use <xref:System.Windows.Documents.DynamicDocumentPaginator> as your base class."}]},{"pos":[2551,2655],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.DocumentPaginator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Documents.DocumentPaginator\"></xref> class."},{"pos":[3271,3477],"content":"Cancels a previous <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*> or &lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName&gt; operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancels a previous &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*&gt; or <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> operation.","pos":[0,206],"source":"Cancels a previous <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*> or &lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName&gt; operation."}]},{"pos":[3489,3557],"content":"If <ph id=\"ph1\">`userState`</ph> is <ph id=\"ph2\">`null`</ph>, then all asynchronous tasks are cancelled.","needQuote":true,"needEscape":true,"source":"If `userState` is `null`, then all asynchronous tasks are cancelled."},{"pos":[3714,4049],"content":"The original <ph id=\"ph1\">`userState`</ph> passed to &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync<bpt id=\"p1\">*</bpt>&gt;, <ph id=\"ph2\">&amp;lt;</ph>xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph>, or &lt;xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync<ept id=\"p1\">*</ept>&gt; that identifies the asynchronous task to cancel.","needQuote":true,"needEscape":true,"source":"The original `userState` passed to <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*>, &lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName&gt;, or <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*> that identifies the asynchronous task to cancel."},{"pos":[4574,4840],"content":"Forces a pagination of the content, updates &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount<bpt id=\"p1\">*</bpt>&gt; with the new total, and sets &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid<ept id=\"p1\">*</ept>&gt; to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Forces a pagination of the content, updates <xref:System.Windows.Documents.DocumentPaginator.PageCount*> with the new total, and sets <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid*> to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[4852,5199],"content":"<xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> will be `true` immediately after this is called. If content is modified or <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> is changed after this method is called, <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> will likely revert to `false`.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt; will be <ph id=\"ph1\">`true`</ph> immediately after this is called.","pos":[0,118],"source":"<xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> will be `true` immediately after this is called."},{"content":"If content is modified or &lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt; is changed after this method is called, &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt; will likely revert to <ph id=\"ph1\">`false`</ph>.","pos":[119,347],"source":" If content is modified or <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> is changed after this method is called, <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> will likely revert to `false`."}]},{"pos":[5837,6119],"content":"Asynchronously, forces a pagination of the content, updates &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount<bpt id=\"p1\">*</bpt>&gt; with the new total, and sets &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid<ept id=\"p1\">*</ept>&gt; to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Asynchronously, forces a pagination of the content, updates <xref:System.Windows.Documents.DocumentPaginator.PageCount*> with the new total, and sets <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid*> to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[6132,6384],"content":"The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations. Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations. Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29>.","pos":[0,252],"nodes":[{"content":"The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.","pos":[0,106]},{"content":"Contrast this with the other overload of this method: &lt;xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29&gt;.","pos":[107,252],"source":" Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29>."}]}]},{"pos":[7081,7359],"content":"Asynchronously, forces a pagination of the content, updates &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount<bpt id=\"p1\">*</bpt>&gt; with the new total, sets &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid<ept id=\"p1\">*</ept>&gt; to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Asynchronously, forces a pagination of the content, updates <xref:System.Windows.Documents.DocumentPaginator.PageCount*> with the new total, sets <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid*> to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[7372,7566],"content":"The specified ID is assigned to the asynchronous task.       This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.","needQuote":false,"needEscape":true,"nodes":[{"content":"The specified ID is assigned to the asynchronous task.       This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.","pos":[0,192],"nodes":[{"content":"The specified ID is assigned to the asynchronous task.","pos":[0,54]},{"content":"This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.","pos":[61,192]}]}]},{"pos":[7734,7780],"content":"A unique identifier for the asynchronous task.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for the asynchronous task.","pos":[0,46]}]},{"pos":[8353,8463],"content":"Occurs when a <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*> operation has finished.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a &lt;xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*&gt; operation has finished.","pos":[0,110],"source":"Occurs when a <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*> operation has finished."}]},{"pos":[8668,8680],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9135,9269],"content":"When overridden in a derived class, gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.DocumentPage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified page number.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, gets the <xref href=\"System.Windows.Documents.DocumentPage\"></xref> for the specified page number."},{"pos":[9282,9562],"content":"If pages prior to `pageNumber` have not been formatted, they will be paginated synchronously prior to returning the requested page.       <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A> provides similar functionality as GetPage, but for asynchronous operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"If pages prior to <ph id=\"ph1\">`pageNumber`</ph> have not been formatted, they will be paginated synchronously prior to returning the requested page.","pos":[0,131],"source":"If pages prior to `pageNumber` have not been formatted, they will be paginated synchronously prior to returning the requested page."},{"content":"&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A&gt; provides similar functionality as GetPage, but for asynchronous operation.","pos":[138,278],"source":"       <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A> provides similar functionality as GetPage, but for asynchronous operation."}]},{"pos":[9748,9811],"content":"The zero-based page number of the document page that is needed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based page number of the document page that is needed.","pos":[0,63]}]},{"pos":[9893,10088],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.DocumentPage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">pageNumber</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;xref href=\"System.Windows.Documents.DocumentPage\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the page does not exist.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Documents.DocumentPage\"></xref> for the specified <code>pageNumber</code>, or <xref href=\"System.Windows.Documents.DocumentPage\"></xref> if the page does not exist."},{"pos":[10281,10317],"content":"<ph id=\"ph1\">&lt;code&gt;pageNumber&lt;/code&gt;</ph> is negative.","needQuote":true,"needEscape":true,"source":"<code>pageNumber</code> is negative."},{"pos":[10780,10997],"content":"Asynchronously returns (through the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.DocumentPaginator.GetPageCompleted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event) the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.DocumentPage\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for the specified page number.","needQuote":true,"needEscape":true,"source":"Asynchronously returns (through the <xref href=\"System.Windows.Documents.DocumentPaginator.GetPageCompleted\"></xref> event) the <xref href=\"System.Windows.Documents.DocumentPage\"></xref> for the specified page number."},{"pos":[11010,11621],"content":"The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations. Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29>.       This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event. The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments. See <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> for how to use this method to get the page.","needQuote":false,"needEscape":true,"nodes":[{"content":"The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations. Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29>.       This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event. The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments. See <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> for how to use this method to get the page.","pos":[0,609],"nodes":[{"content":"The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.","pos":[0,106]},{"content":"Contrast this with the other overload of this method: &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt;.","pos":[107,258],"source":" Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29>."},{"content":"This method raises the &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt; event.","pos":[265,361],"source":"       This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event."},{"content":"The &lt;xref:System.Windows.Documents.DocumentPage&gt; is passed to the event as one of the event arguments.","pos":[362,464],"source":" The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments."},{"content":"See &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29&gt; for how to use this method to get the page.","pos":[465,609],"source":" See <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> for how to use this method to get the page."}]}]},{"pos":[11778,11841],"content":"The zero-based page number of the document page that is needed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based page number of the document page that is needed.","pos":[0,63]}]},{"pos":[12039,12075],"content":"<ph id=\"ph1\">&lt;code&gt;pageNumber&lt;/code&gt;</ph> is negative.","needQuote":true,"needEscape":true,"source":"<code>pageNumber</code> is negative."},{"pos":[12587,12858],"content":"Asynchronously returns (through the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.DocumentPaginator.GetPageCompleted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event) the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.DocumentPage\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for the specified page number and assigns the specified ID to the asynchronous task.","needQuote":true,"needEscape":true,"source":"Asynchronously returns (through the <xref href=\"System.Windows.Documents.DocumentPaginator.GetPageCompleted\"></xref> event) the <xref href=\"System.Windows.Documents.DocumentPage\"></xref> for the specified page number and assigns the specified ID to the asynchronous task."},{"pos":[12871,14567],"content":"This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.       This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event. The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments.       The following steps illustrate how to retrieve a <xref:System.Windows.Documents.DocumentPage> asynchronously:      1.  Create a <xref:System.Windows.Documents.GetPageCompletedEventHandler> delegate and add it to be notified of <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> events.      2.  Call GetPageAsync specifying the `pageNumber` desired and a unique `userState`, which will be used to identify the completion of the asynchronous event.      3.  When the event occurs and the delegate is called, compare the event's <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property with the original GetPageAsync `userState` parameter.  (The <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A> property will also match the `pageNumber` specified in the GetPageAsync call.)      4.  When the <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property matches the original GetPageAsync `userState`, the operation is complete and the page is ready.      5.  Call <xref:System.Windows.Documents.DocumentPaginator.GetPage%2A> to retrieve the formatted <xref:System.Windows.Documents.DocumentPage>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.","pos":[0,131]},{"content":"This method raises the &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt; event.","pos":[138,234],"source":"       This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event."},{"content":"The &lt;xref:System.Windows.Documents.DocumentPage&gt; is passed to the event as one of the event arguments.","pos":[235,337],"source":" The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments."},{"content":"The following steps illustrate how to retrieve a &lt;xref:System.Windows.Documents.DocumentPage&gt; asynchronously:      1.","pos":[344,461],"source":"       The following steps illustrate how to retrieve a <xref:System.Windows.Documents.DocumentPage> asynchronously:      1."},{"content":"Create a &lt;xref:System.Windows.Documents.GetPageCompletedEventHandler&gt; delegate and add it to be notified of &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted&gt; events.","pos":[463,645],"source":"  Create a <xref:System.Windows.Documents.GetPageCompletedEventHandler> delegate and add it to be notified of <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> events."},{"content":"2.","pos":[651,653]},{"content":"Call GetPageAsync specifying the <ph id=\"ph1\">`pageNumber`</ph> desired and a unique <ph id=\"ph2\">`userState`</ph>, which will be used to identify the completion of the asynchronous event.","pos":[655,807],"source":"  Call GetPageAsync specifying the `pageNumber` desired and a unique `userState`, which will be used to identify the completion of the asynchronous event."},{"content":"3.","pos":[813,815]},{"content":"When the event occurs and the delegate is called, compare the event's &lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;.&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt; property with the original GetPageAsync <ph id=\"ph1\">`userState`</ph> parameter.","pos":[817,1073],"source":"  When the event occurs and the delegate is called, compare the event's <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property with the original GetPageAsync `userState` parameter."},{"content":"(The &lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;.&lt;xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A&gt; property will also match the <ph id=\"ph1\">`pageNumber`</ph> specified in the GetPageAsync call.)      4.","pos":[1075,1296],"source":"  (The <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A> property will also match the `pageNumber` specified in the GetPageAsync call.)      4."},{"content":"When the &lt;xref:System.Windows.Documents.GetPageCompletedEventArgs&gt;.&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt; property matches the original GetPageAsync <ph id=\"ph1\">`userState`</ph>, the operation is complete and the page is ready.","pos":[1298,1535],"source":"  When the <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property matches the original GetPageAsync `userState`, the operation is complete and the page is ready."},{"content":"5.","pos":[1541,1543]},{"content":"Call &lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt; to retrieve the formatted &lt;xref:System.Windows.Documents.DocumentPage&gt;.","pos":[1545,1682],"source":"  Call <xref:System.Windows.Documents.DocumentPaginator.GetPage%2A> to retrieve the formatted <xref:System.Windows.Documents.DocumentPage>."}]},{"pos":[14742,14842],"content":"The zero-based page number of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.DocumentPage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get.","needQuote":true,"needEscape":true,"source":"The zero-based page number of the <xref href=\"System.Windows.Documents.DocumentPage\"></xref> to get."},{"pos":[14908,14954],"content":"A unique identifier for the asynchronous task.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for the asynchronous task.","pos":[0,46]}]},{"pos":[15152,15188],"content":"<ph id=\"ph1\">&lt;code&gt;pageNumber&lt;/code&gt;</ph> is negative.","needQuote":true,"needEscape":true,"source":"<code>pageNumber</code> is negative."},{"pos":[15621,15711],"content":"Occurs when <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*> has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when &lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*&gt; has completed.","pos":[0,90],"source":"Occurs when <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*> has completed."}]},{"pos":[15917,15929],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16382,16540],"content":"When overridden in a derived class, gets a value indicating whether <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the total number of pages.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets a value indicating whether &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount*&gt; is the total number of pages.","pos":[0,158],"source":"When overridden in a derived class, gets a value indicating whether <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the total number of pages."}]},{"pos":[16670,17406],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if pagination is complete and <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the total number of pages; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, if pagination is in process and <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the number of pages currently formatted (not the total).       This value may revert to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, after being <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if <xref:System.Windows.Documents.DocumentPaginator.PageSize*> or content changes; because those events would force a repagination.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if pagination is complete and &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount<bpt id=\"p2\">*</bpt>&gt; is the total number of pages; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, if pagination is in process and &lt;xref:System.Windows.Documents.DocumentPaginator.PageCount<ept id=\"p2\">*</ept>&gt; is the number of pages currently formatted (not the total).","pos":[0,409],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if pagination is complete and <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the total number of pages; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, if pagination is in process and <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the number of pages currently formatted (not the total)."},{"content":"This value may revert to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, after being <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if &lt;xref:System.Windows.Documents.DocumentPaginator.PageSize*&gt; or content changes; because those events would force a repagination.","pos":[416,710],"source":"       This value may revert to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, after being <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if <xref:System.Windows.Documents.DocumentPaginator.PageSize*> or content changes; because those events would force a repagination."}]},{"pos":[18155,18262],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted\"></xref> event."},{"pos":[18493,18578],"content":"An <xref:System.ComponentModel.AsyncCompletedEventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.ComponentModel.AsyncCompletedEventArgs&gt; that contains the event data.","pos":[0,85],"source":"An <xref:System.ComponentModel.AsyncCompletedEventArgs> that contains the event data."}]},{"pos":[19308,19406],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.DocumentPaginator.GetPageCompleted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Documents.DocumentPaginator.GetPageCompleted\"></xref> event."},{"pos":[19638,19741],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.GetPageCompletedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.GetPageCompletedEventArgs\"></xref> that contains the event data."},{"pos":[20422,20516],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.DocumentPaginator.PagesChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Documents.DocumentPaginator.PagesChanged\"></xref> event."},{"pos":[20736,20835],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.PagesChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.PagesChangedEventArgs\"></xref> that contains the event data."},{"pos":[21324,21415],"content":"When overridden in a derived class, gets a count of the number of pages currently formatted","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets a count of the number of pages currently formatted","pos":[0,91]}]},{"pos":[21428,21950],"content":"If <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> is `true`, pagination is complete and PageCount is the total number of pages in the document.       If <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> is `false`, pagination is in process and PageCount is the number of pages currently formatted (not the total).       This value may change if <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> or content changes, because those events would force a repagination.","needQuote":false,"needEscape":true,"nodes":[{"content":"If &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt; is <ph id=\"ph1\">`true`</ph>, pagination is complete and PageCount is the total number of pages in the document.","pos":[0,166],"source":"If <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> is `true`, pagination is complete and PageCount is the total number of pages in the document."},{"content":"If &lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt; is <ph id=\"ph1\">`false`</ph>, pagination is in process and PageCount is the number of pages currently formatted (not the total).","pos":[173,356],"source":"       If <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> is `false`, pagination is in process and PageCount is the number of pages currently formatted (not the total)."},{"content":"This value may change if &lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt; or content changes, because those events would force a repagination.","pos":[363,518],"source":"       This value may change if <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> or content changes, because those events would force a repagination."}]},{"pos":[22070,22126],"content":"A count of the number of pages that have been formatted.","needQuote":true,"needEscape":true,"nodes":[{"content":"A count of the number of pages that have been formatted.","pos":[0,56]}]},{"pos":[22622,22666],"content":"Occurs when the document content is changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the document content is changed.","pos":[0,44]}]},{"pos":[22860,22872],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23285,23378],"content":"When overridden in a derived class, gets or sets the suggested width and height of each page.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets or sets the suggested width and height of each page.","pos":[0,93]}]},{"pos":[23390,23582],"content":"The <xref:System.Windows.Documents.DocumentPaginator> may override the value of this property. Users should check <xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Windows.Documents.DocumentPaginator> may override the value of this property. Users should check <xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=fullName>.","pos":[0,192],"nodes":[{"content":"The &lt;xref:System.Windows.Documents.DocumentPaginator&gt; may override the value of this property.","pos":[0,94],"source":"The <xref:System.Windows.Documents.DocumentPaginator> may override the value of this property."},{"content":"Users should check &lt;xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=fullName&gt;.","pos":[95,192],"source":" Users should check <xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=fullName>."}]}]},{"pos":[24029,24119],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the width and height of each page.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Size\"></xref> representing the width and height of each page."},{"pos":[24587,24659],"content":"When overridden in a derived class, returns the element being paginated.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the element being paginated.","pos":[0,72]}]},{"pos":[24671,24978],"content":"The object returned has this <xref:System.Windows.Documents.DocumentPaginator> as the value of its <xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A> property. It is guaranteed to have such a property because it implements <xref:System.Windows.Documents.IDocumentPaginatorSource>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object returned has this <xref:System.Windows.Documents.DocumentPaginator> as the value of its <xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A> property. It is guaranteed to have such a property because it implements <xref:System.Windows.Documents.IDocumentPaginatorSource>.","pos":[0,307],"nodes":[{"content":"The object returned has this &lt;xref:System.Windows.Documents.DocumentPaginator&gt; as the value of its &lt;xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A&gt; property.","pos":[0,186],"source":"The object returned has this <xref:System.Windows.Documents.DocumentPaginator> as the value of its <xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A> property."},{"content":"It is guaranteed to have such a property because it implements &lt;xref:System.Windows.Documents.IDocumentPaginatorSource&gt;.","pos":[187,307],"source":" It is guaranteed to have such a property because it implements <xref:System.Windows.Documents.IDocumentPaginatorSource>."}]}]},{"pos":[25177,25292],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.IDocumentPaginatorSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the element being paginated.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Documents.IDocumentPaginatorSource\"></xref> representing the element being paginated."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Documents.DocumentPaginator\n  id: DocumentPaginator\n  children:\n  - System.Windows.Documents.DocumentPaginator.#ctor\n  - System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)\n  - System.Windows.Documents.DocumentPaginator.ComputePageCount\n  - System.Windows.Documents.DocumentPaginator.ComputePageCountAsync\n  - System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)\n  - System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted\n  - System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)\n  - System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)\n  - System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)\n  - System.Windows.Documents.DocumentPaginator.GetPageCompleted\n  - System.Windows.Documents.DocumentPaginator.IsPageCountValid\n  - System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)\n  - System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)\n  - System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)\n  - System.Windows.Documents.DocumentPaginator.PageCount\n  - System.Windows.Documents.DocumentPaginator.PagesChanged\n  - System.Windows.Documents.DocumentPaginator.PageSize\n  - System.Windows.Documents.DocumentPaginator.Source\n  langs:\n  - csharp\n  name: DocumentPaginator\n  nameWithType: DocumentPaginator\n  fullName: System.Windows.Documents.DocumentPaginator\n  type: Class\n  summary: Provides an abstract base class that supports creation of multiple-page elements from a single document.\n  remarks: If you need automatic background repagination in response to events such as changing the page size of a <xref:System.Windows.Documents.FlowDocument>, then use <xref:System.Windows.Documents.DynamicDocumentPaginator> as your base class.\n  syntax:\n    content: public abstract class DocumentPaginator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.#ctor\n  id: '#ctor'\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: DocumentPaginator()\n  nameWithType: DocumentPaginator.DocumentPaginator()\n  fullName: System.Windows.Documents.DocumentPaginator.DocumentPaginator()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Documents.DocumentPaginator\"></xref> class.\n  syntax:\n    content: protected DocumentPaginator ();\n    parameters: []\n  overload: System.Windows.Documents.DocumentPaginator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)\n  id: CancelAsync(System.Object)\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: CancelAsync(Object)\n  nameWithType: DocumentPaginator.CancelAsync(Object)\n  fullName: System.Windows.Documents.DocumentPaginator.CancelAsync(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Cancels a previous <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*> or &lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName&gt; operation.\n  remarks: If `userState` is `null`, then all asynchronous tasks are cancelled.\n  syntax:\n    content: public virtual void CancelAsync (object userState);\n    parameters:\n    - id: userState\n      type: System.Object\n      description: The original `userState` passed to <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*>, &lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName&gt;, or <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*> that identifies the asynchronous task to cancel.\n  overload: System.Windows.Documents.DocumentPaginator.CancelAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.ComputePageCount\n  id: ComputePageCount\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: ComputePageCount()\n  nameWithType: DocumentPaginator.ComputePageCount()\n  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCount()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Forces a pagination of the content, updates <xref:System.Windows.Documents.DocumentPaginator.PageCount*> with the new total, and sets <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid*> to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  remarks: <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> will be `true` immediately after this is called. If content is modified or <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> is changed after this method is called, <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> will likely revert to `false`.\n  syntax:\n    content: public virtual void ComputePageCount ();\n    parameters: []\n  overload: System.Windows.Documents.DocumentPaginator.ComputePageCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync\n  id: ComputePageCountAsync\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: ComputePageCountAsync()\n  nameWithType: DocumentPaginator.ComputePageCountAsync()\n  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Asynchronously, forces a pagination of the content, updates <xref:System.Windows.Documents.DocumentPaginator.PageCount*> with the new total, and sets <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid*> to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  remarks: 'The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations. Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29>.'\n  syntax:\n    content: public virtual void ComputePageCountAsync ();\n    parameters: []\n  overload: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)\n  id: ComputePageCountAsync(System.Object)\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: ComputePageCountAsync(Object)\n  nameWithType: DocumentPaginator.ComputePageCountAsync(Object)\n  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Asynchronously, forces a pagination of the content, updates <xref:System.Windows.Documents.DocumentPaginator.PageCount*> with the new total, sets <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid*> to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  remarks: \"The specified ID is assigned to the asynchronous task.  \\n  \\n This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.\"\n  syntax:\n    content: public virtual void ComputePageCountAsync (object userState);\n    parameters:\n    - id: userState\n      type: System.Object\n      description: A unique identifier for the asynchronous task.\n  overload: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted\n  id: ComputePageCountCompleted\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: ComputePageCountCompleted\n  nameWithType: DocumentPaginator.ComputePageCountCompleted\n  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Occurs when a <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*> operation has finished.\n  syntax:\n    content: public event System.ComponentModel.AsyncCompletedEventHandler ComputePageCountCompleted;\n    return:\n      type: System.ComponentModel.AsyncCompletedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)\n  id: GetPage(System.Int32)\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: GetPage(Int32)\n  nameWithType: DocumentPaginator.GetPage(Int32)\n  fullName: System.Windows.Documents.DocumentPaginator.GetPage(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: When overridden in a derived class, gets the <xref href=\"System.Windows.Documents.DocumentPage\"></xref> for the specified page number.\n  remarks: \"If pages prior to `pageNumber` have not been formatted, they will be paginated synchronously prior to returning the requested page.  \\n  \\n <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A> provides similar functionality as GetPage, but for asynchronous operation.\"\n  syntax:\n    content: public abstract System.Windows.Documents.DocumentPage GetPage (int pageNumber);\n    parameters:\n    - id: pageNumber\n      type: System.Int32\n      description: The zero-based page number of the document page that is needed.\n    return:\n      type: System.Windows.Documents.DocumentPage\n      description: The <xref href=\"System.Windows.Documents.DocumentPage\"></xref> for the specified <code>pageNumber</code>, or <xref href=\"System.Windows.Documents.DocumentPage\"></xref> if the page does not exist.\n  overload: System.Windows.Documents.DocumentPaginator.GetPage*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>pageNumber</code> is negative.\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)\n  id: GetPageAsync(System.Int32)\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: GetPageAsync(Int32)\n  nameWithType: DocumentPaginator.GetPageAsync(Int32)\n  fullName: System.Windows.Documents.DocumentPaginator.GetPageAsync(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Asynchronously returns (through the <xref href=\"System.Windows.Documents.DocumentPaginator.GetPageCompleted\"></xref> event) the <xref href=\"System.Windows.Documents.DocumentPage\"></xref> for the specified page number.\n  remarks: \"The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations. Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29>.  \\n  \\n This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event. The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments. See <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> for how to use this method to get the page.\"\n  syntax:\n    content: public virtual void GetPageAsync (int pageNumber);\n    parameters:\n    - id: pageNumber\n      type: System.Int32\n      description: The zero-based page number of the document page that is needed.\n  overload: System.Windows.Documents.DocumentPaginator.GetPageAsync*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>pageNumber</code> is negative.\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)\n  id: GetPageAsync(System.Int32,System.Object)\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: GetPageAsync(Int32,Object)\n  nameWithType: DocumentPaginator.GetPageAsync(Int32,Object)\n  fullName: System.Windows.Documents.DocumentPaginator.GetPageAsync(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Asynchronously returns (through the <xref href=\"System.Windows.Documents.DocumentPaginator.GetPageCompleted\"></xref> event) the <xref href=\"System.Windows.Documents.DocumentPage\"></xref> for the specified page number and assigns the specified ID to the asynchronous task.\n  remarks: \"This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.  \\n  \\n This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event. The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments.  \\n  \\n The following steps illustrate how to retrieve a <xref:System.Windows.Documents.DocumentPage> asynchronously:  \\n  \\n1.  Create a <xref:System.Windows.Documents.GetPageCompletedEventHandler> delegate and add it to be notified of <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> events.  \\n  \\n2.  Call GetPageAsync specifying the `pageNumber` desired and a unique `userState`, which will be used to identify the completion of the asynchronous event.  \\n  \\n3.  When the event occurs and the delegate is called, compare the event's <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property with the original GetPageAsync `userState` parameter.  (The <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A> property will also match the `pageNumber` specified in the GetPageAsync call.)  \\n  \\n4.  When the <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property matches the original GetPageAsync `userState`, the operation is complete and the page is ready.  \\n  \\n5.  Call <xref:System.Windows.Documents.DocumentPaginator.GetPage%2A> to retrieve the formatted <xref:System.Windows.Documents.DocumentPage>.\"\n  syntax:\n    content: public virtual void GetPageAsync (int pageNumber, object userState);\n    parameters:\n    - id: pageNumber\n      type: System.Int32\n      description: The zero-based page number of the <xref href=\"System.Windows.Documents.DocumentPage\"></xref> to get.\n    - id: userState\n      type: System.Object\n      description: A unique identifier for the asynchronous task.\n  overload: System.Windows.Documents.DocumentPaginator.GetPageAsync*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>pageNumber</code> is negative.\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.GetPageCompleted\n  id: GetPageCompleted\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: GetPageCompleted\n  nameWithType: DocumentPaginator.GetPageCompleted\n  fullName: System.Windows.Documents.DocumentPaginator.GetPageCompleted\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Occurs when <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*> has completed.\n  syntax:\n    content: public event System.Windows.Documents.GetPageCompletedEventHandler GetPageCompleted;\n    return:\n      type: System.Windows.Documents.GetPageCompletedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.IsPageCountValid\n  id: IsPageCountValid\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: IsPageCountValid\n  nameWithType: DocumentPaginator.IsPageCountValid\n  fullName: System.Windows.Documents.DocumentPaginator.IsPageCountValid\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: When overridden in a derived class, gets a value indicating whether <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the total number of pages.\n  syntax:\n    content: public abstract bool IsPageCountValid { get; }\n    return:\n      type: System.Boolean\n      description: \"<xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if pagination is complete and <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the total number of pages; otherwise, <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>, if pagination is in process and <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the number of pages currently formatted (not the total).  \\n  \\n This value may revert to <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>, after being <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>, if <xref:System.Windows.Documents.DocumentPaginator.PageSize*> or content changes; because those events would force a repagination.\"\n  overload: System.Windows.Documents.DocumentPaginator.IsPageCountValid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)\n  id: OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: OnComputePageCountCompleted(AsyncCompletedEventArgs)\n  nameWithType: DocumentPaginator.OnComputePageCountCompleted(AsyncCompletedEventArgs)\n  fullName: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(AsyncCompletedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Raises the <xref href=\"System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted\"></xref> event.\n  syntax:\n    content: protected virtual void OnComputePageCountCompleted (System.ComponentModel.AsyncCompletedEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.AsyncCompletedEventArgs\n      description: An <xref:System.ComponentModel.AsyncCompletedEventArgs> that contains the event data.\n  overload: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)\n  id: OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: OnGetPageCompleted(GetPageCompletedEventArgs)\n  nameWithType: DocumentPaginator.OnGetPageCompleted(GetPageCompletedEventArgs)\n  fullName: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(GetPageCompletedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Raises the <xref href=\"System.Windows.Documents.DocumentPaginator.GetPageCompleted\"></xref> event.\n  syntax:\n    content: protected virtual void OnGetPageCompleted (System.Windows.Documents.GetPageCompletedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Documents.GetPageCompletedEventArgs\n      description: A <xref href=\"System.Windows.Documents.GetPageCompletedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)\n  id: OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: OnPagesChanged(PagesChangedEventArgs)\n  nameWithType: DocumentPaginator.OnPagesChanged(PagesChangedEventArgs)\n  fullName: System.Windows.Documents.DocumentPaginator.OnPagesChanged(PagesChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Raises the <xref href=\"System.Windows.Documents.DocumentPaginator.PagesChanged\"></xref> event.\n  syntax:\n    content: protected virtual void OnPagesChanged (System.Windows.Documents.PagesChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Documents.PagesChangedEventArgs\n      description: A <xref href=\"System.Windows.Documents.PagesChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Documents.DocumentPaginator.OnPagesChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.PageCount\n  id: PageCount\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: PageCount\n  nameWithType: DocumentPaginator.PageCount\n  fullName: System.Windows.Documents.DocumentPaginator.PageCount\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: When overridden in a derived class, gets a count of the number of pages currently formatted\n  remarks: \"If <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> is `true`, pagination is complete and PageCount is the total number of pages in the document.  \\n  \\n If <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> is `false`, pagination is in process and PageCount is the number of pages currently formatted (not the total).  \\n  \\n This value may change if <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> or content changes, because those events would force a repagination.\"\n  syntax:\n    content: public abstract int PageCount { get; }\n    return:\n      type: System.Int32\n      description: A count of the number of pages that have been formatted.\n  overload: System.Windows.Documents.DocumentPaginator.PageCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.PagesChanged\n  id: PagesChanged\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: PagesChanged\n  nameWithType: DocumentPaginator.PagesChanged\n  fullName: System.Windows.Documents.DocumentPaginator.PagesChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: Occurs when the document content is changed.\n  syntax:\n    content: public event System.Windows.Documents.PagesChangedEventHandler PagesChanged;\n    return:\n      type: System.Windows.Documents.PagesChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.PageSize\n  id: PageSize\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: PageSize\n  nameWithType: DocumentPaginator.PageSize\n  fullName: System.Windows.Documents.DocumentPaginator.PageSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: When overridden in a derived class, gets or sets the suggested width and height of each page.\n  remarks: The <xref:System.Windows.Documents.DocumentPaginator> may override the value of this property. Users should check <xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=fullName>.\n  example:\n  - \"The following example shows how to set the PageSize.  \\n  \\n [!code-vb[XpsSave#CreateFixedDocument](~/add/codesnippet/visualbasic/xpssave/xpfcontent.vb#createfixeddocument)]\\n [!code-cs[XpsSave#CreateFixedDocument](~/add/codesnippet/csharp/XpsSave/XpfContent.cs#createfixeddocument)]\"\n  syntax:\n    content: public abstract System.Windows.Size PageSize { get; set; }\n    return:\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> representing the width and height of each page.\n  overload: System.Windows.Documents.DocumentPaginator.PageSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Documents.DocumentPaginator.Source\n  id: Source\n  parent: System.Windows.Documents.DocumentPaginator\n  langs:\n  - csharp\n  name: Source\n  nameWithType: DocumentPaginator.Source\n  fullName: System.Windows.Documents.DocumentPaginator.Source\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Documents\n  summary: When overridden in a derived class, returns the element being paginated.\n  remarks: The object returned has this <xref:System.Windows.Documents.DocumentPaginator> as the value of its <xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A> property. It is guaranteed to have such a property because it implements <xref:System.Windows.Documents.IDocumentPaginatorSource>.\n  syntax:\n    content: public abstract System.Windows.Documents.IDocumentPaginatorSource Source { get; }\n    return:\n      type: System.Windows.Documents.IDocumentPaginatorSource\n      description: An <xref href=\"System.Windows.Documents.IDocumentPaginatorSource\"></xref> representing the element being paginated.\n  overload: System.Windows.Documents.DocumentPaginator.Source*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Windows.Documents.DocumentPaginator.#ctor\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: DocumentPaginator()\n  nameWithType: DocumentPaginator.DocumentPaginator()\n  fullName: System.Windows.Documents.DocumentPaginator.DocumentPaginator()\n- uid: System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: CancelAsync(Object)\n  nameWithType: DocumentPaginator.CancelAsync(Object)\n  fullName: System.Windows.Documents.DocumentPaginator.CancelAsync(Object)\n- uid: System.Windows.Documents.DocumentPaginator.ComputePageCount\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: ComputePageCount()\n  nameWithType: DocumentPaginator.ComputePageCount()\n  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCount()\n- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: ComputePageCountAsync()\n  nameWithType: DocumentPaginator.ComputePageCountAsync()\n  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync()\n- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: ComputePageCountAsync(Object)\n  nameWithType: DocumentPaginator.ComputePageCountAsync(Object)\n  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(Object)\n- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: ComputePageCountCompleted\n  nameWithType: DocumentPaginator.ComputePageCountCompleted\n  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted\n- uid: System.ComponentModel.AsyncCompletedEventHandler\n  parent: System.ComponentModel\n  isExternal: true\n  name: AsyncCompletedEventHandler\n  nameWithType: AsyncCompletedEventHandler\n  fullName: System.ComponentModel.AsyncCompletedEventHandler\n- uid: System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: GetPage(Int32)\n  nameWithType: DocumentPaginator.GetPage(Int32)\n  fullName: System.Windows.Documents.DocumentPaginator.GetPage(Int32)\n- uid: System.Windows.Documents.DocumentPage\n  parent: System.Windows.Documents\n  isExternal: false\n  name: DocumentPage\n  nameWithType: DocumentPage\n  fullName: System.Windows.Documents.DocumentPage\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: GetPageAsync(Int32)\n  nameWithType: DocumentPaginator.GetPageAsync(Int32)\n  fullName: System.Windows.Documents.DocumentPaginator.GetPageAsync(Int32)\n- uid: System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: GetPageAsync(Int32,Object)\n  nameWithType: DocumentPaginator.GetPageAsync(Int32,Object)\n  fullName: System.Windows.Documents.DocumentPaginator.GetPageAsync(Int32,Object)\n- uid: System.Windows.Documents.DocumentPaginator.GetPageCompleted\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: GetPageCompleted\n  nameWithType: DocumentPaginator.GetPageCompleted\n  fullName: System.Windows.Documents.DocumentPaginator.GetPageCompleted\n- uid: System.Windows.Documents.GetPageCompletedEventHandler\n  parent: System.Windows.Documents\n  isExternal: false\n  name: GetPageCompletedEventHandler\n  nameWithType: GetPageCompletedEventHandler\n  fullName: System.Windows.Documents.GetPageCompletedEventHandler\n- uid: System.Windows.Documents.DocumentPaginator.IsPageCountValid\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: IsPageCountValid\n  nameWithType: DocumentPaginator.IsPageCountValid\n  fullName: System.Windows.Documents.DocumentPaginator.IsPageCountValid\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: OnComputePageCountCompleted(AsyncCompletedEventArgs)\n  nameWithType: DocumentPaginator.OnComputePageCountCompleted(AsyncCompletedEventArgs)\n  fullName: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(AsyncCompletedEventArgs)\n- uid: System.ComponentModel.AsyncCompletedEventArgs\n  parent: System.ComponentModel\n  isExternal: true\n  name: AsyncCompletedEventArgs\n  nameWithType: AsyncCompletedEventArgs\n  fullName: System.ComponentModel.AsyncCompletedEventArgs\n- uid: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: OnGetPageCompleted(GetPageCompletedEventArgs)\n  nameWithType: DocumentPaginator.OnGetPageCompleted(GetPageCompletedEventArgs)\n  fullName: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(GetPageCompletedEventArgs)\n- uid: System.Windows.Documents.GetPageCompletedEventArgs\n  parent: System.Windows.Documents\n  isExternal: false\n  name: GetPageCompletedEventArgs\n  nameWithType: GetPageCompletedEventArgs\n  fullName: System.Windows.Documents.GetPageCompletedEventArgs\n- uid: System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: OnPagesChanged(PagesChangedEventArgs)\n  nameWithType: DocumentPaginator.OnPagesChanged(PagesChangedEventArgs)\n  fullName: System.Windows.Documents.DocumentPaginator.OnPagesChanged(PagesChangedEventArgs)\n- uid: System.Windows.Documents.PagesChangedEventArgs\n  parent: System.Windows.Documents\n  isExternal: false\n  name: PagesChangedEventArgs\n  nameWithType: PagesChangedEventArgs\n  fullName: System.Windows.Documents.PagesChangedEventArgs\n- uid: System.Windows.Documents.DocumentPaginator.PageCount\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: PageCount\n  nameWithType: DocumentPaginator.PageCount\n  fullName: System.Windows.Documents.DocumentPaginator.PageCount\n- uid: System.Windows.Documents.DocumentPaginator.PagesChanged\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: PagesChanged\n  nameWithType: DocumentPaginator.PagesChanged\n  fullName: System.Windows.Documents.DocumentPaginator.PagesChanged\n- uid: System.Windows.Documents.PagesChangedEventHandler\n  parent: System.Windows.Documents\n  isExternal: false\n  name: PagesChangedEventHandler\n  nameWithType: PagesChangedEventHandler\n  fullName: System.Windows.Documents.PagesChangedEventHandler\n- uid: System.Windows.Documents.DocumentPaginator.PageSize\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: PageSize\n  nameWithType: DocumentPaginator.PageSize\n  fullName: System.Windows.Documents.DocumentPaginator.PageSize\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Documents.DocumentPaginator.Source\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: Source\n  nameWithType: DocumentPaginator.Source\n  fullName: System.Windows.Documents.DocumentPaginator.Source\n- uid: System.Windows.Documents.IDocumentPaginatorSource\n  parent: System.Windows.Documents\n  isExternal: false\n  name: IDocumentPaginatorSource\n  nameWithType: IDocumentPaginatorSource\n  fullName: System.Windows.Documents.IDocumentPaginatorSource\n- uid: System.Windows.Documents.DocumentPaginator.#ctor*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: DocumentPaginator\n  nameWithType: DocumentPaginator.DocumentPaginator\n- uid: System.Windows.Documents.DocumentPaginator.CancelAsync*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: CancelAsync\n  nameWithType: DocumentPaginator.CancelAsync\n- uid: System.Windows.Documents.DocumentPaginator.ComputePageCount*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: ComputePageCount\n  nameWithType: DocumentPaginator.ComputePageCount\n- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: ComputePageCountAsync\n  nameWithType: DocumentPaginator.ComputePageCountAsync\n- uid: System.Windows.Documents.DocumentPaginator.GetPage*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: GetPage\n  nameWithType: DocumentPaginator.GetPage\n- uid: System.Windows.Documents.DocumentPaginator.GetPageAsync*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: GetPageAsync\n  nameWithType: DocumentPaginator.GetPageAsync\n- uid: System.Windows.Documents.DocumentPaginator.IsPageCountValid*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: IsPageCountValid\n  nameWithType: DocumentPaginator.IsPageCountValid\n- uid: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: OnComputePageCountCompleted\n  nameWithType: DocumentPaginator.OnComputePageCountCompleted\n- uid: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: OnGetPageCompleted\n  nameWithType: DocumentPaginator.OnGetPageCompleted\n- uid: System.Windows.Documents.DocumentPaginator.OnPagesChanged*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: OnPagesChanged\n  nameWithType: DocumentPaginator.OnPagesChanged\n- uid: System.Windows.Documents.DocumentPaginator.PageCount*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: PageCount\n  nameWithType: DocumentPaginator.PageCount\n- uid: System.Windows.Documents.DocumentPaginator.PageSize*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: PageSize\n  nameWithType: DocumentPaginator.PageSize\n- uid: System.Windows.Documents.DocumentPaginator.Source*\n  parent: System.Windows.Documents.DocumentPaginator\n  isExternal: false\n  name: Source\n  nameWithType: DocumentPaginator.Source\n"}