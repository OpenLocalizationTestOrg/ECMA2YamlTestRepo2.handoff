{"nodes":[{"pos":[990,1002],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1647,1659],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2416,2428],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2481,2493],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3384,3396],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3458,3470],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3534,3546],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4513,4525],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4597,4609],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4671,4683],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4747,4759],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5565,5577],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5630,5642],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  id: IChannelListener`1\n  children:\n  - System.ServiceModel.Channels.IChannelListener`1.AcceptChannel\n  - System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)\n  langs:\n  - csharp\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n  type: Interface\n  syntax:\n    content: 'public interface IChannelListener<TChannel> : System.ServiceModel.Channels.IChannelListener where TChannel : class, IChannel'\n    typeParameters:\n    - id: TChannel\n      description: To be added.\n  implements:\n  - System.ServiceModel.Channels.IChannelListener\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel\n  id: AcceptChannel\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  langs:\n  - csharp\n  name: AcceptChannel()\n  nameWithType: IChannelListener<TChannel>.AcceptChannel()\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>.AcceptChannel()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public TChannel AcceptChannel ();\n    parameters: []\n    return:\n      type: TChannel\n      description: To be added.\n  overload: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)\n  id: AcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  langs:\n  - csharp\n  name: AcceptChannel(TimeSpan)\n  nameWithType: IChannelListener<TChannel>.AcceptChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>.AcceptChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public TChannel AcceptChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    return:\n      type: TChannel\n      description: To be added.\n  overload: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  id: BeginAcceptChannel(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  langs:\n  - csharp\n  name: BeginAcceptChannel(AsyncCallback,Object)\n  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public IAsyncResult BeginAcceptChannel (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  langs:\n  - csharp\n  name: BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public IAsyncResult BeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)\n  id: EndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  langs:\n  - csharp\n  name: EndAcceptChannel(IAsyncResult)\n  nameWithType: IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  syntax:\n    content: public TChannel EndAcceptChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n    return:\n      type: TChannel\n      description: To be added.\n  overload: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: AcceptChannel()\n  nameWithType: IChannelListener<TChannel>.AcceptChannel()\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>.AcceptChannel()\n- uid: TChannel\n  isExternal: true\n  name: TChannel\n  nameWithType: TChannel\n  fullName: TChannel\n- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: AcceptChannel(TimeSpan)\n  nameWithType: IChannelListener<TChannel>.AcceptChannel(TimeSpan)\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>.AcceptChannel(TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: BeginAcceptChannel(AsyncCallback,Object)\n  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan,AsyncCallback,Object)\n- uid: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: EndAcceptChannel(IAsyncResult)\n  nameWithType: IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)\n- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel*\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: AcceptChannel\n  nameWithType: IChannelListener<TChannel>.AcceptChannel\n- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: BeginAcceptChannel\n  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel\n- uid: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel*\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: EndAcceptChannel\n  nameWithType: IChannelListener<TChannel>.EndAcceptChannel\n"}