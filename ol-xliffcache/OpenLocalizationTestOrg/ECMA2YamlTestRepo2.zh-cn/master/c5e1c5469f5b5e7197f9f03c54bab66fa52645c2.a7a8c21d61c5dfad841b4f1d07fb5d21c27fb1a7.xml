{"nodes":[{"pos":[674,763],"content":"Creates server channel sinks for the server channel through which remoting messages flow.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates server channel sinks for the server channel through which remoting messages flow.","pos":[0,89]}]},{"pos":[776,2102],"content":"Channel sinks are connected to a server channel through implementations of the IServerChannelSinkProvider interface. All the remoting server channels provide constructors that take a IServerChannelSinkProvider as a parameter.       Channel sink providers are stored in a chain, and the user is responsible for chaining all channel sink providers together before passing the outer one to the channel constructor. IServerChannelSinkProvider provides a property called <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A> for this purpose.       When multiple channel sink providers are specified in a configuration file, the remoting infrastructure will chain them together in the order they are found in the configuration file. The channel sink providers are created at the same time as the channel, during a <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> call.       After the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is generated, .NET Framework searches through the list of registered channels to find one that can process the call. Once an appropriate channel has been found, the channel sink is retrieved from the channel, and the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is forwarded to the sink for processing.","needQuote":false,"needEscape":true,"nodes":[{"content":"Channel sinks are connected to a server channel through implementations of the IServerChannelSinkProvider interface. All the remoting server channels provide constructors that take a IServerChannelSinkProvider as a parameter.       Channel sink providers are stored in a chain, and the user is responsible for chaining all channel sink providers together before passing the outer one to the channel constructor. IServerChannelSinkProvider provides a property called <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A> for this purpose.       When multiple channel sink providers are specified in a configuration file, the remoting infrastructure will chain them together in the order they are found in the configuration file. The channel sink providers are created at the same time as the channel, during a <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> call.       After the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is generated, .NET Framework searches through the list of registered channels to find one that can process the call. Once an appropriate channel has been found, the channel sink is retrieved from the channel, and the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is forwarded to the sink for processing.","pos":[0,1320],"nodes":[{"content":"Channel sinks are connected to a server channel through implementations of the IServerChannelSinkProvider interface.","pos":[0,116]},{"content":"All the remoting server channels provide constructors that take a IServerChannelSinkProvider as a parameter.","pos":[117,225]},{"content":"Channel sink providers are stored in a chain, and the user is responsible for chaining all channel sink providers together before passing the outer one to the channel constructor.","pos":[232,411]},{"content":"IServerChannelSinkProvider provides a property called &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A&gt; for this purpose.","pos":[412,558],"source":" IServerChannelSinkProvider provides a property called <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A> for this purpose."},{"content":"When multiple channel sink providers are specified in a configuration file, the remoting infrastructure will chain them together in the order they are found in the configuration file.","pos":[565,748]},{"content":"The channel sink providers are created at the same time as the channel, during a &lt;xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName&gt; call.","pos":[749,926],"source":" The channel sink providers are created at the same time as the channel, during a <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> call."},{"content":"After the &lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage&gt; is generated, .NET Framework searches through the list of registered channels to find one that can process the call.","pos":[933,1119],"source":"       After the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is generated, .NET Framework searches through the list of registered channels to find one that can process the call."},{"content":"Once an appropriate channel has been found, the channel sink is retrieved from the channel, and the &lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage&gt; is forwarded to the sink for processing.","pos":[1120,1320],"source":" Once an appropriate channel has been found, the channel sink is retrieved from the channel, and the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is forwarded to the sink for processing."}]}]},{"pos":[3316,3337],"content":"Creates a sink chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a sink chain.","pos":[0,21]}]},{"pos":[3999,4054],"content":"The channel for which to create the channel sink chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"The channel for which to create the channel sink chain.","pos":[0,55]}]},{"pos":[4150,4363],"content":"The first sink of the newly formed channel sink chain, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that this provider will not or cannot provide a connection for this endpoint.","needQuote":true,"needEscape":true,"source":"The first sink of the newly formed channel sink chain, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that this provider will not or cannot provide a connection for this endpoint."},{"pos":[4574,4635],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[5280,5362],"content":"Returns the channel data for the channel that the current sink is associated with.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the channel data for the channel that the current sink is associated with.","pos":[0,82]}]},{"pos":[5973,6098],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IChannelDataStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in which the channel data is to be returned.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Remoting.Channels.IChannelDataStore\"></xref> object in which the channel data is to be returned."},{"pos":[6313,6374],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[6810,6881],"content":"Gets or sets the next sink provider in the channel sink provider chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the next sink provider in the channel sink provider chain.","pos":[0,71]}]},{"pos":[7405,7463],"content":"The next sink provider in the channel sink provider chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"The next sink provider in the channel sink provider chain.","pos":[0,58]}]},{"pos":[7668,7729],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  id: IServerChannelSinkProvider\n  children:\n  - System.Runtime.Remoting.Channels.IServerChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)\n  - System.Runtime.Remoting.Channels.IServerChannelSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)\n  - System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next\n  langs:\n  - csharp\n  name: IServerChannelSinkProvider\n  nameWithType: IServerChannelSinkProvider\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  type: Interface\n  summary: Creates server channel sinks for the server channel through which remoting messages flow.\n  remarks: \"Channel sinks are connected to a server channel through implementations of the IServerChannelSinkProvider interface. All the remoting server channels provide constructors that take a IServerChannelSinkProvider as a parameter.  \\n  \\n Channel sink providers are stored in a chain, and the user is responsible for chaining all channel sink providers together before passing the outer one to the channel constructor. IServerChannelSinkProvider provides a property called <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A> for this purpose.  \\n  \\n When multiple channel sink providers are specified in a configuration file, the remoting infrastructure will chain them together in the order they are found in the configuration file. The channel sink providers are created at the same time as the channel, during a <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> call.  \\n  \\n After the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is generated, .NET Framework searches through the list of registered channels to find one that can process the call. Once an appropriate channel has been found, the channel sink is retrieved from the channel, and the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is forwarded to the sink for processing.\"\n  example:\n  - \"The following code example illustrates an implementation of this interface.  \\n  \\n [!code-cs[Remoting_Sinks#70](~/add/codesnippet/csharp/t-system.runtime.remotin_59_1.cs)]\\n [!code-cpp[Remoting_Sinks#70](~/add/codesnippet/cpp/t-system.runtime.remotin_59_1.cpp)]  \\n  \\n See the <xref:System.Runtime.Remoting.Channels.IServerChannelSink> interface documentation for an example of the corresponding server sink implementation.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IServerChannelSinkProvider\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)\n  id: CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  langs:\n  - csharp\n  name: CreateSink(IChannelReceiver)\n  nameWithType: IServerChannelSinkProvider.CreateSink(IChannelReceiver)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.CreateSink(IChannelReceiver)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Creates a sink chain.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[SoapClientFormatterSinkProvider_Next_Create#3](~/add/codesnippet/cpp/b8b078c3-f7a9-4408-aab2-_1.cpp)]\n     [!code-cs[SoapClientFormatterSinkProvider_Next_Create#3](~/add/codesnippet/csharp/b8b078c3-f7a9-4408-aab2-_1.cs)]\n     [!code-vb[SoapClientFormatterSinkProvider_Next_Create#3](~/add/codesnippet/visualbasic/b8b078c3-f7a9-4408-aab2-_1.vb)]\n  syntax:\n    content: public System.Runtime.Remoting.Channels.IServerChannelSink CreateSink (System.Runtime.Remoting.Channels.IChannelReceiver channel);\n    parameters:\n    - id: channel\n      type: System.Runtime.Remoting.Channels.IChannelReceiver\n      description: The channel for which to create the channel sink chain.\n    return:\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The first sink of the newly formed channel sink chain, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that this provider will not or cannot provide a connection for this endpoint.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.CreateSink*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)\n  id: GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  langs:\n  - csharp\n  name: GetChannelData(IChannelDataStore)\n  nameWithType: IServerChannelSinkProvider.GetChannelData(IChannelDataStore)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.GetChannelData(IChannelDataStore)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Returns the channel data for the channel that the current sink is associated with.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[IServerChannelSinkProvider_CreateSink#2](~/add/codesnippet/cpp/c4c411aa-71db-463d-b9e1-_1.cpp)]\n     [!code-cs[IServerChannelSinkProvider_CreateSink#2](~/add/codesnippet/csharp/c4c411aa-71db-463d-b9e1-_1.cs)]\n     [!code-vb[IServerChannelSinkProvider_CreateSink#2](~/add/codesnippet/visualbasic/c4c411aa-71db-463d-b9e1-_1.vb)]\n  syntax:\n    content: public void GetChannelData (System.Runtime.Remoting.Channels.IChannelDataStore channelData);\n    parameters:\n    - id: channelData\n      type: System.Runtime.Remoting.Channels.IChannelDataStore\n      description: A <xref href=\"System.Runtime.Remoting.Channels.IChannelDataStore\"></xref> object in which the channel data is to be returned.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.GetChannelData*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next\n  id: Next\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  langs:\n  - csharp\n  name: Next\n  nameWithType: IServerChannelSinkProvider.Next\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Gets or sets the next sink provider in the channel sink provider chain.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[SinkProviders#1](~/add/codesnippet/cpp/p-system.runtime.remotin_32_1.cpp)]\n     [!code-cs[SinkProviders#1](~/add/codesnippet/csharp/p-system.runtime.remotin_32_1.cs)]\n     [!code-vb[SinkProviders#1](~/add/codesnippet/visualbasic/p-system.runtime.remotin_32_1.vb)]\n  syntax:\n    content: public System.Runtime.Remoting.Channels.IServerChannelSinkProvider Next { get; set; }\n    return:\n      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n      description: The next sink provider in the channel sink provider chain.\n  overload: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  isExternal: false\n  name: CreateSink(IChannelReceiver)\n  nameWithType: IServerChannelSinkProvider.CreateSink(IChannelReceiver)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.CreateSink(IChannelReceiver)\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSink\n  nameWithType: IServerChannelSink\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSink\n- uid: System.Runtime.Remoting.Channels.IChannelReceiver\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IChannelReceiver\n  nameWithType: IChannelReceiver\n  fullName: System.Runtime.Remoting.Channels.IChannelReceiver\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  isExternal: false\n  name: GetChannelData(IChannelDataStore)\n  nameWithType: IServerChannelSinkProvider.GetChannelData(IChannelDataStore)\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.GetChannelData(IChannelDataStore)\n- uid: System.Runtime.Remoting.Channels.IChannelDataStore\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IChannelDataStore\n  nameWithType: IChannelDataStore\n  fullName: System.Runtime.Remoting.Channels.IChannelDataStore\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  isExternal: false\n  name: Next\n  nameWithType: IServerChannelSinkProvider.Next\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSinkProvider\n  nameWithType: IServerChannelSinkProvider\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.CreateSink*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  isExternal: false\n  name: CreateSink\n  nameWithType: IServerChannelSinkProvider.CreateSink\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.GetChannelData*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  isExternal: false\n  name: GetChannelData\n  nameWithType: IServerChannelSinkProvider.GetChannelData\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next*\n  parent: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  isExternal: false\n  name: Next\n  nameWithType: IServerChannelSinkProvider.Next\n"}