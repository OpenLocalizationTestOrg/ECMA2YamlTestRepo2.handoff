{"nodes":[{"pos":[1221,1286],"content":"Defines an abstract class for a cache of session security tokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines an abstract class for a cache of session security tokens.","pos":[0,65]}]},{"pos":[2063,2206],"content":"Called from constructors in derived classes to initialize the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"></xref> class."},{"pos":[3261,3361],"content":"When overridden in a derived class, attempts to add an entry to the cache or update an existing one.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, attempts to add an entry to the cache or update an existing one.","pos":[0,100]}]},{"pos":[3677,3721],"content":"The key of the entry to be added or updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the entry to be added or updated.","pos":[0,44]}]},{"pos":[3818,3854],"content":"The token associated with the entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token associated with the entry.","pos":[0,36]}]},{"pos":[3923,3956],"content":"The expiration time of the entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expiration time of the entry.","pos":[0,33]}]},{"pos":[4675,4756],"content":"When overridden in a derived class, attempts to retrieve an entry from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, attempts to retrieve an entry from the cache.","pos":[0,81]}]},{"pos":[5031,5064],"content":"The key of the entry to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the entry to retrieve.","pos":[0,33]}]},{"pos":[5157,5285],"content":"The session token associated with the key or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if no match is found.","needQuote":true,"needEscape":true,"source":"The session token associated with the key or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no match is found."},{"pos":[5926,6012],"content":"When overridden in a derived class, retrieves all of the tokens associated with a key.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, retrieves all of the tokens associated with a key.","pos":[0,86]}]},{"pos":[6282,6312],"content":"The endpoint ID to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint ID to search for.","pos":[0,30]}]},{"pos":[6384,6413],"content":"The context ID to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context ID to search for.","pos":[0,29]}]},{"pos":[6546,6603],"content":"The collection of session tokens associated with the key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of session tokens associated with the key.","pos":[0,57]}]},{"pos":[7298,7370],"content":"When overridden in a derived class, loads custom configuration from XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, loads custom configuration from XML.","pos":[0,72]}]},{"pos":[7382,7453],"content":"By default, this method throws a <xref:System.NotImplementedException>.","needQuote":true,"needEscape":true,"nodes":[{"content":"By default, this method throws a &lt;xref:System.NotImplementedException&gt;.","pos":[0,71],"source":"By default, this method throws a <xref:System.NotImplementedException>."}]},{"pos":[7645,7679],"content":"The custom configuration elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The custom configuration elements.","pos":[0,34]}]},{"pos":[8425,8505],"content":"When implemented in a derived class, attempts to remove an entry from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, attempts to remove an entry from the cache.","pos":[0,80]}]},{"pos":[8739,8770],"content":"The key of the entry to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the entry to remove.","pos":[0,31]}]},{"pos":[9362,9473],"content":"When implemented in a derived class, attempts to remove all entries with a matching endpoint ID from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, attempts to remove all entries with a matching endpoint ID from the cache.","pos":[0,111]}]},{"pos":[9631,9675],"content":"The endpoint ID for which to remove entries.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint ID for which to remove entries.","pos":[0,44]}]},{"pos":[10337,10429],"content":"When implemented in a derived class, attempts to remove all matching entries from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, attempts to remove all matching entries from the cache.","pos":[0,92]}]},{"pos":[10618,10662],"content":"The endpoint ID for which to remove entries.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint ID for which to remove entries.","pos":[0,44]}]},{"pos":[10734,10777],"content":"The context ID for which to remove entries.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context ID for which to remove entries.","pos":[0,43]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  id: SessionSecurityTokenCache\n  children:\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)\n  langs:\n  - csharp\n  name: SessionSecurityTokenCache\n  nameWithType: SessionSecurityTokenCache\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  type: Class\n  summary: Defines an abstract class for a cache of session security tokens.\n  syntax:\n    content: 'public abstract class SessionSecurityTokenCache : System.IdentityModel.Configuration.ICustomIdentityConfiguration'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IdentityModel.Configuration.ICustomIdentityConfiguration\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: SessionSecurityTokenCache()\n  nameWithType: SessionSecurityTokenCache.SessionSecurityTokenCache()\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.SessionSecurityTokenCache()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"></xref> class.\n  syntax:\n    content: protected SessionSecurityTokenCache ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)\n  id: AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: AddOrUpdate(SessionSecurityTokenCacheKey,SessionSecurityToken,DateTime)\n  nameWithType: SessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey,SessionSecurityToken,DateTime)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey,SessionSecurityToken,DateTime)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, attempts to add an entry to the cache or update an existing one.\n  syntax:\n    content: public abstract void AddOrUpdate (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key, System.IdentityModel.Tokens.SessionSecurityToken value, DateTime expiryTime);\n    parameters:\n    - id: key\n      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey\n      description: The key of the entry to be added or updated.\n    - id: value\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The token associated with the entry.\n    - id: expiryTime\n      type: System.DateTime\n      description: The expiration time of the entry.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  id: Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: Get(SessionSecurityTokenCacheKey)\n  nameWithType: SessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, attempts to retrieve an entry from the cache.\n  syntax:\n    content: public abstract System.IdentityModel.Tokens.SessionSecurityToken Get (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key);\n    parameters:\n    - id: key\n      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey\n      description: The key of the entry to retrieve.\n    return:\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The session token associated with the key or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if no match is found.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.Get*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)\n  id: GetAll(System.String,System.Xml.UniqueId)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: GetAll(String,UniqueId)\n  nameWithType: SessionSecurityTokenCache.GetAll(String,UniqueId)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(String,UniqueId)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, retrieves all of the tokens associated with a key.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SessionSecurityToken> GetAll (string endpointId, System.Xml.UniqueId contextId);\n    parameters:\n    - id: endpointId\n      type: System.String\n      description: The endpoint ID to search for.\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The context ID to search for.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SessionSecurityToken}\n      description: The collection of session tokens associated with the key.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  id: LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SessionSecurityTokenCache.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, loads custom configuration from XML.\n  remarks: By default, this method throws a <xref:System.NotImplementedException>.\n  syntax:\n    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);\n    parameters:\n    - id: nodelist\n      type: System.Xml.XmlNodeList\n      description: The custom configuration elements.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  id: Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: Remove(SessionSecurityTokenCacheKey)\n  nameWithType: SessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When implemented in a derived class, attempts to remove an entry from the cache.\n  syntax:\n    content: public abstract void Remove (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key);\n    parameters:\n    - id: key\n      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey\n      description: The key of the entry to remove.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)\n  id: RemoveAll(System.String)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: RemoveAll(String)\n  nameWithType: SessionSecurityTokenCache.RemoveAll(String)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When implemented in a derived class, attempts to remove all entries with a matching endpoint ID from the cache.\n  syntax:\n    content: public abstract void RemoveAll (string endpointId);\n    parameters:\n    - id: endpointId\n      type: System.String\n      description: The endpoint ID for which to remove entries.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)\n  id: RemoveAll(System.String,System.Xml.UniqueId)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: RemoveAll(String,UniqueId)\n  nameWithType: SessionSecurityTokenCache.RemoveAll(String,UniqueId)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(String,UniqueId)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When implemented in a derived class, attempts to remove all matching entries from the cache.\n  syntax:\n    content: public abstract void RemoveAll (string endpointId, System.Xml.UniqueId contextId);\n    parameters:\n    - id: endpointId\n      type: System.String\n      description: The endpoint ID for which to remove entries.\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The context ID for which to remove entries.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: SessionSecurityTokenCache()\n  nameWithType: SessionSecurityTokenCache.SessionSecurityTokenCache()\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.SessionSecurityTokenCache()\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: AddOrUpdate(SessionSecurityTokenCacheKey,SessionSecurityToken,DateTime)\n  nameWithType: SessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey,SessionSecurityToken,DateTime)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey,SessionSecurityToken,DateTime)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SessionSecurityTokenCacheKey\n  nameWithType: SessionSecurityTokenCacheKey\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey\n- uid: System.IdentityModel.Tokens.SessionSecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SessionSecurityToken\n  nameWithType: SessionSecurityToken\n  fullName: System.IdentityModel.Tokens.SessionSecurityToken\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: Get(SessionSecurityTokenCacheKey)\n  nameWithType: SessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: GetAll(String,UniqueId)\n  nameWithType: SessionSecurityTokenCache.GetAll(String,UniqueId)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(String,UniqueId)\n- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SessionSecurityToken}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<SessionSecurityToken>\n  nameWithType: IEnumerable<SessionSecurityToken>\n  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SessionSecurityToken>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.IdentityModel.Tokens.SessionSecurityToken>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SessionSecurityToken\n    name: SessionSecurityToken\n    nameWithType: SessionSecurityToken\n    fullName: SessionSecurityToken\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.UniqueId\n  parent: System.Xml\n  isExternal: true\n  name: UniqueId\n  nameWithType: UniqueId\n  fullName: System.Xml.UniqueId\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SessionSecurityTokenCache.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(XmlNodeList)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: Remove(SessionSecurityTokenCacheKey)\n  nameWithType: SessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: RemoveAll(String)\n  nameWithType: SessionSecurityTokenCache.RemoveAll(String)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(String)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: RemoveAll(String,UniqueId)\n  nameWithType: SessionSecurityTokenCache.RemoveAll(String,UniqueId)\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(String,UniqueId)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: SessionSecurityTokenCache\n  nameWithType: SessionSecurityTokenCache.SessionSecurityTokenCache\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: AddOrUpdate\n  nameWithType: SessionSecurityTokenCache.AddOrUpdate\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Get*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: Get\n  nameWithType: SessionSecurityTokenCache.Get\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: GetAll\n  nameWithType: SessionSecurityTokenCache.GetAll\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: LoadCustomConfiguration\n  nameWithType: SessionSecurityTokenCache.LoadCustomConfiguration\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: Remove\n  nameWithType: SessionSecurityTokenCache.Remove\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: RemoveAll\n  nameWithType: SessionSecurityTokenCache.RemoveAll\n"}