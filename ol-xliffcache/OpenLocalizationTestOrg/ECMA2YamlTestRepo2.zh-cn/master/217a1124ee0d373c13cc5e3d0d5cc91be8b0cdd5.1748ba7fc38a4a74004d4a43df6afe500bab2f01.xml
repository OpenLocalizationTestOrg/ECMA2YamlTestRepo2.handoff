{"nodes":[{"pos":[1992,2123],"content":"Serializes and deserializes <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects into and from XML documents.","needQuote":true,"needEscape":true,"source":"Serializes and deserializes <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> objects into and from XML documents."},{"pos":[2136,3532],"content":"XML serialization is the process of converting an object's public properties and fields to a serial format (in this case, XML) for storage or transport. Deserialization re-creates the object in its original state from the XML.       The SamlSerializer class serializes and deserializes SAML security tokens, which have an extensible format. Unlike many other security tokens, <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens include XML elements and attributes that can be customized for an application's needs. Some of the extensibility points for a SAML assertion include the `<saml:Advice>`, `<saml:Condition>`, and `<saml:Statement>` elements. For more details about overriding how each of these elements are read, see the <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, <xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, and <xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> methods.","needQuote":false,"needEscape":true,"nodes":[{"content":"XML serialization is the process of converting an object's public properties and fields to a serial format (in this case, XML) for storage or transport.","pos":[0,152]},{"content":"Deserialization re-creates the object in its original state from the XML.","pos":[153,226]},{"content":"The SamlSerializer class serializes and deserializes SAML security tokens, which have an extensible format.","pos":[233,340]},{"content":"Unlike many other security tokens, &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security tokens include XML elements and attributes that can be customized for an application's needs.","pos":[341,531],"source":" Unlike many other security tokens, <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens include XML elements and attributes that can be customized for an application's needs."},{"content":"Some of the extensibility points for a SAML assertion include the <ph id=\"ph1\">`&lt;saml:Advice&gt;`</ph>, <ph id=\"ph2\">`&lt;saml:Condition&gt;`</ph>, and <ph id=\"ph3\">`&lt;saml:Statement&gt;`</ph> elements.","pos":[532,667],"source":" Some of the extensibility points for a SAML assertion include the `<saml:Advice>`, `<saml:Condition>`, and `<saml:Statement>` elements."},{"content":"For more details about overriding how each of these elements are read, see the &lt;xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt;, &lt;xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt;, and &lt;xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt; methods.","pos":[668,1394],"source":" For more details about overriding how each of these elements are read, see the <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, <xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, and <xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> methods."}]},{"pos":[4080,4184],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> class."},{"pos":[5220,5444],"content":"Reads the additional information provided by the SAML authority within a<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ &amp;lt;saml:Advice&amp;gt;\" name=\" &amp;lt;saml:Advice&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element of a SAML assertion using the specified XML reader.","needQuote":true,"needEscape":true,"source":"Reads the additional information provided by the SAML authority within a<xref uid=\"langword_csharp_ &lt;saml:Advice&gt;\" name=\" &lt;saml:Advice&gt;\" href=\"\"></xref> element of a SAML assertion using the specified XML reader."},{"pos":[5456,5712],"content":"The `<saml:Advice>` element within a SAML assertion is an extension point for SAML tokens. To create a serializer that can read the custom attributes, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadAdvice method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`&lt;saml:Advice&gt;`</ph> element within a SAML assertion is an extension point for SAML tokens.","pos":[0,90],"source":"The `<saml:Advice>` element within a SAML assertion is an extension point for SAML tokens."},{"content":"To create a serializer that can read the custom attributes, derive a class from &lt;xref:System.IdentityModel.Tokens.SamlSerializer&gt; and override the LoadAdvice method.","pos":[91,256],"source":" To create a serializer that can read the custom attributes, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadAdvice method."}]},{"pos":[6088,6195],"content":"An <xref:System.Xml.XmlDictionaryReader> to read the additional information provided by the SAML authority.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the additional information provided by the SAML authority.","pos":[0,107],"source":"An <xref:System.Xml.XmlDictionaryReader> to read the additional information provided by the SAML authority."}]},{"pos":[6310,6502],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that reads the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clause of the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature."},{"pos":[6620,6766],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature."},{"pos":[6849,7108],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAdvice\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains additional information provided by the SAML authority within a<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_ &amp;lt;saml:Advice&amp;gt;\" name=\" &amp;lt;saml:Advice&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element of a SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlAdvice\"></xref> that contains additional information provided by the SAML authority within a<xref uid=\"langword_csharp_ &lt;saml:Advice&gt;\" name=\" &lt;saml:Advice&gt;\" href=\"\"></xref> element of a SAML assertion."},{"pos":[7292,7375],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>"},{"pos":[8279,8332],"content":"Reads a SAML assertion from the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a SAML assertion from the specified XML reader.","pos":[0,53]}]},{"pos":[8345,8687],"content":"A SAML assertion is contained within a `<saml:Assertion>` element.       The <xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the LoadAssertion method to read the SAML assertion.","needQuote":false,"needEscape":true,"nodes":[{"content":"A SAML assertion is contained within a <ph id=\"ph1\">`&lt;saml:Assertion&gt;`</ph> element.","pos":[0,66],"source":"A SAML assertion is contained within a `<saml:Assertion>` element."},{"content":"The &lt;xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt; method calls the LoadAssertion method to read the SAML assertion.","pos":[73,340],"source":"       The <xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the LoadAssertion method to read the SAML assertion."}]},{"pos":[9070,9138],"content":"An <xref:System.Xml.XmlDictionaryReader> to read the SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the SAML assertion.","pos":[0,68],"source":"An <xref:System.Xml.XmlDictionaryReader> to read the SAML assertion."}]},{"pos":[9253,9445],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that reads the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clause of the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature."},{"pos":[9563,9709],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature."},{"pos":[9795,9895],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAssertion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlAssertion\"></xref> that represents the SAML assertion."},{"pos":[10082,10165],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>"},{"pos":[11069,11159],"content":"Reads an attribute of the subject of a SAML security token using the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads an attribute of the subject of a SAML security token using the specified XML reader.","pos":[0,90]}]},{"pos":[11171,11712],"content":"When an application defines its own set of attributes, which is possible because SAML attributes is an extensibility point, a serializer that understands how to read those attributes is needed. A SAML attribute is different than an XML attribute. A SAML attribute is contained within a `<saml:Attribute>` element and can contain any well-formed XML, not just an attribute. To create a serializer that can read the custom attributes, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadAttribute method.","needQuote":true,"needEscape":true,"nodes":[{"content":"When an application defines its own set of attributes, which is possible because SAML attributes is an extensibility point, a serializer that understands how to read those attributes is needed.","pos":[0,193]},{"content":"A SAML attribute is different than an XML attribute.","pos":[194,246]},{"content":"A SAML attribute is contained within a <ph id=\"ph1\">`&lt;saml:Attribute&gt;`</ph> element and can contain any well-formed XML, not just an attribute.","pos":[247,372],"source":" A SAML attribute is contained within a `<saml:Attribute>` element and can contain any well-formed XML, not just an attribute."},{"content":"To create a serializer that can read the custom attributes, derive a class from &lt;xref:System.IdentityModel.Tokens.SamlSerializer&gt; and override the LoadAttribute method.","pos":[373,541],"source":" To create a serializer that can read the custom attributes, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadAttribute method."}]},{"pos":[12094,12158],"content":"An <xref:System.Xml.XmlDictionaryReader> to read the attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the attributes.","pos":[0,64],"source":"An <xref:System.Xml.XmlDictionaryReader> to read the attributes."}]},{"pos":[12273,12465],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that reads the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clause of the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature."},{"pos":[12583,12729],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature."},{"pos":[12815,12965],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents a claim that is an attribute of the subject of a SAML security token.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlAttribute\"></xref> that represents a claim that is an attribute of the subject of a SAML security token."},{"pos":[13956,14085],"content":"Reads a condition that must be taken into account when assessing the validity of a SAML assertion using the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a condition that must be taken into account when assessing the validity of a SAML assertion using the specified XML reader.","pos":[0,129]}]},{"pos":[14097,14474],"content":"When an application defines its own set of conditions, which is possible because the `<saml:Condition>` element is an extensibility point, a serializer that understands how to read those conditions is needed. To create a serializer that can read the custom attributes, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadCondition method.","needQuote":true,"needEscape":true,"nodes":[{"content":"When an application defines its own set of conditions, which is possible because the <ph id=\"ph1\">`&lt;saml:Condition&gt;`</ph> element is an extensibility point, a serializer that understands how to read those conditions is needed.","pos":[0,208],"source":"When an application defines its own set of conditions, which is possible because the `<saml:Condition>` element is an extensibility point, a serializer that understands how to read those conditions is needed."},{"content":"To create a serializer that can read the custom attributes, derive a class from &lt;xref:System.IdentityModel.Tokens.SamlSerializer&gt; and override the LoadCondition method.","pos":[209,377],"source":" To create a serializer that can read the custom attributes, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadCondition method."}]},{"pos":[14856,14924],"content":"An <xref:System.Xml.XmlDictionaryReader> to read the SAML condition.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the SAML condition.","pos":[0,68],"source":"An <xref:System.Xml.XmlDictionaryReader> to read the SAML condition."}]},{"pos":[15039,15231],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that reads the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clause of the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature."},{"pos":[15349,15495],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature."},{"pos":[15581,15753],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies a condition that must be taken into account when assessing the validity of a SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlCondition\"></xref> that specifies a condition that must be taken into account when assessing the validity of a SAML assertion."},{"pos":[15940,16024],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16933,17070],"content":"Reads a set of conditions that must be taken into account when assessing the validity of a SAML assertion using the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a set of conditions that must be taken into account when assessing the validity of a SAML assertion using the specified XML reader.","pos":[0,137]}]},{"pos":[17082,17160],"content":"The LoadConditions method reads the contents of a <ph id=\"ph1\">`&lt;saml:Conditions&gt;`</ph> element.","needQuote":true,"needEscape":true,"source":"The LoadConditions method reads the contents of a `<saml:Conditions>` element."},{"pos":[17544,17613],"content":"An <xref:System.Xml.XmlDictionaryReader> to read the SAML conditions.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the SAML conditions.","pos":[0,69],"source":"An <xref:System.Xml.XmlDictionaryReader> to read the SAML conditions."}]},{"pos":[17728,17920],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that reads the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clause of the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature."},{"pos":[18038,18184],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature."},{"pos":[18271,18452],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlConditions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies a set of conditions that must be taken into account when assessing the validity of a SAML assertion.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlConditions\"></xref> that specifies a set of conditions that must be taken into account when assessing the validity of a SAML assertion."},{"pos":[18640,18724],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19628,19682],"content":"Reads a SAML statement using the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a SAML statement using the specified XML reader.","pos":[0,54]}]},{"pos":[19695,20632],"content":"<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens specify their claims using SAML assertions where the details of the claims are specified in SAML statements. The SAML specification defines the following statement types:      -   <xref:System.IdentityModel.Tokens.SamlAttributeStatement>      -   <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>      -   <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>      -   <xref:System.IdentityModel.Tokens.SamlSubjectStatement>       The LoadStatement method reads the SAML statements listed previously. When custom statements are defined and used by an application, create a serializer to read the contents of them. To create the custom serializer, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadStatement method. Custom SAML statements are contained within a `<saml:Statement>` element.","needQuote":false,"needEscape":true,"nodes":[{"content":"&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security tokens specify their claims using SAML assertions where the details of the claims are specified in SAML statements.","pos":[0,177],"source":"<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens specify their claims using SAML assertions where the details of the claims are specified in SAML statements."},{"content":"The SAML specification defines the following statement types:      -   &lt;xref:System.IdentityModel.Tokens.SamlAttributeStatement&gt;      -   &lt;xref:System.IdentityModel.Tokens.SamlAuthenticationStatement&gt;      -   &lt;xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&gt;      -   &lt;xref:System.IdentityModel.Tokens.SamlSubjectStatement&gt;       The LoadStatement method reads the SAML statements listed previously.","pos":[178,598],"source":" The SAML specification defines the following statement types:      -   <xref:System.IdentityModel.Tokens.SamlAttributeStatement>      -   <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>      -   <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>      -   <xref:System.IdentityModel.Tokens.SamlSubjectStatement>       The LoadStatement method reads the SAML statements listed previously."},{"content":"When custom statements are defined and used by an application, create a serializer to read the contents of them.","pos":[599,711]},{"content":"To create the custom serializer, derive a class from &lt;xref:System.IdentityModel.Tokens.SamlSerializer&gt; and override the LoadStatement method.","pos":[712,853],"source":" To create the custom serializer, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadStatement method."},{"content":"Custom SAML statements are contained within a <ph id=\"ph1\">`&lt;saml:Statement&gt;`</ph> element.","pos":[854,927],"source":" Custom SAML statements are contained within a `<saml:Statement>` element."}]},{"pos":[21360,21428],"content":"An <xref:System.Xml.XmlDictionaryReader> to read the SAML statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the SAML statement.","pos":[0,68],"source":"An <xref:System.Xml.XmlDictionaryReader> to read the SAML statement."}]},{"pos":[21543,21735],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that reads the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clause of the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature."},{"pos":[21853,21999],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature."},{"pos":[22085,22185],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the SAML statement.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlStatement\"></xref> that represents the SAML statement."},{"pos":[22372,22456],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[23006,23158],"content":"Replaces the default set of XML elements and attributes that are recognized by this serializer with the specified dictionary of elements and attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces the default set of XML elements and attributes that are recognized by this serializer with the specified dictionary of elements and attributes.","pos":[0,152]}]},{"pos":[23170,24156],"content":"Use the PopulateDictionary method when a custom set of XML elements is defined for one of the extensibility points of a SAML assertion. Extensibility points for a SAML assertion include the `<saml:Advice>`, `<saml:Condition>`, and `<saml:Statement>` elements. For more details about overriding how each of these elements are read, see the <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, <xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, and <xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the PopulateDictionary method when a custom set of XML elements is defined for one of the extensibility points of a SAML assertion.","pos":[0,135]},{"content":"Extensibility points for a SAML assertion include the <ph id=\"ph1\">`&lt;saml:Advice&gt;`</ph>, <ph id=\"ph2\">`&lt;saml:Condition&gt;`</ph>, and <ph id=\"ph3\">`&lt;saml:Statement&gt;`</ph> elements.","pos":[136,259],"source":" Extensibility points for a SAML assertion include the `<saml:Advice>`, `<saml:Condition>`, and `<saml:Statement>` elements."},{"content":"For more details about overriding how each of these elements are read, see the &lt;xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt;, &lt;xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt;, and &lt;xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt; methods.","pos":[260,986],"source":" For more details about overriding how each of these elements are read, see the <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, <xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, and <xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> methods."}]},{"pos":[24345,24434],"content":"An <xref:System.Xml.IXmlDictionary> that contains the set of XML elements and attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.IXmlDictionary&gt; that contains the set of XML elements and attributes.","pos":[0,89],"source":"An <xref:System.Xml.IXmlDictionary> that contains the set of XML elements and attributes."}]},{"pos":[25360,25418],"content":"Reads a SAML security token from the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a SAML security token from the specified XML reader.","pos":[0,58]}]},{"pos":[25430,25707],"content":"The ReadToken method calls the <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method to read the SAML assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ReadToken method calls the &lt;xref:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt; method to read the SAML assertion.","pos":[0,277],"source":"The ReadToken method calls the <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method to read the SAML assertion."}]},{"pos":[26069,26204],"content":"An &lt;xref:System.Xml.XmlDictionaryReader&gt; to read the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token.","needQuote":true,"needEscape":true,"source":"An <xref:System.Xml.XmlDictionaryReader> to read the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token."},{"pos":[26319,26511],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that reads the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clause of the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature."},{"pos":[26629,26775],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines the security token that created the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature."},{"pos":[26865,26949],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token."},{"pos":[27132,27215],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>"},{"pos":[27328,27415],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> refers to an XML element that does not contain a digital signature.","needQuote":true,"needEscape":true,"source":"<code>reader</code> refers to an XML element that does not contain a digital signature."},{"pos":[28228,28303],"content":"Writes the specified SAML security token into the specified XML serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes the specified SAML security token into the specified XML serializer.","pos":[0,75]}]},{"pos":[28315,28708],"content":"Use the WriteToken method to serialize a <xref:System.IdentityModel.Tokens.SamlSecurityToken> security token. To deserialize a <xref:System.IdentityModel.Tokens.SamlSecurityToken> use the <xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the WriteToken method to serialize a <xref:System.IdentityModel.Tokens.SamlSecurityToken> security token. To deserialize a <xref:System.IdentityModel.Tokens.SamlSecurityToken> use the <xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.","pos":[0,393],"nodes":[{"content":"Use the WriteToken method to serialize a &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security token.","pos":[0,109],"source":"Use the WriteToken method to serialize a <xref:System.IdentityModel.Tokens.SamlSecurityToken> security token."},{"content":"To deserialize a &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; use the &lt;xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29&gt; method.","pos":[110,393],"source":" To deserialize a <xref:System.IdentityModel.Tokens.SamlSecurityToken> use the <xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method."}]}]},{"pos":[29030,29110],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to write.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> to write."},{"pos":[29180,29263],"content":"An <xref:System.Xml.XmlDictionaryWriter> to write the SAML authorization statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Xml.XmlDictionaryWriter&gt; to write the SAML authorization statement.","pos":[0,83],"source":"An <xref:System.Xml.XmlDictionaryWriter> to write the SAML authorization statement."}]},{"pos":[29378,29558],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is capable of writing <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> clauses.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that is capable of writing <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clauses."},{"pos":[29743,29942],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>       -or-       <ph id=\"ph2\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>","needQuote":false,"needEscape":true,"source":"<code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>       -or-       <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SamlSerializer\n  id: SamlSerializer\n  children:\n  - System.IdentityModel.Tokens.SamlSerializer.#ctor\n  - System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)\n  - System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  langs:\n  - csharp\n  name: SamlSerializer\n  nameWithType: SamlSerializer\n  fullName: System.IdentityModel.Tokens.SamlSerializer\n  type: Class\n  summary: Serializes and deserializes <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> objects into and from XML documents.\n  remarks: \"XML serialization is the process of converting an object's public properties and fields to a serial format (in this case, XML) for storage or transport. Deserialization re-creates the object in its original state from the XML.  \\n  \\n The SamlSerializer class serializes and deserializes SAML security tokens, which have an extensible format. Unlike many other security tokens, <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens include XML elements and attributes that can be customized for an application's needs. Some of the extensibility points for a SAML assertion include the `<saml:Advice>`, `<saml:Condition>`, and `<saml:Statement>` elements. For more details about overriding how each of these elements are read, see the <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, <xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, and <xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> methods.\"\n  syntax:\n    content: public class SamlSerializer\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlSerializer.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  langs:\n  - csharp\n  name: SamlSerializer()\n  nameWithType: SamlSerializer.SamlSerializer()\n  fullName: System.IdentityModel.Tokens.SamlSerializer.SamlSerializer()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SamlSerializer\"></xref> class.\n  syntax:\n    content: public SamlSerializer ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SamlSerializer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  langs:\n  - csharp\n  name: LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads the additional information provided by the SAML authority within a<xref uid=\"langword_csharp_ &lt;saml:Advice&gt;\" name=\" &lt;saml:Advice&gt;\" href=\"\"></xref> element of a SAML assertion using the specified XML reader.\n  remarks: The `<saml:Advice>` element within a SAML assertion is an extension point for SAML tokens. To create a serializer that can read the custom attributes, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadAdvice method.\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SamlAdvice LoadAdvice (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref:System.Xml.XmlDictionaryReader> to read the additional information provided by the SAML authority.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature.\n    return:\n      type: System.IdentityModel.Tokens.SamlAdvice\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlAdvice\"></xref> that contains additional information provided by the SAML authority within a<xref uid=\"langword_csharp_ &lt;saml:Advice&gt;\" name=\" &lt;saml:Advice&gt;\" href=\"\"></xref> element of a SAML assertion.\n  overload: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  langs:\n  - csharp\n  name: LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads a SAML assertion from the specified XML reader.\n  remarks: \"A SAML assertion is contained within a `<saml:Assertion>` element.  \\n  \\n The <xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the LoadAssertion method to read the SAML assertion.\"\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SamlAssertion LoadAssertion (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref:System.Xml.XmlDictionaryReader> to read the SAML assertion.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature.\n    return:\n      type: System.IdentityModel.Tokens.SamlAssertion\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlAssertion\"></xref> that represents the SAML assertion.\n  overload: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  langs:\n  - csharp\n  name: LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads an attribute of the subject of a SAML security token using the specified XML reader.\n  remarks: When an application defines its own set of attributes, which is possible because SAML attributes is an extensibility point, a serializer that understands how to read those attributes is needed. A SAML attribute is different than an XML attribute. A SAML attribute is contained within a `<saml:Attribute>` element and can contain any well-formed XML, not just an attribute. To create a serializer that can read the custom attributes, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadAttribute method.\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SamlAttribute LoadAttribute (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref:System.Xml.XmlDictionaryReader> to read the attributes.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature.\n    return:\n      type: System.IdentityModel.Tokens.SamlAttribute\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlAttribute\"></xref> that represents a claim that is an attribute of the subject of a SAML security token.\n  overload: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  langs:\n  - csharp\n  name: LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads a condition that must be taken into account when assessing the validity of a SAML assertion using the specified XML reader.\n  remarks: When an application defines its own set of conditions, which is possible because the `<saml:Condition>` element is an extensibility point, a serializer that understands how to read those conditions is needed. To create a serializer that can read the custom attributes, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadCondition method.\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SamlCondition LoadCondition (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref:System.Xml.XmlDictionaryReader> to read the SAML condition.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature.\n    return:\n      type: System.IdentityModel.Tokens.SamlCondition\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlCondition\"></xref> that specifies a condition that must be taken into account when assessing the validity of a SAML assertion.\n  overload: System.IdentityModel.Tokens.SamlSerializer.LoadCondition*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  langs:\n  - csharp\n  name: LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads a set of conditions that must be taken into account when assessing the validity of a SAML assertion using the specified XML reader.\n  remarks: The LoadConditions method reads the contents of a `<saml:Conditions>` element.\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SamlConditions LoadConditions (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref:System.Xml.XmlDictionaryReader> to read the SAML conditions.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature.\n    return:\n      type: System.IdentityModel.Tokens.SamlConditions\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlConditions\"></xref> that specifies a set of conditions that must be taken into account when assessing the validity of a SAML assertion.\n  overload: System.IdentityModel.Tokens.SamlSerializer.LoadConditions*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  langs:\n  - csharp\n  name: LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads a SAML statement using the specified XML reader.\n  remarks: \"<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens specify their claims using SAML assertions where the details of the claims are specified in SAML statements. The SAML specification defines the following statement types:  \\n  \\n-   <xref:System.IdentityModel.Tokens.SamlAttributeStatement>  \\n  \\n-   <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>  \\n  \\n-   <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>  \\n  \\n-   <xref:System.IdentityModel.Tokens.SamlSubjectStatement>  \\n  \\n The LoadStatement method reads the SAML statements listed previously. When custom statements are defined and used by an application, create a serializer to read the contents of them. To create the custom serializer, derive a class from <xref:System.IdentityModel.Tokens.SamlSerializer> and override the LoadStatement method. Custom SAML statements are contained within a `<saml:Statement>` element.\"\n  example:\n  - \"<xref:System.IdentityModel.Tokens.SamlAttributeStatement>  \\n  \\n <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>  \\n  \\n <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>  \\n  \\n <xref:System.IdentityModel.Tokens.SamlSubjectStatement>  \\n  \\n <xref:System.IdentityModel.Tokens.SamlStatement>\"\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SamlStatement LoadStatement (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref:System.Xml.XmlDictionaryReader> to read the SAML statement.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature.\n    return:\n      type: System.IdentityModel.Tokens.SamlStatement\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlStatement\"></xref> that represents the SAML statement.\n  overload: System.IdentityModel.Tokens.SamlSerializer.LoadStatement*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)\n  id: PopulateDictionary(System.Xml.IXmlDictionary)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  langs:\n  - csharp\n  name: PopulateDictionary(IXmlDictionary)\n  nameWithType: SamlSerializer.PopulateDictionary(IXmlDictionary)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(IXmlDictionary)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Replaces the default set of XML elements and attributes that are recognized by this serializer with the specified dictionary of elements and attributes.\n  remarks: Use the PopulateDictionary method when a custom set of XML elements is defined for one of the extensibility points of a SAML assertion. Extensibility points for a SAML assertion include the `<saml:Advice>`, `<saml:Condition>`, and `<saml:Statement>` elements. For more details about overriding how each of these elements are read, see the <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, <xref:System.IdentityModel.Tokens.SamlSerializer.LoadCondition%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>, and <xref:System.IdentityModel.Tokens.SamlSerializer.LoadStatement%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> methods.\n  syntax:\n    content: public void PopulateDictionary (System.Xml.IXmlDictionary dictionary);\n    parameters:\n    - id: dictionary\n      type: System.Xml.IXmlDictionary\n      description: An <xref:System.Xml.IXmlDictionary> that contains the set of XML elements and attributes.\n  overload: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  langs:\n  - csharp\n  name: ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads a SAML security token from the specified XML reader.\n  remarks: The ReadToken method calls the <xref:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method to read the SAML assertion.\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SamlSecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An <xref:System.Xml.XmlDictionaryReader> to read the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that reads the <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clause of the digital signature.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that determines the security token that created the digital signature.\n    return:\n      type: System.IdentityModel.Tokens.SamlSecurityToken\n      description: A <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token.\n  overload: System.IdentityModel.Tokens.SamlSerializer.ReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: <code>reader</code> refers to an XML element that does not contain a digital signature.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  id: WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  langs:\n  - csharp\n  name: WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)\n  nameWithType: SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Writes the specified SAML security token into the specified XML serializer.\n  remarks: Use the WriteToken method to serialize a <xref:System.IdentityModel.Tokens.SamlSecurityToken> security token. To deserialize a <xref:System.IdentityModel.Tokens.SamlSecurityToken> use the <xref:System.IdentityModel.Tokens.SamlSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.\n  syntax:\n    content: public virtual void WriteToken (System.IdentityModel.Tokens.SamlSecurityToken token, System.Xml.XmlWriter writer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SamlSecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> to write.\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: An <xref:System.Xml.XmlDictionaryWriter> to write the SAML authorization statement.\n    - id: keyInfoSerializer\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> that is capable of writing <xref uid=\"langword_csharp_KeyInfo\" name=\"KeyInfo\" href=\"\"></xref> clauses.\n  overload: System.IdentityModel.Tokens.SamlSerializer.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>writer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>  \\n  \\n -or-  \\n  \\n <code>token</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>\"\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.IdentityModel.Tokens.SamlSerializer.#ctor\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: SamlSerializer()\n  nameWithType: SamlSerializer.SamlSerializer()\n  fullName: System.IdentityModel.Tokens.SamlSerializer.SamlSerializer()\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SamlAdvice\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlAdvice\n  nameWithType: SamlAdvice\n  fullName: System.IdentityModel.Tokens.SamlAdvice\n- uid: System.Xml.XmlDictionaryReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlDictionaryReader\n  nameWithType: XmlDictionaryReader\n  fullName: System.Xml.XmlDictionaryReader\n- uid: System.IdentityModel.Selectors.SecurityTokenSerializer\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenSerializer\n  nameWithType: SecurityTokenSerializer\n  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SamlAssertion\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlAssertion\n  nameWithType: SamlAssertion\n  fullName: System.IdentityModel.Tokens.SamlAssertion\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SamlAttribute\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlAttribute\n  nameWithType: SamlAttribute\n  fullName: System.IdentityModel.Tokens.SamlAttribute\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadCondition(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SamlCondition\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlCondition\n  nameWithType: SamlCondition\n  fullName: System.IdentityModel.Tokens.SamlCondition\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadConditions(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SamlConditions\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlConditions\n  nameWithType: SamlConditions\n  fullName: System.IdentityModel.Tokens.SamlConditions\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.LoadStatement(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SamlStatement\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlStatement\n  nameWithType: SamlStatement\n  fullName: System.IdentityModel.Tokens.SamlStatement\n- uid: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: PopulateDictionary(IXmlDictionary)\n  nameWithType: SamlSerializer.PopulateDictionary(IXmlDictionary)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(IXmlDictionary)\n- uid: System.Xml.IXmlDictionary\n  parent: System.Xml\n  isExternal: true\n  name: IXmlDictionary\n  nameWithType: IXmlDictionary\n  fullName: System.Xml.IXmlDictionary\n- uid: System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n  nameWithType: SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.ReadToken(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SamlSecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SamlSecurityToken\n  nameWithType: SamlSecurityToken\n  fullName: System.IdentityModel.Tokens.SamlSecurityToken\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)\n  nameWithType: SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)\n  fullName: System.IdentityModel.Tokens.SamlSerializer.WriteToken(SamlSecurityToken,XmlWriter,SecurityTokenSerializer)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.SamlSerializer.#ctor*\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: SamlSerializer\n  nameWithType: SamlSerializer.SamlSerializer\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAdvice*\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadAdvice\n  nameWithType: SamlSerializer.LoadAdvice\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAssertion*\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadAssertion\n  nameWithType: SamlSerializer.LoadAssertion\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadAttribute*\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadAttribute\n  nameWithType: SamlSerializer.LoadAttribute\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadCondition*\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadCondition\n  nameWithType: SamlSerializer.LoadCondition\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadConditions*\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadConditions\n  nameWithType: SamlSerializer.LoadConditions\n- uid: System.IdentityModel.Tokens.SamlSerializer.LoadStatement*\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: LoadStatement\n  nameWithType: SamlSerializer.LoadStatement\n- uid: System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary*\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: PopulateDictionary\n  nameWithType: SamlSerializer.PopulateDictionary\n- uid: System.IdentityModel.Tokens.SamlSerializer.ReadToken*\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: ReadToken\n  nameWithType: SamlSerializer.ReadToken\n- uid: System.IdentityModel.Tokens.SamlSerializer.WriteToken*\n  parent: System.IdentityModel.Tokens.SamlSerializer\n  isExternal: false\n  name: WriteToken\n  nameWithType: SamlSerializer.WriteToken\n"}