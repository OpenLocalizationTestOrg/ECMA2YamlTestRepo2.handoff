{"nodes":[{"pos":[518,608],"content":"Provides a method for indicating which combinations of arguments are valid in an activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a method for indicating which combinations of arguments are valid in an activity.","pos":[0,90]}]},{"pos":[621,2223],"content":"Arguments can be grouped together to form valid overload groups. An overload group cannot be a subset or an equivalent set of another overload group. The only exception to this rule is a subset that contains only arguments where <xref:System.Activities.RuntimeArgument.IsRequired%2A> is `false`. Overload groups can overlap but it is an error if the intersection of the groups contains all the required arguments of one or both the overload groups.       An overload group is considered bound if all the <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments in the group are bound. If a group has zero <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments and at least one argument bound, then the group is considered bound. It is an error if none of the groups are bound unless one overload group has no <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments in it. Binding <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments from more than one overload group is not permitted. It is an error to have more than one overload group bound, that is, all required arguments in one overload group are bound and any argument in another overload group is also bound.       Any violation of the preceding rules results in a <xref:System.Activities.InvalidWorkflowException> being thrown when the containing activity is prepared for execution.       The <xref:System.Activities.RuntimeArgument.IsRequired%2A?displayProperty=fullName> is set to `true` if the <xref:System.Activities.RequiredArgumentAttribute?displayProperty=fullName> is applied to an argument.","needQuote":false,"needEscape":true,"nodes":[{"content":"Arguments can be grouped together to form valid overload groups.","pos":[0,64]},{"content":"An overload group cannot be a subset or an equivalent set of another overload group.","pos":[65,149]},{"content":"The only exception to this rule is a subset that contains only arguments where &lt;xref:System.Activities.RuntimeArgument.IsRequired%2A&gt; is <ph id=\"ph1\">`false`</ph>.","pos":[150,295],"source":" The only exception to this rule is a subset that contains only arguments where <xref:System.Activities.RuntimeArgument.IsRequired%2A> is `false`."},{"content":"Overload groups can overlap but it is an error if the intersection of the groups contains all the required arguments of one or both the overload groups.","pos":[296,448]},{"content":"An overload group is considered bound if all the &lt;xref:System.Activities.RuntimeArgument.IsRequired%2A&gt; arguments in the group are bound.","pos":[455,592],"source":"       An overload group is considered bound if all the <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments in the group are bound."},{"content":"If a group has zero &lt;xref:System.Activities.RuntimeArgument.IsRequired%2A&gt; arguments and at least one argument bound, then the group is considered bound.","pos":[593,746],"source":" If a group has zero <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments and at least one argument bound, then the group is considered bound."},{"content":"It is an error if none of the groups are bound unless one overload group has no &lt;xref:System.Activities.RuntimeArgument.IsRequired%2A&gt; arguments in it.","pos":[747,898],"source":" It is an error if none of the groups are bound unless one overload group has no <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments in it."},{"content":"Binding &lt;xref:System.Activities.RuntimeArgument.IsRequired%2A&gt; arguments from more than one overload group is not permitted.","pos":[899,1023],"source":" Binding <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments from more than one overload group is not permitted."},{"content":"It is an error to have more than one overload group bound, that is, all required arguments in one overload group are bound and any argument in another overload group is also bound.","pos":[1024,1204]},{"content":"Any violation of the preceding rules results in a &lt;xref:System.Activities.InvalidWorkflowException&gt; being thrown when the containing activity is prepared for execution.","pos":[1211,1379],"source":"       Any violation of the preceding rules results in a <xref:System.Activities.InvalidWorkflowException> being thrown when the containing activity is prepared for execution."},{"content":"The &lt;xref:System.Activities.RuntimeArgument.IsRequired%2A?displayProperty=fullName&gt; is set to <ph id=\"ph1\">`true`</ph> if the &lt;xref:System.Activities.RequiredArgumentAttribute?displayProperty=fullName&gt; is applied to an argument.","pos":[1386,1596],"source":"       The <xref:System.Activities.RuntimeArgument.IsRequired%2A?displayProperty=fullName> is set to `true` if the <xref:System.Activities.RequiredArgumentAttribute?displayProperty=fullName> is applied to an argument."}]},{"pos":[2908,3010],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.OverloadGroupAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.OverloadGroupAttribute\"></xref> class."},{"pos":[3647,3749],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.OverloadGroupAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.OverloadGroupAttribute\"></xref> class."},{"pos":[3904,3939],"content":"The name of the group of arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the group of arguments.","pos":[0,35]}]},{"pos":[4410,4493],"content":"Gets the name of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.OverloadGroupAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the name of the <xref href=\"System.Activities.OverloadGroupAttribute\"></xref>."},{"pos":[4612,4655],"content":"The name of the group of related arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the group of related arguments.","pos":[0,43]}]},{"pos":[5115,5159],"content":"Gets a unique identifier for this attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a unique identifier for this attribute.","pos":[0,44]}]},{"pos":[5279,5318],"content":"A unique identifier for this attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier for this attribute.","pos":[0,39]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.OverloadGroupAttribute\n  id: OverloadGroupAttribute\n  children:\n  - System.Activities.OverloadGroupAttribute.#ctor\n  - System.Activities.OverloadGroupAttribute.#ctor(System.String)\n  - System.Activities.OverloadGroupAttribute.GroupName\n  - System.Activities.OverloadGroupAttribute.TypeId\n  langs:\n  - csharp\n  name: OverloadGroupAttribute\n  nameWithType: OverloadGroupAttribute\n  fullName: System.Activities.OverloadGroupAttribute\n  type: Class\n  summary: Provides a method for indicating which combinations of arguments are valid in an activity.\n  remarks: \"Arguments can be grouped together to form valid overload groups. An overload group cannot be a subset or an equivalent set of another overload group. The only exception to this rule is a subset that contains only arguments where <xref:System.Activities.RuntimeArgument.IsRequired%2A> is `false`. Overload groups can overlap but it is an error if the intersection of the groups contains all the required arguments of one or both the overload groups.  \\n  \\n An overload group is considered bound if all the <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments in the group are bound. If a group has zero <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments and at least one argument bound, then the group is considered bound. It is an error if none of the groups are bound unless one overload group has no <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments in it. Binding <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments from more than one overload group is not permitted. It is an error to have more than one overload group bound, that is, all required arguments in one overload group are bound and any argument in another overload group is also bound.  \\n  \\n Any violation of the preceding rules results in a <xref:System.Activities.InvalidWorkflowException> being thrown when the containing activity is prepared for execution.  \\n  \\n The <xref:System.Activities.RuntimeArgument.IsRequired%2A?displayProperty=fullName> is set to `true` if the <xref:System.Activities.RequiredArgumentAttribute?displayProperty=fullName> is applied to an argument.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=true)]\n\n      public sealed class OverloadGroupAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.OverloadGroupAttribute.#ctor\n  id: '#ctor'\n  parent: System.Activities.OverloadGroupAttribute\n  langs:\n  - csharp\n  name: OverloadGroupAttribute()\n  nameWithType: OverloadGroupAttribute.OverloadGroupAttribute()\n  fullName: System.Activities.OverloadGroupAttribute.OverloadGroupAttribute()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.OverloadGroupAttribute\"></xref> class.\n  syntax:\n    content: public OverloadGroupAttribute ();\n    parameters: []\n  overload: System.Activities.OverloadGroupAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.OverloadGroupAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Activities.OverloadGroupAttribute\n  langs:\n  - csharp\n  name: OverloadGroupAttribute(String)\n  nameWithType: OverloadGroupAttribute.OverloadGroupAttribute(String)\n  fullName: System.Activities.OverloadGroupAttribute.OverloadGroupAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.OverloadGroupAttribute\"></xref> class.\n  syntax:\n    content: public OverloadGroupAttribute (string groupName);\n    parameters:\n    - id: groupName\n      type: System.String\n      description: The name of the group of arguments.\n  overload: System.Activities.OverloadGroupAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.OverloadGroupAttribute.GroupName\n  id: GroupName\n  parent: System.Activities.OverloadGroupAttribute\n  langs:\n  - csharp\n  name: GroupName\n  nameWithType: OverloadGroupAttribute.GroupName\n  fullName: System.Activities.OverloadGroupAttribute.GroupName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the name of the <xref href=\"System.Activities.OverloadGroupAttribute\"></xref>.\n  syntax:\n    content: public string GroupName { get; set; }\n    return:\n      type: System.String\n      description: The name of the group of related arguments.\n  overload: System.Activities.OverloadGroupAttribute.GroupName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.OverloadGroupAttribute.TypeId\n  id: TypeId\n  parent: System.Activities.OverloadGroupAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: OverloadGroupAttribute.TypeId\n  fullName: System.Activities.OverloadGroupAttribute.TypeId\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets a unique identifier for this attribute.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: A unique identifier for this attribute.\n  overload: System.Activities.OverloadGroupAttribute.TypeId*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Activities.OverloadGroupAttribute.#ctor\n  parent: System.Activities.OverloadGroupAttribute\n  isExternal: false\n  name: OverloadGroupAttribute()\n  nameWithType: OverloadGroupAttribute.OverloadGroupAttribute()\n  fullName: System.Activities.OverloadGroupAttribute.OverloadGroupAttribute()\n- uid: System.Activities.OverloadGroupAttribute.#ctor(System.String)\n  parent: System.Activities.OverloadGroupAttribute\n  isExternal: false\n  name: OverloadGroupAttribute(String)\n  nameWithType: OverloadGroupAttribute.OverloadGroupAttribute(String)\n  fullName: System.Activities.OverloadGroupAttribute.OverloadGroupAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.OverloadGroupAttribute.GroupName\n  parent: System.Activities.OverloadGroupAttribute\n  isExternal: false\n  name: GroupName\n  nameWithType: OverloadGroupAttribute.GroupName\n  fullName: System.Activities.OverloadGroupAttribute.GroupName\n- uid: System.Activities.OverloadGroupAttribute.TypeId\n  parent: System.Activities.OverloadGroupAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: OverloadGroupAttribute.TypeId\n  fullName: System.Activities.OverloadGroupAttribute.TypeId\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.OverloadGroupAttribute.#ctor*\n  parent: System.Activities.OverloadGroupAttribute\n  isExternal: false\n  name: OverloadGroupAttribute\n  nameWithType: OverloadGroupAttribute.OverloadGroupAttribute\n- uid: System.Activities.OverloadGroupAttribute.GroupName*\n  parent: System.Activities.OverloadGroupAttribute\n  isExternal: false\n  name: GroupName\n  nameWithType: OverloadGroupAttribute.GroupName\n- uid: System.Activities.OverloadGroupAttribute.TypeId*\n  parent: System.Activities.OverloadGroupAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: OverloadGroupAttribute.TypeId\n"}