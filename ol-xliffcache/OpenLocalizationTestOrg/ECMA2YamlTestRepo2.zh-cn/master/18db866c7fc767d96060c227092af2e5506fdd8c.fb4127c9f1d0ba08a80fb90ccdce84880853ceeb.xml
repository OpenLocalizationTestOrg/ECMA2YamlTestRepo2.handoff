{"nodes":[{"pos":[401,483],"content":"Indicates that the current interface implementer is a reference to another object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates that the current interface implementer is a reference to another object.","pos":[0,82]}]},{"pos":[1565,1678],"content":"Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.","pos":[0,113]}]},{"pos":[1691,3015],"content":"This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object. When the proxy-creator object is deserialized, deserialization calls its GetRealObject method. At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer. Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.       For example, consider how <xref:System.Type> objects are serialized. Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>. When both the type name and assembly name are available, the deserialization infrastructure calls GetRealObject on the holder object that has been transmitted. This holder returns the <xref:System.Type> object that is inserted into the graph.       This method is protected by a <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> specified.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object. When the proxy-creator object is deserialized, deserialization calls its GetRealObject method. At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer. Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.       For example, consider how <xref:System.Type> objects are serialized. Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>. When both the type name and assembly name are available, the deserialization infrastructure calls GetRealObject on the holder object that has been transmitted. This holder returns the <xref:System.Type> object that is inserted into the graph.       This method is protected by a <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> specified.","pos":[0,1320],"nodes":[{"content":"This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object.","pos":[0,111]},{"content":"When the proxy-creator object is deserialized, deserialization calls its GetRealObject method.","pos":[112,206]},{"content":"At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer.","pos":[207,367]},{"content":"Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.","pos":[368,457]},{"content":"For example, consider how &lt;xref:System.Type&gt; objects are serialized.","pos":[464,532],"source":"       For example, consider how <xref:System.Type> objects are serialized."},{"content":"Instead of transmitting the data from the &lt;xref:System.Type&gt; object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing &lt;xref:System.Runtime.Serialization.IObjectReference&gt;.","pos":[533,801],"source":" Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>."},{"content":"When both the type name and assembly name are available, the deserialization infrastructure calls GetRealObject on the holder object that has been transmitted.","pos":[802,961]},{"content":"This holder returns the &lt;xref:System.Type&gt; object that is inserted into the graph.","pos":[962,1044],"source":" This holder returns the <xref:System.Type> object that is inserted into the graph."},{"content":"This method is protected by a &lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt; for the &lt;xref:System.Security.Permissions.SecurityPermission&gt; with the &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; specified.","pos":[1051,1320],"source":"       This method is protected by a <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> specified."}]}]},{"pos":[3587,3690],"content":"The <xref:System.Runtime.Serialization.StreamingContext> from which the current object is deserialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; from which the current object is deserialized.","pos":[0,103],"source":"The <xref:System.Runtime.Serialization.StreamingContext> from which the current object is deserialized."}]},{"pos":[3748,3801],"content":"Returns the actual object that is put into the graph.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the actual object that is put into the graph.","pos":[0,53]}]},{"pos":[4001,4101],"content":"The caller does not have the required permission. The call will not work on a medium trusted server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the required permission. The call will not work on a medium trusted server.","pos":[0,100],"nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]},{"content":"The call will not work on a medium trusted server.","pos":[50,100]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.IObjectReference\n  id: IObjectReference\n  children:\n  - System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: IObjectReference\n  nameWithType: IObjectReference\n  fullName: System.Runtime.Serialization.IObjectReference\n  type: Interface\n  summary: Indicates that the current interface implementer is a reference to another object.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[IObjectReference Interface Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_9_1.cs)]\n     [!code-cpp[IObjectReference Interface Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_9_1.cpp)]\n     [!code-vb[IObjectReference Interface Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_9_1.vb)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IObjectReference\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  id: GetRealObject(System.Runtime.Serialization.StreamingContext)\n  parent: System.Runtime.Serialization.IObjectReference\n  langs:\n  - csharp\n  name: GetRealObject(StreamingContext)\n  nameWithType: IObjectReference.GetRealObject(StreamingContext)\n  fullName: System.Runtime.Serialization.IObjectReference.GetRealObject(StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Serialization\n  summary: Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.\n  remarks: \"This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object. When the proxy-creator object is deserialized, deserialization calls its GetRealObject method. At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer. Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.  \\n  \\n For example, consider how <xref:System.Type> objects are serialized. Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>. When both the type name and assembly name are available, the deserialization infrastructure calls GetRealObject on the holder object that has been transmitted. This holder returns the <xref:System.Type> object that is inserted into the graph.  \\n  \\n This method is protected by a <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> specified.\"\n  example:\n  - >-\n    [!code-cs[IObjectReference Interface Example#1](~/add/codesnippet/csharp/cd60c7d2-ba12-4220-8a1f-_1.cs)]\n     [!code-cpp[IObjectReference Interface Example#1](~/add/codesnippet/cpp/cd60c7d2-ba12-4220-8a1f-_1.cpp)]\n     [!code-vb[IObjectReference Interface Example#1](~/add/codesnippet/visualbasic/cd60c7d2-ba12-4220-8a1f-_1.vb)]\n  syntax:\n    content: public object GetRealObject (System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref:System.Runtime.Serialization.StreamingContext> from which the current object is deserialized.\n    return:\n      type: System.Object\n      description: Returns the actual object that is put into the graph.\n  overload: System.Runtime.Serialization.IObjectReference.GetRealObject*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission. The call will not work on a medium trusted server.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  parent: System.Runtime.Serialization.IObjectReference\n  isExternal: false\n  name: GetRealObject(StreamingContext)\n  nameWithType: IObjectReference.GetRealObject(StreamingContext)\n  fullName: System.Runtime.Serialization.IObjectReference.GetRealObject(StreamingContext)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Runtime.Serialization.IObjectReference.GetRealObject*\n  parent: System.Runtime.Serialization.IObjectReference\n  isExternal: false\n  name: GetRealObject\n  nameWithType: IObjectReference.GetRealObject\n"}