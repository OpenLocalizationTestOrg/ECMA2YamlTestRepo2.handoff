{"nodes":[{"pos":[828,911],"content":"Represents the base class from which all asymmetric key exchange formatters derive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the base class from which all asymmetric key exchange formatters derive.","pos":[0,83]}]},{"pos":[924,1454],"content":"Asymmetric key exchange formatters encrypt key exchange data.       Key exchange allows a sender to create secret information, such as random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.      > [!CAUTION] >  It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful.","needQuote":false,"needEscape":true,"nodes":[{"content":"Asymmetric key exchange formatters encrypt key exchange data.","pos":[0,61]},{"content":"Key exchange allows a sender to create secret information, such as random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.","pos":[68,266]},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful.","pos":[272,525],"source":"      > [!CAUTION] >  It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful."}]},{"pos":[2197,2308],"content":"Initializes a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricKeyExchangeFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of <xref href=\"System.Security.Cryptography.AsymmetricKeyExchangeFormatter\"></xref>."},{"pos":[2321,2644],"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.       Use <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey%2A> to set the key before calling <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.       Use <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey%2A> to set the key before calling <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A>.","pos":[0,321],"nodes":[{"content":"You cannot create an instance of an abstract class.","pos":[0,51]},{"content":"Application code will create a new instance of a derived class.","pos":[52,115]},{"content":"Use &lt;xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey%2A&gt; to set the key before calling &lt;xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A&gt;.","pos":[122,321],"source":"       Use <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey%2A> to set the key before calling <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A>."}]}]},{"pos":[3381,3487],"content":"When overridden in a derived class, creates the encrypted key exchange data from the specified input data.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, creates the encrypted key exchange data from the specified input data.","pos":[0,106]}]},{"pos":[3499,3712],"content":"This data can only be interpreted by the holder of the private key corresponding to the public key used to encrypt the data. This helps to ensure that only the intended recipient can access the secret information.","needQuote":true,"needEscape":true,"nodes":[{"content":"This data can only be interpreted by the holder of the private key corresponding to the public key used to encrypt the data. This helps to ensure that only the intended recipient can access the secret information.","pos":[0,213],"nodes":[{"content":"This data can only be interpreted by the holder of the private key corresponding to the public key used to encrypt the data.","pos":[0,124]},{"content":"This helps to ensure that only the intended recipient can access the secret information.","pos":[125,213]}]}]},{"pos":[3868,3924],"content":"The secret information to be passed in the key exchange.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret information to be passed in the key exchange.","pos":[0,56]}]},{"pos":[3982,4051],"content":"The encrypted key exchange data to be sent to the intended recipient.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypted key exchange data to be sent to the intended recipient.","pos":[0,69]}]},{"pos":[4751,4857],"content":"When overridden in a derived class, creates the encrypted key exchange data from the specified input data.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, creates the encrypted key exchange data from the specified input data.","pos":[0,106]}]},{"pos":[4869,5082],"content":"This data can only be interpreted by the holder of the private key corresponding to the public key used to encrypt the data. This helps to ensure that only the intended recipient can access the secret information.","needQuote":true,"needEscape":true,"nodes":[{"content":"This data can only be interpreted by the holder of the private key corresponding to the public key used to encrypt the data. This helps to ensure that only the intended recipient can access the secret information.","pos":[0,213],"nodes":[{"content":"This data can only be interpreted by the holder of the private key corresponding to the public key used to encrypt the data.","pos":[0,124]},{"content":"This helps to ensure that only the intended recipient can access the secret information.","pos":[125,213]}]}]},{"pos":[5255,5311],"content":"The secret information to be passed in the key exchange.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret information to be passed in the key exchange.","pos":[0,56]}]},{"pos":[5376,5426],"content":"This parameter is not used in the current version.","needQuote":true,"needEscape":true,"nodes":[{"content":"This parameter is not used in the current version.","pos":[0,50]}]},{"pos":[5484,5553],"content":"The encrypted key exchange data to be sent to the intended recipient.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypted key exchange data to be sent to the intended recipient.","pos":[0,69]}]},{"pos":[6127,6215],"content":"When overridden in a derived class, gets the parameters for the asymmetric key exchange.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets the parameters for the asymmetric key exchange.","pos":[0,88]}]},{"pos":[6339,6429],"content":"A string in XML format containing the parameters of the asymmetric key exchange operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string in XML format containing the parameters of the asymmetric key exchange operation.","pos":[0,90]}]},{"pos":[7137,7238],"content":"When overridden in a derived class, sets the public key to use for encrypting the secret information.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, sets the public key to use for encrypting the secret information.","pos":[0,101]}]},{"pos":[7250,7389],"content":"You must set a key before calling a <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A> implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"You must set a key before calling a &lt;xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A&gt; implementation.","pos":[0,139],"source":"You must set a key before calling a <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A> implementation."}]},{"pos":[7607,7741],"content":"The instance of the implementation of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that holds the public key.","needQuote":true,"needEscape":true,"source":"The instance of the implementation of <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that holds the public key."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  id: AsymmetricKeyExchangeFormatter\n  children:\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  langs:\n  - csharp\n  name: AsymmetricKeyExchangeFormatter\n  nameWithType: AsymmetricKeyExchangeFormatter\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  type: Class\n  summary: Represents the base class from which all asymmetric key exchange formatters derive.\n  remarks: \"Asymmetric key exchange formatters encrypt key exchange data.  \\n  \\n Key exchange allows a sender to create secret information, such as random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.  \\n  \\n> [!CAUTION]\\n>  It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class AsymmetricKeyExchangeFormatter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  langs:\n  - csharp\n  name: AsymmetricKeyExchangeFormatter()\n  nameWithType: AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of <xref href=\"System.Security.Cryptography.AsymmetricKeyExchangeFormatter\"></xref>.\n  remarks: \"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.  \\n  \\n Use <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey%2A> to set the key before calling <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A>.\"\n  syntax:\n    content: protected AsymmetricKeyExchangeFormatter ();\n    parameters: []\n  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  id: CreateKeyExchange(System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  langs:\n  - csharp\n  name: CreateKeyExchange(Byte[])\n  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, creates the encrypted key exchange data from the specified input data.\n  remarks: This data can only be interpreted by the holder of the private key corresponding to the public key used to encrypt the data. This helps to ensure that only the intended recipient can access the secret information.\n  syntax:\n    content: public abstract byte[] CreateKeyExchange (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The secret information to be passed in the key exchange.\n    return:\n      type: System.Byte[]\n      description: The encrypted key exchange data to be sent to the intended recipient.\n  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  id: CreateKeyExchange(System.Byte[],System.Type)\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  langs:\n  - csharp\n  name: CreateKeyExchange(Byte[],Type)\n  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, creates the encrypted key exchange data from the specified input data.\n  remarks: This data can only be interpreted by the holder of the private key corresponding to the public key used to encrypt the data. This helps to ensure that only the intended recipient can access the secret information.\n  syntax:\n    content: public abstract byte[] CreateKeyExchange (byte[] data, Type symAlgType);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The secret information to be passed in the key exchange.\n    - id: symAlgType\n      type: System.Type\n      description: This parameter is not used in the current version.\n    return:\n      type: System.Byte[]\n      description: The encrypted key exchange data to be sent to the intended recipient.\n  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters\n  id: Parameters\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: AsymmetricKeyExchangeFormatter.Parameters\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, gets the parameters for the asymmetric key exchange.\n  syntax:\n    content: public abstract string Parameters { get; }\n    return:\n      type: System.String\n      description: A string in XML format containing the parameters of the asymmetric key exchange operation.\n  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, sets the public key to use for encrypting the secret information.\n  remarks: You must set a key before calling a <xref:System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange%2A> implementation.\n  syntax:\n    content: public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of the implementation of <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that holds the public key.\n  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: AsymmetricKeyExchangeFormatter()\n  nameWithType: AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: CreateKeyExchange(Byte[])\n  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: CreateKeyExchange(Byte[],Type)\n  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: Parameters\n  nameWithType: AsymmetricKeyExchangeFormatter.Parameters\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor*\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: AsymmetricKeyExchangeFormatter\n  nameWithType: AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange*\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: CreateKeyExchange\n  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters*\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: Parameters\n  nameWithType: AsymmetricKeyExchangeFormatter.Parameters\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey*\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: SetKey\n  nameWithType: AsymmetricKeyExchangeFormatter.SetKey\n"}