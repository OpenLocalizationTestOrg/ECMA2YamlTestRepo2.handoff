{"nodes":[{"pos":[1166,1178],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3559,3571],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4449,4461],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5400,5412],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5471,5483],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6411,6423],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6481,6493],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7361,7373],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7446,7458],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.LambdaReference`1\n  id: LambdaReference`1\n  children:\n  - System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  - System.Activities.Expressions.LambdaReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  - System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  - System.Activities.Expressions.LambdaReference`1.Execute(System.Activities.CodeActivityContext)\n  langs:\n  - csharp\n  name: LambdaReference<T>\n  nameWithType: LambdaReference<T>\n  fullName: System.Activities.Expressions.LambdaReference<T>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerStepThrough]\n\n      public sealed class LambdaReference<T> : System.Activities.CodeActivity<System.Activities.Location<T>>, System.Activities.XamlIntegration.IValueSerializableExpression\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements:\n  - System.Activities.XamlIntegration.IValueSerializableExpression\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'\n  parent: System.Activities.Expressions.LambdaReference`1\n  langs:\n  - csharp\n  name: LambdaReference(Expression<Func<ActivityContext,T>>)\n  nameWithType: LambdaReference<T>.LambdaReference(Expression<Func<ActivityContext,T>>)\n  fullName: System.Activities.Expressions.LambdaReference<T>.LambdaReference(Expression<Func<ActivityContext,T>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public LambdaReference (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> locationExpression);\n    parameters:\n    - id: locationExpression\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n      description: To be added.\n  overload: System.Activities.Expressions.LambdaReference`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.LambdaReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.LambdaReference`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: LambdaReference<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.LambdaReference<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Expressions.LambdaReference`1.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  id: CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  langs:\n  - csharp\n  name: CanConvertToString(IValueSerializerContext)\n  nameWithType: LambdaReference<T>.CanConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.LambdaReference<T>.CanConvertToString(IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public bool CanConvertToString (System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Activities.Expressions.LambdaReference`1.CanConvertToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  id: ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  langs:\n  - csharp\n  name: ConvertToString(IValueSerializerContext)\n  nameWithType: LambdaReference<T>.ConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.LambdaReference<T>.ConvertToString(IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public string ConvertToString (System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Activities.Expressions.LambdaReference`1.ConvertToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.LambdaReference`1.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: LambdaReference<T>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.LambdaReference<T>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override System.Activities.Location<T> Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: To be added.\n    return:\n      type: System.Activities.Location`1\n      description: To be added.\n  overload: System.Activities.Expressions.LambdaReference`1.Execute*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.CodeActivity`1\n  isExternal: false\n  name: System.Activities.CodeActivity<System.Activities.Location<T>>\n- uid: System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: LambdaReference(Expression<Func<ActivityContext,T>>)\n  nameWithType: LambdaReference<T>.LambdaReference(Expression<Func<ActivityContext,T>>)\n  fullName: System.Activities.Expressions.LambdaReference<T>.LambdaReference(Expression<Func<ActivityContext,T>>)\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<ActivityContext,T>>\n  nameWithType: Expression<Func<ActivityContext,T>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<System.Activities.ActivityContext,T>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Activities.ActivityContext,T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityContext\n    name: ActivityContext\n    nameWithType: ActivityContext\n    fullName: ActivityContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.LambdaReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: LambdaReference<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.LambdaReference<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: CanConvertToString(IValueSerializerContext)\n  nameWithType: LambdaReference<T>.CanConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.LambdaReference<T>.CanConvertToString(IValueSerializerContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Markup.IValueSerializerContext\n  parent: System.Windows.Markup\n  isExternal: true\n  name: IValueSerializerContext\n  nameWithType: IValueSerializerContext\n  fullName: System.Windows.Markup.IValueSerializerContext\n- uid: System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: ConvertToString(IValueSerializerContext)\n  nameWithType: LambdaReference<T>.ConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.LambdaReference<T>.ConvertToString(IValueSerializerContext)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Expressions.LambdaReference`1.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: LambdaReference<T>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.LambdaReference<T>.Execute(CodeActivityContext)\n- uid: System.Activities.Location`1\n  parent: System.Activities\n  isExternal: false\n  name: Location<T>\n  nameWithType: Location<T>\n  fullName: System.Activities.Location<T>\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Expressions.LambdaReference`1.#ctor*\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: LambdaReference<T>\n  nameWithType: LambdaReference<T>.LambdaReference<T>\n- uid: System.Activities.Expressions.LambdaReference`1.CacheMetadata*\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: LambdaReference<T>.CacheMetadata\n- uid: System.Activities.Expressions.LambdaReference`1.CanConvertToString*\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: CanConvertToString\n  nameWithType: LambdaReference<T>.CanConvertToString\n- uid: System.Activities.Expressions.LambdaReference`1.ConvertToString*\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: ConvertToString\n  nameWithType: LambdaReference<T>.ConvertToString\n- uid: System.Activities.Expressions.LambdaReference`1.Execute*\n  parent: System.Activities.Expressions.LambdaReference`1\n  isExternal: false\n  name: Execute\n  nameWithType: LambdaReference<T>.Execute\n"}