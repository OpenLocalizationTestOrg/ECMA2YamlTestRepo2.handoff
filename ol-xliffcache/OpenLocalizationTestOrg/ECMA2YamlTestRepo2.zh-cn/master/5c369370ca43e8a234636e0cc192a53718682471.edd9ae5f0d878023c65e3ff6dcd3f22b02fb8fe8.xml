{"nodes":[{"pos":[704,866],"content":"Skips a specified number of elements in the input set. DbSkipExpression can only be used after the input collection has been sorted as specified by the sort keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"Skips a specified number of elements in the input set. DbSkipExpression can only be used after the input collection has been sorted as specified by the sort keys.","pos":[0,162],"nodes":[{"content":"Skips a specified number of elements in the input set.","pos":[0,54]},{"content":"DbSkipExpression can only be used after the input collection has been sorted as specified by the sort keys.","pos":[55,162]}]}]},{"pos":[878,1212],"content":"DbSkipExpression requires its input collection to have already been sorted. The sort order is represented as the <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> property. <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> is a list of <xref:System.Data.Common.CommandTrees.DbSortClause> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSkipExpression requires its input collection to have already been sorted. The sort order is represented as the <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> property. <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> is a list of <xref:System.Data.Common.CommandTrees.DbSortClause> objects.","pos":[0,334],"nodes":[{"content":"DbSkipExpression requires its input collection to have already been sorted.","pos":[0,75]},{"content":"The sort order is represented as the &lt;xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A&gt; property.","pos":[76,191],"source":" The sort order is represented as the <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> property."},{"content":"&lt;xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A&gt; is a list of &lt;xref:System.Data.Common.CommandTrees.DbSortClause&gt; objects.","pos":[192,334],"source":" <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> is a list of <xref:System.Data.Common.CommandTrees.DbSortClause> objects."}]}]},{"pos":[5004,5086],"content":"Implements the visitor pattern for expressions that do not produce a result value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the visitor pattern for expressions that do not produce a result value.","pos":[0,82]}]},{"pos":[5318,5406],"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>."},{"pos":[5592,5677],"content":"<ph id=\"ph1\">&lt;code&gt;visitor&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>visitor</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6560,6572],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6628,6640],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7146,7245],"content":"Gets or sets an expression that specifies the number of elements to skip from the input collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an expression that specifies the number of elements to skip from the input collection.","pos":[0,99]}]},{"pos":[7424,7510],"content":"An expression that specifies the number of elements to skip from the input collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An expression that specifies the number of elements to skip from the input collection.","pos":[0,86]}]},{"pos":[7695,7774],"content":"The expression is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The expression is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7870,8301],"content":"The expression is not associated with the command tree of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSkipExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>; the expression is not either a <bpt id=\"p2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or a <bpt id=\"p3\">&lt;xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>;       or the result type of the expression is not equal or promotable to a 64-bit integer type.","needQuote":false,"needEscape":true,"source":"The expression is not associated with the command tree of the <xref href=\"System.Data.Common.CommandTrees.DbSkipExpression\"></xref>; the expression is not either a <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> or a <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref>;       or the result type of the expression is not equal or promotable to a 64-bit integer type."},{"pos":[8709,8820],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the input set.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the input set."},{"pos":[9013,9119],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the input set.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the input set."},{"pos":[9631,9737],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> list that defines the sort order.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> list that defines the sort order."},{"pos":[9749,10004],"content":"<xref:System.Data.Common.CommandTrees.DbSkipExpression> requires its input collection to have already been sorted. The sort order is represented as the SortOrder property. SortOrder is a list of <xref:System.Data.Common.CommandTrees.DbSortClause> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Data.Common.CommandTrees.DbSkipExpression> requires its input collection to have already been sorted. The sort order is represented as the SortOrder property. SortOrder is a list of <xref:System.Data.Common.CommandTrees.DbSortClause> objects.","pos":[0,255],"nodes":[{"content":"&lt;xref:System.Data.Common.CommandTrees.DbSkipExpression&gt; requires its input collection to have already been sorted.","pos":[0,114],"source":"<xref:System.Data.Common.CommandTrees.DbSkipExpression> requires its input collection to have already been sorted."},{"content":"The sort order is represented as the SortOrder property.","pos":[115,171]},{"content":"SortOrder is a list of &lt;xref:System.Data.Common.CommandTrees.DbSortClause&gt; objects.","pos":[172,255],"source":" SortOrder is a list of <xref:System.Data.Common.CommandTrees.DbSortClause> objects."}]}]},{"pos":[10255,10356],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> list that defines the sort order.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> list that defines the sort order."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbSkipExpression\n  id: DbSkipExpression\n  children:\n  - System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  - System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  - System.Data.Common.CommandTrees.DbSkipExpression.Count\n  - System.Data.Common.CommandTrees.DbSkipExpression.Input\n  - System.Data.Common.CommandTrees.DbSkipExpression.SortOrder\n  langs:\n  - csharp\n  name: DbSkipExpression\n  nameWithType: DbSkipExpression\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression\n  type: Class\n  summary: Skips a specified number of elements in the input set. DbSkipExpression can only be used after the input collection has been sorted as specified by the sort keys.\n  remarks: DbSkipExpression requires its input collection to have already been sorted. The sort order is represented as the <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> property. <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> is a list of <xref:System.Data.Common.CommandTrees.DbSortClause> objects.\n  syntax:\n    content: 'public sealed class DbSkipExpression : System.Data.Common.CommandTrees.DbExpression'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbExpression\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.ResultType\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for expressions that do not produce a result value.\n  syntax:\n    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor\n      description: An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbSkipExpression.Accept*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>visitor</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbSkipExpression.Accept<TResultType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Count\n  id: Count\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  langs:\n  - csharp\n  name: Count\n  nameWithType: DbSkipExpression.Count\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Count\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets or sets an expression that specifies the number of elements to skip from the input collection.\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpression Count { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the number of elements to skip from the input collection.\n  overload: System.Data.Common.CommandTrees.DbSkipExpression.Count*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The expression is not associated with the command tree of the <xref href=\\\"System.Data.Common.CommandTrees.DbSkipExpression\\\"></xref>; the expression is not either a <xref href=\\\"System.Data.Common.CommandTrees.DbConstantExpression\\\"></xref> or a <xref href=\\\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\\\"></xref>;  \\n  \\n or the result type of the expression is not equal or promotable to a 64-bit integer type.\"\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Input\n  id: Input\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  langs:\n  - csharp\n  name: Input\n  nameWithType: DbSkipExpression.Input\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Input\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets the <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the input set.\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: The <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the input set.\n  overload: System.Data.Common.CommandTrees.DbSkipExpression.Input*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder\n  id: SortOrder\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  langs:\n  - csharp\n  name: SortOrder\n  nameWithType: DbSkipExpression.SortOrder\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets a <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> list that defines the sort order.\n  remarks: <xref:System.Data.Common.CommandTrees.DbSkipExpression> requires its input collection to have already been sorted. The sort order is represented as the SortOrder property. SortOrder is a list of <xref:System.Data.Common.CommandTrees.DbSortClause> objects.\n  syntax:\n    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbSortClause> SortOrder { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause}\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> list that defines the sort order.\n  overload: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: System.Data.Common.CommandTrees.DbExpression\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor)\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor\n  nameWithType: DbExpressionVisitor\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)\n- uid: TResultType\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Count\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  isExternal: false\n  name: Count\n  nameWithType: DbSkipExpression.Count\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Count\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Input\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  isExternal: false\n  name: Input\n  nameWithType: DbSkipExpression.Input\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Input\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  isExternal: false\n  name: SortOrder\n  nameWithType: DbSkipExpression.SortOrder\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder\n- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<DbSortClause>\n  nameWithType: IList<DbSortClause>\n  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbSortClause>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Data.Common.CommandTrees.DbSortClause>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbSortClause\n    name: DbSortClause\n    nameWithType: DbSortClause\n    fullName: DbSortClause\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept*\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  isExternal: false\n  name: Accept\n  nameWithType: DbSkipExpression.Accept\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept<TResultType>*\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  isExternal: false\n  name: Accept<TResultType>\n  nameWithType: DbSkipExpression.Accept<TResultType>\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Count*\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  isExternal: false\n  name: Count\n  nameWithType: DbSkipExpression.Count\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.Input*\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  isExternal: false\n  name: Input\n  nameWithType: DbSkipExpression.Input\n- uid: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder*\n  parent: System.Data.Common.CommandTrees.DbSkipExpression\n  isExternal: false\n  name: SortOrder\n  nameWithType: DbSkipExpression.SortOrder\n"}