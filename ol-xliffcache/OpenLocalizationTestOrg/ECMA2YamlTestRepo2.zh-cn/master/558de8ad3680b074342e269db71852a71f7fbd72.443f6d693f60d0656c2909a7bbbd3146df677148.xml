{"nodes":[{"pos":[530,572],"content":"Represents an ordered collection of nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an ordered collection of nodes.","pos":[0,42]}]},{"pos":[585,1450],"content":"Changes to the children of the node object that the XmlNodeList collection was created from are immediately reflected in the nodes returned by the `XmlNodeList` properties and methods. `XmlNodeList` supports iteration and indexed access.       `XmlNodeList` is returned by the following properties and methods.      -   <xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=fullName> - Returns an `XmlNodeList` containing all the children of the node.      -   <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> - Returns an `XmlNodeList` containing a collection of nodes matching the XPath query.      -   `GetElementsByTagName` - Returns an `XmlNodeList` containing a list of all descendant elements that match the specified name. This method is available in both the <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlElement> classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Changes to the children of the node object that the XmlNodeList collection was created from are immediately reflected in the nodes returned by the <ph id=\"ph1\">`XmlNodeList`</ph> properties and methods.","pos":[0,184],"source":"Changes to the children of the node object that the XmlNodeList collection was created from are immediately reflected in the nodes returned by the `XmlNodeList` properties and methods."},{"content":"<ph id=\"ph1\">`XmlNodeList`</ph> supports iteration and indexed access.","pos":[185,237],"source":"`XmlNodeList` supports iteration and indexed access."},{"content":"<ph id=\"ph1\">`XmlNodeList`</ph> is returned by the following properties and methods.","pos":[244,310],"source":"`XmlNodeList` is returned by the following properties and methods."},{"content":"-   &lt;xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=fullName&gt; - Returns an <ph id=\"ph1\">`XmlNodeList`</ph> containing all the children of the node.","pos":[316,452],"source":"      -   <xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=fullName> - Returns an `XmlNodeList` containing all the children of the node."},{"content":"-   &lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt; - Returns an <ph id=\"ph1\">`XmlNodeList`</ph> containing a collection of nodes matching the XPath query.","pos":[458,613],"source":"      -   <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> - Returns an `XmlNodeList` containing a collection of nodes matching the XPath query."},{"content":"-   <ph id=\"ph1\">`GetElementsByTagName`</ph> - Returns an <ph id=\"ph2\">`XmlNodeList`</ph> containing a list of all descendant elements that match the specified name.","pos":[619,748],"source":"      -   `GetElementsByTagName` - Returns an `XmlNodeList` containing a list of all descendant elements that match the specified name."},{"content":"This method is available in both the &lt;xref:System.Xml.XmlDocument&gt; and &lt;xref:System.Xml.XmlElement&gt; classes.","pos":[749,857],"source":" This method is available in both the <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlElement> classes."}]},{"pos":[2008,2092],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNodeList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.XmlNodeList\"></xref> class."},{"pos":[2514,2621],"content":"Gets the number of nodes in the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNodeList\" name=\"XmlNodeList\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the number of nodes in the <xref uid=\"langword_csharp_XmlNodeList\" name=\"XmlNodeList\" href=\"\"></xref>."},{"pos":[3566,3668],"content":"The number of nodes in the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNodeList\" name=\"XmlNodeList\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The number of nodes in the <xref uid=\"langword_csharp_XmlNodeList\" name=\"XmlNodeList\" href=\"\"></xref>."},{"pos":[4066,4131],"content":"Gets an enumerator that iterates through the collection of nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumerator that iterates through the collection of nodes.","pos":[0,65]}]},{"pos":[4143,4237],"content":"Provides a simple \"foreach\" style iteration over the collection of nodes in the <ph id=\"ph1\">`XmlNodeList`</ph>.","needQuote":true,"needEscape":true,"source":"Provides a simple \"foreach\" style iteration over the collection of nodes in the `XmlNodeList`."},{"pos":[5056,5118],"content":"An enumerator used to iterate through the collection of nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator used to iterate through the collection of nodes.","pos":[0,62]}]},{"pos":[5522,5558],"content":"Retrieves a node at the given index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a node at the given index.","pos":[0,36]}]},{"pos":[6175,6219],"content":"The zero-based index into the list of nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index into the list of nodes.","pos":[0,44]}]},{"pos":[6282,6527],"content":"The <xref href=\"System.Xml.XmlNode\"></xref> with the specified index in the collection. If <code>index</code> is greater than or equal to the number of nodes in the list, this returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified index in the collection.","pos":[0,87],"source":"The <xref href=\"System.Xml.XmlNode\"></xref> with the specified index in the collection."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than or equal to the number of nodes in the list, this returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[88,245],"source":" If <code>index</code> is greater than or equal to the number of nodes in the list, this returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[6934,6965],"content":"Gets a node at the given index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a node at the given index.","pos":[0,31]}]},{"pos":[7947,7991],"content":"The zero-based index into the list of nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index into the list of nodes.","pos":[0,44]}]},{"pos":[8054,8286],"content":"The <xref href=\"System.Xml.XmlNode\"></xref> with the specified index in the collection. If index is greater than or equal to the number of nodes in the list, this returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified index in the collection.","pos":[0,87],"source":"The <xref href=\"System.Xml.XmlNode\"></xref> with the specified index in the collection."},{"content":"If index is greater than or equal to the number of nodes in the list, this returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[88,232],"source":" If index is greater than or equal to the number of nodes in the list, this returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8730,8776],"content":"Disposes resources in the node list privately.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disposes resources in the node list privately.","pos":[0,46]}]},{"pos":[9362,9447],"content":"Releases all resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNodeList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the <xref href=\"System.Xml.XmlNodeList\"></xref> class."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlNodeList\n  id: XmlNodeList\n  children:\n  - System.Xml.XmlNodeList.#ctor\n  - System.Xml.XmlNodeList.Count\n  - System.Xml.XmlNodeList.GetEnumerator\n  - System.Xml.XmlNodeList.Item(System.Int32)\n  - System.Xml.XmlNodeList.ItemOf(System.Int32)\n  - System.Xml.XmlNodeList.PrivateDisposeNodeList\n  - System.Xml.XmlNodeList.System#IDisposable#Dispose\n  langs:\n  - csharp\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n  type: Class\n  summary: Represents an ordered collection of nodes.\n  remarks: \"Changes to the children of the node object that the XmlNodeList collection was created from are immediately reflected in the nodes returned by the `XmlNodeList` properties and methods. `XmlNodeList` supports iteration and indexed access.  \\n  \\n `XmlNodeList` is returned by the following properties and methods.  \\n  \\n-   <xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=fullName> - Returns an `XmlNodeList` containing all the children of the node.  \\n  \\n-   <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> - Returns an `XmlNodeList` containing a collection of nodes matching the XPath query.  \\n  \\n-   `GetElementsByTagName` - Returns an `XmlNodeList` containing a list of all descendant elements that match the specified name. This method is available in both the <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlElement> classes.\"\n  syntax:\n    content: 'public abstract class XmlNodeList : IDisposable, System.Collections.IEnumerable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerable\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeList.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlNodeList\n  langs:\n  - csharp\n  name: XmlNodeList()\n  nameWithType: XmlNodeList.XmlNodeList()\n  fullName: System.Xml.XmlNodeList.XmlNodeList()\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlNodeList\"></xref> class.\n  syntax:\n    content: protected XmlNodeList ();\n    parameters: []\n  overload: System.Xml.XmlNodeList.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeList.Count\n  id: Count\n  parent: System.Xml.XmlNodeList\n  langs:\n  - csharp\n  name: Count\n  nameWithType: XmlNodeList.Count\n  fullName: System.Xml.XmlNodeList.Count\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the number of nodes in the <xref uid=\"langword_csharp_XmlNodeList\" name=\"XmlNodeList\" href=\"\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.Xml.XmlDocument> object and uses the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method and the resulting `XmlNodeList` to display all the book titles.  \\n  \\n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlnodelist_0_1.cpp)]\\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlnodelist_0_1.vb)]\\n [!code-cs[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlnodelist_0_1.cs)]  \\n  \\n The example uses the file `2books.xml` as input.  \\n  \\n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/add/codesnippet/xml/p-system.xml.xmlnodelist_0_2.xml)]\"\n  syntax:\n    content: public abstract int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of nodes in the <xref uid=\"langword_csharp_XmlNodeList\" name=\"XmlNodeList\" href=\"\"></xref>.\n  overload: System.Xml.XmlNodeList.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeList.GetEnumerator\n  id: GetEnumerator\n  parent: System.Xml.XmlNodeList\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: XmlNodeList.GetEnumerator()\n  fullName: System.Xml.XmlNodeList.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets an enumerator that iterates through the collection of nodes.\n  remarks: Provides a simple \"foreach\" style iteration over the collection of nodes in the `XmlNodeList`.\n  example:\n  - \"The following example displays all the book titles.  \\n  \\n [!code-cpp[Classic WebData XmlNodeList.GetEnumerator Example#1](~/add/codesnippet/cpp/m-system.xml.xmlnodelist_0_1.cpp)]\\n [!code-vb[Classic WebData XmlNodeList.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlnodelist_0_1.vb)]\\n [!code-cs[Classic WebData XmlNodeList.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.xml.xmlnodelist_0_1.cs)]  \\n  \\n The example uses the file `2books.xml` as input.  \\n  \\n [!code-xml[Classic WebData XmlNodeList.GetEnumerator Example#2](~/add/codesnippet/xml/m-system.xml.xmlnodelist_0_2.xml)]\"\n  syntax:\n    content: public abstract System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator used to iterate through the collection of nodes.\n  overload: System.Xml.XmlNodeList.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeList.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Xml.XmlNodeList\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: XmlNodeList.Item(Int32)\n  fullName: System.Xml.XmlNodeList.Item(Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Retrieves a node at the given index.\n  remarks: ''\n  example:\n  - \"The following example gets and displays the second node in the `XmlNodeList`.  \\n  \\n [!code-cpp[Classic WebData XmlNodeList.Item Example#1](~/add/codesnippet/cpp/m-system.xml.xmlnodelist_1_1.cpp)]\\n [!code-vb[Classic WebData XmlNodeList.Item Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlnodelist_1_1.vb)]\\n [!code-cs[Classic WebData XmlNodeList.Item Example#1](~/add/codesnippet/csharp/m-system.xml.xmlnodelist_1_1.cs)]\"\n  syntax:\n    content: public abstract System.Xml.XmlNode Item (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index into the list of nodes.\n    return:\n      type: System.Xml.XmlNode\n      description: The <xref href=\"System.Xml.XmlNode\"></xref> with the specified index in the collection. If <code>index</code> is greater than or equal to the number of nodes in the list, this returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xml.XmlNodeList.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeList.ItemOf(System.Int32)\n  id: ItemOf(System.Int32)\n  parent: System.Xml.XmlNodeList\n  langs:\n  - csharp\n  name: ItemOf(Int32)\n  nameWithType: XmlNodeList.ItemOf(Int32)\n  fullName: System.Xml.XmlNodeList.ItemOf(Int32)\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets a node at the given index.\n  remarks: ''\n  example:\n  - \"The following example creates an <xref:System.Xml.XmlDocument> object and uses the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method and the resulting `XmlNodeList` to display all the book titles.  \\n  \\n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlnodelist_1_1.cpp)]\\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlnodelist_1_1.vb)]\\n [!code-cs[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlnodelist_1_1.cs)]  \\n  \\n The example uses the file `2books.xml` as input.  \\n  \\n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/add/codesnippet/xml/p-system.xml.xmlnodelist_1_2.xml)]\"\n  syntax:\n    content: public virtual System.Xml.XmlNode this[int i] { get; }\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based index into the list of nodes.\n    return:\n      type: System.Xml.XmlNode\n      description: The <xref href=\"System.Xml.XmlNode\"></xref> with the specified index in the collection. If index is greater than or equal to the number of nodes in the list, this returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xml.XmlNodeList.ItemOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList\n  id: PrivateDisposeNodeList\n  parent: System.Xml.XmlNodeList\n  langs:\n  - csharp\n  name: PrivateDisposeNodeList()\n  nameWithType: XmlNodeList.PrivateDisposeNodeList()\n  fullName: System.Xml.XmlNodeList.PrivateDisposeNodeList()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Disposes resources in the node list privately.\n  syntax:\n    content: protected virtual void PrivateDisposeNodeList ();\n    parameters: []\n  overload: System.Xml.XmlNodeList.PrivateDisposeNodeList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.Xml.XmlNodeList\n  langs:\n  - csharp\n  name: System.IDisposable.Dispose()\n  nameWithType: XmlNodeList.System.IDisposable.Dispose()\n  fullName: System.Xml.XmlNodeList.System.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Releases all resources used by the <xref href=\"System.Xml.XmlNodeList\"></xref> class.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.Xml.XmlNodeList.System#IDisposable#Dispose*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Xml.XmlNodeList.#ctor\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: XmlNodeList()\n  nameWithType: XmlNodeList.XmlNodeList()\n  fullName: System.Xml.XmlNodeList.XmlNodeList()\n- uid: System.Xml.XmlNodeList.Count\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: Count\n  nameWithType: XmlNodeList.Count\n  fullName: System.Xml.XmlNodeList.Count\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.XmlNodeList.GetEnumerator\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: XmlNodeList.GetEnumerator()\n  fullName: System.Xml.XmlNodeList.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Xml.XmlNodeList.Item(System.Int32)\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: XmlNodeList.Item(Int32)\n  fullName: System.Xml.XmlNodeList.Item(Int32)\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  nameWithType: XmlNode\n  fullName: System.Xml.XmlNode\n- uid: System.Xml.XmlNodeList.ItemOf(System.Int32)\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: ItemOf(Int32)\n  nameWithType: XmlNodeList.ItemOf(Int32)\n  fullName: System.Xml.XmlNodeList.ItemOf(Int32)\n- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: PrivateDisposeNodeList()\n  nameWithType: XmlNodeList.PrivateDisposeNodeList()\n  fullName: System.Xml.XmlNodeList.PrivateDisposeNodeList()\n- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: System.IDisposable.Dispose()\n  nameWithType: XmlNodeList.System.IDisposable.Dispose()\n  fullName: System.Xml.XmlNodeList.System.IDisposable.Dispose()\n- uid: System.Xml.XmlNodeList.#ctor*\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList.XmlNodeList\n- uid: System.Xml.XmlNodeList.Count*\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: Count\n  nameWithType: XmlNodeList.Count\n- uid: System.Xml.XmlNodeList.GetEnumerator*\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: XmlNodeList.GetEnumerator\n- uid: System.Xml.XmlNodeList.Item*\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: Item\n  nameWithType: XmlNodeList.Item\n- uid: System.Xml.XmlNodeList.ItemOf*\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: ItemOf\n  nameWithType: XmlNodeList.ItemOf\n- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList*\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: PrivateDisposeNodeList\n  nameWithType: XmlNodeList.PrivateDisposeNodeList\n- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose*\n  parent: System.Xml.XmlNodeList\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: XmlNodeList.System.IDisposable.Dispose\n"}