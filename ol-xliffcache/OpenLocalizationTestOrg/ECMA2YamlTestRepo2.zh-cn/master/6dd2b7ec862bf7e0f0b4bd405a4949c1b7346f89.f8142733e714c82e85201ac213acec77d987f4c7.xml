{"nodes":[{"pos":[359,443],"content":"Defines the method ASP.NET server controls must implement to handle postback events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the method ASP.NET server controls must implement to handle postback events.","pos":[0,84]}]},{"pos":[455,722],"content":"To create a server control that captures form submission information from the browser, you must implement this interface. For more information on how to use this interface, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"To create a server control that captures form submission information from the browser, you must implement this interface.","pos":[0,121]},{"content":"For more information on how to use this interface, see <bpt id=\"p1\">[</bpt>Server Event Handling in ASP.NET Web Forms Pages<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[122,267],"source":" For more information on how to use this interface, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[1758,1875],"content":"When implemented by a class, enables a server control to process an event raised when a form is posted to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented by a class, enables a server control to process an event raised when a form is posted to the server.","pos":[0,117]}]},{"pos":[1888,2482],"content":"The page passes the value of the `eventArgument` parameter to the `RaisePostBackEvent` method of the control that implements the <xref:System.Web.UI.IPostBackEventHandler> interface. This control also renders the HTML element that causes the postback to occur. If the control renders client-side script for postback, the argument from the script is passed in the `eventArgument` parameter. If the postback is caused by a simple submit operation, the `eventArgument` parameter is `null`.       This method provides the functionality for many events implemented by HTML and Web server controls.","needQuote":false,"needEscape":true,"nodes":[{"content":"The page passes the value of the <ph id=\"ph1\">`eventArgument`</ph> parameter to the <ph id=\"ph2\">`RaisePostBackEvent`</ph> method of the control that implements the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface.","pos":[0,182],"source":"The page passes the value of the `eventArgument` parameter to the `RaisePostBackEvent` method of the control that implements the <xref:System.Web.UI.IPostBackEventHandler> interface."},{"content":"This control also renders the HTML element that causes the postback to occur.","pos":[183,260]},{"content":"If the control renders client-side script for postback, the argument from the script is passed in the <ph id=\"ph1\">`eventArgument`</ph> parameter.","pos":[261,389],"source":" If the control renders client-side script for postback, the argument from the script is passed in the `eventArgument` parameter."},{"content":"If the postback is caused by a simple submit operation, the <ph id=\"ph1\">`eventArgument`</ph> parameter is <ph id=\"ph2\">`null`</ph>.","pos":[390,486],"source":" If the postback is caused by a simple submit operation, the `eventArgument` parameter is `null`."},{"content":"This method provides the functionality for many events implemented by HTML and Web server controls.","pos":[493,592]}]},{"pos":[3094,3194],"content":"A <xref:System.String> that represents an optional event argument to be passed to the event handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that represents an optional event argument to be passed to the event handler.","pos":[0,100],"source":"A <xref:System.String> that represents an optional event argument to be passed to the event handler."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.IPostBackEventHandler\n  id: IPostBackEventHandler\n  children:\n  - System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)\n  langs:\n  - csharp\n  name: IPostBackEventHandler\n  nameWithType: IPostBackEventHandler\n  fullName: System.Web.UI.IPostBackEventHandler\n  type: Interface\n  summary: Defines the method ASP.NET server controls must implement to handle postback events.\n  remarks: To create a server control that captures form submission information from the browser, you must implement this interface. For more information on how to use this interface, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following code example defines a custom button server control that causes postback, captures the postback event using the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method, and raises a `Click` event on the server.  \\n  \\n [!code-cs[Classic IPostBackEventHandler Example#1](~/add/codesnippet/csharp/t-system.web.ui.ipostbac_1_1.cs)]\\n [!code-vb[Classic IPostBackEventHandler Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.ipostbac_1_1.vb)]\"\n  syntax:\n    content: public interface IPostBackEventHandler\n  implements: []\n  platform:\n  - net462\n- uid: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)\n  id: RaisePostBackEvent(System.String)\n  parent: System.Web.UI.IPostBackEventHandler\n  langs:\n  - csharp\n  name: RaisePostBackEvent(String)\n  nameWithType: IPostBackEventHandler.RaisePostBackEvent(String)\n  fullName: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When implemented by a class, enables a server control to process an event raised when a form is posted to the server.\n  remarks: \"The page passes the value of the `eventArgument` parameter to the `RaisePostBackEvent` method of the control that implements the <xref:System.Web.UI.IPostBackEventHandler> interface. This control also renders the HTML element that causes the postback to occur. If the control renders client-side script for postback, the argument from the script is passed in the `eventArgument` parameter. If the postback is caused by a simple submit operation, the `eventArgument` parameter is `null`.  \\n  \\n This method provides the functionality for many events implemented by HTML and Web server controls.\"\n  example:\n  - \"The following code example defines a custom button server control that causes postback, captures the postback event using the RaisePostBackEvent method, and raises a `Click` event on the server.  \\n  \\n [!code-cs[Classic IPostBackEventHandler Example#1](~/add/codesnippet/csharp/m-system.web.ui.ipostbac_0_1.cs)]\\n [!code-vb[Classic IPostBackEventHandler Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.ipostbac_0_1.vb)]\"\n  syntax:\n    content: public void RaisePostBackEvent (string eventArgument);\n    parameters:\n    - id: eventArgument\n      type: System.String\n      description: A <xref:System.String> that represents an optional event argument to be passed to the event handler.\n  overload: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)\n  parent: System.Web.UI.IPostBackEventHandler\n  isExternal: false\n  name: RaisePostBackEvent(String)\n  nameWithType: IPostBackEventHandler.RaisePostBackEvent(String)\n  fullName: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent*\n  parent: System.Web.UI.IPostBackEventHandler\n  isExternal: false\n  name: RaisePostBackEvent\n  nameWithType: IPostBackEventHandler.RaisePostBackEvent\n"}