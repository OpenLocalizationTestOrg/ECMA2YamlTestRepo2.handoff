{"nodes":[{"pos":[1229,1329],"content":"Use &lt;xref:System.Runtime.InteropServices.ComTypes.BIND_OPTS?displayProperty=fullName&gt; instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use <ph id=\"ph1\">&amp;lt;</ph>xref:System.Runtime.InteropServices.ComTypes.BIND_OPTS?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> instead.","pos":[0,100],"source":"Use &lt;xref:System.Runtime.InteropServices.ComTypes.BIND_OPTS?displayProperty=fullName&gt; instead."}]},{"pos":[1341,1457],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx`</ph> in the com subfolder of the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx` in the com subfolder of the MSDN library."},{"pos":[2460,2568],"content":"Enumerate the strings which are the keys of the internally-maintained table of contextual object parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enumerate the strings which are the keys of the internally-maintained table of contextual object parameters.","pos":[0,108]}]},{"pos":[2580,2692],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx::EnumObjectParam`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx::EnumObjectParam` in the MSDN library."},{"pos":[2916,2985],"content":"On successful return, a reference to the object parameter enumerator.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, a reference to the object parameter enumerator.","pos":[0,69]}]},{"pos":[3614,3677],"content":"Return the current binding options stored in this bind context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Return the current binding options stored in this bind context.","pos":[0,63]}]},{"pos":[3689,3800],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx::GetBindOptions`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx::GetBindOptions` in the MSDN library."},{"pos":[4017,4075],"content":"A pointer to the structure to receive the binding options.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to the structure to receive the binding options.","pos":[0,58]}]},{"pos":[4689,4828],"content":"Lookup the given key in the internally-maintained table of contextual object parameters and return the corresponding object, if one exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"Lookup the given key in the internally-maintained table of contextual object parameters and return the corresponding object, if one exists.","pos":[0,139]}]},{"pos":[4840,4951],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx::GetObjectParam`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx::GetObjectParam` in the MSDN library."},{"pos":[5115,5152],"content":"The name of the object to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the object to search for.","pos":[0,37]}]},{"pos":[5214,5265],"content":"On successful return, the object interface pointer.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, the object interface pointer.","pos":[0,51]}]},{"pos":[5998,6079],"content":"Return access to the Running Object Table (ROT) relevant to this binding process.","needQuote":true,"needEscape":true,"nodes":[{"content":"Return access to the Running Object Table (ROT) relevant to this binding process.","pos":[0,81]}]},{"pos":[6091,6209],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx::GetRunningObjectTable`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx::GetRunningObjectTable` in the MSDN library."},{"pos":[6453,6498],"content":"On successful return, a reference to the ROT.","needQuote":true,"needEscape":true,"nodes":[{"content":"On successful return, a reference to the ROT.","pos":[0,45]}]},{"pos":[7093,7238],"content":"Register the passed object as one of the objects that has been bound during a moniker operation and which should be released when it is complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Register the passed object as one of the objects that has been bound during a moniker operation and which should be released when it is complete.","pos":[0,145]}]},{"pos":[7250,7366],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx::RegisterObjectBound`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx::RegisterObjectBound` in the MSDN library."},{"pos":[7513,7548],"content":"The object to register for release.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to register for release.","pos":[0,35]}]},{"pos":[8190,8303],"content":"Register the given object pointer under the specified name in the internally-maintained table of object pointers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Register the given object pointer under the specified name in the internally-maintained table of object pointers.","pos":[0,113]}]},{"pos":[8315,8431],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx::RegisterObjectParam`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx::RegisterObjectParam` in the MSDN library."},{"pos":[8595,8628],"content":"The name to register <ph id=\"ph1\">`punk`</ph> with.","needQuote":true,"needEscape":true,"source":"The name to register `punk` with."},{"pos":[8689,8712],"content":"The object to register.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to register.","pos":[0,23]}]},{"pos":[9257,9400],"content":"Releases all the objects currently registered with the bind context by <xref:System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases all the objects currently registered with the bind context by &lt;xref:System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound*&gt;.","pos":[0,143],"source":"Releases all the objects currently registered with the bind context by <xref:System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound*>."}]},{"pos":[9412,9528],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx::ReleaseBoundObjects`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx::ReleaseBoundObjects` in the MSDN library."},{"pos":[10189,10268],"content":"Removes the object from the set of registered objects that need to be released.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the object from the set of registered objects that need to be released.","pos":[0,79]}]},{"pos":[10280,10394],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx::RevokeObjectBound`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx::RevokeObjectBound` in the MSDN library."},{"pos":[10539,10576],"content":"The object to unregister for release.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to unregister for release.","pos":[0,37]}]},{"pos":[11157,11334],"content":"Revoke the registration of the object currently found under this key in the internally-maintained table of contextual object parameters, if any such key is currently registered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Revoke the registration of the object currently found under this key in the internally-maintained table of contextual object parameters, if any such key is currently registered.","pos":[0,177]}]},{"pos":[11346,11460],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx::RevokeObjectParam`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx::RevokeObjectParam` in the MSDN library."},{"pos":[11609,11631],"content":"The key to unregister.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to unregister.","pos":[0,22]}]},{"pos":[12262,12447],"content":"Store in the bind context a block of parameters that will apply to later <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_UCOMIMoniker\" name=\"UCOMIMoniker\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> operations using this bind context.","needQuote":true,"needEscape":true,"source":"Store in the bind context a block of parameters that will apply to later <xref uid=\"langword_csharp_UCOMIMoniker\" name=\"UCOMIMoniker\" href=\"\"></xref> operations using this bind context."},{"pos":[12459,12570],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IBindCtx::SetBindOptions`</ph> in the MSDN library.","needQuote":true,"needEscape":true,"source":"For more information, please see the existing documentation for `IBindCtx::SetBindOptions` in the MSDN library."},{"pos":[12787,12839],"content":"The structure containing the binding options to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The structure containing the binding options to set.","pos":[0,52]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.UCOMIBindCtx\n  id: UCOMIBindCtx\n  children:\n  - System.Runtime.InteropServices.UCOMIBindCtx.EnumObjectParam(System.Runtime.InteropServices.UCOMIEnumString@)\n  - System.Runtime.InteropServices.UCOMIBindCtx.GetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)\n  - System.Runtime.InteropServices.UCOMIBindCtx.GetObjectParam(System.String,System.Object@)\n  - System.Runtime.InteropServices.UCOMIBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.UCOMIRunningObjectTable@)\n  - System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound(System.Object)\n  - System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectParam(System.String,System.Object)\n  - System.Runtime.InteropServices.UCOMIBindCtx.ReleaseBoundObjects\n  - System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectBound(System.Object)\n  - System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectParam(System.String)\n  - System.Runtime.InteropServices.UCOMIBindCtx.SetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)\n  langs:\n  - csharp\n  name: UCOMIBindCtx\n  nameWithType: UCOMIBindCtx\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx\n  type: Interface\n  summary: Use &lt;xref:System.Runtime.InteropServices.ComTypes.BIND_OPTS?displayProperty=fullName&gt; instead.\n  remarks: For more information, please see the existing documentation for `IBindCtx` in the com subfolder of the MSDN library.\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use System.Runtime.InteropServices.ComTypes.IBindCtx instead. http://go.microsoft.com/fwlink/?linkid=14202\", false)]\n\n      [System.Runtime.InteropServices.Guid(\"0000000e-0000-0000-C000-000000000046\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface UCOMIBindCtx\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.EnumObjectParam(System.Runtime.InteropServices.UCOMIEnumString@)\n  id: EnumObjectParam(System.Runtime.InteropServices.UCOMIEnumString@)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  langs:\n  - csharp\n  name: EnumObjectParam(UCOMIEnumString)\n  nameWithType: UCOMIBindCtx.EnumObjectParam(UCOMIEnumString)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.EnumObjectParam(UCOMIEnumString)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Enumerate the strings which are the keys of the internally-maintained table of contextual object parameters.\n  remarks: For more information, please see the existing documentation for `IBindCtx::EnumObjectParam` in the MSDN library.\n  syntax:\n    content: public void EnumObjectParam (out System.Runtime.InteropServices.UCOMIEnumString ppenum);\n    parameters:\n    - id: ppenum\n      type: System.Runtime.InteropServices.UCOMIEnumString\n      description: On successful return, a reference to the object parameter enumerator.\n  overload: System.Runtime.InteropServices.UCOMIBindCtx.EnumObjectParam*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.GetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)\n  id: GetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  langs:\n  - csharp\n  name: GetBindOptions(BIND_OPTS)\n  nameWithType: UCOMIBindCtx.GetBindOptions(BIND_OPTS)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.GetBindOptions(BIND_OPTS)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Return the current binding options stored in this bind context.\n  remarks: For more information, please see the existing documentation for `IBindCtx::GetBindOptions` in the MSDN library.\n  syntax:\n    content: public void GetBindOptions (ref System.Runtime.InteropServices.BIND_OPTS pbindopts);\n    parameters:\n    - id: pbindopts\n      type: System.Runtime.InteropServices.BIND_OPTS\n      description: A pointer to the structure to receive the binding options.\n  overload: System.Runtime.InteropServices.UCOMIBindCtx.GetBindOptions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.GetObjectParam(System.String,System.Object@)\n  id: GetObjectParam(System.String,System.Object@)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  langs:\n  - csharp\n  name: GetObjectParam(String,Object)\n  nameWithType: UCOMIBindCtx.GetObjectParam(String,Object)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.GetObjectParam(String,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Lookup the given key in the internally-maintained table of contextual object parameters and return the corresponding object, if one exists.\n  remarks: For more information, please see the existing documentation for `IBindCtx::GetObjectParam` in the MSDN library.\n  syntax:\n    content: public void GetObjectParam (string pszKey, out object ppunk);\n    parameters:\n    - id: pszKey\n      type: System.String\n      description: The name of the object to search for.\n    - id: ppunk\n      type: System.Object\n      description: On successful return, the object interface pointer.\n  overload: System.Runtime.InteropServices.UCOMIBindCtx.GetObjectParam*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.UCOMIRunningObjectTable@)\n  id: GetRunningObjectTable(System.Runtime.InteropServices.UCOMIRunningObjectTable@)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  langs:\n  - csharp\n  name: GetRunningObjectTable(UCOMIRunningObjectTable)\n  nameWithType: UCOMIBindCtx.GetRunningObjectTable(UCOMIRunningObjectTable)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.GetRunningObjectTable(UCOMIRunningObjectTable)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Return access to the Running Object Table (ROT) relevant to this binding process.\n  remarks: For more information, please see the existing documentation for `IBindCtx::GetRunningObjectTable` in the MSDN library.\n  syntax:\n    content: public void GetRunningObjectTable (out System.Runtime.InteropServices.UCOMIRunningObjectTable pprot);\n    parameters:\n    - id: pprot\n      type: System.Runtime.InteropServices.UCOMIRunningObjectTable\n      description: On successful return, a reference to the ROT.\n  overload: System.Runtime.InteropServices.UCOMIBindCtx.GetRunningObjectTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound(System.Object)\n  id: RegisterObjectBound(System.Object)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  langs:\n  - csharp\n  name: RegisterObjectBound(Object)\n  nameWithType: UCOMIBindCtx.RegisterObjectBound(Object)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Register the passed object as one of the objects that has been bound during a moniker operation and which should be released when it is complete.\n  remarks: For more information, please see the existing documentation for `IBindCtx::RegisterObjectBound` in the MSDN library.\n  syntax:\n    content: public void RegisterObjectBound (object punk);\n    parameters:\n    - id: punk\n      type: System.Object\n      description: The object to register for release.\n  overload: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectParam(System.String,System.Object)\n  id: RegisterObjectParam(System.String,System.Object)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  langs:\n  - csharp\n  name: RegisterObjectParam(String,Object)\n  nameWithType: UCOMIBindCtx.RegisterObjectParam(String,Object)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectParam(String,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Register the given object pointer under the specified name in the internally-maintained table of object pointers.\n  remarks: For more information, please see the existing documentation for `IBindCtx::RegisterObjectParam` in the MSDN library.\n  syntax:\n    content: public void RegisterObjectParam (string pszKey, object punk);\n    parameters:\n    - id: pszKey\n      type: System.String\n      description: The name to register `punk` with.\n    - id: punk\n      type: System.Object\n      description: The object to register.\n  overload: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectParam*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.ReleaseBoundObjects\n  id: ReleaseBoundObjects\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  langs:\n  - csharp\n  name: ReleaseBoundObjects()\n  nameWithType: UCOMIBindCtx.ReleaseBoundObjects()\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.ReleaseBoundObjects()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Releases all the objects currently registered with the bind context by <xref:System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound*>.\n  remarks: For more information, please see the existing documentation for `IBindCtx::ReleaseBoundObjects` in the MSDN library.\n  syntax:\n    content: public void ReleaseBoundObjects ();\n    parameters: []\n  overload: System.Runtime.InteropServices.UCOMIBindCtx.ReleaseBoundObjects*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectBound(System.Object)\n  id: RevokeObjectBound(System.Object)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  langs:\n  - csharp\n  name: RevokeObjectBound(Object)\n  nameWithType: UCOMIBindCtx.RevokeObjectBound(Object)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectBound(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Removes the object from the set of registered objects that need to be released.\n  remarks: For more information, please see the existing documentation for `IBindCtx::RevokeObjectBound` in the MSDN library.\n  syntax:\n    content: public void RevokeObjectBound (object punk);\n    parameters:\n    - id: punk\n      type: System.Object\n      description: The object to unregister for release.\n  overload: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectBound*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectParam(System.String)\n  id: RevokeObjectParam(System.String)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  langs:\n  - csharp\n  name: RevokeObjectParam(String)\n  nameWithType: UCOMIBindCtx.RevokeObjectParam(String)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectParam(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Revoke the registration of the object currently found under this key in the internally-maintained table of contextual object parameters, if any such key is currently registered.\n  remarks: For more information, please see the existing documentation for `IBindCtx::RevokeObjectParam` in the MSDN library.\n  syntax:\n    content: public void RevokeObjectParam (string pszKey);\n    parameters:\n    - id: pszKey\n      type: System.String\n      description: The key to unregister.\n  overload: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectParam*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.SetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)\n  id: SetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  langs:\n  - csharp\n  name: SetBindOptions(BIND_OPTS)\n  nameWithType: UCOMIBindCtx.SetBindOptions(BIND_OPTS)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.SetBindOptions(BIND_OPTS)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Store in the bind context a block of parameters that will apply to later <xref uid=\"langword_csharp_UCOMIMoniker\" name=\"UCOMIMoniker\" href=\"\"></xref> operations using this bind context.\n  remarks: For more information, please see the existing documentation for `IBindCtx::SetBindOptions` in the MSDN library.\n  syntax:\n    content: public void SetBindOptions (ref System.Runtime.InteropServices.BIND_OPTS pbindopts);\n    parameters:\n    - id: pbindopts\n      type: System.Runtime.InteropServices.BIND_OPTS\n      description: The structure containing the binding options to set.\n  overload: System.Runtime.InteropServices.UCOMIBindCtx.SetBindOptions*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.EnumObjectParam(System.Runtime.InteropServices.UCOMIEnumString@)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: EnumObjectParam(UCOMIEnumString)\n  nameWithType: UCOMIBindCtx.EnumObjectParam(UCOMIEnumString)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.EnumObjectParam(UCOMIEnumString)\n- uid: System.Runtime.InteropServices.UCOMIEnumString\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: UCOMIEnumString\n  nameWithType: UCOMIEnumString\n  fullName: System.Runtime.InteropServices.UCOMIEnumString\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.GetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: GetBindOptions(BIND_OPTS)\n  nameWithType: UCOMIBindCtx.GetBindOptions(BIND_OPTS)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.GetBindOptions(BIND_OPTS)\n- uid: System.Runtime.InteropServices.BIND_OPTS\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: BIND_OPTS\n  nameWithType: BIND_OPTS\n  fullName: System.Runtime.InteropServices.BIND_OPTS\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.GetObjectParam(System.String,System.Object@)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: GetObjectParam(String,Object)\n  nameWithType: UCOMIBindCtx.GetObjectParam(String,Object)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.GetObjectParam(String,Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.UCOMIRunningObjectTable@)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: GetRunningObjectTable(UCOMIRunningObjectTable)\n  nameWithType: UCOMIBindCtx.GetRunningObjectTable(UCOMIRunningObjectTable)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.GetRunningObjectTable(UCOMIRunningObjectTable)\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: UCOMIRunningObjectTable\n  nameWithType: UCOMIRunningObjectTable\n  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound(System.Object)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: RegisterObjectBound(Object)\n  nameWithType: UCOMIBindCtx.RegisterObjectBound(Object)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound(Object)\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectParam(System.String,System.Object)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: RegisterObjectParam(String,Object)\n  nameWithType: UCOMIBindCtx.RegisterObjectParam(String,Object)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectParam(String,Object)\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.ReleaseBoundObjects\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: ReleaseBoundObjects()\n  nameWithType: UCOMIBindCtx.ReleaseBoundObjects()\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.ReleaseBoundObjects()\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectBound(System.Object)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: RevokeObjectBound(Object)\n  nameWithType: UCOMIBindCtx.RevokeObjectBound(Object)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectBound(Object)\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectParam(System.String)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: RevokeObjectParam(String)\n  nameWithType: UCOMIBindCtx.RevokeObjectParam(String)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectParam(String)\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.SetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: SetBindOptions(BIND_OPTS)\n  nameWithType: UCOMIBindCtx.SetBindOptions(BIND_OPTS)\n  fullName: System.Runtime.InteropServices.UCOMIBindCtx.SetBindOptions(BIND_OPTS)\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.EnumObjectParam*\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: EnumObjectParam\n  nameWithType: UCOMIBindCtx.EnumObjectParam\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.GetBindOptions*\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: GetBindOptions\n  nameWithType: UCOMIBindCtx.GetBindOptions\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.GetObjectParam*\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: GetObjectParam\n  nameWithType: UCOMIBindCtx.GetObjectParam\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.GetRunningObjectTable*\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: GetRunningObjectTable\n  nameWithType: UCOMIBindCtx.GetRunningObjectTable\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound*\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: RegisterObjectBound\n  nameWithType: UCOMIBindCtx.RegisterObjectBound\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectParam*\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: RegisterObjectParam\n  nameWithType: UCOMIBindCtx.RegisterObjectParam\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.ReleaseBoundObjects*\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: ReleaseBoundObjects\n  nameWithType: UCOMIBindCtx.ReleaseBoundObjects\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectBound*\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: RevokeObjectBound\n  nameWithType: UCOMIBindCtx.RevokeObjectBound\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectParam*\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: RevokeObjectParam\n  nameWithType: UCOMIBindCtx.RevokeObjectParam\n- uid: System.Runtime.InteropServices.UCOMIBindCtx.SetBindOptions*\n  parent: System.Runtime.InteropServices.UCOMIBindCtx\n  isExternal: false\n  name: SetBindOptions\n  nameWithType: UCOMIBindCtx.SetBindOptions\n"}