{"nodes":[{"pos":[582,680],"content":"Describes a complex model, using a collection rather than individual properties as the data store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Describes a complex model, using a collection rather than individual properties as the data store.","pos":[0,98]}]},{"pos":[1539,1637],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.ModelBinding.ComplexModel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.ModelBinding.ComplexModel\"></xref> class."},{"pos":[1941,1964],"content":"Metadata for the model.","needQuote":true,"needEscape":true,"nodes":[{"content":"Metadata for the model.","pos":[0,23]}]},{"pos":[2101,2142],"content":"Metadata for the properties of the model.","needQuote":true,"needEscape":true,"nodes":[{"content":"Metadata for the properties of the model.","pos":[0,41]}]},{"pos":[2315,2453],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">modelMetadata</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">propertyMetadata</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>modelMetadata</code> or <code>propertyMetadata</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[2844,2876],"content":"Gets the metadata for the model.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the metadata for the model.","pos":[0,32]}]},{"pos":[3049,3076],"content":"The metadata for the model.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata for the model.","pos":[0,27]}]},{"pos":[3563,3613],"content":"Gets the metadata for the properties of the model.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the metadata for the properties of the model.","pos":[0,50]}]},{"pos":[3891,3936],"content":"The metadata for the properties of the model.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata for the properties of the model.","pos":[0,45]}]},{"pos":[4381,4486],"content":"Gets a collection that contains entries that correspond to each property for which binding was attempted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection that contains entries that correspond to each property for which binding was attempted.","pos":[0,105]}]},{"pos":[4498,4668],"content":"If binding fails for a property, the entry's value will be `null`. If binding is not attempted for a property, the dictionary will not contain an entry for that property.","needQuote":true,"needEscape":true,"nodes":[{"content":"If binding fails for a property, the entry's value will be <ph id=\"ph1\">`null`</ph>.","pos":[0,66],"source":"If binding fails for a property, the entry's value will be `null`."},{"content":"If binding is not attempted for a property, the dictionary will not contain an entry for that property.","pos":[67,170]}]},{"pos":[5001,5069],"content":"Metadata for model properties for which model binding was attempted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Metadata for model properties for which model binding was attempted.","pos":[0,68]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.ModelBinding.ComplexModel\n  id: ComplexModel\n  children:\n  - System.Web.ModelBinding.ComplexModel.#ctor(System.Web.ModelBinding.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata})\n  - System.Web.ModelBinding.ComplexModel.ModelMetadata\n  - System.Web.ModelBinding.ComplexModel.PropertyMetadata\n  - System.Web.ModelBinding.ComplexModel.Results\n  langs:\n  - csharp\n  name: ComplexModel\n  nameWithType: ComplexModel\n  fullName: System.Web.ModelBinding.ComplexModel\n  type: Class\n  summary: Describes a complex model, using a collection rather than individual properties as the data store.\n  syntax:\n    content: public class ComplexModel\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ComplexModel.#ctor(System.Web.ModelBinding.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata})\n  id: '#ctor(System.Web.ModelBinding.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata})'\n  parent: System.Web.ModelBinding.ComplexModel\n  langs:\n  - csharp\n  name: ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)\n  nameWithType: ComplexModel.ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)\n  fullName: System.Web.ModelBinding.ComplexModel.ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Initializes a new instance of the <xref href=\"System.Web.ModelBinding.ComplexModel\"></xref> class.\n  syntax:\n    content: public ComplexModel (System.Web.ModelBinding.ModelMetadata modelMetadata, System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata> propertyMetadata);\n    parameters:\n    - id: modelMetadata\n      type: System.Web.ModelBinding.ModelMetadata\n      description: Metadata for the model.\n    - id: propertyMetadata\n      type: System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata}\n      description: Metadata for the properties of the model.\n  overload: System.Web.ModelBinding.ComplexModel.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>modelMetadata</code> or <code>propertyMetadata</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ComplexModel.ModelMetadata\n  id: ModelMetadata\n  parent: System.Web.ModelBinding.ComplexModel\n  langs:\n  - csharp\n  name: ModelMetadata\n  nameWithType: ComplexModel.ModelMetadata\n  fullName: System.Web.ModelBinding.ComplexModel.ModelMetadata\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets the metadata for the model.\n  syntax:\n    content: public System.Web.ModelBinding.ModelMetadata ModelMetadata { get; }\n    return:\n      type: System.Web.ModelBinding.ModelMetadata\n      description: The metadata for the model.\n  overload: System.Web.ModelBinding.ComplexModel.ModelMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ComplexModel.PropertyMetadata\n  id: PropertyMetadata\n  parent: System.Web.ModelBinding.ComplexModel\n  langs:\n  - csharp\n  name: PropertyMetadata\n  nameWithType: ComplexModel.PropertyMetadata\n  fullName: System.Web.ModelBinding.ComplexModel.PropertyMetadata\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets the metadata for the properties of the model.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.ModelBinding.ModelMetadata> PropertyMetadata { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.ModelBinding.ModelMetadata}\n      description: The metadata for the properties of the model.\n  overload: System.Web.ModelBinding.ComplexModel.PropertyMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ComplexModel.Results\n  id: Results\n  parent: System.Web.ModelBinding.ComplexModel\n  langs:\n  - csharp\n  name: Results\n  nameWithType: ComplexModel.Results\n  fullName: System.Web.ModelBinding.ComplexModel.Results\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets a collection that contains entries that correspond to each property for which binding was attempted.\n  remarks: If binding fails for a property, the entry's value will be `null`. If binding is not attempted for a property, the dictionary will not contain an entry for that property.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<System.Web.ModelBinding.ModelMetadata,System.Web.ModelBinding.ComplexModelResult> Results { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.Web.ModelBinding.ModelMetadata,System.Web.ModelBinding.ComplexModelResult}\n      description: Metadata for model properties for which model binding was attempted.\n  overload: System.Web.ModelBinding.ComplexModel.Results*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.ModelBinding.ComplexModel.#ctor(System.Web.ModelBinding.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata})\n  parent: System.Web.ModelBinding.ComplexModel\n  isExternal: false\n  name: ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)\n  nameWithType: ComplexModel.ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)\n  fullName: System.Web.ModelBinding.ComplexModel.ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)\n- uid: System.Web.ModelBinding.ModelMetadata\n  parent: System.Web.ModelBinding\n  isExternal: false\n  name: ModelMetadata\n  nameWithType: ModelMetadata\n  fullName: System.Web.ModelBinding.ModelMetadata\n- uid: System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<ModelMetadata>\n  nameWithType: IEnumerable<ModelMetadata>\n  fullName: System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Web.ModelBinding.ModelMetadata>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.ModelBinding.ModelMetadata\n    name: ModelMetadata\n    nameWithType: ModelMetadata\n    fullName: ModelMetadata\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ComplexModel.ModelMetadata\n  parent: System.Web.ModelBinding.ComplexModel\n  isExternal: false\n  name: ModelMetadata\n  nameWithType: ComplexModel.ModelMetadata\n  fullName: System.Web.ModelBinding.ComplexModel.ModelMetadata\n- uid: System.Web.ModelBinding.ComplexModel.PropertyMetadata\n  parent: System.Web.ModelBinding.ComplexModel\n  isExternal: false\n  name: PropertyMetadata\n  nameWithType: ComplexModel.PropertyMetadata\n  fullName: System.Web.ModelBinding.ComplexModel.PropertyMetadata\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.ModelBinding.ModelMetadata}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ModelMetadata>\n  nameWithType: ReadOnlyCollection<ModelMetadata>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.ModelBinding.ModelMetadata>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Web.ModelBinding.ModelMetadata>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.ModelBinding.ModelMetadata\n    name: ModelMetadata\n    nameWithType: ModelMetadata\n    fullName: ModelMetadata\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ComplexModel.Results\n  parent: System.Web.ModelBinding.ComplexModel\n  isExternal: false\n  name: Results\n  nameWithType: ComplexModel.Results\n  fullName: System.Web.ModelBinding.ComplexModel.Results\n- uid: System.Collections.Generic.IDictionary{System.Web.ModelBinding.ModelMetadata,System.Web.ModelBinding.ComplexModelResult}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<ModelMetadata,ComplexModelResult>\n  nameWithType: IDictionary<ModelMetadata,ComplexModelResult>\n  fullName: System.Collections.Generic.IDictionary<System.Web.ModelBinding.ModelMetadata,System.Web.ModelBinding.ComplexModelResult>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.Web.ModelBinding.ModelMetadata,System.Web.ModelBinding.ComplexModelResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.ModelBinding.ModelMetadata\n    name: ModelMetadata\n    nameWithType: ModelMetadata\n    fullName: ModelMetadata\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Web.ModelBinding.ComplexModelResult\n    name: ComplexModelResult\n    nameWithType: ComplexModelResult\n    fullName: ComplexModelResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ComplexModel.#ctor*\n  parent: System.Web.ModelBinding.ComplexModel\n  isExternal: false\n  name: ComplexModel\n  nameWithType: ComplexModel.ComplexModel\n- uid: System.Web.ModelBinding.ComplexModel.ModelMetadata*\n  parent: System.Web.ModelBinding.ComplexModel\n  isExternal: false\n  name: ModelMetadata\n  nameWithType: ComplexModel.ModelMetadata\n- uid: System.Web.ModelBinding.ComplexModel.PropertyMetadata*\n  parent: System.Web.ModelBinding.ComplexModel\n  isExternal: false\n  name: PropertyMetadata\n  nameWithType: ComplexModel.PropertyMetadata\n- uid: System.Web.ModelBinding.ComplexModel.Results*\n  parent: System.Web.ModelBinding.ComplexModel\n  isExternal: false\n  name: Results\n  nameWithType: ComplexModel.Results\n"}