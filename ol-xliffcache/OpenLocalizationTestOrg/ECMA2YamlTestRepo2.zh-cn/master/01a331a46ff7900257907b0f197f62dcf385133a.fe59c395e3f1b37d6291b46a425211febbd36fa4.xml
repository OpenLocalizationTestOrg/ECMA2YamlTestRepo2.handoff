{"nodes":[{"pos":[687,809],"content":"Defines a contract for reliability between the author of some code, and the developers who have a dependency on that code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a contract for reliability between the author of some code, and the developers who have a dependency on that code.","pos":[0,122]}]},{"pos":[822,1589],"content":"The ReliabilityContractAttribute attribute provides a mechanism for you to document your code, and to indicate what type of reliability guarantees you can make in the face of exceptional conditions that could potentially lead to an inconsistent state. In this context, exceptional conditions are defined as asynchronous exceptions that can be generated at run time by the common language runtime, such as aborted threads, out-of-memory situations, and stack overflows. You can apply the ReliabilityContractAttribute attribute to assemblies, types, and methods.       Use this attribute with the <xref:System.Runtime.ConstrainedExecution.Consistency> enumeration to define a reliability contract by documenting the level of reliability in a particular piece of code.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ReliabilityContractAttribute attribute provides a mechanism for you to document your code, and to indicate what type of reliability guarantees you can make in the face of exceptional conditions that could potentially lead to an inconsistent state. In this context, exceptional conditions are defined as asynchronous exceptions that can be generated at run time by the common language runtime, such as aborted threads, out-of-memory situations, and stack overflows. You can apply the ReliabilityContractAttribute attribute to assemblies, types, and methods.       Use this attribute with the <xref:System.Runtime.ConstrainedExecution.Consistency> enumeration to define a reliability contract by documenting the level of reliability in a particular piece of code.","pos":[0,765],"nodes":[{"content":"The ReliabilityContractAttribute attribute provides a mechanism for you to document your code, and to indicate what type of reliability guarantees you can make in the face of exceptional conditions that could potentially lead to an inconsistent state.","pos":[0,251]},{"content":"In this context, exceptional conditions are defined as asynchronous exceptions that can be generated at run time by the common language runtime, such as aborted threads, out-of-memory situations, and stack overflows.","pos":[252,468]},{"content":"You can apply the ReliabilityContractAttribute attribute to assemblies, types, and methods.","pos":[469,560]},{"content":"Use this attribute with the &lt;xref:System.Runtime.ConstrainedExecution.Consistency&gt; enumeration to define a reliability contract by documenting the level of reliability in a particular piece of code.","pos":[567,765],"source":"       Use this attribute with the <xref:System.Runtime.ConstrainedExecution.Consistency> enumeration to define a reliability contract by documenting the level of reliability in a particular piece of code."}]}]},{"pos":[3287,3582],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Runtime.ConstrainedExecution.Consistency\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> guarantee and <bpt id=\"p3\">&lt;xref href=\"System.Runtime.ConstrainedExecution.Cer\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\"></xref> class with the specified <xref href=\"System.Runtime.ConstrainedExecution.Consistency\"></xref> guarantee and <xref href=\"System.Runtime.ConstrainedExecution.Cer\"></xref> value."},{"pos":[4333,4420],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.ConstrainedExecution.Consistency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Runtime.ConstrainedExecution.Consistency\"></xref> values."},{"pos":[4506,4585],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.ConstrainedExecution.Cer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Runtime.ConstrainedExecution.Cer\"></xref> values."},{"pos":[5137,5267],"content":"Gets the value that determines the behavior of a method, type, or assembly when called under a Constrained Execution Region (CER).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value that determines the behavior of a method, type, or assembly when called under a Constrained Execution Region (CER).","pos":[0,130]}]},{"pos":[5434,5513],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.ConstrainedExecution.Cer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Runtime.ConstrainedExecution.Cer\"></xref> values."},{"pos":[6148,6260],"content":"Gets the value of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.ConstrainedExecution.Consistency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reliability contract.","needQuote":true,"needEscape":true,"source":"Gets the value of the <xref href=\"System.Runtime.ConstrainedExecution.Consistency\"></xref> reliability contract."},{"pos":[6460,6547],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.ConstrainedExecution.Consistency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Runtime.ConstrainedExecution.Consistency\"></xref> values."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  id: ReliabilityContractAttribute\n  children:\n  - System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.#ctor(System.Runtime.ConstrainedExecution.Consistency,System.Runtime.ConstrainedExecution.Cer)\n  - System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.Cer\n  - System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.ConsistencyGuarantee\n  langs:\n  - csharp\n  name: ReliabilityContractAttribute\n  nameWithType: ReliabilityContractAttribute\n  fullName: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  type: Class\n  summary: Defines a contract for reliability between the author of some code, and the developers who have a dependency on that code.\n  remarks: \"The ReliabilityContractAttribute attribute provides a mechanism for you to document your code, and to indicate what type of reliability guarantees you can make in the face of exceptional conditions that could potentially lead to an inconsistent state. In this context, exceptional conditions are defined as asynchronous exceptions that can be generated at run time by the common language runtime, such as aborted threads, out-of-memory situations, and stack overflows. You can apply the ReliabilityContractAttribute attribute to assemblies, types, and methods.  \\n  \\n Use this attribute with the <xref:System.Runtime.ConstrainedExecution.Consistency> enumeration to define a reliability contract by documenting the level of reliability in a particular piece of code.\"\n  example:\n  - \"The following code example demonstrates the use of the ReliabilityContractAttribute attribute to document the level of reliability of an assembly.  \\n  \\n [!code-cpp[FxCop.Reliability.ReliabilityContract#1](~/add/codesnippet/cpp/t-system.runtime.constra_1_1.cpp)]\\n [!code-cs[FxCop.Reliability.ReliabilityContract#1](~/add/codesnippet/csharp/t-system.runtime.constra_1_1.cs)]\\n [!code-vb[FxCop.Reliability.ReliabilityContract#1](~/add/codesnippet/visualbasic/t-system.runtime.constra_1_1.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Interface, Inherited=false)]\n\n      public sealed class ReliabilityContractAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.#ctor(System.Runtime.ConstrainedExecution.Consistency,System.Runtime.ConstrainedExecution.Cer)\n  id: '#ctor(System.Runtime.ConstrainedExecution.Consistency,System.Runtime.ConstrainedExecution.Cer)'\n  parent: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  langs:\n  - csharp\n  name: ReliabilityContractAttribute(Consistency,Cer)\n  nameWithType: ReliabilityContractAttribute.ReliabilityContractAttribute(Consistency,Cer)\n  fullName: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.ReliabilityContractAttribute(Consistency,Cer)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.ConstrainedExecution\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\"></xref> class with the specified <xref href=\"System.Runtime.ConstrainedExecution.Consistency\"></xref> guarantee and <xref href=\"System.Runtime.ConstrainedExecution.Cer\"></xref> value.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of the ReliabilityContractAttribute constructor to create a constrained execution region and a `finally` block that is guaranteed to execute.  \\n  \\n [!code-vb[System.Runtime.ConstrainedExecution#1](~/add/codesnippet/visualbasic/e6278308-6a8f-4839-9622-_1.vb)]\\n [!code-cs[System.Runtime.ConstrainedExecution#1](~/add/codesnippet/csharp/e6278308-6a8f-4839-9622-_1.cs)]\"\n  syntax:\n    content: public ReliabilityContractAttribute (System.Runtime.ConstrainedExecution.Consistency consistencyGuarantee, System.Runtime.ConstrainedExecution.Cer cer);\n    parameters:\n    - id: consistencyGuarantee\n      type: System.Runtime.ConstrainedExecution.Consistency\n      description: One of the <xref href=\"System.Runtime.ConstrainedExecution.Consistency\"></xref> values.\n    - id: cer\n      type: System.Runtime.ConstrainedExecution.Cer\n      description: One of the <xref href=\"System.Runtime.ConstrainedExecution.Cer\"></xref> values.\n  overload: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.Cer\n  id: Cer\n  parent: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  langs:\n  - csharp\n  name: Cer\n  nameWithType: ReliabilityContractAttribute.Cer\n  fullName: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.Cer\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.ConstrainedExecution\n  summary: Gets the value that determines the behavior of a method, type, or assembly when called under a Constrained Execution Region (CER).\n  syntax:\n    content: public System.Runtime.ConstrainedExecution.Cer Cer { get; }\n    return:\n      type: System.Runtime.ConstrainedExecution.Cer\n      description: One of the <xref href=\"System.Runtime.ConstrainedExecution.Cer\"></xref> values.\n  overload: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.Cer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.ConsistencyGuarantee\n  id: ConsistencyGuarantee\n  parent: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  langs:\n  - csharp\n  name: ConsistencyGuarantee\n  nameWithType: ReliabilityContractAttribute.ConsistencyGuarantee\n  fullName: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.ConsistencyGuarantee\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.ConstrainedExecution\n  summary: Gets the value of the <xref href=\"System.Runtime.ConstrainedExecution.Consistency\"></xref> reliability contract.\n  syntax:\n    content: public System.Runtime.ConstrainedExecution.Consistency ConsistencyGuarantee { get; }\n    return:\n      type: System.Runtime.ConstrainedExecution.Consistency\n      description: One of the <xref href=\"System.Runtime.ConstrainedExecution.Consistency\"></xref> values.\n  overload: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.ConsistencyGuarantee*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.#ctor(System.Runtime.ConstrainedExecution.Consistency,System.Runtime.ConstrainedExecution.Cer)\n  parent: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  isExternal: false\n  name: ReliabilityContractAttribute(Consistency,Cer)\n  nameWithType: ReliabilityContractAttribute.ReliabilityContractAttribute(Consistency,Cer)\n  fullName: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.ReliabilityContractAttribute(Consistency,Cer)\n- uid: System.Runtime.ConstrainedExecution.Consistency\n  parent: System.Runtime.ConstrainedExecution\n  isExternal: false\n  name: Consistency\n  nameWithType: Consistency\n  fullName: System.Runtime.ConstrainedExecution.Consistency\n- uid: System.Runtime.ConstrainedExecution.Cer\n  parent: System.Runtime.ConstrainedExecution\n  isExternal: false\n  name: Cer\n  nameWithType: Cer\n  fullName: System.Runtime.ConstrainedExecution.Cer\n- uid: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.Cer\n  parent: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  isExternal: false\n  name: Cer\n  nameWithType: ReliabilityContractAttribute.Cer\n  fullName: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.Cer\n- uid: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.ConsistencyGuarantee\n  parent: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  isExternal: false\n  name: ConsistencyGuarantee\n  nameWithType: ReliabilityContractAttribute.ConsistencyGuarantee\n  fullName: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.ConsistencyGuarantee\n- uid: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.#ctor*\n  parent: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  isExternal: false\n  name: ReliabilityContractAttribute\n  nameWithType: ReliabilityContractAttribute.ReliabilityContractAttribute\n- uid: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.Cer*\n  parent: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  isExternal: false\n  name: Cer\n  nameWithType: ReliabilityContractAttribute.Cer\n- uid: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.ConsistencyGuarantee*\n  parent: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute\n  isExternal: false\n  name: ConsistencyGuarantee\n  nameWithType: ReliabilityContractAttribute.ConsistencyGuarantee\n"}