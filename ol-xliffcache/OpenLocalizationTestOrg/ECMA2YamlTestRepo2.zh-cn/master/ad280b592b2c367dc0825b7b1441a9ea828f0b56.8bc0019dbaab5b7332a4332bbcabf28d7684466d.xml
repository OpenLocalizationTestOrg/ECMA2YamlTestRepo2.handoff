{"nodes":[{"pos":[1426,1520],"content":"Specifies a key BLOB format for use with Microsoft Cryptography Next Generation (CNG) objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a key BLOB format for use with Microsoft Cryptography Next Generation (CNG) objects.","pos":[0,94]}]},{"pos":[1533,2577],"content":"The CngKeyBlobFormat class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained string that specifies the key BLOB format name.       The static properties return CngKeyBlobFormat objects. Each object's internal string name is initialized to the key BLOB format name that corresponds to the name of the static property.       You can also use this class to create objects for key BLOB formats that are not covered by the static properties.       Several CNG classes (such as <xref:System.Security.Cryptography.CngKey>) accept CngKeyBlobFormat objects through a `format` parameter. When the class receives the CngKeyBlobFormat object, it retrieves the embedded name of the key BLOB format by calling the object's <xref:System.Security.Cryptography.CngKeyBlobFormat.Format%2A> property.       Therefore, CngKeyBlobFormat serves as an enumeration of well-known key BLOB formats. It lets you identify a well-known key BLOB format by using a strongly typed value instead of a string.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CngKeyBlobFormat class is a utility class.","pos":[0,46]},{"content":"It consists of static properties, comparison methods, and a private, internally maintained string that specifies the key BLOB format name.","pos":[47,185]},{"content":"The static properties return CngKeyBlobFormat objects.","pos":[192,246]},{"content":"Each object's internal string name is initialized to the key BLOB format name that corresponds to the name of the static property.","pos":[247,377]},{"content":"You can also use this class to create objects for key BLOB formats that are not covered by the static properties.","pos":[384,497]},{"content":"Several CNG classes (such as &lt;xref:System.Security.Cryptography.CngKey&gt;) accept CngKeyBlobFormat objects through a <ph id=\"ph1\">`format`</ph> parameter.","pos":[504,638],"source":"       Several CNG classes (such as <xref:System.Security.Cryptography.CngKey>) accept CngKeyBlobFormat objects through a `format` parameter."},{"content":"When the class receives the CngKeyBlobFormat object, it retrieves the embedded name of the key BLOB format by calling the object's &lt;xref:System.Security.Cryptography.CngKeyBlobFormat.Format%2A&gt; property.","pos":[639,842],"source":" When the class receives the CngKeyBlobFormat object, it retrieves the embedded name of the key BLOB format by calling the object's <xref:System.Security.Cryptography.CngKeyBlobFormat.Format%2A> property."},{"content":"Therefore, CngKeyBlobFormat serves as an enumeration of well-known key BLOB formats.","pos":[849,933]},{"content":"It lets you identify a well-known key BLOB format by using a strongly typed value instead of a string.","pos":[934,1036]}]},{"pos":[3319,3456],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified format.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> class by using the specified format."},{"pos":[3468,3988],"content":"The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngKeyBlobFormat> objects for format types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngKeyBlobFormat> class. This capacity allows future [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new key BLOB formats, which can be accessed just like the key BLOB formats that are currently available.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primary purpose of this constructor is to provide a method for creating &lt;xref:System.Security.Cryptography.CngKeyBlobFormat&gt; objects for format types that are not represented by the static properties of the &lt;xref:System.Security.Cryptography.CngKeyBlobFormat&gt; class.","pos":[0,270],"source":"The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngKeyBlobFormat> objects for format types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngKeyBlobFormat> class."},{"content":"This capacity allows future <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> releases, service packs, and third-party developers to add new key BLOB formats, which can be accessed just like the key BLOB formats that are currently available.","pos":[271,520],"source":" This capacity allows future [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new key BLOB formats, which can be accessed just like the key BLOB formats that are currently available."}]},{"pos":[4131,4165],"content":"The key BLOB format to initialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key BLOB format to initialize.","pos":[0,34]}]},{"pos":[4347,4445],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>format</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4540,4593],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter length is 0 (zero).","needQuote":true,"needEscape":true,"source":"The <code>format</code> parameter length is 0 (zero)."},{"pos":[5026,5186],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies a private key BLOB for an elliptic curve cryptography (ECC) key.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies a private key BLOB for an elliptic curve cryptography (ECC) key."},{"pos":[5198,5290],"content":"The ECC private key BLOB format contains both the public and private portions of an ECC key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ECC private key BLOB format contains both the public and private portions of an ECC key.","pos":[0,92]}]},{"pos":[5487,5536],"content":"An object that specifies an ECC private key BLOB.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that specifies an ECC private key BLOB.","pos":[0,49]}]},{"pos":[6055,6214],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies a public key BLOB for an elliptic curve cryptography (ECC) key.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies a public key BLOB for an elliptic curve cryptography (ECC) key."},{"pos":[6226,6304],"content":"The ECC public key BLOB format contains only the public portion of an ECC key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ECC public key BLOB format contains only the public portion of an ECC key.","pos":[0,78]}]},{"pos":[6500,6548],"content":"An object that specifies an ECC public key BLOB.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that specifies an ECC public key BLOB.","pos":[0,48]}]},{"pos":[7083,7202],"content":"Compares the specified object to the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Compares the specified object to the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object."},{"pos":[7343,7457],"content":"An object to be compared to the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object."},{"pos":[7516,7827],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is a <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object that specifies the same key BLOB format as the current object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>obj</code> parameter is a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies the same key BLOB format as the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8449,8635],"content":"Compares the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the current <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Compares the specified <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object to the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object."},{"pos":[8842,8956],"content":"An object to be compared to the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object."},{"pos":[9015,9244],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter specifies the same key BLOB format as the current object; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>other</code> parameter specifies the same key BLOB format as the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9720,9858],"content":"Gets the name of the key BLOB format that the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specifies.","needQuote":true,"needEscape":true,"source":"Gets the name of the key BLOB format that the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object specifies."},{"pos":[9969,10003],"content":"The embedded key BLOB format name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The embedded key BLOB format name.","pos":[0,34]}]},{"pos":[10539,10662],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies a generic private key BLOB.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies a generic private key BLOB."},{"pos":[10674,10886],"content":"A generic private key BLOB can contain a private key of any type and does not necessarily contain the corresponding public key. The type of key that the BLOB contains can be determined only by examining the BLOB.","needQuote":true,"needEscape":true,"nodes":[{"content":"A generic private key BLOB can contain a private key of any type and does not necessarily contain the corresponding public key. The type of key that the BLOB contains can be determined only by examining the BLOB.","pos":[0,212],"nodes":[{"content":"A generic private key BLOB can contain a private key of any type and does not necessarily contain the corresponding public key.","pos":[0,127]},{"content":"The type of key that the BLOB contains can be determined only by examining the BLOB.","pos":[128,212]}]}]},{"pos":[11087,11139],"content":"An object that specifies a generic private key BLOB.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that specifies a generic private key BLOB.","pos":[0,52]}]},{"pos":[11682,11804],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies a generic public key BLOB.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies a generic public key BLOB."},{"pos":[11816,11971],"content":"A generic public key BLOB can contain a public key of any type. The type of public key that the BLOB contains can be determined only by examining the BLOB.","needQuote":true,"needEscape":true,"nodes":[{"content":"A generic public key BLOB can contain a public key of any type. The type of public key that the BLOB contains can be determined only by examining the BLOB.","pos":[0,155],"nodes":[{"content":"A generic public key BLOB can contain a public key of any type.","pos":[0,63]},{"content":"The type of public key that the BLOB contains can be determined only by examining the BLOB.","pos":[64,155]}]}]},{"pos":[12171,12222],"content":"An object that specifies a generic public key BLOB.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that specifies a generic public key BLOB.","pos":[0,51]}]},{"pos":[12738,12883],"content":"Generates a hash value for the embedded key BLOB format in the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Generates a hash value for the embedded key BLOB format in the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object."},{"pos":[13018,13065],"content":"The hash value of the embedded key BLOB format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash value of the embedded key BLOB format.","pos":[0,47]}]},{"pos":[13862,13993],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects specify the same key BLOB format.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> objects specify the same key BLOB format."},{"pos":[14263,14306],"content":"An object that specifies a key BLOB format.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that specifies a key BLOB format.","pos":[0,43]}]},{"pos":[14400,14481],"content":"A second object, to be compared to the object identified by the <ph id=\"ph1\">`left`</ph> parameter.","needQuote":true,"needEscape":true,"source":"A second object, to be compared to the object identified by the `left` parameter."},{"pos":[14540,14728],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two objects specify the same key BLOB format; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects specify the same key BLOB format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15535,15673],"content":"Determines whether two <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects do not specify the same key BLOB format.","needQuote":true,"needEscape":true,"source":"Determines whether two <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> objects do not specify the same key BLOB format."},{"pos":[15945,15988],"content":"An object that specifies a key BLOB format.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that specifies a key BLOB format.","pos":[0,43]}]},{"pos":[16082,16163],"content":"A second object, to be compared to the object identified by the <ph id=\"ph1\">`left`</ph> parameter.","needQuote":true,"needEscape":true,"source":"A second object, to be compared to the object identified by the `left` parameter."},{"pos":[16222,16417],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two objects do not specify the same key BLOB format; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects do not specify the same key BLOB format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16965,17090],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies an opaque transport key BLOB.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies an opaque transport key BLOB."},{"pos":[17102,17333],"content":"The format of an opaque transport key BLOB is determined by, and associated with, each key storage provider. Importing and exporting a key in opaque transport format requires using the same key storage provider for both operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"The format of an opaque transport key BLOB is determined by, and associated with, each key storage provider. Importing and exporting a key in opaque transport format requires using the same key storage provider for both operations.","pos":[0,231],"nodes":[{"content":"The format of an opaque transport key BLOB is determined by, and associated with, each key storage provider.","pos":[0,108]},{"content":"Importing and exporting a key in opaque transport format requires using the same key storage provider for both operations.","pos":[109,231]}]}]},{"pos":[17535,17589],"content":"An object that specifies an opaque transport key BLOB.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that specifies an opaque transport key BLOB.","pos":[0,54]}]},{"pos":[18129,18286],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies a Private Key Information Syntax Standard (PKCS #8) key BLOB.","needQuote":false,"needEscape":true,"source":"Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies a Private Key Information Syntax Standard (PKCS #8) key BLOB."},{"pos":[18300,18391],"content":"A PKCS #8 private key BLOB contains both private and public key material in PKCS #8 format.","needQuote":false,"needEscape":true,"nodes":[{"content":"A PKCS #8 private key BLOB contains both private and public key material in PKCS #8 format.","pos":[0,91]}]},{"pos":[18592,18644],"content":"An object that specifies a PKCS #8 private key BLOB.","needQuote":false,"needEscape":true,"nodes":[{"content":"An object that specifies a PKCS #8 private key BLOB.","pos":[0,52]}]},{"pos":[19145,19283],"content":"Gets the name of the key BLOB format that the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specifies.","needQuote":true,"needEscape":true,"source":"Gets the name of the key BLOB format that the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object specifies."},{"pos":[19419,19453],"content":"The embedded key BLOB format name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The embedded key BLOB format name.","pos":[0,34]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  id: CngKeyBlobFormat\n  children:\n  - System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)\n  - System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)\n  - System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)\n  - System.Security.Cryptography.CngKeyBlobFormat.Format\n  - System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.GetHashCode\n  - System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  - System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  - System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.ToString\n  langs:\n  - csharp\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n  type: Class\n  summary: Specifies a key BLOB format for use with Microsoft Cryptography Next Generation (CNG) objects.\n  remarks: \"The CngKeyBlobFormat class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained string that specifies the key BLOB format name.  \\n  \\n The static properties return CngKeyBlobFormat objects. Each object's internal string name is initialized to the key BLOB format name that corresponds to the name of the static property.  \\n  \\n You can also use this class to create objects for key BLOB formats that are not covered by the static properties.  \\n  \\n Several CNG classes (such as <xref:System.Security.Cryptography.CngKey>) accept CngKeyBlobFormat objects through a `format` parameter. When the class receives the CngKeyBlobFormat object, it retrieves the embedded name of the key BLOB format by calling the object's <xref:System.Security.Cryptography.CngKeyBlobFormat.Format%2A> property.  \\n  \\n Therefore, CngKeyBlobFormat serves as an enumeration of well-known key BLOB formats. It lets you identify a well-known key BLOB format by using a strongly typed value instead of a string.\"\n  syntax:\n    content: 'public sealed class CngKeyBlobFormat : IEquatable<System.Security.Cryptography.CngKeyBlobFormat>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable<System.Security.Cryptography.CngKeyBlobFormat>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: CngKeyBlobFormat(String)\n  nameWithType: CngKeyBlobFormat.CngKeyBlobFormat(String)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.CngKeyBlobFormat(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> class by using the specified format.\n  remarks: The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngKeyBlobFormat> objects for format types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngKeyBlobFormat> class. This capacity allows future [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new key BLOB formats, which can be accessed just like the key BLOB formats that are currently available.\n  syntax:\n    content: public CngKeyBlobFormat (string format);\n    parameters:\n    - id: format\n      type: System.String\n      description: The key BLOB format to initialize.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>format</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>format</code> parameter length is 0 (zero).\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob\n  id: EccPrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: EccPrivateBlob\n  nameWithType: CngKeyBlobFormat.EccPrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies a private key BLOB for an elliptic curve cryptography (ECC) key.\n  remarks: The ECC private key BLOB format contains both the public and private portions of an ECC key.\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat EccPrivateBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: An object that specifies an ECC private key BLOB.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob\n  id: EccPublicBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: EccPublicBlob\n  nameWithType: CngKeyBlobFormat.EccPublicBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies a public key BLOB for an elliptic curve cryptography (ECC) key.\n  remarks: The ECC public key BLOB format contains only the public portion of an ECC key.\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat EccPublicBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: An object that specifies an ECC public key BLOB.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CngKeyBlobFormat.Equals(Object)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Compares the specified object to the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to be compared to the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>obj</code> parameter is a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies the same key BLOB format as the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)\n  id: Equals(System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: Equals(CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.Equals(CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(CngKeyBlobFormat)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Compares the specified <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object to the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object.\n  syntax:\n    content: public bool Equals (System.Security.Cryptography.CngKeyBlobFormat other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: An object to be compared to the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>other</code> parameter specifies the same key BLOB format as the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Format\n  id: Format\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: Format\n  nameWithType: CngKeyBlobFormat.Format\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Format\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the key BLOB format that the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object specifies.\n  syntax:\n    content: public string Format { get; }\n    return:\n      type: System.String\n      description: The embedded key BLOB format name.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.Format*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob\n  id: GenericPrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: GenericPrivateBlob\n  nameWithType: CngKeyBlobFormat.GenericPrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies a generic private key BLOB.\n  remarks: A generic private key BLOB can contain a private key of any type and does not necessarily contain the corresponding public key. The type of key that the BLOB contains can be determined only by examining the BLOB.\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat GenericPrivateBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: An object that specifies a generic private key BLOB.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob\n  id: GenericPublicBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: GenericPublicBlob\n  nameWithType: CngKeyBlobFormat.GenericPublicBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies a generic public key BLOB.\n  remarks: A generic public key BLOB can contain a public key of any type. The type of public key that the BLOB contains can be determined only by examining the BLOB.\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat GenericPublicBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: An object that specifies a generic public key BLOB.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CngKeyBlobFormat.GetHashCode()\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Generates a hash value for the embedded key BLOB format in the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash value of the embedded key BLOB format.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  id: op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Determines whether two <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> objects specify the same key BLOB format.\n  syntax:\n    content: public static bool op_Equality (System.Security.Cryptography.CngKeyBlobFormat left, System.Security.Cryptography.CngKeyBlobFormat right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: An object that specifies a key BLOB format.\n    - id: right\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: A second object, to be compared to the object identified by the `left` parameter.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects specify the same key BLOB format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  id: op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Determines whether two <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> objects do not specify the same key BLOB format.\n  syntax:\n    content: public static bool op_Inequality (System.Security.Cryptography.CngKeyBlobFormat left, System.Security.Cryptography.CngKeyBlobFormat right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: An object that specifies a key BLOB format.\n    - id: right\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: A second object, to be compared to the object identified by the `left` parameter.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two objects do not specify the same key BLOB format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob\n  id: OpaqueTransportBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: OpaqueTransportBlob\n  nameWithType: CngKeyBlobFormat.OpaqueTransportBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies an opaque transport key BLOB.\n  remarks: The format of an opaque transport key BLOB is determined by, and associated with, each key storage provider. Importing and exporting a key in opaque transport format requires using the same key storage provider for both operations.\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat OpaqueTransportBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: An object that specifies an opaque transport key BLOB.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob\n  id: Pkcs8PrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: Pkcs8PrivateBlob\n  nameWithType: CngKeyBlobFormat.Pkcs8PrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: 'Gets a <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object that specifies a Private Key Information Syntax Standard (PKCS #8) key BLOB.'\n  remarks: 'A PKCS #8 private key BLOB contains both private and public key material in PKCS #8 format.'\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat Pkcs8PrivateBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: 'An object that specifies a PKCS #8 private key BLOB.'\n  overload: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CngKeyBlobFormat.ToString\n  id: ToString\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CngKeyBlobFormat.ToString()\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.ToString()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the key BLOB format that the current <xref href=\"System.Security.Cryptography.CngKeyBlobFormat\"></xref> object specifies.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The embedded key BLOB format name.\n  overload: System.Security.Cryptography.CngKeyBlobFormat.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: CngKeyBlobFormat(String)\n  nameWithType: CngKeyBlobFormat.CngKeyBlobFormat(String)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.CngKeyBlobFormat(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: EccPrivateBlob\n  nameWithType: CngKeyBlobFormat.EccPrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: EccPublicBlob\n  nameWithType: CngKeyBlobFormat.EccPublicBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CngKeyBlobFormat.Equals(Object)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Equals(CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.Equals(CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(CngKeyBlobFormat)\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Format\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Format\n  nameWithType: CngKeyBlobFormat.Format\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Format\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: GenericPrivateBlob\n  nameWithType: CngKeyBlobFormat.GenericPrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: GenericPublicBlob\n  nameWithType: CngKeyBlobFormat.GenericPublicBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CngKeyBlobFormat.GetHashCode()\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n- uid: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: OpaqueTransportBlob\n  nameWithType: CngKeyBlobFormat.OpaqueTransportBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Pkcs8PrivateBlob\n  nameWithType: CngKeyBlobFormat.Pkcs8PrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.ToString\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: ToString()\n  nameWithType: CngKeyBlobFormat.ToString()\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.ToString()\n- uid: System.Security.Cryptography.CngKeyBlobFormat.#ctor*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: EccPrivateBlob\n  nameWithType: CngKeyBlobFormat.EccPrivateBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: EccPublicBlob\n  nameWithType: CngKeyBlobFormat.EccPublicBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Equals\n  nameWithType: CngKeyBlobFormat.Equals\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Format*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Format\n  nameWithType: CngKeyBlobFormat.Format\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: GenericPrivateBlob\n  nameWithType: CngKeyBlobFormat.GenericPrivateBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: GenericPublicBlob\n  nameWithType: CngKeyBlobFormat.GenericPublicBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CngKeyBlobFormat.GetHashCode\n- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Equality*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: op_Equality\n  nameWithType: CngKeyBlobFormat.op_Equality\n- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CngKeyBlobFormat.op_Inequality\n- uid: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: OpaqueTransportBlob\n  nameWithType: CngKeyBlobFormat.OpaqueTransportBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Pkcs8PrivateBlob\n  nameWithType: CngKeyBlobFormat.Pkcs8PrivateBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat.ToString*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: ToString\n  nameWithType: CngKeyBlobFormat.ToString\n"}