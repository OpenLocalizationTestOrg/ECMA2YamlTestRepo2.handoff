{"nodes":[{"pos":[855,984],"content":"Specifies access rights for a trustee (user, group, or computer) to perform application-specific implementations of common tasks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies access rights for a trustee (user, group, or computer) to perform application-specific implementations of common tasks.","pos":[0,129]}]},{"pos":[997,2041],"content":"Many applications have similar operations to which a trustee can be assigned rights, for example, reading, writing, and deleting objects. When you assign rights for these general operations, the application interprets them in a way specific to that application. For example, Message Queuing interprets the reading operation as receiving or peeking messages from a queue. The AccessControlEntry class provides access to these common rights.       When working with access control entries, you specify a trustee to which you are assigning the rights. You must set at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties to indicate which rights to assign to the trustee. You can set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to specify whether the rights you indicate should be granted or denied. The default entry type is to allow rights.","needQuote":false,"needEscape":true,"nodes":[{"content":"Many applications have similar operations to which a trustee can be assigned rights, for example, reading, writing, and deleting objects. When you assign rights for these general operations, the application interprets them in a way specific to that application. For example, Message Queuing interprets the reading operation as receiving or peeking messages from a queue. The AccessControlEntry class provides access to these common rights.       When working with access control entries, you specify a trustee to which you are assigning the rights. You must set at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties to indicate which rights to assign to the trustee. You can set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to specify whether the rights you indicate should be granted or denied. The default entry type is to allow rights.","pos":[0,1042],"nodes":[{"content":"Many applications have similar operations to which a trustee can be assigned rights, for example, reading, writing, and deleting objects.","pos":[0,137]},{"content":"When you assign rights for these general operations, the application interprets them in a way specific to that application.","pos":[138,261]},{"content":"For example, Message Queuing interprets the reading operation as receiving or peeking messages from a queue.","pos":[262,370]},{"content":"The AccessControlEntry class provides access to these common rights.","pos":[371,439]},{"content":"When working with access control entries, you specify a trustee to which you are assigning the rights.","pos":[446,548]},{"content":"You must set at least one of the &lt;xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A&gt;, &lt;xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A&gt;, or &lt;xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A&gt; properties to indicate which rights to assign to the trustee.","pos":[549,846],"source":" You must set at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties to indicate which rights to assign to the trustee."},{"content":"You can set the &lt;xref:System.Messaging.AccessControlEntry.EntryType%2A&gt; property to specify whether the rights you indicate should be granted or denied.","pos":[847,999],"source":" You can set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to specify whether the rights you indicate should be granted or denied."},{"content":"The default entry type is to allow rights.","pos":[1000,1042]}]}]},{"pos":[2573,2730],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.AccessControlEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that specifies neither a trustee nor set of rights to apply.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies neither a trustee nor set of rights to apply."},{"pos":[2743,3316],"content":"Set the <xref:System.Messaging.AccessControlEntry.Trustee%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee.       You can optionally set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property, though it defaults to `Allow` if you choose not to do so.","needQuote":false,"needEscape":true,"nodes":[{"content":"Set the &lt;xref:System.Messaging.AccessControlEntry.Trustee%2A&gt; property and at least one of the &lt;xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A&gt;, &lt;xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A&gt;, or &lt;xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A&gt; properties before using this &lt;xref:System.Messaging.AccessControlEntry&gt; instance to set access rights for a trustee.","pos":[0,414],"source":"Set the <xref:System.Messaging.AccessControlEntry.Trustee%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee."},{"content":"You can optionally set the &lt;xref:System.Messaging.AccessControlEntry.EntryType%2A&gt; property, though it defaults to <ph id=\"ph1\">`Allow`</ph> if you choose not to do so.","pos":[421,571],"source":"       You can optionally set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property, though it defaults to `Allow` if you choose not to do so."}]},{"pos":[3937,4097],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.AccessControlEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that specifies a trustee to which rights are granted or denied.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies a trustee to which rights are granted or denied."},{"pos":[4109,4525],"content":"Set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee.","needQuote":true,"needEscape":true,"nodes":[{"content":"Set the &lt;xref:System.Messaging.AccessControlEntry.EntryType%2A&gt; property and at least one of the &lt;xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A&gt;, &lt;xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A&gt;, or &lt;xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A&gt; properties before using this &lt;xref:System.Messaging.AccessControlEntry&gt; instance to set access rights for a trustee.","pos":[0,416],"source":"Set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee."}]},{"pos":[4701,4806],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Messaging.Trustee\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies a user, group, computer, domain, or alias.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias."},{"pos":[4978,5077],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">trustee</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>trustee</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5975,6158],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.AccessControlEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that specifies a trustee, rights to assign, and whether to grant or deny these rights.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies a trustee, rights to assign, and whether to grant or deny these rights."},{"pos":[6170,6390],"content":"This overload of the constructor sets the &lt;xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A&gt; property to a bitwise combination of the <ph id=\"ph1\">`genericAccessRights`</ph> and <ph id=\"ph2\">`standardAccessRights`</ph> parameters you specify.","needQuote":true,"needEscape":true,"source":"This overload of the constructor sets the <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> property to a bitwise combination of the `genericAccessRights` and `standardAccessRights` parameters you specify."},{"pos":[6735,6840],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Messaging.Trustee\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies a user, group, computer, domain, or alias.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias."},{"pos":[6939,7033],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.GenericAccessRights\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Messaging.GenericAccessRights\"></xref> values."},{"pos":[7134,7229],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.StandardAccessRights\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Messaging.StandardAccessRights\"></xref> values."},{"pos":[7321,7477],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.AccessControlEntryType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values, which specifies whether to allow, deny, set, or revoke the specified rights.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights."},{"pos":[7649,7748],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">trustee</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>trustee</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7895,8038],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">genericAccessRights</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">standardAccessRights</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">entryType</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameters are not valid enumeration values.","needQuote":true,"needEscape":true,"source":"The <code>genericAccessRights</code>, <code>standardAccessRights</code>, or <code>entryType</code> parameters are not valid enumeration values."},{"pos":[8456,8490],"content":"Gets or sets custom access rights.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets custom access rights.","pos":[0,34]}]},{"pos":[8617,8682],"content":"Application-specific access rights, usually defined as a bitflag.","needQuote":true,"needEscape":true,"nodes":[{"content":"Application-specific access rights, usually defined as a bitflag.","pos":[0,65]}]},{"pos":[9140,9219],"content":"Gets or sets a value that indicates how the access rights apply to the trustee.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates how the access rights apply to the trustee.","pos":[0,79]}]},{"pos":[9397,9632],"content":"One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights. The default is <xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.AccessControlEntryType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values, which specifies whether to allow, deny, set, or revoke the specified rights.","pos":[0,156],"source":"One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[157,235],"source":" The default is <xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"></xref>."}]},{"pos":[9852,9961],"content":"The entry type is not a valid <bpt id=\"p1\">&lt;xref href=\"System.Messaging.AccessControlEntryType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","needQuote":true,"needEscape":true,"source":"The entry type is not a valid <xref href=\"System.Messaging.AccessControlEntryType\"></xref> enumeration value."},{"pos":[10384,10523],"content":"Gets or sets a set of common access rights that map to both standard and object-specific access rights for reading, writing, and executing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a set of common access rights that map to both standard and object-specific access rights for reading, writing, and executing.","pos":[0,139]}]},{"pos":[10535,10870],"content":"Securable objects use the four high-order bits of the Windows 2000 and Windows NT access mask format to specify the generic access rights. Each type of securable object maps these bits to a set of its standard and object-specific access rights. Applications that define private securable objects can also use the generic access rights.","needQuote":true,"needEscape":true,"nodes":[{"content":"Securable objects use the four high-order bits of the Windows 2000 and Windows NT access mask format to specify the generic access rights. Each type of securable object maps these bits to a set of its standard and object-specific access rights. Applications that define private securable objects can also use the generic access rights.","pos":[0,335],"nodes":[{"content":"Securable objects use the four high-order bits of the Windows 2000 and Windows NT access mask format to specify the generic access rights.","pos":[0,138]},{"content":"Each type of securable object maps these bits to a set of its standard and object-specific access rights.","pos":[139,244]},{"content":"Applications that define private securable objects can also use the generic access rights.","pos":[245,335]}]}]},{"pos":[11052,11146],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.GenericAccessRights\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Messaging.GenericAccessRights\"></xref> values."},{"pos":[11376,11498],"content":"The value you set is not a valid combination of <bpt id=\"p1\">&lt;xref href=\"System.Messaging.GenericAccessRights\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> bitflag members.","needQuote":true,"needEscape":true,"source":"The value you set is not a valid combination of <xref href=\"System.Messaging.GenericAccessRights\"></xref> bitflag members."},{"pos":[11926,12043],"content":"Gets or sets a set of standard access rights that correspond to operations common to most types of securable objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a set of standard access rights that correspond to operations common to most types of securable objects.","pos":[0,117]}]},{"pos":[12055,12446],"content":"The Windows 2000 and Windows NT access mask format includes a set of bits for the standard access rights. Each type of securable object has a set of access rights that correspond to operations specific to that type of object. In addition to these object-specific access rights, there is a set of standard access rights that correspond to operations common to most types of securable objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Windows 2000 and Windows NT access mask format includes a set of bits for the standard access rights. Each type of securable object has a set of access rights that correspond to operations specific to that type of object. In addition to these object-specific access rights, there is a set of standard access rights that correspond to operations common to most types of securable objects.","pos":[0,391],"nodes":[{"content":"The Windows 2000 and Windows NT access mask format includes a set of bits for the standard access rights.","pos":[0,105]},{"content":"Each type of securable object has a set of access rights that correspond to operations specific to that type of object.","pos":[106,225]},{"content":"In addition to these object-specific access rights, there is a set of standard access rights that correspond to operations common to most types of securable objects.","pos":[226,391]}]}]},{"pos":[12631,12726],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.StandardAccessRights\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Messaging.StandardAccessRights\"></xref> values."},{"pos":[12957,13080],"content":"The value you set is not a valid combination of <bpt id=\"p1\">&lt;xref href=\"System.Messaging.StandardAccessRights\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> bitflag members.","needQuote":true,"needEscape":true,"source":"The value you set is not a valid combination of <xref href=\"System.Messaging.StandardAccessRights\"></xref> bitflag members."},{"pos":[13443,13531],"content":"Gets or sets the user, group, domain, or alias to which you are assigning access rights.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the user, group, domain, or alias to which you are assigning access rights.","pos":[0,88]}]},{"pos":[13543,13838],"content":"Both users and programs, such as Win32 services, use user accounts to log on to the local computer. Group accounts cannot be used to log on to a computer, but are useful in <xref:System.Messaging.AccessControlEntry> instances to allow or deny a set of access rights to one or more user accounts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Both users and programs, such as Win32 services, use user accounts to log on to the local computer. Group accounts cannot be used to log on to a computer, but are useful in <xref:System.Messaging.AccessControlEntry> instances to allow or deny a set of access rights to one or more user accounts.","pos":[0,295],"nodes":[{"content":"Both users and programs, such as Win32 services, use user accounts to log on to the local computer.","pos":[0,99]},{"content":"Group accounts cannot be used to log on to a computer, but are useful in &lt;xref:System.Messaging.AccessControlEntry&gt; instances to allow or deny a set of access rights to one or more user accounts.","pos":[100,295],"source":" Group accounts cannot be used to log on to a computer, but are useful in <xref:System.Messaging.AccessControlEntry> instances to allow or deny a set of access rights to one or more user accounts."}]}]},{"pos":[13984,14171],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Messaging.Trustee\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies a user account, group account, or logon session to which a <bpt id=\"p2\">&lt;xref href=\"System.Messaging.AccessControlEntry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> applies.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user account, group account, or logon session to which a <xref href=\"System.Messaging.AccessControlEntry\"></xref> applies."},{"pos":[14345,14430],"content":"The Trustee property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The Trustee property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.AccessControlEntry\n  id: AccessControlEntry\n  children:\n  - System.Messaging.AccessControlEntry.#ctor\n  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)\n  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)\n  - System.Messaging.AccessControlEntry.CustomAccessRights\n  - System.Messaging.AccessControlEntry.EntryType\n  - System.Messaging.AccessControlEntry.GenericAccessRights\n  - System.Messaging.AccessControlEntry.StandardAccessRights\n  - System.Messaging.AccessControlEntry.Trustee\n  langs:\n  - csharp\n  name: AccessControlEntry\n  nameWithType: AccessControlEntry\n  fullName: System.Messaging.AccessControlEntry\n  type: Class\n  summary: Specifies access rights for a trustee (user, group, or computer) to perform application-specific implementations of common tasks.\n  remarks: \"Many applications have similar operations to which a trustee can be assigned rights, for example, reading, writing, and deleting objects. When you assign rights for these general operations, the application interprets them in a way specific to that application. For example, Message Queuing interprets the reading operation as receiving or peeking messages from a queue. The AccessControlEntry class provides access to these common rights.  \\n  \\n When working with access control entries, you specify a trustee to which you are assigning the rights. You must set at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties to indicate which rights to assign to the trustee. You can set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to specify whether the rights you indicate should be granted or denied. The default entry type is to allow rights.\"\n  syntax:\n    content: public class AccessControlEntry\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntry.#ctor\n  id: '#ctor'\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: AccessControlEntry()\n  nameWithType: AccessControlEntry.AccessControlEntry()\n  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies neither a trustee nor set of rights to apply.\n  remarks: \"Set the <xref:System.Messaging.AccessControlEntry.Trustee%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee.  \\n  \\n You can optionally set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property, though it defaults to `Allow` if you choose not to do so.\"\n  syntax:\n    content: public AccessControlEntry ();\n    parameters: []\n  overload: System.Messaging.AccessControlEntry.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)\n  id: '#ctor(System.Messaging.Trustee)'\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: AccessControlEntry(Trustee)\n  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)\n  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies a trustee to which rights are granted or denied.\n  remarks: Set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee.\n  syntax:\n    content: public AccessControlEntry (System.Messaging.Trustee trustee);\n    parameters:\n    - id: trustee\n      type: System.Messaging.Trustee\n      description: A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias.\n  overload: System.Messaging.AccessControlEntry.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>trustee</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)\n  id: '#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)'\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)\n  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)\n  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies a trustee, rights to assign, and whether to grant or deny these rights.\n  remarks: This overload of the constructor sets the <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> property to a bitwise combination of the `genericAccessRights` and `standardAccessRights` parameters you specify.\n  syntax:\n    content: public AccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.GenericAccessRights genericAccessRights, System.Messaging.StandardAccessRights standardAccessRights, System.Messaging.AccessControlEntryType entryType);\n    parameters:\n    - id: trustee\n      type: System.Messaging.Trustee\n      description: A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias.\n    - id: genericAccessRights\n      type: System.Messaging.GenericAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.GenericAccessRights\"></xref> values.\n    - id: standardAccessRights\n      type: System.Messaging.StandardAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.StandardAccessRights\"></xref> values.\n    - id: entryType\n      type: System.Messaging.AccessControlEntryType\n      description: One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights.\n  overload: System.Messaging.AccessControlEntry.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>trustee</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The <code>genericAccessRights</code>, <code>standardAccessRights</code>, or <code>entryType</code> parameters are not valid enumeration values.\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntry.CustomAccessRights\n  id: CustomAccessRights\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: CustomAccessRights\n  nameWithType: AccessControlEntry.CustomAccessRights\n  fullName: System.Messaging.AccessControlEntry.CustomAccessRights\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets custom access rights.\n  syntax:\n    content: protected int CustomAccessRights { get; set; }\n    return:\n      type: System.Int32\n      description: Application-specific access rights, usually defined as a bitflag.\n  overload: System.Messaging.AccessControlEntry.CustomAccessRights*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntry.EntryType\n  id: EntryType\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: EntryType\n  nameWithType: AccessControlEntry.EntryType\n  fullName: System.Messaging.AccessControlEntry.EntryType\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates how the access rights apply to the trustee.\n  syntax:\n    content: public System.Messaging.AccessControlEntryType EntryType { get; set; }\n    return:\n      type: System.Messaging.AccessControlEntryType\n      description: One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights. The default is <xref uid=\"langword_csharp_Allow\" name=\"Allow\" href=\"\"></xref>.\n  overload: System.Messaging.AccessControlEntry.EntryType*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The entry type is not a valid <xref href=\"System.Messaging.AccessControlEntryType\"></xref> enumeration value.\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntry.GenericAccessRights\n  id: GenericAccessRights\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: GenericAccessRights\n  nameWithType: AccessControlEntry.GenericAccessRights\n  fullName: System.Messaging.AccessControlEntry.GenericAccessRights\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a set of common access rights that map to both standard and object-specific access rights for reading, writing, and executing.\n  remarks: Securable objects use the four high-order bits of the Windows 2000 and Windows NT access mask format to specify the generic access rights. Each type of securable object maps these bits to a set of its standard and object-specific access rights. Applications that define private securable objects can also use the generic access rights.\n  syntax:\n    content: public System.Messaging.GenericAccessRights GenericAccessRights { get; set; }\n    return:\n      type: System.Messaging.GenericAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.GenericAccessRights\"></xref> values.\n  overload: System.Messaging.AccessControlEntry.GenericAccessRights*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value you set is not a valid combination of <xref href=\"System.Messaging.GenericAccessRights\"></xref> bitflag members.\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntry.StandardAccessRights\n  id: StandardAccessRights\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: StandardAccessRights\n  nameWithType: AccessControlEntry.StandardAccessRights\n  fullName: System.Messaging.AccessControlEntry.StandardAccessRights\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a set of standard access rights that correspond to operations common to most types of securable objects.\n  remarks: The Windows 2000 and Windows NT access mask format includes a set of bits for the standard access rights. Each type of securable object has a set of access rights that correspond to operations specific to that type of object. In addition to these object-specific access rights, there is a set of standard access rights that correspond to operations common to most types of securable objects.\n  syntax:\n    content: public System.Messaging.StandardAccessRights StandardAccessRights { get; set; }\n    return:\n      type: System.Messaging.StandardAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.StandardAccessRights\"></xref> values.\n  overload: System.Messaging.AccessControlEntry.StandardAccessRights*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value you set is not a valid combination of <xref href=\"System.Messaging.StandardAccessRights\"></xref> bitflag members.\n  platform:\n  - net462\n- uid: System.Messaging.AccessControlEntry.Trustee\n  id: Trustee\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: Trustee\n  nameWithType: AccessControlEntry.Trustee\n  fullName: System.Messaging.AccessControlEntry.Trustee\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the user, group, domain, or alias to which you are assigning access rights.\n  remarks: Both users and programs, such as Win32 services, use user accounts to log on to the local computer. Group accounts cannot be used to log on to a computer, but are useful in <xref:System.Messaging.AccessControlEntry> instances to allow or deny a set of access rights to one or more user accounts.\n  syntax:\n    content: public System.Messaging.Trustee Trustee { get; set; }\n    return:\n      type: System.Messaging.Trustee\n      description: A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user account, group account, or logon session to which a <xref href=\"System.Messaging.AccessControlEntry\"></xref> applies.\n  overload: System.Messaging.AccessControlEntry.Trustee*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The Trustee property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.Messaging.AccessControlEntry.#ctor\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: AccessControlEntry()\n  nameWithType: AccessControlEntry.AccessControlEntry()\n  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()\n- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: AccessControlEntry(Trustee)\n  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)\n  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)\n- uid: System.Messaging.Trustee\n  parent: System.Messaging\n  isExternal: false\n  name: Trustee\n  nameWithType: Trustee\n  fullName: System.Messaging.Trustee\n- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)\n  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)\n  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)\n- uid: System.Messaging.GenericAccessRights\n  parent: System.Messaging\n  isExternal: false\n  name: GenericAccessRights\n  nameWithType: GenericAccessRights\n  fullName: System.Messaging.GenericAccessRights\n- uid: System.Messaging.StandardAccessRights\n  parent: System.Messaging\n  isExternal: false\n  name: StandardAccessRights\n  nameWithType: StandardAccessRights\n  fullName: System.Messaging.StandardAccessRights\n- uid: System.Messaging.AccessControlEntryType\n  parent: System.Messaging\n  isExternal: false\n  name: AccessControlEntryType\n  nameWithType: AccessControlEntryType\n  fullName: System.Messaging.AccessControlEntryType\n- uid: System.Messaging.AccessControlEntry.CustomAccessRights\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: CustomAccessRights\n  nameWithType: AccessControlEntry.CustomAccessRights\n  fullName: System.Messaging.AccessControlEntry.CustomAccessRights\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Messaging.AccessControlEntry.EntryType\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: EntryType\n  nameWithType: AccessControlEntry.EntryType\n  fullName: System.Messaging.AccessControlEntry.EntryType\n- uid: System.Messaging.AccessControlEntry.GenericAccessRights\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: GenericAccessRights\n  nameWithType: AccessControlEntry.GenericAccessRights\n  fullName: System.Messaging.AccessControlEntry.GenericAccessRights\n- uid: System.Messaging.AccessControlEntry.StandardAccessRights\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: StandardAccessRights\n  nameWithType: AccessControlEntry.StandardAccessRights\n  fullName: System.Messaging.AccessControlEntry.StandardAccessRights\n- uid: System.Messaging.AccessControlEntry.Trustee\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: Trustee\n  nameWithType: AccessControlEntry.Trustee\n  fullName: System.Messaging.AccessControlEntry.Trustee\n- uid: System.Messaging.AccessControlEntry.#ctor*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: AccessControlEntry\n  nameWithType: AccessControlEntry.AccessControlEntry\n- uid: System.Messaging.AccessControlEntry.CustomAccessRights*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: CustomAccessRights\n  nameWithType: AccessControlEntry.CustomAccessRights\n- uid: System.Messaging.AccessControlEntry.EntryType*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: EntryType\n  nameWithType: AccessControlEntry.EntryType\n- uid: System.Messaging.AccessControlEntry.GenericAccessRights*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: GenericAccessRights\n  nameWithType: AccessControlEntry.GenericAccessRights\n- uid: System.Messaging.AccessControlEntry.StandardAccessRights*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: StandardAccessRights\n  nameWithType: AccessControlEntry.StandardAccessRights\n- uid: System.Messaging.AccessControlEntry.Trustee*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: Trustee\n  nameWithType: AccessControlEntry.Trustee\n"}