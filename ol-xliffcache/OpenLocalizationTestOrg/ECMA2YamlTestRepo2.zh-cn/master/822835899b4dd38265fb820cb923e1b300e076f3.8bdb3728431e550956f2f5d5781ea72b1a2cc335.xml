{"nodes":[{"pos":[533,618],"content":"Provides a way to specify a custom LINQ query that is called in response to an event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a way to specify a custom LINQ query that is called in response to an event.","pos":[0,85]}]},{"pos":[631,1649],"content":"The CustomExpression class is used with the <xref:System.Web.UI.WebControls.QueryExtender> control. The <xref:System.Web.UI.WebControls.QueryExtender> control supports a variety of options that you can use to filter data. The <xref:System.Web.UI.WebControls.QueryExtender> control supports filters that let you search strings, search values between a specified range, compare a property value in a table to a specified value, and sort data. These options are provided as LINQ expressions in the <xref:System.Web.UI.WebControls.QueryExtender> control. You can use these filter expressions or you can provide a custom expression that you can use in the <xref:System.Web.UI.WebControls.QueryExtender> control. The CustomExpression class enables you to specify a custom expression in your application and call it in an event handler.      > [!NOTE] >  You can provide a custom query that is called by a method instead of an event handler by using the <xref:System.Web.UI.WebControls.Expressions.MethodExpression> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CustomExpression class is used with the &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control.","pos":[0,99],"source":"The CustomExpression class is used with the <xref:System.Web.UI.WebControls.QueryExtender> control."},{"content":"The &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control supports a variety of options that you can use to filter data.","pos":[100,221],"source":" The <xref:System.Web.UI.WebControls.QueryExtender> control supports a variety of options that you can use to filter data."},{"content":"The &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control supports filters that let you search strings, search values between a specified range, compare a property value in a table to a specified value, and sort data.","pos":[222,440],"source":" The <xref:System.Web.UI.WebControls.QueryExtender> control supports filters that let you search strings, search values between a specified range, compare a property value in a table to a specified value, and sort data."},{"content":"These options are provided as LINQ expressions in the &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control.","pos":[441,550],"source":" These options are provided as LINQ expressions in the <xref:System.Web.UI.WebControls.QueryExtender> control."},{"content":"You can use these filter expressions or you can provide a custom expression that you can use in the &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control.","pos":[551,706],"source":" You can use these filter expressions or you can provide a custom expression that you can use in the <xref:System.Web.UI.WebControls.QueryExtender> control."},{"content":"The CustomExpression class enables you to specify a custom expression in your application and call it in an event handler.","pos":[707,829]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You can provide a custom query that is called by a method instead of an event handler by using the &lt;xref:System.Web.UI.WebControls.Expressions.MethodExpression&gt; class.","pos":[835,1015],"source":"      > [!NOTE] >  You can provide a custom query that is called by a method instead of an event handler by using the <xref:System.Web.UI.WebControls.Expressions.MethodExpression> class."}]},{"pos":[4936,5052],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Expressions.CustomExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.Expressions.CustomExpression\"></xref> class."},{"pos":[5764,5859],"content":"Provides access to the modified <xref:System.Linq.IQueryable> object that the data source uses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to the modified &lt;xref:System.Linq.IQueryable&gt; object that the data source uses.","pos":[0,95],"source":"Provides access to the modified <xref:System.Linq.IQueryable> object that the data source uses."}]},{"pos":[6055,6122],"content":"The data source that the <xref:System.Linq.IQueryable> object uses.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data source that the &lt;xref:System.Linq.IQueryable&gt; object uses.","pos":[0,67],"source":"The data source that the <xref:System.Linq.IQueryable> object uses."}]},{"pos":[6189,6229],"content":"An instance of the modified data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the modified data source.","pos":[0,40]}]},{"pos":[6773,6844],"content":"Occurs when the <xref:System.Linq.IQueryable> data source value is set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the &lt;xref:System.Linq.IQueryable&gt; data source value is set.","pos":[0,71],"source":"Occurs when the <xref:System.Linq.IQueryable> data source value is set."}]},{"pos":[6856,6992],"content":"The <xref:System.Web.UI.WebControls.Expressions.CustomExpression> object enables you to specify a custom expression in an event handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.Expressions.CustomExpression&gt; object enables you to specify a custom expression in an event handler.","pos":[0,136],"source":"The <xref:System.Web.UI.WebControls.Expressions.CustomExpression> object enables you to specify a custom expression in an event handler."}]},{"pos":[7245,7257],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.Expressions.CustomExpression\n  id: CustomExpression\n  children:\n  - System.Web.UI.WebControls.Expressions.CustomExpression.#ctor\n  - System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(System.Linq.IQueryable)\n  - System.Web.UI.WebControls.Expressions.CustomExpression.Querying\n  langs:\n  - csharp\n  name: CustomExpression\n  nameWithType: CustomExpression\n  fullName: System.Web.UI.WebControls.Expressions.CustomExpression\n  type: Class\n  summary: Provides a way to specify a custom LINQ query that is called in response to an event.\n  remarks: \"The CustomExpression class is used with the <xref:System.Web.UI.WebControls.QueryExtender> control. The <xref:System.Web.UI.WebControls.QueryExtender> control supports a variety of options that you can use to filter data. The <xref:System.Web.UI.WebControls.QueryExtender> control supports filters that let you search strings, search values between a specified range, compare a property value in a table to a specified value, and sort data. These options are provided as LINQ expressions in the <xref:System.Web.UI.WebControls.QueryExtender> control. You can use these filter expressions or you can provide a custom expression that you can use in the <xref:System.Web.UI.WebControls.QueryExtender> control. The CustomExpression class enables you to specify a custom expression in your application and call it in an event handler.  \\n  \\n> [!NOTE]\\n>  You can provide a custom query that is called by a method instead of an event handler by using the <xref:System.Web.UI.WebControls.Expressions.MethodExpression> class.\"\n  example:\n  - \"The following example shows how to create a CustomExpression object that is used by the <xref:System.Web.UI.WebControls.QueryExtender> control. The custom expression calls the `FilterProducts` method, which contains a custom LINQ expression. The result of the filtering operation is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The following example shows an event handler that contains a custom LINQ query. The expression filters the Product table in the AdventureWorks database and displays products that have a list price greater than or equal to $3,500.00.  \\n  \\n [!code-cs[QueryExtenderCustomFiltering#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_95_2.cs)]\\n [!code-vb[QueryExtenderCustomFiltering#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_95_2.vb)]\"\n  syntax:\n    content: >-\n      [System.Web.UI.ParseChildren(true, \"Parameters\")]\n\n      [System.Web.UI.PersistChildren(false)]\n\n      public class CustomExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression\n  inheritance:\n  - System.Object\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.CustomExpression.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.Expressions.CustomExpression\n  langs:\n  - csharp\n  name: CustomExpression()\n  nameWithType: CustomExpression.CustomExpression()\n  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.CustomExpression()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.Expressions.CustomExpression\"></xref> class.\n  syntax:\n    content: public CustomExpression ();\n    parameters: []\n  overload: System.Web.UI.WebControls.Expressions.CustomExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(System.Linq.IQueryable)\n  id: GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.UI.WebControls.Expressions.CustomExpression\n  langs:\n  - csharp\n  name: GetQueryable(IQueryable)\n  nameWithType: CustomExpression.GetQueryable(IQueryable)\n  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(IQueryable)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Provides access to the modified <xref:System.Linq.IQueryable> object that the data source uses.\n  syntax:\n    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable\n      description: The data source that the <xref:System.Linq.IQueryable> object uses.\n    return:\n      type: System.Linq.IQueryable\n      description: An instance of the modified data source.\n  overload: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.CustomExpression.Querying\n  id: Querying\n  parent: System.Web.UI.WebControls.Expressions.CustomExpression\n  langs:\n  - csharp\n  name: Querying\n  nameWithType: CustomExpression.Querying\n  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.Querying\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Occurs when the <xref:System.Linq.IQueryable> data source value is set.\n  remarks: The <xref:System.Web.UI.WebControls.Expressions.CustomExpression> object enables you to specify a custom expression in an event handler.\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs> Querying;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression\n  isExternal: false\n  name: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression\n- uid: System.Web.UI.WebControls.Expressions.CustomExpression.#ctor\n  parent: System.Web.UI.WebControls.Expressions.CustomExpression\n  isExternal: false\n  name: CustomExpression()\n  nameWithType: CustomExpression.CustomExpression()\n  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.CustomExpression()\n- uid: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.UI.WebControls.Expressions.CustomExpression\n  isExternal: false\n  name: GetQueryable(IQueryable)\n  nameWithType: CustomExpression.GetQueryable(IQueryable)\n  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(IQueryable)\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: true\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Web.UI.WebControls.Expressions.CustomExpression.Querying\n  parent: System.Web.UI.WebControls.Expressions.CustomExpression\n  isExternal: false\n  name: Querying\n  nameWithType: CustomExpression.Querying\n  fullName: System.Web.UI.WebControls.Expressions.CustomExpression.Querying\n- uid: System.EventHandler{System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<CustomExpressionEventArgs>\n  nameWithType: EventHandler<CustomExpressionEventArgs>\n  fullName: System.EventHandler<System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs\n    name: CustomExpressionEventArgs\n    nameWithType: CustomExpressionEventArgs\n    fullName: CustomExpressionEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.WebControls.Expressions.CustomExpression.#ctor*\n  parent: System.Web.UI.WebControls.Expressions.CustomExpression\n  isExternal: false\n  name: CustomExpression\n  nameWithType: CustomExpression.CustomExpression\n- uid: System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable*\n  parent: System.Web.UI.WebControls.Expressions.CustomExpression\n  isExternal: false\n  name: GetQueryable\n  nameWithType: CustomExpression.GetQueryable\n"}