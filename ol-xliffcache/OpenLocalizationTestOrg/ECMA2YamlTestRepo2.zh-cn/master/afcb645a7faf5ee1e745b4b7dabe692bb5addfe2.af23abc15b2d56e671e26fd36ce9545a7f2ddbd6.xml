{"nodes":[{"pos":[2419,2451],"content":"Calculates statistical formulas.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calculates statistical formulas.","pos":[0,32]}]},{"pos":[2464,2698],"content":"Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas. Each group has common characteristics with respect to their input and return values.","needQuote":false,"needEscape":true,"nodes":[{"content":"Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas. Each group has common characteristics with respect to their input and return values.","pos":[0,234],"nodes":[{"content":"Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas.","pos":[0,149]},{"content":"Each group has common characteristics with respect to their input and return values.","pos":[150,234]}]}]},{"pos":[3379,3529],"content":"The Anova formula determines the existence or absence of a statistically significant difference between the mean values of two or more groups of data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Anova formula determines the existence or absence of a statistically significant difference between the mean values of two or more groups of data.","pos":[0,150]}]},{"pos":[4081,4140],"content":"Alpha value. The acceptable input range is between 0 and 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"Alpha value. The acceptable input range is between 0 and 1.","pos":[0,59],"nodes":[{"content":"Alpha value.","pos":[0,12]},{"content":"The acceptable input range is between 0 and 1.","pos":[13,59]}]}]},{"pos":[4213,4368],"content":"Names of two or more input series. Each series must exist in the series collection at the time of the method call, and have the same number of data points.","needQuote":true,"needEscape":true,"nodes":[{"content":"Names of two or more input series. Each series must exist in the series collection at the time of the method call, and have the same number of data points.","pos":[0,155],"nodes":[{"content":"Names of two or more input series.","pos":[0,34]},{"content":"Each series must exist in the series collection at the time of the method call, and have the same number of data points.","pos":[35,155]}]}]},{"pos":[4465,4549],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.AnovaResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.DataVisualization.Charting.AnovaResult\"></xref> object."},{"pos":[5232,5285],"content":"The beta function calculates the beta function value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The beta function calculates the beta function value.","pos":[0,53]}]},{"pos":[5719,5753],"content":"First value for the beta function.","needQuote":true,"needEscape":true,"nodes":[{"content":"First value for the beta function.","pos":[0,34]}]},{"pos":[5811,5846],"content":"Second value for the beta function.","needQuote":true,"needEscape":true,"nodes":[{"content":"Second value for the beta function.","pos":[0,35]}]},{"pos":[5904,5915],"content":"Beta value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Beta value.","pos":[0,11]}]},{"pos":[6600,6704],"content":"The correlation formula shows the strength of the relationship that exists between two random variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"The correlation formula shows the strength of the relationship that exists between two random variables.","pos":[0,104]}]},{"pos":[6716,6810],"content":"The method throws an exception if the input series do not have the same number of data points.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method throws an exception if the input series do not have the same number of data points.","pos":[0,94]}]},{"pos":[7317,7433],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the first group's data.","pos":[0,116],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data."}]},{"pos":[7511,7628],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the second group's data.","pos":[0,117],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data."}]},{"pos":[7686,7735],"content":"Correlation value between the two groups of data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Correlation value between the two groups of data.","pos":[0,49]}]},{"pos":[8414,8515],"content":"The covariance formula measures the degree of dependence that may exist between two random variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"The covariance formula measures the degree of dependence that may exist between two random variables.","pos":[0,101]}]},{"pos":[8527,8621],"content":"The method throws an exception if the input series do not have the same number of data points.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method throws an exception if the input series do not have the same number of data points.","pos":[0,94]}]},{"pos":[9125,9241],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the first group's data.","pos":[0,116],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data."}]},{"pos":[9319,9436],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the second group's data.","pos":[0,117],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data."}]},{"pos":[9494,9542],"content":"Covariance value between the two groups of data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Covariance value between the two groups of data.","pos":[0,48]}]},{"pos":[10274,10351],"content":"The F distribution formula calculates the probability for the F-distribution.","needQuote":true,"needEscape":true,"nodes":[{"content":"The F distribution formula calculates the probability for the F-distribution.","pos":[0,77]}]},{"pos":[10845,10893],"content":"The F value for which you want the distribution.","needQuote":true,"needEscape":true,"nodes":[{"content":"The F value for which you want the distribution.","pos":[0,48]}]},{"pos":[10969,10993],"content":"First degree of freedom.","needQuote":true,"needEscape":true,"nodes":[{"content":"First degree of freedom.","pos":[0,24]}]},{"pos":[11070,11095],"content":"Second degree of freedom.","needQuote":true,"needEscape":true,"nodes":[{"content":"Second degree of freedom.","pos":[0,25]}]},{"pos":[11153,11188],"content":"Probability for the F distribution.","needQuote":true,"needEscape":true,"nodes":[{"content":"Probability for the F distribution.","pos":[0,35]}]},{"pos":[11893,12022],"content":"The F-test formula performs a two-sample F-test using F distribution, and is used to see if the samples have different variances.","needQuote":true,"needEscape":true,"nodes":[{"content":"The F-test formula performs a two-sample F-test using F distribution, and is used to see if the samples have different variances.","pos":[0,129]}]},{"pos":[12034,12128],"content":"The method throws an exception if the input series do not have the same number of data points.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method throws an exception if the input series do not have the same number of data points.","pos":[0,94]}]},{"pos":[12696,12753],"content":"The alpha value. The acceptable range is between 0 and 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The alpha value. The acceptable range is between 0 and 1.","pos":[0,57],"nodes":[{"content":"The alpha value.","pos":[0,16]},{"content":"The acceptable range is between 0 and 1.","pos":[17,57]}]}]},{"pos":[12830,12946],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the first group's data.","pos":[0,116],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data."}]},{"pos":[13024,13141],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the second group's data.","pos":[0,117],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data."}]},{"pos":[13238,13322],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.FTestResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.DataVisualization.Charting.FTestResult\"></xref> object."},{"pos":[13961,14007],"content":"The gamma function calculates the gamma value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The gamma function calculates the gamma value.","pos":[0,46]}]},{"pos":[14432,14476],"content":"Value for which the gamma value is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Value for which the gamma value is required.","pos":[0,44]}]},{"pos":[14534,14546],"content":"Gamma value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gamma value.","pos":[0,12]}]},{"pos":[15316,15407],"content":"The inverse F distribution formula calculates the inverse of the F cumulative distribution.","needQuote":true,"needEscape":true,"nodes":[{"content":"The inverse F distribution formula calculates the inverse of the F cumulative distribution.","pos":[0,91]}]},{"pos":[15934,16010],"content":"Probability for the F distribution. The acceptable range is between 0 and 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"Probability for the F distribution. The acceptable range is between 0 and 1.","pos":[0,76],"nodes":[{"content":"Probability for the F distribution.","pos":[0,35]},{"content":"The acceptable range is between 0 and 1.","pos":[36,76]}]}]},{"pos":[16086,16110],"content":"First degree of freedom.","needQuote":true,"needEscape":true,"nodes":[{"content":"First degree of freedom.","pos":[0,24]}]},{"pos":[16187,16212],"content":"Second degree of freedom.","needQuote":true,"needEscape":true,"nodes":[{"content":"Second degree of freedom.","pos":[0,25]}]},{"pos":[16270,16301],"content":"F value for the F distribution.","needQuote":true,"needEscape":true,"nodes":[{"content":"F value for the F distribution.","pos":[0,31]}]},{"pos":[17015,17191],"content":"The inverse normal distribution formula calculates the inverse of the standard normal cumulative distribution. The distribution has a mean of 0 and a standard deviation of one.","needQuote":true,"needEscape":true,"nodes":[{"content":"The inverse normal distribution formula calculates the inverse of the standard normal cumulative distribution. The distribution has a mean of 0 and a standard deviation of one.","pos":[0,176],"nodes":[{"content":"The inverse normal distribution formula calculates the inverse of the standard normal cumulative distribution.","pos":[0,110]},{"content":"The distribution has a mean of 0 and a standard deviation of one.","pos":[111,176]}]}]},{"pos":[17664,17723],"content":"Alpha value. The acceptable input range is between 0 and 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"Alpha value. The acceptable input range is between 0 and 1.","pos":[0,59],"nodes":[{"content":"Alpha value.","pos":[0,12]},{"content":"The acceptable input range is between 0 and 1.","pos":[13,59]}]}]},{"pos":[17781,17825],"content":"Inverse of the normal distribution function.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inverse of the normal distribution function.","pos":[0,44]}]},{"pos":[18563,18711],"content":"The inverse <bpt id=\"p1\">*</bpt>t<ept id=\"p1\">*</ept>-distribution formula calculates the <bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>-value of the Student's <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept>-distribution as a function of probability and degrees of freedom.","needQuote":true,"needEscape":true,"source":"The inverse *t*-distribution formula calculates the *t*-value of the Student's *t*-distribution as a function of probability and degrees of freedom."},{"pos":[19191,19267],"content":"Probability for the F distribution. The acceptable range is between 0 and 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"Probability for the F distribution. The acceptable range is between 0 and 1.","pos":[0,76],"nodes":[{"content":"Probability for the F distribution.","pos":[0,35]},{"content":"The acceptable range is between 0 and 1.","pos":[36,76]}]}]},{"pos":[19338,19356],"content":"Degree of freedom.","needQuote":true,"needEscape":true,"nodes":[{"content":"Degree of freedom.","pos":[0,18]}]},{"pos":[19414,19446],"content":"Inverse of the <bpt id=\"p1\">*</bpt>t<ept id=\"p1\">*</ept>-distribution.","needQuote":true,"needEscape":true,"source":"Inverse of the *t*-distribution."},{"pos":[20055,20137],"content":"The mean formula calculates the average, or mean, of data stored in a data series.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mean formula calculates the average, or mean, of data stored in a data series.","pos":[0,82]}]},{"pos":[20149,20313],"content":"If named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"If named input series does not exist in the &lt;xref:System.Web.UI.DataVisualization.Charting.SeriesCollection&gt; at the time of the method call, an exception is thrown.","pos":[0,164],"source":"If named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown."}]},{"pos":[20733,20872],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the mean value is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the data for which the mean value is required.","pos":[0,139],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the mean value is required."}]},{"pos":[20930,20984],"content":"Mean value of all the data points in the given series.","needQuote":true,"needEscape":true,"nodes":[{"content":"Mean value of all the data points in the given series.","pos":[0,54]}]},{"pos":[21587,21664],"content":"The median formula calculates the median of the data stored in a data series.","needQuote":true,"needEscape":true,"nodes":[{"content":"The median formula calculates the median of the data stored in a data series.","pos":[0,77]}]},{"pos":[21676,21844],"content":"If the named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the named input series does not exist in the &lt;xref:System.Web.UI.DataVisualization.Charting.SeriesCollection&gt; at the time of the method call, an exception is thrown.","pos":[0,168],"source":"If the named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown."}]},{"pos":[22270,22411],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the median value is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the data for which the median value is required.","pos":[0,141],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the median value is required."}]},{"pos":[22469,22519],"content":"Median of all the data points in the given series.","needQuote":true,"needEscape":true,"nodes":[{"content":"Median of all the data points in the given series.","pos":[0,50]}]},{"pos":[23184,23348],"content":"The normal distribution formula calculates the value of the standard normal cumulative distribution. The distribution has a mean of 0 and a standard deviation of 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The normal distribution formula calculates the value of the standard normal cumulative distribution. The distribution has a mean of 0 and a standard deviation of 1.","pos":[0,164],"nodes":[{"content":"The normal distribution formula calculates the value of the standard normal cumulative distribution.","pos":[0,100]},{"content":"The distribution has a mean of 0 and a standard deviation of 1.","pos":[101,164]}]}]},{"pos":[23792,23844],"content":"Value for which the normal distribution is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Value for which the normal distribution is required.","pos":[0,52]}]},{"pos":[23902,23955],"content":"Value of the standard normal cumulative distribution.","needQuote":true,"needEscape":true,"nodes":[{"content":"Value of the standard normal cumulative distribution.","pos":[0,53]}]},{"pos":[24705,24796],"content":"The <bpt id=\"p1\">*</bpt>t<ept id=\"p1\">*</ept>-distribution formula calculates the probability for the Student's <bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>-distribution.","needQuote":true,"needEscape":true,"source":"The *t*-distribution formula calculates the probability for the Student's *t*-distribution."},{"pos":[25279,25325],"content":"<ph id=\"ph1\">`t`</ph>-value for which you want the distribution.","needQuote":false,"needEscape":true,"source":"`t`-value for which you want the distribution."},{"pos":[25397,25414],"content":"Degree of freedom","needQuote":true,"needEscape":true,"nodes":[{"content":"Degree of freedom","pos":[0,17]}]},{"pos":[25479,25627],"content":"If set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, one-tailed distribution is used. Otherwise, two-tailed distribution is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"If set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, one-tailed distribution is used.","pos":[0,104],"source":"If set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, one-tailed distribution is used."},{"content":"Otherwise, two-tailed distribution is used.","pos":[105,148]}]},{"pos":[25686,25724],"content":"<bpt id=\"p1\">*</bpt>t<ept id=\"p1\">*</ept>-distribution function probability.","needQuote":false,"needEscape":true,"source":"*t*-distribution function probability."},{"pos":[26549,26665],"content":"The <bpt id=\"p1\">*</bpt>t<ept id=\"p1\">*</ept>-test with equal variances formula performs a <bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>-test using Student's <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept>-distribution with equal variances.","needQuote":true,"needEscape":true,"source":"The *t*-test with equal variances formula performs a *t*-test using Student's *t*-distribution with equal variances."},{"pos":[27333,27394],"content":"Hypothesized difference between the means of the data groups.","needQuote":true,"needEscape":true,"nodes":[{"content":"Hypothesized difference between the means of the data groups.","pos":[0,61]}]},{"pos":[27462,27515],"content":"Alpha value. The acceptable range is between 0 and 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"Alpha value. The acceptable range is between 0 and 1.","pos":[0,53],"nodes":[{"content":"Alpha value.","pos":[0,12]},{"content":"The acceptable range is between 0 and 1.","pos":[13,53]}]}]},{"pos":[27592,27708],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the first group's data.","pos":[0,116],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data."}]},{"pos":[27786,27903],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the second group's data.","pos":[0,117],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data."}]},{"pos":[28000,28083],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.TTestResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataVisualization.Charting.TTestResult\"></xref> object."},{"pos":[28873,29094],"content":"The *t*-test paired formula performs a *t*-test using Student's *t*-distribution with paired samples. This is useful when there is an observed natural pairing in samples (for example, when a sample group is tested twice).","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">*</bpt>t<ept id=\"p1\">*</ept>-test paired formula performs a <bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>-test using Student's <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept>-distribution with paired samples.","pos":[0,101],"source":"The *t*-test paired formula performs a *t*-test using Student's *t*-distribution with paired samples."},{"content":"This is useful when there is an observed natural pairing in samples (for example, when a sample group is tested twice).","pos":[102,221]}]},{"pos":[29754,29815],"content":"Hypothesized difference between the means of the data groups.","needQuote":true,"needEscape":true,"nodes":[{"content":"Hypothesized difference between the means of the data groups.","pos":[0,61]}]},{"pos":[29883,29936],"content":"Alpha value. The acceptable range is between 0 and 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"Alpha value. The acceptable range is between 0 and 1.","pos":[0,53],"nodes":[{"content":"Alpha value.","pos":[0,12]},{"content":"The acceptable range is between 0 and 1.","pos":[13,53]}]}]},{"pos":[30013,30129],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the first group's data.","pos":[0,116],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data."}]},{"pos":[30207,30324],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the second group's data.","pos":[0,117],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data."}]},{"pos":[30421,30504],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.TTestResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataVisualization.Charting.TTestResult\"></xref> object."},{"pos":[31336,31456],"content":"The <bpt id=\"p1\">*</bpt>t<ept id=\"p1\">*</ept>-test with unequal variances formula performs a <bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>-test using Student's <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept>-distribution with unequal variances.","needQuote":true,"needEscape":true,"source":"The *t*-test with unequal variances formula performs a *t*-test using Student's *t*-distribution with unequal variances."},{"pos":[32146,32207],"content":"Hypothesized difference between the means of the data groups.","needQuote":true,"needEscape":true,"nodes":[{"content":"Hypothesized difference between the means of the data groups.","pos":[0,61]}]},{"pos":[32275,32328],"content":"Alpha value. The acceptable range is between 0 and 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"Alpha value. The acceptable range is between 0 and 1.","pos":[0,53],"nodes":[{"content":"Alpha value.","pos":[0,12]},{"content":"The acceptable range is between 0 and 1.","pos":[13,53]}]}]},{"pos":[32405,32521],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the first group's data.","pos":[0,116],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data."}]},{"pos":[32599,32716],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the second group's data.","pos":[0,117],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data."}]},{"pos":[32813,32896],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.TTestResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataVisualization.Charting.TTestResult\"></xref> object."},{"pos":[33580,33648],"content":"The variance formula calculates the variance within a group of data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The variance formula calculates the variance within a group of data.","pos":[0,68]}]},{"pos":[34150,34289],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the mean value is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the data for which the mean value is required.","pos":[0,139],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the mean value is required."}]},{"pos":[34361,34575],"content":"Specify <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data is a sample of a population; and <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the data is the entire population.","needQuote":true,"needEscape":true,"source":"Specify <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data is a sample of a population; and <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the data is the entire population."},{"pos":[34633,34667],"content":"Variance within the group of data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Variance within the group of data.","pos":[0,34]}]},{"pos":[35514,35577],"content":"The Z-test formula performs a Z-test using normal distribution.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Z-test formula performs a Z-test using normal distribution.","pos":[0,63]}]},{"pos":[36294,36355],"content":"Hypothesized difference between the means of the data groups.","needQuote":true,"needEscape":true,"nodes":[{"content":"Hypothesized difference between the means of the data groups.","pos":[0,61]}]},{"pos":[36430,36470],"content":"Variance within the first group of data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Variance within the first group of data.","pos":[0,40]}]},{"pos":[36546,36587],"content":"Variance within the second group of data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Variance within the second group of data.","pos":[0,41]}]},{"pos":[36655,36708],"content":"Alpha value. The acceptable range is between 0 and 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"Alpha value. The acceptable range is between 0 and 1.","pos":[0,53],"nodes":[{"content":"Alpha value.","pos":[0,12]},{"content":"The acceptable range is between 0 and 1.","pos":[13,53]}]}]},{"pos":[36785,36901],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the first group's data.","pos":[0,116],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data."}]},{"pos":[36979,37096],"content":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of the &lt;xref:System.Web.UI.DataVisualization.Charting.Chart.Series*&gt; object that stores the second group's data.","pos":[0,117],"source":"Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data."}]},{"pos":[37193,37276],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.ZTestResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataVisualization.Charting.ZTestResult\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  id: StatisticFormula\n  children:\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)\n  - System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)\n  langs:\n  - csharp\n  name: StatisticFormula\n  nameWithType: StatisticFormula\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  type: Class\n  summary: Calculates statistical formulas.\n  remarks: 'Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas. Each group has common characteristics with respect to their input and return values.'\n  syntax:\n    content: public class StatisticFormula\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)\n  id: Anova(System.Double,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: Anova(Double,String)\n  nameWithType: StatisticFormula.Anova(Double,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(Double,String)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The Anova formula determines the existence or absence of a statistically significant difference between the mean values of two or more groups of data.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As AnovaResult = Chart1.DataManipulator.Statistics.Anova(.05, \\\"Series1,Series2,Series3\\\")  \\n```  \\n  \\n```c#  \\nAnovaResult result = Chart1.DataManipulator.Statistics.Anova(.05, \\\"Series1,Series2,Series3\\\");  \\n```\"\n  syntax:\n    content: public System.Web.UI.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);\n    parameters:\n    - id: probability\n      type: System.Double\n      description: Alpha value. The acceptable input range is between 0 and 1.\n    - id: inputSeriesNames\n      type: System.String\n      description: Names of two or more input series. Each series must exist in the series collection at the time of the method call, and have the same number of data points.\n    return:\n      type: System.Web.UI.DataVisualization.Charting.AnovaResult\n      description: An <xref href=\"System.Web.UI.DataVisualization.Charting.AnovaResult\"></xref> object.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)\n  id: BetaFunction(System.Double,System.Double)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: BetaFunction(Double,Double)\n  nameWithType: StatisticFormula.BetaFunction(Double,Double)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(Double,Double)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The beta function calculates the beta function value.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As Double = Chart1.DataManipulator.Statistics.BetaFunction(2.3, 6.2)  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.BetaFunction(2.3, 6.2);  \\n```\"\n  syntax:\n    content: public double BetaFunction (double m, double n);\n    parameters:\n    - id: m\n      type: System.Double\n      description: First value for the beta function.\n    - id: n\n      type: System.Double\n      description: Second value for the beta function.\n    return:\n      type: System.Double\n      description: Beta value.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)\n  id: Correlation(System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: Correlation(String,String)\n  nameWithType: StatisticFormula.Correlation(String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(String,String)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The correlation formula shows the strength of the relationship that exists between two random variables.\n  remarks: The method throws an exception if the input series do not have the same number of data points.\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As Double = Chart1.DataManipulator.Statistics.Correlation(\\\"Series1\\\", \\\"Series2\\\")  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.Correlation(\\\"Series1\\\", \\\"Series2\\\");  \\n```\"\n  syntax:\n    content: public double Correlation (string firstInputSeriesName, string secondInputSeriesName);\n    parameters:\n    - id: firstInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.\n    - id: secondInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.\n    return:\n      type: System.Double\n      description: Correlation value between the two groups of data.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)\n  id: Covariance(System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: Covariance(String,String)\n  nameWithType: StatisticFormula.Covariance(String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(String,String)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The covariance formula measures the degree of dependence that may exist between two random variables.\n  remarks: The method throws an exception if the input series do not have the same number of data points.\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As double = Chart1.DataManipulator.Statistics.Covariance(\\\"Series1\\\", \\\"Series2\\\")  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.Covariance(\\\"Series1\\\", \\\"Series2\\\");  \\n```\"\n  syntax:\n    content: public double Covariance (string firstInputSeriesName, string secondInputSeriesName);\n    parameters:\n    - id: firstInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.\n    - id: secondInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.\n    return:\n      type: System.Double\n      description: Covariance value between the two groups of data.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)\n  id: FDistribution(System.Double,System.Int32,System.Int32)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: FDistribution(Double,Int32,Int32)\n  nameWithType: StatisticFormula.FDistribution(Double,Int32,Int32)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(Double,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The F distribution formula calculates the probability for the F-distribution.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As double = Chart1.DataManipulator.Statistics.FDistribution(6.31, 15, 7)  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.FDistribution(6.31, 15, 7);  \\n```\"\n  syntax:\n    content: public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);\n    parameters:\n    - id: value\n      type: System.Double\n      description: The F value for which you want the distribution.\n    - id: firstDegreeOfFreedom\n      type: System.Int32\n      description: First degree of freedom.\n    - id: secondDegreeOfFreedom\n      type: System.Int32\n      description: Second degree of freedom.\n    return:\n      type: System.Double\n      description: Probability for the F distribution.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)\n  id: FTest(System.Double,System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: FTest(Double,String,String)\n  nameWithType: StatisticFormula.FTest(Double,String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(Double,String,String)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The F-test formula performs a two-sample F-test using F distribution, and is used to see if the samples have different variances.\n  remarks: The method throws an exception if the input series do not have the same number of data points.\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As FTestResult = Chart1.DataManipulator.Statistics.FTest(0.05, \\\"Series1\\\", \\\"Series2\\\")  \\n```  \\n  \\n```c#  \\nFTestResult result = Chart1.DataManipulator.Statistics.FTest(0.05, \\\"Series1\\\", \\\"Series2\\\");  \\n```\"\n  syntax:\n    content: public System.Web.UI.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);\n    parameters:\n    - id: probability\n      type: System.Double\n      description: The alpha value. The acceptable range is between 0 and 1.\n    - id: firstInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.\n    - id: secondInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.\n    return:\n      type: System.Web.UI.DataVisualization.Charting.FTestResult\n      description: An <xref href=\"System.Web.UI.DataVisualization.Charting.FTestResult\"></xref> object.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)\n  id: GammaFunction(System.Double)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: GammaFunction(Double)\n  nameWithType: StatisticFormula.GammaFunction(Double)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(Double)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The gamma function calculates the gamma value.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As Double = Chart1.DataManipulator.Statistics.GammaFunction(6.2)  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.GammaFunction(6.2);  \\n```\"\n  syntax:\n    content: public double GammaFunction (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Value for which the gamma value is required.\n    return:\n      type: System.Double\n      description: Gamma value.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)\n  id: InverseFDistribution(System.Double,System.Int32,System.Int32)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: InverseFDistribution(Double,Int32,Int32)\n  nameWithType: StatisticFormula.InverseFDistribution(Double,Int32,Int32)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(Double,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The inverse F distribution formula calculates the inverse of the F cumulative distribution.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As Double = Chart1.DataManipulator.Statistics.InverseFDistribution(.05, 15, 30)  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.InverseFDistribution(.05, 15, 30);  \\n```\"\n  syntax:\n    content: public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);\n    parameters:\n    - id: probability\n      type: System.Double\n      description: Probability for the F distribution. The acceptable range is between 0 and 1.\n    - id: firstDegreeOfFreedom\n      type: System.Int32\n      description: First degree of freedom.\n    - id: secondDegreeOfFreedom\n      type: System.Int32\n      description: Second degree of freedom.\n    return:\n      type: System.Double\n      description: F value for the F distribution.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)\n  id: InverseNormalDistribution(System.Double)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: InverseNormalDistribution(Double)\n  nameWithType: StatisticFormula.InverseNormalDistribution(Double)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(Double)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The inverse normal distribution formula calculates the inverse of the standard normal cumulative distribution. The distribution has a mean of 0 and a standard deviation of one.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As double = Chart1.DataManipulator.Statistics.InverseNormalDistribution(.05)  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.InverseNormalDistribution(.05);  \\n```\"\n  syntax:\n    content: public double InverseNormalDistribution (double probability);\n    parameters:\n    - id: probability\n      type: System.Double\n      description: Alpha value. The acceptable input range is between 0 and 1.\n    return:\n      type: System.Double\n      description: Inverse of the normal distribution function.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)\n  id: InverseTDistribution(System.Double,System.Int32)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: InverseTDistribution(Double,Int32)\n  nameWithType: StatisticFormula.InverseTDistribution(Double,Int32)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(Double,Int32)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The inverse *t*-distribution formula calculates the *t*-value of the Student's *t*-distribution as a function of probability and degrees of freedom.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\ndouble result = Chart1.DataManipulator.Statistics.InverseTDistribution(.05, 15)  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.InverseTDistribution(.05, 15);  \\n```\"\n  syntax:\n    content: public double InverseTDistribution (double probability, int degreeOfFreedom);\n    parameters:\n    - id: probability\n      type: System.Double\n      description: Probability for the F distribution. The acceptable range is between 0 and 1.\n    - id: degreeOfFreedom\n      type: System.Int32\n      description: Degree of freedom.\n    return:\n      type: System.Double\n      description: Inverse of the *t*-distribution.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)\n  id: Mean(System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: Mean(String)\n  nameWithType: StatisticFormula.Mean(String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(String)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The mean formula calculates the average, or mean, of data stored in a data series.\n  remarks: If named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown.\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As Double = Chart1.DataManipulator.Statistics.Mean(\\\"Series1\\\")  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.Mean(\\\"Series1\\\");  \\n```\"\n  syntax:\n    content: public double Mean (string inputSeriesName);\n    parameters:\n    - id: inputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the mean value is required.\n    return:\n      type: System.Double\n      description: Mean value of all the data points in the given series.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)\n  id: Median(System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: Median(String)\n  nameWithType: StatisticFormula.Median(String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(String)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The median formula calculates the median of the data stored in a data series.\n  remarks: If the named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown.\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As Double = Chart1.DataManipulator.Statistics.Median(\\\"Series1\\\")  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.Median(\\\"Series1\\\");  \\n```\"\n  syntax:\n    content: public double Median (string inputSeriesName);\n    parameters:\n    - id: inputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the median value is required.\n    return:\n      type: System.Double\n      description: Median of all the data points in the given series.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)\n  id: NormalDistribution(System.Double)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: NormalDistribution(Double)\n  nameWithType: StatisticFormula.NormalDistribution(Double)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(Double)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The normal distribution formula calculates the value of the standard normal cumulative distribution. The distribution has a mean of 0 and a standard deviation of 1.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As Double = Chart1.DataManipulator.Statistics.NormalDistribution(1.96)  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.NormalDistribution(1.96);  \\n```\"\n  syntax:\n    content: public double NormalDistribution (double zValue);\n    parameters:\n    - id: zValue\n      type: System.Double\n      description: Value for which the normal distribution is required.\n    return:\n      type: System.Double\n      description: Value of the standard normal cumulative distribution.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)\n  id: TDistribution(System.Double,System.Int32,System.Boolean)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: TDistribution(Double,Int32,Boolean)\n  nameWithType: StatisticFormula.TDistribution(Double,Int32,Boolean)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(Double,Int32,Boolean)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The *t*-distribution formula calculates the probability for the Student's *t*-distribution.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As Double = Chart1.DataManipulator.Statistics.TDistribution(1.96, 30, true)  \\n```  \\n  \\n```c#  \\ndouble result = Chart1.DataManipulator.Statistics.TDistribution(1.96, 30, true);  \\n```\"\n  syntax:\n    content: public double TDistribution (double value, int degreeOfFreedom, bool oneTail);\n    parameters:\n    - id: value\n      type: System.Double\n      description: '`t`-value for which you want the distribution.'\n    - id: degreeOfFreedom\n      type: System.Int32\n      description: Degree of freedom\n    - id: oneTail\n      type: System.Boolean\n      description: If set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, one-tailed distribution is used. Otherwise, two-tailed distribution is used.\n    return:\n      type: System.Double\n      description: '*t*-distribution function probability.'\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)\n  id: TTestEqualVariances(System.Double,System.Double,System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: TTestEqualVariances(Double,Double,String,String)\n  nameWithType: StatisticFormula.TTestEqualVariances(Double,Double,String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(Double,Double,String,String)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The *t*-test with equal variances formula performs a *t*-test using Student's *t*-distribution with equal variances.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As TTestResult = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \\\"Series1\\\", \\\"Series2\\\")  \\n```  \\n  \\n```c#  \\nTTestResult result = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \\\"Series1\\\", \\\"Series2\\\");  \\n```\"\n  syntax:\n    content: public System.Web.UI.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);\n    parameters:\n    - id: hypothesizedMeanDifference\n      type: System.Double\n      description: Hypothesized difference between the means of the data groups.\n    - id: probability\n      type: System.Double\n      description: Alpha value. The acceptable range is between 0 and 1.\n    - id: firstInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.\n    - id: secondInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.\n    return:\n      type: System.Web.UI.DataVisualization.Charting.TTestResult\n      description: A <xref href=\"System.Web.UI.DataVisualization.Charting.TTestResult\"></xref> object.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)\n  id: TTestPaired(System.Double,System.Double,System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: TTestPaired(Double,Double,String,String)\n  nameWithType: StatisticFormula.TTestPaired(Double,Double,String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(Double,Double,String,String)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The *t*-test paired formula performs a *t*-test using Student's *t*-distribution with paired samples. This is useful when there is an observed natural pairing in samples (for example, when a sample group is tested twice).\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As TTestResult = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \\\"Series1\\\", \\\"Series2\\\")  \\n```  \\n  \\n```c#  \\nTTestResult result = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \\\"Series1\\\", \\\"Series2\\\");  \\n```\"\n  syntax:\n    content: public System.Web.UI.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);\n    parameters:\n    - id: hypothesizedMeanDifference\n      type: System.Double\n      description: Hypothesized difference between the means of the data groups.\n    - id: probability\n      type: System.Double\n      description: Alpha value. The acceptable range is between 0 and 1.\n    - id: firstInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.\n    - id: secondInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.\n    return:\n      type: System.Web.UI.DataVisualization.Charting.TTestResult\n      description: A <xref href=\"System.Web.UI.DataVisualization.Charting.TTestResult\"></xref> object.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)\n  id: TTestUnequalVariances(System.Double,System.Double,System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: TTestUnequalVariances(Double,Double,String,String)\n  nameWithType: StatisticFormula.TTestUnequalVariances(Double,Double,String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(Double,Double,String,String)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The *t*-test with unequal variances formula performs a *t*-test using Student's *t*-distribution with unequal variances.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As TTestResult = Chart1.DataManipulator.Statistics.TTestUnEqualVariances(0.2, 0.05, \\\"Series1\\\", \\\"Series2\\\")  \\n```  \\n  \\n```c#  \\nTTestResult result = Chart1.DataManipulator.Statistics.TTestUnEqualVariances(0.2, 0.05, \\\"Series1\\\", \\\"Series2\\\");  \\n```\"\n  syntax:\n    content: public System.Web.UI.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);\n    parameters:\n    - id: hypothesizedMeanDifference\n      type: System.Double\n      description: Hypothesized difference between the means of the data groups.\n    - id: probability\n      type: System.Double\n      description: Alpha value. The acceptable range is between 0 and 1.\n    - id: firstInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.\n    - id: secondInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.\n    return:\n      type: System.Web.UI.DataVisualization.Charting.TTestResult\n      description: A <xref href=\"System.Web.UI.DataVisualization.Charting.TTestResult\"></xref> object.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)\n  id: Variance(System.String,System.Boolean)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: Variance(String,Boolean)\n  nameWithType: StatisticFormula.Variance(String,Boolean)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The variance formula calculates the variance within a group of data.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As Double = Chart1.DataManipulator.Statistics.Variance(\\\"Series1\\\", false)  \\n```  \\n  \\n```c#  \\nTTestResult result = double result = Chart1.DataManipulator.Statistics.Variance(\\\"Series1\\\", false);  \\n```\"\n  syntax:\n    content: public double Variance (string inputSeriesName, bool sampleVariance);\n    parameters:\n    - id: inputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the mean value is required.\n    - id: sampleVariance\n      type: System.Boolean\n      description: Specify <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data is a sample of a population; and <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the data is the entire population.\n    return:\n      type: System.Double\n      description: Variance within the group of data.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)\n  id: ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  langs:\n  - csharp\n  name: ZTest(Double,Double,Double,Double,String,String)\n  nameWithType: StatisticFormula.ZTest(Double,Double,Double,Double,String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(Double,Double,Double,Double,String,String)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: The Z-test formula performs a Z-test using normal distribution.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use this formula.  \\n  \\n```vb  \\nDim result As ZTestResult = Chart1.DataManipulator.Statistics.ZTest(0.2, 2.5, 4.5, 0.05, \\\"Series1\\\", \\\"Series2\\\")  \\n```  \\n  \\n```c#  \\nZTestResult result = Chart1.DataManipulator.Statistics.ZTest(0.2, 2.5, 4.5, 0.05, \\\"Series1\\\", \\\"Series2\\\");  \\n```\"\n  syntax:\n    content: public System.Web.UI.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);\n    parameters:\n    - id: hypothesizedMeanDifference\n      type: System.Double\n      description: Hypothesized difference between the means of the data groups.\n    - id: varianceFirstGroup\n      type: System.Double\n      description: Variance within the first group of data.\n    - id: varianceSecondGroup\n      type: System.Double\n      description: Variance within the second group of data.\n    - id: probability\n      type: System.Double\n      description: Alpha value. The acceptable range is between 0 and 1.\n    - id: firstInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group's data.\n    - id: secondInputSeriesName\n      type: System.String\n      description: Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group's data.\n    return:\n      type: System.Web.UI.DataVisualization.Charting.ZTestResult\n      description: A <xref href=\"System.Web.UI.DataVisualization.Charting.ZTestResult\"></xref> object.\n  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Anova(Double,String)\n  nameWithType: StatisticFormula.Anova(Double,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(Double,String)\n- uid: System.Web.UI.DataVisualization.Charting.AnovaResult\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: AnovaResult\n  nameWithType: AnovaResult\n  fullName: System.Web.UI.DataVisualization.Charting.AnovaResult\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: BetaFunction(Double,Double)\n  nameWithType: StatisticFormula.BetaFunction(Double,Double)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(Double,Double)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Correlation(String,String)\n  nameWithType: StatisticFormula.Correlation(String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(String,String)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Covariance(String,String)\n  nameWithType: StatisticFormula.Covariance(String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(String,String)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: FDistribution(Double,Int32,Int32)\n  nameWithType: StatisticFormula.FDistribution(Double,Int32,Int32)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(Double,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: FTest(Double,String,String)\n  nameWithType: StatisticFormula.FTest(Double,String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(Double,String,String)\n- uid: System.Web.UI.DataVisualization.Charting.FTestResult\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: FTestResult\n  nameWithType: FTestResult\n  fullName: System.Web.UI.DataVisualization.Charting.FTestResult\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: GammaFunction(Double)\n  nameWithType: StatisticFormula.GammaFunction(Double)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(Double)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: InverseFDistribution(Double,Int32,Int32)\n  nameWithType: StatisticFormula.InverseFDistribution(Double,Int32,Int32)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(Double,Int32,Int32)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: InverseNormalDistribution(Double)\n  nameWithType: StatisticFormula.InverseNormalDistribution(Double)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(Double)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: InverseTDistribution(Double,Int32)\n  nameWithType: StatisticFormula.InverseTDistribution(Double,Int32)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(Double,Int32)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Mean(String)\n  nameWithType: StatisticFormula.Mean(String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(String)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Median(String)\n  nameWithType: StatisticFormula.Median(String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(String)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: NormalDistribution(Double)\n  nameWithType: StatisticFormula.NormalDistribution(Double)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(Double)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: TDistribution(Double,Int32,Boolean)\n  nameWithType: StatisticFormula.TDistribution(Double,Int32,Boolean)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(Double,Int32,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: TTestEqualVariances(Double,Double,String,String)\n  nameWithType: StatisticFormula.TTestEqualVariances(Double,Double,String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(Double,Double,String,String)\n- uid: System.Web.UI.DataVisualization.Charting.TTestResult\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: TTestResult\n  nameWithType: TTestResult\n  fullName: System.Web.UI.DataVisualization.Charting.TTestResult\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: TTestPaired(Double,Double,String,String)\n  nameWithType: StatisticFormula.TTestPaired(Double,Double,String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(Double,Double,String,String)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: TTestUnequalVariances(Double,Double,String,String)\n  nameWithType: StatisticFormula.TTestUnequalVariances(Double,Double,String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(Double,Double,String,String)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Variance(String,Boolean)\n  nameWithType: StatisticFormula.Variance(String,Boolean)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(String,Boolean)\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: ZTest(Double,Double,Double,Double,String,String)\n  nameWithType: StatisticFormula.ZTest(Double,Double,Double,Double,String,String)\n  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(Double,Double,Double,Double,String,String)\n- uid: System.Web.UI.DataVisualization.Charting.ZTestResult\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: ZTestResult\n  nameWithType: ZTestResult\n  fullName: System.Web.UI.DataVisualization.Charting.ZTestResult\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Anova\n  nameWithType: StatisticFormula.Anova\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: BetaFunction\n  nameWithType: StatisticFormula.BetaFunction\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Correlation\n  nameWithType: StatisticFormula.Correlation\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Covariance\n  nameWithType: StatisticFormula.Covariance\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: FDistribution\n  nameWithType: StatisticFormula.FDistribution\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: FTest\n  nameWithType: StatisticFormula.FTest\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: GammaFunction\n  nameWithType: StatisticFormula.GammaFunction\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: InverseFDistribution\n  nameWithType: StatisticFormula.InverseFDistribution\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: InverseNormalDistribution\n  nameWithType: StatisticFormula.InverseNormalDistribution\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: InverseTDistribution\n  nameWithType: StatisticFormula.InverseTDistribution\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Mean\n  nameWithType: StatisticFormula.Mean\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Median\n  nameWithType: StatisticFormula.Median\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: NormalDistribution\n  nameWithType: StatisticFormula.NormalDistribution\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: TDistribution\n  nameWithType: StatisticFormula.TDistribution\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: TTestEqualVariances\n  nameWithType: StatisticFormula.TTestEqualVariances\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: TTestPaired\n  nameWithType: StatisticFormula.TTestPaired\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: TTestUnequalVariances\n  nameWithType: StatisticFormula.TTestUnequalVariances\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: Variance\n  nameWithType: StatisticFormula.Variance\n- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest*\n  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula\n  isExternal: false\n  name: ZTest\n  nameWithType: StatisticFormula.ZTest\n"}