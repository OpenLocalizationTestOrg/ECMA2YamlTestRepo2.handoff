{"nodes":[{"pos":[1085,1263],"content":"A timer that is integrated into the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> queue which is processed at a specified interval of time and at a specified priority.","needQuote":true,"needEscape":true,"source":"A timer that is integrated into the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> queue which is processed at a specified interval of time and at a specified priority."},{"pos":[1276,2986],"content":"The DispatcherTimer is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.       Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because DispatcherTimer operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the DispatcherTimer operation executes is dependent on the other jobs in the queue and their priorities.       If a <xref:System.Timers.Timer?displayProperty=fullName> is used in a [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=fullName> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] thread.  In order to access objects on the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>. Reasons for using a DispatcherTimer opposed to a <xref:System.Timers.Timer?displayProperty=fullName> are that the DispatcherTimer runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the DispatcherTimer.       A DispatcherTimer will keep an object alive whenever the object's methods are bound to the timer.      <a name=\"xamlTextUsage_DispatcherTimer\"></a>    ## XAML Text Usage","needQuote":false,"needEscape":true,"nodes":[{"content":"The DispatcherTimer is reevaluated at the top of every &lt;xref:System.Windows.Threading.Dispatcher&gt; loop.","pos":[0,103],"source":"The DispatcherTimer is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop."},{"content":"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.","pos":[110,257]},{"content":"This is because DispatcherTimer operations are placed on the &lt;xref:System.Windows.Threading.Dispatcher&gt; queue like other operations.","pos":[259,391],"source":"  This is because DispatcherTimer operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations."},{"content":"When the DispatcherTimer operation executes is dependent on the other jobs in the queue and their priorities.","pos":[393,502]},{"content":"If a &lt;xref:System.Timers.Timer?displayProperty=fullName&gt; is used in a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application, it is worth noting that the &lt;xref:System.Timers.Timer?displayProperty=fullName&gt; runs on a different thread then the <ph id=\"ph2\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread.","pos":[509,839],"source":"       If a <xref:System.Timers.Timer?displayProperty=fullName> is used in a [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=fullName> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] thread."},{"content":"In order to access objects on the <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread, it is necessary to post the operation onto the &lt;xref:System.Windows.Threading.Dispatcher&gt; of the <ph id=\"ph2\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread using &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; or &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;.","pos":[841,1227],"source":"  In order to access objects on the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>."},{"content":"Reasons for using a DispatcherTimer opposed to a &lt;xref:System.Timers.Timer?displayProperty=fullName&gt; are that the DispatcherTimer runs on the same thread as the &lt;xref:System.Windows.Threading.Dispatcher&gt; and a &lt;xref:System.Windows.Threading.DispatcherPriority&gt; can be set on the DispatcherTimer.","pos":[1228,1523],"source":" Reasons for using a DispatcherTimer opposed to a <xref:System.Timers.Timer?displayProperty=fullName> are that the DispatcherTimer runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the DispatcherTimer."},{"content":"A DispatcherTimer will keep an object alive whenever the object's methods are bound to the timer.","pos":[1530,1627]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_DispatcherTimer\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","pos":[1633,1699],"source":"<a name=\"xamlTextUsage_DispatcherTimer\"></a>    ## XAML Text Usage"}]},{"pos":[5287,5389],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class."},{"pos":[5402,5858],"content":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority> priority.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority> priority.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName>.","pos":[0,456],"nodes":[{"content":"&lt;xref:System.Windows.Threading.DispatcherTimer&gt; runs on the &lt;xref:System.Windows.Threading.Dispatcher&gt; of the current thread at &lt;xref:System.Windows.Threading.DispatcherPriority&gt; priority.","pos":[0,188],"source":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority> priority."},{"content":"To specify a different &lt;xref:System.Windows.Threading.Dispatcher&gt;, use the following constructor: &lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName&gt;.","pos":[190,456],"source":"  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName>."}]}]},{"pos":[6558,6715],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class which processes timer events at the specified priority.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which processes timer events at the specified priority."},{"pos":[6728,7096],"content":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.","pos":[0,368],"nodes":[{"content":"&lt;xref:System.Windows.Threading.DispatcherTimer&gt; runs on the &lt;xref:System.Windows.Threading.Dispatcher&gt; of the current thread.","pos":[0,125],"source":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread."},{"content":"To specify a different &lt;xref:System.Windows.Threading.Dispatcher&gt;, use the following constructor: &lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29&gt;.","pos":[127,368],"source":"  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>."}]}]},{"pos":[7310,7352],"content":"The priority at which to invoke the timer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The priority at which to invoke the timer.","pos":[0,42]}]},{"pos":[8087,8300],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class which runs on the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> at the specified priority.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which runs on the specified <xref href=\"System.Windows.Threading.Dispatcher\"></xref> at the specified priority."},{"pos":[8561,8603],"content":"The priority at which to invoke the timer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The priority at which to invoke the timer.","pos":[0,42]}]},{"pos":[8692,8736],"content":"The dispatcher the timer is associated with.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dispatcher the timer is associated with.","pos":[0,44]}]},{"pos":[8913,9001],"content":"<ph id=\"ph1\">&lt;code&gt;dispatcher&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>dispatcher</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9797,10025],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class which uses the specified time interval, priority, event handler, and <bpt id=\"p2\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which uses the specified time interval, priority, event handler, and <xref href=\"System.Windows.Threading.Dispatcher\"></xref>."},{"pos":[10300,10333],"content":"The period of time between ticks.","needQuote":true,"needEscape":true,"nodes":[{"content":"The period of time between ticks.","pos":[0,33]}]},{"pos":[10428,10470],"content":"The priority at which to invoke the timer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The priority at which to invoke the timer.","pos":[0,42]}]},{"pos":[10541,10656],"content":"The event handler to call when the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer.Tick\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event occurs.","needQuote":true,"needEscape":true,"source":"The event handler to call when the <xref href=\"System.Windows.Threading.DispatcherTimer.Tick\"></xref> event occurs."},{"pos":[10745,10789],"content":"The dispatcher the timer is associated with.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dispatcher the timer is associated with.","pos":[0,44]}]},{"pos":[10966,11052],"content":"<ph id=\"ph1\">&lt;code&gt;callback&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>callback</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11167,11249],"content":"<ph id=\"ph1\">&lt;code&gt;interval&lt;/code&gt;</ph> is less than 0 or greater than <ph id=\"ph2\">&lt;xref:System.Int32.MaxValue&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>interval</code> is less than 0 or greater than <xref:System.Int32.MaxValue>."},{"pos":[11642,11791],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> associated with this <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>."},{"pos":[11803,12141],"content":"The Dispatcher property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.  The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Dispatcher property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.  The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.","pos":[0,338],"nodes":[{"content":"The Dispatcher property is determined at the creation of the &lt;xref:System.Windows.Threading.DispatcherTimer&gt; object.","pos":[0,116],"source":"The Dispatcher property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object."},{"content":"The &lt;xref:System.Windows.Threading.Dispatcher&gt; property is set to the current &lt;xref:System.Windows.Threading.Dispatcher&gt; at the time of creation unless a different &lt;xref:System.Windows.Threading.Dispatcher&gt; is specified.","pos":[118,338],"source":"  The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified."}]}]},{"pos":[12307,12322],"content":"The dispatcher.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dispatcher.","pos":[0,15]}]},{"pos":[12787,12839],"content":"Gets or sets the period of time between timer ticks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the period of time between timer ticks.","pos":[0,52]}]},{"pos":[12852,13378],"content":"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.      <a name=\"XAMLTextUsage_Interval\"></a>    ## XAML Text Usage","needQuote":false,"needEscape":true,"nodes":[{"content":"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.","pos":[0,147]},{"content":"This is because &lt;xref:System.Windows.Threading.DispatcherTimer&gt; operations are placed on the &lt;xref:System.Windows.Threading.Dispatcher&gt; queue like other operations.","pos":[149,313],"source":"  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations."},{"content":"When the &lt;xref:System.Windows.Threading.DispatcherTimer&gt; operation executes is dependent on the other jobs in the queue and their priorities.","pos":[315,456],"source":"  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities."},{"content":"<bpt id=\"p1\">&lt;a name=\"XAMLTextUsage_Interval\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","pos":[462,521],"source":"<a name=\"XAMLTextUsage_Interval\"></a>    ## XAML Text Usage"}]},{"pos":[14302,14360],"content":"The period of time between ticks. The default is 00:00:00.","needQuote":true,"needEscape":true,"nodes":[{"content":"The period of time between ticks. The default is 00:00:00.","pos":[0,58],"nodes":[{"content":"The period of time between ticks.","pos":[0,33]},{"content":"The default is 00:00:00.","pos":[34,58]}]}]},{"pos":[14552,14647],"content":"<ph id=\"ph1\">&lt;code&gt;interval&lt;/code&gt;</ph> is less than 0 or greater than <ph id=\"ph2\">&lt;xref:System.Int32.MaxValue&gt;</ph> milliseconds.","needQuote":true,"needEscape":true,"source":"<code>interval</code> is less than 0 or greater than <xref:System.Int32.MaxValue> milliseconds."},{"pos":[15035,15100],"content":"Gets or sets a value that indicates whether the timer is running.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the timer is running.","pos":[0,65]}]},{"pos":[15113,15494],"content":"IsEnabled must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.       Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets IsEnabled to `true`.       Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets IsEnabled to `false`.      <a name=\"XAMLTextUsage_IsEnabled\"></a>    ## XAML Text Usage","needQuote":false,"needEscape":true,"nodes":[{"content":"IsEnabled must be set to <ph id=\"ph1\">`true`</ph> for the &lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt; event to be raised.","pos":[0,112],"source":"IsEnabled must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised."},{"content":"Calling &lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt; sets IsEnabled to <ph id=\"ph1\">`true`</ph>.","pos":[119,209],"source":"       Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets IsEnabled to `true`."},{"content":"Calling &lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt; sets IsEnabled to <ph id=\"ph1\">`false`</ph>.","pos":[216,306],"source":"       Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets IsEnabled to `false`."},{"content":"<bpt id=\"p1\">&lt;a name=\"XAMLTextUsage_IsEnabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","pos":[312,372],"source":"<a name=\"XAMLTextUsage_IsEnabled\"></a>    ## XAML Text Usage"}]},{"pos":[16465,16705],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the timer is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the timer is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,160],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the timer is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[162,240],"source":"  The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[17158,17231],"content":"Starts the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Starts the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>."},{"pos":[17244,17680],"content":"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.       Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.       Start sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.       Start resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Setting &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id=\"ph1\">`false`</ph> when the timer is started stops the timer.","pos":[0,122],"source":"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer."},{"content":"Setting &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id=\"ph1\">`true`</ph> when the timer is stopped starts the timer.","pos":[129,251],"source":"       Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer."},{"content":"Start sets &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id=\"ph1\">`true`</ph>.","pos":[258,340],"source":"       Start sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`."},{"content":"Start resets the timer &lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;.","pos":[347,430],"source":"       Start resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>."}]},{"pos":[19061,19133],"content":"Stops the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Stops the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>."},{"pos":[19146,19498],"content":"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.       Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.       Calling Stop sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.","needQuote":false,"needEscape":true,"nodes":[{"content":"Setting &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id=\"ph1\">`false`</ph> when the timer is started stops the timer.","pos":[0,122],"source":"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer."},{"content":"Setting &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id=\"ph1\">`true`</ph> when the timer is stopped starts the timer.","pos":[129,251],"source":"       Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer."},{"content":"Calling Stop sets &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id=\"ph1\">`false`</ph>.","pos":[258,348],"source":"       Calling Stop sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`."}]},{"pos":[19996,20036],"content":"Gets or sets a user-defined data object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a user-defined data object.","pos":[0,40]}]},{"pos":[20049,20106],"content":"<bpt id=\"p1\">&lt;a name=\"XAMLTextUsage_Tag\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","needQuote":false,"needEscape":true,"source":"<a name=\"XAMLTextUsage_Tag\"></a>    ## XAML Text Usage"},{"pos":[20220,20320],"content":"The user-defined data.  The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined data.","pos":[0,22]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[24,100],"source":"  The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[20755,20798],"content":"Occurs when the timer interval has elapsed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the timer interval has elapsed.","pos":[0,43]}]},{"pos":[20811,20869],"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_Tick\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","needQuote":false,"needEscape":true,"source":"<a name=\"xamlTextUsage_Tick\"></a>    ## XAML Text Usage"},{"pos":[21694,21706],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Threading.DispatcherTimer\n  id: DispatcherTimer\n  children:\n  - System.Windows.Threading.DispatcherTimer.#ctor\n  - System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)\n  - System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)\n  - System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)\n  - System.Windows.Threading.DispatcherTimer.Dispatcher\n  - System.Windows.Threading.DispatcherTimer.Interval\n  - System.Windows.Threading.DispatcherTimer.IsEnabled\n  - System.Windows.Threading.DispatcherTimer.Start\n  - System.Windows.Threading.DispatcherTimer.Stop\n  - System.Windows.Threading.DispatcherTimer.Tag\n  - System.Windows.Threading.DispatcherTimer.Tick\n  langs:\n  - csharp\n  name: DispatcherTimer\n  nameWithType: DispatcherTimer\n  fullName: System.Windows.Threading.DispatcherTimer\n  type: Class\n  summary: A timer that is integrated into the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> queue which is processed at a specified interval of time and at a specified priority.\n  remarks: \"The DispatcherTimer is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.  \\n  \\n Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because DispatcherTimer operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the DispatcherTimer operation executes is dependent on the other jobs in the queue and their priorities.  \\n  \\n If a <xref:System.Timers.Timer?displayProperty=fullName> is used in a [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=fullName> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] thread.  In order to access objects on the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>. Reasons for using a DispatcherTimer opposed to a <xref:System.Timers.Timer?displayProperty=fullName> are that the DispatcherTimer runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the DispatcherTimer.  \\n  \\n A DispatcherTimer will keep an object alive whenever the object's methods are bound to the timer.  \\n  \\n<a name=\\\"xamlTextUsage_DispatcherTimer\\\"></a>   \\n## XAML Text Usage\"\n  example:\n  - \"The following example creates a DispatcherTimer that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.  \\n  \\n A DispatcherTimer object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.  The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.  \\n  \\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimerinit)]\\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimerinit)]  \\n  \\n The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.  \\n  \\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimer)]\\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimer)]\"\n  syntax:\n    content: public class DispatcherTimer\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.#ctor\n  id: '#ctor'\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: DispatcherTimer()\n  nameWithType: DispatcherTimer.DispatcherTimer()\n  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class.\n  remarks: '<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority> priority.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName>.'\n  syntax:\n    content: public DispatcherTimer ();\n    parameters: []\n  overload: System.Windows.Threading.DispatcherTimer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)\n  id: '#ctor(System.Windows.Threading.DispatcherPriority)'\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: DispatcherTimer(DispatcherPriority)\n  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority)\n  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(DispatcherPriority)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which processes timer events at the specified priority.\n  remarks: '<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.'\n  syntax:\n    content: public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);\n    parameters:\n    - id: priority\n      type: System.Windows.Threading.DispatcherPriority\n      description: The priority at which to invoke the timer.\n  overload: System.Windows.Threading.DispatcherTimer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)\n  id: '#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)'\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: DispatcherTimer(DispatcherPriority,Dispatcher)\n  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority,Dispatcher)\n  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(DispatcherPriority,Dispatcher)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which runs on the specified <xref href=\"System.Windows.Threading.Dispatcher\"></xref> at the specified priority.\n  syntax:\n    content: public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);\n    parameters:\n    - id: priority\n      type: System.Windows.Threading.DispatcherPriority\n      description: The priority at which to invoke the timer.\n    - id: dispatcher\n      type: System.Windows.Threading.Dispatcher\n      description: The dispatcher the timer is associated with.\n  overload: System.Windows.Threading.DispatcherTimer.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>dispatcher</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)\n  id: '#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)'\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)\n  nameWithType: DispatcherTimer.DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)\n  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which uses the specified time interval, priority, event handler, and <xref href=\"System.Windows.Threading.Dispatcher\"></xref>.\n  syntax:\n    content: public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);\n    parameters:\n    - id: interval\n      type: System.TimeSpan\n      description: The period of time between ticks.\n    - id: priority\n      type: System.Windows.Threading.DispatcherPriority\n      description: The priority at which to invoke the timer.\n    - id: callback\n      type: System.EventHandler\n      description: The event handler to call when the <xref href=\"System.Windows.Threading.DispatcherTimer.Tick\"></xref> event occurs.\n    - id: dispatcher\n      type: System.Windows.Threading.Dispatcher\n      description: The dispatcher the timer is associated with.\n  overload: System.Windows.Threading.DispatcherTimer.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callback</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>interval</code> is less than 0 or greater than <xref:System.Int32.MaxValue>.\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.Dispatcher\n  id: Dispatcher\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Dispatcher\n  nameWithType: DispatcherTimer.Dispatcher\n  fullName: System.Windows.Threading.DispatcherTimer.Dispatcher\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> associated with this <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>.\n  remarks: The Dispatcher property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.  The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.\n  syntax:\n    content: public System.Windows.Threading.Dispatcher Dispatcher { get; }\n    return:\n      type: System.Windows.Threading.Dispatcher\n      description: The dispatcher.\n  overload: System.Windows.Threading.DispatcherTimer.Dispatcher*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.Interval\n  id: Interval\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Interval\n  nameWithType: DispatcherTimer.Interval\n  fullName: System.Windows.Threading.DispatcherTimer.Interval\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets or sets the period of time between timer ticks.\n  remarks: \"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.  \\n  \\n<a name=\\\"XAMLTextUsage_Interval\\\"></a>   \\n## XAML Text Usage\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.  A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.  The Interval is set to 1 second using a <xref:System.TimeSpan> object.  \\n  \\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimerinit)]\\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimerinit)]\"\n  syntax:\n    content: public TimeSpan Interval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The period of time between ticks. The default is 00:00:00.\n  overload: System.Windows.Threading.DispatcherTimer.Interval*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>interval</code> is less than 0 or greater than <xref:System.Int32.MaxValue> milliseconds.\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.IsEnabled\n  id: IsEnabled\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: IsEnabled\n  nameWithType: DispatcherTimer.IsEnabled\n  fullName: System.Windows.Threading.DispatcherTimer.IsEnabled\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets or sets a value that indicates whether the timer is running.\n  remarks: \"IsEnabled must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.  \\n  \\n Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets IsEnabled to `true`.  \\n  \\n Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets IsEnabled to `false`.  \\n  \\n<a name=\\\"XAMLTextUsage_IsEnabled\\\"></a>   \\n## XAML Text Usage\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.  A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.  The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.  \\n  \\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimerinit)]\\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimerinit)]\"\n  syntax:\n    content: public bool IsEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the timer is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Threading.DispatcherTimer.IsEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.Start\n  id: Start\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Start()\n  nameWithType: DispatcherTimer.Start()\n  fullName: System.Windows.Threading.DispatcherTimer.Start()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Starts the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>.\n  remarks: \"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.  \\n  \\n Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.  \\n  \\n Start sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.  \\n  \\n Start resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.  A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.  The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.  \\n  \\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimerinit)]\\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimerinit)]\"\n  syntax:\n    content: public void Start ();\n    parameters: []\n  overload: System.Windows.Threading.DispatcherTimer.Start*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.Stop\n  id: Stop\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: DispatcherTimer.Stop()\n  fullName: System.Windows.Threading.DispatcherTimer.Stop()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Stops the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>.\n  remarks: \"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.  \\n  \\n Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.  \\n  \\n Calling Stop sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.\"\n  syntax:\n    content: public void Stop ();\n    parameters: []\n  overload: System.Windows.Threading.DispatcherTimer.Stop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.Tag\n  id: Tag\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Tag\n  nameWithType: DispatcherTimer.Tag\n  fullName: System.Windows.Threading.DispatcherTimer.Tag\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets or sets a user-defined data object.\n  remarks: \"<a name=\\\"XAMLTextUsage_Tag\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: public object Tag { get; set; }\n    return:\n      type: System.Object\n      description: The user-defined data.  The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Threading.DispatcherTimer.Tag*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Threading.DispatcherTimer.Tick\n  id: Tick\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Tick\n  nameWithType: DispatcherTimer.Tick\n  fullName: System.Windows.Threading.DispatcherTimer.Tick\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when the timer interval has elapsed.\n  remarks: \"<a name=\\\"xamlTextUsage_Tick\\\"></a>   \\n## XAML Text Usage\"\n  example:\n  - \"The following example creates a Tick event handler.  The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.  \\n  \\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimer)]\\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimer)]\"\n  syntax:\n    content: public event EventHandler Tick;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Windows.Threading.DispatcherTimer.#ctor\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: DispatcherTimer()\n  nameWithType: DispatcherTimer.DispatcherTimer()\n  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer()\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: DispatcherTimer(DispatcherPriority)\n  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority)\n  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(DispatcherPriority)\n- uid: System.Windows.Threading.DispatcherPriority\n  parent: System.Windows.Threading\n  isExternal: false\n  name: DispatcherPriority\n  nameWithType: DispatcherPriority\n  fullName: System.Windows.Threading.DispatcherPriority\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: DispatcherTimer(DispatcherPriority,Dispatcher)\n  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority,Dispatcher)\n  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(DispatcherPriority,Dispatcher)\n- uid: System.Windows.Threading.Dispatcher\n  parent: System.Windows.Threading\n  isExternal: false\n  name: Dispatcher\n  nameWithType: Dispatcher\n  fullName: System.Windows.Threading.Dispatcher\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)\n  nameWithType: DispatcherTimer.DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)\n  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Threading.DispatcherTimer.Dispatcher\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherTimer.Dispatcher\n  fullName: System.Windows.Threading.DispatcherTimer.Dispatcher\n- uid: System.Windows.Threading.DispatcherTimer.Interval\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Interval\n  nameWithType: DispatcherTimer.Interval\n  fullName: System.Windows.Threading.DispatcherTimer.Interval\n- uid: System.Windows.Threading.DispatcherTimer.IsEnabled\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: IsEnabled\n  nameWithType: DispatcherTimer.IsEnabled\n  fullName: System.Windows.Threading.DispatcherTimer.IsEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Threading.DispatcherTimer.Start\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Start()\n  nameWithType: DispatcherTimer.Start()\n  fullName: System.Windows.Threading.DispatcherTimer.Start()\n- uid: System.Windows.Threading.DispatcherTimer.Stop\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Stop()\n  nameWithType: DispatcherTimer.Stop()\n  fullName: System.Windows.Threading.DispatcherTimer.Stop()\n- uid: System.Windows.Threading.DispatcherTimer.Tag\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Tag\n  nameWithType: DispatcherTimer.Tag\n  fullName: System.Windows.Threading.DispatcherTimer.Tag\n- uid: System.Windows.Threading.DispatcherTimer.Tick\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Tick\n  nameWithType: DispatcherTimer.Tick\n  fullName: System.Windows.Threading.DispatcherTimer.Tick\n- uid: System.Windows.Threading.DispatcherTimer.#ctor*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: DispatcherTimer\n  nameWithType: DispatcherTimer.DispatcherTimer\n- uid: System.Windows.Threading.DispatcherTimer.Dispatcher*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherTimer.Dispatcher\n- uid: System.Windows.Threading.DispatcherTimer.Interval*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Interval\n  nameWithType: DispatcherTimer.Interval\n- uid: System.Windows.Threading.DispatcherTimer.IsEnabled*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: IsEnabled\n  nameWithType: DispatcherTimer.IsEnabled\n- uid: System.Windows.Threading.DispatcherTimer.Start*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Start\n  nameWithType: DispatcherTimer.Start\n- uid: System.Windows.Threading.DispatcherTimer.Stop*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Stop\n  nameWithType: DispatcherTimer.Stop\n- uid: System.Windows.Threading.DispatcherTimer.Tag*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Tag\n  nameWithType: DispatcherTimer.Tag\n"}