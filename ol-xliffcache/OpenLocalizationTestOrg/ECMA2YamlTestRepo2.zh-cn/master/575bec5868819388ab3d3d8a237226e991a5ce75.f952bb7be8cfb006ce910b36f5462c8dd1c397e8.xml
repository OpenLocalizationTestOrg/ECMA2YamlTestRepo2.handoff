{"nodes":[{"pos":[581,667],"content":"Specifies an installer that copies properties from a component to use at install time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies an installer that copies properties from a component to use at install time.","pos":[0,86]}]},{"pos":[3838,3947],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.Install.ComponentInstaller\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.Install.ComponentInstaller\"></xref> class."},{"pos":[4681,4806],"content":"When overridden in a derived class, copies all the properties that are required at install time from the specified component.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, copies all the properties that are required at install time from the specified component.","pos":[0,125]}]},{"pos":[4818,4933],"content":"The installer should take all the information it can from the live component, and store it for use at install time.","needQuote":true,"needEscape":true,"nodes":[{"content":"The installer should take all the information it can from the live component, and store it for use at install time.","pos":[0,115]}]},{"pos":[5852,5879],"content":"The component to copy from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to copy from.","pos":[0,27]}]},{"pos":[6624,6705],"content":"Determines if the specified installer installs the same object as this installer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines if the specified installer installs the same object as this installer.","pos":[0,81]}]},{"pos":[6717,7082],"content":"Typically, IsEquivalentInstaller returns `true` only if this installer and the installer specified by the `otherInstaller` parameter install the same object. In such a case, calling the <xref:System.Configuration.Install.Installer.Install%2A> or <xref:System.Configuration.Install.Installer.Uninstall%2A> method on either installer results in the same system state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Typically, IsEquivalentInstaller returns <ph id=\"ph1\">`true`</ph> only if this installer and the installer specified by the <ph id=\"ph2\">`otherInstaller`</ph> parameter install the same object.","pos":[0,157],"source":"Typically, IsEquivalentInstaller returns `true` only if this installer and the installer specified by the `otherInstaller` parameter install the same object."},{"content":"In such a case, calling the &lt;xref:System.Configuration.Install.Installer.Install%2A&gt; or &lt;xref:System.Configuration.Install.Installer.Uninstall%2A&gt; method on either installer results in the same system state.","pos":[158,365],"source":" In such a case, calling the <xref:System.Configuration.Install.Installer.Install%2A> or <xref:System.Configuration.Install.Installer.Uninstall%2A> method on either installer results in the same system state."}]},{"pos":[8049,8074],"content":"The installer to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The installer to compare.","pos":[0,25]}]},{"pos":[8133,8384],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this installer and the installer specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">otherInstaller</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter install the same object; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this installer and the installer specified by the <code>otherInstaller</code> parameter install the same object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.Install.ComponentInstaller\n  id: ComponentInstaller\n  children:\n  - System.Configuration.Install.ComponentInstaller.#ctor\n  - System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)\n  - System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)\n  langs:\n  - csharp\n  name: ComponentInstaller\n  nameWithType: ComponentInstaller\n  fullName: System.Configuration.Install.ComponentInstaller\n  type: Class\n  summary: Specifies an installer that copies properties from a component to use at install time.\n  syntax:\n    content: 'public abstract class ComponentInstaller : System.Configuration.Install.Installer'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Configuration.Install.Installer\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.Configuration.Install.Installer.AfterInstall\n  - System.Configuration.Install.Installer.AfterRollback\n  - System.Configuration.Install.Installer.AfterUninstall\n  - System.Configuration.Install.Installer.BeforeInstall\n  - System.Configuration.Install.Installer.BeforeRollback\n  - System.Configuration.Install.Installer.BeforeUninstall\n  - System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.Committed\n  - System.Configuration.Install.Installer.Committing\n  - System.Configuration.Install.Installer.Context\n  - System.Configuration.Install.Installer.HelpText\n  - System.Configuration.Install.Installer.Install(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.Installers\n  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.Parent\n  - System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Configuration.Install.ComponentInstaller.#ctor\n  id: '#ctor'\n  parent: System.Configuration.Install.ComponentInstaller\n  langs:\n  - csharp\n  name: ComponentInstaller()\n  nameWithType: ComponentInstaller.ComponentInstaller()\n  fullName: System.Configuration.Install.ComponentInstaller.ComponentInstaller()\n  type: Constructor\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.Install.ComponentInstaller\"></xref> class.\n  syntax:\n    content: protected ComponentInstaller ();\n    parameters: []\n  overload: System.Configuration.Install.ComponentInstaller.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)\n  id: CopyFromComponent(System.ComponentModel.IComponent)\n  parent: System.Configuration.Install.ComponentInstaller\n  langs:\n  - csharp\n  name: CopyFromComponent(IComponent)\n  nameWithType: ComponentInstaller.CopyFromComponent(IComponent)\n  fullName: System.Configuration.Install.ComponentInstaller.CopyFromComponent(IComponent)\n  type: Method\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: When overridden in a derived class, copies all the properties that are required at install time from the specified component.\n  remarks: The installer should take all the information it can from the live component, and store it for use at install time.\n  example:\n  - \"The following example defines a class `MyInstallClass`, which creates the event log and copies the properties of the event log component to the <xref:System.Diagnostics.EventLogInstaller>. It also checks whether the <xref:System.ServiceProcess.ServiceInstaller> can perform the same kind of installation as the <xref:System.Diagnostics.EventLogInstaller>.  \\n  \\n [!code-cpp[ComponentInstaller_CopyFromComponent#1](~/add/codesnippet/cpp/bbbdd3c8-8c26-472e-ad0c-_1.cpp)]\\n [!code-vb[ComponentInstaller_CopyFromComponent#1](~/add/codesnippet/visualbasic/bbbdd3c8-8c26-472e-ad0c-_1.vb)]\\n [!code-cs[ComponentInstaller_CopyFromComponent#1](~/add/codesnippet/csharp/bbbdd3c8-8c26-472e-ad0c-_1.cs)]\"\n  syntax:\n    content: public abstract void CopyFromComponent (System.ComponentModel.IComponent component);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component to copy from.\n  overload: System.Configuration.Install.ComponentInstaller.CopyFromComponent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)\n  id: IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)\n  parent: System.Configuration.Install.ComponentInstaller\n  langs:\n  - csharp\n  name: IsEquivalentInstaller(ComponentInstaller)\n  nameWithType: ComponentInstaller.IsEquivalentInstaller(ComponentInstaller)\n  fullName: System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(ComponentInstaller)\n  type: Method\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Determines if the specified installer installs the same object as this installer.\n  remarks: Typically, IsEquivalentInstaller returns `true` only if this installer and the installer specified by the `otherInstaller` parameter install the same object. In such a case, calling the <xref:System.Configuration.Install.Installer.Install%2A> or <xref:System.Configuration.Install.Installer.Uninstall%2A> method on either installer results in the same system state.\n  example:\n  - \"The following example defines a class `MyInstallClass`, which creates the event log and copies the properties of the event log component to the <xref:System.Diagnostics.EventLogInstaller> object. It also checks whether <xref:System.ServiceProcess.ServiceInstaller> object can handle the same kind of installation as <xref:System.Diagnostics.EventLogInstaller>.  \\n  \\n [!code-cpp[ComponentInstaller_CopyFromComponent#2](~/add/codesnippet/cpp/9712fa47-8bed-4108-9ebc-_1.cpp)]\\n [!code-vb[ComponentInstaller_CopyFromComponent#2](~/add/codesnippet/visualbasic/9712fa47-8bed-4108-9ebc-_1.vb)]\\n [!code-cs[ComponentInstaller_CopyFromComponent#2](~/add/codesnippet/csharp/9712fa47-8bed-4108-9ebc-_1.cs)]\"\n  syntax:\n    content: public virtual bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);\n    parameters:\n    - id: otherInstaller\n      type: System.Configuration.Install.ComponentInstaller\n      description: The installer to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this installer and the installer specified by the <code>otherInstaller</code> parameter install the same object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.Install.Installer\n  isExternal: false\n  name: System.Configuration.Install.Installer\n- uid: System.Configuration.Install.ComponentInstaller.#ctor\n  parent: System.Configuration.Install.ComponentInstaller\n  isExternal: false\n  name: ComponentInstaller()\n  nameWithType: ComponentInstaller.ComponentInstaller()\n  fullName: System.Configuration.Install.ComponentInstaller.ComponentInstaller()\n- uid: System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)\n  parent: System.Configuration.Install.ComponentInstaller\n  isExternal: false\n  name: CopyFromComponent(IComponent)\n  nameWithType: ComponentInstaller.CopyFromComponent(IComponent)\n  fullName: System.Configuration.Install.ComponentInstaller.CopyFromComponent(IComponent)\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)\n  parent: System.Configuration.Install.ComponentInstaller\n  isExternal: false\n  name: IsEquivalentInstaller(ComponentInstaller)\n  nameWithType: ComponentInstaller.IsEquivalentInstaller(ComponentInstaller)\n  fullName: System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(ComponentInstaller)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.Install.ComponentInstaller\n  parent: System.Configuration.Install\n  isExternal: false\n  name: ComponentInstaller\n  nameWithType: ComponentInstaller\n  fullName: System.Configuration.Install.ComponentInstaller\n- uid: System.Configuration.Install.ComponentInstaller.#ctor*\n  parent: System.Configuration.Install.ComponentInstaller\n  isExternal: false\n  name: ComponentInstaller\n  nameWithType: ComponentInstaller.ComponentInstaller\n- uid: System.Configuration.Install.ComponentInstaller.CopyFromComponent*\n  parent: System.Configuration.Install.ComponentInstaller\n  isExternal: false\n  name: CopyFromComponent\n  nameWithType: ComponentInstaller.CopyFromComponent\n- uid: System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller*\n  parent: System.Configuration.Install.ComponentInstaller\n  isExternal: false\n  name: IsEquivalentInstaller\n  nameWithType: ComponentInstaller.IsEquivalentInstaller\n"}