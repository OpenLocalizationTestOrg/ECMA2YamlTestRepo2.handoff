{"nodes":[{"pos":[621,815],"content":"Allows security actions for <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows security actions for <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be applied to code using declarative security.","pos":[0,162],"source":"Allows security actions for <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> to be applied to code using declarative security."},{"content":"This class cannot be inherited.","pos":[163,194]}]},{"pos":[828,1235],"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.","needQuote":false,"needEscape":true,"nodes":[{"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.","pos":[0,405],"nodes":[{"content":"The scope of the declaration that is allowed depends on the &lt;xref:System.Security.Permissions.SecurityAction&gt; that is used.","pos":[0,123],"source":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used."},{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.","pos":[130,280]},{"content":"Security attributes are used only for declarative security.","pos":[281,340]},{"content":"For imperative security, use the corresponding permission class.","pos":[341,405]}]}]},{"pos":[2653,2870],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>."},{"pos":[2882,3104],"content":"<xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute> works with <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> to allow or deny a peer access to the collaboration session.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute&gt; works with &lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&gt; to allow or deny a peer access to the collaboration session.","pos":[0,222],"source":"<xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute> works with <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> to allow or deny a peer access to the collaboration session."}]},{"pos":[3332,3414],"content":"Specifies a <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"Specifies a <xref href=\"System.Security.Permissions.SecurityAction\"></xref> value."},{"pos":[4077,4152],"content":"Creates and returns a new <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns a new <xref href=\"System.Security.IPermission\"></xref>."},{"pos":[4164,4293],"content":"This method is not called, and is included only to support inheritance from <xref:System.Security.Permissions.SecurityAttribute>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is not called, and is included only to support inheritance from &lt;xref:System.Security.Permissions.SecurityAttribute&gt;.","pos":[0,129],"source":"This method is not called, and is included only to support inheritance from <xref:System.Security.Permissions.SecurityAttribute>."}]},{"pos":[4472,4534],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Security.IPermission\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\n  id: PeerCollaborationPermissionAttribute\n  children:\n  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission\n  langs:\n  - csharp\n  name: PeerCollaborationPermissionAttribute\n  nameWithType: PeerCollaborationPermissionAttribute\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\n  type: Class\n  summary: Allows security actions for <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.\n  remarks: \"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.  \\n  \\n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      public sealed class PeerCollaborationPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\n  langs:\n  - csharp\n  name: PeerCollaborationPermissionAttribute(SecurityAction)\n  nameWithType: PeerCollaborationPermissionAttribute.PeerCollaborationPermissionAttribute(SecurityAction)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.PeerCollaborationPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer.Collaboration\n  summary: Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>.\n  remarks: <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute> works with <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> to allow or deny a peer access to the collaboration session.\n  syntax:\n    content: public PeerCollaborationPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: Specifies a <xref href=\"System.Security.Permissions.SecurityAction\"></xref> value.\n  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: PeerCollaborationPermissionAttribute.CreatePermission()\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer.Collaboration\n  summary: Creates and returns a new <xref href=\"System.Security.IPermission\"></xref>.\n  remarks: This method is not called, and is included only to support inheritance from <xref:System.Security.Permissions.SecurityAttribute>.\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A new <xref href=\"System.Security.IPermission\"></xref> object.\n  overload: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\n  isExternal: false\n  name: PeerCollaborationPermissionAttribute(SecurityAction)\n  nameWithType: PeerCollaborationPermissionAttribute.PeerCollaborationPermissionAttribute(SecurityAction)\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.PeerCollaborationPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: PeerCollaborationPermissionAttribute.CreatePermission()\n  fullName: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor*\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\n  isExternal: false\n  name: PeerCollaborationPermissionAttribute\n  nameWithType: PeerCollaborationPermissionAttribute.PeerCollaborationPermissionAttribute\n- uid: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission*\n  parent: System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: PeerCollaborationPermissionAttribute.CreatePermission\n"}