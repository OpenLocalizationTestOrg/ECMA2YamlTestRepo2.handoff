{"nodes":[{"pos":[693,772],"content":"Represents an adjustable arrow-shaped line cap. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an adjustable arrow-shaped line cap. This class cannot be inherited.","pos":[0,79],"nodes":[{"content":"Represents an adjustable arrow-shaped line cap.","pos":[0,47]},{"content":"This class cannot be inherited.","pos":[48,79]}]}]},{"pos":[2402,2611],"content":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width and height. The arrow end caps created with this constructor are always filled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified width and height.","pos":[0,141],"source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width and height."},{"content":"The arrow end caps created with this constructor are always filled.","pos":[142,209]}]},{"pos":[3783,3806],"content":"The width of the arrow.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the arrow.","pos":[0,23]}]},{"pos":[3869,3893],"content":"The height of the arrow.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the arrow.","pos":[0,24]}]},{"pos":[4557,4820],"content":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width, height, and fill property. Whether an arrow end cap is filled depends on the argument passed to the <code>isFilled</code> parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified width, height, and fill property.","pos":[0,157],"source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width, height, and fill property."},{"content":"Whether an arrow end cap is filled depends on the argument passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isFilled</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[158,263],"source":" Whether an arrow end cap is filled depends on the argument passed to the <code>isFilled</code> parameter."}]},{"pos":[6007,6030],"content":"The width of the arrow.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the arrow.","pos":[0,23]}]},{"pos":[6093,6117],"content":"The height of the arrow.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the arrow.","pos":[0,24]}]},{"pos":[6183,6341],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to fill the arrow cap; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to fill the arrow cap; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6809,6854],"content":"Gets or sets whether the arrow cap is filled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether the arrow cap is filled.","pos":[0,45]}]},{"pos":[6969,7149],"content":"This property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the arrow cap is filled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the arrow cap is filled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7618,7659],"content":"Gets or sets the height of the arrow cap.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the height of the arrow cap.","pos":[0,41]}]},{"pos":[7671,8020],"content":"The height of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a height of 3, then the actual arrow cap is drawn 15 pixels high.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a height of 3, then the actual arrow cap is drawn 15 pixels high.","pos":[0,349],"nodes":[{"content":"The height of the arrow cap is scaled by the width of the &lt;xref:System.Drawing.Pen&gt; object used to draw the line being capped.","pos":[0,126],"source":"The height of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped."},{"content":"For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the &lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt; object has a height of 3, then the actual arrow cap is drawn 15 pixels high.","pos":[127,349],"source":" For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a height of 3, then the actual arrow cap is drawn 15 pixels high."}]}]},{"pos":[8135,8163],"content":"The height of the arrow cap.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the arrow cap.","pos":[0,28]}]},{"pos":[8657,8740],"content":"Gets or sets the number of units between the outline of the arrow cap and the fill.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of units between the outline of the arrow cap and the fill.","pos":[0,83]}]},{"pos":[8860,8947],"content":"The number of units between the outline of the arrow cap and the fill of the arrow cap.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of units between the outline of the arrow cap and the fill of the arrow cap.","pos":[0,87]}]},{"pos":[9416,9456],"content":"Gets or sets the width of the arrow cap.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the width of the arrow cap.","pos":[0,40]}]},{"pos":[9468,9815],"content":"The width of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide.","pos":[0,347],"nodes":[{"content":"The width of the arrow cap is scaled by the width of the &lt;xref:System.Drawing.Pen&gt; object used to draw the line being capped.","pos":[0,125],"source":"The width of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped."},{"content":"For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the &lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt; object has a width of 3, then the actual arrow cap is drawn 15 pixels wide.","pos":[126,347],"source":" For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide."}]}]},{"pos":[9929,9967],"content":"The width, in units, of the arrow cap.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width, in units, of the arrow cap.","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap\n  id: AdjustableArrowCap\n  children:\n  - System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)\n  - System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)\n  - System.Drawing.Drawing2D.AdjustableArrowCap.Filled\n  - System.Drawing.Drawing2D.AdjustableArrowCap.Height\n  - System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset\n  - System.Drawing.Drawing2D.AdjustableArrowCap.Width\n  langs:\n  - csharp\n  name: AdjustableArrowCap\n  nameWithType: AdjustableArrowCap\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap\n  type: Class\n  summary: Represents an adjustable arrow-shaped line cap. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class AdjustableArrowCap : System.Drawing.Drawing2D.CustomLineCap'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Drawing.Drawing2D.CustomLineCap\n  implements: []\n  inheritedMembers:\n  - System.Drawing.Drawing2D.CustomLineCap.BaseCap\n  - System.Drawing.Drawing2D.CustomLineCap.BaseInset\n  - System.Drawing.Drawing2D.CustomLineCap.Clone\n  - System.Drawing.Drawing2D.CustomLineCap.Dispose\n  - System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)\n  - System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)\n  - System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)\n  - System.Drawing.Drawing2D.CustomLineCap.StrokeJoin\n  - System.Drawing.Drawing2D.CustomLineCap.WidthScale\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single)'\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: AdjustableArrowCap(Single,Single)\n  nameWithType: AdjustableArrowCap.AdjustableArrowCap(Single,Single)\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.AdjustableArrowCap(Single,Single)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width and height. The arrow end caps created with this constructor are always filled.\n  remarks: ''\n  example:\n  - \"The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates an <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object named `myArrow`.  \\n  \\n-   Creates a <xref:System.Drawing.Pen> object named `capPen`, and sets its <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties equal to `myArrow`.  \\n  \\n-   Uses the <xref:System.Drawing.Graphics.DrawLine%2A> method to draw to screen a line capped by two arrows.  \\n  \\n [!code-vb[System.Drawing.Drawing2D.ClassicMisc#1](~/add/codesnippet/visualbasic/0d42cbf8-f10f-4e51-90ad-_1.vb)]\\n [!code-cs[System.Drawing.Drawing2D.ClassicMisc#1](~/add/codesnippet/csharp/0d42cbf8-f10f-4e51-90ad-_1.cs)]\\n [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#1](~/add/codesnippet/cpp/0d42cbf8-f10f-4e51-90ad-_1.cpp)]\"\n  syntax:\n    content: public AdjustableArrowCap (float width, float height);\n    parameters:\n    - id: width\n      type: System.Single\n      description: The width of the arrow.\n    - id: height\n      type: System.Single\n      description: The height of the arrow.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)\n  id: '#ctor(System.Single,System.Single,System.Boolean)'\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: AdjustableArrowCap(Single,Single,Boolean)\n  nameWithType: AdjustableArrowCap.AdjustableArrowCap(Single,Single,Boolean)\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.AdjustableArrowCap(Single,Single,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.AdjustableArrowCap\"></xref> class with the specified width, height, and fill property. Whether an arrow end cap is filled depends on the argument passed to the <code>isFilled</code> parameter.\n  remarks: ''\n  example:\n  - \"The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates an <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object named `myArrow`.  \\n  \\n-   Creates a <xref:System.Drawing.Pen> object named `capPen`, and sets its <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties equal to `myArrow`.  \\n  \\n-   Uses the <xref:System.Drawing.Graphics.DrawLine%2A> method to draw to screen a line capped by two arrows.  \\n  \\n [!code-vb[System.Drawing.Drawing2D.ClassicMisc#2](~/add/codesnippet/visualbasic/8cfcd303-e473-462a-bad7-_1.vb)]\\n [!code-cs[System.Drawing.Drawing2D.ClassicMisc#2](~/add/codesnippet/csharp/8cfcd303-e473-462a-bad7-_1.cs)]\\n [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#2](~/add/codesnippet/cpp/8cfcd303-e473-462a-bad7-_1.cpp)]\"\n  syntax:\n    content: public AdjustableArrowCap (float width, float height, bool isFilled);\n    parameters:\n    - id: width\n      type: System.Single\n      description: The width of the arrow.\n    - id: height\n      type: System.Single\n      description: The height of the arrow.\n    - id: isFilled\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to fill the arrow cap; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Filled\n  id: Filled\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: Filled\n  nameWithType: AdjustableArrowCap.Filled\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.Filled\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets whether the arrow cap is filled.\n  syntax:\n    content: public bool Filled { get; set; }\n    return:\n      type: System.Boolean\n      description: This property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the arrow cap is filled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.Filled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Height\n  id: Height\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: Height\n  nameWithType: AdjustableArrowCap.Height\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.Height\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets the height of the arrow cap.\n  remarks: The height of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a height of 3, then the actual arrow cap is drawn 15 pixels high.\n  syntax:\n    content: public float Height { get; set; }\n    return:\n      type: System.Single\n      description: The height of the arrow cap.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.Height*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset\n  id: MiddleInset\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: MiddleInset\n  nameWithType: AdjustableArrowCap.MiddleInset\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets the number of units between the outline of the arrow cap and the fill.\n  syntax:\n    content: public float MiddleInset { get; set; }\n    return:\n      type: System.Single\n      description: The number of units between the outline of the arrow cap and the fill of the arrow cap.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Width\n  id: Width\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  langs:\n  - csharp\n  name: Width\n  nameWithType: AdjustableArrowCap.Width\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.Width\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets the width of the arrow cap.\n  remarks: The width of the arrow cap is scaled by the width of the <xref:System.Drawing.Pen> object used to draw the line being capped. For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <xref:System.Drawing.Drawing2D.AdjustableArrowCap> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide.\n  syntax:\n    content: public float Width { get; set; }\n    return:\n      type: System.Single\n      description: The width, in units, of the arrow cap.\n  overload: System.Drawing.Drawing2D.AdjustableArrowCap.Width*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Drawing.Drawing2D.CustomLineCap\n  isExternal: false\n  name: System.Drawing.Drawing2D.CustomLineCap\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: AdjustableArrowCap(Single,Single)\n  nameWithType: AdjustableArrowCap.AdjustableArrowCap(Single,Single)\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.AdjustableArrowCap(Single,Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: AdjustableArrowCap(Single,Single,Boolean)\n  nameWithType: AdjustableArrowCap.AdjustableArrowCap(Single,Single,Boolean)\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.AdjustableArrowCap(Single,Single,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Filled\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Filled\n  nameWithType: AdjustableArrowCap.Filled\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.Filled\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Height\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Height\n  nameWithType: AdjustableArrowCap.Height\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.Height\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: MiddleInset\n  nameWithType: AdjustableArrowCap.MiddleInset\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Width\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Width\n  nameWithType: AdjustableArrowCap.Width\n  fullName: System.Drawing.Drawing2D.AdjustableArrowCap.Width\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.#ctor*\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: AdjustableArrowCap\n  nameWithType: AdjustableArrowCap.AdjustableArrowCap\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Filled*\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Filled\n  nameWithType: AdjustableArrowCap.Filled\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Height*\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Height\n  nameWithType: AdjustableArrowCap.Height\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset*\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: MiddleInset\n  nameWithType: AdjustableArrowCap.MiddleInset\n- uid: System.Drawing.Drawing2D.AdjustableArrowCap.Width*\n  parent: System.Drawing.Drawing2D.AdjustableArrowCap\n  isExternal: false\n  name: Width\n  nameWithType: AdjustableArrowCap.Width\n"}