{"nodes":[{"pos":[387,431],"content":"Represents a symbol binder for managed code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a symbol binder for managed code.","pos":[0,44]}]},{"pos":[444,673],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> ISymbolBinder1 is the managed counterpart of the unmanaged <ph id=\"ph1\">`ISymUnmanagedBinder`</ph>       interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.","needQuote":false,"needEscape":true,"source":"**Note** ISymbolBinder1 is the managed counterpart of the unmanaged `ISymUnmanagedBinder`       interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information."},{"pos":[1367,1428],"content":"Gets the interface of the symbol reader for the current file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the interface of the symbol reader for the current file.","pos":[0,61]}]},{"pos":[1440,1673],"content":"When given a pointer to a metadata interface, a file name, and a search path, the GetReader method returns the <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface that reads the debugging symbols associated with the module.","needQuote":true,"needEscape":true,"nodes":[{"content":"When given a pointer to a metadata interface, a file name, and a search path, the GetReader method returns the &lt;xref:System.Diagnostics.SymbolStore.ISymbolReader&gt; interface that reads the debugging symbols associated with the module.","pos":[0,233],"source":"When given a pointer to a metadata interface, a file name, and a search path, the GetReader method returns the <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface that reads the debugging symbols associated with the module."}]},{"pos":[1894,1963],"content":"An <xref:System.IntPtr> that refers to the metadata import interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IntPtr&gt; that refers to the metadata import interface.","pos":[0,69],"source":"An <xref:System.IntPtr> that refers to the metadata import interface."}]},{"pos":[2028,2092],"content":"The name of the file for which the reader interface is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file for which the reader interface is required.","pos":[0,64]}]},{"pos":[2159,2206],"content":"The search path used to locate the symbol file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The search path used to locate the symbol file.","pos":[0,47]}]},{"pos":[2295,2408],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SymbolStore.ISymbolReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface that reads the debugging symbols.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Diagnostics.SymbolStore.ISymbolReader\"></xref> interface that reads the debugging symbols."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.ISymbolBinder1\n  id: ISymbolBinder1\n  children:\n  - System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(System.IntPtr,System.String,System.String)\n  langs:\n  - csharp\n  name: ISymbolBinder1\n  nameWithType: ISymbolBinder1\n  fullName: System.Diagnostics.SymbolStore.ISymbolBinder1\n  type: Interface\n  summary: Represents a symbol binder for managed code.\n  remarks: \"**Note** ISymbolBinder1 is the managed counterpart of the unmanaged `ISymUnmanagedBinder`  \\n  \\n interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISymbolBinder1\n  implements: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(System.IntPtr,System.String,System.String)\n  id: GetReader(System.IntPtr,System.String,System.String)\n  parent: System.Diagnostics.SymbolStore.ISymbolBinder1\n  langs:\n  - csharp\n  name: GetReader(IntPtr,String,String)\n  nameWithType: ISymbolBinder1.GetReader(IntPtr,String,String)\n  fullName: System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(IntPtr,String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the interface of the symbol reader for the current file.\n  remarks: When given a pointer to a metadata interface, a file name, and a search path, the GetReader method returns the <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface that reads the debugging symbols associated with the module.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolReader GetReader (IntPtr importer, string filename, string searchPath);\n    parameters:\n    - id: importer\n      type: System.IntPtr\n      description: An <xref:System.IntPtr> that refers to the metadata import interface.\n    - id: filename\n      type: System.String\n      description: The name of the file for which the reader interface is required.\n    - id: searchPath\n      type: System.String\n      description: The search path used to locate the symbol file.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolReader\n      description: The <xref href=\"System.Diagnostics.SymbolStore.ISymbolReader\"></xref> interface that reads the debugging symbols.\n  overload: System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(System.IntPtr,System.String,System.String)\n  parent: System.Diagnostics.SymbolStore.ISymbolBinder1\n  isExternal: false\n  name: GetReader(IntPtr,String,String)\n  nameWithType: ISymbolBinder1.GetReader(IntPtr,String,String)\n  fullName: System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(IntPtr,String,String)\n- uid: System.Diagnostics.SymbolStore.ISymbolReader\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolReader\n  nameWithType: ISymbolReader\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader*\n  parent: System.Diagnostics.SymbolStore.ISymbolBinder1\n  isExternal: false\n  name: GetReader\n  nameWithType: ISymbolBinder1.GetReader\n"}