{"nodes":[{"pos":[553,668],"content":"Represents the abstract base class from which all classes that derive byte sequences of a specified length inherit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the abstract base class from which all classes that derive byte sequences of a specified length inherit.","pos":[0,115]}]},{"pos":[1292,1394],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DeriveBytes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class."},{"pos":[1918,2081],"content":"When overridden in a derived class, releases all resources used by the current instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DeriveBytes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class."},{"pos":[2094,3013],"content":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.DeriveBytes>. The `Dispose` method leaves the <xref:System.Security.Cryptography.DeriveBytes> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.DeriveBytes> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.DeriveBytes> was occupying.       For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.DeriveBytes>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.DeriveBytes> object's `Finalize` method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.DeriveBytes&gt;.","pos":[0,95],"source":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.DeriveBytes>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.DeriveBytes&gt; in an unusable state.","pos":[96,197],"source":" The `Dispose` method leaves the <xref:System.Security.Cryptography.DeriveBytes> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.DeriveBytes&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.DeriveBytes&gt; was occupying.","pos":[198,429],"source":" After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.DeriveBytes> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.DeriveBytes> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[436,610],"source":"       For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Always call <ph id=\"ph2\">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.DeriveBytes&gt;.","pos":[616,745],"source":"      > [!NOTE] >  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.DeriveBytes>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.DeriveBytes&gt; object's <ph id=\"ph1\">`Finalize`</ph> method.","pos":[746,914],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.DeriveBytes> object's `Finalize` method."}]},{"pos":[3591,3786],"content":"When overridden in a derived class, releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DeriveBytes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class and optionally releases the managed resources."},{"pos":[3799,4301],"content":"This method is called by the public `Dispose()` method and the `Finalize` method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. `Finalize` invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.DeriveBytes> references. This method invokes the `Dispose()` method of each referenced object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">`Finalize`</ph> method.","pos":[0,81],"source":"This method is called by the public `Dispose()` method and the `Finalize` method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[82,187],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">`Finalize`</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[188,249],"source":"`Finalize` invokes `Dispose` with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.DeriveBytes&gt; references.","pos":[256,430],"source":"       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.DeriveBytes> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[431,500],"source":" This method invokes the `Dispose()` method of each referenced object."}]},{"pos":[4457,4666],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[5172,5240],"content":"When overridden in a derived class, returns pseudo-random key bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns pseudo-random key bytes.","pos":[0,68]}]},{"pos":[5379,5429],"content":"The number of pseudo-random key bytes to generate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of pseudo-random key bytes to generate.","pos":[0,50]}]},{"pos":[5487,5536],"content":"A byte array filled with pseudo-random key bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array filled with pseudo-random key bytes.","pos":[0,49]}]},{"pos":[5985,6055],"content":"When overridden in a derived class, resets the state of the operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, resets the state of the operation.","pos":[0,70]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DeriveBytes\n  id: DeriveBytes\n  children:\n  - System.Security.Cryptography.DeriveBytes.#ctor\n  - System.Security.Cryptography.DeriveBytes.Dispose\n  - System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)\n  - System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)\n  - System.Security.Cryptography.DeriveBytes.Reset\n  langs:\n  - csharp\n  name: DeriveBytes\n  nameWithType: DeriveBytes\n  fullName: System.Security.Cryptography.DeriveBytes\n  type: Class\n  summary: Represents the abstract base class from which all classes that derive byte sequences of a specified length inherit.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class DeriveBytes : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DeriveBytes.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DeriveBytes\n  langs:\n  - csharp\n  name: DeriveBytes()\n  nameWithType: DeriveBytes.DeriveBytes()\n  fullName: System.Security.Cryptography.DeriveBytes.DeriveBytes()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class.\n  syntax:\n    content: protected DeriveBytes ();\n    parameters: []\n  overload: System.Security.Cryptography.DeriveBytes.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DeriveBytes.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.DeriveBytes\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DeriveBytes.Dispose()\n  fullName: System.Security.Cryptography.DeriveBytes.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.DeriveBytes>. The `Dispose` method leaves the <xref:System.Security.Cryptography.DeriveBytes> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.DeriveBytes> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.DeriveBytes> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.DeriveBytes>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.DeriveBytes> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.DeriveBytes.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.DeriveBytes\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DeriveBytes.Dispose(Boolean)\n  fullName: System.Security.Cryptography.DeriveBytes.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the `Finalize` method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. `Finalize` invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.DeriveBytes> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.Security.Cryptography.DeriveBytes.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)\n  id: GetBytes(System.Int32)\n  parent: System.Security.Cryptography.DeriveBytes\n  langs:\n  - csharp\n  name: GetBytes(Int32)\n  nameWithType: DeriveBytes.GetBytes(Int32)\n  fullName: System.Security.Cryptography.DeriveBytes.GetBytes(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, returns pseudo-random key bytes.\n  syntax:\n    content: public abstract byte[] GetBytes (int cb);\n    parameters:\n    - id: cb\n      type: System.Int32\n      description: The number of pseudo-random key bytes to generate.\n    return:\n      type: System.Byte[]\n      description: A byte array filled with pseudo-random key bytes.\n  overload: System.Security.Cryptography.DeriveBytes.GetBytes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DeriveBytes.Reset\n  id: Reset\n  parent: System.Security.Cryptography.DeriveBytes\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: DeriveBytes.Reset()\n  fullName: System.Security.Cryptography.DeriveBytes.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, resets the state of the operation.\n  syntax:\n    content: public abstract void Reset ();\n    parameters: []\n  overload: System.Security.Cryptography.DeriveBytes.Reset*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.DeriveBytes.#ctor\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: DeriveBytes()\n  nameWithType: DeriveBytes.DeriveBytes()\n  fullName: System.Security.Cryptography.DeriveBytes.DeriveBytes()\n- uid: System.Security.Cryptography.DeriveBytes.Dispose\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: Dispose()\n  nameWithType: DeriveBytes.Dispose()\n  fullName: System.Security.Cryptography.DeriveBytes.Dispose()\n- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DeriveBytes.Dispose(Boolean)\n  fullName: System.Security.Cryptography.DeriveBytes.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: GetBytes(Int32)\n  nameWithType: DeriveBytes.GetBytes(Int32)\n  fullName: System.Security.Cryptography.DeriveBytes.GetBytes(Int32)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.DeriveBytes.Reset\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: Reset()\n  nameWithType: DeriveBytes.Reset()\n  fullName: System.Security.Cryptography.DeriveBytes.Reset()\n- uid: System.Security.Cryptography.DeriveBytes.#ctor*\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: DeriveBytes\n  nameWithType: DeriveBytes.DeriveBytes\n- uid: System.Security.Cryptography.DeriveBytes.Dispose*\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: Dispose\n  nameWithType: DeriveBytes.Dispose\n- uid: System.Security.Cryptography.DeriveBytes.GetBytes*\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: GetBytes\n  nameWithType: DeriveBytes.GetBytes\n- uid: System.Security.Cryptography.DeriveBytes.Reset*\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: Reset\n  nameWithType: DeriveBytes.Reset\n"}