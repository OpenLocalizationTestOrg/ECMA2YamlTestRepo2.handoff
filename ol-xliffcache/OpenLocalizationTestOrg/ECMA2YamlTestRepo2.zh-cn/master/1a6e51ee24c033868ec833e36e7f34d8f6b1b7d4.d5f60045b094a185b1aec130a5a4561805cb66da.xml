{"nodes":[{"pos":[1091,1143],"content":"Calls a public method of a specified object or type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calls a public method of a specified object or type.","pos":[0,52]}]},{"pos":[2863,2962],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.InvokeMethod\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.InvokeMethod\"></xref> class."},{"pos":[4416,4428],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4500,4512],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4574,4586],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4650,4662],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5515,5527],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6489,6501],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6570,6582],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7118,7169],"content":"The generic type arguments of the contained method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The generic type arguments of the contained method.","pos":[0,51]}]},{"pos":[7181,7257],"content":"The generic type arguments must only be set if the called method is generic.","needQuote":true,"needEscape":true,"nodes":[{"content":"The generic type arguments must only be set if the called method is generic.","pos":[0,76]}]},{"pos":[7820,7834],"content":"The arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments.","pos":[0,14]}]},{"pos":[8330,8394],"content":"The name of the method to be invoked when the activity executes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method to be invoked when the activity executes.","pos":[0,64]}]},{"pos":[8406,8452],"content":"The invoked method must be declared as public.","needQuote":true,"needEscape":true,"nodes":[{"content":"The invoked method must be declared as public.","pos":[0,46]}]},{"pos":[8927,8943],"content":"The method name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method name.","pos":[0,16]}]},{"pos":[9429,9482],"content":"The parameter collection of the method to be invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter collection of the method to be invoked.","pos":[0,53]}]},{"pos":[9494,9655],"content":"The parameters must be added to the collection in the same order that they appear in the method signature. Parameters cannot be named `TargetObject` or `Result`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters must be added to the collection in the same order that they appear in the method signature.","pos":[0,106]},{"content":"Parameters cannot be named <ph id=\"ph1\">`TargetObject`</ph> or <ph id=\"ph2\">`Result`</ph>.","pos":[107,161],"source":" Parameters cannot be named `TargetObject` or `Result`."}]},{"pos":[10235,10260],"content":"The parameter collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter collection.","pos":[0,25]}]},{"pos":[10726,10767],"content":"The return value of the method operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The return value of the method operation.","pos":[0,41]}]},{"pos":[11287,11316],"content":"The operation’s return value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The operation’s return value.","pos":[0,29]}]},{"pos":[11833,11925],"content":"Gets or sets a value that indicates whether the activity’s method is invoked asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the activity’s method is invoked asynchronously.","pos":[0,92]}]},{"pos":[12427,12526],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the method executes asynchronously.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method executes asynchronously."},{"pos":[13029,13076],"content":"The object that contains the method to execute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that contains the method to execute.","pos":[0,47]}]},{"pos":[13606,13617],"content":"The object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object.","pos":[0,11]}]},{"pos":[14105,14184],"content":"The type of the <xref:System.Activities.Statements.InvokeMethod.TargetObject*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the &lt;xref:System.Activities.Statements.InvokeMethod.TargetObject*&gt;.","pos":[0,79],"source":"The type of the <xref:System.Activities.Statements.InvokeMethod.TargetObject*>."}]},{"pos":[14196,14260],"content":"This parameter must only be set if the invoked method is static.","needQuote":true,"needEscape":true,"nodes":[{"content":"This parameter must only be set if the invoked method is static.","pos":[0,64]}]},{"pos":[14731,14754],"content":"The target object type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target object type.","pos":[0,23]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.InvokeMethod\n  id: InvokeMethod\n  children:\n  - System.Activities.Statements.InvokeMethod.#ctor\n  - System.Activities.Statements.InvokeMethod.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  - System.Activities.Statements.InvokeMethod.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Statements.InvokeMethod.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  - System.Activities.Statements.InvokeMethod.GenericTypeArguments\n  - System.Activities.Statements.InvokeMethod.MethodName\n  - System.Activities.Statements.InvokeMethod.Parameters\n  - System.Activities.Statements.InvokeMethod.Result\n  - System.Activities.Statements.InvokeMethod.RunAsynchronously\n  - System.Activities.Statements.InvokeMethod.TargetObject\n  - System.Activities.Statements.InvokeMethod.TargetType\n  langs:\n  - csharp\n  name: InvokeMethod\n  nameWithType: InvokeMethod\n  fullName: System.Activities.Statements.InvokeMethod\n  type: Class\n  summary: Calls a public method of a specified object or type.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating an InvokeMethod activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_InvokeMethod#1](~/add/codesnippet/csharp/invokemethodusage/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Parameters\")]\n\n      public sealed class InvokeMethod : System.Activities.AsyncCodeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.AsyncCodeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)\n  - System.Activities.AsyncCodeActivity.Implementation\n  - System.Activities.AsyncCodeActivity.ImplementationVersion\n  - System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: InvokeMethod()\n  nameWithType: InvokeMethod.InvokeMethod()\n  fullName: System.Activities.Statements.InvokeMethod.InvokeMethod()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.InvokeMethod\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_InvokeMethod#1](~/add/codesnippet/csharp/invokemethodusage/program.cs#1)]\"\n  syntax:\n    content: public InvokeMethod ();\n    parameters: []\n  overload: System.Activities.Statements.InvokeMethod.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  id: BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  nameWithType: InvokeMethod.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  fullName: System.Activities.Statements.InvokeMethod.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override IAsyncResult BeginExecute (System.Activities.AsyncCodeActivityContext context, AsyncCallback callback, object state);\n    parameters:\n    - id: context\n      type: System.Activities.AsyncCodeActivityContext\n      description: To be added.\n    - id: callback\n      type: System.AsyncCallback\n      description: To be added.\n    - id: state\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Activities.Statements.InvokeMethod.BeginExecute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: InvokeMethod.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Statements.InvokeMethod.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.InvokeMethod.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  id: EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  nameWithType: InvokeMethod.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  fullName: System.Activities.Statements.InvokeMethod.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void EndExecute (System.Activities.AsyncCodeActivityContext context, IAsyncResult result);\n    parameters:\n    - id: context\n      type: System.Activities.AsyncCodeActivityContext\n      description: To be added.\n    - id: result\n      type: System.IAsyncResult\n      description: To be added.\n  overload: System.Activities.Statements.InvokeMethod.EndExecute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.GenericTypeArguments\n  id: GenericTypeArguments\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: GenericTypeArguments\n  nameWithType: InvokeMethod.GenericTypeArguments\n  fullName: System.Activities.Statements.InvokeMethod.GenericTypeArguments\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The generic type arguments of the contained method.\n  remarks: The generic type arguments must only be set if the called method is generic.\n  example:\n  - \"The following code sample demonstrates setting the GenericTypeArguments of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_InvokeMethod#5](~/add/codesnippet/csharp/invokemethodusage/program.cs#5)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<Type> GenericTypeArguments { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Type}\n      description: The arguments.\n  overload: System.Activities.Statements.InvokeMethod.GenericTypeArguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.MethodName\n  id: MethodName\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: InvokeMethod.MethodName\n  fullName: System.Activities.Statements.InvokeMethod.MethodName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The name of the method to be invoked when the activity executes.\n  remarks: The invoked method must be declared as public.\n  example:\n  - \"The following code sample demonstrates setting the MethodName property of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_InvokeMethod#1](~/add/codesnippet/csharp/invokemethodusage/program.cs#1)]\"\n  syntax:\n    content: public string MethodName { get; set; }\n    return:\n      type: System.String\n      description: The method name.\n  overload: System.Activities.Statements.InvokeMethod.MethodName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.Parameters\n  id: Parameters\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: InvokeMethod.Parameters\n  fullName: System.Activities.Statements.InvokeMethod.Parameters\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The parameter collection of the method to be invoked.\n  remarks: The parameters must be added to the collection in the same order that they appear in the method signature. Parameters cannot be named `TargetObject` or `Result`.\n  example:\n  - \"The following code sample demonstrates setting the Parameters of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_InvokeMethod#1](~/add/codesnippet/csharp/invokemethodusage/program.cs#1)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Argument> Parameters { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Argument}\n      description: The parameter collection.\n  overload: System.Activities.Statements.InvokeMethod.Parameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.Result\n  id: Result\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: Result\n  nameWithType: InvokeMethod.Result\n  fullName: System.Activities.Statements.InvokeMethod.Result\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The return value of the method operation.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the Result property of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_InvokeMethod#2](~/add/codesnippet/csharp/invokemethodusage/program.cs#2)]\"\n  syntax:\n    content: public System.Activities.OutArgument Result { get; set; }\n    return:\n      type: System.Activities.OutArgument\n      description: The operation’s return value.\n  overload: System.Activities.Statements.InvokeMethod.Result*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.RunAsynchronously\n  id: RunAsynchronously\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: RunAsynchronously\n  nameWithType: InvokeMethod.RunAsynchronously\n  fullName: System.Activities.Statements.InvokeMethod.RunAsynchronously\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets a value that indicates whether the activity’s method is invoked asynchronously.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the RunAsynchronously property of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_InvokeMethod#3](~/add/codesnippet/csharp/invokemethodusage/program.cs#3)]\"\n  syntax:\n    content: public bool RunAsynchronously { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method executes asynchronously.\n  overload: System.Activities.Statements.InvokeMethod.RunAsynchronously*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.TargetObject\n  id: TargetObject\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: TargetObject\n  nameWithType: InvokeMethod.TargetObject\n  fullName: System.Activities.Statements.InvokeMethod.TargetObject\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The object that contains the method to execute.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the TargetObject property of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_InvokeMethod#3](~/add/codesnippet/csharp/invokemethodusage/program.cs#3)]\"\n  syntax:\n    content: public System.Activities.InArgument TargetObject { get; set; }\n    return:\n      type: System.Activities.InArgument\n      description: The object.\n  overload: System.Activities.Statements.InvokeMethod.TargetObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.InvokeMethod.TargetType\n  id: TargetType\n  parent: System.Activities.Statements.InvokeMethod\n  langs:\n  - csharp\n  name: TargetType\n  nameWithType: InvokeMethod.TargetType\n  fullName: System.Activities.Statements.InvokeMethod.TargetType\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The type of the <xref:System.Activities.Statements.InvokeMethod.TargetObject*>.\n  remarks: This parameter must only be set if the invoked method is static.\n  example:\n  - \"The following code sample demonstrates setting the TargetType property of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_InvokeMethod#4](~/add/codesnippet/csharp/invokemethodusage/program.cs#4)]\"\n  syntax:\n    content: public Type TargetType { get; set; }\n    return:\n      type: System.Type\n      description: The target object type.\n  overload: System.Activities.Statements.InvokeMethod.TargetType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.AsyncCodeActivity\n  isExternal: false\n  name: System.Activities.AsyncCodeActivity\n- uid: System.Activities.Statements.InvokeMethod.#ctor\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: InvokeMethod()\n  nameWithType: InvokeMethod.InvokeMethod()\n  fullName: System.Activities.Statements.InvokeMethod.InvokeMethod()\n- uid: System.Activities.Statements.InvokeMethod.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  nameWithType: InvokeMethod.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n  fullName: System.Activities.Statements.InvokeMethod.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Activities.AsyncCodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: AsyncCodeActivityContext\n  nameWithType: AsyncCodeActivityContext\n  fullName: System.Activities.AsyncCodeActivityContext\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Statements.InvokeMethod.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: InvokeMethod.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Statements.InvokeMethod.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Statements.InvokeMethod.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  nameWithType: InvokeMethod.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n  fullName: System.Activities.Statements.InvokeMethod.EndExecute(AsyncCodeActivityContext,IAsyncResult)\n- uid: System.Activities.Statements.InvokeMethod.GenericTypeArguments\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: GenericTypeArguments\n  nameWithType: InvokeMethod.GenericTypeArguments\n  fullName: System.Activities.Statements.InvokeMethod.GenericTypeArguments\n- uid: System.Collections.ObjectModel.Collection{System.Type}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Type>\n  nameWithType: Collection<Type>\n  fullName: System.Collections.ObjectModel.Collection<System.Type>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.InvokeMethod.MethodName\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: MethodName\n  nameWithType: InvokeMethod.MethodName\n  fullName: System.Activities.Statements.InvokeMethod.MethodName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Statements.InvokeMethod.Parameters\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: Parameters\n  nameWithType: InvokeMethod.Parameters\n  fullName: System.Activities.Statements.InvokeMethod.Parameters\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Argument}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Argument>\n  nameWithType: Collection<Argument>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Argument>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Argument>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Argument\n    name: Argument\n    nameWithType: Argument\n    fullName: Argument\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.InvokeMethod.Result\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: Result\n  nameWithType: InvokeMethod.Result\n  fullName: System.Activities.Statements.InvokeMethod.Result\n- uid: System.Activities.OutArgument\n  parent: System.Activities\n  isExternal: false\n  name: OutArgument\n  nameWithType: OutArgument\n  fullName: System.Activities.OutArgument\n- uid: System.Activities.Statements.InvokeMethod.RunAsynchronously\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: RunAsynchronously\n  nameWithType: InvokeMethod.RunAsynchronously\n  fullName: System.Activities.Statements.InvokeMethod.RunAsynchronously\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Statements.InvokeMethod.TargetObject\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: TargetObject\n  nameWithType: InvokeMethod.TargetObject\n  fullName: System.Activities.Statements.InvokeMethod.TargetObject\n- uid: System.Activities.InArgument\n  parent: System.Activities\n  isExternal: false\n  name: InArgument\n  nameWithType: InArgument\n  fullName: System.Activities.InArgument\n- uid: System.Activities.Statements.InvokeMethod.TargetType\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: TargetType\n  nameWithType: InvokeMethod.TargetType\n  fullName: System.Activities.Statements.InvokeMethod.TargetType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Statements.InvokeMethod.#ctor*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: InvokeMethod\n  nameWithType: InvokeMethod.InvokeMethod\n- uid: System.Activities.Statements.InvokeMethod.BeginExecute*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: BeginExecute\n  nameWithType: InvokeMethod.BeginExecute\n- uid: System.Activities.Statements.InvokeMethod.CacheMetadata*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: InvokeMethod.CacheMetadata\n- uid: System.Activities.Statements.InvokeMethod.EndExecute*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: EndExecute\n  nameWithType: InvokeMethod.EndExecute\n- uid: System.Activities.Statements.InvokeMethod.GenericTypeArguments*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: GenericTypeArguments\n  nameWithType: InvokeMethod.GenericTypeArguments\n- uid: System.Activities.Statements.InvokeMethod.MethodName*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: MethodName\n  nameWithType: InvokeMethod.MethodName\n- uid: System.Activities.Statements.InvokeMethod.Parameters*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: Parameters\n  nameWithType: InvokeMethod.Parameters\n- uid: System.Activities.Statements.InvokeMethod.Result*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: Result\n  nameWithType: InvokeMethod.Result\n- uid: System.Activities.Statements.InvokeMethod.RunAsynchronously*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: RunAsynchronously\n  nameWithType: InvokeMethod.RunAsynchronously\n- uid: System.Activities.Statements.InvokeMethod.TargetObject*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: TargetObject\n  nameWithType: InvokeMethod.TargetObject\n- uid: System.Activities.Statements.InvokeMethod.TargetType*\n  parent: System.Activities.Statements.InvokeMethod\n  isExternal: false\n  name: TargetType\n  nameWithType: InvokeMethod.TargetType\n"}