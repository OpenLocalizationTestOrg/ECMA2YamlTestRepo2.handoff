{"nodes":[{"pos":[994,1355],"content":"Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]-[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] interoperation scenarios.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs.","pos":[0,134]},{"content":"This interface implements keyboard message management in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph><ph id=\"ph2\">-</ph><ph id=\"ph3\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> interoperation scenarios.","pos":[135,361],"source":" This interface implements keyboard message management in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]-[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] interoperation scenarios."}]},{"pos":[1368,2591],"content":"A keyboard sink handles input from particular subsets of the overall keyboard input model for [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)], and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.       If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus.       For a discussion of the input architecture specifically implemented for [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] interop, see [Windows Forms and WPF Interoperability Input Architecture](~/add/includes/ajax-current-ext-md.md).       <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the IKeyboardInputSink interface, through explicit interface definitions. The explicit definitions supply default behaviors, and can also be accessed if necessary through an IKeyboardInputSink interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>.","needQuote":false,"needEscape":true,"nodes":[{"content":"A keyboard sink handles input from particular subsets of the overall keyboard input model for <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>, and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.","pos":[0,351],"source":"A keyboard sink handles input from particular subsets of the overall keyboard input model for [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)], and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus."},{"content":"If your component contains other components, and maintains a tab order, your component must also implement &lt;xref:System.Windows.Interop.IKeyboardInputSite&gt; and keep track of which component has focus.","pos":[358,558],"source":"       If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus."},{"content":"For a discussion of the input architecture specifically implemented for <ph id=\"ph1\">[!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)]</ph> interop, see <bpt id=\"p1\">[</bpt>Windows Forms and WPF Interoperability Input Architecture<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[565,817],"source":"       For a discussion of the input architecture specifically implemented for [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] interop, see [Windows Forms and WPF Interoperability Input Architecture](~/add/includes/ajax-current-ext-md.md)."},{"content":"&lt;xref:System.Windows.Interop.HwndSource&gt; and &lt;xref:System.Windows.Interop.HwndHost&gt; each implement the IKeyboardInputSink interface, through explicit interface definitions.","pos":[824,996],"source":"       <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the IKeyboardInputSink interface, through explicit interface definitions."},{"content":"The explicit definitions supply default behaviors, and can also be accessed if necessary through an IKeyboardInputSink interface cast of &lt;xref:System.Windows.Interop.HwndSource&gt; or &lt;xref:System.Windows.Interop.HwndHost&gt;.","pos":[997,1217],"source":" The explicit definitions supply default behaviors, and can also be accessed if necessary through an IKeyboardInputSink interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>."}]},{"pos":[3089,3179],"content":"Gets a value that indicates whether the sink or one of its contained components has focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the sink or one of its contained components has focus.","pos":[0,90]}]},{"pos":[3191,3613],"content":"This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation. Call HasFocusWithin recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation. Call HasFocusWithin recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.","pos":[0,422],"nodes":[{"content":"This method is necessary for forwarding &lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt; calls to child components with focus from within the &lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt; implementation.","pos":[0,254],"source":"This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation."},{"content":"Call HasFocusWithin recursively until you reach the level of specific focus and forward &lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt; there.","pos":[255,422],"source":" Call HasFocusWithin recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there."}]}]},{"pos":[3745,3938],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the sink or one of its contained components has focus; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the sink or one of its contained components has focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4457,4586],"content":"Gets or sets a reference to the component's container's <bpt id=\"p1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSite\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Gets or sets a reference to the component's container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface."},{"pos":[4598,4872],"content":"This property should initially be set to `null`. Any container that adds the sink to its components list will set KeyboardInputSite before any other methods are called, and it can be set multiple times after that. You should set the property to `null` again before disposal.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property should initially be set to <ph id=\"ph1\">`null`</ph>.","pos":[0,48],"source":"This property should initially be set to `null`."},{"content":"Any container that adds the sink to its components list will set KeyboardInputSite before any other methods are called, and it can be set multiple times after that.","pos":[49,213]},{"content":"You should set the property to <ph id=\"ph1\">`null`</ph> again before disposal.","pos":[214,274],"source":" You should set the property to `null` again before disposal."}]},{"pos":[5062,5166],"content":"A reference to the container's <bpt id=\"p1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSite\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"A reference to the container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface."},{"pos":[5831,5903],"content":"Called when one of the mnemonics (access keys) for this sink is invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when one of the mnemonics (access keys) for this sink is invoked.","pos":[0,72]}]},{"pos":[5916,6521],"content":"The [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.       If the component has contained components, the message must be passed in your implementation by calling each contained component's OnMnemonic method.       An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call OnMnemonic. Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass OnMnemonic.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]</ph> message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.","pos":[0,134],"source":"The [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR."},{"content":"If the component has contained components, the message must be passed in your implementation by calling each contained component's OnMnemonic method.","pos":[141,290]},{"content":"An interface that returns <ph id=\"ph1\">`true`</ph> from &lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt; will not call OnMnemonic.","pos":[297,433],"source":"       An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call OnMnemonic."},{"content":"Implementations can choose to perform all specific key combination handling in &lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A&gt;.and bypass OnMnemonic.","pos":[434,601],"source":" Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass OnMnemonic."}]},{"pos":[6740,6883],"content":"The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.","pos":[0,143],"nodes":[{"content":"The message for the mnemonic and associated data.","pos":[0,49]},{"content":"Do not modify this message structure.","pos":[50,87]},{"content":"It is passed by reference for performance reasons only.","pos":[88,143]}]}]},{"pos":[6969,6983],"content":"Modifier keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"Modifier keys.","pos":[0,14]}]},{"pos":[7042,7205],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the message was handled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was handled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7904,8016],"content":"Registers the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSink\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface of a contained component.","needQuote":true,"needEscape":true,"source":"Registers the <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> interface of a contained component."},{"pos":[8028,8264],"content":"Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site. You only need to maintain the site collection, because the sink can be obtained from the site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site. You only need to maintain the site collection, because the sink can be obtained from the site.","pos":[0,236],"nodes":[{"content":"Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site.","pos":[0,141]},{"content":"You only need to maintain the site collection, because the sink can be obtained from the site.","pos":[142,236]}]}]},{"pos":[8517,8616],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSink\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> sink of the contained component.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> sink of the contained component."},{"pos":[8702,8801],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSite\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> site of the contained component.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> site of the contained component."},{"pos":[9411,9484],"content":"Sets focus on either the first tab stop or the last tab stop of the sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets focus on either the first tab stop or the last tab stop of the sink.","pos":[0,73]}]},{"pos":[9496,9724],"content":"<xref:System.Windows.Input.FocusNavigationDirection> and <xref:System.Windows.Input.FocusNavigationDirection> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Input.FocusNavigationDirection&gt; and &lt;xref:System.Windows.Input.FocusNavigationDirection&gt; are the only relevant values that should be passed to this method in the &lt;xref:System.Windows.Input.TraversalRequest&gt;.","pos":[0,228],"source":"<xref:System.Windows.Input.FocusNavigationDirection> and <xref:System.Windows.Input.FocusNavigationDirection> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>."}]},{"pos":[9920,9992],"content":"Specifies whether focus should be set to the first or the last tab stop.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether focus should be set to the first or the last tab stop.","pos":[0,72]}]},{"pos":[10051,10242],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the focus has been set as requested; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if there are no tab stops.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the focus has been set as requested; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, if there are no tab stops."},{"pos":[10947,11001],"content":"Processes keyboard input at the keydown message level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes keyboard input at the keydown message level.","pos":[0,54]}]},{"pos":[11014,11972],"content":"The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.       If the component is unable to handle the input translations and has child components that might have translations, it typically calls TranslateAccelerator method on the child component that holds the current focus before returning a result.       If the message cannot be handled immediately, you can re-dispatch it from within the TranslateAccelerator implementation if necessary, and then return `false`.       A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds. Certain components may choose to not handle the tab key in this fashion.","needQuote":false,"needEscape":true,"nodes":[{"content":"The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.","pos":[0,55]},{"content":"If the component is unable to handle the input translations and has child components that might have translations, it typically calls TranslateAccelerator method on the child component that holds the current focus before returning a result.","pos":[62,302]},{"content":"If the message cannot be handled immediately, you can re-dispatch it from within the TranslateAccelerator implementation if necessary, and then return <ph id=\"ph1\">`false`</ph>.","pos":[309,468],"source":"       If the message cannot be handled immediately, you can re-dispatch it from within the TranslateAccelerator implementation if necessary, and then return `false`."},{"content":"A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call &lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt; to a child component, or to call &lt;xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt; on the parent site because the tab sequence has reached the beginning or end bounds.","pos":[475,879],"source":"       A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds."},{"content":"Certain components may choose to not handle the tab key in this fashion.","pos":[880,952]}]},{"pos":[12201,12319],"content":"The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.","pos":[0,118],"nodes":[{"content":"The message and associated data.","pos":[0,32]},{"content":"Do not modify this structure.","pos":[33,62]},{"content":"It is passed by reference for performance reasons only.","pos":[63,118]}]}]},{"pos":[12405,12419],"content":"Modifier keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"Modifier keys.","pos":[0,14]}]},{"pos":[12478,12670],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the message was handled by the method implementation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was handled by the method implementation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13353,13509],"content":"Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*> is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before &lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*&gt; is called.","pos":[0,156],"source":"Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*> is called."}]},{"pos":[13521,13689],"content":"If you implement this method to return <ph id=\"ph1\">`true`</ph>, the input architecture will not call &lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt; for that key message.","needQuote":true,"needEscape":true,"source":"If you implement this method to return `true`, the input architecture will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> for that key message."},{"pos":[13910,14028],"content":"The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.","pos":[0,118],"nodes":[{"content":"The message and associated data.","pos":[0,32]},{"content":"Do not modify this structure.","pos":[33,62]},{"content":"It is passed by reference for performance reasons only.","pos":[63,118]}]}]},{"pos":[14114,14128],"content":"Modifier keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"Modifier keys.","pos":[0,14]}]},{"pos":[14187,14438],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the message was processed and &lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*&gt; should not be called; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was processed and <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*> should not be called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Interop.IKeyboardInputSink\n  id: IKeyboardInputSink\n  children:\n  - System.Windows.Interop.IKeyboardInputSink.HasFocusWithin\n  - System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  - System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  - System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  - System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)\n  - System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  - System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  langs:\n  - csharp\n  name: IKeyboardInputSink\n  nameWithType: IKeyboardInputSink\n  fullName: System.Windows.Interop.IKeyboardInputSink\n  type: Interface\n  summary: Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]-[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] interoperation scenarios.\n  remarks: \"A keyboard sink handles input from particular subsets of the overall keyboard input model for [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)], and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.  \\n  \\n If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus.  \\n  \\n For a discussion of the input architecture specifically implemented for [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] interop, see [Windows Forms and WPF Interoperability Input Architecture](~/add/includes/ajax-current-ext-md.md).  \\n  \\n <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the IKeyboardInputSink interface, through explicit interface definitions. The explicit definitions supply default behaviors, and can also be accessed if necessary through an IKeyboardInputSink interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>.\"\n  syntax:\n    content: public interface IKeyboardInputSink\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin\n  id: HasFocusWithin\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: HasFocusWithin()\n  nameWithType: IKeyboardInputSink.HasFocusWithin()\n  fullName: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Gets a value that indicates whether the sink or one of its contained components has focus.\n  remarks: This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation. Call HasFocusWithin recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.\n  syntax:\n    content: public bool HasFocusWithin ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the sink or one of its contained components has focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  id: KeyboardInputSite\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: KeyboardInputSite\n  nameWithType: IKeyboardInputSink.KeyboardInputSite\n  fullName: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Gets or sets a reference to the component's container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface.\n  remarks: This property should initially be set to `null`. Any container that adds the sink to its components list will set KeyboardInputSite before any other methods are called, and it can be set multiple times after that. You should set the property to `null` again before disposal.\n  syntax:\n    content: public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }\n    return:\n      type: System.Windows.Interop.IKeyboardInputSite\n      description: A reference to the container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface.\n  overload: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: OnMnemonic(MSG,ModifierKeys)\n  nameWithType: IKeyboardInputSink.OnMnemonic(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.IKeyboardInputSink.OnMnemonic(MSG,ModifierKeys)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Called when one of the mnemonics (access keys) for this sink is invoked.\n  remarks: \"The [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.  \\n  \\n If the component has contained components, the message must be passed in your implementation by calling each contained component's OnMnemonic method.  \\n  \\n An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call OnMnemonic. Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass OnMnemonic.\"\n  syntax:\n    content: public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was handled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.IKeyboardInputSink.OnMnemonic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  id: RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: RegisterKeyboardInputSink(IKeyboardInputSink)\n  nameWithType: IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  fullName: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Registers the <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> interface of a contained component.\n  remarks: Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site. You only need to maintain the site collection, because the sink can be obtained from the site.\n  syntax:\n    content: public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);\n    parameters:\n    - id: sink\n      type: System.Windows.Interop.IKeyboardInputSink\n      description: The <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> sink of the contained component.\n    return:\n      type: System.Windows.Interop.IKeyboardInputSite\n      description: The <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> site of the contained component.\n  overload: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)\n  id: TabInto(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: TabInto(TraversalRequest)\n  nameWithType: IKeyboardInputSink.TabInto(TraversalRequest)\n  fullName: System.Windows.Interop.IKeyboardInputSink.TabInto(TraversalRequest)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Sets focus on either the first tab stop or the last tab stop of the sink.\n  remarks: <xref:System.Windows.Input.FocusNavigationDirection> and <xref:System.Windows.Input.FocusNavigationDirection> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>.\n  syntax:\n    content: public bool TabInto (System.Windows.Input.TraversalRequest request);\n    parameters:\n    - id: request\n      type: System.Windows.Input.TraversalRequest\n      description: Specifies whether focus should be set to the first or the last tab stop.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the focus has been set as requested; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, if there are no tab stops.\n  overload: System.Windows.Interop.IKeyboardInputSink.TabInto*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: TranslateAccelerator(MSG,ModifierKeys)\n  nameWithType: IKeyboardInputSink.TranslateAccelerator(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(MSG,ModifierKeys)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Processes keyboard input at the keydown message level.\n  remarks: \"The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.  \\n  \\n If the component is unable to handle the input translations and has child components that might have translations, it typically calls TranslateAccelerator method on the child component that holds the current focus before returning a result.  \\n  \\n If the message cannot be handled immediately, you can re-dispatch it from within the TranslateAccelerator implementation if necessary, and then return `false`.  \\n  \\n A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds. Certain components may choose to not handle the tab key in this fashion.\"\n  syntax:\n    content: public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was handled by the method implementation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: TranslateChar(MSG,ModifierKeys)\n  nameWithType: IKeyboardInputSink.TranslateChar(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.IKeyboardInputSink.TranslateChar(MSG,ModifierKeys)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*> is called.\n  remarks: If you implement this method to return `true`, the input architecture will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> for that key message.\n  syntax:\n    content: public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was processed and <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic*> should not be called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Interop.IKeyboardInputSink.TranslateChar*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: HasFocusWithin()\n  nameWithType: IKeyboardInputSink.HasFocusWithin()\n  fullName: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: KeyboardInputSite\n  nameWithType: IKeyboardInputSink.KeyboardInputSite\n  fullName: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n- uid: System.Windows.Interop.IKeyboardInputSite\n  parent: System.Windows.Interop\n  isExternal: false\n  name: IKeyboardInputSite\n  nameWithType: IKeyboardInputSite\n  fullName: System.Windows.Interop.IKeyboardInputSite\n- uid: System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: OnMnemonic(MSG,ModifierKeys)\n  nameWithType: IKeyboardInputSink.OnMnemonic(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.IKeyboardInputSink.OnMnemonic(MSG,ModifierKeys)\n- uid: System.Windows.Interop.MSG\n  parent: System.Windows.Interop\n  isExternal: false\n  name: MSG\n  nameWithType: MSG\n  fullName: System.Windows.Interop.MSG\n- uid: System.Windows.Input.ModifierKeys\n  parent: System.Windows.Input\n  isExternal: false\n  name: ModifierKeys\n  nameWithType: ModifierKeys\n  fullName: System.Windows.Input.ModifierKeys\n- uid: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: RegisterKeyboardInputSink(IKeyboardInputSink)\n  nameWithType: IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  fullName: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n- uid: System.Windows.Interop.IKeyboardInputSink\n  parent: System.Windows.Interop\n  isExternal: false\n  name: IKeyboardInputSink\n  nameWithType: IKeyboardInputSink\n  fullName: System.Windows.Interop.IKeyboardInputSink\n- uid: System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TabInto(TraversalRequest)\n  nameWithType: IKeyboardInputSink.TabInto(TraversalRequest)\n  fullName: System.Windows.Interop.IKeyboardInputSink.TabInto(TraversalRequest)\n- uid: System.Windows.Input.TraversalRequest\n  parent: System.Windows.Input\n  isExternal: false\n  name: TraversalRequest\n  nameWithType: TraversalRequest\n  fullName: System.Windows.Input.TraversalRequest\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TranslateAccelerator(MSG,ModifierKeys)\n  nameWithType: IKeyboardInputSink.TranslateAccelerator(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(MSG,ModifierKeys)\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TranslateChar(MSG,ModifierKeys)\n  nameWithType: IKeyboardInputSink.TranslateChar(MSG,ModifierKeys)\n  fullName: System.Windows.Interop.IKeyboardInputSink.TranslateChar(MSG,ModifierKeys)\n- uid: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: HasFocusWithin\n  nameWithType: IKeyboardInputSink.HasFocusWithin\n- uid: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: KeyboardInputSite\n  nameWithType: IKeyboardInputSink.KeyboardInputSite\n- uid: System.Windows.Interop.IKeyboardInputSink.OnMnemonic*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: OnMnemonic\n  nameWithType: IKeyboardInputSink.OnMnemonic\n- uid: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: RegisterKeyboardInputSink\n  nameWithType: IKeyboardInputSink.RegisterKeyboardInputSink\n- uid: System.Windows.Interop.IKeyboardInputSink.TabInto*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TabInto\n  nameWithType: IKeyboardInputSink.TabInto\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TranslateAccelerator\n  nameWithType: IKeyboardInputSink.TranslateAccelerator\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateChar*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TranslateChar\n  nameWithType: IKeyboardInputSink.TranslateChar\n"}