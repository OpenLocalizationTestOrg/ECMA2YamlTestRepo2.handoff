{"nodes":[{"pos":[1704,1763],"content":"Provides local service security properties that can be set.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides local service security properties that can be set.","pos":[0,59]}]},{"pos":[1775,2022],"content":"This class contains the local security settings used by the <xref:System.ServiceModel.Channels.SecurityBindingElement> to build the security channel. These settings are local to the service and are not represented in the service's security policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class contains the local security settings used by the <xref:System.ServiceModel.Channels.SecurityBindingElement> to build the security channel. These settings are local to the service and are not represented in the service's security policy.","pos":[0,247],"nodes":[{"content":"This class contains the local security settings used by the &lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt; to build the security channel.","pos":[0,149],"source":"This class contains the local security settings used by the <xref:System.ServiceModel.Channels.SecurityBindingElement> to build the security channel."},{"content":"These settings are local to the service and are not represented in the service's security policy.","pos":[150,247]}]}]},{"pos":[3145,3264],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.LocalServiceSecuritySettings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.LocalServiceSecuritySettings\"></xref> class."},{"pos":[4233,4296],"content":"Creates a new instance of this class from the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new instance of this class from the current instance.","pos":[0,63]}]},{"pos":[4898,4995],"content":"A new instance of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.LocalServiceSecuritySettings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new instance of <xref href=\"System.ServiceModel.Channels.LocalServiceSecuritySettings\"></xref>."},{"pos":[5573,5660],"content":"Gets or sets a value that indicates whether replay detection is enabled on the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether replay detection is enabled on the service.","pos":[0,87]}]},{"pos":[6127,6386],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if replay detection is enabled on the service; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if replay detection is enabled on the service; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,182],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if replay detection is enabled on the service; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[183,259],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[6992,7073],"content":"Gets or sets the duration to wait before the channel is closed due to inactivity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the duration to wait before the channel is closed due to inactivity.","pos":[0,81]}]},{"pos":[9029,9189],"content":"A <xref:System.TimeSpan> that represents the duration to wait before the security session with the client is closed due to inactivity. The default is 2 minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that represents the duration to wait before the security session with the client is closed due to inactivity. The default is 2 minutes.","pos":[0,160],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that represents the duration to wait before the security session with the client is closed due to inactivity.","pos":[0,134],"source":"A <xref:System.TimeSpan> that represents the duration to wait before the security session with the client is closed due to inactivity."},{"content":"The default is 2 minutes.","pos":[135,160]}]}]},{"pos":[9407,9450],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]},{"pos":[9969,10128],"content":"Gets or sets the lifetime for the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that the service issues for the client.","needQuote":true,"needEscape":true,"source":"Gets or sets the lifetime for the <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref> that the service issues for the client."},{"pos":[10140,10279],"content":"When the service issues secure conversation cookie tokens to the client, their validity period is determined by the value of this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the service issues secure conversation cookie tokens to the client, their validity period is determined by the value of this property.","pos":[0,139]}]},{"pos":[10753,10857],"content":"A <xref:System.TimeSpan> that represents the lifetime for new security cookies. The default is 10 hours.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that represents the lifetime for new security cookies. The default is 10 hours.","pos":[0,104],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that represents the lifetime for new security cookies.","pos":[0,79],"source":"A <xref:System.TimeSpan> that represents the lifetime for new security cookies."},{"content":"The default is 10 hours.","pos":[80,104]}]}]},{"pos":[11078,11121],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]},{"pos":[11620,11783],"content":"Gets or sets the maximum number of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>s that the service allows to cache at once.","needQuote":true,"needEscape":true,"source":"Gets or sets the maximum number of <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>s that the service allows to cache at once."},{"pos":[12255,12503],"content":"The maximum number of secure conversation cookies that can be cached by the service. When this limit is reached the service removes the oldest cached secure conversation cookies to make room for new secure conversation cookies. The default is 1000.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of secure conversation cookies that can be cached by the service. When this limit is reached the service removes the oldest cached secure conversation cookies to make room for new secure conversation cookies. The default is 1000.","pos":[0,248],"nodes":[{"content":"The maximum number of secure conversation cookies that can be cached by the service.","pos":[0,84]},{"content":"When this limit is reached the service removes the oldest cached secure conversation cookies to make room for new secure conversation cookies.","pos":[85,227]},{"content":"The default is 1000.","pos":[228,248]}]}]},{"pos":[12720,12763],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]},{"pos":[13242,13361],"content":"Gets or sets the maximum allowable time difference between the system clocks of the two parties that are communicating.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum allowable time difference between the system clocks of the two parties that are communicating.","pos":[0,119]}]},{"pos":[13374,13673],"content":"The default value for this property is 5 minutes.       Messages that do not pass the send-time test are rejected.       This property is used in conjunction with the message timestamp verification and the <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default value for this property is 5 minutes.       Messages that do not pass the send-time test are rejected.       This property is used in conjunction with the message timestamp verification and the <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow%2A> property.","pos":[0,295],"nodes":[{"content":"The default value for this property is 5 minutes.","pos":[0,49]},{"content":"Messages that do not pass the send-time test are rejected.","pos":[56,114]},{"content":"This property is used in conjunction with the message timestamp verification and the &lt;xref:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow%2A&gt; property.","pos":[121,295],"source":"       This property is used in conjunction with the message timestamp verification and the <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow%2A> property."}]}]},{"pos":[14132,14305],"content":"A <xref:System.TimeSpan> that represents the maximum allowable time difference between the system clocks of the two parties that are communicating. The default is 5 minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that represents the maximum allowable time difference between the system clocks of the two parties that are communicating. The default is 5 minutes.","pos":[0,173],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that represents the maximum allowable time difference between the system clocks of the two parties that are communicating.","pos":[0,147],"source":"A <xref:System.TimeSpan> that represents the maximum allowable time difference between the system clocks of the two parties that are communicating."},{"content":"The default is 5 minutes.","pos":[148,173]}]}]},{"pos":[14518,14561],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]},{"pos":[15070,15258],"content":"Gets or sets the maximum number of concurrent security sessions that are established with the server for which it has issued a session token but for which no application messages are sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of concurrent security sessions that are established with the server for which it has issued a session token but for which no application messages are sent.","pos":[0,188]}]},{"pos":[15734,15805],"content":"The maximum number of concurrent security sessions. The default is 128.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of concurrent security sessions. The default is 128.","pos":[0,71],"nodes":[{"content":"The maximum number of concurrent security sessions.","pos":[0,51]},{"content":"The default is 128.","pos":[52,71]}]}]},{"pos":[16024,16067],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]},{"pos":[16601,16718],"content":"Gets or sets the maximum number of concurrent security negotiations with clients that the service can participate in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of concurrent security negotiations with clients that the service can participate in.","pos":[0,117]}]},{"pos":[16730,16948],"content":"Negotiation sessions in excess of this limit are rejected and a SOAP fault is sent back to the client. The client typically must retry later, which allows some time for existing negotiations on the service to complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Negotiation sessions in excess of this limit are rejected and a SOAP fault is sent back to the client. The client typically must retry later, which allows some time for existing negotiations on the service to complete.","pos":[0,218],"nodes":[{"content":"Negotiation sessions in excess of this limit are rejected and a SOAP fault is sent back to the client.","pos":[0,102]},{"content":"The client typically must retry later, which allows some time for existing negotiations on the service to complete.","pos":[103,218]}]}]},{"pos":[17417,17541],"content":"The maximum number of concurrent security negotiations with clients that the service can participate in. The default is 128.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of concurrent security negotiations with clients that the service can participate in. The default is 128.","pos":[0,124],"nodes":[{"content":"The maximum number of concurrent security negotiations with clients that the service can participate in.","pos":[0,104]},{"content":"The default is 128.","pos":[105,124]}]}]},{"pos":[17765,17808],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]},{"pos":[18317,18412],"content":"Gets or sets the maximum duration of the security negotiation phase between client and service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum duration of the security negotiation phase between client and service.","pos":[0,95]}]},{"pos":[18424,18474],"content":"If this limit is exceeded, an exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"If this limit is exceeded, an exception is thrown.","pos":[0,50]}]},{"pos":[18940,19217],"content":"A <xref:System.TimeSpan> that represents the maximum duration of the security negotiation phase between client and service. Any negotiation with the service (for example during message level SPNego or SSL authentication) must complete within this time. The default is 1 minute.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that represents the maximum duration of the security negotiation phase between client and service. Any negotiation with the service (for example during message level SPNego or SSL authentication) must complete within this time. The default is 1 minute.","pos":[0,277],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that represents the maximum duration of the security negotiation phase between client and service.","pos":[0,123],"source":"A <xref:System.TimeSpan> that represents the maximum duration of the security negotiation phase between client and service."},{"content":"Any negotiation with the service (for example during message level SPNego or SSL authentication) must complete within this time.","pos":[124,252]},{"content":"The default is 1 minute.","pos":[253,277]}]}]},{"pos":[19436,19479],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]},{"pos":[19948,20011],"content":"Gets or sets the cache for the local service security settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the cache for the local service security settings.","pos":[0,63]}]},{"pos":[20190,20240],"content":"The cache for the local service security settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cache for the local service security settings.","pos":[0,50]}]},{"pos":[20893,21001],"content":"Gets or sets a value that indicates whether security sessions attempt to reconnect after transport failures.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether security sessions attempt to reconnect after transport failures.","pos":[0,108]}]},{"pos":[21013,21312],"content":"If this flag is set to `true`, the service allows the client to send messages that correspond to a single security session over multiple transport connections. This is useful in the case of secure WS-ReliableMessaging because the client requires the session to tolerate transient transport failures.","needQuote":true,"needEscape":true,"nodes":[{"content":"If this flag is set to <ph id=\"ph1\">`true`</ph>, the service allows the client to send messages that correspond to a single security session over multiple transport connections.","pos":[0,159],"source":"If this flag is set to `true`, the service allows the client to send messages that correspond to a single security session over multiple transport connections."},{"content":"This is useful in the case of secure WS-ReliableMessaging because the client requires the session to tolerate transient transport failures.","pos":[160,299]}]},{"pos":[21786,22065],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if security sessions attempt to reconnect after transport failures; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if security sessions attempt to reconnect after transport failures; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,202],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if security sessions attempt to reconnect after transport failures; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[203,279],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[22675,22742],"content":"Gets or sets the size of the nonce cache used for replay detection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the size of the nonce cache used for replay detection.","pos":[0,67]}]},{"pos":[22755,22983],"content":"A nonce is a \"number used once\".       If the nonce count is exceeded, the incoming message is rejected and a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown. Old nonces are removed in a timely manner.","needQuote":false,"needEscape":true,"nodes":[{"content":"A nonce is a \"number used once\".       If the nonce count is exceeded, the incoming message is rejected and a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown. Old nonces are removed in a timely manner.","pos":[0,224],"nodes":[{"content":"A nonce is a \"number used once\".","pos":[0,32]},{"content":"If the nonce count is exceeded, the incoming message is rejected and a &lt;xref:System.ServiceModel.Security.MessageSecurityException&gt; is thrown.","pos":[39,181],"source":"       If the nonce count is exceeded, the incoming message is rejected and a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown."},{"content":"Old nonces are removed in a timely manner.","pos":[182,224]}]}]},{"pos":[23443,23521],"content":"The size of the nonce cache used for replay detection. The default is 900,000.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the nonce cache used for replay detection. The default is 900,000.","pos":[0,78],"nodes":[{"content":"The size of the nonce cache used for replay detection.","pos":[0,54]},{"content":"The default is 900,000.","pos":[55,78]}]}]},{"pos":[24104,24190],"content":"Gets or sets the maximum amount of time within which the service can accept a message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum amount of time within which the service can accept a message.","pos":[0,86]}]},{"pos":[24203,24429],"content":"A nonce is a \"number used once\".       The service rejects all messages that are sent more than the ReplayWindow duration in the past. Messages that arrive within the `ReplayWindow` have their nonce checked for uniqueness.","needQuote":false,"needEscape":true,"nodes":[{"content":"A nonce is a \"number used once\".","pos":[0,32]},{"content":"The service rejects all messages that are sent more than the ReplayWindow duration in the past.","pos":[39,134]},{"content":"Messages that arrive within the <ph id=\"ph1\">`ReplayWindow`</ph> have their nonce checked for uniqueness.","pos":[135,222],"source":" Messages that arrive within the `ReplayWindow` have their nonce checked for uniqueness."}]},{"pos":[24894,25034],"content":"A <xref:System.TimeSpan> that represents the maximum amount of time within which the service can accept a message. The default is 5 minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.TimeSpan> that represents the maximum amount of time within which the service can accept a message. The default is 5 minutes.","pos":[0,140],"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that represents the maximum amount of time within which the service can accept a message.","pos":[0,114],"source":"A <xref:System.TimeSpan> that represents the maximum amount of time within which the service can accept a message."},{"content":"The default is 5 minutes.","pos":[115,140]}]}]},{"pos":[25247,25290],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]},{"pos":[25834,25957],"content":"Gets or sets the lifetime of a key used in a security session. When this interval expires the key is automatically renewed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the lifetime of a key used in a security session. When this interval expires the key is automatically renewed.","pos":[0,123],"nodes":[{"content":"Gets or sets the lifetime of a key used in a security session.","pos":[0,62]},{"content":"When this interval expires the key is automatically renewed.","pos":[63,123]}]}]},{"pos":[27723,27964],"content":"The time span after which the service requires that the initiator renew the key used for the security session. If the initiator does not renew the key within this time the service sends back a fault to the initiator. The default is 15 hours.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time span after which the service requires that the initiator renew the key used for the security session. If the initiator does not renew the key within this time the service sends back a fault to the initiator. The default is 15 hours.","pos":[0,241],"nodes":[{"content":"The time span after which the service requires that the initiator renew the key used for the security session.","pos":[0,110]},{"content":"If the initiator does not renew the key within this time the service sends back a fault to the initiator.","pos":[111,216]},{"content":"The default is 15 hours.","pos":[217,241]}]}]},{"pos":[28190,28233],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]},{"pos":[28782,28917],"content":"Gets or sets the time interval after key renewal for which the previous session key is valid on incoming messages during a key renewal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the time interval after key renewal for which the previous session key is valid on incoming messages during a key renewal.","pos":[0,135]}]},{"pos":[30924,31071],"content":"The time interval after key renewal for which the previous session key is valid on incoming messages after a key renewal. The default is 5 minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time interval after key renewal for which the previous session key is valid on incoming messages after a key renewal. The default is 5 minutes.","pos":[0,147],"nodes":[{"content":"The time interval after key renewal for which the previous session key is valid on incoming messages after a key renewal.","pos":[0,121]},{"content":"The default is 5 minutes.","pos":[122,147]}]}]},{"pos":[31298,31341],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]},{"pos":[31885,32067],"content":"Gets or sets the maximum duration of time that messages are valid when sent by the service. If the client receives the service's message after this duration, it discards the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum duration of time that messages are valid when sent by the service. If the client receives the service's message after this duration, it discards the message.","pos":[0,182],"nodes":[{"content":"Gets or sets the maximum duration of time that messages are valid when sent by the service.","pos":[0,91]},{"content":"If the client receives the service's message after this duration, it discards the message.","pos":[92,182]}]}]},{"pos":[32569,32673],"content":"The maximum duration of time that messages are valid when sent by the service. The default is 5 minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum duration of time that messages are valid when sent by the service. The default is 5 minutes.","pos":[0,104],"nodes":[{"content":"The maximum duration of time that messages are valid when sent by the service.","pos":[0,78]},{"content":"The default is 5 minutes.","pos":[79,104]}]}]},{"pos":[32899,32942],"content":"The property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to a value less than 0.","pos":[0,43]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  id: LocalServiceSecuritySettings\n  children:\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval\n  - System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration\n  langs:\n  - csharp\n  name: LocalServiceSecuritySettings\n  nameWithType: LocalServiceSecuritySettings\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  type: Class\n  summary: Provides local service security properties that can be set.\n  remarks: This class contains the local security settings used by the <xref:System.ServiceModel.Channels.SecurityBindingElement> to build the security channel. These settings are local to the service and are not represented in the service's security policy.\n  example:\n  - \"This example shows how to use the LocalServiceSecuritySettings class to change the <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> setting.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#17](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#17)]\\n [!code-cs[S_UELocalServiceSecuritySettings#17](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#17)]\"\n  syntax:\n    content: public sealed class LocalServiceSecuritySettings\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: LocalServiceSecuritySettings()\n  nameWithType: LocalServiceSecuritySettings.LocalServiceSecuritySettings()\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.LocalServiceSecuritySettings()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.LocalServiceSecuritySettings\"></xref> class.\n  remarks: ''\n  example:\n  - \"This example shows how to use the default constructor.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#1](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#1)]\\n [!code-cs[S_UELocalServiceSecuritySettings#1](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#1)]\"\n  syntax:\n    content: public LocalServiceSecuritySettings ();\n    parameters: []\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone\n  id: Clone\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: LocalServiceSecuritySettings.Clone()\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates a new instance of this class from the current instance.\n  remarks: ''\n  example:\n  - \"This example shows how to create a new instance of this class from the current instance.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#16](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#16)]\\n [!code-cs[S_UELocalServiceSecuritySettings#16](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#16)]\"\n  syntax:\n    content: public System.ServiceModel.Channels.LocalServiceSecuritySettings Clone ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.LocalServiceSecuritySettings\n      description: A new instance of <xref href=\"System.ServiceModel.Channels.LocalServiceSecuritySettings\"></xref>.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays\n  id: DetectReplays\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: DetectReplays\n  nameWithType: LocalServiceSecuritySettings.DetectReplays\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets a value that indicates whether replay detection is enabled on the service.\n  remarks: ''\n  example:\n  - \"This example shows how get the value of this property.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#2](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#2)]\\n [!code-cs[S_UELocalServiceSecuritySettings#2](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#2)]\"\n  syntax:\n    content: public bool DetectReplays { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if replay detection is enabled on the service; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout\n  id: InactivityTimeout\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: InactivityTimeout\n  nameWithType: LocalServiceSecuritySettings.InactivityTimeout\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the duration to wait before the channel is closed due to inactivity.\n  remarks: \"In a secure conversation session, note that both this property and the `ReceiveTimeout` property on the binding affect session timeout. The shorter of the two determines when timeouts occur.  \\n  \\n Session settings such as this one are applicable under any of the following conditions:  \\n  \\n-   All client credential types for <xref:System.ServiceModel.WSDualHttpBinding> and <xref:System.ServiceModel.NetTcpBinding>.  \\n  \\n-   If [\\\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is enabled.  \\n  \\n-   If [\\\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.UserName%2A> = `true` or  <xref:System.ServiceModel.Description.ClientCredentials.windows%2A> = `true`.  \\n  \\n Session settings such as this one are not applicable under any of the following conditions:  \\n  \\n-   For <xref:System.ServiceModel.BasicHttpBinding>.  \\n  \\n-   For <xref:System.ServiceModel.NetNamedPipeBinding>.  \\n  \\n-   If [\\\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A> = `true` or with none of the <xref:System.ServiceModel.Description.ClientCredentials> properties set to `true`.\"\n  example:\n  - \"This example shows how get the `InactivityTimeout` value.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#3](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#3)]\\n [!code-cs[S_UELocalServiceSecuritySettings#3](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#3)]\"\n  syntax:\n    content: public TimeSpan InactivityTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that represents the duration to wait before the security session with the client is closed due to inactivity. The default is 2 minutes.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime\n  id: IssuedCookieLifetime\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: IssuedCookieLifetime\n  nameWithType: LocalServiceSecuritySettings.IssuedCookieLifetime\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the lifetime for the <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref> that the service issues for the client.\n  remarks: When the service issues secure conversation cookie tokens to the client, their validity period is determined by the value of this property.\n  example:\n  - \"This example shows how to get the `IssuedCookieLifetime` value.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#4](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#4)]\\n [!code-cs[S_UELocalServiceSecuritySettings#4](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#4)]\"\n  syntax:\n    content: public TimeSpan IssuedCookieLifetime { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that represents the lifetime for new security cookies. The default is 10 hours.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies\n  id: MaxCachedCookies\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: MaxCachedCookies\n  nameWithType: LocalServiceSecuritySettings.MaxCachedCookies\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum number of <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>s that the service allows to cache at once.\n  remarks: ''\n  example:\n  - \"This example shows how to get the `MaxCachedCookies` value.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#5](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#5)]\\n [!code-cs[S_UELocalServiceSecuritySettings#5](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#5)]\"\n  syntax:\n    content: public int MaxCachedCookies { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of secure conversation cookies that can be cached by the service. When this limit is reached the service removes the oldest cached secure conversation cookies to make room for new secure conversation cookies. The default is 1000.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew\n  id: MaxClockSkew\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: MaxClockSkew\n  nameWithType: LocalServiceSecuritySettings.MaxClockSkew\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum allowable time difference between the system clocks of the two parties that are communicating.\n  remarks: \"The default value for this property is 5 minutes.  \\n  \\n Messages that do not pass the send-time test are rejected.  \\n  \\n This property is used in conjunction with the message timestamp verification and the <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow%2A> property.\"\n  example:\n  - \"This example shows how to get the `MaxClockSkew` value.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#6](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#6)]\\n [!code-cs[S_UELocalServiceSecuritySettings#6](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#6)]\"\n  syntax:\n    content: public TimeSpan MaxClockSkew { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that represents the maximum allowable time difference between the system clocks of the two parties that are communicating. The default is 5 minutes.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions\n  id: MaxPendingSessions\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: MaxPendingSessions\n  nameWithType: LocalServiceSecuritySettings.MaxPendingSessions\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum number of concurrent security sessions that are established with the server for which it has issued a session token but for which no application messages are sent.\n  remarks: ''\n  example:\n  - \"This example shows how to get the `MaxPendingSessions` value.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#7](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#7)]\\n [!code-cs[S_UELocalServiceSecuritySettings#7](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#7)]\"\n  syntax:\n    content: public int MaxPendingSessions { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of concurrent security sessions. The default is 128.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations\n  id: MaxStatefulNegotiations\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: MaxStatefulNegotiations\n  nameWithType: LocalServiceSecuritySettings.MaxStatefulNegotiations\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum number of concurrent security negotiations with clients that the service can participate in.\n  remarks: Negotiation sessions in excess of this limit are rejected and a SOAP fault is sent back to the client. The client typically must retry later, which allows some time for existing negotiations on the service to complete.\n  example:\n  - \"This example shows how set the `MaxStatefulNegotiations` value.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#8](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#8)]\\n [!code-cs[S_UELocalServiceSecuritySettings#8](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#8)]\"\n  syntax:\n    content: public int MaxStatefulNegotiations { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of concurrent security negotiations with clients that the service can participate in. The default is 128.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout\n  id: NegotiationTimeout\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: NegotiationTimeout\n  nameWithType: LocalServiceSecuritySettings.NegotiationTimeout\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum duration of the security negotiation phase between client and service.\n  remarks: If this limit is exceeded, an exception is thrown.\n  example:\n  - \"This example shows how to get the value of this property.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#9](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#9)]\\n [!code-cs[S_UELocalServiceSecuritySettings#9](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#9)]\"\n  syntax:\n    content: public TimeSpan NegotiationTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that represents the maximum duration of the security negotiation phase between client and service. Any negotiation with the service (for example during message level SPNego or SSL authentication) must complete within this time. The default is 1 minute.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache\n  id: NonceCache\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: NonceCache\n  nameWithType: LocalServiceSecuritySettings.NonceCache\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the cache for the local service security settings.\n  syntax:\n    content: public System.ServiceModel.Security.NonceCache NonceCache { get; set; }\n    return:\n      type: System.ServiceModel.Security.NonceCache\n      description: The cache for the local service security settings.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure\n  id: ReconnectTransportOnFailure\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: ReconnectTransportOnFailure\n  nameWithType: LocalServiceSecuritySettings.ReconnectTransportOnFailure\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets a value that indicates whether security sessions attempt to reconnect after transport failures.\n  remarks: If this flag is set to `true`, the service allows the client to send messages that correspond to a single security session over multiple transport connections. This is useful in the case of secure WS-ReliableMessaging because the client requires the session to tolerate transient transport failures.\n  example:\n  - \"This example shows how to get the value of this property.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#10](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#10)]\\n [!code-cs[S_UELocalServiceSecuritySettings#10](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#10)]\"\n  syntax:\n    content: public bool ReconnectTransportOnFailure { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if security sessions attempt to reconnect after transport failures; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize\n  id: ReplayCacheSize\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: ReplayCacheSize\n  nameWithType: LocalServiceSecuritySettings.ReplayCacheSize\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the size of the nonce cache used for replay detection.\n  remarks: \"A nonce is a \\\"number used once\\\".  \\n  \\n If the nonce count is exceeded, the incoming message is rejected and a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown. Old nonces are removed in a timely manner.\"\n  example:\n  - \"This example shows how to get the value of this property.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#11](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#11)]\\n [!code-cs[S_UELocalServiceSecuritySettings#11](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#11)]\"\n  syntax:\n    content: public int ReplayCacheSize { get; set; }\n    return:\n      type: System.Int32\n      description: The size of the nonce cache used for replay detection. The default is 900,000.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow\n  id: ReplayWindow\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: ReplayWindow\n  nameWithType: LocalServiceSecuritySettings.ReplayWindow\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum amount of time within which the service can accept a message.\n  remarks: \"A nonce is a \\\"number used once\\\".  \\n  \\n The service rejects all messages that are sent more than the ReplayWindow duration in the past. Messages that arrive within the `ReplayWindow` have their nonce checked for uniqueness.\"\n  example:\n  - \"This example shows how to get the value of this property.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#12](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#12)]\\n [!code-cs[S_UELocalServiceSecuritySettings#12](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#12)]\"\n  syntax:\n    content: public TimeSpan ReplayWindow { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that represents the maximum amount of time within which the service can accept a message. The default is 5 minutes.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval\n  id: SessionKeyRenewalInterval\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: SessionKeyRenewalInterval\n  nameWithType: LocalServiceSecuritySettings.SessionKeyRenewalInterval\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the lifetime of a key used in a security session. When this interval expires the key is automatically renewed.\n  remarks: \"Session settings such as this one are applicable under any of the following conditions:  \\n  \\n-   All client credential types for <xref:System.ServiceModel.WSDualHttpBinding> and <xref:System.ServiceModel.NetTcpBinding>.  \\n  \\n-   If [\\\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is enabled.  \\n  \\n-   If [\\\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.UserName%2A> = `true` or  <xref:System.ServiceModel.Description.ClientCredentials.windows%2A> = `true`.  \\n  \\n Session settings such as this one are not applicable under any of the following conditions:  \\n  \\n-   For <xref:System.ServiceModel.BasicHttpBinding>.  \\n  \\n-   For <xref:System.ServiceModel.NetNamedPipeBinding>.  \\n  \\n-   If [\\\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A> = `true` or with none of the <xref:System.ServiceModel.Description.ClientCredentials> properties set to `true`.\"\n  example:\n  - \"This example shows how get the value of this property.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#13](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#13)]\\n [!code-cs[S_UELocalServiceSecuritySettings#13](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#13)]\"\n  syntax:\n    content: public TimeSpan SessionKeyRenewalInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time span after which the service requires that the initiator renew the key used for the security session. If the initiator does not renew the key within this time the service sends back a fault to the initiator. The default is 15 hours.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval\n  id: SessionKeyRolloverInterval\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: SessionKeyRolloverInterval\n  nameWithType: LocalServiceSecuritySettings.SessionKeyRolloverInterval\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the time interval after key renewal for which the previous session key is valid on incoming messages during a key renewal.\n  remarks: \"After key renewal, the client and server should always send messages using the most current available key. Both parties can accept incoming messages secured with the previous session key until the rollover time expires.  \\n  \\n Session settings such as this one are applicable under any of the following conditions:  \\n  \\n-   All client credential types for <xref:System.ServiceModel.WSDualHttpBinding> and <xref:System.ServiceModel.NetTcpBinding>.  \\n  \\n-   If [\\\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is enabled.  \\n  \\n-   If [\\\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.UserName%2A> = `true` or  <xref:System.ServiceModel.Description.ClientCredentials.windows%2A> = `true`.  \\n  \\n Session settings such as this one are not applicable under any of the following conditions:  \\n  \\n-   For <xref:System.ServiceModel.BasicHttpBinding>.  \\n  \\n-   For <xref:System.ServiceModel.NetNamedPipeBinding>.  \\n  \\n-   If [\\\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A> = `true` or with none of the <xref:System.ServiceModel.Description.ClientCredentials> properties set to `true`.\"\n  example:\n  - \"This example shows how get the `SessionKeyRolloverInterval` value.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#14](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#14)]\\n [!code-cs[S_UELocalServiceSecuritySettings#14](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#14)]\"\n  syntax:\n    content: public TimeSpan SessionKeyRolloverInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time interval after key renewal for which the previous session key is valid on incoming messages after a key renewal. The default is 5 minutes.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration\n  id: TimestampValidityDuration\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  langs:\n  - csharp\n  name: TimestampValidityDuration\n  nameWithType: LocalServiceSecuritySettings.TimestampValidityDuration\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum duration of time that messages are valid when sent by the service. If the client receives the service's message after this duration, it discards the message.\n  remarks: ''\n  example:\n  - \"This example shows how to get the `TimestampValidityDuration` value.  \\n  \\n [!code-vb[S_UELocalServiceSecuritySettings#15](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#15)]\\n [!code-cs[S_UELocalServiceSecuritySettings#15](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#15)]\"\n  syntax:\n    content: public TimeSpan TimestampValidityDuration { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The maximum duration of time that messages are valid when sent by the service. The default is 5 minutes.\n  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The property is set to a value less than 0.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: LocalServiceSecuritySettings()\n  nameWithType: LocalServiceSecuritySettings.LocalServiceSecuritySettings()\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.LocalServiceSecuritySettings()\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: Clone()\n  nameWithType: LocalServiceSecuritySettings.Clone()\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone()\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: LocalServiceSecuritySettings\n  nameWithType: LocalServiceSecuritySettings\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: DetectReplays\n  nameWithType: LocalServiceSecuritySettings.DetectReplays\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: InactivityTimeout\n  nameWithType: LocalServiceSecuritySettings.InactivityTimeout\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: IssuedCookieLifetime\n  nameWithType: LocalServiceSecuritySettings.IssuedCookieLifetime\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: MaxCachedCookies\n  nameWithType: LocalServiceSecuritySettings.MaxCachedCookies\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: MaxClockSkew\n  nameWithType: LocalServiceSecuritySettings.MaxClockSkew\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: MaxPendingSessions\n  nameWithType: LocalServiceSecuritySettings.MaxPendingSessions\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: MaxStatefulNegotiations\n  nameWithType: LocalServiceSecuritySettings.MaxStatefulNegotiations\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: NegotiationTimeout\n  nameWithType: LocalServiceSecuritySettings.NegotiationTimeout\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: NonceCache\n  nameWithType: LocalServiceSecuritySettings.NonceCache\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache\n- uid: System.ServiceModel.Security.NonceCache\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: NonceCache\n  nameWithType: NonceCache\n  fullName: System.ServiceModel.Security.NonceCache\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: ReconnectTransportOnFailure\n  nameWithType: LocalServiceSecuritySettings.ReconnectTransportOnFailure\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: ReplayCacheSize\n  nameWithType: LocalServiceSecuritySettings.ReplayCacheSize\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: ReplayWindow\n  nameWithType: LocalServiceSecuritySettings.ReplayWindow\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: SessionKeyRenewalInterval\n  nameWithType: LocalServiceSecuritySettings.SessionKeyRenewalInterval\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: SessionKeyRolloverInterval\n  nameWithType: LocalServiceSecuritySettings.SessionKeyRolloverInterval\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: TimestampValidityDuration\n  nameWithType: LocalServiceSecuritySettings.TimestampValidityDuration\n  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: LocalServiceSecuritySettings\n  nameWithType: LocalServiceSecuritySettings.LocalServiceSecuritySettings\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: Clone\n  nameWithType: LocalServiceSecuritySettings.Clone\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: DetectReplays\n  nameWithType: LocalServiceSecuritySettings.DetectReplays\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: InactivityTimeout\n  nameWithType: LocalServiceSecuritySettings.InactivityTimeout\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: IssuedCookieLifetime\n  nameWithType: LocalServiceSecuritySettings.IssuedCookieLifetime\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: MaxCachedCookies\n  nameWithType: LocalServiceSecuritySettings.MaxCachedCookies\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: MaxClockSkew\n  nameWithType: LocalServiceSecuritySettings.MaxClockSkew\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: MaxPendingSessions\n  nameWithType: LocalServiceSecuritySettings.MaxPendingSessions\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: MaxStatefulNegotiations\n  nameWithType: LocalServiceSecuritySettings.MaxStatefulNegotiations\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: NegotiationTimeout\n  nameWithType: LocalServiceSecuritySettings.NegotiationTimeout\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: NonceCache\n  nameWithType: LocalServiceSecuritySettings.NonceCache\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: ReconnectTransportOnFailure\n  nameWithType: LocalServiceSecuritySettings.ReconnectTransportOnFailure\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: ReplayCacheSize\n  nameWithType: LocalServiceSecuritySettings.ReplayCacheSize\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: ReplayWindow\n  nameWithType: LocalServiceSecuritySettings.ReplayWindow\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: SessionKeyRenewalInterval\n  nameWithType: LocalServiceSecuritySettings.SessionKeyRenewalInterval\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: SessionKeyRolloverInterval\n  nameWithType: LocalServiceSecuritySettings.SessionKeyRolloverInterval\n- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration*\n  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings\n  isExternal: false\n  name: TimestampValidityDuration\n  nameWithType: LocalServiceSecuritySettings.TimestampValidityDuration\n"}