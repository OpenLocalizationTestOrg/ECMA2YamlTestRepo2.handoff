{"nodes":[{"pos":[539,587],"content":"Retrieves a dynamic resource during compilation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a dynamic resource during compilation.","pos":[0,48]}]},{"pos":[600,1740],"content":"ASP.NET automatically evaluates expressions during page parsing using the ExpressionBuilder class. The <xref:System.Web.Configuration.ExpressionBuilderCollection> collection, which is made up of the `expressionBuilders` elements contained in the `compilation` section of the configuration. The ExpressionBuilder contains specific values in key/value pairs.       A value is retrieved by including an expression of the form       `<%$ ExpressionPrefix: ExpressionKey %>`       within the page. The `ExpressionPrefix` maps the type of expression to be retrieved as either a common expression-builder type (that is, <xref:System.Web.Compilation.AppSettingsExpressionBuilder>) or a custom expression builder type. The `ExpressionKey` specifies the key used to reference the returned value.       If you choose to implement a common expression-builder type, you must map the expression builder to the associated section name in the configuration. If you choose to implement a custom expression-builder type, you must map your expression builder to your custom expression-builder class, which must derive from the ExpressionBuilder class.","needQuote":false,"needEscape":true,"nodes":[{"content":"ASP.NET automatically evaluates expressions during page parsing using the ExpressionBuilder class.","pos":[0,98]},{"content":"The &lt;xref:System.Web.Configuration.ExpressionBuilderCollection&gt; collection, which is made up of the <ph id=\"ph1\">`expressionBuilders`</ph> elements contained in the <ph id=\"ph2\">`compilation`</ph> section of the configuration.","pos":[99,289],"source":" The <xref:System.Web.Configuration.ExpressionBuilderCollection> collection, which is made up of the `expressionBuilders` elements contained in the `compilation` section of the configuration."},{"content":"The ExpressionBuilder contains specific values in key/value pairs.","pos":[290,356]},{"content":"A value is retrieved by including an expression of the form       <ph id=\"ph1\">`&lt;%$ ExpressionPrefix: ExpressionKey %&gt;`</ph>       within the page.","pos":[363,492],"source":"       A value is retrieved by including an expression of the form       `<%$ ExpressionPrefix: ExpressionKey %>`       within the page."},{"content":"The <ph id=\"ph1\">`ExpressionPrefix`</ph> maps the type of expression to be retrieved as either a common expression-builder type (that is, &lt;xref:System.Web.Compilation.AppSettingsExpressionBuilder&gt;) or a custom expression builder type.","pos":[493,709],"source":" The `ExpressionPrefix` maps the type of expression to be retrieved as either a common expression-builder type (that is, <xref:System.Web.Compilation.AppSettingsExpressionBuilder>) or a custom expression builder type."},{"content":"The <ph id=\"ph1\">`ExpressionKey`</ph> specifies the key used to reference the returned value.","pos":[710,785],"source":" The `ExpressionKey` specifies the key used to reference the returned value."},{"content":"If you choose to implement a common expression-builder type, you must map the expression builder to the associated section name in the configuration.","pos":[792,941]},{"content":"If you choose to implement a custom expression-builder type, you must map your expression builder to your custom expression-builder class, which must derive from the ExpressionBuilder class.","pos":[942,1132]}]},{"pos":[5179,5283],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.ExpressionBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.ExpressionBuilder\"></xref> class."},{"pos":[6000,6060],"content":"A string that identifies the type of expression to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that identifies the type of expression to retrieve.","pos":[0,60]}]},{"pos":[6124,6168],"content":"A string that specifies the expression type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that specifies the expression type.","pos":[0,44]}]},{"pos":[6677,6750],"content":"Gets or sets a string that identifies the type of expression to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a string that identifies the type of expression to retrieve.","pos":[0,73]}]},{"pos":[6762,6938],"content":"The ExpressionPrefix maps the expression to the associated section name in the configuration for common expression types, or maps the expression to the custom expression class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ExpressionPrefix maps the expression to the associated section name in the configuration for common expression types, or maps the expression to the custom expression class.","pos":[0,176]}]},{"pos":[7064,7124],"content":"A string that identifies the type of expression to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that identifies the type of expression to retrieve.","pos":[0,60]}]},{"pos":[7814,7826],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8280,8337],"content":"Gets or sets a string that specifies the expression type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a string that specifies the expression type.","pos":[0,57]}]},{"pos":[8349,8516],"content":"The Type specifies the type of object used to determine the value of the expression. The type can specify either a section within the configuration, or a custom class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Type specifies the type of object used to determine the value of the expression. The type can specify either a section within the configuration, or a custom class.","pos":[0,167],"nodes":[{"content":"The Type specifies the type of object used to determine the value of the expression.","pos":[0,84]},{"content":"The type can specify either a section within the configuration, or a custom class.","pos":[85,167]}]}]},{"pos":[8630,8674],"content":"A string that specifies the expression type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that specifies the expression type.","pos":[0,44]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.ExpressionBuilder\n  id: ExpressionBuilder\n  children:\n  - System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)\n  - System.Web.Configuration.ExpressionBuilder.ExpressionPrefix\n  - System.Web.Configuration.ExpressionBuilder.Properties\n  - System.Web.Configuration.ExpressionBuilder.Type\n  langs:\n  - csharp\n  name: ExpressionBuilder\n  nameWithType: ExpressionBuilder\n  fullName: System.Web.Configuration.ExpressionBuilder\n  type: Class\n  summary: Retrieves a dynamic resource during compilation.\n  remarks: \"ASP.NET automatically evaluates expressions during page parsing using the ExpressionBuilder class. The <xref:System.Web.Configuration.ExpressionBuilderCollection> collection, which is made up of the `expressionBuilders` elements contained in the `compilation` section of the configuration. The ExpressionBuilder contains specific values in key/value pairs.  \\n  \\n A value is retrieved by including an expression of the form  \\n  \\n `<%$ ExpressionPrefix: ExpressionKey %>`  \\n  \\n within the page. The `ExpressionPrefix` maps the type of expression to be retrieved as either a common expression-builder type (that is, <xref:System.Web.Compilation.AppSettingsExpressionBuilder>) or a custom expression builder type. The `ExpressionKey` specifies the key used to reference the returned value.  \\n  \\n If you choose to implement a common expression-builder type, you must map the expression builder to the associated section name in the configuration. If you choose to implement a custom expression-builder type, you must map your expression builder to your custom expression-builder class, which must derive from the ExpressionBuilder class.\"\n  syntax:\n    content: 'public sealed class ExpressionBuilder : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Web.Configuration.ExpressionBuilder\n  langs:\n  - csharp\n  name: ExpressionBuilder(String,String)\n  nameWithType: ExpressionBuilder.ExpressionBuilder(String,String)\n  fullName: System.Web.Configuration.ExpressionBuilder.ExpressionBuilder(String,String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.ExpressionBuilder\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to create an <xref:System.Web.Configuration.ExpressionBuilder> object. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ExpressionBuilderCollection> class.  \\n  \\n [!code-cs[System.Web.Configuration.ExpressionBuilderCollection#2](~/add/codesnippet/csharp/e711f1b6-36ca-4643-bdf7-_1.cs)]\\n [!code-vb[System.Web.Configuration.ExpressionBuilderCollection#2](~/add/codesnippet/visualbasic/e711f1b6-36ca-4643-bdf7-_1.vb)]\"\n  syntax:\n    content: public ExpressionBuilder (string expressionPrefix, string theType);\n    parameters:\n    - id: expressionPrefix\n      type: System.String\n      description: A string that identifies the type of expression to retrieve.\n    - id: theType\n      type: System.String\n      description: A string that specifies the expression type.\n  overload: System.Web.Configuration.ExpressionBuilder.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix\n  id: ExpressionPrefix\n  parent: System.Web.Configuration.ExpressionBuilder\n  langs:\n  - csharp\n  name: ExpressionPrefix\n  nameWithType: ExpressionBuilder.ExpressionPrefix\n  fullName: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a string that identifies the type of expression to retrieve.\n  remarks: The ExpressionPrefix maps the expression to the associated section name in the configuration for common expression types, or maps the expression to the custom expression class.\n  syntax:\n    content: public string ExpressionPrefix { get; set; }\n    return:\n      type: System.String\n      description: A string that identifies the type of expression to retrieve.\n  overload: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.ExpressionBuilder.Properties\n  id: Properties\n  parent: System.Web.Configuration.ExpressionBuilder\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ExpressionBuilder.Properties\n  fullName: System.Web.Configuration.ExpressionBuilder.Properties\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Web.Configuration.ExpressionBuilder.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.ExpressionBuilder.Type\n  id: Type\n  parent: System.Web.Configuration.ExpressionBuilder\n  langs:\n  - csharp\n  name: Type\n  nameWithType: ExpressionBuilder.Type\n  fullName: System.Web.Configuration.ExpressionBuilder.Type\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a string that specifies the expression type.\n  remarks: The Type specifies the type of object used to determine the value of the expression. The type can specify either a section within the configuration, or a custom class.\n  syntax:\n    content: public string Type { get; set; }\n    return:\n      type: System.String\n      description: A string that specifies the expression type.\n  overload: System.Web.Configuration.ExpressionBuilder.Type*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: ExpressionBuilder(String,String)\n  nameWithType: ExpressionBuilder.ExpressionBuilder(String,String)\n  fullName: System.Web.Configuration.ExpressionBuilder.ExpressionBuilder(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: ExpressionPrefix\n  nameWithType: ExpressionBuilder.ExpressionPrefix\n  fullName: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix\n- uid: System.Web.Configuration.ExpressionBuilder.Properties\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: Properties\n  nameWithType: ExpressionBuilder.Properties\n  fullName: System.Web.Configuration.ExpressionBuilder.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Web.Configuration.ExpressionBuilder.Type\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: Type\n  nameWithType: ExpressionBuilder.Type\n  fullName: System.Web.Configuration.ExpressionBuilder.Type\n- uid: System.Web.Configuration.ExpressionBuilder.#ctor*\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: ExpressionBuilder\n  nameWithType: ExpressionBuilder.ExpressionBuilder\n- uid: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix*\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: ExpressionPrefix\n  nameWithType: ExpressionBuilder.ExpressionPrefix\n- uid: System.Web.Configuration.ExpressionBuilder.Properties*\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: Properties\n  nameWithType: ExpressionBuilder.Properties\n- uid: System.Web.Configuration.ExpressionBuilder.Type*\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: Type\n  nameWithType: ExpressionBuilder.Type\n"}