{"nodes":[{"pos":[663,849],"content":"Represents a <xref uid=\"langword_csharp_&lt;tokenReplayDetection&gt;\" name=\"&lt;tokenReplayDetection&gt;\" href=\"\"></xref> element in a configuration file. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;tokenReplayDetection&amp;gt;\" name=\"&amp;lt;tokenReplayDetection&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element in a configuration file.","pos":[0,154],"source":"Represents a <xref uid=\"langword_csharp_&lt;tokenReplayDetection&gt;\" name=\"&lt;tokenReplayDetection&gt;\" href=\"\"></xref> element in a configuration file."},{"content":"This class cannot be inherited.","pos":[155,186]}]},{"pos":[862,1564],"content":"The `<tokenReplayDetection>` element allows you to enable the detection logic for token replays. When enabled, WIF caches the security tokens that were received for the authentication and uses the cache for replay detection. A token remains in the cache until the expiration period specified by the <xref:System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod%2A> property expires.       The token replay cache that WIF uses is specified by the `<caches>` element, which is represented by the TokenReplayDetectionElement class. The token replay cache is configured through the <xref:System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`&lt;tokenReplayDetection&gt;`</ph> element allows you to enable the detection logic for token replays.","pos":[0,96],"source":"The `<tokenReplayDetection>` element allows you to enable the detection logic for token replays."},{"content":"When enabled, WIF caches the security tokens that were received for the authentication and uses the cache for replay detection.","pos":[97,224]},{"content":"A token remains in the cache until the expiration period specified by the &lt;xref:System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod%2A&gt; property expires.","pos":[225,406],"source":" A token remains in the cache until the expiration period specified by the <xref:System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod%2A> property expires."},{"content":"The token replay cache that WIF uses is specified by the <ph id=\"ph1\">`&lt;caches&gt;`</ph> element, which is represented by the TokenReplayDetectionElement class.","pos":[413,552],"source":"       The token replay cache that WIF uses is specified by the `<caches>` element, which is represented by the TokenReplayDetectionElement class."},{"content":"The token replay cache is configured through the &lt;xref:System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache%2A&gt; property.","pos":[553,700],"source":" The token replay cache is configured through the <xref:System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache%2A> property."}]},{"pos":[5036,5159],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Configuration.TokenReplayDetectionElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.TokenReplayDetectionElement\"></xref> class"},{"pos":[5814,5890],"content":"Gets or sets a value that indicates if replay detection should be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates if replay detection should be performed.","pos":[0,76]}]},{"pos":[5902,6007],"content":"This property is optional. It represents the `enabled` attribute of the `<tokenReplayDetection>` element.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is optional.","pos":[0,26]},{"content":"It represents the <ph id=\"ph1\">`enabled`</ph> attribute of the <ph id=\"ph2\">`&lt;tokenReplayDetection&gt;`</ph> element.","pos":[27,105],"source":" It represents the `enabled` attribute of the `<tokenReplayDetection>` element."}]},{"pos":[6123,6287],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to perform replay detection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform replay detection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6908,7012],"content":"Gets or sets the maximum amount of time before an item is considered expired and removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum amount of time before an item is considered expired and removed from the cache.","pos":[0,104]}]},{"pos":[7024,7138],"content":"This property is optional. It represents the `expirationPeriod` attribute of the `<tokenReplayDetection>` element.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is optional.","pos":[0,26]},{"content":"It represents the <ph id=\"ph1\">`expirationPeriod`</ph> attribute of the <ph id=\"ph2\">`&lt;tokenReplayDetection&gt;`</ph> element.","pos":[27,114],"source":" It represents the `expirationPeriod` attribute of the `<tokenReplayDetection>` element."}]},{"pos":[7268,7359],"content":"The maximum amount of time before an item is considered expired and removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum amount of time before an item is considered expired and removed from the cache.","pos":[0,91]}]},{"pos":[8159,8171],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  id: TokenReplayDetectionElement\n  children:\n  - System.IdentityModel.Configuration.TokenReplayDetectionElement.#ctor\n  - System.IdentityModel.Configuration.TokenReplayDetectionElement.Enabled\n  - System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod\n  - System.IdentityModel.Configuration.TokenReplayDetectionElement.Properties\n  langs:\n  - csharp\n  name: TokenReplayDetectionElement\n  nameWithType: TokenReplayDetectionElement\n  fullName: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  type: Class\n  summary: Represents a <xref uid=\"langword_csharp_&lt;tokenReplayDetection&gt;\" name=\"&lt;tokenReplayDetection&gt;\" href=\"\"></xref> element in a configuration file. This class cannot be inherited.\n  remarks: \"The `<tokenReplayDetection>` element allows you to enable the detection logic for token replays. When enabled, WIF caches the security tokens that were received for the authentication and uses the cache for replay detection. A token remains in the cache until the expiration period specified by the <xref:System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod%2A> property expires.  \\n  \\n The token replay cache that WIF uses is specified by the `<caches>` element, which is represented by the TokenReplayDetectionElement class. The token replay cache is configured through the <xref:System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache%2A> property.\"\n  syntax:\n    content: 'public sealed class TokenReplayDetectionElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  langs:\n  - csharp\n  name: TokenReplayDetectionElement()\n  nameWithType: TokenReplayDetectionElement.TokenReplayDetectionElement()\n  fullName: System.IdentityModel.Configuration.TokenReplayDetectionElement.TokenReplayDetectionElement()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.TokenReplayDetectionElement\"></xref> class\n  syntax:\n    content: public TokenReplayDetectionElement ();\n    parameters: []\n  overload: System.IdentityModel.Configuration.TokenReplayDetectionElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.Enabled\n  id: Enabled\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: TokenReplayDetectionElement.Enabled\n  fullName: System.IdentityModel.Configuration.TokenReplayDetectionElement.Enabled\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets a value that indicates if replay detection should be performed.\n  remarks: This property is optional. It represents the `enabled` attribute of the `<tokenReplayDetection>` element.\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform replay detection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Configuration.TokenReplayDetectionElement.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod\n  id: ExpirationPeriod\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  langs:\n  - csharp\n  name: ExpirationPeriod\n  nameWithType: TokenReplayDetectionElement.ExpirationPeriod\n  fullName: System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the maximum amount of time before an item is considered expired and removed from the cache.\n  remarks: This property is optional. It represents the `expirationPeriod` attribute of the `<tokenReplayDetection>` element.\n  syntax:\n    content: public TimeSpan ExpirationPeriod { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The maximum amount of time before an item is considered expired and removed from the cache.\n  overload: System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.Properties\n  id: Properties\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: TokenReplayDetectionElement.Properties\n  fullName: System.IdentityModel.Configuration.TokenReplayDetectionElement.Properties\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.IdentityModel.Configuration.TokenReplayDetectionElement.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.#ctor\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  isExternal: false\n  name: TokenReplayDetectionElement()\n  nameWithType: TokenReplayDetectionElement.TokenReplayDetectionElement()\n  fullName: System.IdentityModel.Configuration.TokenReplayDetectionElement.TokenReplayDetectionElement()\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.Enabled\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  isExternal: false\n  name: Enabled\n  nameWithType: TokenReplayDetectionElement.Enabled\n  fullName: System.IdentityModel.Configuration.TokenReplayDetectionElement.Enabled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  isExternal: false\n  name: ExpirationPeriod\n  nameWithType: TokenReplayDetectionElement.ExpirationPeriod\n  fullName: System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.Properties\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  isExternal: false\n  name: Properties\n  nameWithType: TokenReplayDetectionElement.Properties\n  fullName: System.IdentityModel.Configuration.TokenReplayDetectionElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.#ctor*\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  isExternal: false\n  name: TokenReplayDetectionElement\n  nameWithType: TokenReplayDetectionElement.TokenReplayDetectionElement\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.Enabled*\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  isExternal: false\n  name: Enabled\n  nameWithType: TokenReplayDetectionElement.Enabled\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.ExpirationPeriod*\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  isExternal: false\n  name: ExpirationPeriod\n  nameWithType: TokenReplayDetectionElement.ExpirationPeriod\n- uid: System.IdentityModel.Configuration.TokenReplayDetectionElement.Properties*\n  parent: System.IdentityModel.Configuration.TokenReplayDetectionElement\n  isExternal: false\n  name: Properties\n  nameWithType: TokenReplayDetectionElement.Properties\n"}