{"nodes":[{"pos":[3101,3342],"content":"Provides the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> base class for a collection of associated &lt;xref:System.String&gt; keys and &lt;xref:System.Object&gt; values that can be accessed either with the key or with the index.","needQuote":true,"needEscape":true,"source":"Provides the <xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"></xref> base class for a collection of associated <xref:System.String> keys and <xref:System.Object> values that can be accessed either with the key or with the index."},{"pos":[3355,4804],"content":"The underlying structure for this class is a hash table.       Each element is a key/value pair.       The capacity of a NameObjectCollectionBase is the number of elements the NameObjectCollectionBase can hold. As elements are added to a NameObjectCollectionBase, the capacity is automatically increased as required through reallocation.       The hash code provider dispenses hash codes for keys in the NameObjectCollectionBase instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.       The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.       In .NET Framework version 1.0, this class uses culture-sensitive string comparisons. However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings. For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/add/includes/ajax-current-ext-md.md).       `null` is allowed as a key or as a value.      > [!CAUTION] >  The <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> method does not distinguish between `null` which is returned because the specified key is not found and `null` which is returned because the value associated with the key is `null`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The underlying structure for this class is a hash table.","pos":[0,56]},{"content":"Each element is a key/value pair.","pos":[63,96]},{"content":"The capacity of a NameObjectCollectionBase is the number of elements the NameObjectCollectionBase can hold.","pos":[103,210]},{"content":"As elements are added to a NameObjectCollectionBase, the capacity is automatically increased as required through reallocation.","pos":[211,337]},{"content":"The hash code provider dispenses hash codes for keys in the NameObjectCollectionBase instance.","pos":[344,438]},{"content":"The default hash code provider is the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.","pos":[439,535],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."},{"content":"The comparer determines whether two keys are equal.","pos":[542,593]},{"content":"The default comparer is the &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.","pos":[594,672],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."},{"content":"In .NET Framework version 1.0, this class uses culture-sensitive string comparisons.","pos":[679,763]},{"content":"However, in .NET Framework version 1.1 and later, this class uses &lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt; when comparing strings.","pos":[764,938],"source":" However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings."},{"content":"For more information about how culture affects comparisons and sorting, see <bpt id=\"p1\">[</bpt>Performing Culture-Insensitive String Operations<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[939,1105],"source":" For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/add/includes/ajax-current-ext-md.md)."},{"content":"<ph id=\"ph1\">`null`</ph> is allowed as a key or as a value.","pos":[1112,1153],"source":"`null` is allowed as a key or as a value."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  The &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt; method does not distinguish between <ph id=\"ph2\">`null`</ph> which is returned because the specified key is not found and <ph id=\"ph3\">`null`</ph> which is returned because the value associated with the key is <ph id=\"ph4\">`null`</ph>.","pos":[1159,1434],"source":"      > [!CAUTION] >  The <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> method does not distinguish between `null` which is returned because the specified key is not found and `null` which is returned because the value associated with the key is `null`."}]},{"pos":[6221,6352],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is empty.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty."},{"pos":[6365,7400],"content":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.       The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.       This constructor is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.       The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.       This constructor is an O(1) operation.","pos":[0,1027],"nodes":[{"content":"The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.","pos":[0,188],"source":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold."},{"content":"As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.","pos":[189,367],"source":" As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array."},{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.","pos":[374,609],"source":"       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>."},{"content":"The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; instance.","pos":[616,748],"source":"       The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance."},{"content":"The default hash code provider is the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.","pos":[749,845],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."},{"content":"The comparer determines whether two keys are equal.","pos":[852,903]},{"content":"The default comparer is the &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.","pos":[904,982],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."},{"content":"This constructor is an O(1) operation.","pos":[989,1027]}]}]},{"pos":[8192,8432],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and uses the specified &lt;xref:System.Collections.IEqualityComparer&gt; object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty, has the default initial capacity, and uses the specified <xref:System.Collections.IEqualityComparer> object."},{"pos":[8445,9401],"content":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  The comparer determines whether two keys are equal.       This constructor is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  The comparer determines whether two keys are equal.       This constructor is an O(1) operation.","pos":[0,950],"nodes":[{"content":"The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.","pos":[0,195],"source":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold."},{"content":"As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.","pos":[196,374],"source":" As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array."},{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.","pos":[381,616],"source":"       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>."},{"content":"The &lt;xref:System.Collections.IEqualityComparer&gt; object combines the comparer and the hash code provider.","pos":[623,727],"source":"       The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider."},{"content":"The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.","pos":[729,852],"source":"  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>."},{"content":"The comparer determines whether two keys are equal.","pos":[854,905]},{"content":"This constructor is an O(1) operation.","pos":[912,950]}]}]},{"pos":[9629,9789],"content":"The <xref:System.Collections.IEqualityComparer> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.IEqualityComparer&gt; object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.","pos":[0,160],"source":"The <xref:System.Collections.IEqualityComparer> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection."}]},{"pos":[10415,10648],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and uses the default hash code provider and the default comparer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty, has the specified initial capacity, and uses the default hash code provider and the default comparer."},{"pos":[10661,11723],"content":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.       The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.       This constructor is an O(`n`) operation, where `n` is `capacity`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.","pos":[0,188],"source":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold."},{"content":"As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.","pos":[189,367],"source":" As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array."},{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.","pos":[374,609],"source":"       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>."},{"content":"The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; instance.","pos":[616,748],"source":"       The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance."},{"content":"The default hash code provider is the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.","pos":[749,845],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."},{"content":"The comparer determines whether two keys are equal.","pos":[852,903]},{"content":"The default comparer is the &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.","pos":[904,982],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."},{"content":"This constructor is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">`capacity`</ph>.","pos":[989,1054],"source":"       This constructor is an O(`n`) operation, where `n` is `capacity`."}]},{"pos":[11878,12029],"content":"The approximate number of entries that the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance can initially contain.","needQuote":true,"needEscape":true,"source":"The approximate number of entries that the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance can initially contain."},{"pos":[12233,12273],"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","needQuote":true,"needEscape":true,"source":"<code>capacity</code> is less than zero."},{"pos":[12979,13214],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and uses the specified hash code provider and the specified comparer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty, has the default initial capacity, and uses the specified hash code provider and the specified comparer."},{"pos":[13227,14262],"content":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.       The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.       This constructor is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.       The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.       This constructor is an O(1) operation.","pos":[0,1027],"nodes":[{"content":"The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.","pos":[0,188],"source":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold."},{"content":"As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.","pos":[189,367],"source":" As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array."},{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.","pos":[374,609],"source":"       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>."},{"content":"The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; instance.","pos":[616,748],"source":"       The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance."},{"content":"The default hash code provider is the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.","pos":[749,845],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."},{"content":"The comparer determines whether two keys are equal.","pos":[852,903]},{"content":"The default comparer is the &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.","pos":[904,982],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."},{"content":"This constructor is an O(1) operation.","pos":[989,1027]}]}]},{"pos":[14521,14721],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.IHashCodeProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that will supply the hash codes for all keys in the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.IHashCodeProvider\"></xref> that will supply the hash codes for all keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[14801,14888],"content":"The <xref:System.Collections.IComparer> to use to determine whether two keys are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.IComparer&gt; to use to determine whether two keys are equal.","pos":[0,87],"source":"The <xref:System.Collections.IComparer> to use to determine whether two keys are equal."}]},{"pos":[15642,15884],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and uses the specified &lt;xref:System.Collections.IEqualityComparer&gt; object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref:System.Collections.IEqualityComparer> object."},{"pos":[15897,16894],"content":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  The comparer determines whether two keys are equal.       This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.","needQuote":false,"needEscape":true,"nodes":[{"content":"The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.","pos":[0,195],"source":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold."},{"content":"As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.","pos":[196,374],"source":" As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array."},{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.","pos":[381,616],"source":"       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>."},{"content":"The &lt;xref:System.Collections.IEqualityComparer&gt; object combines the comparer and the hash code provider.","pos":[623,727],"source":"       The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider."},{"content":"The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.","pos":[729,852],"source":"  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>."},{"content":"The comparer determines whether two keys are equal.","pos":[854,905]},{"content":"This constructor is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the <ph id=\"ph3\">`capacity`</ph> parameter.","pos":[912,991],"source":"       This constructor is an O(`n`) operation, where `n` is the `capacity` parameter."}]},{"pos":[17104,17253],"content":"The approximate number of entries that the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can initially contain.","needQuote":true,"needEscape":true,"source":"The approximate number of entries that the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object can initially contain."},{"pos":[17349,17509],"content":"The <xref:System.Collections.IEqualityComparer> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.IEqualityComparer&gt; object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.","pos":[0,160],"source":"The <xref:System.Collections.IEqualityComparer> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection."}]},{"pos":[17713,17753],"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","needQuote":true,"needEscape":true,"source":"<code>capacity</code> is less than zero."},{"pos":[18534,18851],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is serializable and uses the specified <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <ph id=\"ph1\">&amp;lt;</ph>xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is serializable and uses the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt;."},{"pos":[18863,18901],"content":"This constructor is an O(1) operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor is an O(1) operation.","pos":[0,38]}]},{"pos":[19179,19402],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the information required to serialize the new <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information required to serialize the new <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[19498,19767],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object that contains the source and destination of the serialized stream associated with the new <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt; object that contains the source and destination of the serialized stream associated with the new <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[20609,20845],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer."},{"pos":[20858,21920],"content":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.       The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.       This constructor is an O(`n`) operation, where `n` is `capacity`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The capacity of a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can hold.","pos":[0,188],"source":"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold."},{"content":"As elements are added to a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;, the capacity is automatically increased as required by reallocating the internal array.","pos":[189,367],"source":" As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array."},{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.","pos":[374,609],"source":"       If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>."},{"content":"The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; instance.","pos":[616,748],"source":"       The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance."},{"content":"The default hash code provider is the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;.","pos":[749,845],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."},{"content":"The comparer determines whether two keys are equal.","pos":[852,903]},{"content":"The default comparer is the &lt;xref:System.Collections.CaseInsensitiveComparer&gt;.","pos":[904,982],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."},{"content":"This constructor is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">`capacity`</ph>.","pos":[989,1054],"source":"       This constructor is an O(`n`) operation, where `n` is `capacity`."}]},{"pos":[22165,22316],"content":"The approximate number of entries that the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance can initially contain.","needQuote":true,"needEscape":true,"source":"The approximate number of entries that the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance can initially contain."},{"pos":[22408,22608],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.IHashCodeProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that will supply the hash codes for all keys in the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.IHashCodeProvider\"></xref> that will supply the hash codes for all keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[22688,22775],"content":"The <xref:System.Collections.IComparer> to use to determine whether two keys are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.IComparer&gt; to use to determine whether two keys are equal.","pos":[0,87],"source":"The <xref:System.Collections.IComparer> to use to determine whether two keys are equal."}]},{"pos":[22979,23019],"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","needQuote":true,"needEscape":true,"source":"<code>capacity</code> is less than zero."},{"pos":[23553,23695],"content":"Adds an entry with the specified key and value into the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Adds an entry with the specified key and value into the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[23708,24385],"content":"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameObjectCollectionBase> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.       If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"If &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt; already equals the capacity, the capacity of the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.","pos":[0,336],"source":"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameObjectCollectionBase> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added."},{"content":"If &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt; is less than the capacity, this method is an O(1) operation.","pos":[343,478],"source":"       If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation."},{"content":"If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.","pos":[479,675],"source":" If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."}]},{"pos":[25153,25279],"content":"The <xref:System.String> key of the entry to add. The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.String&gt; key of the entry to add.","pos":[0,49],"source":"The <xref:System.String> key of the entry to add."},{"content":"The key can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[50,126],"source":" The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[25341,25471],"content":"The <xref:System.Object> value of the entry to add. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; value of the entry to add.","pos":[0,51],"source":"The <xref:System.Object> value of the entry to add."},{"content":"The value can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[52,130],"source":" The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[25665,25693],"content":"The collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection is read-only.","pos":[0,28]}]},{"pos":[26140,26255],"content":"Removes all entries from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Removes all entries from the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[26268,26480],"content":"<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.       This method is an O(1) operation.","pos":[0,210],"nodes":[{"content":"&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.","pos":[0,170],"source":"<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released."},{"content":"This method is an O(1) operation.","pos":[177,210]}]}]},{"pos":[27334,27362],"content":"The collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection is read-only.","pos":[0,28]}]},{"pos":[27842,27986],"content":"Gets the value of the entry at the specified index of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the value of the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[27998,28031],"content":"This method is an O(1) operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]},{"pos":[28833,28874],"content":"The zero-based index of the value to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the value to get.","pos":[0,41]}]},{"pos":[28932,29018],"content":"An <xref:System.Object> that represents the value of the entry at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that represents the value of the entry at the specified index.","pos":[0,86],"source":"An <xref:System.Object> that represents the value of the entry at the specified index."}]},{"pos":[29224,29300],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.","needQuote":true,"needEscape":true,"source":"<code>index</code> is outside the valid range of indexes for the collection."},{"pos":[29785,29937],"content":"Gets the value of the first entry with the specified key from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the value of the first entry with the specified key from the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[29950,30477],"content":"If the collection contains multiple entries with the specified key, this method returns only the first entry. To get the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.      > [!CAUTION] >  This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the collection contains multiple entries with the specified key, this method returns only the first entry.","pos":[0,109]},{"content":"To get the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.","pos":[110,243]},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  This method returns <ph id=\"ph2\">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id=\"ph3\">`null`</ph>.","pos":[249,426],"source":"      > [!CAUTION] >  This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`."},{"content":"This method does not distinguish between the two cases.","pos":[427,482]},{"content":"This method is an O(1) operation.","pos":[489,522]}]},{"pos":[31216,31342],"content":"The <xref:System.String> key of the entry to get. The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.String&gt; key of the entry to get.","pos":[0,49],"source":"The <xref:System.String> key of the entry to get."},{"content":"The key can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[50,126],"source":" The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[31400,31575],"content":"An &lt;xref:System.Object&gt; that represents the value of the first entry with the specified key, if found; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that represents the value of the first entry with the specified key, if found; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[32141,32298],"content":"Returns a &lt;xref:System.String&gt; array that contains all the keys in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns a <xref:System.String> array that contains all the keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[32310,32431],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.","needQuote":true,"needEscape":true,"source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."},{"pos":[33213,33362],"content":"A &lt;xref:System.String&gt; array that contains all the keys in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> array that contains all the keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[33945,34105],"content":"Returns an &lt;xref:System.Object&gt; array that contains all the values in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns an <xref:System.Object> array that contains all the values in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[34117,34238],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.","needQuote":true,"needEscape":true,"source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."},{"pos":[35022,35174],"content":"An &lt;xref:System.Object&gt; array that contains all the values in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> array that contains all the values in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[35797,35958],"content":"Returns an array of the specified type that contains all the values in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns an array of the specified type that contains all the values in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[35970,36091],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.","needQuote":true,"needEscape":true,"source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."},{"pos":[36238,36303],"content":"A <xref:System.Type> that represents the type of array to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type of array to return.","pos":[0,65],"source":"A <xref:System.Type> that represents the type of array to return."}]},{"pos":[36363,36516],"content":"An array of the specified type that contains all the values in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"An array of the specified type that contains all the values in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[36719,36801],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[36896,36948],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is not a valid <xref:System.Type>."},{"pos":[37443,37585],"content":"Gets the key of the entry at the specified index of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the key of the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[37597,37630],"content":"This method is an O(1) operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]},{"pos":[38360,38399],"content":"The zero-based index of the key to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the key to get.","pos":[0,39]}]},{"pos":[38457,38540],"content":"A <xref:System.String> that represents the key of the entry at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that represents the key of the entry at the specified index.","pos":[0,83],"source":"A <xref:System.String> that represents the key of the entry at the specified index."}]},{"pos":[38749,38825],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.","needQuote":true,"needEscape":true,"source":"<code>index</code> is outside the valid range of indexes for the collection."},{"pos":[39282,39501],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance contains entries whose keys are not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance contains entries whose keys are not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[39513,39546],"content":"This method is an O(1) operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]},{"pos":[40244,40570],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance contains entries whose keys are not <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance contains entries whose keys are not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[41168,41306],"content":"Removes the entries with the specified key from the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Removes the entries with the specified key from the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[41319,42034],"content":"If the <xref:System.Collections.Specialized.NameObjectCollectionBase> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameObjectCollectionBase> remains unchanged. No exception is thrown.       In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.       This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; does not contain an element with the specified key, the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; remains unchanged.","pos":[0,207],"source":"If the <xref:System.Collections.Specialized.NameObjectCollectionBase> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameObjectCollectionBase> remains unchanged."},{"content":"No exception is thrown.","pos":[208,231]},{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[238,372]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[373,463]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[464,583]},{"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.","pos":[590,711],"source":"       This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."}]},{"pos":[42836,42967],"content":"The <xref:System.String> key of the entries to remove. The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.String&gt; key of the entries to remove.","pos":[0,54],"source":"The <xref:System.String> key of the entries to remove."},{"content":"The key can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[55,131],"source":" The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[43164,43192],"content":"The collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection is read-only.","pos":[0,28]}]},{"pos":[43697,43831],"content":"Removes the entry at the specified index of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Removes the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[43844,44319],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.       This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]},{"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.","pos":[352,473],"source":"       This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."}]},{"pos":[45121,45165],"content":"The zero-based index of the entry to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the entry to remove.","pos":[0,44]}]},{"pos":[45376,45452],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.","needQuote":true,"needEscape":true,"source":"<code>index</code> is outside the valid range of indexes for the collection."},{"pos":[45555,45583],"content":"The collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection is read-only.","pos":[0,28]}]},{"pos":[46112,46256],"content":"Sets the value of the entry at the specified index of the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Sets the value of the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[46268,46301],"content":"This method is an O(1) operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]},{"pos":[47032,47073],"content":"The zero-based index of the entry to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the entry to set.","pos":[0,41]}]},{"pos":[47135,47289],"content":"The <xref:System.Object> that represents the new value of the entry to set. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; that represents the new value of the entry to set.","pos":[0,75],"source":"The <xref:System.Object> that represents the new value of the entry to set."},{"content":"The value can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[76,154],"source":" The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[47483,47511],"content":"The collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection is read-only.","pos":[0,28]}]},{"pos":[47626,47702],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.","needQuote":true,"needEscape":true,"source":"<code>index</code> is outside the valid range of indexes for the collection."},{"pos":[48236,48550],"content":"Sets the value of the first entry with the specified key in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance, if found; otherwise, adds an entry with the specified key and value into the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Sets the value of the first entry with the specified key in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance, if found; otherwise, adds an entry with the specified key and value into the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[48563,48845],"content":"If the collection contains multiple entries with the specified key, this method sets only the first entry. To set the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the collection contains multiple entries with the specified key, this method sets only the first entry. To set the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.       This method is an O(1) operation.","pos":[0,280],"nodes":[{"content":"If the collection contains multiple entries with the specified key, this method sets only the first entry.","pos":[0,106]},{"content":"To set the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.","pos":[107,240]},{"content":"This method is an O(1) operation.","pos":[247,280]}]}]},{"pos":[49513,49639],"content":"The <xref:System.String> key of the entry to set. The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.String&gt; key of the entry to set.","pos":[0,49],"source":"The <xref:System.String> key of the entry to set."},{"content":"The key can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[50,126],"source":" The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[49701,49855],"content":"The <xref:System.Object> that represents the new value of the entry to set. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; that represents the new value of the entry to set.","pos":[0,75],"source":"The <xref:System.Object> that represents the new value of the entry to set."},{"content":"The value can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[76,154],"source":" The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[50049,50077],"content":"The collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection is read-only.","pos":[0,28]}]},{"pos":[50500,50638],"content":"Gets the number of key/value pairs contained in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the number of key/value pairs contained in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[50651,51213],"content":"The capacity is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can store. Count is the number of elements that are actually in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The capacity is always greater than or equal to Count. If Count exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"The capacity is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can store. Count is the number of elements that are actually in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.       The capacity is always greater than or equal to Count. If Count exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.       Retrieving the value of this property is an O(1) operation.","pos":[0,558],"nodes":[{"content":"The capacity is the number of elements that the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; can store.","pos":[0,121],"source":"The capacity is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can store."},{"content":"Count is the number of elements that are actually in the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;.","pos":[122,242],"source":" Count is the number of elements that are actually in the <xref:System.Collections.Specialized.NameObjectCollectionBase>."},{"content":"The capacity is always greater than or equal to Count.","pos":[249,303]},{"content":"If Count exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.","pos":[304,492]},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[499,558]}]}]},{"pos":[51328,51461],"content":"The number of key/value pairs contained in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The number of key/value pairs contained in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[52020,52145],"content":"Returns an enumerator that iterates through the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns an enumerator that iterates through the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref>."},{"pos":[52158,54812],"content":"This enumerator returns the keys of the collection as strings.       The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.       Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.       Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.       If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.       The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.       This method is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"This enumerator returns the keys of the collection as strings.","pos":[0,62]},{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[69,181],"source":"       The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[183,274],"source":"  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."},{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[281,401]},{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[408,491]},{"content":"&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.","pos":[492,588],"source":" <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.","pos":[590,670],"source":"  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.","pos":[671,888],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."},{"content":"&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.","pos":[895,1091],"source":"       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.","pos":[1092,1216],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element."},{"content":"If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id=\"ph1\">`false`</ph>.","pos":[1223,1450],"source":"       If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id=\"ph1\">`false`</ph>.","pos":[1451,1582],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id=\"ph1\">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.","pos":[1583,1733],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.","pos":[1734,1958],"source":" To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."},{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[1965,2037]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[2038,2200]},{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.","pos":[2207,2361]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[2363,2468]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[2470,2598]},{"content":"This method is an O(1) operation.","pos":[2605,2638]}]},{"pos":[54994,55129],"content":"An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"An <xref:System.Collections.IEnumerator> for the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[55986,56206],"content":"Implements the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface and returns the data needed to serialize the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data needed to serialize the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[56218,56339],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.","needQuote":true,"needEscape":true,"source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."},{"pos":[56616,56835],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the information required to serialize the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information required to serialize the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[56931,57165],"content":"A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object that contains the source and destination of the serialized stream associated with the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A <xref:System.Runtime.Serialization.StreamingContext> object that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[57365,57447],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>info</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[57895,58038],"content":"Gets or sets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance is read-only.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance is read-only."},{"pos":[58051,58475],"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.       A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.       A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.       Retrieving the value of this property is an O(1) operation.","pos":[0,420],"nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,129]},{"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[136,354]},{"content":"Retrieving the value of this property is an O(1) operation.","pos":[361,420]}]}]},{"pos":[59110,59352],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance is read-only; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[59867,60081],"content":"Gets a &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt; instance that contains all the keys in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets a <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> instance that contains all the keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[60093,60152],"content":"Retrieving the value of this property is an O(1) operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]},{"pos":[60390,60599],"content":"A &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt; instance that contains all the keys in the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> instance that contains all the keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."},{"pos":[61225,61388],"content":"Implements the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface and raises the deserialization event when the deserialization is complete.","needQuote":true,"needEscape":true,"source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and raises the deserialization event when the deserialization is complete."},{"pos":[61401,61756],"content":"While the OnDeserialization method is not visible to COM clients by default, inheriting the <xref:System.Collections.Specialized.NameObjectCollectionBase> class can expose it and can cause undesirable behavior in COM clients.       This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"While the OnDeserialization method is not visible to COM clients by default, inheriting the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; class can expose it and can cause undesirable behavior in COM clients.","pos":[0,225],"source":"While the OnDeserialization method is not visible to COM clients by default, inheriting the <xref:System.Collections.Specialized.NameObjectCollectionBase> class can expose it and can cause undesirable behavior in COM clients."},{"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.","pos":[232,353],"source":"       This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."}]},{"pos":[61914,61954],"content":"The source of the deserialization event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source of the deserialization event.","pos":[0,40]}]},{"pos":[62204,62408],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance is invalid.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object associated with the current <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance is invalid."},{"pos":[63096,63296],"content":"Copies the entire <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the specified index of the target array.","needQuote":true,"needEscape":true,"source":"Copies the entire <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> to a compatible one-dimensional <xref:System.Array>, starting at the specified index of the target array."},{"pos":[63309,63823],"content":"The specified array must be of a compatible type.       This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.       While the ICollection.CopyTo method is not visible to COM clients by default, inheriting the <xref:System.Collections.Specialized.NameObjectCollectionBase> class can expose it and can cause undesirable behavior in COM clients.       This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The specified array must be of a compatible type.","pos":[0,49]},{"content":"This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.","pos":[56,147],"source":"       This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements."},{"content":"While the ICollection.CopyTo method is not visible to COM clients by default, inheriting the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; class can expose it and can cause undesirable behavior in COM clients.","pos":[154,380],"source":"       While the ICollection.CopyTo method is not visible to COM clients by default, inheriting the <xref:System.Collections.Specialized.NameObjectCollectionBase> class can expose it and can cause undesirable behavior in COM clients."},{"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is &lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;.","pos":[387,508],"source":"       This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."}]},{"pos":[63974,64198],"content":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref>. The <xref:System.Array> must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,169],"source":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref>."},{"content":"The &lt;xref:System.Array&gt; must have zero-based indexing.","pos":[170,224],"source":" The <xref:System.Array> must have zero-based indexing."}]},{"pos":[64259,64315],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying begins."},{"pos":[64539,64622],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[64737,64774],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","needQuote":true,"needEscape":true,"source":"<code>index</code> is less than zero."},{"pos":[64870,65156],"content":"<code>array</code> is multidimensional.       -or-       The number of elements in the source <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","pos":[0,39],"source":"<code>array</code> is multidimensional."},{"content":"-or-       The number of elements in the source <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is greater than the available space from <ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id=\"ph2\">&lt;code&gt;array&lt;/code&gt;</ph>.","pos":[46,280],"source":"       -or-       The number of elements in the source <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>."}]},{"pos":[65258,65437],"content":"The type of the source <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The type of the source <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> cannot be cast automatically to the type of the destination <code>array</code>."},{"pos":[66074,66234],"content":"Gets a value indicating whether access to the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is synchronized (thread safe).","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object is synchronized (thread safe)."},{"pos":[66247,67567],"content":"A <xref:System.Collections.Specialized.NameObjectCollectionBase> object is not synchronized. Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.       The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.       [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/cfdb0c87-90d1-4db2-b260-_1.cs)]  [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/cfdb0c87-90d1-4db2-b260-_1.cpp)]  [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/cfdb0c87-90d1-4db2-b260-_1.vb)]       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object is not synchronized.","pos":[0,92],"source":"A <xref:System.Collections.Specialized.NameObjectCollectionBase> object is not synchronized."},{"content":"Derived classes can provide a synchronized version of the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.","pos":[93,283],"source":" Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property."},{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[290,368]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[369,506]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[507,688]},{"content":"The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property during the entire enumeration.","pos":[695,854],"source":"       The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration."},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id=\"p2\">](~/add/codesnippet/csharp/cfdb0c87-90d1-4db2-b260-_1.cs)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-cpp</bpt><bpt id=\"p4\">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id=\"p4\">](~/add/codesnippet/cpp/cfdb0c87-90d1-4db2-b260-_1.cpp)</ept><ept id=\"p3\">]</ept>  <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id=\"p6\">](~/add/codesnippet/visualbasic/cfdb0c87-90d1-4db2-b260-_1.vb)</ept><ept id=\"p5\">]</ept>       Retrieving the value of this property is an O(1) operation.","pos":[861,1310],"source":"[!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/cfdb0c87-90d1-4db2-b260-_1.cs)]  [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/cfdb0c87-90d1-4db2-b260-_1.cpp)]  [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/cfdb0c87-90d1-4db2-b260-_1.vb)]       Retrieving the value of this property is an O(1) operation."}]},{"pos":[67710,68056],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the <bpt id=\"p2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is synchronized (thread safe); otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,267],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[268,346],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[68795,68940],"content":"Gets an object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object."},{"pos":[68953,70732],"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.Specialized.NameObjectCollectionBase> object, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase> object. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase> object.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.       The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration.       [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/240bf954-5c3e-40ea-821a-_1.cs)]  [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/240bf954-5c3e-40ea-821a-_1.cpp)]  [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/240bf954-5c3e-40ea-821a-_1.vb)]       Retrieving the value of this property is an O(1) operation.","needQuote":false,"needEscape":true,"nodes":[{"content":"Derived classes can provide their own synchronized version of the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; class using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.","pos":[0,204],"source":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property."},{"content":"The synchronizing code must perform operations on the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property of the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object, not directly on the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object.","pos":[205,486],"source":" The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.Specialized.NameObjectCollectionBase> object, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase> object."},{"content":"This ensures proper operation of collections that are derived from other objects.","pos":[487,568]},{"content":"Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt; object.","pos":[569,751],"source":" Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase> object."},{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[758,836]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[837,974]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[975,1156]},{"content":"The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration.","pos":[1163,1313],"source":"       The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration."},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id=\"p2\">](~/add/codesnippet/csharp/240bf954-5c3e-40ea-821a-_1.cs)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-cpp</bpt><bpt id=\"p4\">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id=\"p4\">](~/add/codesnippet/cpp/240bf954-5c3e-40ea-821a-_1.cpp)</ept><ept id=\"p3\">]</ept>  <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.Collections.Specialized.NameObjectCollectionBase#2<ept id=\"p6\">](~/add/codesnippet/visualbasic/240bf954-5c3e-40ea-821a-_1.vb)</ept><ept id=\"p5\">]</ept>       Retrieving the value of this property is an O(1) operation.","pos":[1320,1769],"source":"[!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/240bf954-5c3e-40ea-821a-_1.cs)]  [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/240bf954-5c3e-40ea-821a-_1.cpp)]  [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/240bf954-5c3e-40ea-821a-_1.vb)]       Retrieving the value of this property is an O(1) operation."}]},{"pos":[70870,71010],"content":"An object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Specialized.NameObjectCollectionBase\n  id: NameObjectCollectionBase\n  children:\n  - System.Collections.Specialized.NameObjectCollectionBase.#ctor\n  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)\n  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)\n  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.Count\n  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator\n  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  - System.Collections.Specialized.NameObjectCollectionBase.Keys\n  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot\n  langs:\n  - csharp\n  name: NameObjectCollectionBase\n  nameWithType: NameObjectCollectionBase\n  fullName: System.Collections.Specialized.NameObjectCollectionBase\n  type: Class\n  summary: Provides the <xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"></xref> base class for a collection of associated <xref:System.String> keys and <xref:System.Object> values that can be accessed either with the key or with the index.\n  remarks: \"The underlying structure for this class is a hash table.  \\n  \\n Each element is a key/value pair.  \\n  \\n The capacity of a NameObjectCollectionBase is the number of elements the NameObjectCollectionBase can hold. As elements are added to a NameObjectCollectionBase, the capacity is automatically increased as required through reallocation.  \\n  \\n The hash code provider dispenses hash codes for keys in the NameObjectCollectionBase instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n In .NET Framework version 1.0, this class uses culture-sensitive string comparisons. However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings. For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/add/includes/ajax-current-ext-md.md).  \\n  \\n `null` is allowed as a key or as a value.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> method does not distinguish between `null` which is returned because the specified key is not found and `null` which is returned because the value associated with the key is `null`.\"\n  example:\n  - \"The following code example shows how to implement and use the NameObjectCollectionBase class.  \\n  \\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/cpp/t-system.collections.spe_0_1.cpp)]\\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/csharp/t-system.collections.spe_0_1.cs)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/visualbasic/t-system.collections.spe_0_1.vb)]\"\n  syntax:\n    content: 'public abstract class NameObjectCollectionBase : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor\n  id: '#ctor'\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: NameObjectCollectionBase()\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n This constructor is an O(1) operation.\"\n  syntax:\n    content: protected NameObjectCollectionBase ();\n    parameters: []\n  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)\n  id: '#ctor(System.Collections.IEqualityComparer)'\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: NameObjectCollectionBase(IEqualityComparer)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty, has the default initial capacity, and uses the specified <xref:System.Collections.IEqualityComparer> object.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \\n  \\n The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  The comparer determines whether two keys are equal.  \\n  \\n This constructor is an O(1) operation.\"\n  syntax:\n    content: protected NameObjectCollectionBase (System.Collections.IEqualityComparer equalityComparer);\n    parameters:\n    - id: equalityComparer\n      type: System.Collections.IEqualityComparer\n      description: The <xref:System.Collections.IEqualityComparer> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: NameObjectCollectionBase(Int32)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty, has the specified initial capacity, and uses the default hash code provider and the default comparer.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n This constructor is an O(`n`) operation, where `n` is `capacity`.\"\n  syntax:\n    content: protected NameObjectCollectionBase (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: The approximate number of entries that the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance can initially contain.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>capacity</code> is less than zero.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: NameObjectCollectionBase(IHashCodeProvider,IComparer)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty, has the default initial capacity, and uses the specified hash code provider and the specified comparer.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n This constructor is an O(1) operation.\"\n  syntax:\n    content: protected NameObjectCollectionBase (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);\n    parameters:\n    - id: hashProvider\n      type: System.Collections.IHashCodeProvider\n      description: The <xref href=\"System.Collections.IHashCodeProvider\"></xref> that will supply the hash codes for all keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n    - id: comparer\n      type: System.Collections.IComparer\n      description: The <xref:System.Collections.IComparer> to use to determine whether two keys are equal.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)\n  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: NameObjectCollectionBase(Int32,IEqualityComparer)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref:System.Collections.IEqualityComparer> object.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \\n  \\n The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  The comparer determines whether two keys are equal.  \\n  \\n This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.\"\n  syntax:\n    content: protected NameObjectCollectionBase (int capacity, System.Collections.IEqualityComparer equalityComparer);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: The approximate number of entries that the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object can initially contain.\n    - id: equalityComparer\n      type: System.Collections.IEqualityComparer\n      description: The <xref:System.Collections.IEqualityComparer> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>capacity</code> is less than zero.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: NameObjectCollectionBase(SerializationInfo,StreamingContext)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is serializable and uses the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt;.\n  remarks: This constructor is an O(1) operation.\n  syntax:\n    content: protected NameObjectCollectionBase (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information required to serialize the new <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt; object that contains the source and destination of the serialized stream associated with the new <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold. As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n This constructor is an O(`n`) operation, where `n` is `capacity`.\"\n  syntax:\n    content: protected NameObjectCollectionBase (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: The approximate number of entries that the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance can initially contain.\n    - id: hashProvider\n      type: System.Collections.IHashCodeProvider\n      description: The <xref href=\"System.Collections.IHashCodeProvider\"></xref> that will supply the hash codes for all keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n    - id: comparer\n      type: System.Collections.IComparer\n      description: The <xref:System.Collections.IComparer> to use to determine whether two keys are equal.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>capacity</code> is less than zero.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)\n  id: BaseAdd(System.String,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseAdd(String,Object)\n  nameWithType: NameObjectCollectionBase.BaseAdd(String,Object)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(String,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Adds an entry with the specified key and value into the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: \"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameObjectCollectionBase> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \\n  \\n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\"\n  example:\n  - \"The following code example uses BaseAdd to create a new <xref:System.Collections.Specialized.NameObjectCollectionBase> with elements from an <xref:System.Collections.IDictionary>.  \\n  \\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/visualbasic/08f4bd55-361e-4a55-bdc1-_1.vb)]\\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/cpp/08f4bd55-361e-4a55-bdc1-_1.cpp)]\\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/csharp/08f4bd55-361e-4a55-bdc1-_1.cs)]\"\n  syntax:\n    content: protected void BaseAdd (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref:System.String> key of the entry to add. The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> value of the entry to add. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear\n  id: BaseClear\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseClear()\n  nameWithType: NameObjectCollectionBase.BaseClear()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Removes all entries from the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: \"<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example uses BaseClear to remove all elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \\n  \\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/csharp/m-system.collections.spe_13_1.cs)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/visualbasic/m-system.collections.spe_13_1.vb)]\\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/cpp/m-system.collections.spe_13_1.cpp)]\"\n  syntax:\n    content: protected void BaseClear ();\n    parameters: []\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseClear*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)\n  id: BaseGet(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseGet(Int32)\n  nameWithType: NameObjectCollectionBase.BaseGet(Int32)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets the value of the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: This method is an O(1) operation.\n  example:\n  - \"The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.  \\n  \\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/m-system.collections.spe_24_1.cpp)]\\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/m-system.collections.spe_24_1.cs)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/m-system.collections.spe_24_1.vb)]\"\n  syntax:\n    content: protected object BaseGet (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the value to get.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the value of the entry at the specified index.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the valid range of indexes for the collection.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)\n  id: BaseGet(System.String)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseGet(String)\n  nameWithType: NameObjectCollectionBase.BaseGet(String)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets the value of the first entry with the specified key from the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: \"If the collection contains multiple entries with the specified key, this method returns only the first entry. To get the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.  \\n  \\n> [!CAUTION]\\n>  This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and BaseGet to get specific keys and values.  \\n  \\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/m-system.collections.spe_41_1.cpp)]\\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/m-system.collections.spe_41_1.cs)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/m-system.collections.spe_41_1.vb)]\"\n  syntax:\n    content: protected object BaseGet (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref:System.String> key of the entry to get. The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the value of the first entry with the specified key, if found; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys\n  id: BaseGetAllKeys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseGetAllKeys()\n  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Returns a <xref:System.String> array that contains all the keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\n  example:\n  - \"The following code example uses BaseGetAllKeys and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A> to get an array of the keys or an array of the values.  \\n  \\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/csharp/m-system.collections.spe_38_1.cs)]\\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/cpp/m-system.collections.spe_38_1.cpp)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/visualbasic/m-system.collections.spe_38_1.vb)]\"\n  syntax:\n    content: protected string[] BaseGetAllKeys ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: A <xref:System.String> array that contains all the keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues\n  id: BaseGetAllValues\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseGetAllValues()\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Returns an <xref:System.Object> array that contains all the values in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\n  example:\n  - \"The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A> and BaseGetAllValues to get an array of the keys or an array of the values.  \\n  \\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/csharp/m-system.collections.spe_32_1.cs)]\\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/cpp/m-system.collections.spe_32_1.cpp)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/visualbasic/m-system.collections.spe_32_1.vb)]\"\n  syntax:\n    content: protected object[] BaseGetAllValues ();\n    parameters: []\n    return:\n      type: System.Object[]\n      description: An <xref:System.Object> array that contains all the values in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)\n  id: BaseGetAllValues(System.Type)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseGetAllValues(Type)\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Returns an array of the specified type that contains all the values in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\n  syntax:\n    content: protected object[] BaseGetAllValues (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref:System.Type> that represents the type of array to return.\n    return:\n      type: System.Object[]\n      description: An array of the specified type that contains all the values in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>type</code> is not a valid <xref:System.Type>.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)\n  id: BaseGetKey(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseGetKey(Int32)\n  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets the key of the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: This method is an O(1) operation.\n  example:\n  - \"The following code example uses BaseGetKey and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.  \\n  \\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/3cf5a014-1166-4fdc-b41d-_1.cpp)]\\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/3cf5a014-1166-4fdc-b41d-_1.cs)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/3cf5a014-1166-4fdc-b41d-_1.vb)]\"\n  syntax:\n    content: protected string BaseGetKey (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the key to get.\n    return:\n      type: System.String\n      description: A <xref:System.String> that represents the key of the entry at the specified index.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the valid range of indexes for the collection.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys\n  id: BaseHasKeys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseHasKeys()\n  nameWithType: NameObjectCollectionBase.BaseHasKeys()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance contains entries whose keys are not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  remarks: This method is an O(1) operation.\n  example:\n  - \"The following code example uses BaseHasKeys to determine if the collection contains keys that are not `null`.  \\n  \\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/cpp/m-system.collections.spe_17_1.cpp)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/visualbasic/m-system.collections.spe_17_1.vb)]\\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/csharp/m-system.collections.spe_17_1.cs)]\"\n  syntax:\n    content: protected bool BaseHasKeys ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance contains entries whose keys are not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)\n  id: BaseRemove(System.String)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseRemove(String)\n  nameWithType: NameObjectCollectionBase.BaseRemove(String)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Removes the entries with the specified key from the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: \"If the <xref:System.Collections.Specialized.NameObjectCollectionBase> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameObjectCollectionBase> remains unchanged. No exception is thrown.  \\n  \\n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\"\n  example:\n  - \"The following code example uses BaseRemove and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A> to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \\n  \\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/csharp/6fd86396-bc06-4c0a-8ef5-_1.cs)]\\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/cpp/6fd86396-bc06-4c0a-8ef5-_1.cpp)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/visualbasic/6fd86396-bc06-4c0a-8ef5-_1.vb)]\"\n  syntax:\n    content: protected void BaseRemove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref:System.String> key of the entries to remove. The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)\n  id: BaseRemoveAt(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseRemoveAt(Int32)\n  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Removes the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: \"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\"\n  example:\n  - \"The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A> and BaseRemoveAt to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \\n  \\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/csharp/c118a875-5132-4e70-b0e9-_1.cs)]\\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/cpp/c118a875-5132-4e70-b0e9-_1.cpp)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/visualbasic/c118a875-5132-4e70-b0e9-_1.vb)]\"\n  syntax:\n    content: protected void BaseRemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the entry to remove.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the valid range of indexes for the collection.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)\n  id: BaseSet(System.Int32,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseSet(Int32,Object)\n  nameWithType: NameObjectCollectionBase.BaseSet(Int32,Object)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(Int32,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Sets the value of the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: This method is an O(1) operation.\n  example:\n  - \"The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A> to set the value of a specific element.  \\n  \\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/cpp/2287b31c-3439-4899-9c69-_1.cpp)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/visualbasic/2287b31c-3439-4899-9c69-_1.vb)]\\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/csharp/2287b31c-3439-4899-9c69-_1.cs)]\"\n  syntax:\n    content: protected void BaseSet (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the entry to set.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> that represents the new value of the entry to set. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the valid range of indexes for the collection.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)\n  id: BaseSet(System.String,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: BaseSet(String,Object)\n  nameWithType: NameObjectCollectionBase.BaseSet(String,Object)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(String,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Sets the value of the first entry with the specified key in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance, if found; otherwise, adds an entry with the specified key and value into the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: \"If the collection contains multiple entries with the specified key, this method sets only the first entry. To set the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example uses BaseSet to set the value of a specific element.  \\n  \\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/cpp/3574a9bc-5d60-40e9-a4ae-_1.cpp)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/visualbasic/3574a9bc-5d60-40e9-a4ae-_1.vb)]\\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/csharp/3574a9bc-5d60-40e9-a4ae-_1.cs)]\"\n  syntax:\n    content: protected void BaseSet (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref:System.String> key of the entry to set. The key can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> that represents the new value of the entry to set. The value can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Count\n  id: Count\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: Count\n  nameWithType: NameObjectCollectionBase.Count\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets the number of key/value pairs contained in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: \"The capacity is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can store. Count is the number of elements that are actually in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \\n  \\n The capacity is always greater than or equal to Count. If Count exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: public virtual int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of key/value pairs contained in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: NameObjectCollectionBase.GetEnumerator()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Returns an enumerator that iterates through the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref>.\n  remarks: \"This enumerator returns the keys of the collection as strings.  \\n  \\n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n This method is an O(1) operation.\"\n  syntax:\n    content: public virtual System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> for the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data needed to serialize the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\n  syntax:\n    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information required to serialize the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref:System.Runtime.Serialization.StreamingContext> object that contains the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  id: IsReadOnly\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: NameObjectCollectionBase.IsReadOnly\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets or sets a value indicating whether the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance is read-only.\n  remarks: \"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \\n  \\n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  example:\n  - \"The following code example creates a read-only collection.  \\n  \\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/cpp/p-system.collections.spe_25_1.cpp)]\\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/csharp/p-system.collections.spe_25_1.cs)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/visualbasic/p-system.collections.spe_25_1.vb)]\"\n  syntax:\n    content: protected bool IsReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys\n  id: Keys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: NameObjectCollectionBase.Keys\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets a <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> instance that contains all the keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: Retrieving the value of this property is an O(1) operation.\n  syntax:\n    content: public virtual System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }\n    return:\n      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n      description: A <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> instance that contains all the keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)\n  id: OnDeserialization(System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: OnDeserialization(Object)\n  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and raises the deserialization event when the deserialization is complete.\n  remarks: \"While the OnDeserialization method is not visible to COM clients by default, inheriting the <xref:System.Collections.Specialized.NameObjectCollectionBase> class can expose it and can cause undesirable behavior in COM clients.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\"\n  syntax:\n    content: public virtual void OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the deserialization event.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization*\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object associated with the current <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance is invalid.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Copies the entire <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> to a compatible one-dimensional <xref:System.Array>, starting at the specified index of the target array.\n  remarks: \"The specified array must be of a compatible type.  \\n  \\n This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \\n  \\n While the ICollection.CopyTo method is not visible to COM clients by default, inheriting the <xref:System.Collections.Specialized.NameObjectCollectionBase> class can expose it and can cause undesirable behavior in COM clients.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\"\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref>. The <xref:System.Array> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` at which copying begins.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n -or-  \\n  \\n The number of elements in the source <xref href=\\\"System.Collections.Specialized.NameObjectCollectionBase\\\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The type of the source <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object is synchronized (thread safe).\n  remarks: \"A <xref:System.Collections.Specialized.NameObjectCollectionBase> object is not synchronized. Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \\n  \\n The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \\n  \\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/cfdb0c87-90d1-4db2-b260-_1.cs)]\\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/cfdb0c87-90d1-4db2-b260-_1.cpp)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/cfdb0c87-90d1-4db2-b260-_1.vb)]  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Collections.Specialized\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object.\n  remarks: \"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.Specialized.NameObjectCollectionBase> object, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase> object. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase> object.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \\n  \\n The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration.  \\n  \\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/240bf954-5c3e-40ea-821a-_1.cs)]\\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/240bf954-5c3e-40ea-821a-_1.cpp)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/240bf954-5c3e-40ea-821a-_1.vb)]  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> object.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Runtime.Serialization.SerializationException\n  isExternal: true\n  name: System.Runtime.Serialization.SerializationException\n- uid: System.InvalidCastException\n  isExternal: true\n  name: System.InvalidCastException\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: NameObjectCollectionBase()\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: NameObjectCollectionBase(IEqualityComparer)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: true\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: NameObjectCollectionBase(Int32)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: NameObjectCollectionBase(IHashCodeProvider,IComparer)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)\n- uid: System.Collections.IHashCodeProvider\n  parent: System.Collections\n  isExternal: false\n  name: IHashCodeProvider\n  nameWithType: IHashCodeProvider\n  fullName: System.Collections.IHashCodeProvider\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: true\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: NameObjectCollectionBase(Int32,IEqualityComparer)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: NameObjectCollectionBase(SerializationInfo,StreamingContext)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseAdd(String,Object)\n  nameWithType: NameObjectCollectionBase.BaseAdd(String,Object)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(String,Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseClear()\n  nameWithType: NameObjectCollectionBase.BaseClear()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGet(Int32)\n  nameWithType: NameObjectCollectionBase.BaseGet(Int32)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGet(String)\n  nameWithType: NameObjectCollectionBase.BaseGet(String)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(String)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllKeys()\n  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllValues()\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllValues(Type)\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetKey(Int32)\n  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseHasKeys()\n  nameWithType: NameObjectCollectionBase.BaseHasKeys()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseRemove(String)\n  nameWithType: NameObjectCollectionBase.BaseRemove(String)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(String)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseRemoveAt(Int32)\n  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseSet(Int32,Object)\n  nameWithType: NameObjectCollectionBase.BaseSet(Int32,Object)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(Int32,Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseSet(String,Object)\n  nameWithType: NameObjectCollectionBase.BaseSet(String,Object)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(String,Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Count\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: Count\n  nameWithType: NameObjectCollectionBase.Count\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: NameObjectCollectionBase.GetEnumerator()\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: NameObjectCollectionBase.IsReadOnly\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: Keys\n  nameWithType: NameObjectCollectionBase.Keys\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameObjectCollectionBase+KeysCollection\n  nameWithType: NameObjectCollectionBase+KeysCollection\n  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection\n- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot\n- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: NameObjectCollectionBase\n  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseAdd\n  nameWithType: NameObjectCollectionBase.BaseAdd\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseClear\n  nameWithType: NameObjectCollectionBase.BaseClear\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGet\n  nameWithType: NameObjectCollectionBase.BaseGet\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllKeys\n  nameWithType: NameObjectCollectionBase.BaseGetAllKeys\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllValues\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetKey\n  nameWithType: NameObjectCollectionBase.BaseGetKey\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseHasKeys\n  nameWithType: NameObjectCollectionBase.BaseHasKeys\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseRemove\n  nameWithType: NameObjectCollectionBase.BaseRemove\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseRemoveAt\n  nameWithType: NameObjectCollectionBase.BaseRemoveAt\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseSet\n  nameWithType: NameObjectCollectionBase.BaseSet\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Count*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: Count\n  nameWithType: NameObjectCollectionBase.Count\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: NameObjectCollectionBase.GetEnumerator\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: GetObjectData\n  nameWithType: NameObjectCollectionBase.GetObjectData\n- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: NameObjectCollectionBase.IsReadOnly\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: Keys\n  nameWithType: NameObjectCollectionBase.Keys\n- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: OnDeserialization\n  nameWithType: NameObjectCollectionBase.OnDeserialization\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot*\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot\n"}