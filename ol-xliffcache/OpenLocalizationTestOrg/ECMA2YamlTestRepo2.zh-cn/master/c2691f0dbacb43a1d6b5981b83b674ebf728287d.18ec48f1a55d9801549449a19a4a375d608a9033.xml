{"nodes":[{"pos":[536,656],"content":"Computes the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> hash for the input data using the managed library.","needQuote":true,"needEscape":true,"source":"Computes the <xref href=\"System.Security.Cryptography.SHA256\"></xref> hash for the input data using the managed library."},{"pos":[669,990],"content":"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.       The hash size for the SHA256Managed algorithm is 256 bits.","needQuote":false,"needEscape":true,"nodes":[{"content":"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.       The hash size for the SHA256Managed algorithm is 256 bits.","pos":[0,319],"nodes":[{"content":"The hash is used as a unique value of fixed size representing a large amount of data.","pos":[0,85]},{"content":"Hashes of two sets of data should match if and only if the corresponding data also matches.","pos":[86,177]},{"content":"Small changes to the data result in large unpredictable changes in the hash.","pos":[178,254]},{"content":"The hash size for the SHA256Managed algorithm is 256 bits.","pos":[261,319]}]}]},{"pos":[3428,3558],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SHA256Managed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the managed library.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.SHA256Managed\"></xref> class using the managed library."},{"pos":[3571,4256],"content":"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.       The hash size for the <xref:System.Security.Cryptography.SHA256Managed> algorithm is 256 bits.       **Important** If you enable the following security setting either in the Local Security Policy or as part of Group Policy you will get an <xref:System.InvalidOperationException> when you attempt to use this constructor:       **System cryptography: Use FIPS compliant algorithms for encryption, hashing, and signing**","needQuote":false,"needEscape":true,"nodes":[{"content":"The hash is used as a unique value of fixed size representing a large amount of data.","pos":[0,85]},{"content":"Hashes of two sets of data should match if and only if the corresponding data also matches.","pos":[86,177]},{"content":"Small changes to the data result in large unpredictable changes in the hash.","pos":[178,254]},{"content":"The hash size for the &lt;xref:System.Security.Cryptography.SHA256Managed&gt; algorithm is 256 bits.","pos":[261,355],"source":"       The hash size for the <xref:System.Security.Cryptography.SHA256Managed> algorithm is 256 bits."},{"content":"<bpt id=\"p1\">**</bpt>Important<ept id=\"p1\">**</ept> If you enable the following security setting either in the Local Security Policy or as part of Group Policy you will get an &lt;xref:System.InvalidOperationException&gt; when you attempt to use this constructor:       <bpt id=\"p2\">**</bpt>System cryptography: Use FIPS compliant algorithms for encryption, hashing, and signing<ept id=\"p2\">**</ept>","pos":[362,679],"source":"**Important** If you enable the following security setting either in the Local Security Policy or as part of Group Policy you will get an <xref:System.InvalidOperationException> when you attempt to use this constructor:       **System cryptography: Use FIPS compliant algorithms for encryption, hashing, and signing**"}]},{"pos":[4511,4688],"content":"The Federal Information Processing Standards (FIPS) security setting is enabled. This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Federal Information Processing Standards (FIPS) security setting is enabled. This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.","pos":[0,177],"nodes":[{"content":"The Federal Information Processing Standards (FIPS) security setting is enabled.","pos":[0,80]},{"content":"This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.","pos":[81,177]}]}]},{"pos":[5216,5390],"content":"When overridden in a derived class, routes data written to the object into the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> hash algorithm for computing the hash.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, routes data written to the object into the <xref href=\"System.Security.Cryptography.SHA256\"></xref> hash algorithm for computing the hash."},{"pos":[5403,5733],"content":"This method is not called by application code.       This abstract method performs the hash computation. Every write to the cryptographic stream object passes the data through this method. For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is not called by application code.       This abstract method performs the hash computation. Every write to the cryptographic stream object passes the data through this method. For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.","pos":[0,328],"nodes":[{"content":"This method is not called by application code.","pos":[0,46]},{"content":"This abstract method performs the hash computation.","pos":[53,104]},{"content":"Every write to the cryptographic stream object passes the data through this method.","pos":[105,188]},{"content":"For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.","pos":[189,328]}]}]},{"pos":[5905,5920],"content":"The input data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The input data.","pos":[0,15]}]},{"pos":[5983,6045],"content":"The offset into the byte array from which to begin using data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The offset into the byte array from which to begin using data.","pos":[0,62]}]},{"pos":[6107,6155],"content":"The number of bytes in the array to use as data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes in the array to use as data.","pos":[0,48]}]},{"pos":[6634,6769],"content":"When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.","pos":[0,135]}]},{"pos":[6781,6928],"content":"This method is not called by application code. This method finalizes any partial computation and returns the correct hash value of the data stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is not called by application code. This method finalizes any partial computation and returns the correct hash value of the data stream.","pos":[0,147],"nodes":[{"content":"This method is not called by application code.","pos":[0,46]},{"content":"This method finalizes any partial computation and returns the correct hash value of the data stream.","pos":[47,147]}]}]},{"pos":[7068,7091],"content":"The computed hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The computed hash code.","pos":[0,23]}]},{"pos":[7576,7667],"content":"Initializes an instance of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SHA256Managed\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes an instance of <xref href=\"System.Security.Cryptography.SHA256Managed\"></xref>."},{"pos":[7680,8037],"content":"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.       The hash size for the <xref:System.Security.Cryptography.SHA256Managed> algorithm is 256 bits.","needQuote":false,"needEscape":true,"nodes":[{"content":"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.       The hash size for the <xref:System.Security.Cryptography.SHA256Managed> algorithm is 256 bits.","pos":[0,355],"nodes":[{"content":"The hash is used as a unique value of fixed size representing a large amount of data.","pos":[0,85]},{"content":"Hashes of two sets of data should match if and only if the corresponding data also matches.","pos":[86,177]},{"content":"Small changes to the data result in large unpredictable changes in the hash.","pos":[178,254]},{"content":"The hash size for the &lt;xref:System.Security.Cryptography.SHA256Managed&gt; algorithm is 256 bits.","pos":[261,355],"source":"       The hash size for the <xref:System.Security.Cryptography.SHA256Managed> algorithm is 256 bits."}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.SHA256Managed\n  id: SHA256Managed\n  children:\n  - System.Security.Cryptography.SHA256Managed.#ctor\n  - System.Security.Cryptography.SHA256Managed.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA256Managed.HashFinal\n  - System.Security.Cryptography.SHA256Managed.Initialize\n  langs:\n  - csharp\n  name: SHA256Managed\n  nameWithType: SHA256Managed\n  fullName: System.Security.Cryptography.SHA256Managed\n  type: Class\n  summary: Computes the <xref href=\"System.Security.Cryptography.SHA256\"></xref> hash for the input data using the managed library.\n  remarks: \"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.  \\n  \\n The hash size for the SHA256Managed algorithm is 256 bits.\"\n  example:\n  - \"The following example calculates the SHA-256 hash for all files in a directory.  \\n  \\n [!code-cpp[Classic SHA256 Example#1](~/add/codesnippet/cpp/t-system.security.crypto_6_1.cpp)]\\n [!code-cs[Classic SHA256 Example#1](~/add/codesnippet/csharp/t-system.security.crypto_6_1.cs)]\\n [!code-vb[Classic SHA256 Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_6_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SHA256Managed : System.Security.Cryptography.SHA256\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  - System.Security.Cryptography.SHA256\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA256.Create\n  - System.Security.Cryptography.SHA256.Create(System.String)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA256Managed.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.SHA256Managed\n  langs:\n  - csharp\n  name: SHA256Managed()\n  nameWithType: SHA256Managed.SHA256Managed()\n  fullName: System.Security.Cryptography.SHA256Managed.SHA256Managed()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.SHA256Managed\"></xref> class using the managed library.\n  remarks: \"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.  \\n  \\n The hash size for the <xref:System.Security.Cryptography.SHA256Managed> algorithm is 256 bits.  \\n  \\n **Important** If you enable the following security setting either in the Local Security Policy or as part of Group Policy you will get an <xref:System.InvalidOperationException> when you attempt to use this constructor:  \\n  \\n **System cryptography: Use FIPS compliant algorithms for encryption, hashing, and signing**\"\n  syntax:\n    content: public SHA256Managed ();\n    parameters: []\n  overload: System.Security.Cryptography.SHA256Managed.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The Federal Information Processing Standards (FIPS) security setting is enabled. This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA256Managed.HashCore(System.Byte[],System.Int32,System.Int32)\n  id: HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA256Managed\n  langs:\n  - csharp\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: SHA256Managed.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.SHA256Managed.HashCore(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, routes data written to the object into the <xref href=\"System.Security.Cryptography.SHA256\"></xref> hash algorithm for computing the hash.\n  remarks: \"This method is not called by application code.  \\n  \\n This abstract method performs the hash computation. Every write to the cryptographic stream object passes the data through this method. For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.\"\n  syntax:\n    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: The input data.\n    - id: ibStart\n      type: System.Int32\n      description: The offset into the byte array from which to begin using data.\n    - id: cbSize\n      type: System.Int32\n      description: The number of bytes in the array to use as data.\n  overload: System.Security.Cryptography.SHA256Managed.HashCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA256Managed.HashFinal\n  id: HashFinal\n  parent: System.Security.Cryptography.SHA256Managed\n  langs:\n  - csharp\n  name: HashFinal()\n  nameWithType: SHA256Managed.HashFinal()\n  fullName: System.Security.Cryptography.SHA256Managed.HashFinal()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.\n  remarks: This method is not called by application code. This method finalizes any partial computation and returns the correct hash value of the data stream.\n  syntax:\n    content: protected override byte[] HashFinal ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The computed hash code.\n  overload: System.Security.Cryptography.SHA256Managed.HashFinal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA256Managed.Initialize\n  id: Initialize\n  parent: System.Security.Cryptography.SHA256Managed\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: SHA256Managed.Initialize()\n  fullName: System.Security.Cryptography.SHA256Managed.Initialize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes an instance of <xref href=\"System.Security.Cryptography.SHA256Managed\"></xref>.\n  remarks: \"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.  \\n  \\n The hash size for the <xref:System.Security.Cryptography.SHA256Managed> algorithm is 256 bits.\"\n  syntax:\n    content: public override void Initialize ();\n    parameters: []\n  overload: System.Security.Cryptography.SHA256Managed.Initialize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.SHA256\n  isExternal: false\n  name: System.Security.Cryptography.SHA256\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Security.Cryptography.SHA256Managed.#ctor\n  parent: System.Security.Cryptography.SHA256Managed\n  isExternal: false\n  name: SHA256Managed()\n  nameWithType: SHA256Managed.SHA256Managed()\n  fullName: System.Security.Cryptography.SHA256Managed.SHA256Managed()\n- uid: System.Security.Cryptography.SHA256Managed.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA256Managed\n  isExternal: false\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: SHA256Managed.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.SHA256Managed.HashCore(Byte[],Int32,Int32)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.SHA256Managed.HashFinal\n  parent: System.Security.Cryptography.SHA256Managed\n  isExternal: false\n  name: HashFinal()\n  nameWithType: SHA256Managed.HashFinal()\n  fullName: System.Security.Cryptography.SHA256Managed.HashFinal()\n- uid: System.Security.Cryptography.SHA256Managed.Initialize\n  parent: System.Security.Cryptography.SHA256Managed\n  isExternal: false\n  name: Initialize()\n  nameWithType: SHA256Managed.Initialize()\n  fullName: System.Security.Cryptography.SHA256Managed.Initialize()\n- uid: System.Security.Cryptography.SHA256Managed.#ctor*\n  parent: System.Security.Cryptography.SHA256Managed\n  isExternal: false\n  name: SHA256Managed\n  nameWithType: SHA256Managed.SHA256Managed\n- uid: System.Security.Cryptography.SHA256Managed.HashCore*\n  parent: System.Security.Cryptography.SHA256Managed\n  isExternal: false\n  name: HashCore\n  nameWithType: SHA256Managed.HashCore\n- uid: System.Security.Cryptography.SHA256Managed.HashFinal*\n  parent: System.Security.Cryptography.SHA256Managed\n  isExternal: false\n  name: HashFinal\n  nameWithType: SHA256Managed.HashFinal\n- uid: System.Security.Cryptography.SHA256Managed.Initialize*\n  parent: System.Security.Cryptography.SHA256Managed\n  isExternal: false\n  name: Initialize\n  nameWithType: SHA256Managed.Initialize\n"}