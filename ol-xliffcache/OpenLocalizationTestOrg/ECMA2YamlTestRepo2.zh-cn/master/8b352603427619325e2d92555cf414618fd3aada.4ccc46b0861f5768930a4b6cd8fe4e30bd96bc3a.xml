{"nodes":[{"pos":[1063,1190],"content":"Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.","pos":[0,127]}]},{"pos":[1203,2803],"content":"This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats. These encoders derive from the <xref:System.Web.Services.Protocols.MimeFormatter> class. By default, a proxy class deriving from HttpSimpleClientProtocol encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML. Custom mime formatters can be specified using the <xref:System.Web.Services.Protocols.HttpMethodAttribute> attribute, however, there is no support for integrating this into a service description and proxy generation.       `Notes to Inheritors:` When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service. The methods simply capture the parameters, and call the base class to do the work of communicating with the site. If the introduced methods are asynchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> and <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> methods. If the introduced methods are synchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method. The overridden constructor typically sets the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to the URI of the XML Web service method.       The Web Services Description Language tool (Wsdl.exe) generates derived classes of HttpSimpleClientProtocol for a given Service Description.","needQuote":false,"needEscape":true,"nodes":[{"content":"This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.","pos":[0,183]},{"content":"These encoders derive from the &lt;xref:System.Web.Services.Protocols.MimeFormatter&gt; class.","pos":[184,272],"source":" These encoders derive from the <xref:System.Web.Services.Protocols.MimeFormatter> class."},{"content":"By default, a proxy class deriving from HttpSimpleClientProtocol encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.","pos":[273,441]},{"content":"Custom mime formatters can be specified using the &lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt; attribute, however, there is no support for integrating this into a service description and proxy generation.","pos":[442,658],"source":" Custom mime formatters can be specified using the <xref:System.Web.Services.Protocols.HttpMethodAttribute> attribute, however, there is no support for integrating this into a service description and proxy generation."},{"content":"<ph id=\"ph1\">`Notes to Inheritors:`</ph> When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.","pos":[665,826],"source":"`Notes to Inheritors:` When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service."},{"content":"The methods simply capture the parameters, and call the base class to do the work of communicating with the site.","pos":[827,940]},{"content":"If the introduced methods are asynchronous, call the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt; and &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt; methods.","pos":[941,1158],"source":" If the introduced methods are asynchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> and <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> methods."},{"content":"If the introduced methods are synchronous, call the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt; method.","pos":[1159,1290],"source":" If the introduced methods are synchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method."},{"content":"The overridden constructor typically sets the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt; property to the URI of the XML Web service method.","pos":[1291,1449],"source":" The overridden constructor typically sets the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to the URI of the XML Web service method."},{"content":"The Web Services Description Language tool (Wsdl.exe) generates derived classes of HttpSimpleClientProtocol for a given Service Description.","pos":[1456,1596]}]},{"pos":[7351,7467],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.HttpSimpleClientProtocol\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.HttpSimpleClientProtocol\"></xref> class."},{"pos":[8394,8462],"content":"Starts an asynchronous invocation of a method of an XML Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Starts an asynchronous invocation of a method of an XML Web service.","pos":[0,68]}]},{"pos":[8475,9256],"content":"The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the BeginInvoke method. It is also used to find custom attributes that may have been added to the method. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the HTTP protocol.       `asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the BeginInvoke method. It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in `callback`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`methodName`</ph> parameter is used to find the types of the parameters and return values of the method that is invoking the BeginInvoke method.","pos":[0,143],"source":"The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the BeginInvoke method."},{"content":"It is also used to find custom attributes that may have been added to the method.","pos":[144,225]},{"content":"&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;, &lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;, and &lt;xref:System.Xml.Serialization.XmlElementAttribute&gt; provide additional information on the derived method that is required for the HTTP protocol.","pos":[226,501],"source":" <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the HTTP protocol."},{"content":"<ph id=\"ph1\">`asyncState`</ph> is passed into <ph id=\"ph2\">`callback`</ph> and is included in the &lt;xref:System.IAsyncResult&gt; that is returned from the BeginInvoke method.","pos":[508,642],"source":"`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the BeginInvoke method."},{"content":"It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in <ph id=\"ph1\">`callback`</ph>.","pos":[643,779],"source":" It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in `callback`."}]},{"pos":[10995,11034],"content":"The name of the XML Web service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the XML Web service method.","pos":[0,39]}]},{"pos":[11101,11163],"content":"The URL to use when creating the <xref:System.Net.WebRequest>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL to use when creating the &lt;xref:System.Net.WebRequest&gt;.","pos":[0,62],"source":"The URL to use when creating the <xref:System.Net.WebRequest>."}]},{"pos":[11232,11440],"content":"An array of objects containing the parameters to pass to the XML Web service method. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of objects containing the parameters to pass to the XML Web service method. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.","pos":[0,208],"nodes":[{"content":"An array of objects containing the parameters to pass to the XML Web service method.","pos":[0,84]},{"content":"The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.","pos":[85,208]}]}]},{"pos":[11512,11686],"content":"The delegate to call when the asynchronous method call is complete. If `callback` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the delegate is not called.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate to call when the asynchronous method call is complete.","pos":[0,67]},{"content":"If <ph id=\"ph1\">`callback`</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the delegate is not called.","pos":[68,174],"source":" If `callback` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the delegate is not called."}]},{"pos":[11753,11801],"content":"The additional information supplied by a client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The additional information supplied by a client.","pos":[0,48]}]},{"pos":[11865,12061],"content":"An <xref:System.IAsyncResult> that can be passed to the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*> method to obtain the return values from the XML Web service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; that can be passed to the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*&gt; method to obtain the return values from the XML Web service method.","pos":[0,196],"source":"An <xref:System.IAsyncResult> that can be passed to the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*> method to obtain the return values from the XML Web service method."}]},{"pos":[12234,12310],"content":"The request reached the server computer, but was not processed successfully.","needQuote":true,"needEscape":true,"nodes":[{"content":"The request reached the server computer, but was not processed successfully.","pos":[0,76]}]},{"pos":[12844,12918],"content":"Completes asynchronous invocation of an XML Web service method using HTTP.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes asynchronous invocation of an XML Web service method using HTTP.","pos":[0,74]}]},{"pos":[14585,14716],"content":"The <xref:System.IAsyncResult> returned from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; returned from the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*&gt; method.","pos":[0,131],"source":"The <xref:System.IAsyncResult> returned from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*> method."}]},{"pos":[14774,14905],"content":"An array of objects containing the return value and any by reference or <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">out</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameters for the XML Web service method.","needQuote":true,"needEscape":true,"source":"An array of objects containing the return value and any by reference or <code>out</code> parameters for the XML Web service method."},{"pos":[15092,15232],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is not the return value from the <ph id=\"ph2\">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*&gt;</ph> method.","needQuote":true,"needEscape":true,"source":"<code>asyncResult</code> is not the return value from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*> method."},{"pos":[15829,15874],"content":"Invokes an XML Web service method using HTTP.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes an XML Web service method using HTTP.","pos":[0,45]}]},{"pos":[15886,16313],"content":"The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the Invoke method. It is also used to find custom attributes which may have been added to the method. <xref:System.Web.Services.Protocols.HttpMethodAttribute> and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the SOAP protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`methodName`</ph> parameter is used to find the types of the parameters and return values of the method that is invoking the Invoke method.","pos":[0,138],"source":"The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the Invoke method."},{"content":"It is also used to find custom attributes which may have been added to the method.","pos":[139,221]},{"content":"&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt; and &lt;xref:System.Xml.Serialization.XmlElementAttribute&gt; provide additional information on the derived method that is required for the SOAP protocol.","pos":[222,427],"source":" <xref:System.Web.Services.Protocols.HttpMethodAttribute> and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the SOAP protocol."}]},{"pos":[17817,17912],"content":"The name of the XML Web service method in the derived class that is invoking the Invoke method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the XML Web service method in the derived class that is invoking the Invoke method.","pos":[0,95]}]},{"pos":[17979,18047],"content":"The URL of the XML Web service method that the client is requesting.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL of the XML Web service method that the client is requesting.","pos":[0,68]}]},{"pos":[18116,18324],"content":"An array of objects containing the parameters to pass to the remote XML Web service. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of objects containing the parameters to pass to the remote XML Web service. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.","pos":[0,208],"nodes":[{"content":"An array of objects containing the parameters to pass to the remote XML Web service.","pos":[0,84]},{"content":"The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.","pos":[85,208]}]}]},{"pos":[18382,18510],"content":"An array of objects containing the return value and any by-reference or <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">out</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameters of the derived class method.","needQuote":true,"needEscape":true,"source":"An array of objects containing the return value and any by-reference or <code>out</code> parameters of the derived class method."},{"pos":[18678,18754],"content":"The request reached the server computer, but was not processed successfully.","needQuote":true,"needEscape":true,"nodes":[{"content":"The request reached the server computer, but was not processed successfully.","pos":[0,76]}]},{"pos":[19505,19549],"content":"Invokes the specified method asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes the specified method asynchronously.","pos":[0,44]}]},{"pos":[19789,19822],"content":"The name of the method to invoke.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method to invoke.","pos":[0,33]}]},{"pos":[19889,19932],"content":"The request URL of the invoked web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The request URL of the invoked web service.","pos":[0,43]}]},{"pos":[20001,20038],"content":"The parameters to pass to the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters to pass to the method.","pos":[0,37]}]},{"pos":[20125,20186],"content":"The delegate called when the method invocation has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate called when the method invocation has completed.","pos":[0,61]}]},{"pos":[21083,21165],"content":"Invokes the specified method asynchronously while maintaining an associated state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes the specified method asynchronously while maintaining an associated state.","pos":[0,82]}]},{"pos":[21423,21456],"content":"The name of the method to invoke.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method to invoke.","pos":[0,33]}]},{"pos":[21523,21566],"content":"The request URL of the invoked web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The request URL of the invoked web service.","pos":[0,43]}]},{"pos":[21635,21672],"content":"The parameters to pass to the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters to pass to the method.","pos":[0,37]}]},{"pos":[21759,21820],"content":"The delegate called when the method invocation has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate called when the method invocation has completed.","pos":[0,61]}]},{"pos":[21886,22008],"content":"An object containing associated state information that is passed to the <ph id=\"ph1\">`callback`</ph> delegate when the method has completed.","needQuote":true,"needEscape":true,"source":"An object containing associated state information that is passed to the `callback` delegate when the method has completed."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  id: HttpSimpleClientProtocol\n  children:\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)\n  langs:\n  - csharp\n  name: HttpSimpleClientProtocol\n  nameWithType: HttpSimpleClientProtocol\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  type: Class\n  summary: Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.\n  remarks: \"This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats. These encoders derive from the <xref:System.Web.Services.Protocols.MimeFormatter> class. By default, a proxy class deriving from HttpSimpleClientProtocol encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML. Custom mime formatters can be specified using the <xref:System.Web.Services.Protocols.HttpMethodAttribute> attribute, however, there is no support for integrating this into a service description and proxy generation.  \\n  \\n `Notes to Inheritors:` When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service. The methods simply capture the parameters, and call the base class to do the work of communicating with the site. If the introduced methods are asynchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> and <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> methods. If the introduced methods are synchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method. The overridden constructor typically sets the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to the URI of the XML Web service method.  \\n  \\n The Web Services Description Language tool (Wsdl.exe) generates derived classes of HttpSimpleClientProtocol for a given Service Description.\"\n  example:\n  - \"The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below. The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract HttpSimpleClientProtocol class.  \\n  \\n [!code-cs[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_3_1.cs)]\\n [!code-cpp[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_3_1.cpp)]\\n [!code-vb[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_3_1.vb)]  \\n  \\n The following code example is the `Math` XML Web service, from which the preceding proxy class was created.  \\n  \\n [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_3_2.vb)]\\n [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_3_2.cpp)]\\n [!code-cs[Classic HttpSimpleClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_3_2.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Web.Services.Protocols.WebClientProtocol\n  - System.Web.Services.Protocols.HttpWebClientProtocol\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  - System.Web.Services.Protocols.WebClientProtocol.Abort\n  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  - System.Web.Services.Protocols.WebClientProtocol.Credentials\n  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  - System.Web.Services.Protocols.WebClientProtocol.Timeout\n  - System.Web.Services.Protocols.WebClientProtocol.Url\n  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  langs:\n  - csharp\n  name: HttpSimpleClientProtocol()\n  nameWithType: HttpSimpleClientProtocol.HttpSimpleClientProtocol()\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.HttpSimpleClientProtocol()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.HttpSimpleClientProtocol\"></xref> class.\n  syntax:\n    content: protected HttpSimpleClientProtocol ();\n    parameters: []\n  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)\n  id: BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  langs:\n  - csharp\n  name: BeginInvoke(String,String,Object[],AsyncCallback,Object)\n  nameWithType: HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Starts an asynchronous invocation of a method of an XML Web service.\n  remarks: \"The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the BeginInvoke method. It is also used to find custom attributes that may have been added to the method. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the HTTP protocol.  \\n  \\n `asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the BeginInvoke method. It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in `callback`.\"\n  example:\n  - \"The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.  \\n  \\n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/csharp/610d2bee-8011-4b46-8264-_1.aspx)]\\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/visualbasic/610d2bee-8011-4b46-8264-_1.aspx)]  \\n  \\n The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below. Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.  \\n  \\n [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/cpp/610d2bee-8011-4b46-8264-_2.cpp)]\\n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/csharp/610d2bee-8011-4b46-8264-_2.cs)]\\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/visualbasic/610d2bee-8011-4b46-8264-_2.vb)]  \\n  \\n The following code example is the `Math` XML Web service, from which the preceding proxy class was created.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: The name of the XML Web service method.\n    - id: requestUrl\n      type: System.String\n      description: The URL to use when creating the <xref:System.Net.WebRequest>.\n    - id: parameters\n      type: System.Object[]\n      description: An array of objects containing the parameters to pass to the XML Web service method. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.\n    - id: callback\n      type: System.AsyncCallback\n      description: The delegate to call when the asynchronous method call is complete. If `callback` is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the delegate is not called.\n    - id: asyncState\n      type: System.Object\n      description: The additional information supplied by a client.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> that can be passed to the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*> method to obtain the return values from the XML Web service method.\n  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: The request reached the server computer, but was not processed successfully.\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)\n  id: EndInvoke(System.IAsyncResult)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  langs:\n  - csharp\n  name: EndInvoke(IAsyncResult)\n  nameWithType: HttpSimpleClientProtocol.EndInvoke(IAsyncResult)\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Completes asynchronous invocation of an XML Web service method using HTTP.\n  remarks: ''\n  example:\n  - \"The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.  \\n  \\n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/csharp/df330565-2b74-43bd-92c4-_1.aspx)]\\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/visualbasic/df330565-2b74-43bd-92c4-_1.aspx)]  \\n  \\n The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below. Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.  \\n  \\n [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/cpp/df330565-2b74-43bd-92c4-_2.cpp)]\\n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/csharp/df330565-2b74-43bd-92c4-_2.cs)]\\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/visualbasic/df330565-2b74-43bd-92c4-_2.vb)]  \\n  \\n The following code example is the `Math` XML Web service, from which the above proxy class was created.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: protected object EndInvoke (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> returned from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*> method.\n    return:\n      type: System.Object\n      description: An array of objects containing the return value and any by reference or <code>out</code> parameters for the XML Web service method.\n  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> is not the return value from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*> method.\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])\n  id: Invoke(System.String,System.String,System.Object[])\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  langs:\n  - csharp\n  name: Invoke(String,String,Object[])\n  nameWithType: HttpSimpleClientProtocol.Invoke(String,String,Object[])\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(String,String,Object[])\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Invokes an XML Web service method using HTTP.\n  remarks: The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the Invoke method. It is also used to find custom attributes which may have been added to the method. <xref:System.Web.Services.Protocols.HttpMethodAttribute> and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the SOAP protocol.\n  example:\n  - \"The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form synchronously invokes the `Add` XML Web service method.  \\n  \\n [!code-cs[HttpSimpleClientProtocol.Invoke Example#2](~/add/codesnippet/csharp/3a69f415-9422-4839-9833-_1.aspx)]\\n [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/add/codesnippet/visualbasic/3a69f415-9422-4839-9833-_1.aspx)]  \\n  \\n The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below. Within the `Add` method of the proxy class, the Invoke method synchronously invokes the `Add` Web Service method.  \\n  \\n [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/add/codesnippet/visualbasic/3a69f415-9422-4839-9833-_2.vb)]\\n [!code-cs[HttpSimpleClientProtocol.Invoke Example#1](~/add/codesnippet/csharp/3a69f415-9422-4839-9833-_2.cs)]\\n [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/add/codesnippet/cpp/3a69f415-9422-4839-9833-_2.cpp)]  \\n  \\n The following code example is the `Math` XML Web service, from which the above proxy class was created.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: protected object Invoke (string methodName, string requestUrl, object[] parameters);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: The name of the XML Web service method in the derived class that is invoking the Invoke method.\n    - id: requestUrl\n      type: System.String\n      description: The URL of the XML Web service method that the client is requesting.\n    - id: parameters\n      type: System.Object[]\n      description: An array of objects containing the parameters to pass to the remote XML Web service. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.\n    return:\n      type: System.Object\n      description: An array of objects containing the return value and any by-reference or <code>out</code> parameters of the derived class method.\n  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: The request reached the server computer, but was not processed successfully.\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)\n  id: InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  langs:\n  - csharp\n  name: InvokeAsync(String,String,Object[],SendOrPostCallback)\n  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Invokes the specified method asynchronously.\n  syntax:\n    content: protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: The name of the method to invoke.\n    - id: requestUrl\n      type: System.String\n      description: The request URL of the invoked web service.\n    - id: parameters\n      type: System.Object[]\n      description: The parameters to pass to the method.\n    - id: callback\n      type: System.Threading.SendOrPostCallback\n      description: The delegate called when the method invocation has completed.\n  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)\n  id: InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  langs:\n  - csharp\n  name: InvokeAsync(String,String,Object[],SendOrPostCallback,Object)\n  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Invokes the specified method asynchronously while maintaining an associated state.\n  syntax:\n    content: protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: The name of the method to invoke.\n    - id: requestUrl\n      type: System.String\n      description: The request URL of the invoked web service.\n    - id: parameters\n      type: System.Object[]\n      description: The parameters to pass to the method.\n    - id: callback\n      type: System.Threading.SendOrPostCallback\n      description: The delegate called when the method invocation has completed.\n    - id: userState\n      type: System.Object\n      description: An object containing associated state information that is passed to the `callback` delegate when the method has completed.\n  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: System.Web.Services.Protocols.HttpWebClientProtocol\n- uid: System.Exception\n  isExternal: true\n  name: System.Exception\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: HttpSimpleClientProtocol()\n  nameWithType: HttpSimpleClientProtocol.HttpSimpleClientProtocol()\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.HttpSimpleClientProtocol()\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: BeginInvoke(String,String,Object[],AsyncCallback,Object)\n  nameWithType: HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: EndInvoke(IAsyncResult)\n  nameWithType: HttpSimpleClientProtocol.EndInvoke(IAsyncResult)\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(IAsyncResult)\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: Invoke(String,String,Object[])\n  nameWithType: HttpSimpleClientProtocol.Invoke(String,String,Object[])\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(String,String,Object[])\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: InvokeAsync(String,String,Object[],SendOrPostCallback)\n  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)\n- uid: System.Threading.SendOrPostCallback\n  parent: System.Threading\n  isExternal: true\n  name: SendOrPostCallback\n  nameWithType: SendOrPostCallback\n  fullName: System.Threading.SendOrPostCallback\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: InvokeAsync(String,String,Object[],SendOrPostCallback,Object)\n  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor*\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: HttpSimpleClientProtocol\n  nameWithType: HttpSimpleClientProtocol.HttpSimpleClientProtocol\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: BeginInvoke\n  nameWithType: HttpSimpleClientProtocol.BeginInvoke\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: EndInvoke\n  nameWithType: HttpSimpleClientProtocol.EndInvoke\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke*\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: Invoke\n  nameWithType: HttpSimpleClientProtocol.Invoke\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync*\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: InvokeAsync\n  nameWithType: HttpSimpleClientProtocol.InvokeAsync\n"}