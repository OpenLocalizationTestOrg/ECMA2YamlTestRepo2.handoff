{"nodes":[{"pos":[459,526],"content":"Specifies the type of key that is associated with a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the type of key that is associated with a security token.","pos":[0,67]}]},{"pos":[539,2745],"content":"Use the SecurityKeyType enumeration to set the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> property.       The BearerKey field is used with the <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> property.      ### BearerKey Requires Wsu:Id or Transport Security with Message Credentials    In federation scenarios, an issued token is generally configured as an endorsing supporting token for message security between a client and the relying parties. However, when a Security Token Service (STS) issues a token with no key (BearerKey), [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] configures it as a <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> supporting token ([!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cannot endorse without a key). This requires the issued token to be referenced in the signature. [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] currently uses the following: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id as a reference mechanism (Wsu:Id).       If an issued token does not have such an attribute, on a client, a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown with the text \"Element to sign must have id\". This happens when a SAML 1.1 token is used as an issued token (the Wsu:Id is not defined in the SAML 1.1 specification).       To work around this situation, either use transport security with message credentials (for example, <xref:System.ServiceModel.Configuration.AuthenticationMode>) or an STS must add the http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (Wsu:Id) to the issued token.       Note that if the Wsu:Id is added to a SAML 1.1 token, the resulting XML does not comply to the SAML 1.1 specification. The alternative is to add a Wsu:Id to the `EncryptedData` which is a result of encrypting the issued token. This procedure complies with the SAML 1.1 specification, because the `EncryptedData` element supports the Wsu:Id attribute.       So to be compliant with the specification, the bearer token must be encrypted by the STS.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the SecurityKeyType enumeration to set the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A&gt; property.","pos":[0,130],"source":"Use the SecurityKeyType enumeration to set the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> property."},{"content":"The BearerKey field is used with the &lt;xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A&gt; property.","pos":[137,264],"source":"       The BearerKey field is used with the <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> property."},{"content":"BearerKey Requires Wsu:Id or Transport Security with Message Credentials    In federation scenarios, an issued token is generally configured as an endorsing supporting token for message security between a client and the relying parties.","pos":[274,510]},{"content":"However, when a Security Token Service (STS) issues a token with no key (BearerKey), <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> configures it as a &lt;xref:System.ServiceModel.Security.SecurityTokenAttachmentMode&gt; supporting token (<ph id=\"ph2\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> cannot endorse without a key).","pos":[511,845],"source":" However, when a Security Token Service (STS) issues a token with no key (BearerKey), [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] configures it as a <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> supporting token ([!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cannot endorse without a key)."},{"content":"This requires the issued token to be referenced in the signature.","pos":[846,911]},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> currently uses the following: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id as a reference mechanism (Wsu:Id).","pos":[912,1121],"source":"[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] currently uses the following: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id as a reference mechanism (Wsu:Id)."},{"content":"If an issued token does not have such an attribute, on a client, a &lt;xref:System.ServiceModel.Security.MessageSecurityException&gt; is thrown with the text \"Element to sign must have id\".","pos":[1128,1311],"source":"       If an issued token does not have such an attribute, on a client, a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown with the text \"Element to sign must have id\"."},{"content":"This happens when a SAML 1.1 token is used as an issued token (the Wsu:Id is not defined in the SAML 1.1 specification).","pos":[1312,1432]},{"content":"To work around this situation, either use transport security with message credentials (for example, &lt;xref:System.ServiceModel.Configuration.AuthenticationMode&gt;) or an STS must add the http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (Wsu:Id) to the issued token.","pos":[1439,1738],"source":"       To work around this situation, either use transport security with message credentials (for example, <xref:System.ServiceModel.Configuration.AuthenticationMode>) or an STS must add the http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (Wsu:Id) to the issued token."},{"content":"Note that if the Wsu:Id is added to a SAML 1.1 token, the resulting XML does not comply to the SAML 1.1 specification.","pos":[1745,1863]},{"content":"The alternative is to add a Wsu:Id to the <ph id=\"ph1\">`EncryptedData`</ph> which is a result of encrypting the issued token.","pos":[1864,1971],"source":" The alternative is to add a Wsu:Id to the `EncryptedData` which is a result of encrypting the issued token."},{"content":"This procedure complies with the SAML 1.1 specification, because the <ph id=\"ph1\">`EncryptedData`</ph> element supports the Wsu:Id attribute.","pos":[1972,2095],"source":" This procedure complies with the SAML 1.1 specification, because the `EncryptedData` element supports the Wsu:Id attribute."},{"content":"So to be compliant with the specification, the bearer token must be encrypted by the STS.","pos":[2102,2191]}]},{"pos":[3254,3298],"content":"Specifies that the key is an asymmetric key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the key is an asymmetric key.","pos":[0,44]}]},{"pos":[3423,3435],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3858,3935],"content":"Specifies that the security token does not contain a proof-of-possession key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the security token does not contain a proof-of-possession key.","pos":[0,77]}]},{"pos":[4056,4068],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4506,4548],"content":"Specifies that the key is a symmetric key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the key is a symmetric key.","pos":[0,42]}]},{"pos":[4672,4684],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SecurityKeyType\n  id: SecurityKeyType\n  children:\n  - System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey\n  - System.IdentityModel.Tokens.SecurityKeyType.BearerKey\n  - System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey\n  langs:\n  - csharp\n  name: SecurityKeyType\n  nameWithType: SecurityKeyType\n  fullName: System.IdentityModel.Tokens.SecurityKeyType\n  type: Enum\n  summary: Specifies the type of key that is associated with a security token.\n  remarks: \"Use the SecurityKeyType enumeration to set the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> property.  \\n  \\n The BearerKey field is used with the <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> property.  \\n  \\n### BearerKey Requires Wsu:Id or Transport Security with Message Credentials  \\n In federation scenarios, an issued token is generally configured as an endorsing supporting token for message security between a client and the relying parties. However, when a Security Token Service (STS) issues a token with no key (BearerKey), [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] configures it as a <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> supporting token ([!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cannot endorse without a key). This requires the issued token to be referenced in the signature. [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] currently uses the following: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id as a reference mechanism (Wsu:Id).  \\n  \\n If an issued token does not have such an attribute, on a client, a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown with the text \\\"Element to sign must have id\\\". This happens when a SAML 1.1 token is used as an issued token (the Wsu:Id is not defined in the SAML 1.1 specification).  \\n  \\n To work around this situation, either use transport security with message credentials (for example, <xref:System.ServiceModel.Configuration.AuthenticationMode>) or an STS must add the http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (Wsu:Id) to the issued token.  \\n  \\n Note that if the Wsu:Id is added to a SAML 1.1 token, the resulting XML does not comply to the SAML 1.1 specification. The alternative is to add a Wsu:Id to the `EncryptedData` which is a result of encrypting the issued token. This procedure complies with the SAML 1.1 specification, because the `EncryptedData` element supports the Wsu:Id attribute.  \\n  \\n So to be compliant with the specification, the bearer token must be encrypted by the STS.\"\n  syntax:\n    content: public enum SecurityKeyType\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey\n  id: AsymmetricKey\n  parent: System.IdentityModel.Tokens.SecurityKeyType\n  langs:\n  - csharp\n  name: AsymmetricKey\n  nameWithType: SecurityKeyType.AsymmetricKey\n  fullName: System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Specifies that the key is an asymmetric key.\n  syntax:\n    content: AsymmetricKey\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyType.BearerKey\n  id: BearerKey\n  parent: System.IdentityModel.Tokens.SecurityKeyType\n  langs:\n  - csharp\n  name: BearerKey\n  nameWithType: SecurityKeyType.BearerKey\n  fullName: System.IdentityModel.Tokens.SecurityKeyType.BearerKey\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Specifies that the security token does not contain a proof-of-possession key.\n  syntax:\n    content: BearerKey\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey\n  id: SymmetricKey\n  parent: System.IdentityModel.Tokens.SecurityKeyType\n  langs:\n  - csharp\n  name: SymmetricKey\n  nameWithType: SecurityKeyType.SymmetricKey\n  fullName: System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Specifies that the key is a symmetric key.\n  syntax:\n    content: SymmetricKey\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey\n  parent: System.IdentityModel.Tokens.SecurityKeyType\n  isExternal: false\n  name: AsymmetricKey\n  nameWithType: SecurityKeyType.AsymmetricKey\n  fullName: System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey\n- uid: System.IdentityModel.Tokens.SecurityKeyType\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyType\n  nameWithType: SecurityKeyType\n  fullName: System.IdentityModel.Tokens.SecurityKeyType\n- uid: System.IdentityModel.Tokens.SecurityKeyType.BearerKey\n  parent: System.IdentityModel.Tokens.SecurityKeyType\n  isExternal: false\n  name: BearerKey\n  nameWithType: SecurityKeyType.BearerKey\n  fullName: System.IdentityModel.Tokens.SecurityKeyType.BearerKey\n- uid: System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey\n  parent: System.IdentityModel.Tokens.SecurityKeyType\n  isExternal: false\n  name: SymmetricKey\n  nameWithType: SecurityKeyType.SymmetricKey\n  fullName: System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey\n"}