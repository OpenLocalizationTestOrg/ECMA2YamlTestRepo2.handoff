{"nodes":[{"pos":[631,733],"content":"Represents a common dialog box that allows a user to specify a filename for one or more files to open.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a common dialog box that allows a user to specify a filename for one or more files to open.","pos":[0,102]}]},{"pos":[746,1538],"content":"The following figure shows an OpenFileDialog for [!INCLUDE[TLA#tla_winvista](~/add/includes/tlasharptla-winvista-md.md)].       ![Open dialog box](~/add/media/dialogboxesoverviewfigure2.png \"Open dialog box\")       Starting in [!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. Use the <xref:Microsoft.Win32.FileDialog.CustomPlaces%2A> property to set this list of links.      <a name=\"xamlTextUsage_OpenFileDialog\"></a>    ## XAML Text Usage    You cannot declare this managed class in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].","needQuote":false,"needEscape":true,"nodes":[{"content":"The following figure shows an OpenFileDialog for <ph id=\"ph1\">[!INCLUDE[TLA#tla_winvista](~/add/includes/tlasharptla-winvista-md.md)]</ph>.","pos":[0,121],"source":"The following figure shows an OpenFileDialog for [!INCLUDE[TLA#tla_winvista](~/add/includes/tlasharptla-winvista-md.md)]."},{"content":"<bpt id=\"p1\">![</bpt>Open dialog box<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/dialogboxesoverviewfigure2.png \"</bpt>Open dialog box<ept id=\"p2\">\")</ept>       Starting in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)]</ph>, open and save file dialog boxes have a <bpt id=\"p3\">**</bpt>Favorite Links<ept id=\"p3\">**</ept> panel on the left side of the dialog box that allows the user to quickly navigate to a different location.","pos":[128,466],"source":"![Open dialog box](~/add/media/dialogboxesoverviewfigure2.png \"Open dialog box\")       Starting in [!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location."},{"content":"These links are called custom places.","pos":[467,504]},{"content":"Use the &lt;xref:Microsoft.Win32.FileDialog.CustomPlaces%2A&gt; property to set this list of links.","pos":[505,598],"source":" Use the <xref:Microsoft.Win32.FileDialog.CustomPlaces%2A> property to set this list of links."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    You cannot declare this managed class in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[604,780],"source":"<a name=\"xamlTextUsage_OpenFileDialog\"></a>    ## XAML Text Usage    You cannot declare this managed class in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."}]},{"pos":[3820,3912],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> class."},{"pos":[5049,5181],"content":"Gets or sets an option indicating whether <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> allows users to select multiple files.","needQuote":true,"needEscape":true,"source":"Gets or sets an option indicating whether <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> allows users to select multiple files."},{"pos":[5301,5551],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if multiple selections are allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if multiple selections are allowed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if multiple selections are allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,250],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[5981,6106],"content":"Opens a read-only stream for the file that is selected by the user using <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Opens a read-only stream for the file that is selected by the user using <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>."},{"pos":[6119,6566],"content":"The file is opened with read-only permission (<xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, and <xref:System.IO.FileShare>), whether or not the Read Only checkbox is checked in the dialog. Because the file is opened without the ability to overwrite or write to the file, an application can safely load a file while executing within partial trust restrictions.       If more than one file is selected, the first selected file is opened.","needQuote":false,"needEscape":true,"nodes":[{"content":"The file is opened with read-only permission (<xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, and <xref:System.IO.FileShare>), whether or not the Read Only checkbox is checked in the dialog. Because the file is opened without the ability to overwrite or write to the file, an application can safely load a file while executing within partial trust restrictions.       If more than one file is selected, the first selected file is opened.","pos":[0,445],"nodes":[{"content":"The file is opened with read-only permission (&lt;xref:System.IO.FileMode&gt;, &lt;xref:System.IO.FileAccess&gt;, and &lt;xref:System.IO.FileShare&gt;), whether or not the Read Only checkbox is checked in the dialog.","pos":[0,198],"source":"The file is opened with read-only permission (<xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, and <xref:System.IO.FileShare>), whether or not the Read Only checkbox is checked in the dialog."},{"content":"Because the file is opened without the ability to overwrite or write to the file, an application can safely load a file while executing within partial trust restrictions.","pos":[199,369]},{"content":"If more than one file is selected, the first selected file is opened.","pos":[376,445]}]}]},{"pos":[6707,6769],"content":"A new <xref:System.IO.Stream> that contains the selected file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new &lt;xref:System.IO.Stream&gt; that contains the selected file.","pos":[0,62],"source":"A new <xref:System.IO.Stream> that contains the selected file."}]},{"pos":[6947,6984],"content":"No files were selected in the dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"No files were selected in the dialog.","pos":[0,37]}]},{"pos":[7346,7491],"content":"Creates an array that contains one read-only stream for each file selected by the user using <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates an array that contains one read-only stream for each file selected by the user using <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>."},{"pos":[7503,7885],"content":"Each file is opened with read-only permission (<xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, and <xref:System.IO.FileShare>), whether or not the Read Only checkbox is checked in the dialog. Because each file is opened without the ability to overwrite or write to the file, an application can safely load one or more files while executing within partial trust restrictions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Each file is opened with read-only permission (<xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, and <xref:System.IO.FileShare>), whether or not the Read Only checkbox is checked in the dialog. Because each file is opened without the ability to overwrite or write to the file, an application can safely load one or more files while executing within partial trust restrictions.","pos":[0,382],"nodes":[{"content":"Each file is opened with read-only permission (&lt;xref:System.IO.FileMode&gt;, &lt;xref:System.IO.FileAccess&gt;, and &lt;xref:System.IO.FileShare&gt;), whether or not the Read Only checkbox is checked in the dialog.","pos":[0,199],"source":"Each file is opened with read-only permission (<xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, and <xref:System.IO.FileShare>), whether or not the Read Only checkbox is checked in the dialog."},{"content":"Because each file is opened without the ability to overwrite or write to the file, an application can safely load one or more files while executing within partial trust restrictions.","pos":[200,382]}]}]},{"pos":[8030,8119],"content":"An array of multiple new <xref:System.IO.Stream> objects that contain the selected files.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of multiple new &lt;xref:System.IO.Stream&gt; objects that contain the selected files.","pos":[0,89],"source":"An array of multiple new <xref:System.IO.Stream> objects that contain the selected files."}]},{"pos":[8298,8335],"content":"No files were selected in the dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"No files were selected in the dialog.","pos":[0,37]}]},{"pos":[8723,8864],"content":"Gets or sets a value indicating whether the read-only check box displayed by <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is selected.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the read-only check box displayed by <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> is selected."},{"pos":[8988,9231],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the checkbox is selected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the checkbox is selected; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,164],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the checkbox is selected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[165,243],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[9650,9748],"content":"Resets all <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> properties to their default values.","needQuote":true,"needEscape":true,"source":"Resets all <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> properties to their default values."},{"pos":[10261,10384],"content":"Gets or sets a value indicating whether <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains a read-only check box.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> contains a read-only check box."},{"pos":[10505,10749],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the checkbox is displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the checkbox is displayed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,165],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the checkbox is displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[166,244],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Win32.OpenFileDialog\n  id: OpenFileDialog\n  children:\n  - Microsoft.Win32.OpenFileDialog.#ctor\n  - Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog\n  - Microsoft.Win32.OpenFileDialog.Multiselect\n  - Microsoft.Win32.OpenFileDialog.OpenFile\n  - Microsoft.Win32.OpenFileDialog.OpenFiles\n  - Microsoft.Win32.OpenFileDialog.ReadOnlyChecked\n  - Microsoft.Win32.OpenFileDialog.Reset\n  - Microsoft.Win32.OpenFileDialog.ShowReadOnly\n  langs:\n  - csharp\n  name: OpenFileDialog\n  nameWithType: OpenFileDialog\n  fullName: Microsoft.Win32.OpenFileDialog\n  type: Class\n  summary: Represents a common dialog box that allows a user to specify a filename for one or more files to open.\n  remarks: \"The following figure shows an OpenFileDialog for [!INCLUDE[TLA#tla_winvista](~/add/includes/tlasharptla-winvista-md.md)].  \\n  \\n ![Open dialog box](~/add/media/dialogboxesoverviewfigure2.png \\\"Open dialog box\\\")  \\n  \\n Starting in [!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. Use the <xref:Microsoft.Win32.FileDialog.CustomPlaces%2A> property to set this list of links.  \\n  \\n<a name=\\\"xamlTextUsage_OpenFileDialog\\\"></a>   \\n## XAML Text Usage  \\n You cannot declare this managed class in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].\"\n  example:\n  - \"The following example shows how to create an OpenFileDialog that contains a default file name and extension type.  \\n  \\n [!code-cs[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/csharp/DialogBoxesOverviewSnippets.CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]\\n [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/visualbasic/dialogboxesoverviewsnippets/window1.xaml.vb#openfiledialogboxcodebehind)]\"\n  syntax:\n    content: 'public sealed class OpenFileDialog : Microsoft.Win32.FileDialog'\n  inheritance:\n  - System.Object\n  - Microsoft.Win32.CommonDialog\n  - Microsoft.Win32.FileDialog\n  implements: []\n  inheritedMembers:\n  - Microsoft.Win32.CommonDialog.ShowDialog\n  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)\n  - Microsoft.Win32.CommonDialog.Tag\n  - Microsoft.Win32.FileDialog.AddExtension\n  - Microsoft.Win32.FileDialog.CheckFileExists\n  - Microsoft.Win32.FileDialog.CheckPathExists\n  - Microsoft.Win32.FileDialog.CustomPlaces\n  - Microsoft.Win32.FileDialog.DefaultExt\n  - Microsoft.Win32.FileDialog.DereferenceLinks\n  - Microsoft.Win32.FileDialog.FileName\n  - Microsoft.Win32.FileDialog.FileNames\n  - Microsoft.Win32.FileDialog.FileOk\n  - Microsoft.Win32.FileDialog.Filter\n  - Microsoft.Win32.FileDialog.FilterIndex\n  - Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - Microsoft.Win32.FileDialog.InitialDirectory\n  - Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  - Microsoft.Win32.FileDialog.Options\n  - Microsoft.Win32.FileDialog.RestoreDirectory\n  - Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)\n  - Microsoft.Win32.FileDialog.SafeFileName\n  - Microsoft.Win32.FileDialog.SafeFileNames\n  - Microsoft.Win32.FileDialog.Title\n  - Microsoft.Win32.FileDialog.ToString\n  - Microsoft.Win32.FileDialog.ValidateNames\n  platform:\n  - net462\n- uid: Microsoft.Win32.OpenFileDialog.#ctor\n  id: '#ctor'\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: OpenFileDialog()\n  nameWithType: OpenFileDialog.OpenFileDialog()\n  fullName: Microsoft.Win32.OpenFileDialog.OpenFileDialog()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Initializes a new instance of the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> class.\n  syntax:\n    content: public OpenFileDialog ();\n    parameters: []\n  overload: Microsoft.Win32.OpenFileDialog.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog\n  id: CheckPermissionsToShowDialog\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: CheckPermissionsToShowDialog()\n  nameWithType: OpenFileDialog.CheckPermissionsToShowDialog()\n  fullName: Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  syntax:\n    content: protected override void CheckPermissionsToShowDialog ();\n    parameters: []\n  overload: Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.OpenFileDialog.Multiselect\n  id: Multiselect\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: Multiselect\n  nameWithType: OpenFileDialog.Multiselect\n  fullName: Microsoft.Win32.OpenFileDialog.Multiselect\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets an option indicating whether <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> allows users to select multiple files.\n  syntax:\n    content: public bool Multiselect { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if multiple selections are allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Win32.OpenFileDialog.Multiselect*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.OpenFileDialog.OpenFile\n  id: OpenFile\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: OpenFile()\n  nameWithType: OpenFileDialog.OpenFile()\n  fullName: Microsoft.Win32.OpenFileDialog.OpenFile()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Opens a read-only stream for the file that is selected by the user using <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>.\n  remarks: \"The file is opened with read-only permission (<xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, and <xref:System.IO.FileShare>), whether or not the Read Only checkbox is checked in the dialog. Because the file is opened without the ability to overwrite or write to the file, an application can safely load a file while executing within partial trust restrictions.  \\n  \\n If more than one file is selected, the first selected file is opened.\"\n  syntax:\n    content: public System.IO.Stream OpenFile ();\n    parameters: []\n    return:\n      type: System.IO.Stream\n      description: A new <xref:System.IO.Stream> that contains the selected file.\n  overload: Microsoft.Win32.OpenFileDialog.OpenFile*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No files were selected in the dialog.\n  platform:\n  - net462\n- uid: Microsoft.Win32.OpenFileDialog.OpenFiles\n  id: OpenFiles\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: OpenFiles()\n  nameWithType: OpenFileDialog.OpenFiles()\n  fullName: Microsoft.Win32.OpenFileDialog.OpenFiles()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Creates an array that contains one read-only stream for each file selected by the user using <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>.\n  remarks: Each file is opened with read-only permission (<xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, and <xref:System.IO.FileShare>), whether or not the Read Only checkbox is checked in the dialog. Because each file is opened without the ability to overwrite or write to the file, an application can safely load one or more files while executing within partial trust restrictions.\n  syntax:\n    content: public System.IO.Stream[] OpenFiles ();\n    parameters: []\n    return:\n      type: System.IO.Stream[]\n      description: An array of multiple new <xref:System.IO.Stream> objects that contain the selected files.\n  overload: Microsoft.Win32.OpenFileDialog.OpenFiles*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No files were selected in the dialog.\n  platform:\n  - net462\n- uid: Microsoft.Win32.OpenFileDialog.ReadOnlyChecked\n  id: ReadOnlyChecked\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: ReadOnlyChecked\n  nameWithType: OpenFileDialog.ReadOnlyChecked\n  fullName: Microsoft.Win32.OpenFileDialog.ReadOnlyChecked\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether the read-only check box displayed by <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> is selected.\n  syntax:\n    content: public bool ReadOnlyChecked { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the checkbox is selected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Win32.OpenFileDialog.ReadOnlyChecked*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.OpenFileDialog.Reset\n  id: Reset\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: OpenFileDialog.Reset()\n  fullName: Microsoft.Win32.OpenFileDialog.Reset()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Resets all <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> properties to their default values.\n  syntax:\n    content: public override void Reset ();\n    parameters: []\n  overload: Microsoft.Win32.OpenFileDialog.Reset*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.OpenFileDialog.ShowReadOnly\n  id: ShowReadOnly\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: ShowReadOnly\n  nameWithType: OpenFileDialog.ShowReadOnly\n  fullName: Microsoft.Win32.OpenFileDialog.ShowReadOnly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> contains a read-only check box.\n  syntax:\n    content: public bool ShowReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the checkbox is displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Win32.OpenFileDialog.ShowReadOnly*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Microsoft.Win32.FileDialog\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: Microsoft.Win32.OpenFileDialog.#ctor\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFileDialog()\n  nameWithType: OpenFileDialog.OpenFileDialog()\n  fullName: Microsoft.Win32.OpenFileDialog.OpenFileDialog()\n- uid: Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: CheckPermissionsToShowDialog()\n  nameWithType: OpenFileDialog.CheckPermissionsToShowDialog()\n  fullName: Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog()\n- uid: Microsoft.Win32.OpenFileDialog.Multiselect\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: Multiselect\n  nameWithType: OpenFileDialog.Multiselect\n  fullName: Microsoft.Win32.OpenFileDialog.Multiselect\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Win32.OpenFileDialog.OpenFile\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFile()\n  nameWithType: OpenFileDialog.OpenFile()\n  fullName: Microsoft.Win32.OpenFileDialog.OpenFile()\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: Microsoft.Win32.OpenFileDialog.OpenFiles\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFiles()\n  nameWithType: OpenFileDialog.OpenFiles()\n  fullName: Microsoft.Win32.OpenFileDialog.OpenFiles()\n- uid: System.IO.Stream[]\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream[]\n  spec.csharp:\n  - uid: System.IO.Stream\n    name: Stream\n    nameWithType: Stream\n    fullName: Stream[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Win32.OpenFileDialog.ReadOnlyChecked\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: ReadOnlyChecked\n  nameWithType: OpenFileDialog.ReadOnlyChecked\n  fullName: Microsoft.Win32.OpenFileDialog.ReadOnlyChecked\n- uid: Microsoft.Win32.OpenFileDialog.Reset\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: Reset()\n  nameWithType: OpenFileDialog.Reset()\n  fullName: Microsoft.Win32.OpenFileDialog.Reset()\n- uid: Microsoft.Win32.OpenFileDialog.ShowReadOnly\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: ShowReadOnly\n  nameWithType: OpenFileDialog.ShowReadOnly\n  fullName: Microsoft.Win32.OpenFileDialog.ShowReadOnly\n- uid: Microsoft.Win32.OpenFileDialog.#ctor*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFileDialog\n  nameWithType: OpenFileDialog.OpenFileDialog\n- uid: Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: CheckPermissionsToShowDialog\n  nameWithType: OpenFileDialog.CheckPermissionsToShowDialog\n- uid: Microsoft.Win32.OpenFileDialog.Multiselect*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: Multiselect\n  nameWithType: OpenFileDialog.Multiselect\n- uid: Microsoft.Win32.OpenFileDialog.OpenFile*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFile\n  nameWithType: OpenFileDialog.OpenFile\n- uid: Microsoft.Win32.OpenFileDialog.OpenFiles*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFiles\n  nameWithType: OpenFileDialog.OpenFiles\n- uid: Microsoft.Win32.OpenFileDialog.ReadOnlyChecked*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: ReadOnlyChecked\n  nameWithType: OpenFileDialog.ReadOnlyChecked\n- uid: Microsoft.Win32.OpenFileDialog.Reset*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: Reset\n  nameWithType: OpenFileDialog.Reset\n- uid: Microsoft.Win32.OpenFileDialog.ShowReadOnly*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: ShowReadOnly\n  nameWithType: OpenFileDialog.ShowReadOnly\n"}